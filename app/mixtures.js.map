{"version":3,"file":"mixtures.js","mappings":"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M,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAC9I,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC7I,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE3Iz6E,KAAK06E,WAAa,CACd,GACA,kEACA,2EACA,kNACA,ofACA,8dACA,8nBACA,uCACA,mMACA,8LACA,iJACA,mEACA,uCACA,8BACA,4BACA,0CACA,iWACA,0GACA,wSACA,2fACA,8FACA,kWACA,qgBACA,0DACA,0gBACA,4eACA,uDACA,kEACA,gEACA,+DACA,gEACA,4RACA,6qBACA,0FACA,yaACA,mZACA,6QACA,oEACA,8DACA,8UACA,mEACA,kEACA,qKACA,iFACA,wCACA,4FACA,uEACA,uWACA,uRACA,ieACA,2QACA,+aACA,sDACA,mQACA,mEACA,oHACA,wGACA,wEACA,qEACA,oDACA,gCACA,kDACA,sDACA,kCACA,+BACA,ybACA,kTACA,0SACA,uRACA,qSACA,8KACA,gbACA,uKACA,0DACA,yLACA,iFACA,8BACA,gWACA,uKACA,wPACA,2SACA,4SACA,wJACA,2bACA,mMACA,4KACA,iEACA,8GACA,4FACA,yEACA,gEACA,8SACA,iCACA,0SACA,uSACA,GACA,uDACA,oSACA,4PACA,0aACA,0GACA,0DACA,0yBACA,2DACA,wdACA,waACA,wHACA,yCACA,8BACA,idACA,qCACA,6NACA,qFACA,0QACA,gZACA,wCACA,6KACA,qGACA,8BACA,uJACA,8FACA,sOACA,sHACA,+LACA,gVACA,+fACA,2RACA,sHACA,+HACA,8IACA,yTACA,mJACA,mTACA,iIACA,2jBACA,gGACA,yGACA,wHACA,6HACA,8FACA,uGACA,qHACA,0HACA,2SACA,sSACA,mYACA,6YACA,2ZACA,skBACA,gaACA,gHACA,6hBACA,+RACA,ySACA,uTACA,4TACA,6GACA,qRACA,sdACA,qdACA,8dACA,4eACA,wpBACA,ifACA,8oBACA,mtBACA,odACA,iUACA,0UACA,wVACA,6VACA,0DACA,mEACA,iFACA,sFACA,+cACA,sYACA,qRACA,8RACA,4SACA,udACA,iTACA,sFACA,6YACA,wMACA,iNACA,+NACA,oOACA,8GACA,2SACA,kEACA,uCACA,gGACA,8HACA,8BACA,wGACA,uGACA,sGACA,2YACA,4GACA,kWACA,yHACA,0FACA,yaACA,4CACA,iEACA,oEACA,qEACA,mEACA,mYACA,kEACA,iFACA,uDACA,4FACA,uEACA,0FACA,uWACA,qDACA,uRACA,yFACA,sDACA,wEACA,ydACA,wGACA,8RACA,8TACA,0HACA,gIACA,0TACA,ohBACA,gNACA,kEACA,uSACA,sRACA,meACA,0EACA,mXACA,+eACA,iYACA,4KACA,gcACA,8BACA,oLACA,8DACA,kKACA,iEACA,okBACA,wPACA,kDACA,6RACA,uWACA,wQACA,kDACA,yMACA,2UACA,+FACA,uRACA,+gBACA,sFACA,kQACA,6RACA,6OACA,mjBACA,6cACA,iEACA,2EACA,4FACA,iCACA,0CACA,8BACA,0EACA,8hBACA,iRACA,qcACA,gIACA,6FACA,6FAEJ16E,KAAK26E,UAAY,CACb,GAAI,CAAC,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KACvG,CAAC,IAAK,IAAK,IAAK,OAAQ,KAAM,KAAM,IAAK,IAAK,MAAO,MAAO,IAAK,KAAM,CAAC,IAAK,MAAO,IAAK,IAAK,KAAM,OAAQ,KAAM,OAAQ,KAAM,OAAQ,KAAM,KAAM,IAAK,MAAO,IAAK,OACrK,CAAC,IAAK,MAAO,MAAO,MAAO,IAAK,KAAM,KAAM,MAAO,IAAK,MAAO,IAAK,MAAO,IAAK,MAAO,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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAEtI76E,KAAK86E,QAAU,CACX,IAAU,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAC5I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAC7I,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IACvI,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAU,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvI,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAC5I,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAC7I,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACxI,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAErE96E,KAAK+6E,OAAS,CACV,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAChJ,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,KAAM,GAAI,KAAM,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACjJ,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAChJ,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAChJ,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IACjJ,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAC9I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAClJ,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,KAAM,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,GAAI,KAAM,IAAK,KAAM,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAChJ,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC/I,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEtJ/6E,KAAKg7E,UAAY,GACjBh7E,KAAKi7E,YAAc,KACnBj7E,KAAKk7E,aAAe,KACpB,IAAK,IAAIprE,EAAI9P,KAAK06E,WAAW97E,OAAS,EAAGkR,GAAK,EAAGA,IAC7C9P,KAAKg7E,UAAUlrE,GAAK,IAC5B,CACA,UAAAqrE,CAAWC,EAAKC,GACZ,MAAM3kE,EAAK1W,KAAK+6E,OAAOn8E,OACvB,IAAK,IAAIkR,EAAI,EAAGA,EAAI4G,EAAI5G,IACpB,GAAI9P,KAAK66E,QAAQ/qE,IAAMsrE,GAAOp7E,KAAK86E,QAAQhrE,IAAMurE,EAC7C,OAAQr7E,KAAK+6E,OAAOjrE,GAC5B,OAAO,CACX,CACA,kBAAOwrE,CAAYlL,EAAKtxE,GAAQ,OAAOkB,KAAK2R,KAAK2pE,YAAYlL,EAAKtxE,EAAO,CACzE,WAAAw8E,CAAYlL,EAAKtxE,GACb,IAAIy8E,EAAOxB,GAASpoE,KAChBoN,EAAQjgB,EAAOy8E,EAAKvB,aACpBh3D,EAAK,EACT,IAAK,IAAIlT,EAAI,EAAGA,EAAIsgE,EAAIxxE,OAAQkR,IAAK,CACjC,IAAIk6D,EAAKoG,EAAIt+D,OAAOhC,GAChB/F,EAAI/J,KAAKotC,SAAS48B,GAClBjgE,EAAI,EACJiZ,GAAMu4D,EAAKlB,cAGfr3D,GAAMu4D,EAAKd,YAAY1wE,GACnB+F,EAAIsgE,EAAIxxE,OAAS,IACjBokB,GAAMu4D,EAAKJ,WAAWnR,EAAIoG,EAAIt+D,OAAOhC,EAAI,KACjD,CACA,MAAO,CAACkT,EAAKjE,EAAOw8D,EAAKpB,OAASp7D,EAAQw8D,EAAKhB,cAAegB,EAAKnB,QAAUr7D,EACjF,CACA,oBAAOy8D,CAAcpL,EAAKtxE,GAAQ,OAAOkB,KAAK2R,KAAK6pE,cAAcpL,EAAKtxE,EAAO,CAC7E,aAAA08E,CAAcpL,EAAKtxE,GACf,IAAIy8E,EAAOxB,GAASpoE,KAChBoN,EAAQjgB,EAAOy8E,EAAKvB,aACpByB,EAAO,CAAC,GACRz4D,EAAK,EACT,IAAK,IAAIlT,EAAI,EAAGA,EAAIsgE,EAAIxxE,OAAQkR,IAAK,CACjC,IAAIk6D,EAAKoG,EAAIt+D,OAAOhC,GAChB/F,EAAI/J,KAAKotC,SAAS48B,GAClBjgE,EAAI,GACJiZ,GAAMu4D,EAAKlB,aACXoB,EAAKj/E,KAAKwmB,EAAKjE,KAGnBiE,GAAMu4D,EAAKd,YAAY1wE,GACnB+F,EAAIsgE,EAAIxxE,OAAS,IACjBokB,GAAMu4D,EAAKJ,WAAWnR,EAAIoG,EAAIt+D,OAAOhC,EAAI,KAC7C2rE,EAAKj/E,KAAKwmB,EAAKjE,GACnB,CACA,OAAO08D,CACX,CACA,QAAAruC,CAAS48B,GACL,OAAOhqE,KAAKw6E,QAAQhgE,QAAQwvD,EAChC,CACA,WAAA0R,CAAY7lE,GACR,OAAO7V,KAAK06E,WAAW7kE,EAC3B,CACA,YAAA8lE,CAAa9lE,GACT,IAAI1I,EAAOnN,KAAKg7E,UAAUnlE,GAC1B,OAAY,MAAR1I,IAEJA,EAAO,IAAI6X,OAAOhlB,KAAK06E,WAAW7kE,IAClC7V,KAAKg7E,UAAUnlE,GAAO1I,GAFXA,CAIf,CACA,cAAAyuE,GAGI,OAFK57E,KAAKi7E,cACNj7E,KAAKi7E,YAAc,IAAIj2D,OAAOhlB,KAAKs6E,eAChCt6E,KAAKi7E,WAChB,CACA,WAAAY,CAAYhmE,GAAO,OAAO7V,KAAK26E,UAAU9kE,GAAK5G,MAAM,EAAI,CACxD,WAAA6sE,CAAYjmE,GAAO,OAAO7V,KAAK46E,UAAU/kE,GAAK5G,MAAM,EAAI,CACxD,cAAA8sE,CAAez2D,GACX,GAAW,MAAPA,IAAetlB,KAAKk7E,aAExB,GAAW,MAAP51D,EAAa,CACb,IAAI02D,EAAS,IAAIC,gBAAgB,IAAK,KACtCj8E,KAAKk7E,aAAec,EAAOE,WAAW,KAC1C,MAEIl8E,KAAKk7E,aAAe51D,CAC5B,CACA,wBAAO62D,CAAkB/L,EAAKgM,EAAQt9E,EAAMu9E,EAAM,CAAC,GAC/C,OAAOr8E,KAAK2R,KAAKwqE,kBAAkB/L,EAAKgM,EAAQt9E,EAAMu9E,EAC1D,CACA,iBAAAF,CAAkB/L,EAAKgM,EAAQt9E,EAAMu9E,EAAM,CAAC,GACxC,IAAKr8E,KAAKk7E,aACN,KAAM,uEACVl7E,KAAKk7E,aAAaoB,OAClB,IAAI9zB,EAAM,GACN6zB,EAAIE,OACJ/zB,GAAO,SACP6zB,EAAIG,SACJh0B,GAAO,WACXxoD,KAAKk7E,aAAaK,KAAO/yB,EAAM1pD,EAAO,MAAQs9E,EAC9C,IAAIK,EAAUz8E,KAAKk7E,aAAaI,YAAYlL,GAC5CpwE,KAAKk7E,aAAawB,UAClB,MAAMC,EAAQ38E,KAAKu6E,aAAev6E,KAAKm6E,OAASn6E,KAAKg6E,aACrD,MAAO,CAACyC,EAAQ/8E,MAAOZ,EAAO69E,EAAO79E,IAASkB,KAAKo6E,QAAUp6E,KAAKm6E,QAAUwC,EAChF,EC/oBG,IAAIC,GDipBX7C,GAASpoE,KAAO,IAAIooE,GChpBpB,SAAW6C,GACPA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAqB,UAAI,GAAK,YACxCA,EAAUA,EAAqB,UAAI,GAAK,YACxCA,EAAUA,EAAwB,aAAI,GAAK,cAC9C,CAVD,CAUGA,KAAcA,GAAY,CAAC,IAG9B,MAAMC,GACF,qBAAOC,CAAevwC,EAAKjC,EAAQtS,EAAMC,GACrC,IAAI0B,EAAM4S,EAAI8d,WACV1gC,EAAOgQ,EAAIhQ,OAAQC,EAAO+P,EAAI/P,OAAQC,EAAO8P,EAAI9P,OAAQC,EAAO6P,EAAI7P,OACpEigB,EAAWO,EAAO5gC,KAAKqgC,SAAW/pC,KAAK+8E,aAC3C,IAAK,IAAIjtE,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/B,GAAIy8B,EAAIinC,aAAa1jE,GAAI,CACrB,IAAIktE,EAAS,EACb,IAAK,IAAIhT,KAAMz9B,EAAI2Q,YAAYptC,GACtB,OAAO5O,SAAS8oE,IACjBgT,IACR,IAAIC,EAAQ1wC,EAAI6sB,cAActpD,GAAK,EAAI,EAAI,EAC3C,MAAMotE,EAAK,IAAYnzC,GAAYizC,EAASC,GACtCE,EAAK,IAAOpzC,GAAY,EAAI,GAAMkzC,GAClCnwD,EAAKyf,EAAI6e,MAAMt7C,GAAIid,EAAKwf,EAAI8e,MAAMv7C,GACxC6Z,EAAOhT,KAAKW,IAAIqS,EAAMmD,EAAKowD,GAC3BrzD,EAAOlT,KAAKC,IAAIiT,EAAMiD,EAAKowD,GAC3BtzD,EAAOjT,KAAKW,IAAIsS,EAAMmD,EAAKowD,GAC3BrzD,EAAOnT,KAAKC,IAAIkT,EAAMiD,EAAKowD,EAC/B,CACJ,IAAIv6D,EAAIjM,KAAKC,IAAI,EAAIiT,EAAOF,GAAS2gB,EAAO5gC,KAAKmgC,WAC7ChnB,EAAIlM,KAAKC,IAAI,EAAIkT,EAAOF,GAAS0gB,EAAO5gC,KAAKmgC,WASjD,OARI7R,EAAO,GAAKpV,EAAIoV,IAChBnV,GAAKmV,EAAOpV,EACZA,EAAIoV,GAEJC,EAAO,GAAKpV,EAAIoV,IAChBrV,GAAKqV,EAAOpV,EACZA,EAAIoV,GAED,CAACrV,EAAGC,EACf,CACA,WAAA3lB,CAAYqvC,EAAK6wC,EAAS9yC,EAAQ+yC,EAAU,IAAI1yC,IAC5C3qC,KAAKusC,IAAMA,EACXvsC,KAAKo9E,QAAUA,EACfp9E,KAAKsqC,OAASA,EACdtqC,KAAKq9E,QAAUA,EACfr9E,KAAKs9E,OAAS,GACdt9E,KAAK0d,MAAQ,GACb1d,KAAK4vC,MAAQ,GACb5vC,KAAKw9C,MAAQ,GACbx9C,KAAKu9E,MAAQ,GACbv9E,KAAKw9E,eAAgB,EACrBx9E,KAAKgmE,UAAY,KACjBhmE,KAAKk0C,UAAY,GACjBl0C,KAAK48C,WAAa,GAClB58C,KAAK4sD,aAAe,GACpB5sD,KAAKy9E,eAAiB,IAAIv6E,IAC1BlD,KAAK09E,iBAAmB,IAAIx6E,IAC5BlD,KAAK29E,cAAgB,IAAIz6E,GAC7B,CACA,WAAAo9C,GAAgB,OAAOtgD,KAAKusC,GAAK,CACjC,UAAAqxC,GAAe,OAAO59E,KAAKo9E,OAAS,CACpC,SAAAS,GAAc,OAAO79E,KAAKsqC,MAAQ,CAClC,UAAAwzC,GAAe,OAAO99E,KAAKq9E,OAAS,CACpC,QAAAU,GAAa,OAAO/9E,KAAK+e,KAAO,CAChC,gBAAAi/D,CAAiBC,GAAQj+E,KAAKw9E,cAAgBS,CAAM,CACpD,YAAAC,GAAiB,OAAOl+E,KAAKgmE,SAAW,CACxC,YAAAmY,CAAanY,GAAahmE,KAAKgmE,UAAYA,CAAW,CACtD,OAAAoY,GACI,MAAM,IAAE7xC,EAAG,QAAE6wC,EAAO,OAAE9yC,EAAM,QAAE+yC,GAAYr9E,KAC1CA,KAAK+e,MAAQq+D,EAAQr+D,QACrB/e,KAAKq+E,WAAa/zC,EAAO5gC,KAAKugC,QAAUmzC,EAAQr+D,QAChD/e,KAAKs+E,YAAch0C,EAAO5gC,KAAKsgC,SAAWozC,EAAQr+D,QAClD/e,KAAKu+E,YAAcj0C,EAAO5gC,KAAKqgC,SAAWqzC,EAAQr+D,QAAU89D,GAAgBE,aAC5E/8E,KAAKw+E,KAAOpB,EAAQqB,SAAW,EAAI,EACnC,IAAIC,EAAU,KACd,GAAI1+E,KAAKw9E,eAAmC,MAAlBx9E,KAAKgmE,UAAmB,CAC9ChmE,KAAKgmE,UAAY,IAAI/0B,GAAa1E,GAClCmyC,EAAU,EAAI7nE,cAAa,EAAO01B,EAAIC,UACtC,IAAK,IAAIr/B,KAAQnN,KAAKgmE,UAAU9zB,cAC5B,IAAK,IAAIv4B,KAAKxM,EAAKwkC,MACf+sC,EAAQ/kE,EAAI,IAAK,EACzB,IAAK,IAAI64B,KAAQxyC,KAAKgmE,UAAU7zB,cAC5B,IAAK,IAAIx4B,KAAK64B,EAAKb,MACf+sC,EAAQ/kE,EAAI,IAAK,EACzB,IAAK,IAAI84B,KAASzyC,KAAKgmE,UAAU5zB,YAAa,CAC1CssC,EAAQjsC,EAAMX,OAAS,IAAK,EAC5B,IAAK,IAAIn4B,KAAK84B,EAAMd,MAChB+sC,EAAQ/kE,EAAI,IAAK,CACzB,CACJ,CACA3Z,KAAK2+E,kBACL,IAAK,IAAI7uE,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAAK,CACpC,GAAIy8B,EAAI2Q,YAAYptC,GAAGlR,OAAS,GAA6B,GAAxB2tC,EAAI6sB,cAActpD,GAAS,CAC5D9P,KAAKs9E,OAAO9gF,KAAK,MACjBwD,KAAKu9E,MAAM/gF,KAAK,MAChB,QACJ,CACA,IAAImd,EAAI,CACJurD,KAAMp1D,EACNkW,KAAMumB,EAAIinC,aAAa1jE,IAAM+7C,GAAUgrB,kBAAkBtqC,EAAKz8B,GAAKy8B,EAAI2Q,YAAYptC,GAAK,KACxF8uE,IAAK5+E,KAAKu+E,YACV98D,IAAKzhB,KAAKsqC,OAAO5gC,KAAKygC,SAASoC,EAAIoQ,aAAa7sC,IAChDwoB,KAAM,IAAImB,EAAKz5B,KAAKo9E,QAAQyB,OAAOtyC,EAAI6e,MAAMt7C,IAAK9P,KAAKo9E,QAAQ0B,OAAOvyC,EAAI8e,MAAMv7C,IAAK,EAAG,IAExFivE,EAAU/+E,KAAKq9E,QAAQzyC,QAAQ96B,GAKnC,GAJIivE,IACAplE,EAAE8H,IAAMs9D,GACRL,GAAWA,EAAQ5uE,EAAI,IAA4B,KAAtBy8B,EAAI2Q,YAAYptC,KAC7C6J,EAAEqM,KAAO,MACC,MAAVrM,EAAEqM,KAAc,CAChB,IAAIg5D,EAAMh/E,KAAKo9E,QAAQ9B,YAAY3hE,EAAEqM,KAAMrM,EAAEilE,KAC7C,MAAMK,EAAU,IAChBtlE,EAAE2e,KAAKjF,GAAK,GAAM2rD,EAAI,GAAKC,EAC3BtlE,EAAE2e,KAAKhF,GAAK,GAAM0rD,EAAI,GAAKC,CAC/B,CACAj/E,KAAKs9E,OAAO9gF,KAAKmd,GACjB3Z,KAAKu9E,MAAM/gF,KAAKwD,KAAKk/E,kBAAkBvlE,GAC3C,CACA,IAAK,IAAI7J,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IACL,MAAtB9P,KAAKs9E,OAAOxtE,EAAI,IAChB9P,KAAKm/E,aAAarvE,GAC1B,IAAIsvE,EAAO,EAAIvoE,cAAa,EAAO01B,EAAIE,UACvC,IAAK,IAAI38B,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,IAAI48B,EAAMH,EAAII,SAAS78B,GAAI88B,EAAML,EAAIM,OAAO/8B,GACxC0oD,EAAKjsB,EAAIupB,SAAShmD,GAAI0rD,EAAKx7D,KAAKk0C,UAAUpkC,EAAI,GAClD,GAAI0rD,EAAK,EACL,SACJ,IAAI/5C,EAAMzhB,KAAKq9E,QAAQxyC,QAAQ/6B,GAC1B2R,IACDA,EAAMzhB,KAAKsqC,OAAO5gC,KAAKk6B,YAC3Bw7C,EAAKtvE,EAAI,GAAW,GAAN0rD,IAAYhD,GAAMxb,GAAS+Y,iBAAmByC,GAAMxb,GAAS2lB,kBAC3E,IAAI5kB,EAAK/9C,KAAKs9E,OAAO5wC,EAAM,GAAIsR,EAAKh+C,KAAKs9E,OAAO1wC,EAAM,GAClDjoB,EAAKo5B,EAAGzlB,KAAKpL,GAAItI,EAAKm5B,EAAGzlB,KAAKnL,GAAItI,EAAKm5B,EAAG1lB,KAAKpL,GAAIpI,EAAKk5B,EAAG1lB,KAAKnL,GACpE,GAAIxW,KAAKuF,IAAI2I,EAAKF,IAAO,GAAKhO,KAAKuF,IAAI4I,EAAKF,IAAO,EAAG,CAClDw6D,EAAKtvE,EAAI,IAAK,EACd,QACJ,CACA,GAAIsvE,EAAKtvE,EAAI,GACT,SACJ,IAAIoa,GAAiB,GAANsxC,GAAWhD,GAAMxb,GAAS+Y,gBArIhC,IACE,IAoIiFqnB,EAAQr+D,QAChGsgE,EAAMr/E,KAAKs/E,WAAW36D,EAAIC,EAAIC,EAAIC,EAAI9kB,KAAKu/E,YAAY7yC,EAAK/nB,EAAIC,EAAIC,EAAIC,EAAIoF,IAC5Es1D,EAAMx/E,KAAKs/E,WAAWz6D,EAAIC,EAAIH,EAAIC,EAAI5kB,KAAKu/E,YAAY3yC,EAAK/nB,EAAIC,EAAIH,EAAIC,EAAIsF,IAChFlqB,KAAKy/E,wBAAwBJ,EAAKG,EAAK76D,EAAIC,EAAIC,EAAIC,EAAIoF,GACvD,IAAIxT,EAAK1W,KAAKs+E,YAAah6C,EAAO,EAC9Bo7C,EAAS5jB,GAAU0D,gBAAgBjzB,EAAKz8B,GAC5C,GAAI,EAAIwE,SAASorE,GAAS,CACtB,EAAIhmE,KAAKgmE,IACS,GAAdA,EAAO,KACPA,EAAOpyE,OAAO,EAAG,GACjBoyE,EAAOljF,MAAM,IAEjB,IAAImjF,EAAO,EAAIrpE,OAAOopE,EAAQ,CAAC,EAAG,EAAG,EAAG,GAAI,IAAM,IAAMA,EAAOrhF,KAAKuD,IAAY,GAANA,EAAU,IAAMA,EAAE8R,aAAYoK,KAAK,IACzG8hE,EAAM5/E,KAAK6/E,gBAAgBR,EAAI,GAAIA,EAAI,GAAIG,EAAI,GAAIA,EAAI,GAAI,IAAMx/E,KAAKq+E,YACtE1pE,GAAK,GACT,IAAK,IAAI5K,EAAI,EAAGA,EAAI,EAAGA,IAAK4K,IAAK,CAC7B,IAAImrE,EAAMT,EAAI,GAAK1qE,EAAIirE,EAAI,GAAIG,EAAMV,EAAI,GAAK1qE,EAAIirE,EAAI,GAAII,EAAMR,EAAI,GAAK7qE,EAAIirE,EAAI,GAAIK,EAAMT,EAAI,GAAK7qE,EAAIirE,EAAI,GACxGhwE,EAAI,CACJswE,KAAMpwE,EACN48B,MACAE,MACA7uC,KAAM6+E,GAAUuD,OAChBjc,KAAM,IAAIpqC,GAAKgmD,EAAKC,EAAKC,EAAKC,GAC9BnhF,KAAM,GAAM4X,EACZ4tB,OACA7iB,IAAY,SAANA,EAAkB,YAE5BzhB,KAAK0d,MAAMlhB,KAAKoT,GAChB5P,KAAKu9E,MAAM/gF,KAAKwD,KAAKogF,iBAAiBxwE,GAC1C,CACA,IAAIywE,EAAW1pE,KAAKue,MAAMsqD,EAAI,GAAKH,EAAI,GAAIG,EAAI,GAAKH,EAAI,IAAMx7D,GAC1Dw8D,GAAY,IAAMA,EAAW,MAC7BA,GAAY,KAChB,IAAI1mE,EAAI,CACJurD,KAAM,EACNl/C,KAAM25D,EACNf,IAAK,IAAO5+E,KAAKu+E,YACjB98D,MACA6W,KAAM,IAAImB,EAAK,IAAO4lD,EAAI,GAAKG,EAAI,IAAK,IAAOH,EAAI,GAAKG,EAAI,IAAK,EAAG,GACpEa,YAEJrgF,KAAKs9E,OAAO9gF,KAAKmd,GACjB3Z,KAAKu9E,MAAM/gF,KAAKwD,KAAKk/E,kBAAkBvlE,IACvC,QACJ,CACA,IAAI2mE,EAAQ1D,GAAU2D,OAuBtB,GAtBU,GAAN/kB,GAAWhD,GAAMxb,GAAS6Z,mBAC1BypB,EAAQ1D,GAAU4D,SAClBl8C,EAAO,IAAO84C,EAAQr+D,SAEX,GAANy8C,GAAWhD,GAAMxb,GAAS8Z,mBAC/BwpB,EAAQ1D,GAAU6D,SAClBn8C,EAAO,IAAO84C,EAAQr+D,SAEjBy5C,GAAMxb,GAAS2lB,kBACpB2d,EAAQ1D,GAAU8D,QAClBp8C,EAAO,GAAM84C,EAAQr+D,SAEV,GAANy8C,EAED8kB,EADA9nB,GAAMxb,GAAS6Z,mBAAqB2B,GAAMxb,GAAS8Z,kBAC3C8lB,GAAU+D,OAEV/D,GAAUuD,OAEV,GAAN3kB,GAAiB,GAANA,GAAiB,GAANA,GAAahD,GAAMxb,GAAS6Z,mBAAqB2B,GAAMxb,GAAS8Z,oBAC5FwpB,EAAc,GAAN9kB,EAAUohB,GAAUgE,UAAkB,GAANplB,EAAUohB,GAAUiE,UAAYjE,GAAUkE,aAClFx8C,GAAc,GAANk3B,EAAU,GAAO,KAAQ4hB,EAAQr+D,SAEnC,GAANy8C,EAAS,CACT,IAAIx4C,EAAKw8D,EAAI,GAAKH,EAAI,GAAIp8D,EAAKu8D,EAAI,GAAKH,EAAI,GACnB0B,EAAO,EAAxBh+D,EAAQC,EAAIC,GAChBqoC,EAAK,GAAMtoC,EAAK+9D,EAAO/gF,KAAKq+E,WAAY9yB,EAAK,GAAMtoC,EAAK89D,EAAO/gF,KAAKq+E,WACpE9xC,EAAIsQ,aAAanQ,GAAO,IACxB2yC,EAAI,IAAM/zB,EACV+zB,EAAI,IAAM9zB,GAEVhf,EAAIsQ,aAAajQ,GAAO,IACxB4yC,EAAI,IAAMl0B,EACVk0B,EAAI,IAAMj0B,EAElB,CAGA,GAFU,GAANiQ,GAAWhD,GAAMxb,GAAS8Z,qBACzBuoB,EAAKG,GAAO,CAACA,EAAKH,IACnB7jB,EAAK,IAAMhD,GAAMxb,GAAS+Y,iBAAmByC,GAAMxb,GAAS2lB,kBAAmB,CAC/E,IAAIid,EAAM5/E,KAAK6/E,gBAAgBR,EAAI,GAAIA,EAAI,GAAIG,EAAI,GAAIA,EAAI,GAAIx/E,KAAKq+E,YAChE2C,EAAO,EAAGC,EAAO,EACrB,IAAK,IAAIl3E,EAAI,EAAG4K,GAAK,IAAO6mD,EAAK,GAAIzxD,EAAIyxD,EAAIzxD,IAAK4K,IAAK,CACnD,IAAImrE,EAAMT,EAAI,GAAK1qE,EAAIirE,EAAI,GAAIG,EAAMV,EAAI,GAAK1qE,EAAIirE,EAAI,GAAII,EAAMR,EAAI,GAAK7qE,EAAIirE,EAAI,GAAIK,EAAMT,EAAI,GAAK7qE,EAAIirE,EAAI,GAC5GoB,EAAOrqE,KAAKW,IAAI0pE,EAAMhhF,KAAKu/E,YAAY7yC,EAAKozC,EAAKC,EAAKC,EAAKC,EAAK/1D,GACpE,CACAm1D,EAAMr/E,KAAKs/E,WAAWD,EAAI,GAAIA,EAAI,GAAIG,EAAI,GAAIA,EAAI,GAAIwB,GACtD,IAAK,IAAIj3E,EAAI,EAAG4K,GAAK,IAAO6mD,EAAK,GAAIzxD,EAAIyxD,EAAIzxD,IAAK4K,IAAK,CACnD,IAAImrE,EAAMT,EAAI,GAAK1qE,EAAIirE,EAAI,GAAIG,EAAMV,EAAI,GAAK1qE,EAAIirE,EAAI,GAAII,EAAMR,EAAI,GAAK7qE,EAAIirE,EAAI,GAAIK,EAAMT,EAAI,GAAK7qE,EAAIirE,EAAI,GAC5GqB,EAAOtqE,KAAKW,IAAI2pE,EAAMjhF,KAAKu/E,YAAY3yC,EAAKozC,EAAKC,EAAKH,EAAKC,EAAK71D,GACpE,CACAs1D,EAAMx/E,KAAKs/E,WAAWE,EAAI,GAAIA,EAAI,GAAIH,EAAI,GAAIA,EAAI,GAAI4B,GACtD,IAAK,IAAIl3E,EAAI,EAAG4K,GAAK,IAAO6mD,EAAK,GAAIzxD,EAAIyxD,EAAIzxD,IAAK4K,IAAK,CACnD,IAAImrE,EAAMT,EAAI,GAAK1qE,EAAIirE,EAAI,GAAIG,EAAMV,EAAI,GAAK1qE,EAAIirE,EAAI,GAAII,EAAMR,EAAI,GAAK7qE,EAAIirE,EAAI,GAAIK,EAAMT,EAAI,GAAK7qE,EAAIirE,EAAI,GACxGhwE,EAAI,CACJswE,KAAMpwE,EACN48B,MACAE,MACA7uC,KAAMuiF,EACNpc,KAAM,IAAIpqC,GAAKgmD,EAAKC,EAAKC,EAAKC,GAC9BnhF,KAAM4X,EACN4tB,OACA7iB,OAEJzhB,KAAK0d,MAAMlhB,KAAKoT,GAChB5P,KAAKu9E,MAAM/gF,KAAKwD,KAAKogF,iBAAiBxwE,GAC1C,CACJ,KACK,CACD,IAAIA,EAAI,CACJswE,KAAMpwE,EACN48B,MACAE,MACA7uC,KAAMuiF,EACNpc,KAAM,IAAIpqC,GAAKulD,EAAI,GAAIA,EAAI,GAAIG,EAAI,GAAIA,EAAI,IAC3C1gF,KAAM4X,EACN4tB,OACA7iB,OAEJzhB,KAAK0d,MAAMlhB,KAAKoT,GAChB5P,KAAKu9E,MAAM/gF,KAAKwD,KAAKogF,iBAAiBxwE,GAC1C,CACJ,CACA,IAAIggC,EAAQ5vC,KAAKkhF,kBACjB,IAAK,IAAIn3E,EAAI,EAAGA,EAAI6lC,EAAMhxC,OAAQmL,IAC9B,IAAK,IAAIsM,EAAI,EAAGA,EAAIu5B,EAAM7lC,GAAGnL,OAAQyX,IAAK,CACtC,IAAIvU,EAAIyqC,EAAI4H,SAASvE,EAAM7lC,GAAGsM,GAAIu5B,EAAM7lC,GAAGsM,EAAIu5B,EAAM7lC,GAAGnL,OAAS,EAAIyX,EAAI,EAAI,IACzE+oE,EAAKt9E,EAAI,KACT9B,KAAKmhF,kBAAkBr/E,EAAG8tC,EAAM7lC,IAChCq1E,EAAKt9E,EAAI,IAAK,EAEtB,CAEJ,IAAK,IAAIiI,EAAI,EAAGA,GAAKwiC,EAAIE,SAAU1iC,IAC3Bq1E,EAAKr1E,EAAI,IACT/J,KAAKmhF,kBAAkBp3E,EAAG/J,KAAKohF,sBAAsBr3E,IAC7D,IAAIq8D,EAAS,EAAIrvD,YAAY,EAAGw1B,EAAIC,UACpC,IAAK,IAAI18B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/Bs2D,EAAOt2D,EAAI,GAAgC,MAA3B9P,KAAKs9E,OAAOxtE,EAAI,GAAGkW,KAAe,EAAIumB,EAAI6sB,cAActpD,GAC5E,IAAK,IAAIA,EAAI,EAAGA,EAAIy8B,EAAIC,SAAU18B,IAC1Bs2D,EAAOt2D,GAAK,GAAK9P,KAAKqhF,cAAcvxE,EAAGs2D,EAAOt2D,IAAI,KAClDs2D,EAAOt2D,GAAK,GACpB,IAAK,IAAIA,EAAI,EAAGA,EAAIy8B,EAAIC,SAAU18B,IAC1Bs2D,EAAOt2D,GAAK,GACZ9P,KAAKqhF,cAAcvxE,EAAGs2D,EAAOt2D,IAAI,GACzC,IAAK,IAAIA,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/B,GAAIy8B,EAAIsgB,YAAY/8C,IAAMktC,GAAS8P,gBAAiB,CAChD,IAAIw0B,EAAS/0C,EAAIsgB,YAAY/8C,GAAG4D,WAC5B+N,EAAM6oB,EAAO5gC,KAAKygC,SAASoC,EAAIoQ,aAAa7sC,IAChD9P,KAAKuhF,aAAazxE,EAAGwxE,EAA2B,GAAnBthF,KAAKu+E,YAAmB98D,EAAK,IAAMmC,EACpE,CACJ,IAAK,IAAI9T,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAAK,CACpC,IAAI0Q,EAAM,GACN+jD,EAAMvkE,KAAK48C,WAAW9sC,EAAI,IAClB,GAARy0D,EACA/jD,EAAM,IACM,GAAP+jD,EACL/jD,EAAM,IACD+jD,GAAO,EACZ/jD,EAAM7J,KAAKuF,IAAIqoD,GAAO,IACjBA,EAAM,IACX/jD,EAAM+jD,EAAM,KAChB,IAAK,IAAIx6D,EAAI/J,KAAK4sD,aAAa98C,EAAI,GAAI/F,EAAI,EAAGA,IAC1CyW,GAAO,IACX,GAAkB,GAAdA,EAAI5hB,OACJ,SACJ,IAAI6iB,EAAM6oB,EAAO5gC,KAAKygC,SAASoC,EAAIoQ,aAAa7sC,IAChD9P,KAAKuhF,aAAazxE,EAAG0Q,EAAmB,GAAdA,EAAI5hB,OAAc,GAAMoB,KAAKu+E,YAAc,GAAMv+E,KAAKu+E,YAAa98D,EAAK,GAAKmC,EAC3G,CACA,IAAK,IAAI9T,EAAI,EAAGA,EAAIutE,EAAQ/xC,aAAa1sC,OAAQkR,IAAK,CAClD,IAAIsgE,EAAMiN,EAAQ/xC,aAAax7B,GAC1BsgE,GAELpwE,KAAKwhF,aAAa1xE,EAAI,EAAGsgE,EAAKiN,EAAQ9xC,YAAYz7B,GAAIutE,EAAQ7xC,aAAa17B,GAAK9P,KAAK+e,MAAQ89D,GAAgBE,aACjH,CACA,IAAK,IAAIjtE,EAAI,EAAGA,EAAIutE,EAAQ5xC,aAAa7sC,OAAQkR,IAAK,CAClD,IAAIsgE,EAAMiN,EAAQ5xC,aAAa37B,GAC1BsgE,GAELpwE,KAAKyhF,aAAa3xE,EAAI,EAAGsgE,EAAKiN,EAAQ3xC,YAAY57B,GAAIutE,EAAQ1xC,aAAa77B,GAAK9P,KAAK+e,MAAQ89D,GAAgBE,aACjH,CACA,IAAK,IAAIjtE,EAAI,EAAGA,EAAI6G,KAAKW,IAAI+lE,EAAQjyC,aAAaxsC,OAAQ2tC,EAAIC,UAAW18B,IACrE,GAAIutE,EAAQjyC,aAAat7B,GAAK,EAAG,CAC7B,IAAI4oE,EAAK2E,EAAQjyC,aAAat7B,GAAK9P,KAAK+e,MACpCpF,EAAI3Z,KAAKs9E,OAAOxtE,GAChB6pB,EAAM,IAAIzB,EAAIve,EAAE2e,KAAKpL,GAAKwrD,EAAI/+D,EAAE2e,KAAKnL,GAAKurD,EAAI,EAAIA,EAAI,EAAIA,GAC1DgJ,EAAM,CACNxc,KAAM,EACNgb,KAAM,EACNvmD,MACA5S,GAAI,CAAC4S,EAAIhQ,OAAQgQ,EAAI9P,OAAQ8P,EAAI9P,OAAQ8P,EAAIhQ,QAC7C3C,GAAI,CAAC2S,EAAI/P,OAAQ+P,EAAI/P,OAAQ+P,EAAI7P,OAAQ6P,EAAI7P,SAEjD9pB,KAAKu9E,MAAM/gF,KAAKklF,EACpB,CACJ,GAAsB,MAAlB1hF,KAAKgmE,UAAmB,CACxB,IAAK,IAAI74D,KAAQnN,KAAKgmE,UAAU9zB,cAC5BlyC,KAAK2hF,iBAAiBx0E,EAAKwkC,MAAO3xC,KAAK29E,cAAcl9E,IAAI0M,GAAO,GAChEnN,KAAK4hF,sBAAsBz0E,EAAKwkC,MAAO3xC,KAAKy9E,eAAeh9E,IAAI0M,GAAOnN,KAAK09E,iBAAiBj9E,IAAI0M,IAEpG,IAAK,IAAIqlC,KAAQxyC,KAAKgmE,UAAU7zB,cAC5BnyC,KAAK6hF,mBAAmBrvC,EAAKb,OAC7B3xC,KAAK4hF,sBAAsBpvC,EAAKb,MAAO3xC,KAAKy9E,eAAeh9E,IAAI+xC,GAAOxyC,KAAK09E,iBAAiBj9E,IAAI+xC,IAEpG,IAAK,IAAIC,KAASzyC,KAAKgmE,UAAU5zB,YAAa,CAC1C,IAAI0vC,EAASrvC,EAAMd,MAAM/yC,OAAS,EAClC,GAAIkjF,EACA,IAAK,IAAIhyE,EAAI,EAAGA,EAAI2iC,EAAMd,MAAM/yC,OAAQkR,IAAK,CACzC,IAAIu+C,EAAKv+C,EAAI2iC,EAAMd,MAAM/yC,OAAS,EAAIkR,EAAI,EAAI,EAC9C,GAAqD,GAAjDy8B,EAAI4H,SAAS1B,EAAMd,MAAM7hC,GAAI2iC,EAAMd,MAAM0c,IAAW,CACpDyzB,GAAS,EACT,KACJ,CACJ,CACJ,IAAIC,EAAmC,GAAtBtvC,EAAMd,MAAM/yC,OAC7BoB,KAAKgiF,mBAAmBvvC,EAAMX,OAAQW,EAAMd,OACvCowC,IACGD,EACA9hF,KAAK6hF,mBAAmBpvC,EAAMd,OAE9B3xC,KAAK2hF,iBAAiBlvC,EAAMd,OAAO,EAAOc,EAAMX,SAExD9xC,KAAK4hF,sBAAsBnvC,EAAMd,MAAO3xC,KAAKy9E,eAAeh9E,IAAIgyC,GAAQzyC,KAAK09E,iBAAiBj9E,IAAIgyC,GACtG,CACJ,CACA,IAAI28B,EAAW,IAAIvnB,GAAatb,GAChC,IAAK,IAAI/rC,KAAM4uE,EAASnnB,YACpBjoD,KAAKiiF,mBAAmB7S,EAASlnB,QAAQ1nD,GAAK4uE,EAASjnB,WAC/D,CACA,SAAA+5B,GAAc,OAAOliF,KAAKs9E,OAAO1+E,MAAQ,CACzC,QAAAujF,CAAStsE,GAAO,OAAO7V,KAAKs9E,OAAOznE,EAAM,CACzC,SAAAusE,GAAc,OAAOpiF,KAAKs9E,MAAQ,CAClC,QAAA+E,GAAa,OAAOriF,KAAK0d,MAAM9e,MAAQ,CACvC,OAAA0jF,CAAQzsE,GAAO,OAAO7V,KAAK0d,MAAM7H,EAAM,CACvC,QAAA0sE,GAAa,OAAOviF,KAAK0d,KAAO,CAChC,QAAA8kE,GAAa,OAAOxiF,KAAK4vC,MAAMhxC,MAAQ,CACvC,OAAA6jF,CAAQ5sE,GAAO,OAAO7V,KAAK4vC,MAAM/5B,EAAM,CACvC,QAAA6sE,GAAa,OAAO1iF,KAAK4vC,KAAO,CAChC,QAAA+yC,GAAa,OAAO3iF,KAAKw9C,MAAM5+C,MAAQ,CACvC,OAAAgkF,CAAQ/sE,GAAO,OAAO7V,KAAKw9C,MAAM3nC,EAAM,CACvC,QAAAgtE,GAAa,OAAO7iF,KAAKw9C,KAAO,CAChC,QAAAslC,GAAa,OAAO9iF,KAAKu9E,MAAM3+E,MAAQ,CACvC,QAAAmkF,CAASltE,GAAO,OAAO7V,KAAKu9E,MAAM1nE,EAAM,CACxC,SAAAmtE,GAAc,OAAOhjF,KAAKu9E,KAAO,CACjC,gBAAA0F,CAAiBjgE,EAAIC,GACjB,IAAK,IAAItJ,KAAK3Z,KAAKs9E,OACf3jE,EAAE2e,KAAKZ,SAAS1U,EAAIC,GACxB,IAAK,IAAIrT,KAAK5P,KAAK0d,MACf9N,EAAEs0D,KAAKxsC,SAAS1U,EAAIC,GACxB,IAAK,IAAIlT,KAAK/P,KAAK4vC,MACf7/B,EAAEmd,IAAMlK,EACRjT,EAAEod,IAAMlK,EAEZ,IAAK,IAAI9gB,KAAKnC,KAAKw9C,MACf,EAAIrkC,MAAMhX,EAAE4kB,GAAI/D,GAChB,EAAI7J,MAAMhX,EAAE6kB,GAAI/D,GAEpB,IAAK,IAAIy+D,KAAO1hF,KAAKu9E,MACjBmE,EAAI/nD,IAAIjC,SAAS1U,EAAIC,GACrB,EAAI9J,MAAMuoE,EAAI36D,GAAI/D,GAClB,EAAI7J,MAAMuoE,EAAI16D,GAAI/D,EAE1B,CACA,YAAAigE,GACI,IAAIC,EAASnjF,KAAKojF,oBACD,GAAbD,EAAO,IAAwB,GAAbA,EAAO,IACzBnjF,KAAKijF,kBAAkBE,EAAO,IAAKA,EAAO,GAClD,CACA,eAAAE,CAAgB7rD,GACZ,GAAe,GAAXA,EAAJ,CAEAx3B,KAAK+e,OAASyY,EACd,IAAK,IAAI7d,KAAK3Z,KAAKs9E,OACf3jE,EAAE2e,KAAKd,QAAQA,GACf7d,EAAEilE,KAAOpnD,EAEb,IAAK,IAAI5nB,KAAK5P,KAAK0d,MACf9N,EAAEs0D,KAAK1sC,QAAQA,GACf5nB,EAAE9Q,MAAQ04B,EACV5nB,EAAE00B,MAAQ9M,EAEd,IAAK,IAAIznB,KAAK/P,KAAK4vC,MACf7/B,EAAEmd,IAAMsK,EACRznB,EAAEod,IAAMqK,EACRznB,EAAEsjB,IAAMmE,EACRznB,EAAEujB,IAAMkE,EACRznB,EAAEjR,MAAQ04B,EAEd,IAAK,IAAIr1B,KAAKnC,KAAKw9C,MACf,EAAIpkC,MAAMjX,EAAE4kB,GAAIyQ,GAChB,EAAIpe,MAAMjX,EAAE6kB,GAAIwQ,GAChBr1B,EAAErD,MAAQ04B,EAEd,IAAK,IAAIkqD,KAAO1hF,KAAKu9E,MACjBmE,EAAI/nD,IAAInC,QAAQA,GAChB,EAAIpe,MAAMsoE,EAAI36D,GAAIyQ,GAClB,EAAIpe,MAAMsoE,EAAI16D,GAAIwQ,EA1BZ,CA4Bd,CACA,iBAAA4rD,CAAkB/5C,GAGd,GAFe,MAAXA,IACAA,EAAU,GACW,GAArBrpC,KAAKu9E,MAAM3+E,OACX,MAAO,CAAC,EAAG,EAAG,EAAIyqC,EAAS,EAAIA,GACnC,IAAI85C,EAAS,EAAIpsE,YAAY,EAAG,GAC5B2qE,EAAM1hF,KAAKu9E,MAAM,GACrB4F,EAAO,GAAKzB,EAAI/nD,IAAInX,EACpB2gE,EAAO,GAAKzB,EAAI/nD,IAAIjX,EACpBygE,EAAO,GAAKzB,EAAI/nD,IAAInX,EAAIk/D,EAAI/nD,IAAI/W,EAChCugE,EAAO,GAAKzB,EAAI/nD,IAAIjX,EAAIg/D,EAAI/nD,IAAI9W,EAChC,IAAK,IAAI/S,EAAI9P,KAAKu9E,MAAM3+E,OAAS,EAAGkR,EAAI,EAAGA,IACvC4xE,EAAM1hF,KAAKu9E,MAAMztE,GACjBqzE,EAAO,GAAKxsE,KAAKW,IAAI6rE,EAAO,GAAIzB,EAAI/nD,IAAInX,GACxC2gE,EAAO,GAAKxsE,KAAKW,IAAI6rE,EAAO,GAAIzB,EAAI/nD,IAAIjX,GACxCygE,EAAO,GAAKxsE,KAAKC,IAAIusE,EAAO,GAAIzB,EAAI/nD,IAAInX,EAAIk/D,EAAI/nD,IAAI/W,GACpDugE,EAAO,GAAKxsE,KAAKC,IAAIusE,EAAO,GAAIzB,EAAI/nD,IAAIjX,EAAIg/D,EAAI/nD,IAAI9W,GAExD,OAAOsgE,CACX,CACA,oBAAAG,GACI,IAAK3+D,EAAIC,EAAIC,EAAIC,GAAM9kB,KAAKojF,oBAC5B,OAAO,IAAIlrD,EAAIvT,EAAIC,EAAIC,EAAKF,EAAIG,EAAKF,EACzC,CACA,WAAA2+D,CAAY/gE,EAAGE,EAAGE,EAAGC,EAAGwmB,GACL,MAAXA,GAAmBA,EAAU,IAC7B7mB,GAAK6mB,EACL3mB,GAAK2mB,EACLzmB,GAAK,EAAIymB,EACTxmB,GAAK,EAAIwmB,GAEb,IAAI85C,EAASnjF,KAAKojF,kBAAkB,GAChCI,EAAKL,EAAO,GAAKA,EAAO,GAAIM,EAAKN,EAAO,GAAKA,EAAO,GACxD,GAAIK,EAAK5gE,GAAK6gE,EAAK5gE,EAAG,CAClB,IAAI6gE,EAAY,EACZF,EAAK5gE,IACL8gE,EAAY9gE,EAAI4gE,GAChBC,EAAK5gE,IACL6gE,EAAY/sE,KAAKW,IAAIosE,EAAW7gE,EAAI4gE,IACxCzjF,KAAKqjF,gBAAgBK,GACrB,EAAItqE,MAAM+pE,EAAQO,EACtB,CACA1jF,KAAKijF,iBAAiBzgE,EAAI2gE,EAAO,GAAK,IAAOvgE,EAAIugE,EAAO,GAAKA,EAAO,IAAKzgE,EAAIygE,EAAO,GAAK,IAAOtgE,EAAIsgE,EAAO,GAAKA,EAAO,IAC3H,CACA,WAAAQ,CAAY/gE,EAAGC,GACX,IAAIsgE,EAASnjF,KAAKojF,kBAAkB,GACpC,GAAID,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAMA,EAAO,GAC9C,OACJ,IAAIpkE,EAAQpI,KAAKW,IAAI,EAAGX,KAAKW,IAAIsL,GAAKugE,EAAO,GAAKA,EAAO,IAAKtgE,GAAKsgE,EAAO,GAAKA,EAAO,MACtFnjF,KAAKijF,kBAAkBE,EAAO,IAAKA,EAAO,IAC1CnjF,KAAKqjF,gBAAgBtkE,EACzB,CACA,YAAA6kE,CAAaniE,GACT,IAAK,IAAI9H,KAAK3Z,KAAKs9E,OACf3jE,EAAE8H,IAAMA,EACZ,IAAK,IAAI7R,KAAK5P,KAAK0d,MACf9N,EAAE6R,IAAMA,CAChB,CACA,iBAAAoiE,CAAkBrhE,EAAGE,EAAG6yD,GACN,MAAVA,IACAA,EAAS,MACb,IAAIuO,EAAU,EACd,IAAK,IAAIh0E,EAAI,EAAGA,EAAI9P,KAAKs9E,OAAO1+E,OAAQkR,IAAK,CACzC,IAAI6J,EAAI3Z,KAAKs9E,OAAOxtE,GACpB,GAAS,MAAL6J,EACA,SACJ,IAAIqJ,EAAKrJ,EAAE2e,KAAKpL,GAAK1K,EAAGS,EAAKtJ,EAAE2e,KAAKnL,GAAKzK,EACzCohE,GAAW,GAAK9gE,EAAKA,EAAKC,EAAKA,EAAKsyD,EACxC,CACA,OAAOuO,CACX,CACA,KAAAloE,GACI,IAAIgsC,EAAM,IAAIi1B,GAAgB78E,KAAKusC,IAAKvsC,KAAKo9E,QAASp9E,KAAKsqC,OAAQtqC,KAAKq9E,SACxEz1B,EAAI7oC,MAAQ/e,KAAK+e,MACjB6oC,EAAIy2B,WAAar+E,KAAKq+E,WACtBz2B,EAAI02B,YAAct+E,KAAKs+E,YACvB12B,EAAI22B,YAAcv+E,KAAKu+E,YACvB32B,EAAI42B,KAAOx+E,KAAKw+E,KAChB,IAAK,IAAI7kE,KAAK3Z,KAAKs9E,OACf11B,EAAI01B,OAAO9gF,KAAKof,EAAMjC,IAC1B,IAAK,IAAI/J,KAAK5P,KAAK0d,MACfkqC,EAAIlqC,MAAMlhB,KAAKof,EAAMhM,IACzB,IAAK,IAAI7E,KAAK/K,KAAKu9E,MACf31B,EAAI21B,MAAM/gF,KAAKof,EAAM7Q,IACzB,OAAO68C,CACX,CACA,eAAA+2B,GACI,MAAMpyC,EAAMvsC,KAAKusC,IACjB,IAAK,IAAIz8B,EAAI,EAAGA,EAAIy8B,EAAIE,SAAU38B,IAC9B9P,KAAKk0C,UAAUpkC,GAAKy8B,EAAI2H,UAAUpkC,EAAI,GAC1C,IAAK,IAAIA,EAAI,EAAGA,EAAIy8B,EAAIC,SAAU18B,IAC9B9P,KAAK48C,WAAW9sC,GAAKy8B,EAAIqQ,WAAW9sC,EAAI,GACxC9P,KAAK4sD,aAAa98C,GAAKy8B,EAAIqgB,aAAa98C,EAAI,GAEhD,IAAIi0E,EAAa,CAAC78E,EAAKyqC,KACnB,IAAI0/B,EAAS,EAAGC,EAAW,EAC3B,IAAK,IAAI33D,KAAKg4B,EACV0/B,GAAUrxE,KAAK48C,WAAWjjC,EAAI,GAC9B23D,GAAYtxE,KAAK4sD,aAAajzC,EAAI,GAClC3Z,KAAK48C,WAAWjjC,EAAI,GAAK3Z,KAAK4sD,aAAajzC,EAAI,GAAK,EAExD3Z,KAAKy9E,eAAe/8E,IAAIwG,EAAKmqE,GAC7BrxE,KAAK09E,iBAAiBh9E,IAAIwG,EAAKoqE,GAC/B,IAAK,IAAIvzB,KAAMpM,EACX,IAAK,IAAIqM,KAAMzR,EAAI8c,YAAYtL,GAC3B,IAAKpM,EAAMzwC,SAAS88C,GAAK,CACrB,IAAIpuC,EAAI28B,EAAI4H,SAAS4J,EAAIC,GACrBh+C,KAAKk0C,UAAUtkC,EAAI,IAAM,IACzB5P,KAAKk0C,UAAUtkC,EAAI,GAAK,EAChC,GAEZ,GAAsB,MAAlB5P,KAAKgmE,UAAT,CAEA,IAAK,IAAI74D,KAAQnN,KAAKgmE,UAAU9zB,cAAe,CAC3C,IAAIm/B,EAAS,EAAGC,EAAW,EAAGhd,EAAS,EACvC,IAAK,IAAIxkD,EAAI,EAAGA,EAAI3C,EAAKwkC,MAAM/yC,OAAQkR,IAAK,CACxCuhE,GAAU9kC,EAAIqQ,WAAWzvC,EAAKwkC,MAAM7hC,IACpCwhE,GAAY/kC,EAAIqgB,aAAaz/C,EAAKwkC,MAAM7hC,IACxC,IAAIF,EAAI28B,EAAI4H,SAAShnC,EAAKwkC,MAAM7hC,GAAI3C,EAAKwkC,MAAM7hC,EAAI3C,EAAKwkC,MAAM/yC,OAAS,EAAIkR,EAAI,EAAI,IAC/EF,EAAI,IACJ0kD,GAAU/nB,EAAI2H,UAAUtkC,GAChC,CACA,IAAIo0E,GAAc,EAAI1vB,EAAS+c,EAASC,GAAYnkE,EAAKwkC,MAAM/yC,OAAS,EACxEoB,KAAK29E,cAAcj9E,IAAIyM,EAAM62E,GAC7B,IAAK,IAAIl0E,EAAI,EAAGA,EAAI3C,EAAKwkC,MAAM/yC,OAAS,EAAGkR,IAAK,CAC5C,IAAIF,EAAI28B,EAAI4H,SAAShnC,EAAKwkC,MAAM7hC,GAAI3C,EAAKwkC,MAAM7hC,EAAI,IAC/CF,EAAI,IACJ5P,KAAKk0C,UAAUtkC,EAAI,GAAKo0E,GAAc,EAAI,EAClD,CACAD,EAAW52E,EAAMA,EAAKwkC,MAC1B,CACA,IAAK,IAAIa,KAAQxyC,KAAKgmE,UAAU7zB,cAAe,CAC3C,IAAK,IAAIriC,EAAI,EAAGA,EAAI0iC,EAAKb,MAAM/yC,OAAQkR,IAAK,CACxC,IAAIF,EAAI28B,EAAI4H,SAAS3B,EAAKb,MAAM7hC,GAAI0iC,EAAKb,MAAM7hC,EAAI0iC,EAAKb,MAAM/yC,OAAS,EAAIkR,EAAI,EAAI,IAC/EF,EAAI,IACJ5P,KAAKk0C,UAAUtkC,EAAI,GAAK,EAChC,CACAm0E,EAAWvxC,EAAMA,EAAKb,MAC1B,CACA,IAAK,IAAIc,KAASzyC,KAAKgmE,UAAU5zB,YAAa,CAC1C,IAAI2vC,EAAmC,GAAtBtvC,EAAMd,MAAM/yC,OAC7B,IAAK,IAAIkR,EAAI,EAAGA,EAAI2iC,EAAMd,MAAM/yC,OAAQkR,IAAK,CACzC,IAAKiyE,EAAY,CACb,IAAInyE,EAAI28B,EAAI4H,SAAS1B,EAAMd,MAAM7hC,GAAI2iC,EAAMd,MAAM7hC,EAAI2iC,EAAMd,MAAM/yC,OAAS,EAAIkR,EAAI,EAAI,IAClFF,EAAI,IACJ5P,KAAKk0C,UAAUtkC,EAAI,GAAK,EAChC,CACA,IAAIA,EAAI28B,EAAI4H,SAAS1B,EAAMX,OAAQW,EAAMd,MAAM7hC,IAC3CF,EAAI,IACJ5P,KAAKk0C,UAAUtkC,EAAI,IAAM,EACjC,CACAm0E,EAAWtxC,EAAOA,EAAMd,MAC5B,CAxCU,CAyCd,CACA,YAAA4vC,CAAa7uC,EAAMlyB,EAAKo+D,EAAKn9D,EAAKwiE,GAC9B,IAAIjF,EAAMh/E,KAAKo9E,QAAQ9B,YAAY96D,EAAKo+D,GACpCjlE,EAAI3Z,KAAKs9E,OAAO5qC,EAAO,GACvBxlB,EAAKvT,EAAE2e,KAAKpL,GAAIC,EAAKxT,EAAE2e,KAAKnL,GAAIkG,EAAK,IAAO2rD,EAAI,GAAI1rD,EAAK,IAAO0rD,EAAI,GACxE,GAAW,MAAPx+D,EAAa,CACb,IAAI0jE,EAAYlkF,KAAKusC,IAAIwlB,aAAarf,GAAM9nC,QAAQgF,GAA+B,GAAzB5P,KAAKusC,IAAI2H,UAAUtkC,KAC7E,GAAwB,GAApBs0E,EAAUtlF,OAAa,CACvB,IAAIulF,EAAMnkF,KAAKmiF,SAASniF,KAAKusC,IAAIkvB,UAAUyoB,EAAU,GAAIxxC,GAAQ,GAC7D1vB,EAAKmhE,EAAI7rD,KAAKpL,GAAKA,EAAIjK,EAAKkhE,EAAI7rD,KAAKnL,GAAKA,EAAIkF,EAAM,EAAItP,EAAQC,EAAIC,GACpElT,EAAU,IAAN6uE,EACJtzB,EAAKroC,EAAKoP,EAAM,IAAMtiB,EAAGw7C,GAAMvoC,EAAKqP,EAAM,IAAMtiB,EAChDq0E,EAAM,KAAO/wD,EAAKC,GAAMjB,EAI5B,OAHCrP,EAAIC,GAAM,CAACD,EAAKohE,EAAKnhE,EAAKmhE,GAC3BpkF,KAAKs9E,OAAO9gF,KAAK,CAAE0oE,KAAM,EAAGl/C,KAAM,IAAK44D,MAAKn9D,MAAK6W,KAAM,IAAImB,EAAKvM,EAAKlK,EAAKsoC,EAAIn+B,EAAKlK,EAAKsoC,EAAIx7C,EAAGA,UAC/F/P,KAAKs9E,OAAO9gF,KAAK,CAAE0oE,KAAM,EAAGl/C,KAAM,IAAK44D,MAAKn9D,MAAK6W,KAAM,IAAImB,EAAKvM,EAAKlK,EAAKsoC,EAAIn+B,EAAKlK,EAAKsoC,EAAIx7C,EAAGA,IAEnG,CACJ,CACA,IAAIwkB,EAAY,EAAG8vD,EAAS,EAAGC,EAAS,EACpCv9D,EAAK,EAAIhQ,YAAY,EAAG,GAAIiQ,EAAK,EAAIjQ,YAAY,EAAG,GACpDwtE,EAAY,GACZC,GAAU,EACd,IAAK,IAAIJ,EAAM,IAAOzqE,EAAE2e,KAAKjF,GAAK1Z,EAAE2e,KAAKhF,KAAMkxD,GAAWJ,EAAM,IAAMpkF,KAAKo9E,QAAQr+D,QAASqlE,GAAO,GAAMpkF,KAAKo9E,QAAQr+D,QAAS,CAC3H,MAAM0lE,EAAQ,EAAI7gE,EAClB,IAAK,IAAI3P,EAAI,GAAIuwE,GAAWvwE,EAAI0C,KAAK+M,GAAK,KAAQzP,GAAKwwE,EACnD,IAAK,IAAI15E,GAAK,EAAGA,GAAK,EAAGA,GAAK,EAAG,CAC7B,IAAI25E,EAAOzwE,EAAIlJ,GAAKA,EAAI,EAAI05E,EAAQ,GAAIp0D,EAAM4zD,EAASS,EACnD1hE,EAAKohE,EAAMztE,KAAK2a,IAAIjB,GAAMpN,EAAKmhE,EAAMztE,KAAK4a,IAAIlB,IAAQrwB,KAAKw+E,KAC3D75D,EAAKuI,EAAKlK,EAAKqQ,EAAIxO,EAAKqI,EAAKlK,EAAKqQ,EAAIzO,EAAKuI,EAAKlK,EAAKqQ,EAAIxO,EAAKqI,EAAKlK,EAAKqQ,EAC5EvM,EAAG,GAAKpC,EACRqC,EAAG,GAAKpC,EACRmC,EAAG,GAAKlC,EACRmC,EAAG,GAAKpC,EACRmC,EAAG,GAAKlC,EACRmC,EAAG,GAAKlC,EACRiC,EAAG,GAAKpC,EACRqC,EAAG,GAAKlC,EACR,IAAI6/D,EAAO3kF,KAAK4kF,oBAAoB79D,EAAIC,EAAI,MAAM,GAC9C4jC,EAAQ,GAAK+5B,EAAOhuE,KAAKuF,IAAIwoE,GAAQ,GAAKN,EAC1CS,EAAuB,GAARF,GAAahuE,KAAKuF,IAAIwoE,IAASH,EAAY,GAAK3gE,EAMnE,IALiB,GAAb2Q,GAAkBswD,GAAgBj6B,EAAQr2B,KAC1CA,EAAYq2B,EACZy5B,EAASrhE,EACTshE,EAASrhE,GAET4hE,EAAc,CACdL,GAAU,EACV,KACJ,CACJ,CACJD,GAAa,CACjB,CACA5qE,EACI,CACIurD,KAAM,EACNl/C,KAAMxF,EACNo+D,MACAn9D,MACA6W,KAAM,IAAImB,EAAKvM,EAAKm3D,EAAQl3D,EAAKm3D,EAAQjxD,EAAIC,IAErDtzB,KAAKs9E,OAAO9gF,KAAKmd,GACjB,IAAI+nE,EAAM,CACNxc,KAAM,EACNgb,KAAM,EACNvmD,IAAK,IAAIzB,EAAIve,EAAE2e,KAAKpL,GAAKmG,EAAI1Z,EAAE2e,KAAKnL,GAAKmG,EAAI,EAAID,EAAI,EAAIC,GACzDvM,GAAI,CAACpN,EAAE2e,KAAKpL,GAAKmG,EAAI1Z,EAAE2e,KAAKpL,GAAKmG,EAAI1Z,EAAE2e,KAAKpL,GAAKmG,EAAI1Z,EAAE2e,KAAKpL,GAAKmG,GACjErM,GAAI,CAACrN,EAAE2e,KAAKnL,GAAKmG,EAAI3Z,EAAE2e,KAAKnL,GAAKmG,EAAI3Z,EAAE2e,KAAKnL,GAAKmG,EAAI3Z,EAAE2e,KAAKnL,GAAKmG,IAErEtzB,KAAKu9E,MAAM/gF,KAAKklF,EACpB,CACA,YAAAvC,CAAaja,GACT,IAAIp4C,EAAK9sB,KAAKusC,IAAI6e,MAAM8Z,GAAOn4C,EAAK/sB,KAAKusC,IAAI8e,MAAM6Z,GAC/Cv3C,EAAO,EAAGC,EAAQ,EAClB4iB,EAAMxwC,KAAKusC,IAAI8c,YAAY6b,GAC/B,IAAK,IAAIp1D,EAAI,EAAGA,EAAI0gC,EAAI5xC,OAAQkR,IAAK,CACjC,IAAIqU,EAAQxN,KAAKue,MAAMl1B,KAAKusC,IAAI8e,MAAM7a,EAAI1gC,IAAMid,EAAI/sB,KAAKusC,IAAI6e,MAAM5a,EAAI1gC,IAAMgd,GAAMjJ,EAC/EM,IAAU,IAAMA,GAAS,GACzByJ,GAAS,EACJzJ,IAAU,IAAMA,GAAS,GAC9ByJ,IACKzJ,EAAQ,IAAMA,EAAQ,IACtBA,GAAS,IAAMA,GAAS,KACxBA,EAAQ,KAAOA,GAAS,IAC7BwJ,GAAQ,EAERA,IACR,CACA,IAAIu7C,EAAQlpE,KAAKusC,IAAI2Q,YAAYgoB,GAC7B4f,EAAO5b,EAAM1uD,QAAQ,KAAMuqE,EAAS7b,EAAM1uD,QAAQ,KAClDwqE,EAAO,EACC,GAARr3D,GAAsB,GAATC,GAAck3D,EAAO,GAAKC,EAAS,IAEhDC,EADKr3D,EAAOC,GACJ,EACHA,EAAQD,EACN,EAEMk+B,GAAU2F,gBAAgBxxD,KAAKusC,IAAKzf,EAAK,EAAGC,GAE5C,GADA8+B,GAAU2F,gBAAgBxxD,KAAKusC,IAAKzf,EAAK,EAAGC,IAE7C,EAED,GAEf,IAAIk4D,EAAS,KACThqB,EAAW,KACXiqB,EAAU,KACVC,EAAW,EACf,GAAIL,EAAO,GAAKC,EAAS,EACT,GAARC,EACAC,EAAS,CAAC/b,GACL8b,EAAO,GACZC,EAAS,CAAC/b,EAAMvoD,UAAU,EAAGuoD,EAAMtqE,OAAS,GAAIsqE,EAAMvoD,UAAUuoD,EAAMtqE,OAAS,IAC/EumF,EAAW,GAGXF,EAAS,CAAC/b,EAAMvoD,UAAU,EAAG,GAAIuoD,EAAMvoD,UAAU,QAEpD,CACD,IAAIkzB,EAAO,GACPuxC,EAAO,GACPzrB,EAAO,GACP/mB,EAASs2B,EAAMvoC,MAAM,KACrBqkD,EAAO,IACPpyC,EAAS,EAAI96B,QAAQ86B,IACzB,IAAI7F,EAAO,GACX,IAAK,IAAIhjC,EAAI,EAAGA,EAAI6oC,EAAOh0C,OAAQmL,IAAK,CACpC,IAAIs7E,EAAaL,GAAQ,GAAU,GAALj7E,GAAYi7E,EAAO,GAAKj7E,GAAK6oC,EAAOh0C,OAAS,EACvEomF,EAAO,GAAiB,GAAZG,GAAiBp7E,GAAK6oC,EAAOh0C,OAAS,IAClDumF,EAAWtxC,EAAKj1C,QACpB,IAAI+Z,EAAM,EACVo0B,EAAO,GACP,IAAK,IAAI12B,EAAI,EAAGA,EAAIu8B,EAAO7oC,GAAGnL,OAAQyX,IAAK,CACvC,IAAI2zD,EAAKp3B,EAAO7oC,GAAG+H,OAAOuE,GAChB,KAAN2zD,GAAmB,KAANA,GACTj9B,EAAKnuC,OAAS,IACdi1C,EAAKr3C,KAAKuwC,EAAKr5B,YACf0xE,EAAK5oF,KAAKmc,GACVghD,EAAKn9D,KAAK6oF,IAEdt4C,EAAO,GACPp0B,EAAY,KAANqxD,GAAa,EAAI,GAEZ,KAANA,IAAqB,GAARrxD,GAA4B,GAAfo0B,EAAKnuC,OACpC+Z,EAAM,EAENo0B,GAAQi9B,CAChB,CACIj9B,EAAKnuC,OAAS,IACdi1C,EAAKr3C,KAAKuwC,EAAKr5B,YACf0xE,EAAK5oF,KAAKmc,GACVghD,EAAKn9D,KAAK6oF,GAElB,CAIA,IAHAJ,EAASpxC,EACTonB,EAAWmqB,EACXF,EAAUvrB,EACHwrB,EAAWF,EAAOrmF,OAAS,GAA2B,GAAtBq8D,EAASkqB,IAC5CA,GACR,CACA,IAEIG,EAAS,EAAIvuE,YAAY,EAAGkuE,EAAOrmF,QACnC2mF,EAAK,EACT,IAAK,IAAIz1E,EAAI,EAAGA,EAAIm1E,EAAOrmF,OAAQkR,IAC/Bw1E,EAAOx1E,GAAK9P,KAAKo9E,QAAQ9B,YAAY2J,EAAOn1E,GAAI9P,KAAKu+E,aAAa,GAClD,MAAZtjB,GAAmC,GAAfA,EAASnrD,KAC7Bw1E,EAAOx1E,IAND,IAOVy1E,GAAMD,EAAOx1E,GAEjB,IAAI0S,EAAIxiB,KAAKo9E,QAAQyB,OAAO/xD,GAAKpK,EAAI1iB,KAAKo9E,QAAQ0B,OAAO/xD,GACzD,IAAK,IAAIjd,EAAI,EAAGA,EAAIq1E,EAAUr1E,IAC1B0S,GAAK8iE,EAAOx1E,GAChB0S,GAAK,GAAM8iE,EAAOH,GAClB,IAAK,IAAIr1E,EAAI,EAAGA,EAAIm1E,EAAOrmF,OAAQkR,IAAK,CACpC,IAAI6J,EAAI,CACJurD,KAAOp1D,GAAKq1E,GAAwB,MAAXD,GAAmBA,EAAQp1E,GAAOo1D,EAAO,EAClEl/C,KAAMi/D,EAAOn1E,GACb8uE,IAAK5+E,KAAKu+E,YACV98D,IAAKzhB,KAAKsqC,OAAO5gC,KAAKygC,SAASnqC,KAAKusC,IAAIoQ,aAAauoB,IACrD5sC,KAAM,IAAImB,EAAKjX,EAAI,GAAM8iE,EAAOx1E,GAAI4S,EAAG,GAAM4iE,EAAOx1E,GApB9C,IAoB4D,GAAM9P,KAAKu+E,YApBvE,MAsBM,MAAZtjB,GAAmC,GAAfA,EAASnrD,KAC7B6J,EAAEilE,KAtBI,GAuBF3jB,EAASnrD,GAAK,EACd6J,EAAE2e,KAAKnL,IAAc,GAARxT,EAAEilE,KAAa5+E,KAAKo9E,QAAQqB,SAAW,EAAI,GAExD9kE,EAAE2e,KAAKnL,IAAc,GAARxT,EAAEilE,KAAa5+E,KAAKo9E,QAAQqB,SAAW,EAAI,IAE5D3uE,GAAKq1E,GACLnlF,KAAKs9E,OAAOpY,EAAO,GAAKvrD,EACxB3Z,KAAKu9E,MAAMrY,EAAO,GAAKllE,KAAKk/E,kBAAkBvlE,KAG9C3Z,KAAKs9E,OAAO9gF,KAAKmd,GACjB3Z,KAAKu9E,MAAM/gF,KAAKwD,KAAKk/E,kBAAkBvlE,KAE3C6I,GAAK8iE,EAAOx1E,EAChB,CACJ,CACA,WAAAyvE,CAAY7sC,EAAMlwB,EAAGE,EAAG4K,EAAIC,EAAIrD,GAC5B,GAAI1H,GAAK8K,GAAM5K,GAAK6K,EAChB,OAAO,EACX,IAAIvK,EAAKR,EAAI8K,EAAIrK,EAAKP,EAAI6K,EAAI2E,EAAOnP,EAAQC,EAAIC,GAAKoP,EAAM,EAAMH,EAClE,MAAMszD,EAAO,GAAMxlF,KAAKo9E,QAAQr+D,QAChC,IAAI0mE,EAAQjjE,EAAI,EAAIgjE,EAAOxiE,EAAKqP,EAAKqzD,EAAQhjE,EAAI,EAAI8iE,EAAOviE,EAAKoP,EAC7D+xD,EAAMlyD,EACNyzD,GAAS,EACb,IAAK,IAAIjE,KAAO1hF,KAAKu9E,MACjB,GAAImE,EAAIxc,MAAQxyB,EAAM,CAClB,MAAMh8B,EAAKgrE,EAAI36D,GAAGnoB,OAClB,GAAU,GAAN8X,EACA,SACJ,IAAK,IAAI5G,EAAI,EAAGA,EAAI4G,EAAI5G,IAAK,CACzB,IAAIu+C,EAAKv+C,EAAI4G,EAAK,EAAI5G,EAAI,EAAI,EAC1B6U,EAAK+8D,EAAI36D,GAAGjX,GAAI8U,EAAK88D,EAAI16D,GAAGlX,GAAI+U,EAAK68D,EAAI36D,GAAGsnC,GAAKvpC,EAAK48D,EAAI16D,GAAGqnC,GACjE,IAAKrgC,EAASmB,oBAAoBs2D,EAAOC,EAAOp4D,EAAIC,EAAI5I,EAAIC,EAAIC,EAAIC,GAChE,SACJ,IAAI8gE,EAAK53D,EAASc,cAActM,EAAGE,EAAG4K,EAAIC,EAAI5I,EAAIC,EAAIC,EAAIC,GAC1D6gE,GAAS,EACTvB,EAAMztE,KAAKW,IAAI8sE,EAAKrhE,EAAQ6iE,EAAG,GAAKt4D,EAAIs4D,EAAG,GAAKr4D,GACpD,CACJ,CACJ,OAAIo4D,GACAvB,EAAMztE,KAAKC,IAAIsT,EAASk6D,EAAMoB,GACvBpB,EAAMlyD,GAGN,CACf,CACA,gBAAA2zD,CAAiBnzC,EAAMlwB,EAAGE,EAAG4K,EAAIC,EAAIrD,GACjC,IAAIk6D,EAAMpkF,KAAKu/E,YAAY7sC,EAAMlwB,EAAGE,EAAG4K,EAAIC,EAAIrD,GAC/C,GAAIk6D,GAAO,EACP,OAAO,KACXA,EAAM,EAAIA,EACV,IAAIphE,GAAMsK,EAAK9K,GAAK4hE,EAAKnhE,GAAMsK,EAAK7K,GAAK0hE,EACzC,MAAO,CAAC,EAASphE,EAAIC,GAAKD,EAAIC,EAClC,CACA,UAAAq8D,CAAW98D,EAAGE,EAAG4K,EAAIC,EAAI62D,GACrB,OAAW,GAAPA,EACO,CAAC5hE,EAAGE,GAER,CAAC4K,EAAK82D,GADJ5hE,EAAI8K,GACUC,EAAK62D,GADN1hE,EAAI6K,GAE9B,CACA,uBAAAkyD,CAAwBJ,EAAKG,EAAK76D,EAAIC,EAAIC,EAAIC,EAAIoF,GAC9C,IAAIlH,EAAKw8D,EAAI,GAAKH,EAAI,GAAIp8D,EAAKu8D,EAAI,GAAKH,EAAI,GACxCjtD,EAAM,EAASpP,EAAIC,GAEvB,GAAImP,GAAO/O,GADX6G,EAAUvT,KAAKW,IAAI4S,EAASnH,EAAQ8B,EAAKF,EAAIG,EAAKF,KACzB,MACrB,OACJ,IAAIkhE,EAAMnvE,KAAK2I,KAAK8S,GAAMqjD,EAAK1yD,EAAQs8D,EAAI,GAAK16D,EAAI06D,EAAI,GAAKz6D,GAAKmhE,EAAKhjE,EAAQ8B,EAAK26D,EAAI,GAAI16D,EAAK06D,EAAI,IACjG/nD,EAAM,EAAIvN,EAAU47D,EAAKE,EAAS,GAAOvQ,EAAKsQ,GAAKvzD,EAAOijD,EAAKh+C,EAAMuuD,EAAQvzD,EAAOszD,EAAKtuD,EAAMuuD,EACnG3G,EAAI,IAAMr8D,EAAKwP,EACf6sD,EAAI,IAAMp8D,EAAKuP,EACfgtD,EAAI,IAAMx8D,EAAKyP,EACf+sD,EAAI,IAAMv8D,EAAKwP,CACnB,CACA,eAAAyuD,GACI,IAAItxC,EAAQ,GACRq2C,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,GAC9B,IAAK,IAAIl8E,EAAI,EAAGA,EAAIk8E,EAAWrnF,OAAQmL,IAAK,CACxC,IAAIm8E,EAAQlmF,KAAKusC,IAAImD,gBAAgBu2C,EAAWl8E,IAChD,IAAK,IAAIsM,EAAI,EAAGA,EAAI6vE,EAAMtnF,OAAQyX,IAC9Bu5B,EAAMpzC,KAAK0pF,EAAM7vE,GACzB,CACA,IAAI8vE,EAASv2C,EAAMhxC,OACfwnF,EAAW,EAAIrvE,YAAY,EAAG/W,KAAKusC,IAAIC,UAC3C,IAAK,IAAI18B,EAAI,EAAGA,EAAIq2E,EAAQr2E,IAAK,CAC7B,IAAIC,EAAI6/B,EAAM9/B,GACd,IAAK,IAAI/F,EAAI,EAAGA,EAAIgG,EAAEnR,OAAQmL,IAC1Bq8E,EAASr2E,EAAEhG,GAAK,IACxB,CACA,IAAIs8E,EAAY,EAAItvE,YAAY,EAAGovE,GACnC,IAAK,IAAIr2E,EAAI,EAAGA,EAAIq2E,EAAQr2E,IAAK,CAC7B,IAAIC,EAAI6/B,EAAM9/B,GACd,IAAK,IAAI/F,EAAI,EAAGA,EAAIgG,EAAEnR,OAAQmL,IAC1Bs8E,EAAUv2E,IAAMs2E,EAASr2E,EAAEhG,GAAK,EACxC,CACA,IAAIu8E,EAAY,EAAI7sE,QAAQ4sE,GACxBE,EAAY,EAAIxvE,YAAY,EAAGovE,GAASK,EAAY,EACxD,IAAK,IAAI12E,EAAI,EAAGA,EAAIq2E,EAAQr2E,IAAK,CAC7B,IAAIC,EAAI6/B,EAAM02C,EAAUx2E,IACxB,IAAK,IAAI/F,EAAI,EAAGA,EAAIgG,EAAEnR,OAAQmL,IAAK,CAC/B,IAAIsM,EAAIrW,KAAKusC,IAAI4H,SAASpkC,EAAEhG,GAAIgG,EAAEhG,EAAI,EAAIgG,EAAEnR,OAASmL,EAAI,EAAI,IAChC,GAAzB/J,KAAKusC,IAAI2H,UAAU79B,IACnBkwE,EAAUz2E,IAClB,CACA02E,EAAY7vE,KAAKC,IAAI4vE,EAAWD,EAAUz2E,GAC9C,CACA,IAAapJ,EAAM,GACnB,IAAK,IAAIgQ,EAAK8vE,EAAW9vE,GAAM,EAAGA,IAC9B,IAAK,IAAI5G,EAAI,EAAGA,EAAIq2E,EAAQr2E,IACpBy2E,EAAUz2E,IAAM4G,GAChBhQ,EAAIlK,KAAKozC,EAAM02C,EAAUx2E,KAErC,OAAOpJ,CACX,CACA,eAAAm5E,CAAgBl7D,EAAIC,EAAIC,EAAIC,EAAI7Q,GAC5B,IAAIq3C,EAAK1mC,EAAKE,EAAIymC,EAAK1mC,EAAKF,EAAIyN,EAAM,EAASk5B,EAAIC,GAC/Ck7B,EAAKr0D,EAAM,EAAIne,EAAI0C,KAAK2I,KAAK8S,GAAO,EACxC,MAAO,CAACk5B,EAAKm7B,EAAIl7B,EAAKk7B,EAC1B,CACA,iBAAAtF,CAAkBtrE,EAAK6wE,GACnB,IAAIh6C,EAAM1sC,KAAKusC,IAAII,SAAS92B,GAAM+2B,EAAM5sC,KAAKusC,IAAIM,OAAOh3B,GACpD8wE,EAAM3mF,KAAKusC,IAAI8c,YAAY3c,GAAMk6C,EAAM5mF,KAAKusC,IAAI8c,YAAYzc,GAC5DmR,EAAK/9C,KAAKs9E,OAAO5wC,EAAM,GAAIsR,EAAKh+C,KAAKs9E,OAAO1wC,EAAM,GAClDjoB,EAAKo5B,EAAGzlB,KAAKpL,GAAItI,EAAKm5B,EAAGzlB,KAAKnL,GAAItI,EAAKm5B,EAAG1lB,KAAKpL,GAAIpI,EAAKk5B,EAAG1lB,KAAKnL,GAChEyyD,EAAM5/E,KAAK6/E,gBAAgBl7D,EAAIC,EAAIC,EAAIC,EAAI9kB,KAAKq+E,YACpD,MAAMn0D,EAh4BS,GAg4BkBlqB,KAAKo9E,QAAQr+D,QAC9C,IAAIiE,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EAAIiiE,EAASlwE,KAAKue,MAAMjS,EAAID,GACpD8jE,EAAa,EAAGC,EAAc,EAAGC,EAAa,EAAGC,EAAc,EAC/DC,EAAW,EAAGC,EAAY,EAAGC,EAAW,EAAGC,EAAY,EACvDC,GAAU,EACd,IAAK,IAAIx3E,EAAI,EAAGA,EAAI62E,EAAI/nF,OAAQkR,IAC5B,GAAI62E,EAAI72E,IAAM88B,EAAK,CACf,IAAI4uB,EAAKx7D,KAAKusC,IAAI2H,UAAUl0C,KAAKusC,IAAI4H,SAASzH,EAAKi6C,EAAI72E,KACvD,GAAU,GAAN0rD,EACA,SACJ,GAAIA,EAAK,EAAG,CACR8rB,GAAU,EACV,KACJ,CACA,IAAIC,GAAQ,EACZ,IAAK,IAAIx9E,EAAI,EAAGA,GAAiB,MAAZ28E,EAAmB,EAAIA,EAAS9nF,QAASmL,IACtD28E,EAAS38E,IAAM48E,EAAI72E,KACnBy3E,GAAQ,GAChB,IAAIpjE,EAAQH,EAAUrN,KAAKue,MAAMl1B,KAAKs9E,OAAOqJ,EAAI72E,GAAK,GAAGwoB,KAAKnL,GAAKvI,EAAI5kB,KAAKs9E,OAAOqJ,EAAI72E,GAAK,GAAGwoB,KAAKpL,GAAKvI,GAAKkiE,GAC9G,GAAIlwE,KAAKuF,IAAIiI,GAASN,EAAS,IAAK,CAChCyjE,GAAU,EACV,KACJ,CACInjE,EAAQ,GACJojE,GACAT,IACJI,EAAWP,EAAI72E,KAGXy3E,GACAR,IACJI,EAAYR,EAAI72E,GAExB,CACJ,IAAK,IAAIA,EAAI,EAAGA,EAAI82E,EAAIhoF,OAAQkR,IAC5B,GAAI82E,EAAI92E,IAAM48B,EAAK,CACf,IAAI8uB,EAAKx7D,KAAKusC,IAAI2H,UAAUl0C,KAAKusC,IAAI4H,SAASvH,EAAKg6C,EAAI92E,KACvD,GAAU,GAAN0rD,EACA,SACJ,GAAIA,EAAK,EAAG,CACR8rB,GAAU,EACV,KACJ,CACA,IAAIC,GAAQ,EACZ,IAAK,IAAIx9E,EAAI,EAAGA,GAAiB,MAAZ28E,EAAmB,EAAIA,EAAS9nF,QAASmL,IACtD28E,EAAS38E,IAAM68E,EAAI92E,KACnBy3E,GAAQ,GAChB,IAAIpjE,EAAQH,EAAUrN,KAAKue,MAAMl1B,KAAKs9E,OAAOsJ,EAAI92E,GAAK,GAAGwoB,KAAKnL,GAAKrI,EAAI9kB,KAAKs9E,OAAOsJ,EAAI92E,GAAK,GAAGwoB,KAAKpL,GAAKrI,GAAKgiE,GAC9G,GAAIlwE,KAAKuF,IAAIiI,GAASN,EAAS,IAAK,CAChCyjE,GAAU,EACV,KACJ,CACInjE,EAAQ,GACJojE,GACAP,IACJI,EAAWR,EAAI92E,KAGXy3E,GACAN,IACJI,EAAYT,EAAI92E,GAExB,CACJ,IAAIk1E,EAAO,EACPsC,GAAWR,EAAa,GAAKC,EAAc,GAAKC,EAAa,GAAKC,EAAc,GAC3EH,EAAa,GAAKC,EAAc,GAChCC,EAAa,GAAKC,EAAc,IAChCH,EAAa,GAAKE,EAAa,EACpChC,EAAO,GACF+B,EAAc,GAAKE,EAAc,KACtCjC,GAAQ,IACZ,IAAItuE,EAAK1W,KAAKs+E,YACVkJ,EAAM7iE,EAAI8iE,EAAM7iE,EAAI8iE,EAAM7iE,EAAI8iE,EAAM7iE,EACpC8iE,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EACzB,GAAR/C,GACAwC,EAAM7iE,EAAK,GAAMi7D,EAAI,GACrB6H,EAAM7iE,EAAK,GAAMg7D,EAAI,GACrB8H,EAAM7iE,EAAK,GAAM+6D,EAAI,GACrB+H,EAAM7iE,EAAK,GAAM86D,EAAI,GACrBgI,EAAMjjE,EAAK,GAAMi7D,EAAI,GACrBiI,EAAMjjE,EAAK,GAAMg7D,EAAI,GACrBkI,EAAMjjE,EAAK,GAAM+6D,EAAI,GACrBmI,EAAMjjE,EAAK,GAAM86D,EAAI,IAEhBoF,EAAO,GACZ4C,EAAMjjE,EAAKi7D,EAAI,GACfiI,EAAMjjE,EAAKg7D,EAAI,GACfkI,EAAMjjE,EAAK+6D,EAAI,GACfmI,EAAMjjE,EAAK86D,EAAI,GACX+G,EAAI/nF,OAAS,GAAkC,MAA7BoB,KAAKs9E,OAAO5wC,EAAM,GAAG1mB,OACvC4hE,GAAOhI,EAAI,GACXiI,GAAOjI,EAAI,IAEXgH,EAAIhoF,OAAS,GAAkC,MAA7BoB,KAAKs9E,OAAO1wC,EAAM,GAAG5mB,OACvC8hE,GAAOlI,EAAI,GACXmI,GAAOnI,EAAI,KAGVoF,EAAO,IACZ4C,EAAMjjE,EAAKi7D,EAAI,GACfiI,EAAMjjE,EAAKg7D,EAAI,GACfkI,EAAMjjE,EAAK+6D,EAAI,GACfmI,EAAMjjE,EAAK86D,EAAI,GACX+G,EAAI/nF,OAAS,GAAkC,MAA7BoB,KAAKs9E,OAAO5wC,EAAM,GAAG1mB,OACvC4hE,GAAOhI,EAAI,GACXiI,GAAOjI,EAAI,IAEXgH,EAAIhoF,OAAS,GAAkC,MAA7BoB,KAAKs9E,OAAO1wC,EAAM,GAAG5mB,OACvC8hE,GAAOlI,EAAI,GACXmI,GAAOnI,EAAI,KAGP,GAARoF,IACIhlF,KAAKusC,IAAI2Q,YAAYxQ,GAAK9tC,QAAU,GAAmC,GAA9BoB,KAAKusC,IAAIsQ,aAAanQ,IAA0C,MAA7B1sC,KAAKs9E,OAAO5wC,EAAM,GAAG1mB,MACjGhmB,KAAKgoF,iBAAiBt7C,EAAK,GAAMkzC,EAAI,GAAKoF,EAAM,GAAMpF,EAAI,GAAKoF,GAE/DhlF,KAAKusC,IAAI2Q,YAAYtQ,GAAKhuC,QAAU,GAAmC,GAA9BoB,KAAKusC,IAAIsQ,aAAajQ,IAA0C,MAA7B5sC,KAAKs9E,OAAO1wC,EAAM,GAAG5mB,MACjGhmB,KAAKgoF,iBAAiBp7C,EAAK,GAAMgzC,EAAI,GAAKoF,EAAM,GAAMpF,EAAI,GAAKoF,IAGvE,IAAIiD,EAASjoF,KAAK6lF,iBAAiBn5C,EAAK86C,EAAKC,EAAKC,EAAKC,EAAKz9D,GAAUg+D,EAASloF,KAAK6lF,iBAAiBn5C,EAAKk7C,EAAKC,EAAKC,EAAKC,EAAK79D,GAC9H,GAAc,MAAV+9D,GAA4B,MAAVC,EAAgB,CAClC,IAAIv3D,GAAmB,MAAVs3D,EAAiB,EAAIA,EAAO,KAAiB,MAAVC,EAAiB,EAAIA,EAAO,IAAMD,EAASC,EAC3FV,GAAO72D,EAAM,GACb82D,GAAO92D,EAAM,GACbi3D,GAAOj3D,EAAM,GACbk3D,GAAOl3D,EAAM,EACjB,CACA,IAAIw3D,EAASnoF,KAAK6lF,iBAAiBj5C,EAAK86C,EAAKC,EAAKH,EAAKC,EAAKv9D,GAAUk+D,EAASpoF,KAAK6lF,iBAAiBj5C,EAAKk7C,EAAKC,EAAKH,EAAKC,EAAK39D,GAC9H,GAAc,MAAVi+D,GAA4B,MAAVC,EAAgB,CAClC,IAAIz3D,GAAmB,MAAVw3D,EAAiB,EAAIA,EAAO,KAAiB,MAAVC,EAAiB,EAAIA,EAAO,IAAMD,EAASC,EAC3FV,GAAO/2D,EAAM,GACbg3D,GAAOh3D,EAAM,GACbm3D,GAAOn3D,EAAM,GACbo3D,GAAOp3D,EAAM,EACjB,CACA,GAAY,GAARq0D,IAAcsC,EAAS,CACvB,IAAI1B,EAAK,KACwB,MAA7B5lF,KAAKs9E,OAAO5wC,EAAM,GAAG1mB,MAAiBhmB,KAAKusC,IAAIujB,WAAWj6C,KAC1D+vE,EAAK5lF,KAAKqoF,mBAAmBnB,EAAUx6C,EAAK86C,EAAKC,EAAKC,EAAKC,GACjD,MAAN/B,IACA4B,EAAM5B,EAAG,GACT6B,EAAM7B,EAAG,IAEbA,EAAK5lF,KAAKqoF,mBAAmBlB,EAAWz6C,EAAKk7C,EAAKC,EAAKC,EAAKC,GAClD,MAANnC,IACAgC,EAAMhC,EAAG,GACTiC,EAAMjC,EAAG,KAGgB,MAA7B5lF,KAAKs9E,OAAO1wC,EAAM,GAAG5mB,MAAiBhmB,KAAKusC,IAAIujB,WAAWj6C,KAC1D+vE,EAAK5lF,KAAKqoF,mBAAmBjB,EAAUx6C,EAAK86C,EAAKC,EAAKH,EAAKC,GACjD,MAAN7B,IACA8B,EAAM9B,EAAG,GACT+B,EAAM/B,EAAG,IAEbA,EAAK5lF,KAAKqoF,mBAAmBhB,EAAWz6C,EAAKk7C,EAAKC,EAAKH,EAAKC,GAClD,MAANjC,IACAkC,EAAMlC,EAAG,GACTmC,EAAMnC,EAAG,IAGrB,CACA,IAAI0C,EAAKtoF,KAAKusC,IAAIupB,SAASjgD,IAAQmnC,GAAS2lB,iBAAmBia,GAAU8D,QAAU9D,GAAU2D,OACzFj8C,EAAOgkD,GAAM1L,GAAU8D,QAAU,GAAM1gF,KAAK+e,MAAQ,EACpD0C,EAAMzhB,KAAKq9E,QAAQxyC,QAAQh1B,GAC1B4L,IACDA,EAAMzhB,KAAKsqC,OAAO5gC,KAAKk6B,YAC3B,IAAIkxB,EAAK,CACLorB,KAAMrqE,EACN62B,MACAE,MACA7uC,KAAMuqF,EACNpkB,KAAM,IAAIpqC,GAAK0tD,EAAKC,EAAKC,EAAKC,GAC9B7oF,KAAM4X,EACN4tB,OACA7iB,OAEAszC,EAAK,CACLmrB,KAAMrqE,EACN62B,MACAE,MACA7uC,KAAMuqF,EACNpkB,KAAM,IAAIpqC,GAAK8tD,EAAKC,EAAKC,EAAKC,GAC9BjpF,KAAM4X,EACN4tB,OACA7iB,OAEJzhB,KAAK0d,MAAMlhB,KAAKs4D,GAChB90D,KAAK0d,MAAMlhB,KAAKu4D,GAChB/0D,KAAKu9E,MAAM/gF,KAAKwD,KAAKogF,iBAAiBtrB,IACtC90D,KAAKu9E,MAAM/gF,KAAKwD,KAAKogF,iBAAiBrrB,GAC1C,CACA,aAAAssB,CAAcxrE,EAAKuwD,EAAQmiB,GACvB,IAAIhN,EAAOxB,GAASpoE,KACpB,MAAM62E,EAAU,GACVC,EAAUlN,EAAKnuC,SAAS,KAC9B,IAAIzzB,EAAI3Z,KAAKs9E,OAAOznE,GAChB6yE,EAAU/uE,EAAEilE,IAAMrD,EAAKtB,iBACvBlhE,EAAMqtD,GAAU,EAAIA,EAAO1yD,WAAa,GACxCi1E,EAAWpN,EAAKM,YAAY4M,GAAUG,EAAWrN,EAAKO,YAAY2M,GAClEI,EAAWtN,EAAKd,YAAYgO,GAAUK,EAAMD,EAChD,IAAK,IAAI/4E,EAAI,EAAGA,EAAIiJ,EAAIna,OAAQkR,IAAK,CACjC,IAAIk6D,EAAKjxD,EAAIjH,OAAOhC,GAAIyP,EAAIg8D,EAAKnuC,SAAS48B,GAC1C,GAAS,GAALl6D,EACAg5E,GAAOvN,EAAKJ,WAAW,IAAKnR,OAE3B,CACD,IAAI+e,EAAMhwE,EAAIjH,OAAOhC,EAAI,GACzBg5E,GAAOvN,EAAKJ,WAAW4N,EAAK/e,GAAMwe,CACtC,CACA,IAAIQ,EAASzN,EAAKM,YAAYt8D,GAAI0pE,EAAS1N,EAAKO,YAAYv8D,GAC5D,EAAIpG,MAAM6vE,EAAQF,EAAMN,GACxB,EAAIrvE,MAAM8vE,GAAQ,GAAgB1N,EAAKpB,OAAS,KAChD,EAAI/gE,MAAM4vE,EAAQR,GAClB,EAAIpvE,MAAM6vE,EAAQT,GAClBG,EAAWA,EAAStsF,OAAO2sF,GAC3BJ,EAAWA,EAASvsF,OAAO4sF,GAC3BH,GAAOvN,EAAKd,YAAYl7D,GAAKipE,CACjC,CACA,GAAIzvE,EAAIna,OAAS,EAAG,CAChB,IAAIsqF,EAAK,IAAI9yD,EAAUuyD,EAAUC,EAAU,GAC3CD,EAAWO,EAAG7yD,MACduyD,EAAWM,EAAG5yD,KAClB,CACA,IAAI6yD,GAAQ,GAAMN,EAAUO,EAAO,GAAM7N,EAAKpB,OAASoB,EAAKhB,aAC5D,IAAK,IAAIzqE,EAAI,EAAGA,EAAI64E,EAAS/pF,OAAQkR,IACjC64E,EAAS74E,GAAK6J,EAAE2e,KAAKpL,IAAMi8D,EAAOR,EAAS74E,IAAM44E,EACjDE,EAAS94E,GAAK6J,EAAE2e,KAAKnL,IAAMi8D,EAAOR,EAAS94E,IAAM44E,EAAU1oF,KAAKw+E,KAEpE,IAAIx7D,EAAK,EAAGC,EAAK,EACbomE,EAASrpF,KAAKo9E,QAAQ9B,YAAY3hE,EAAEqM,KAAMrM,EAAEilE,KAChD,GAAI2J,EAAO,CACP,IAAIe,EAAY,CAAC,EAAG,EAAG,EAAG,GACtBC,EAAY,CAAC,EAAG,EAAG,EAAG,GACtBC,EAAS,CAAC,EAAG,EAAG,EAAG,GACnBC,EAAS,CAAC,EAAG,EAAG,EAAG,GACnBC,EAAOJ,EAAW94C,EAAMxwC,KAAKusC,IAAI8c,YAAY1vC,EAAEurD,MACnD,GAAkB,GAAd10B,EAAI5xC,OAAa,CACjB,IAAI+qF,EAAU,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAGtCD,EAF+B,GAA/B1pF,KAAKusC,IAAIqQ,WAAWjjC,EAAEurD,OAA+C,GAAjCllE,KAAKusC,IAAIqgB,aAAajzC,EAAEurD,OAC5DykB,EAAQnvE,QAAQxa,KAAKusC,IAAI2Q,YAAYvjC,EAAEurD,QAAU,EAC1CqkB,EAEAD,CACf,KACK,CACD,IAAIM,GAAU,EAAMC,GAAW,EAAMC,GAAQ,EAAMC,GAAU,EAC7D,MAAMj9D,EAAK9sB,KAAKusC,IAAI6e,MAAMzxC,EAAEurD,MAAOn4C,EAAK/sB,KAAKusC,IAAI8e,MAAM1xC,EAAEurD,MACzD,IAAK,IAAIp1D,EAAI,EAAGA,EAAI0gC,EAAI5xC,OAAQkR,IAAK,CACjC,MAAMkd,EAAKhtB,KAAKusC,IAAI6e,MAAM5a,EAAI1gC,IAAKmd,EAAKjtB,KAAKusC,IAAI8e,MAAM7a,EAAI1gC,IACvDkd,EAAKF,EAAK,MACV88D,GAAU,GACV58D,EAAKF,EAAK,MACV+8D,GAAW,GACX58D,EAAKF,EAAK,MACV+8D,GAAQ,GACR78D,EAAKF,EAAK,MACVg9D,GAAU,EAClB,CACIH,IACKC,EACLH,EAAOH,EACFO,EACLJ,EAAOD,EACFM,IACLL,EAAOF,GACf,CACA,IAAK,IAAI15E,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAImjB,EAAK,EAAGC,EAAK,EACF,GAAXw2D,EAAK55E,GACLmjB,EAAK,GAAMo2D,EAAO,GAAK,GAAMR,EAAWH,EACxB,GAAXgB,EAAK55E,GACVmjB,GAAM,GAAMo2D,EAAO,IAAMP,EAAM,GAAMD,GAAYH,EACjC,GAAXgB,EAAK55E,GACVojB,GAAM,IAAMm2D,EAAO,GAAK,GAAMA,EAAO,KAAOrpF,KAAKw+E,KACjC,GAAXkL,EAAK55E,KACVojB,GAAM,IAAMm2D,EAAO,GAAK,GAAMA,EAAO,IAAMrpF,KAAKw+E,MACpD,EAAIrlE,MAAMwvE,EAAU11D,GACpB,EAAI9Z,MAAMyvE,EAAU11D,GACpB,IAAIyxD,EAAO3kF,KAAK4kF,oBAAoB+D,EAAUC,EAAU,MAAM,GAG9D,GAFA,EAAIzvE,MAAMwvE,GAAW11D,GACrB,EAAI9Z,MAAMyvE,GAAW11D,GACT,GAARyxD,EAAW,CACX3hE,EAAKiQ,EACLhQ,EAAKiQ,EACL,KACJ,CACJ,CACA,GAAU,GAANlQ,GAAiB,GAANC,EACX,OAAO,CACf,KACK,CACD,MAAM8xD,EAAM,EAAIz9D,IAAIsxE,GAAW3T,EAAM,EAAIr+D,IAAI+xE,GAAW3T,EAAM,EAAI19D,IAAIsxE,GAAW1T,EAAM,EAAIt+D,IAAIgyE,GAAW17D,EAAK,IAAO6nD,EAAME,GAAM9nD,EAAK,IAAO6nD,EAAME,GAC9Iz9C,EAAM,EAAIz3B,KAAKo9E,QAAQr+D,QAAU/e,KAAKsqC,OAAO5gC,KAAKqgC,SAAW8yC,GAAgBE,aAAe,GAAMpmE,KAAKC,IAAIq+D,EAAM/nD,EAAIgoD,EAAM/nD,GAC3HwqD,EAAMgR,EAAS/pF,OACrB,IAAIorF,EAAQrB,EAAS15E,MAAM,GAAIg7E,EAAQrB,EAAS35E,MAAM,GACtD,IAAK,IAAIa,EAAI,EAAGA,EAAI6nE,EAAK7nE,IACrBk6E,EAAMl6E,IAAMk6E,EAAMl6E,GAAKod,GAAMuK,EAAMvK,EACnC+8D,EAAMn6E,IAAMm6E,EAAMn6E,GAAKqd,GAAMsK,EAAMtK,EAEvC,IAAIoH,EAAY,EAAG21D,EAAU,EAAGn6B,EAAU,EAC1C,IAAK,IAAIq0B,EAAM,IAAOzqE,EAAE2e,KAAKjF,GAAK1Z,EAAE2e,KAAKhF,IAAK8wD,EAAM,IAAMpkF,KAAKo9E,QAAQr+D,QAASqlE,GAAO,GAAMpkF,KAAKo9E,QAAQr+D,QAAS,CAC/G,IAAIorE,GAAa,EACjB,IAAK,IAAI95D,EAAM,EAAGA,EAAM,EAAI1Z,KAAK+M,GAAI2M,GAAO,EAAIzM,EAAQ,CACpD,IAAIqP,EAAKmxD,EAAMztE,KAAK2a,IAAIjB,GAAM6C,EAAKkxD,EAAMztE,KAAK4a,IAAIlB,GAClD,EAAIlX,MAAM6wE,EAAO/2D,GACjB,EAAI9Z,MAAM8wE,EAAO/2D,GACjB,IAAIyxD,EAAO3kF,KAAK4kF,oBAAoBoF,EAAOC,EAAO,MAAM,GACxD,EAAI9wE,MAAM6wE,GAAQ/2D,GAClB,EAAI9Z,MAAM8wE,GAAQ/2D,GACN,GAARyxD,IACAwF,GAAa,GACjB,IAAIv/B,EAAQ,GAAK+5B,EAAO3kF,KAAK6jF,kBAAkBlqE,EAAE2e,KAAKpL,GAAK+F,EAAItZ,EAAE2e,KAAKnL,GAAK+F,EAAI,IAAO,EAAIkxD,GACzE,GAAb7vD,GAAkBq2B,EAAQr2B,KAC1BA,EAAYq2B,EACZs/B,EAAU9F,EACVr0B,EAAU1/B,EACVrN,EAAKiQ,EACLhQ,EAAKiQ,EAEb,CACA,GAAIi3D,EACA,KACR,CACJ,CACA,IAAInL,EAAMh/E,KAAKo9E,QAAQ9B,YAAY,IAAK3hE,EAAEilE,KAC1C,MAAMK,EAAU,IAChB,IAAI9B,EAAK,CACLjY,KAAM,EACNl/C,KAAM,IACN44D,IAAKjlE,EAAEilE,IACPn9D,IAAK9H,EAAE8H,IACP6W,KAAM,IAAImB,EAAK9f,EAAE2e,KAAKpL,GAAKlK,EAAIrJ,EAAE2e,KAAKnL,GAAKlK,EAAI,GAAM+7D,EAAI,GAAKC,EAAS,GAAMD,EAAI,GAAKC,IAG1F,GADAj/E,KAAKs9E,OAAO9gF,KAAK2gF,GACbpkE,EAAIna,OAAS,EAAG,CAChB,MAAMwrF,EAAS5B,EAAU7uE,EAAEilE,IAC3BI,EAAMh/E,KAAKo9E,QAAQ9B,YAAYviE,EAAKqxE,GACpC,IAAI3wB,EAAK,CACLyL,KAAM,EACNl/C,KAAMjN,EACN6lE,IAAKwL,EACL3oE,IAAK9H,EAAE8H,IACP6W,KAAM,IAAImB,EAAK0jD,EAAG7kD,KAAKpL,GAAK,GAAM27D,EAAWlvE,EAAEilE,IAAMrD,EAAKtB,iBAAmB,GAAM+E,EAAI,GAAI7B,EAAG7kD,KAAKnL,GAAK,GAAgBxT,EAAEilE,IAAK,GAAMI,EAAI,GAAKC,EAAS,GAAMD,EAAI,GAAKC,IAE1Kj/E,KAAKs9E,OAAO9gF,KAAKi9D,EACrB,CACA,EAAItgD,MAAMwvE,EAAU3lE,GACpB,EAAI7J,MAAMyvE,EAAU3lE,GACpB,IAAI0G,EAAO,EAAIrS,IAAIqxE,GAAW/+D,EAAO,EAAItS,IAAIsxE,GACzClH,EAAM,CACNxc,KAAM,EACNgb,KAAM,EACNvmD,IAAK,IAAIzB,EAAIvO,EAAMC,EAAM,EAAIhT,IAAI+xE,GAAYh/D,EAAM,EAAI/S,IAAIgyE,GAAYh/D,GACvE7C,GAAI4hE,EACJ3hE,GAAI4hE,GAGR,OADA5oF,KAAKu9E,MAAM/gF,KAAKklF,IACT,CACX,CACA,iBAAAxC,CAAkBvlE,GACd,IAAI5O,EAAI,CACJm6D,KAAMvrD,EAAEurD,KACRgb,KAAM,EACNvmD,IAAK,IAAIzB,EACTnR,GAAI,GACJC,GAAI,IAER,MAAMu0D,EAAOxB,GAASpoE,KACtB,IAAIg3E,EAAW,GAAIC,EAAW,GAC1BE,EAAM,EAAGuB,EAAU,EACvB,GAAc,MAAV1wE,EAAEqM,KACF,IAAK,IAAIlW,EAAI,EAAGA,EAAI6J,EAAEqM,KAAKpnB,OAAQkR,IAAK,CACpC,IAAIsrE,EAAMzhE,EAAEqM,KAAKlU,OAAOhC,GACpB/F,EAAIwxE,EAAKnuC,SAASguC,GACtB,GAAIrxE,GAAK,EAAG,CACR,GAAW,GAAP++E,EACAH,EAAWpN,EAAKM,YAAY9xE,GAC5B6+E,EAAWrN,EAAKO,YAAY/xE,GAC5BsgF,EAAU,MAET,CACD,IAAIrB,EAASzN,EAAKM,YAAY9xE,GAAIk/E,EAAS1N,EAAKO,YAAY/xE,GACxDi/E,EAAOpqF,OAAS,IAChB,EAAIua,MAAM6vE,EAAQF,GAClBH,EAAWA,EAAStsF,OAAO2sF,GAC3BJ,EAAWA,EAASvsF,OAAO4sF,GAC3BoB,IAER,CACAvB,GAAOvN,EAAKd,YAAY1wE,EAC5B,MAEI++E,GAAOvN,EAAKlB,aAChB,GAAIvqE,EAAI6J,EAAEqM,KAAKpnB,OAAS,EAAG,CACvB,IAAIy8E,EAAM1hE,EAAEqM,KAAKlU,OAAOhC,EAAI,GAC5Bg5E,GAAOvN,EAAKJ,WAAWC,EAAKC,EAChC,CACJ,CAEJ,GAAIsN,EAAS/pF,OAAS,EAAG,CACrB,GAAIyrF,EAAU,EAAG,CACb,IAAInB,EAAK,IAAI9yD,EAAUuyD,EAAUC,EAAU,GAC3CD,EAAWO,EAAG7yD,MACduyD,EAAWM,EAAG5yD,KAClB,CACA,IAAI6yD,GAAQ,GAAML,EAAKM,EAAO,GAAM7N,EAAKpB,OAASoB,EAAKhB,aACnDmO,EAAU/uE,EAAEilE,IAAMrD,EAAKtB,iBAC3B,IAAK,IAAInqE,EAAI,EAAGA,EAAI64E,EAAS/pF,OAAQkR,IACjC64E,EAAS74E,GAAK6J,EAAE2e,KAAKpL,IAAMi8D,EAAOR,EAAS74E,IAAM44E,EACjDE,EAAS94E,GAAK6J,EAAE2e,KAAKnL,IAAMi8D,EAAOR,EAAS94E,IAAM44E,EAAU1oF,KAAKw+E,KAEpEzzE,EAAEgc,GAAK4hE,EACP59E,EAAEic,GAAK4hE,EACP,IAAIj/D,EAAO,EAAIrS,IAAIqxE,GAAW/+D,EAAO,EAAItS,IAAIsxE,GAC7C79E,EAAE4uB,IAAM,IAAIzB,EAAIvO,EAAMC,EAAM,EAAIhT,IAAI+xE,GAAYh/D,EAAM,EAAI/S,IAAIgyE,GAAYh/D,EAC9E,MAEI7e,EAAE4uB,IAAMzB,EAAIG,SAAS1e,EAAE2e,MACnBvtB,EAAE4uB,IAAI/W,EAAI,GAAK7X,EAAE4uB,IAAI9W,EAAI,IACzB9X,EAAEgc,GAAK,CAAChc,EAAE4uB,IAAIhQ,OAAQ5e,EAAE4uB,IAAI9P,OAAQ9e,EAAE4uB,IAAI9P,OAAQ9e,EAAE4uB,IAAIhQ,QACxD5e,EAAEic,GAAK,CAACjc,EAAE4uB,IAAI/P,OAAQ7e,EAAE4uB,IAAI/P,OAAQ7e,EAAE4uB,IAAI7P,OAAQ/e,EAAE4uB,IAAI7P,SAGhE,OAAO/e,CACX,CACA,gBAAAq1E,CAAiBxwE,GACb,IAAI7E,EAAI,CACJm6D,KAAM,EACNgb,KAAMtwE,EAAEswE,KACRvmD,IAAK,IAAIzB,EACTnR,GAAI,GACJC,GAAI,IAER,GAAIpX,EAAE7R,MAAQ6+E,GAAU2D,QAAU3wE,EAAE7R,MAAQ6+E,GAAUuD,QAAUvwE,EAAE7R,MAAQ6+E,GAAU+D,OAChF51E,EAAEgc,GAAK,CAACnX,EAAEs0D,KAAKv/C,GAAI/U,EAAEs0D,KAAKr/C,IAC1B9Z,EAAEic,GAAK,CAACpX,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKp/C,QAEzB,CACD,MAAM9B,EAAKpT,EAAEs0D,KAAKr/C,GAAKjV,EAAEs0D,KAAKv/C,GAAI1B,EAAKrT,EAAEs0D,KAAKp/C,GAAKlV,EAAEs0D,KAAKt/C,GACpD0lE,EAAO16E,EAAE00B,KAAO3tB,KAAK2I,KAAK0D,EAAKA,EAAKC,EAAKA,GACzCqoC,EAAKg/B,EAAOrnE,EAAIsoC,GAAM++B,EAAOtnE,EAC/BpT,EAAE7R,MAAQ6+E,GAAU8D,SACpB31E,EAAEgc,GAAK,CAACnX,EAAEs0D,KAAKv/C,GAAK2mC,EAAI17C,EAAEs0D,KAAKv/C,GAAK2mC,EAAI17C,EAAEs0D,KAAKr/C,GAAKymC,EAAI17C,EAAEs0D,KAAKr/C,GAAKymC,GACpEvgD,EAAEic,GAAK,CAACpX,EAAEs0D,KAAKt/C,GAAK2mC,EAAI37C,EAAEs0D,KAAKt/C,GAAK2mC,EAAI37C,EAAEs0D,KAAKp/C,GAAKymC,EAAI37C,EAAEs0D,KAAKp/C,GAAKymC,KAGpExgD,EAAEgc,GAAK,CAACnX,EAAEs0D,KAAKv/C,GAAI/U,EAAEs0D,KAAKr/C,GAAKymC,EAAI17C,EAAEs0D,KAAKr/C,GAAKymC,GAC/CvgD,EAAEic,GAAK,CAACpX,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKp/C,GAAKymC,EAAI37C,EAAEs0D,KAAKp/C,GAAKymC,GAEvD,CAKA,OAJAxgD,EAAE4uB,IAAInX,EAAI,EAAIlL,IAAIvM,EAAEgc,IAAMnX,EAAE9Q,KAC5BiM,EAAE4uB,IAAIjX,EAAI,EAAIpL,IAAIvM,EAAEic,IAAMpX,EAAE9Q,KAC5BiM,EAAE4uB,IAAI/W,EAAI,EAAIhM,IAAI7L,EAAEgc,IAAMhc,EAAE4uB,IAAInX,EAAI5S,EAAE9Q,KACtCiM,EAAE4uB,IAAI9W,EAAI,EAAIjM,IAAI7L,EAAEic,IAAMjc,EAAE4uB,IAAIjX,EAAI9S,EAAE9Q,KAC/BiM,CACX,CACA,gBAAAi9E,CAAiBt1C,EAAM1vB,EAAIC,GACvB,IAAI9gB,EAAInC,KAAKs9E,OAAO5qC,EAAO,GAC3BvwC,EAAEm2B,KAAKpL,IAAMlK,EACb7gB,EAAEm2B,KAAKnL,IAAMlK,EACb,IAAK,IAAInT,EAAI9P,KAAKu9E,MAAM3+E,OAAS,EAAGkR,GAAK,EAAGA,IAAK,CAC7C,IAAI/E,EAAI/K,KAAKu9E,MAAMztE,EAAI,GACd,MAAL/E,GAAaA,EAAEm6D,MAAQxyB,IAE3B3nC,EAAE4uB,IAAInX,GAAKQ,EACXjY,EAAE4uB,IAAIjX,GAAKO,EACX,EAAI9J,MAAMpO,EAAEgc,GAAI/D,GAChB,EAAI7J,MAAMpO,EAAEic,GAAI/D,GACpB,CACJ,CACA,WAAAsnE,CAAY/nE,EAAGE,EAAGE,EAAGC,GACjB,IAAI2nE,EAAS,GACb,IAAK,IAAIz/E,KAAK/K,KAAKu9E,MACXvvD,EAAS6B,eAAerN,EAAGE,EAAGE,EAAGC,EAAG9X,EAAE4uB,IAAInX,EAAGzX,EAAE4uB,IAAIjX,EAAG3X,EAAE4uB,IAAI/W,EAAG7X,EAAE4uB,IAAI9W,IACrE2nE,EAAOhuF,KAAKuO,GACpB,OAAOy/E,CACX,CACA,mBAAA5F,CAAoB79D,EAAIC,EAAIu2D,EAAOsH,GAClB,MAATtH,IACAA,EAAQv9E,KAAKu9E,OACjB,IAAIkN,EAAO,EACX,MAAM9S,EAAM5wD,EAAGnoB,OAAQ8rF,EAAOnN,EAAM3+E,OACpC,IAAIqtB,EAAK,IAAIiM,EAAOyyD,EAAK,IAAIzyD,EAC7B,IAAK,IAAIxP,EAAK,EAAGA,EAAKivD,EAAKjvD,IAAM,CAC7B,IAAIC,EAAKD,EAAKivD,EAAM,EAAIjvD,EAAK,EAAI,EACjCuD,EAAGzJ,EAAI7L,KAAKW,IAAIyP,EAAG2B,GAAK3B,EAAG4B,IAAO,EAClCsD,EAAGvJ,EAAI/L,KAAKW,IAAI0P,EAAG0B,GAAK1B,EAAG2B,IAAO,EAClCsD,EAAGrJ,EAAIjM,KAAKC,IAAImQ,EAAG2B,GAAK3B,EAAG4B,IAAOsD,EAAGzJ,EAAI,EACzCyJ,EAAGpJ,EAAIlM,KAAKC,IAAIoQ,EAAG0B,GAAK1B,EAAG2B,IAAOsD,EAAGvJ,EAAI,EACzC,IAAK,IAAIrM,EAAI,EAAGA,EAAIq0E,EAAMr0E,IAAK,CAC3B,IAAIqrE,EAAMnE,EAAMlnE,GAChB,GAAc,MAAVqrE,EAAI36D,GACJ,SAKJ,GAJA4jE,EAAGnoE,EAAIk/D,EAAI/nD,IAAInX,EAAI,EACnBmoE,EAAGjoE,EAAIg/D,EAAI/nD,IAAIjX,EAAI,EACnBioE,EAAG/nE,EAAI8+D,EAAI/nD,IAAI/W,EAAI,EACnB+nE,EAAG9nE,EAAI6+D,EAAI/nD,IAAI9W,EAAI,GACdoJ,EAAG8M,WAAW4xD,GACf,SACJ,IAAIC,EAAMlJ,EAAI36D,GAAGnoB,OACjB,IAAK,IAAIw2E,EAAK,EAAGA,EAAKwV,EAAKxV,IAAM,CAC7B,IAAIC,EAAKD,EAAKwV,EAAM,EAAIxV,EAAK,EAAI,EAKjC,GAJAuV,EAAGnoE,EAAI7L,KAAKW,IAAIoqE,EAAI36D,GAAGquD,GAAKsM,EAAI36D,GAAGsuD,IAAO,EAC1CsV,EAAGjoE,EAAI/L,KAAKW,IAAIoqE,EAAI16D,GAAGouD,GAAKsM,EAAI16D,GAAGquD,IAAO,EAC1CsV,EAAG/nE,EAAIjM,KAAKC,IAAI8qE,EAAI36D,GAAGquD,GAAKsM,EAAI36D,GAAGsuD,IAAOsV,EAAGnoE,EAAI,EACjDmoE,EAAG9nE,EAAIlM,KAAKC,IAAI8qE,EAAI16D,GAAGouD,GAAKsM,EAAI16D,GAAGquD,IAAOsV,EAAGjoE,EAAI,EAC5CuJ,EAAG8M,WAAW4xD,GAAnB,CAEA,GAAI38D,EAASmB,oBAAoBpI,EAAG2B,GAAK1B,EAAG0B,GAAK3B,EAAG4B,GAAK3B,EAAG2B,GAAK+4D,EAAI36D,GAAGquD,GAAKsM,EAAI16D,GAAGouD,GAAKsM,EAAI36D,GAAGsuD,GAAKqM,EAAI16D,GAAGquD,IAAM,CAC9G,GAAIwP,EACA,OAAO,EACX4F,IACA,KACJ,CACA,GAAW,GAAPG,EACA,KARQ,CAShB,CACJ,CACJ,CACA3+D,EAAGzJ,EAAI,EAAIlL,IAAIyP,GACfkF,EAAGvJ,EAAI,EAAIpL,IAAI0P,GACfiF,EAAGrJ,EAAI,EAAIhM,IAAImQ,GAAMkF,EAAGzJ,EACxByJ,EAAGpJ,EAAI,EAAIjM,IAAIoQ,GAAMiF,EAAGvJ,EACxB,IAAK,IAAI5S,EAAI46E,EAAO,EAAG56E,GAAK,EAAGA,IAAK,CAChC,IAAI4xE,EAAMnE,EAAMztE,GAKhB,GAJA66E,EAAGnoE,EAAIk/D,EAAI/nD,IAAInX,EACfmoE,EAAGjoE,EAAIg/D,EAAI/nD,IAAIjX,EACfioE,EAAG/nE,EAAI8+D,EAAI/nD,IAAI/W,EACf+nE,EAAG9nE,EAAI6+D,EAAI/nD,IAAI9W,EACVoJ,EAAG8M,WAAW4xD,GAAnB,CAEA,IAAK,IAAI5gF,EAAI23E,EAAI36D,GAAGnoB,OAAS,EAAGmL,GAAK,EAAGA,IACpC,GAAIikB,EAASC,eAAeyzD,EAAI36D,GAAGhd,GAAI23E,EAAI16D,GAAGjd,GAAIgd,EAAIC,GAAK,CACvD,GAAI69D,EACA,OAAO,EACX4F,IACA,KACJ,CACJ,IAAK,IAAI1gF,EAAI,EAAGA,EAAI4tE,EAAK5tE,IACrB,GAAIikB,EAASC,eAAelH,EAAGhd,GAAIid,EAAGjd,GAAI23E,EAAI36D,GAAI26D,EAAI16D,IAAK,CACvD,GAAI69D,EACA,OAAO,EACX4F,IACA,KACJ,CAdQ,CAehB,CACA,OAAOA,CACX,CACA,kBAAApC,CAAmB9vB,EAAIC,EAAI7zC,EAAIC,EAAIC,EAAIC,GACnC,GAAU,GAANyzC,GAAiB,GAANC,EACX,OAAO,KACX,IAAK,IAAI1oD,EAAI,EAAGA,EAAI9P,KAAK0d,MAAM9e,OAAQkR,IAAK,CACxC,IAAIF,EAAI5P,KAAK0d,MAAM5N,GACnB,GAAkC,GAA9B9P,KAAKusC,IAAI2H,UAAUtkC,EAAEswE,OAAclgF,KAAKusC,IAAIupB,SAASlmD,EAAEswE,OAASljC,GAAS+Y,gBACzE,SACJ,IAAI80B,GAAM,EACV,GAAI7qF,KAAKusC,IAAII,SAAS/8B,EAAEswE,OAAS3nB,GAAMv4D,KAAKusC,IAAIM,OAAOj9B,EAAEswE,OAAS1nB,OAC7D,IAAIx4D,KAAKusC,IAAII,SAAS/8B,EAAEswE,OAAS1nB,GAAMx4D,KAAKusC,IAAIM,OAAOj9B,EAAEswE,OAAS3nB,EAGnE,SAFAsyB,GAAM,CAEE,CACZ,IAAI/mE,EAAKE,EAAUrN,KAAKue,MAAMtlB,EAAEs0D,KAAKp/C,GAAKlV,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKr/C,GAAKjV,EAAEs0D,KAAKv/C,IAAKhO,KAAKue,MAAMpQ,EAAKF,EAAIC,EAAKF,IAAOd,EAC7G,GAAKC,GAAM,GAAKA,EAAK,GAAMA,EAAK,KAAOA,GAAM,IACzC,SACJ,IAAI8hE,EAAK53D,EAASc,cAAclf,EAAEs0D,KAAKv/C,GAAI/U,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKr/C,GAAIjV,EAAEs0D,KAAKp/C,GAAIH,EAAIC,EAAIC,EAAIC,GAWxF,OAVkC,GAA9B9kB,KAAKusC,IAAIknC,cAAcjb,KACnBqyB,GACAj7E,EAAEs0D,KAAKv/C,GAAKihE,EAAG,GACfh2E,EAAEs0D,KAAKt/C,GAAKghE,EAAG,KAGfh2E,EAAEs0D,KAAKr/C,GAAK+gE,EAAG,GACfh2E,EAAEs0D,KAAKp/C,GAAK8gE,EAAG,KAGhBA,CACX,CACA,OAAO,IACX,CACA,qBAAAxE,CAAsBvrE,GAClB,IAAI0iD,EAAKv4D,KAAKusC,IAAII,SAAS92B,GAAM2iD,EAAKx4D,KAAKusC,IAAIM,OAAOh3B,GAClDi1E,EAAK9qF,KAAKusC,IAAI8c,YAAYkP,GAAKwyB,EAAK/qF,KAAKusC,IAAI8c,YAAYmP,GACzDza,EAAK/9C,KAAKs9E,OAAO/kB,EAAK,GAAIva,EAAKh+C,KAAKs9E,OAAO9kB,EAAK,GAChD7zC,EAAKo5B,EAAGzlB,KAAKpL,GAAItI,EAAKm5B,EAAGzlB,KAAKnL,GAAItI,EAAKm5B,EAAG1lB,KAAKpL,GAAIpI,EAAKk5B,EAAG1lB,KAAKnL,GAChEnK,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EAAIiiE,EAASlwE,KAAKue,MAAMjS,EAAID,GACpDkkE,EAAW,EAAGC,EAAY,EAAGC,EAAW,EAAGC,EAAY,EAC3D,IAAK,IAAIv3E,EAAI,EAAGA,EAAIg7E,EAAGlsF,OAAQkR,IAC3B,GAAIg7E,EAAGh7E,IAAM0oD,EAET,GADYx0C,EAAUrN,KAAKue,MAAMl1B,KAAKs9E,OAAOwN,EAAGh7E,GAAK,GAAGwoB,KAAKnL,GAAKvI,EAAI5kB,KAAKs9E,OAAOwN,EAAGh7E,GAAK,GAAGwoB,KAAKpL,GAAKvI,GAAKkiE,GAChG,EAAG,CACX,GAAgB,GAAZK,EACA,OAAO,KACXA,EAAW4D,EAAGh7E,EAClB,KACK,CACD,GAAiB,GAAbq3E,EACA,OAAO,KACXA,EAAY2D,EAAGh7E,EACnB,CAER,IAAK,IAAIA,EAAI,EAAGA,EAAIi7E,EAAGnsF,OAAQkR,IAC3B,GAAIi7E,EAAGj7E,IAAMyoD,EAET,GADYv0C,EAAUrN,KAAKue,MAAMl1B,KAAKs9E,OAAOyN,EAAGj7E,GAAK,GAAGwoB,KAAKnL,GAAKrI,EAAI9kB,KAAKs9E,OAAOyN,EAAGj7E,GAAK,GAAGwoB,KAAKpL,GAAKrI,GAAKgiE,GAChG,EAAG,CACX,GAAgB,GAAZO,EACA,OAAO,KACXA,EAAW2D,EAAGj7E,EAClB,KACK,CACD,GAAiB,GAAbu3E,EACA,OAAO,KACXA,EAAY0D,EAAGj7E,EACnB,CAER,IAAIk7E,GAAW9D,EAAW,EAAI,EAAI,IAAMC,EAAY,EAAI,EAAI,GAAI8D,GAAS7D,EAAW,EAAI,EAAI,IAAMC,EAAY,EAAI,EAAI,GACtH,GAAe,GAAX2D,GAAyB,GAATC,EAChB,MAAO,CAAC/D,EAAW,EAAIA,EAAWC,GACtC,GAAe,GAAX6D,GAAyB,GAATC,EAChB,MAAO,CAAC7D,EAAW,EAAIA,EAAWC,GACtC,GAAe,GAAX2D,GAAyB,GAATC,EAAY,CAC5B,GAAI/D,EAAW,GAAKE,EAAW,EAC3B,MAAO,CAACF,EAAUE,GACtB,GAAID,EAAY,GAAKE,EAAY,EAC7B,MAAO,CAACF,EAAWE,GACvB,IAAIzH,EAAM5/E,KAAK6/E,gBAAgBl7D,EAAIC,EAAIC,EAAIC,EAAI9kB,KAAKq+E,YAGpD,OAFkBr+E,KAAK6jF,kBAAkB,IAAOl/D,EAAKE,GAAM+6D,EAAI,GAAI,IAAOh7D,EAAKE,GAAM86D,EAAI,IACtE5/E,KAAK6jF,kBAAkB,IAAOl/D,EAAKE,GAAM+6D,EAAI,GAAI,IAAOh7D,EAAKE,GAAM86D,EAAI,IAE/E,CAACsH,EAAW,EAAIA,EAAWE,GAE3B,CAACD,EAAY,EAAIA,EAAYE,EAC5C,CACA,OAAe,GAAX2D,GAAyB,GAATC,EACA,GAAZ7D,EACO,CAACD,EAAWE,GAEZ,CAACH,EAAUE,GAEX,GAAX4D,GAAyB,GAATC,EACA,GAAZ/D,EACO,CAACC,EAAWE,GAEZ,CAACH,EAAUE,GAEnB,IACX,CACA,YAAA5F,CAAa9uC,EAAM1sB,EAAMvE,EAAKm9D,GAC1B,IAAK2G,EAAI2F,GAAMlrF,KAAKo9E,QAAQ9B,YAAYt1D,EAAM44D,GAC1CjlE,EAAI3Z,KAAKs9E,OAAO5qC,EAAO,GACvBxlB,EAAKvT,EAAE2e,KAAKpL,GAAIC,EAAKxT,EAAE2e,KAAKnL,GAAIkG,EAAK,GAAMkyD,EAAIjyD,EAAK,GAAM43D,EAC1DC,EAAa,GACjB,IAAK,IAAIxxE,KAAK3Z,KAAKusC,IAAI8c,YAAY3W,GAAO,CACtC,IAAI1vB,EAAKhjB,KAAKs9E,OAAO3jE,EAAI,GAAG2e,KAAKpL,GAAKA,EAAIjK,EAAKjjB,KAAKs9E,OAAO3jE,EAAI,GAAG2e,KAAKnL,GAAKA,EAC5Eg+D,EAAW3uF,KAAKma,KAAKue,MAAMjS,EAAID,GACnC,CACA,IAAIooE,EAAS,IAAOzxE,EAAE2e,KAAKjF,GAAK1Z,EAAE2e,KAAKhF,IAAK+3D,EAAS,GAAMrrF,KAAK+e,MAC7CusE,EAAQ7nE,EAAZ,GACX8Q,EAAYh3B,OAAO4sB,kBAAmBk6D,EAAS,EAAGC,EAAS,EAC3Dv9D,EAAK,CAAC,EAAG,EAAG,EAAG,GAAIC,EAAK,CAAC,EAAG,EAAG,EAAG,GAClCukE,EAAOl4D,EAAK+3D,EAJgE,EAI9CC,EAAQG,EAAOl4D,EAAK83D,EAJ0B,EAIRC,EACpEI,EAAWzrF,KAAKuqF,YAAYr9D,EAAKq+D,EAAMp+D,EAAKq+D,EAAM,EAAID,EAAM,EAAIC,GACpE,IAAK,IAAInrE,EAAO,EAAGA,EAN6D,EAM9CA,IAAQ,CACtC,IAAI+jE,EAAMgH,EAAS/qE,EAAOgrE,EAC1B,IAAK,IAAIh7D,EAAM,EAAGA,EAPP,GAOuBA,IAAO,CACrC,IAAIvM,EAAKwnE,EAAQj7D,EACbrN,EAAKohE,EAAMztE,KAAK2a,IAAIxN,GAAKb,EAAKmhE,EAAMztE,KAAK4a,IAAIzN,GAC7Ca,EAAKuI,EAAKlK,EAAKqQ,EAAIxO,EAAKqI,EAAKlK,EAAKqQ,EAAIzO,EAAKuI,EAAKlK,EAAKqQ,EAAIxO,EAAKqI,EAAKlK,EAAKqQ,EAC5EvM,EAAG,GAAKpC,EACRqC,EAAG,GAAKpC,EACRmC,EAAG,GAAKlC,EACRmC,EAAG,GAAKpC,EACRmC,EAAG,GAAKlC,EACRmC,EAAG,GAAKlC,EACRiC,EAAG,GAAKpC,EACRqC,EAAG,GAAKlC,EACR,IACI8lC,EAAe,IADR5qD,KAAK4kF,oBAAoB79D,EAAIC,EAAIykE,GAAU,GAEtD,IAAK,IAAIC,KAAOP,EACZvgC,GAASj0C,KAAKuF,IAAI8H,EAAUF,EAAI4nE,IAChC9gC,EAAQr2B,IACRA,EAAYq2B,EACZy5B,EAASrhE,EACTshE,EAASrhE,EAEjB,CACA,GAAIsR,EAAY,IACZ,KACR,CACA,IAAI/R,EAAI0K,EAAKm3D,EAAQ3hE,EAAIyK,EAAKm3D,EAC1B7qB,EAAK,CACLyL,KAAM,EACNl/C,OACA44D,MACAn9D,MACA6W,KAAM,IAAImB,EAAKjX,EAAGE,EAAG2Q,EAAIC,IAE7BtzB,KAAKs9E,OAAO9gF,KAAKi9D,GACjB,IAAIioB,EAAM,CACNxc,KAAM,EACNgb,KAAM,EACNvmD,IAAK,IAAIzB,EAAI1V,EAAI6Q,EAAI3Q,EAAI4Q,EAAI,EAAID,EAAI,EAAIC,GACzCvM,GAAI,CAACvE,EAAI6Q,EAAI7Q,EAAI6Q,EAAI7Q,EAAI6Q,EAAI7Q,EAAI6Q,GACjCrM,GAAI,CAACtE,EAAI4Q,EAAI5Q,EAAI4Q,EAAI5Q,EAAI4Q,EAAI5Q,EAAI4Q,IAErCtzB,KAAKu9E,MAAM/gF,KAAKklF,EACpB,CACA,YAAAD,CAAa33B,EAAM9jC,EAAMvE,EAAKm9D,GAC1B,IAAK2G,EAAI2F,GAAMlrF,KAAKo9E,QAAQ9B,YAAYt1D,EAAM44D,GAC1ClyC,EAAM1sC,KAAKusC,IAAII,SAASmd,GAAOld,EAAM5sC,KAAKusC,IAAIM,OAAOid,GACrD/L,EAAK/9C,KAAKs9E,OAAO5wC,EAAM,GAAIsR,EAAKh+C,KAAKs9E,OAAO1wC,EAAM,GAClD1f,EAAK,IAAO6wB,EAAGzlB,KAAKpL,GAAK8wB,EAAG1lB,KAAKpL,IAAKC,EAAK,IAAO4wB,EAAGzlB,KAAKnL,GAAK6wB,EAAG1lB,KAAKnL,IAAKkG,EAAK,GAAMkyD,EAAIjyD,EAAK,GAAM43D,EACtGS,EAAMh1E,KAAKue,MAAM8oB,EAAG1lB,KAAKnL,GAAK4wB,EAAGzlB,KAAKnL,GAAI6wB,EAAG1lB,KAAKpL,GAAK6wB,EAAGzlB,KAAKpL,IAC/Di+D,EAAa,CAACQ,EAAKA,EAAMh1E,KAAK+M,IAClC,IAAK,IAAI/J,KAAK3Z,KAAKusC,IAAI8c,YAAY3c,GAC/B,GAAI/yB,GAAKizB,EAAK,CACV,IAAI5pB,EAAKhjB,KAAKs9E,OAAO3jE,EAAI,GAAG2e,KAAKpL,GAAKltB,KAAKs9E,OAAO5wC,EAAM,GAAGpU,KAAKpL,GAAIjK,EAAKjjB,KAAKs9E,OAAO3jE,EAAI,GAAG2e,KAAKnL,GAAKntB,KAAKs9E,OAAO5wC,EAAM,GAAGpU,KAAKnL,GAChIg+D,EAAW3uF,KAAKma,KAAKue,MAAMjS,EAAID,GACnC,CACJ,IAAK,IAAIrJ,KAAK3Z,KAAKusC,IAAI8c,YAAYzc,GAC/B,GAAIjzB,GAAK+yB,EAAK,CACV,IAAI1pB,EAAKhjB,KAAKs9E,OAAO3jE,EAAI,GAAG2e,KAAKpL,GAAKltB,KAAKs9E,OAAO1wC,EAAM,GAAGtU,KAAKpL,GAAIjK,EAAKjjB,KAAKs9E,OAAO3jE,EAAI,GAAG2e,KAAKnL,GAAKntB,KAAKs9E,OAAO1wC,EAAM,GAAGtU,KAAKnL,GAChIg+D,EAAW3uF,KAAKma,KAAKue,MAAMjS,EAAID,GACnC,CACJ,IAAIooE,EAAS,GAAMprF,KAAK+e,MAAQ/e,KAAKk0C,UAAU4V,EAAO,GAAIuhC,EAAS,GAAMrrF,KAAK+e,MAC3DusE,EAAQ7nE,EAAZ,GACX8Q,EAAYh3B,OAAO4sB,kBAAmBk6D,EAAS,EAAGC,EAAS,EAC3Dv9D,EAAK,CAAC,EAAG,EAAG,EAAG,GAAIC,EAAK,CAAC,EAAG,EAAG,EAAG,GAClCukE,EAAOl4D,EAAK+3D,EAJ8E,EAI5DC,EAAQG,EAAOl4D,EAAK83D,EAJwC,EAItBC,EACpEI,EAAWzrF,KAAKuqF,YAAYr9D,EAAKq+D,EAAMp+D,EAAKq+D,EAAM,EAAID,EAAM,EAAIC,GACpE,IAAK,IAAInrE,EAAO,EAAGA,EAN2E,EAM5DA,IAAQ,CACtC,IAAI+jE,EAAMgH,EAAS/qE,EAAOgrE,EAC1B,IAAK,IAAIh7D,EAAM,EAAGA,EAPP,GAOuBA,IAAO,CACrC,IAAIvM,EAAKwnE,EAAQj7D,EACbrN,EAAKohE,EAAMztE,KAAK2a,IAAIxN,GAAKb,EAAKmhE,EAAMztE,KAAK4a,IAAIzN,GAC7Ca,EAAKuI,EAAKlK,EAAKqQ,EAAIxO,EAAKqI,EAAKlK,EAAKqQ,EAAIzO,EAAKuI,EAAKlK,EAAKqQ,EAAIxO,EAAKqI,EAAKlK,EAAKqQ,EAC5EvM,EAAG,GAAKpC,EACRqC,EAAG,GAAKpC,EACRmC,EAAG,GAAKlC,EACRmC,EAAG,GAAKpC,EACRmC,EAAG,GAAKlC,EACRmC,EAAG,GAAKlC,EACRiC,EAAG,GAAKpC,EACRqC,EAAG,GAAKlC,EACR,IACI8lC,EAAe,IADR5qD,KAAK4kF,oBAAoB79D,EAAIC,EAAIykE,GAAU,GAEtD,IAAK,IAAIC,KAAOP,EACZvgC,GAASj0C,KAAKuF,IAAI8H,EAAUF,EAAI4nE,IAChC9gC,EAAQr2B,IACRA,EAAYq2B,EACZy5B,EAASrhE,EACTshE,EAASrhE,EAEjB,CACA,GAAIsR,EAAY,IACZ,KACR,CACA,IAAI/R,EAAI0K,EAAKm3D,EAAQ3hE,EAAIyK,EAAKm3D,EAC1B7qB,EAAK,CACLyL,KAAM,EACNl/C,OACA44D,MACAn9D,MACA6W,KAAM,IAAImB,EAAKjX,EAAGE,EAAG2Q,EAAIC,IAE7BtzB,KAAKs9E,OAAO9gF,KAAKi9D,GACjB,IAAIioB,EAAM,CACNxc,KAAM,EACNgb,KAAM,EACNvmD,IAAK,IAAIzB,EAAI1V,EAAI6Q,EAAI3Q,EAAI4Q,EAAI,EAAID,EAAI,EAAIC,GACzCvM,GAAI,CAACvE,EAAI6Q,EAAI7Q,EAAI6Q,EAAI7Q,EAAI6Q,EAAI7Q,EAAI6Q,GACjCrM,GAAI,CAACtE,EAAI4Q,EAAI5Q,EAAI4Q,EAAI5Q,EAAI4Q,EAAI5Q,EAAI4Q,IAErCtzB,KAAKu9E,MAAM/gF,KAAKklF,EACpB,CACA,WAAAkK,CAAYppE,EAAGE,EAAGE,EAAGC,EAAGgpE,EAAWC,GAC/B,IAAI/0B,EAAMv0C,EAAGw0C,EAAMt0C,EAAGu0C,EAAMz0C,EAAII,EAAGs0C,EAAMx0C,EAAIG,EAC7C,IAAK,IAAI/S,EAAI,EAAGA,EAAI9P,KAAKs9E,OAAO1+E,OAAQkR,IAAK,CACzC,GAAiB,MAAb+7E,IAAsBA,EAAU/7E,GAChC,SACJ,IAAI6J,EAAI3Z,KAAKs9E,OAAOxtE,GAChBq2B,EAAMxsB,EAAE2e,KAAKpL,GAAKvT,EAAE2e,KAAKjF,GAAI+S,EAAMzsB,EAAE2e,KAAKnL,GAAKxT,EAAE2e,KAAKhF,GAAI+S,EAAM1sB,EAAE2e,KAAKpL,GAAKvT,EAAE2e,KAAKjF,GAAIiT,EAAM3sB,EAAE2e,KAAKnL,GAAKxT,EAAE2e,KAAKhF,GACpH,KAAI2jC,EAAM9wB,GAAO4wB,EAAM1wB,GAAO6wB,EAAM9wB,GAAO4wB,EAAM1wB,GAEjD,OAAO,CACX,CACA,IAAK,IAAIx2B,EAAI,EAAGA,EAAI9P,KAAK0d,MAAM9e,OAAQkR,IAAK,CACxC,GAAgB,MAAZg8E,IAAqBA,EAASh8E,GAC9B,SACJ,IAAIF,EAAI5P,KAAK0d,MAAM5N,GACfq2B,EAAMv2B,EAAEs0D,KAAKv/C,GAAIyhB,EAAMx2B,EAAEs0D,KAAKt/C,GAAIyhB,EAAMz2B,EAAEs0D,KAAKr/C,GAAIyhB,EAAM12B,EAAEs0D,KAAKp/C,GACpE,KAAImyC,EAAMtgD,KAAKW,IAAI6uB,EAAKE,IAAQ0wB,EAAMpgD,KAAKC,IAAIuvB,EAAKE,IAAQ6wB,EAAMvgD,KAAKW,IAAI8uB,EAAKE,IAAQ0wB,EAAMrgD,KAAKC,IAAIwvB,EAAKE,IAA5G,CAEA,GAAIH,GAAO4wB,GAAO5wB,GAAO8wB,GAAO7wB,GAAO4wB,GAAO5wB,GAAO8wB,EACjD,OAAO,EACX,GAAI7wB,GAAO0wB,GAAO1wB,GAAO4wB,GAAO3wB,GAAO0wB,GAAO1wB,GAAO4wB,EACjD,OAAO,EACX,GAAIlpC,EAASmB,oBAAoBgX,EAAKC,EAAKC,EAAKC,EAAKywB,EAAKC,EAAKC,EAAKD,GAChE,OAAO,EACX,GAAIhpC,EAASmB,oBAAoBgX,EAAKC,EAAKC,EAAKC,EAAKywB,EAAKG,EAAKD,EAAKC,GAChE,OAAO,EACX,GAAIlpC,EAASmB,oBAAoBgX,EAAKC,EAAKC,EAAKC,EAAKywB,EAAKC,EAAKD,EAAKG,GAChE,OAAO,EACX,GAAIlpC,EAASmB,oBAAoBgX,EAAKC,EAAKC,EAAKC,EAAK2wB,EAAKD,EAAKC,EAAKC,GAChE,OAAO,CAZC,CAahB,CACA,OAAO,CACX,CACA,oBAAA60B,CAAqBC,EAAYC,GAC7B,OAAa,CACT,IAAIl3D,GAAW,EACf,IAAK,IAAIrM,EAAK,EAAGA,EAAK1oB,KAAK0d,MAAM9e,OAAQ8pB,IAAM,CAC3C,IAAIosC,EAAK90D,KAAK0d,MAAMgL,GACpB,GAAIosC,EAAGorB,MAAQ8L,IAEXl3B,EAAG/2D,MAAQ6+E,GAAU2D,QAAUzrB,EAAG/2D,MAAQ6+E,GAAUuD,QAAUrrB,EAAG/2D,MAAQ6+E,GAAU+D,QAEvF,IAAK,IAAIh4D,EAAK,EAAGA,EAAK3oB,KAAK0d,MAAM9e,OAAQ+pB,IAAM,CAC3C,IAAIosC,EAAK/0D,KAAK0d,MAAMiL,GACpB,GAAIosC,EAAGmrB,MAAQ+L,EACX,SAGJ,GAFIl3B,EAAGh3D,MAAQ6+E,GAAU+D,SACrB5rB,EAAGh3D,KAAO6+E,GAAUuD,QACpBprB,EAAGh3D,MAAQ6+E,GAAU2D,QAAUxrB,EAAGh3D,MAAQ6+E,GAAUuD,OACpD,SACJ,GAAIrrB,EAAGpoB,KAAOqoB,EAAGroB,KAAOooB,EAAGpoB,KAAOqoB,EAAGnoB,KAAOkoB,EAAGloB,KAAOmoB,EAAGroB,KAAOooB,EAAGloB,KAAOmoB,EAAGnoB,IACzE,SACJ,IAAK5e,EAASmB,oBAAoB2lC,EAAGoP,KAAKv/C,GAAImwC,EAAGoP,KAAKt/C,GAAIkwC,EAAGoP,KAAKr/C,GAAIiwC,EAAGoP,KAAKp/C,GAAIiwC,EAAGmP,KAAKv/C,GAAIowC,EAAGmP,KAAKt/C,GAAImwC,EAAGmP,KAAKr/C,GAAIkwC,EAAGmP,KAAKp/C,IAC1H,SACJ,IAAI8gE,EAAK53D,EAASc,cAAcgmC,EAAGoP,KAAKv/C,GAAImwC,EAAGoP,KAAKt/C,GAAIkwC,EAAGoP,KAAKr/C,GAAIiwC,EAAGoP,KAAKp/C,GAAIiwC,EAAGmP,KAAKv/C,GAAIowC,EAAGmP,KAAKt/C,GAAImwC,EAAGmP,KAAKr/C,GAAIkwC,EAAGmP,KAAKp/C,IACxH9B,EAAK+xC,EAAGmP,KAAKr/C,GAAKkwC,EAAGmP,KAAKv/C,GAAI1B,EAAK8xC,EAAGmP,KAAKp/C,GAAKiwC,EAAGmP,KAAKt/C,GACxDw/D,EAAMztE,KAAKuF,IAAI8G,GAAMrM,KAAKuF,IAAI+G,IAAO2iE,EAAG,GAAK7wB,EAAGmP,KAAKv/C,IAAM3B,GAAM4iE,EAAG,GAAK7wB,EAAGmP,KAAKt/C,IAAM3B,EACvFiP,EAAOnP,EAAQC,EAAIC,GACnB0N,EAAQokC,EAAGj2D,KAAOozB,GAAQ6iC,EAAGh3D,MAAQ6+E,GAAU2D,OAAS,EAAI,GAChE,GAAI6D,EAAMzzD,GAASyzD,EAAM,EAAIzzD,EAAO,CAChC,IAAI84C,EAAK,CACLyW,KAAMnrB,EAAGmrB,KACTxzC,IAAKqoB,EAAGroB,IACRE,IAAKmoB,EAAGnoB,IACR7uC,KAAMg3D,EAAGh3D,KACTmmE,KAAMnP,EAAGmP,KAAKtoD,QACd9c,KAAMi2D,EAAGj2D,KACTwlC,KAAMywB,EAAGzwB,KACT7iB,IAAKszC,EAAGtzC,KAEZzhB,KAAK0d,MAAMlhB,KAAKitE,GAChB1U,EAAGmP,KAAKr/C,GAAKkwC,EAAGmP,KAAKv/C,GAAK3B,GAAMohE,EAAMzzD,GACtCokC,EAAGmP,KAAKp/C,GAAKiwC,EAAGmP,KAAKt/C,GAAK3B,GAAMmhE,EAAMzzD,GACtC84C,EAAGvF,KAAKv/C,GAAK8kD,EAAGvF,KAAKv/C,GAAK3B,GAAMohE,EAAMzzD,GACtC84C,EAAGvF,KAAKt/C,GAAK6kD,EAAGvF,KAAKt/C,GAAK3B,GAAMmhE,EAAMzzD,GACtCoE,GAAW,CACf,MACSqvD,EAAMzzD,GACXokC,EAAGmP,KAAKr/C,GAAKkwC,EAAGmP,KAAKv/C,GAAK3B,GAAMohE,EAAMzzD,GACtCokC,EAAGmP,KAAKp/C,GAAKiwC,EAAGmP,KAAKt/C,GAAK3B,GAAMmhE,EAAMzzD,GACtCoE,GAAW,GAENqvD,EAAM,EAAIzzD,IACfokC,EAAGmP,KAAKv/C,GAAKowC,EAAGmP,KAAKv/C,GAAK3B,GAAMohE,EAAMzzD,GACtCokC,EAAGmP,KAAKt/C,GAAKmwC,EAAGmP,KAAKt/C,GAAK3B,GAAMmhE,EAAMzzD,GACtCoE,GAAW,EAEnB,CACJ,CACA,IAAKA,EACD,KACR,CACJ,CACA,kBAAA8sD,CAAmBlwC,GACf,IAAI5qB,EAAK,IAAIznB,MAAMqyC,EAAM/yC,QAASooB,EAAK,IAAI1nB,MAAMqyC,EAAM/yC,QACvD,IAAK,IAAIkR,EAAI,EAAGA,EAAI6hC,EAAM/yC,OAAQkR,IAAK,CACnC,IAAIo8E,EAAKlsF,KAAKs9E,OAAO3rC,EAAM7hC,GAAK,GAChCiX,EAAGjX,GAAKo8E,EAAG5zD,KAAKpL,GAChBlG,EAAGlX,GAAKo8E,EAAG5zD,KAAKnL,EACpB,CACA,IAAID,EAAK,EAAIpU,IAAIiO,GAAM4qB,EAAM/yC,OAAQuuB,EAAK,EAAIrU,IAAIkO,GAAM2qB,EAAM/yC,OAC1DouB,EAAK,GAAIC,EAAK,GACdk/D,GAAY,EACZC,EAAU7uF,OAAO8uF,IACrB,MAAMC,EAAQ,GACd,IAAK,IAAI3yE,KAAKg4B,EAAO,CACjB,IAAIu6C,EAAKlsF,KAAKs9E,OAAO3jE,EAAI,GACrBq5C,EAAKk5B,EAAG5zD,KAAKpL,GAAKA,EAAI+lC,EAAKi5B,EAAG5zD,KAAKnL,GAAKA,EAAIxI,EAAKquC,EAAKk5B,EAAG5zD,KAAKjF,GAAIxO,EAAKmuC,EAAKk5B,EAAG5zD,KAAKjF,GAAIzO,EAAKquC,EAAKi5B,EAAG5zD,KAAKhF,GAAIxO,EAAKmuC,EAAKi5B,EAAG5zD,KAAKhF,GACpItG,EAAGxwB,KAAKmoB,GACRsI,EAAGzwB,KAAKy2D,GACRjmC,EAAGxwB,KAAKmoB,GACRsI,EAAGzwB,KAAKooB,GACRoI,EAAGxwB,KAAKmoB,GACRsI,EAAGzwB,KAAKsoB,GACRkI,EAAGxwB,KAAKw2D,GACR/lC,EAAGzwB,KAAKooB,GACRoI,EAAGxwB,KAAKw2D,GACR/lC,EAAGzwB,KAAKsoB,GACRkI,EAAGxwB,KAAKqoB,GACRoI,EAAGzwB,KAAKy2D,GACRjmC,EAAGxwB,KAAKqoB,GACRoI,EAAGzwB,KAAKooB,GACRoI,EAAGxwB,KAAKqoB,GACRoI,EAAGzwB,KAAKsoB,GACR,IAAIoN,EAAOnP,EAAQiwC,EAAIC,GAAK9uC,EAAQxN,KAAKue,MAAM+9B,EAAID,GACnDhmC,EAAGxwB,KAAK8vF,EAAQp6D,EAAOvb,KAAK2a,IAAInN,IAChC8I,EAAGzwB,KAAK8vF,EAAQp6D,EAAOvb,KAAK4a,IAAIpN,IAChC,IAAK,IAAIvU,KAAK5P,KAAKusC,IAAI8c,YAAY1vC,GAC/B,GAAIg4B,EAAMn3B,QAAQ5K,IAAM,EAAG,CACvB,IAAI28E,EAAKvsF,KAAKs9E,OAAO1tE,EAAI,GACrBo8C,EAAK,IAAOkgC,EAAG5zD,KAAKpL,GAAKq/D,EAAGj0D,KAAKpL,IAAMA,EAAIi/B,EAAK,IAAO+/B,EAAG5zD,KAAKnL,GAAKo/D,EAAGj0D,KAAKnL,IAAMA,EAClFq/D,EAAQzpE,EAAQipC,EAAIG,GAAKwB,EAASh3C,KAAKue,MAAMi3B,EAAIH,GACrDh/B,EAAGxwB,KAAK8vF,EAAQE,EAAQ71E,KAAK2a,IAAIq8B,IACjC1gC,EAAGzwB,KAAK8vF,EAAQE,EAAQ71E,KAAK4a,IAAIo8B,GACrC,CACCw+B,IACI5uF,OAAOqtB,SAASwhE,GACjBz1E,KAAKuF,IAAIkwE,EAAUl6D,GAAQ,IAC3Bi6D,GAAY,GAGhBC,EAAUl6D,EAClB,CACA,IAAIniB,EAAI,CAAE4hC,QAAOzkB,KAAIC,KAAIkG,GAAI,EAAGC,GAAI,EAAGnP,MAAO,EAAGrlB,KAAM,GACvD,GAAIqtF,EACAp8E,EAAEsjB,GAAKtjB,EAAEujB,GAAKtF,EAASmG,UAAUnH,EAAIC,OAEpC,CACD,IAAIu/D,EAAQ,EACZ,IAAK,IAAI18E,EAAI,EAAGA,EAAI6hC,EAAM/yC,OAAQkR,IAC9B08E,GAASzpE,EAAQgE,EAAGjX,GAAKod,EAAIlG,EAAGlX,GAAKqd,GACzC,IAAI4pD,EAASyV,EAAQ76C,EAAM/yC,QAAU,EAAI0tF,GACzC,IAAIG,EAAM,IAAI3V,GAAkB/vD,EAAIC,EAAI+vD,GACxC0V,EAAIzV,YACJjnE,EAAEmd,GAAKu/D,EAAIv/D,GACXnd,EAAEod,GAAKs/D,EAAIt/D,GACXpd,EAAEsjB,GAAKo5D,EAAIp5D,GACXtjB,EAAEujB,GAAKm5D,EAAIn5D,GACXvjB,EAAEoU,MAAQsoE,EAAItoE,KAClB,CACApU,EAAEjR,KAAOkB,KAAKs+E,YACdt+E,KAAK4vC,MAAMpzC,KAAKuT,EACpB,CACA,gBAAA4xE,CAAiBhwC,EAAOqyC,EAAY0I,GAChC,MAAMh2E,EAAKi7B,EAAM/yC,OACjB,IAAI4jB,EAAI,GAAIE,EAAI,GAAIiqE,EAAS,GAC7B,IAAK,IAAI78E,EAAI,EAAGA,EAAI4G,EAAI5G,IAAK,CACzB,IAAIo8E,EAAKlsF,KAAKs9E,OAAO3rC,EAAM7hC,GAAK,GAChC0S,EAAEhmB,KAAK0vF,EAAG5zD,KAAKpL,IACfxK,EAAElmB,KAAK0vF,EAAG5zD,KAAKnL,IACfw/D,EAAOnwF,KAAgB,MAAX0vF,EAAGlmE,KACnB,CACA,IAAIslC,EAAK,GAAIC,EAAK,GAClB,MAAMqhC,EAA2B,IAArB5vC,GAASsN,UAAmBtqD,KAAK+e,MAC7C,IAAK,IAAIjP,EAAI,EAAGA,EAAI4G,EAAK,EAAG5G,IAAK,CAC7B,IAAIkT,EAAKR,EAAE1S,EAAI,GAAK0S,EAAE1S,GAAImT,EAAKP,EAAE5S,EAAI,GAAK4S,EAAE5S,GAAIixE,EAAO6L,EAAMtpE,EAAKP,EAAQC,EAAIC,IAC9EqoC,EAAG9uD,KAAKymB,EAAK89D,GACbx1B,EAAG/uD,MAAMwmB,EAAK+9D,EAClB,CAEA,IAAI3uB,EAAM,EAAIr7C,YAAY,EAAGL,GAAK27C,EAAM,EAAIt7C,YAAY,EAAGL,GAAK47C,EAAM,EAAIv7C,YAAY,EAAGL,GAAK67C,EAAM,EAAIx7C,YAAY,EAAGL,GACvH,MAAMm2E,EAAOF,EAAO,GAFR,IAAa,GAGzB,GAAK3I,EAMA,CACD,MAAMhhE,GAAMuoC,EAAG,GAAItoC,EAAKqoC,EAAG,GAC3B8G,EAAI,GAAK5vC,EAAE,GAAKQ,EAAK6pE,EACrBx6B,EAAI,GAAK3vC,EAAE,GAAKO,EAAK4pE,EACrBv6B,EAAI,GAAK9vC,EAAE,GAAKQ,EAAK6pE,EACrBt6B,EAAI,GAAK7vC,EAAE,GAAKO,EAAK4pE,CACzB,MAXIz6B,EAAI,GAAK5vC,EAAE,GAAK8oC,EAAG,GAAKuhC,EACxBx6B,EAAI,GAAK3vC,EAAE,GAAK6oC,EAAG,GAAKshC,EACxBv6B,EAAI,GAAK9vC,EAAE,GAAK8oC,EAAG,GAAKuhC,EACxBt6B,EAAI,GAAK7vC,EAAE,GAAK6oC,EAAG,GAAKshC,EAS5B,IAAIC,EAAU,EAAGC,EAAU,EAC3B,IAAK,IAAIj9E,EAAI,EAAGA,EAAI4G,EAAK,EAAG5G,IAAK,CAC7B,MAAMk9E,EAAML,EAAO78E,GAlBX,IAAa,GAkBgBm9E,EAAMD,EAC3C56B,EAAItiD,GAAK0S,EAAE1S,GAAKk9E,GAAO1hC,EAAGx7C,EAAI,GAAKw7C,EAAGx7C,IACtCuiD,EAAIviD,GAAK4S,EAAE5S,GAAKk9E,GAAOzhC,EAAGz7C,EAAI,GAAKy7C,EAAGz7C,IACtCwiD,EAAIxiD,GAAK0S,EAAE1S,GAAKm9E,GAAO3hC,EAAGx7C,EAAI,GAAKw7C,EAAGx7C,IACtCyiD,EAAIziD,GAAK4S,EAAE5S,GAAKm9E,GAAO1hC,EAAGz7C,EAAI,GAAKy7C,EAAGz7C,IACtC,IAAK,IAAI6J,KAAK3Z,KAAKusC,IAAI8c,YAAY1X,EAAM7hC,IACrC,GAAI6hC,EAAMn3B,QAAQb,GAAK,GAAKA,GAAK+yE,EAAS,CACtC,IAAIR,EAAKlsF,KAAKs9E,OAAO3jE,EAAI,GACrBqJ,EAAKkpE,EAAG5zD,KAAKpL,GAAK1K,EAAE1S,GAAImT,EAAKipE,EAAG5zD,KAAKnL,GAAKzK,EAAE5S,GACrCkT,GAAMovC,EAAItiD,GAAK0S,EAAE1S,IAAMmT,GAAMovC,EAAIviD,GAAK0S,EAAE1S,IACxCmT,GAAMqvC,EAAIxiD,GAAK0S,EAAE1S,IAAMmT,GAAMsvC,EAAIziD,GAAK0S,EAAE1S,IAE/Cg9E,IAEAC,GACR,CACR,CACA,IAAI1+B,EAAK33C,EAAK,EACVw2E,EAAOP,EAAOt+B,GApCN,IAAa,GAqCzB,GAAK21B,EAMA,CACD,IAAIhhE,GAAMuoC,EAAG8C,EAAK,GAAIprC,EAAKqoC,EAAG+C,EAAK,GACnC+D,EAAI/D,GAAM7rC,EAAE6rC,GAAMrrC,EAAKkqE,EACvB76B,EAAIhE,GAAM3rC,EAAE2rC,GAAMprC,EAAKiqE,EACvB56B,EAAIjE,GAAM7rC,EAAE6rC,GAAMrrC,EAAKkqE,EACvB36B,EAAIlE,GAAM3rC,EAAE2rC,GAAMprC,EAAKiqE,CAC3B,MAXI96B,EAAI/D,GAAM7rC,EAAE6rC,GAAM/C,EAAG+C,EAAK,GAAK6+B,EAC/B76B,EAAIhE,GAAM3rC,EAAE2rC,GAAM9C,EAAG8C,EAAK,GAAK6+B,EAC/B56B,EAAIjE,GAAM7rC,EAAE6rC,GAAM/C,EAAG+C,EAAK,GAAK6+B,EAC/B36B,EAAIlE,GAAM3rC,EAAE2rC,GAAM9C,EAAG8C,EAAK,GAAK6+B,EASnC,IAAIC,EAAS,EAAGC,EAAS,EACzB,IAAK,IAAIt9E,EAAI,EAAGA,EAAI4G,EAAK,EAAG5G,IACxBq9E,GAAUpqE,EAAQqvC,EAAItiD,EAAI,GAAKsiD,EAAItiD,GAAIuiD,EAAIviD,EAAI,GAAKuiD,EAAIviD,IACxDs9E,GAAUrqE,EAAQuvC,EAAIxiD,EAAI,GAAKwiD,EAAIxiD,GAAIyiD,EAAIziD,EAAI,GAAKyiD,EAAIziD,IAE5Dq9E,GAAUL,EAAU,EACpBM,GAAUL,EAAU,EACpB,IAAI57D,EAAKg8D,EAASC,EAASh7B,EAAME,EAC7BlhC,EAAK+7D,EAASC,EAAS/6B,EAAME,EAC7BpwD,EAAI,CAAEwvC,QAAO5qB,GAAI,KAAMC,GAAI,KAAMkN,KAAM,KAAMp1B,KAAMkB,KAAKs+E,aAC5Dt+E,KAAKqtF,kBAAkBlrF,EAAGgvB,EAAIC,GAC9BpxB,KAAKw9C,MAAMhhD,KAAK2F,EACpB,CACA,kBAAA6/E,CAAmB17E,EAAM0sE,GACrB,IAAIkZ,EAAKlsF,KAAKs9E,OAAOh3E,EAAO,GACxBqe,EAAKunE,EAAG5zD,KAAKpL,GAAItI,EAAKsnE,EAAG5zD,KAAKnL,GAAItI,EAAK,EAAGC,EAAK,EACnD,IAAK,IAAInL,KAAKq5D,EACVkZ,EAAKlsF,KAAKs9E,OAAO3jE,EAAI,GACrBkL,GAAMqnE,EAAG5zD,KAAKpL,GACdpI,GAAMonE,EAAG5zD,KAAKnL,GAElBtI,GAAMmuD,EAAGp0E,OACTkmB,GAAMkuD,EAAGp0E,OACLo0E,EAAGp0E,QAAU,IACbimB,GAAM,IAAOA,EAAKF,GAClBG,GAAM,IAAOA,EAAKF,IAEtB,MAAMsF,EAz4DO,IAy4DkBlqB,KAAKo9E,QAAQr+D,QAC5C,IAAIsgE,EAAMr/E,KAAKs/E,WAAW36D,EAAIC,EAAIC,EAAIC,EAAI9kB,KAAKu/E,YAAYj5E,EAAMqe,EAAIC,EAAIC,EAAIC,EAAIoF,IACjFlqB,KAAKy/E,wBAAwBJ,EAAK,CAACx6D,EAAIC,GAAKH,EAAIC,EAAIC,EAAIC,EAAIoF,GAC5D,IAAIta,EAAI,CACJswE,KAAM,EACNxzC,IAAKpmC,EACLsmC,IAAK,EACL7uC,KAAM6+E,GAAU2D,OAChBrc,KAAM,IAAIpqC,GAAKulD,EAAI,GAAIA,EAAI,GAAIx6D,EAAIC,GACnChmB,KAAMkB,KAAKs+E,YACXh6C,KAAM,EACN7iB,IAAKzhB,KAAKsqC,OAAO5gC,KAAKk6B,YAE1B5jC,KAAK0d,MAAMlhB,KAAKoT,GAChB5P,KAAKu9E,MAAM/gF,KAAKwD,KAAKogF,iBAAiBxwE,GAC1C,CACA,iBAAAy9E,CAAkBlgF,EAAMqV,EAAGE,GACvB,MAAMhM,EAAK8L,EAAE5jB,OACPmgB,EAAQ,IACd,IAAK,IAAIjP,EAAI,EAAGA,EAAI4G,EAAI5G,IACpB,GAAS,GAALA,EAAQ,CACR,IAAIkT,EAAKR,EAAE1S,EAAI,GAAK0S,EAAE1S,GAAImT,EAAKP,EAAE5S,EAAI,GAAK4S,EAAE5S,GACxC6c,EAAKnK,EAAE1S,GAAKiP,EAAQiE,EAAI4J,EAAKlK,EAAE5S,GAAKiP,EAAQkE,EAChD9V,EAAK4Z,GAAK,EAAIxR,OAAOpI,EAAK4Z,GAAIvE,EAAE1S,IAChC3C,EAAK6Z,GAAK,EAAIzR,OAAOpI,EAAK6Z,GAAItE,EAAE5S,IAChC3C,EAAK+mB,KAAO,EAAI3e,OAAOpI,EAAK+mB,MAAM,GAClC/mB,EAAK4Z,GAAK,EAAIxR,OAAOpI,EAAK4Z,GAAI4F,GAC9Bxf,EAAK6Z,GAAK,EAAIzR,OAAOpI,EAAK6Z,GAAI4F,GAC9Bzf,EAAK+mB,KAAO,EAAI3e,OAAOpI,EAAK+mB,MAAM,EACtC,MACK,GAAIpkB,GAAK4G,EAAK,EAAG,CAClB,IAAIsM,EAAKR,EAAE1S,GAAK0S,EAAE1S,EAAI,GAAImT,EAAKP,EAAE5S,GAAK4S,EAAE5S,EAAI,GACxC6c,EAAKnK,EAAE1S,GAAKiP,EAAQiE,EAAI4J,EAAKlK,EAAE5S,GAAKiP,EAAQkE,EAChD9V,EAAK4Z,GAAK,EAAIxR,OAAOpI,EAAK4Z,GAAI4F,GAC9Bxf,EAAK6Z,GAAK,EAAIzR,OAAOpI,EAAK6Z,GAAI4F,GAC9Bzf,EAAK+mB,KAAO,EAAI3e,OAAOpI,EAAK+mB,MAAM,GAClC/mB,EAAK4Z,GAAK,EAAIxR,OAAOpI,EAAK4Z,GAAIvE,EAAE1S,IAChC3C,EAAK6Z,GAAK,EAAIzR,OAAOpI,EAAK6Z,GAAItE,EAAE5S,IAChC3C,EAAK+mB,KAAO,EAAI3e,OAAOpI,EAAK+mB,MAAM,EACtC,KACK,CACD,IAAIlR,EAAKR,EAAE1S,EAAI,GAAK0S,EAAE1S,EAAI,GAAImT,EAAKP,EAAE5S,EAAI,GAAK4S,EAAE5S,EAAI,GAChDixE,EAAOz9D,EAAKP,EAAQC,EAAIC,IAC5BD,GAAM+9D,EACN99D,GAAM89D,EACN,IAAItL,EAAK12D,EAAQgE,EAAQP,EAAE1S,GAAK0S,EAAE1S,EAAI,GAAI4S,EAAE5S,GAAK4S,EAAE5S,EAAI,IAAKi2E,EAAKhnE,EAAQgE,EAAQP,EAAE1S,EAAI,GAAK0S,EAAE1S,GAAI4S,EAAE5S,EAAI,GAAK4S,EAAE5S,IAC3Gw9E,EAAM9qE,EAAE1S,GAAKkT,EAAKyyD,EAAI8X,EAAM7qE,EAAE5S,GAAKmT,EAAKwyD,EACxC+X,EAAMhrE,EAAE1S,GAAKkT,EAAK+iE,EAAI0H,EAAM/qE,EAAE5S,GAAKmT,EAAK8iE,EAC5C54E,EAAK4Z,GAAK,EAAIxR,OAAOpI,EAAK4Z,GAAIumE,GAC9BngF,EAAK6Z,GAAK,EAAIzR,OAAOpI,EAAK6Z,GAAIumE,GAC9BpgF,EAAK+mB,KAAO,EAAI3e,OAAOpI,EAAK+mB,MAAM,GAClC/mB,EAAK4Z,GAAK,EAAIxR,OAAOpI,EAAK4Z,GAAIvE,EAAE1S,IAChC3C,EAAK6Z,GAAK,EAAIzR,OAAOpI,EAAK6Z,GAAItE,EAAE5S,IAChC3C,EAAK+mB,KAAO,EAAI3e,OAAOpI,EAAK+mB,MAAM,GAClC/mB,EAAK4Z,GAAK,EAAIxR,OAAOpI,EAAK4Z,GAAIymE,GAC9BrgF,EAAK6Z,GAAK,EAAIzR,OAAOpI,EAAK6Z,GAAIymE,GAC9BtgF,EAAK+mB,KAAO,EAAI3e,OAAOpI,EAAK+mB,MAAM,EACtC,CAER,CACA,qBAAA0tD,CAAsBjwC,EAAO0/B,EAAQC,GACjC,MAAM/kC,EAAMvsC,KAAKusC,IACjB,IAAI/rB,EAAM,GASV,IARe,GAAX6wD,EACA7wD,EAAM,IACS,GAAV6wD,EACL7wD,EAAM,IACD6wD,GAAU,EACf7wD,EAAM7J,KAAKuF,IAAIm1D,GAAU,IACpBA,EAAS,IACd7wD,EAAM6wD,EAAS,KACfC,EAAW,EACX,IAAK,IAAIxhE,EAAI,EAAGA,EAAIwhE,EAAUxhE,IAC1B0Q,GAAO,IACf,GAAkB,GAAdA,EAAI5hB,OACJ,OACJ,MAAM8X,EAAKi7B,EAAM/yC,OACjB,IAAI+xD,EAAQ,EAAGC,EAAQ,EACvB,IAAK,IAAIj3C,KAAKg4B,EACVgf,GAASpkB,EAAI6e,MAAMzxC,GACnBi3C,GAASrkB,EAAI8e,MAAM1xC,GAEvBg3C,GAASj6C,EACTk6C,GAASl6C,EACT,IAAI6d,EAAYs3B,GAAU2F,gBAAgBjlB,EAAKokB,EAAOC,GACtD,IAAK,IAAI9gD,EAAI,EAAGA,EAAI4G,EAAK,EAAG5G,IAAK,CAC7B,IAAI0S,EAAI,IAAO+pB,EAAI6e,MAAMzZ,EAAM7hC,EAAI,IAAMy8B,EAAI6e,MAAMzZ,EAAM7hC,EAAI,KAAM4S,EAAI,IAAO6pB,EAAI8e,MAAM1Z,EAAM7hC,EAAI,IAAMy8B,EAAI8e,MAAM1Z,EAAM7hC,EAAI,KACxH86C,EAAQiB,GAAU2F,gBAAgBjlB,EAAK/pB,EAAGE,GAC1CkoC,EAAQr2B,IACRA,EAAYq2B,EACZ+F,EAAQnuC,EACRouC,EAAQluC,EAEhB,CACA,IAAIk8D,EAAM,GAAM5+E,KAAKu+E,YACjBS,EAAMh/E,KAAKo9E,QAAQ9B,YAAY96D,EAAKo+D,GACpCvrD,EAAK,IAAO2rD,EAAI,GAAI1rD,EAAK,IAAO0rD,EAAI,GACpCrlE,EAAI,CACJurD,KAAM,EACNl/C,KAAMxF,EACNo+D,MACAn9D,IAAKzhB,KAAKsqC,OAAO5gC,KAAKk6B,WACtBtL,KAAM,IAAImB,EAAKz5B,KAAKo9E,QAAQyB,OAAOluB,GAAQ3wD,KAAKo9E,QAAQ0B,OAAOluB,GAAQv9B,EAAIC,IAE/EtzB,KAAKs9E,OAAO9gF,KAAKmd,GACjB,IAAI+nE,EAAM,CACNxc,KAAM,EACNgb,KAAM,EACNvmD,IAAK,IAAIzB,EAAIve,EAAE2e,KAAKpL,GAAKmG,EAAI1Z,EAAE2e,KAAKnL,GAAKmG,EAAI,EAAID,EAAI,EAAIC,GACzDvM,GAAI,CAACpN,EAAE2e,KAAKpL,GAAKmG,EAAI1Z,EAAE2e,KAAKpL,GAAKmG,EAAI1Z,EAAE2e,KAAKpL,GAAKmG,EAAI1Z,EAAE2e,KAAKpL,GAAKmG,GACjErM,GAAI,CAACrN,EAAE2e,KAAKnL,GAAKmG,EAAI3Z,EAAE2e,KAAKnL,GAAKmG,EAAI3Z,EAAE2e,KAAKnL,GAAKmG,EAAI3Z,EAAE2e,KAAKnL,GAAKmG,IAErEtzB,KAAKu9E,MAAM/gF,KAAKklF,EACpB,CACA,kBAAAO,CAAmB37B,EAAMonC,GACrB,GAA8B,GAA1B,EAAIl5E,IAAI8xC,EAAKkB,UAEb,YADAxnD,KAAK2tF,uBAAuBrnC,GAGhC,IAAIsnC,EAAW,GACf,MAAM,IAAErhD,EAAG,QAAE6wC,GAAYp9E,KACzB,IAAK,IAAI8P,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,IAAIiuC,EAAKxR,EAAII,SAAS78B,GAAIkuC,EAAKzR,EAAIM,OAAO/8B,GACtCy5C,EAAMjD,EAAK3U,MAAMn3B,QAAQujC,IAAO,EAAGyL,EAAMlD,EAAK3U,MAAMn3B,QAAQwjC,IAAO,EACnE6vC,EAAU,KACd,GAAItkC,IAAQC,EACRqkC,EAAU,CAAE9vC,KAAIC,UACf,KAAIwL,GAAQD,EAGb,SAFAskC,EAAU,CAAE9vC,GAAIC,EAAIA,GAAID,EAEhB,CACZ8vC,EAAQlpE,GAAK4nB,EAAI6e,MAAMyiC,EAAQ9vC,IAC/B8vC,EAAQjpE,GAAK2nB,EAAI8e,MAAMwiC,EAAQ9vC,IAC/B8vC,EAAQhpE,GAAK0nB,EAAI6e,MAAMyiC,EAAQ7vC,IAC/B6vC,EAAQ/oE,GAAKynB,EAAI8e,MAAMwiC,EAAQ7vC,IAC/B6vC,EAAQC,QAAS,EACjB,IAAK,IAAIv2D,KAASm2D,EACd,GAAIpnC,IAAS/uB,GAASA,EAAMoa,MAAMzwC,SAAS2sF,EAAQ7vC,IAAK,CACpD6vC,EAAQC,QAAS,EACjB,KACJ,CACJ,IAAIC,EAAWL,EAAS9iF,QAAQy9B,GAASA,IAASie,GAASje,EAAKsJ,MAAMzwC,SAAS2sF,EAAQ9vC,MAAQ1V,EAAKsJ,MAAMzwC,SAAS2sF,EAAQ7vC,MAC3H,GAAI+vC,EAASnvF,OAAS,EAAG,CACrBmvF,EAASr0E,MAAK,CAACs0E,EAAIC,IAAOD,EAAGr8C,MAAM/yC,OAASqvF,EAAGt8C,MAAM/yC,SACrD,IAAK,IAAImL,EAAI,EAAGA,EAAIgkF,EAASnvF,OAAQmL,IAC7BgkF,EAAShkF,KAAOu8C,IAChBunC,EAAQK,UAAYnkF,GAC5B8jF,EAAQM,UAAYJ,EAASnvF,MACjC,CACAgvF,EAASpxF,KAAKqxF,EAClB,CACA,IAAIO,EAAS,EACThjC,EAAQ9E,EAAK3U,MAAMtzC,KAAKsb,GAAM4yB,EAAI6e,MAAMzxC,KAAK0xC,EAAQ/E,EAAK3U,MAAMtzC,KAAKsb,GAAM4yB,EAAI8e,MAAM1xC,KACrFgQ,EAAO,EAAIrS,IAAI8zC,GAAQxhC,EAAO,EAAItS,IAAI+zC,GACtCxhC,EAAO,EAAIjT,IAAIw0C,GAAQthC,EAAO,EAAIlT,IAAIy0C,GAC1C,IAAK,IAAIv7C,EAAI,EAAGA,EAAI89E,EAAShvF,OAAQkR,IAAK,CACtC,IAAIglD,EAAK84B,EAASQ,GAASr5B,EAAK64B,EAAS99E,GACrCq9E,EAASr4B,EAAGjwC,GAAK8E,EAAOmrC,EAAGhwC,GAAK8E,EACvBmrC,EAAGlwC,GAAK8E,EAAOorC,EAAGjwC,GAAK8E,EACvBujE,IACTiB,EAASt+E,EACjB,CACA,IAAIu+E,GAAW,EAAOC,GAAU,EAChC,GAAuB,GAAnBV,EAAShvF,OAAa,CACtB,IAAI+uB,EAAOigE,EAAmB,GAAVQ,EAAc,EAAI,GAAIxgE,EAAQggE,EAASQ,GACvDG,EAAS53E,KAAKue,MAAMvH,EAAK7I,GAAK6I,EAAK/I,GAAI+I,EAAK9I,GAAK8I,EAAKhJ,IACtD6pE,EAAS73E,KAAKue,MAAMtH,EAAM9I,GAAK8I,EAAMhJ,GAAIgJ,EAAM/I,GAAK+I,EAAMjJ,IAC9D0pE,GAAYE,EAAS,IAAM3qE,GAAU2qE,GAAU,IAAM3qE,IAAW4qE,EAAS,GAAK5qE,GAAU4qE,GAAU,GAAK5qE,CAC3G,MACK,GAAuB,GAAnBgqE,EAAShvF,OAAa,CAC3B,IAAI6vF,EAAK,IAAO7kE,EAAOE,GACvB8jE,EAASpxF,KAAK,CAAEmoB,GAAIgF,EAAM/E,GAAI6pE,EAAI5pE,GAAI8E,EAAO,EAAG7E,GAAI2pE,IACpDb,EAASpxF,KAAK,CAAEmoB,GAAIkF,EAAMjF,GAAI6pE,EAAI5pE,GAAIgF,EAAO,EAAG/E,GAAI2pE,IACpDL,EAAS,EACTE,GAAU,CACd,CACA,IAAII,GAAQJ,EAAU,IAAOxkE,EAAOF,EAAO,GAAKykE,EAAW,EAAM,IAAOruF,KAAK+e,MAAO4vE,EAAO,GAAM3uF,KAAK+e,MACtG,MAAM6vE,EAAY,CAAE1O,KAAM,EAAGxzC,IAAK,EAAGE,IAAK,EAAG7uC,KAAM6+E,GAAU2D,OAAQzhF,KAAMkB,KAAKs+E,YAAah6C,KAAM,EAAG7iB,IAAKzhB,KAAKsqC,OAAO5gC,KAAKk6B,YACtHirD,EAAY,CAAE3pB,KAAM,EAAG0Z,IAAK,GAAM5+E,KAAKu+E,YAAahC,MAAM,EAAO96D,IAAKzhB,KAAKsqC,OAAO5gC,KAAKk6B,YAC7F,IAAK,IAAI9zB,EAAI,EAAGA,EAAI89E,EAAShvF,OAAQkR,IAAK,CACtC,IAAI+9E,EAAUD,EAAS99E,GACnB6U,EAAKy4D,EAAQyB,OAAOgP,EAAQlpE,IAAKC,EAAKw4D,EAAQ0B,OAAO+O,EAAQjpE,IAC7DC,EAAKu4D,EAAQyB,OAAOgP,EAAQhpE,IAAKC,EAAKs4D,EAAQ0B,OAAO+O,EAAQ/oE,IAKjE,GAJI+oE,EAAQC,SACRjpE,GAAkB,IAAXA,EAAKF,GACZG,GAAkB,IAAXA,EAAKF,IAEZipE,EAAQM,UAAY,EAAG,CACvB,IAAInrE,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EAAIkqE,GAASjB,EAAQK,UAAY,GAAKL,EAAQM,UAC1EtpE,EAAKF,EAAK3B,EAAK8rE,EACfhqE,EAAKF,EAAK3B,EAAK6rE,CACnB,CACA,IAAI9iC,EAAK,IAAOrnC,EAAKE,GAAKsnC,EAAK,IAAOvnC,EAAKE,GACvCupE,IACA1pE,EAAKE,EAAKmnC,EACVpnC,EAAKE,EAAKqnC,EACNr8C,GAAKs+E,GACLzpE,IACAE,MAGAF,IACAE,MAGR,IAAIkqE,EAAUzrE,EAAKP,EAAQ8B,EAAKF,EAAIG,EAAKF,IACrC5B,GAAM6B,EAAKF,GAAMoqE,EAAS9rE,GAAM6B,EAAKF,GAAMmqE,EAC3CzjC,EAAKroC,EAAIsoC,GAAMvoC,EACfgsE,EAAMhjC,EAAK0iC,EAAOpjC,EAAI2jC,EAAM9iC,EAAKuiC,EAAOnjC,EACxC2jC,EAAMljC,EAAK0iC,EAAOpjC,EAAI6jC,EAAMhjC,EAAKuiC,EAAOnjC,EACxC6jC,EAAMJ,EAAML,EAAO3rE,EAAIqsE,EAAMJ,EAAMN,EAAO1rE,EAC1CqsE,EAAMJ,EAAMP,EAAO3rE,EAAIusE,EAAMJ,EAAMR,EAAO1rE,EAC1CusE,EAAQ/zF,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAG0+E,GAAY,CAAE,KAAQ,IAAI90D,GAAKs1D,EAAKC,EAAKL,EAAKC,KACtFQ,EAAQh0F,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAG0+E,GAAY,CAAE,KAAQ,IAAI90D,GAAKk1D,EAAKC,EAAKC,EAAKC,KACtFO,EAAQj0F,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAG0+E,GAAY,CAAE,KAAQ,IAAI90D,GAAKo1D,EAAKC,EAAKG,EAAKC,KAO1F,GANAvvF,KAAK0d,MAAMlhB,KAAKgzF,GAChBxvF,KAAK0d,MAAMlhB,KAAKizF,GAChBzvF,KAAK0d,MAAMlhB,KAAKkzF,GAChB1vF,KAAKu9E,MAAM/gF,KAAKwD,KAAKogF,iBAAiBoP,IACtCxvF,KAAKu9E,MAAM/gF,KAAKwD,KAAKogF,iBAAiBqP,IACtCzvF,KAAKu9E,MAAM/gF,KAAKwD,KAAKogF,iBAAiBsP,IAClC5/E,GAAKs+E,EAAQ,CACb,IAAIuB,EAAIC,EACJ/B,EAAQC,QACP6B,EAAIC,GAAM,CAACZ,EAAM,GAAMhvF,KAAK+e,MAAQusC,EAAI2jC,EAAM,GAAMjvF,KAAK+e,MAAQwsC,IAEjEokC,EAAIC,GAAM,CAACZ,EAAa,EAAPL,EAAW3rE,EAAIisE,EAAa,EAAPN,EAAW1rE,GACtD,IAAI4sE,EAAMp0F,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAG2+E,GAAY,CAAE,KAAQ,IAAK,KAAQ,IAAIp1D,EAAKk2D,EAAIC,EAAI,EAAG,KAGjG,GAFA5vF,KAAKs9E,OAAO9gF,KAAKqzF,GACjB7vF,KAAKu9E,MAAM/gF,KAAKwD,KAAKk/E,kBAAkB2Q,IACnB,MAAhBvpC,EAAKiB,QAAiB,CACtB,IAAIvhC,EAAO,IACPsgC,EAAKiB,SAAWL,GAAyB+B,WACzCjjC,EAAO,KACFsgC,EAAKiB,SAAWL,GAAyBgC,WAC9CljC,EAAO,KACFsgC,EAAKiB,SAAWL,GAAyBiC,SAC9CnjC,EAAO,MACP6nE,EAAQC,QACP6B,EAAIC,GAAM,CAACV,EAAM,GAAMlvF,KAAK+e,MAAQusC,EAAI6jC,EAAM,GAAMnvF,KAAK+e,MAAQwsC,IAEjEokC,EAAIC,GAAM,CAACV,EAAa,IAAPP,EAAa3rE,EAAImsE,EAAa,IAAPR,EAAa1rE,GAC1D,IAAI6sE,EAAMr0F,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAG2+E,GAAY,CAAE,KAAQ7oE,EAAM,KAAQ,IAAIyT,EAAKk2D,EAAIC,EAAI,EAAG,KAClG5vF,KAAKs9E,OAAO9gF,KAAKszF,GACjB9vF,KAAKu9E,MAAM/gF,KAAKwD,KAAKk/E,kBAAkB4Q,GAC3C,CACJ,CACJ,CACJ,CACA,sBAAAnC,CAAuBrnC,GACnB,MAAM,IAAE/Z,EAAG,QAAE6wC,GAAYp9E,KACzB,IAAIy7E,EAAO,GAAIsU,EAAO,GACtB,IAAK,IAAIngF,KAAK02C,EAAKkB,SAAU,CACzB,IAAI9a,EAAMH,EAAII,SAAS/8B,GAAIg9B,EAAML,EAAIM,OAAOj9B,GAC5C6rE,EAAKj/E,KAAK4gF,EAAQyB,OAAO,IAAOtyC,EAAI6e,MAAM1e,GAAOH,EAAI6e,MAAMxe,MAC3DmjD,EAAKvzF,KAAK4gF,EAAQ0B,OAAO,IAAOvyC,EAAI8e,MAAM3e,GAAOH,EAAI8e,MAAMze,KAC/D,CACA,IAAI1f,EAAqB,IAAhB,EAAIpU,IAAI2iE,GAActuD,EAAqB,IAAhB,EAAIrU,IAAIi3E,GACxC3yC,EAAM,GAAMp9C,KAAK+e,MACjB0N,EAAK,GAAIC,EAAK,GAClB,IAAK,IAAKhE,EAAIC,IAAO,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CACnC,IAAI3F,EAAKy4D,EAAK9yD,GAAM8yD,EAAK/yD,GAAKzF,EAAK8sE,EAAKpnE,GAAMonE,EAAKrnE,GAAK2J,EAAM+qB,EAAM95B,EAAKP,EAAQC,EAAIC,GAAM,OAC1FD,EAAIC,GAAM,CAACD,EAAKqP,EAAKpP,EAAKoP,GAC3BopD,EAAK/yD,IAAO,EAAI1F,EAChB+sE,EAAKrnE,IAAO,EAAIzF,EAChBw4D,EAAK9yD,IAAO,EAAI3F,EAChB+sE,EAAKpnE,IAAO,EAAI1F,EAChB,IAAIqoC,EAAKroC,EAAIsoC,GAAMvoC,EACfgtE,EAAO,EAAS,IAAOvU,EAAK/yD,GAAM+yD,EAAK9yD,IAAO2iC,EAAKp+B,EAAI,IAAO6iE,EAAKrnE,GAAMqnE,EAAKpnE,IAAO4iC,EAAKp+B,GACnF,EAAS,IAAOsuD,EAAK/yD,GAAM+yD,EAAK9yD,IAAO2iC,EAAKp+B,EAAI,IAAO6iE,EAAKrnE,GAAMqnE,EAAKpnE,IAAO4iC,EAAKp+B,GACnF6iE,KACN1kC,EAAIC,GAAM,EAAED,GAAKC,IACtB9+B,EAAGjwB,KAAS8uD,EAAIA,GAChB5+B,EAAGlwB,KAAS+uD,EAAIA,EACpB,CACA,MAAMqjC,EAAY,CAAE1O,KAAM,EAAGxzC,IAAK,EAAGE,IAAK,EAAG7uC,KAAM6+E,GAAU2D,OAAQzhF,KAAMkB,KAAKs+E,YAAah6C,KAAM,EAAG7iB,IAAKzhB,KAAKsqC,OAAO5gC,KAAKk6B,YACtHirD,EAAY,CAAE3pB,KAAM,EAAG0Z,IAAK,GAAM5+E,KAAKu+E,YAAahC,MAAM,EAAO96D,IAAKzhB,KAAKsqC,OAAO5gC,KAAKk6B,YAC7F,IAAIve,EAAW,CAACV,EAAIC,EAAIC,EAAIC,KACxB,IAAIo/C,EAAOzoE,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAG0+E,GAAY,CAAE,KAAQ,IAAI90D,GAAKnV,EAAIC,EAAIC,EAAIC,KACtF9kB,KAAK0d,MAAMlhB,KAAK0nE,GAChBlkE,KAAKu9E,MAAM/gF,KAAKwD,KAAKogF,iBAAiBlc,GAAM,EAE5C+rB,EAAW,CAACztE,EAAGE,EAAG0tD,KAClB,IAAI8b,EAAKzwF,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAG2+E,GAAY,CAAE,KAAQze,EAAK,KAAQ,IAAI32C,EAAKjX,EAAGE,EAAG,EAAG,KAC9F1iB,KAAKs9E,OAAO9gF,KAAK0vF,GACjBlsF,KAAKu9E,MAAM/gF,KAAKwD,KAAKk/E,kBAAkBgN,GAAI,EAE/C7mE,EAASo2D,EAAK,GAAIsU,EAAK,GAAItU,EAAK,GAAIsU,EAAK,IACzC1qE,EAASo2D,EAAK,GAAIsU,EAAK,GAAItU,EAAK,GAAKhvD,EAAG,GAAIsjE,EAAK,GAAKrjE,EAAG,IACzDrH,EAASo2D,EAAK,GAAIsU,EAAK,GAAItU,EAAK,GAAKhvD,EAAG,GAAIsjE,EAAK,GAAKrjE,EAAG,IACzDrH,EAASo2D,EAAK,GAAIsU,EAAK,GAAItU,EAAK,GAAIsU,EAAK,IACzC1qE,EAASo2D,EAAK,GAAIsU,EAAK,GAAItU,EAAK,GAAKhvD,EAAG,GAAIsjE,EAAK,GAAKrjE,EAAG,IACzDrH,EAASo2D,EAAK,GAAIsU,EAAK,GAAItU,EAAK,GAAKhvD,EAAG,GAAIsjE,EAAK,GAAKrjE,EAAG,IACzD,IAAIwjE,EAAO,EAAI54E,IAAImkE,GAAO0U,EAAO,EAAI74E,IAAIy4E,GACrC79D,EAAO,GACX,IAAK,IAAIpiB,EAAI,EAAGA,EAAI,EAAGA,IACnBoiB,EAAK11B,KAAKi/E,EAAK3rE,GAAKogF,EAAOH,EAAKjgF,GAAKqgF,GACzC,IAAIC,EAAO,EAAI14E,OAAOwa,GACtB+9D,EAASxU,EAAK2U,GAAQ3jE,EAAG2jE,GAAOL,EAAKK,GAAQ1jE,EAAG0jE,GAAO,KACvD,IAAIC,EAAQD,GAAQA,EAAO,GAAK,GAAK,EAAI,GAAIE,GAASD,EAAQ,GAAK,EACnEJ,EAASxU,EAAK6U,GAAS,GAAM7jE,EAAG6jE,GAAQP,EAAKO,GAAS,GAAM5jE,EAAG4jE,GAAQ,KACvEL,EAASxU,EAAK4U,GAAS,GAAM5jE,EAAG4jE,GAAQN,EAAKM,GAAS,GAAM3jE,EAAG2jE,GAAQ,IAC3E,EAEJxT,GAAgBE,aAAe,IChtE/B,IAAI,GAAwC,SAAU/8D,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAInd,WAAU,SAAU3F,EAASD,GAC/C,SAASijB,EAAUxkB,GAAS,IAAMykB,EAAKF,EAAU7W,KAAK1N,GAAS,CAAE,MAAOiQ,GAAK1O,EAAO0O,EAAI,CAAE,CAC1F,SAASyU,EAAS1kB,GAAS,IAAMykB,EAAKF,EAAiB,MAAEvkB,GAAS,CAAE,MAAOiQ,GAAK1O,EAAO0O,EAAI,CAAE,CAC7F,SAASwU,EAAKlX,GAJlB,IAAevN,EAIauN,EAAOQ,KAAOvM,EAAQ+L,EAAOvN,QAJ1CA,EAIyDuN,EAAOvN,MAJhDA,aAAiBskB,EAAItkB,EAAQ,IAAIskB,GAAE,SAAU9iB,GAAWA,EAAQxB,EAAQ,KAIjBoB,KAAKojB,EAAWE,EAAW,CAC7GD,GAAMF,EAAYA,EAAU9e,MAAM2e,EAASC,GAAc,KAAK3W,OAClE,GACJ,EAIA,IAAIinF,GAAiB,KACrB,MAAMC,GAAiB,CACnB,SAEG,MAAMC,GACT,eAAW9+E,GAAS,OAAO4+E,EAAgB,CAC3C,WAAArzF,GACI8C,KAAK0wF,MAAQ,GACb1wF,KAAK2wF,SAAW,IAAIztF,IACpBlD,KAAK4wF,cAAgB,IAAIxsF,GAC7B,CACA,WAAOysF,GACH,OAAO,GAAU7wF,UAAM,OAAQ,GAAQ,YACnC,IAAIuwF,GAAJ,CAEAA,GAAiB,IAAIE,GACrB,IAAK,IAAI5nF,KAAM2nF,GAAgB,CAC3B,IAAIpqE,EAAMqd,GAAME,aAAe,kBAAoB96B,EAAK,QACxD0nF,GAAeO,YAAY1qE,EAC/B,CALU,CAMd,GACJ,CACA,QAAA2qE,GACI,OAAO/wF,KAAK0wF,KAChB,CACA,OAAAM,CAAQC,GAAO,OAAOjxF,KAAK2wF,SAASrsF,IAAI2sF,EAAM,CAC9C,SAAAC,CAAUD,GACN,OAAOjxF,KAAK2wF,SAASlwF,IAAIwwF,EAC7B,CACA,aAAAE,CAAcC,GACV,GAAmB,iBAARA,EAAkB,CACzB,IAAI/oD,EAAOroC,KAAK2wF,SAASlwF,IAAI2wF,GAC7B,IAAK/oD,EACD,KAAM,uBAAuB+oD,IACjC,GAAI/oD,EAAKzpC,OAAS,EACd,KAAM,+CAA+CwyF,IACzDA,EAAO/oD,EAAK,EAChB,CACA,IAAI5jB,EAAO,GACP4sE,EAAcC,IACd7sE,EAAKjoB,KAAK80F,GACV,IAAK,IAAI91D,KAAS,EAAIjnB,UAAU+8E,EAAO9yD,UACnC6yD,EAAW71D,EAAM,EAGzB,OADA61D,EAAWD,GACJ3sE,CACX,CACA,WAAAqsE,CAAY1qE,GACR,OAAO,GAAUpmB,UAAM,OAAQ,GAAQ,YACnC,GAAIA,KAAK4wF,cAActsF,IAAI8hB,GACvB,OACJpmB,KAAK4wF,cAActwF,IAAI8lB,GACvB,IAAIJ,QAAaG,EAAYC,GAC7B,IAAKJ,EACD,KAAM,uBAAuBI,IACjCpmB,KAAKuxF,YAAYvrE,EACrB,GACJ,CACA,WAAAurE,CAAYvrE,GACR,IAAIwrE,EAAW,GACX74E,EAAM,EACV,IAAK,IAAIurD,KAAQl+C,EAAK2a,MAAM,MAAO,CAG/B,GAFAhoB,IACAurD,EAAOA,EAAKG,QACPH,GAAQA,EAAKxjD,WAAW,KACzB,SACJ,IAAI7K,EAAMquD,EAAK1pD,QAAQ,QACvB,GAAI3E,EAAM,EACN,KAAM,QAAQ8C,2BAA6BurD,IAC/C,IAAIh3D,EAAQ,EACZ,IAAK,IAAI4C,EAAI,EAAGA,EAAI+F,EAAK/F,IACC,KAAlBo0D,EAAKpyD,OAAOhC,IACZ5C,IACR,IAAI+jF,EAAM/sB,EAAKvjD,UAAU9K,GAEzB,GADAA,EAAMo7E,EAAIz2E,QAAQ,KACd3E,EAAM,EACN,KAAM,QAAQ8C,wBAA0BurD,IAC5C,IAAIgF,EAAQ+nB,EAAItwE,UAAU9K,EAAM,GAChCo7E,EAAMA,EAAItwE,UAAU,EAAG9K,GACvB,IAAI47E,EAAO,KAGX,GAFa,GAATvkF,IACAukF,EAAOzxF,KAAK0wF,MAAM5yD,MAAMuK,GAASA,EAAK4oD,KAAOA,MAC5CQ,EAAM,CAEP,GADAA,EAAO,CAAER,MAAK/nB,QAAO,OAAU,KAAM,SAAY,GAAIh8D,SACxC,GAATA,EACAlN,KAAK0wF,MAAMl0F,KAAKi1F,OACf,CACD,IAAK,IAAI3hF,EAAI0hF,EAAS5yF,OAAS,EAAGkR,GAAK,EAAGA,IACtC,GAAI0hF,EAAS1hF,GAAG5C,OAASA,EAAQ,EAAG,CAChCukF,EAAK3wE,OAAS0wE,EAAS1hF,GACvB0hF,EAAS1hF,GAAG0uB,SAAShiC,KAAKi1F,GAC1B,KACJ,CACJ,IAAKA,EAAK3wE,OACN,KAAM,QAAQnI,sCACtB,CACA,IAAI8L,EAAOzkB,KAAK2wF,SAASlwF,IAAIwwF,GACzBxsE,EACAA,EAAKjoB,KAAKi1F,GAEVzxF,KAAK2wF,SAASjwF,IAAIuwF,EAAK,CAACQ,GAChC,CACAD,EAASh1F,KAAKi1F,EAClB,CACJ,CACA,WAAAC,CAAYD,GACR,IAAI/zE,EAAQ,GACR9R,EAAQ6lF,IACR/zE,EAAMlhB,KAAK,KAAKm1F,OAAOF,EAAKvkF,OAAS,IAAIukF,EAAKR,SAASQ,EAAKvoB,UAC5D,IAAK,IAAI1tC,KAASi2D,EAAKjzD,SACnB5yB,EAAK4vB,EAAM,EAGnB,OADA5vB,EAAK6lF,GACE/zE,EAAMI,KAAK,KACtB,EC3GJ,IAAK8zE,GCYOC,GC3BDC,GAUPC,GCPOC,GCFAC,GAWAC,IJGX,SAAKN,GAEJ,uBACA,uBACA,kBACA,CALD,CAAKA,KAAAA,GAAmB,KAwBjB,MAAMO,GAUZ,WAAAj1F,CAAoBk1F,EAAuBC,EAAqBC,EAAuBC,GAAnE,KAAAH,SAAAA,EAAuB,KAAAC,MAAAA,EAAqB,KAAAC,OAAAA,EAAuB,KAAAC,OAAAA,EAPhF,KAAAC,OAAe,KASrBxyF,KAAKyyF,UAAYL,EAASxvE,EAAIwvE,EAASvvE,CAcxC,CAGO,IAAA+uB,GAEN,IAAI8gD,EAAsC,GACtC/iD,EAAM3vC,KAAKqyF,MAAMzzF,OACrB,IAAK,IAAIkR,EAAI,EAAGA,EAAI6/B,EAAK7/B,IACzB,CACC,IAAI6iF,EAA8B,CAACC,SAAU9iF,EAAG+iF,QAAS,EAAIz8E,SAASw7E,GAAoBkB,KAAMnjD,IAChGgjD,EAAKI,KAAOJ,EAAKC,SAAW,IAAMD,EAAKE,QACvC7yF,KAAKgzF,iBAAiBL,GACtBD,EAAWl2F,KAAKm2F,EACjB,CAGAD,EAAaA,EAAWh5E,MAAK,CAAC6O,EAAIC,IAAOD,EAAGqiC,MAAQpiC,EAAGoiC,QAAO37C,MAAM,EADvD,KAGb,IAAK,IAAIu2B,EAAS,IAAKA,EAAS,EAAGA,IACnC,CACC,IAAIytD,EAAS,IAAI7uF,IACjB,IAAK,IAAIuuF,KAAQD,EAAYO,EAAO3yF,IAAIqyF,EAAKI,MAE7C,IAAIG,EAAQR,EAAWzjF,MAAM,GAC7B,IAAK,IAAI0jF,KAAQD,EAAY,IAAK,IAAI5iF,EAAI,EAAGA,EAAI6/B,EAAK7/B,IAAK,GAAIA,GAAK6iF,EAAKC,SAExE,IAAK,IAAI5zE,IAAM,CAAC4yE,GAAoBuB,OAAQvB,GAAoBwB,OAAQxB,GAAoBkB,MAAO,GAAIH,EAAKE,QAAQ/iF,IAAMkP,EAC1H,CACC,IAAIqqD,EAA6B,CAACupB,SAAUD,EAAKC,SAAUC,QAASF,EAAKE,QAAQ5jF,MAAM,IAGvF,GAFAo6D,EAAIwpB,QAAQ/iF,GAAKkP,EACjBqqD,EAAI0pB,KAAO1pB,EAAIupB,SAAW,IAAMvpB,EAAIwpB,QAChCI,EAAO3uF,IAAI+kE,EAAI0pB,MAAO,SAC1B/yF,KAAKgzF,iBAAiB3pB,GACtB6pB,EAAM12F,KAAK6sE,EACZ,CAGD6pB,EAAQA,EAAMx5E,MAAK,CAAC6O,EAAIC,IAAOD,EAAGqiC,MAAQpiC,EAAGoiC,QAAO37C,MAAM,EAtB9C,KAwBZ,IAAI4hC,GAAO,EACX,IAAK,IAAI/gC,EAAI,EAAGA,EAAI4iF,EAAW9zF,QAAUkR,EAAIojF,EAAMt0F,OAAQkR,IAAK,GAAI4iF,EAAW5iF,GAAGijF,MAAQG,EAAMpjF,GAAGijF,KAAM,CAACliD,GAAO,EAAO,KAAM,CAE9H,IAAKA,EAAM,MAEX6hD,EAAaQ,CACd,CAEA,IAAIl/C,EAAO0+C,EAAW,GAEtB1yF,KAAKqzF,QAAUr/C,EAAKq/C,QACpBrzF,KAAKwyF,OAASx+C,EAAKw+C,OACnB,IAAI5oE,EAAO,EAAItS,IAAItX,KAAKwyF,OAAOn0F,KAAKuR,GAAMA,EAAE8S,KAC5C,IAAK,IAAIiX,KAAO35B,KAAKwyF,OAAQ74D,EAAIjX,GAAKkH,EAEtC,OAAO,CACR,CAIQ,gBAAAopE,CAAiBL,GAExB,IAAIn+E,EAAMxU,KAAKqyF,MAAMzzF,OACrB+zF,EAAKH,OAASxyF,KAAKqyF,MAAMh0F,KAAKs7B,GAAQ,IAAIzB,EAAI,EAAG,EAAGyB,EAAI/W,EAAG+W,EAAI9W,KAC/D,IAAIywE,EAAS,EAAIz8E,cAAa,EAAOrC,GACrC8+E,EAAOX,EAAKC,WAAY,EAExB,IAAIW,EAAa,CAAC19E,EAAY29E,KAE7B,IAAI75D,EAAMg5D,EAAKH,OAAO38E,GAClB49E,EAA8B,KAClC,IAAK,IAAI3jF,EAAI+F,EAAM,EAAG/F,EAAI0E,EAAK1E,IAAK,GAAIwjF,EAAOxjF,GAC/C,CACC,IAAI3O,EAAMwxF,EAAKH,OAAO1iF,GAClB4jF,EAAiC,GAIrC,GAHIvyF,EAAIwoB,OAAS,GAAG+pE,EAAQl3F,KAAK,CAACkmB,EAAGvhB,EAAIw3B,OAAS34B,KAAKuyF,OAAQ5tE,GAAI,EAAGE,GAAI1jB,EAAIwoB,OAAS3pB,KAAKsyF,SAC5FoB,EAAQl3F,KAAK,CAACkmB,EAAGvhB,EAAIyoB,OAAS5pB,KAAKuyF,OAAQ5tE,GAAIhO,KAAKC,IAAI,EAAGzV,EAAIwoB,OAAS3pB,KAAKsyF,QAASztE,GAAI1jB,EAAI0oB,OAAS7pB,KAAKsyF,SAC5GoB,EAAQl3F,KAAK,CAACkmB,EAAGvhB,EAAIyoB,OAAS5pB,KAAKuyF,OAAS,GAAM54D,EAAI9W,EAAG8B,GAAIxjB,EAAI0oB,OAAS7pB,KAAKsyF,OAAQztE,GAAItnB,OAAO4sB,oBACtF,MAARspE,EAAcA,EAAOC,OACpB,IAAK,IAAIngE,KAAQmgE,EAAS1zF,KAAK2zF,kBAAkBF,EAAMlgE,EAC7D,CAEA,IAAIo9B,EAAQ,EAAGC,EAAQrzD,OAAOwtB,kBAC9B,IAAK,IAAIjb,EAAI,EAAGA,EAAI2jF,EAAK70F,OAAQkR,IACjC,CACC,IAAI0S,EAAIixE,EAAK3jF,GAAG6U,GAAIjC,EAAInlB,OAAO4sB,kBAC/B,IAAK,IAAIpgB,EAAI+F,EAAG/F,EAAI0pF,EAAK70F,SAExB8jB,EAAI/L,KAAKW,IAAIoL,EAAG+wE,EAAK1pF,GAAG2Y,KACpBiX,EAAI/W,EAAI6wE,EAAK1pF,GAAG8a,GAAKrC,IAHOzY,KAMjC,GADI2Y,EAAIkuC,KAAQD,EAAOC,GAAS,CAACpuC,EAAGE,IAChC8wE,GAAU5B,GAAoBuB,OAAQ,MAC1C,GAAIK,GAAU5B,GAAoBwB,QAAU5wE,EAAI,GAAMxiB,KAAKoyF,SAASxvE,EAAG,KACxE,CACA+W,EAAInX,EAAImuC,EACRh3B,EAAIjX,EAAIkuC,EAAQj3B,EAAI9W,EACpBywE,EAAOz9E,IAAO,CAAI,EAEf+9E,EAAa,CAAC/9E,EAAY29E,KAE7B,IAAI75D,EAAMg5D,EAAKH,OAAO38E,GAClB49E,EAA8B,KAClC,IAAK,IAAI3jF,EAAI+F,EAAM,EAAG/F,GAAK,EAAGA,IAAK,GAAIwjF,EAAOxjF,GAC9C,CACC,IAAI3O,EAAMwxF,EAAKH,OAAO1iF,GAClB4jF,EAAiC,GAIrC,GAHIvyF,EAAIwoB,OAAS,GAAG+pE,EAAQl3F,KAAK,CAACkmB,EAAGvhB,EAAIw3B,OAAS34B,KAAKuyF,OAAQ5tE,GAAI,EAAGE,GAAI1jB,EAAIwoB,OAAS3pB,KAAKsyF,SAC5FoB,EAAQl3F,KAAK,CAACkmB,EAAGvhB,EAAI2oB,OAAS9pB,KAAKuyF,OAAQ5tE,GAAIhO,KAAKC,IAAI,EAAGzV,EAAIwoB,OAAS3pB,KAAKsyF,QAASztE,GAAI1jB,EAAI0oB,OAAS7pB,KAAKsyF,SAC5GoB,EAAQl3F,KAAK,CAACkmB,EAAGvhB,EAAI2oB,OAAS9pB,KAAKuyF,OAAS,GAAM54D,EAAI9W,EAAG8B,GAAIxjB,EAAI0oB,OAAS7pB,KAAKsyF,OAAQztE,GAAItnB,OAAO4sB,oBACtF,MAARspE,EAAcA,EAAOC,OACpB,IAAK,IAAIngE,KAAQmgE,EAAS1zF,KAAK6zF,kBAAkBJ,EAAMlgE,EAC7D,CAEA,IAAIo9B,EAAQ,EAAGC,EAAQrzD,OAAO4sB,kBAC9B,IAAK,IAAIra,EAAI,EAAGA,EAAI2jF,EAAK70F,OAAQkR,IACjC,CACC,IAAI0S,EAAIixE,EAAK3jF,GAAG6U,GAAIjC,EAAInlB,OAAOwtB,kBAC/B,IAAK,IAAIhhB,EAAI+F,EAAG/F,EAAI0pF,EAAK70F,SAExB8jB,EAAI/L,KAAKC,IAAI8L,EAAG+wE,EAAK1pF,GAAG2Y,KACpBiX,EAAI/W,EAAI6wE,EAAK1pF,GAAG8a,GAAKrC,IAHOzY,KAMjC,GADI2Y,EAAIkuC,KAAQD,EAAOC,GAAS,CAACpuC,EAAGE,IAChC8wE,GAAU5B,GAAoBuB,OAAQ,MAC1C,GAAIK,GAAU5B,GAAoBwB,QAAU5wE,EAAI,GAAMxiB,KAAKoyF,SAASxvE,EAAG,KACxE,CACA+W,EAAInX,EAAImuC,EACRh3B,EAAIjX,EAAIkuC,EACR0iC,EAAOz9E,IAAO,CAAI,EAGnB,IAAK,IAAI5B,EAAI,EAAGA,EAAIO,EAAKP,IACzB,CACC,IAAIyU,EAAKiqE,EAAKC,SAAW3+E,EAAG0U,EAAKgqE,EAAKC,SAAW3+E,EAC7CyU,GAAM,GAAG6qE,EAAW7qE,EAAIiqE,EAAKE,QAAQnqE,IACrCC,EAAKnU,GAAKo/E,EAAWjrE,EAAIgqE,EAAKE,QAAQlqE,GAC3C,CAEA,IAAamrE,EAAM,EAAIl9E,IAAI+7E,EAAKH,OAAOn0F,KAAKs7B,GAAQA,EAAI9P,UACpDkqE,EAAM,EAAIz8E,IAAIq7E,EAAKH,OAAOn0F,KAAKs7B,GAAQA,EAAI/P,UAAUoqE,EAAM,EAAIp9E,IAAI+7E,EAAKH,OAAOn0F,KAAKs7B,GAAQA,EAAI7P,UACpG6oE,EAAKU,QAAU,IAAIx7D,EAAKi8D,EAFd,EAEyBE,EAAMD,GACzC,IAAIlsD,EAAQ8qD,EAAKU,QAAQzwE,EAAI+vE,EAAKU,QAAQxwE,EAC1C8vE,EAAK/nC,MAAQj0C,KAAKuF,IAAI2rB,EAAQ7nC,KAAKyyF,YAAcE,EAAKU,QAAQzwE,EAAI+vE,EAAKU,QAAQxwE,GAC/E8vE,EAAK/nC,OAAS,EAAI9xC,IAAK65E,EAAKH,OAAOn0F,KAAKs7B,GAAQA,EAAInX,KACpD,IAAK,IAAI1S,EAAI,EAAGA,EAAI6iF,EAAKH,OAAO5zF,OAAS,EAAGkR,IAAK6iF,EAAK/nC,OAASj0C,KAAKC,IAAI,EAAG+7E,EAAKH,OAAO1iF,GAAG8Z,OAAS+oE,EAAKH,OAAO1iF,GAAGga,OACnH,CAEQ,iBAAA6pE,CAAkBF,EAA6BQ,GAEtD,IAAK,IAAI5rD,KAAQorD,EACjB,CACC,GAAIQ,EAAMtvE,IAAM0jB,EAAK1jB,IAAMsvE,EAAMtvE,IAAM0jB,EAAKxjB,IAAMovE,EAAMpvE,IAAMwjB,EAAK1jB,IAAMsvE,EAAMpvE,IAAMwjB,EAAKxjB,GAC1F,CACC,GAAIovE,EAAMvxE,EAAI2lB,EAAK3lB,EAAG,OACtB+wE,EAAKj3F,KAAK,CAACkmB,EAAG2lB,EAAK3lB,EAAGiC,GAAIsvE,EAAMpvE,GAAIA,GAAIwjB,EAAKxjB,KAC7CwjB,EAAKxjB,GAAKovE,EAAMtvE,GAChB,KACD,CACIsvE,EAAMtvE,IAAM0jB,EAAK1jB,IAAMsvE,EAAMtvE,IAAM0jB,EAAKxjB,KAEvCovE,EAAMvxE,EAAI2lB,EAAK3lB,EAAG2lB,EAAKxjB,GAAKovE,EAAMtvE,GAASsvE,EAAMtvE,GAAK0jB,EAAKxjB,IAE5DovE,EAAMpvE,IAAMwjB,EAAK1jB,IAAMsvE,EAAMpvE,IAAMwjB,EAAKxjB,KAEvCovE,EAAMvxE,EAAI2lB,EAAK3lB,EAAG2lB,EAAK1jB,GAAKsvE,EAAMpvE,GAASovE,EAAMpvE,GAAKwjB,EAAK1jB,GAEjE,CACA,IAAK,IAAI7U,EAAI2jF,EAAK70F,OAAS,EAAGkR,GAAK,EAAGA,IAAS2jF,EAAK3jF,GAAG6U,IAAM8uE,EAAK3jF,GAAG+U,IAAI4uE,EAAKnmF,OAAOwC,EAAG,GACpFmkF,EAAMtvE,GAAKsvE,EAAMpvE,KAEpB4uE,EAAKj3F,KAAKy3F,GACVR,EAAK/5E,MAAK,CAACw6E,EAAMC,IAASD,EAAKvvE,GAAKwvE,EAAKxvE,KAE3C,CACQ,iBAAAkvE,CAAkBJ,EAA6BQ,GAEtD,IAAK,IAAI5rD,KAAQorD,EACjB,CACC,GAAIQ,EAAMtvE,IAAM0jB,EAAK1jB,IAAMsvE,EAAMtvE,IAAM0jB,EAAKxjB,IAAMovE,EAAMpvE,IAAMwjB,EAAK1jB,IAAMsvE,EAAMpvE,IAAMwjB,EAAKxjB,GAC1F,CACC,GAAIovE,EAAMvxE,EAAI2lB,EAAK3lB,EAAG,OACtB+wE,EAAKj3F,KAAK,CAACkmB,EAAG2lB,EAAK3lB,EAAGiC,GAAIsvE,EAAMpvE,GAAIA,GAAIwjB,EAAKxjB,KAC7CwjB,EAAKxjB,GAAKovE,EAAMtvE,GAChB,KACD,CACIsvE,EAAMtvE,IAAM0jB,EAAK1jB,IAAMsvE,EAAMtvE,IAAM0jB,EAAKxjB,KAEvCovE,EAAMvxE,EAAI2lB,EAAK3lB,EAAG2lB,EAAKxjB,GAAKovE,EAAMtvE,GAASsvE,EAAMtvE,GAAK0jB,EAAKxjB,IAE5DovE,EAAMpvE,IAAMwjB,EAAK1jB,IAAMsvE,EAAMpvE,IAAMwjB,EAAKxjB,KAEvCovE,EAAMvxE,EAAI2lB,EAAK3lB,EAAG2lB,EAAK1jB,GAAKsvE,EAAMpvE,GAASovE,EAAMpvE,GAAKwjB,EAAK1jB,GAEjE,CACA,IAAK,IAAI7U,EAAI2jF,EAAK70F,OAAS,EAAGkR,GAAK,EAAGA,IAAS2jF,EAAK3jF,GAAG6U,IAAM8uE,EAAK3jF,GAAG+U,IAAI4uE,EAAKnmF,OAAOwC,EAAG,GACpFmkF,EAAMtvE,GAAKsvE,EAAMpvE,KAEpB4uE,EAAKj3F,KAAKy3F,GACVR,EAAK/5E,MAAK,CAACw6E,EAAMC,IAASD,EAAKvvE,GAAKwvE,EAAKxvE,KAE3C,GC9OD,SAAYktE,GAEX,mBACA,2BACA,+BACA,kBACA,CAND,CAAYA,KAAAA,GAAwB,KA2C7B,MAAMuC,GAyBZ,WAAAl3F,CAAmBm3F,EAAwBjX,EAAmC9yC,GAA3D,KAAA+pD,QAAAA,EAAwB,KAAAjX,QAAAA,EAAmC,KAAA9yC,OAAAA,EAvBvE,KAAAggD,KAAmB,KAInB,KAAA5qF,MAAQ,EACR,KAAAC,OAAS,EAET,KAAA20F,WAAuC,GAKvC,KAAAC,WAAkB,KAClB,KAAAC,gBAAiB,EACjB,KAAAC,kBAA+B,GAC/B,KAAAC,aAAoB,KAGpB,KAAAC,oBAAqB,EAO3B30F,KAAK+e,MAAQurB,EAAO5gC,KAAKmgC,WACzB7pC,KAAK40F,aAAe,GAAM50F,KAAK+e,MAC/B/e,KAAK60F,aAAe70F,KAAK80F,aAA4B,GAAb90F,KAAK+e,MAC7C/e,KAAK+0F,aAAe,GAAK/0F,KAAK+e,MAC9B/e,KAAKg1F,aAAe,EAAIh1F,KAAK+e,KAC9B,CAGO,OAAAq/D,GAENp+E,KAAKi1F,mBACLj1F,KAAKk1F,oBAAoB,GACzBl1F,KAAKm1F,qBAGL,IAAI9B,EAAc,KAClB,IAAK,IAAI/rD,KAAQtnC,KAAKs0F,WAERjB,EAATA,EAAmBA,EAAQ/5D,MAAMgO,EAAK+iB,UAA0B/iB,EAAK+iB,SAG1E,IAAK,IAAI/iB,KAAQtnC,KAAKs0F,WAKrB,GAHAhtD,EAAK+iB,SAAS7nC,GAAK6wE,EAAQ7wE,EAC3B8kB,EAAK+iB,SAAS3nC,GAAK2wE,EAAQ3wE,EAEvB4kB,EAAK8tD,UACT,CACC,IAAItgC,EAAKxtB,EAAK+iB,SAAU0K,EAAKztB,EAAK+tD,OAClC/tD,EAAK8tD,UAAU7R,YAAYzuB,EAAGtyC,EAAIuyC,EAAGvyC,EAAGsyC,EAAGpyC,EAAIqyC,EAAGryC,EAAGqyC,EAAGnyC,EAAGmyC,EAAGlyC,EAC/D,CAED7iB,KAAKN,MAAQ2zF,EAAQzwE,EACrB5iB,KAAKL,OAAS0zF,EAAQxwE,CACvB,CAGO,eAAAyyE,CAAgBC,GAEtB,GAAgB,GAAZA,EAAJ,CAEAv1F,KAAK+e,OAASw2E,EACdv1F,KAAKN,OAAS61F,EACdv1F,KAAKL,QAAU41F,EACf,IAAK,IAAIjuD,KAAQtnC,KAAKs0F,WACtB,CAGC,GAFAhtD,EAAK+iB,SAAS7yB,QAAQ+9D,GACtBjuD,EAAK+rD,QAAQ77D,QAAQ+9D,GACjBjuD,EAAK+tD,SAER/tD,EAAK+tD,OAAO79D,QAAQ+9D,GAChBjuD,EAAK8tD,WACT,CACC,IAAIppC,EAAK1kB,EAAK+iB,SAAS7nC,EAAI8kB,EAAK+tD,OAAO7yE,EAAG2pC,EAAK7kB,EAAK+iB,SAAS3nC,EAAI4kB,EAAK+tD,OAAO3yE,EAC7E4kB,EAAK8tD,UAAU7R,YAAYv3B,EAAIG,EAAI7kB,EAAK+tD,OAAOzyE,EAAG0kB,EAAK+tD,OAAOxyE,EAC/D,CAEGykB,EAAKkuD,SAASluD,EAAKkuD,QAAQh+D,QAAQ+9D,GACnCjuD,EAAKmuD,aAAanuD,EAAKmuD,YAAYj+D,QAAQ+9D,GAC/CjuD,EAAKyC,UAAYwrD,CAClB,CArByB,CAsB1B,CAGO,aAAAG,CAActtD,GAEpB,IAAK,IAAIt4B,EAAI,EAAGA,EAAI9P,KAAKs0F,WAAW11F,OAAQkR,IAAK,GAAI,EAAIwG,OAAOtW,KAAKs0F,WAAWxkF,GAAGs4B,OAAQA,GAAS,OAAOt4B,EAC3G,OAAQ,CACT,CAGO,qBAAO6lF,CAAeC,GAE5B,IAAIC,EAAQ94F,IAEX,GAAW,MAAPA,EAAa,MAAO,GACxB,GAAIA,EAAM,IAAO,OAAO4Z,KAAK0tC,MAAMtnD,GAAK2W,WACxC,IAAI8M,EAAMzjB,EAAIukB,YAAY,GAC1B,GAAId,EAAIhG,QAAQ,MAAQ,GAAKgG,EAAIhG,QAAQ,KAAO,EAAG,OAAOgG,EAC1D,OACA,CACC,IAAIA,EAAIe,SAAS,KACZ,IAAIf,EAAIe,SAAS,KAAM,CAACf,EAAMA,EAAIG,UAAU,EAAGH,EAAI5hB,OAAS,GAAI,KAAM,CACtE,KAAK,CAFa4hB,EAAMA,EAAIG,UAAU,EAAGH,EAAI5hB,OAAS,EAG5D,CACA,OAAO4hB,CAAG,EAGX,GAAIo1E,EAAQ/tD,MAEX,OAA4B,GAAxB+tD,EAAQ/tD,MAAMjpC,OAAoBi3F,EAAKD,EAAQ/tD,MAAM,IAAM,IAAMguD,EAAKD,EAAQ/tD,MAAM,IACjF,KAGR,GAAwB,MAApB+tD,EAAQhuD,SAAkB,OAAO,KAErC,IAAIpnB,EAAM,GACV,GAAIo1E,EAAQE,UAAgC,KAApBF,EAAQE,SAChC,CACC,IAAIC,EAAMH,EAAQE,SACP,MAAPC,EAAaA,EAAM,IAA4B,MAAPA,IAAaA,EAAM,KAC/Dv1E,GAAOu1E,CACR,CACA,GAAIH,EAAQhuD,oBAAoBtoC,MAChC,CACC,GAA+B,GAA3Bs2F,EAAQhuD,SAAShpC,OAAa,OAClC4hB,GAAOq1E,EAAKD,EAAQhuD,SAAS,IACzBguD,EAAQhuD,SAAShpC,QAAU,IAAG4hB,GAAO,MAAQq1E,EAAKD,EAAQhuD,SAAS,IACxE,MAGCpnB,GAAOq1E,EAAKD,EAAQhuD,UAChBguD,EAAQluF,QAGX8Y,GAAO,MAAeq1E,EAAKD,EAAQluF,QAUrC,OANIkuF,EAAQ9tC,QAEN8tC,EAAQ9tC,MAAMpnC,WAAW,OAAMF,GAAO,KAC3CA,GAAOo1E,EAAQ9tC,OAGTtnC,CACR,CAGQ,kBAAAw1E,CAAmB5tD,GAE1B,IAAKpoC,KAAKsqF,KAAM,OAChB,IAAI2L,EAAOj2F,KAAKsqF,KAAK4L,SAAS9tD,GAC9B,IAAK6tD,IAASA,EAAKE,aAAc,OAEjC,IAAI7uD,EACJ,CACCM,SAAUquD,EAAKE,aACfzuF,MAAOuuF,EAAKG,UACZtuC,MAAOmuC,EAAKI,UACZP,SAAUG,EAAKK,cAEhB,OAAOlC,GAAeuB,eAAeruD,EACtC,CAKQ,gBAAA2tD,GAGP,IAAIsB,EAAgB,CAACnuD,EAAiBwtD,EAA0B//E,KAE/D,IAAIyxB,EAA+B,CAACc,OAAQA,EAAQvK,QAAS+3D,EAASY,UAAW3gF,GAC7E2gF,EAAYx2F,KAAKs0F,WAAW93F,KAAK8qC,GAAQ,EAG7CA,EAAKmvD,aAAc,EACnB,IAAK,IAAIruD,KAAUpoC,KAAKy0F,kBAAuB,EAAIn+E,OAAO8xB,EAAQd,EAAKc,UAASd,EAAKmvD,aAAc,GAEnG,GAAIb,EAAQluD,WAAaJ,EAAKmvD,YAAa,IAAK,IAAI3mF,EAAI,EAAGA,EAAI8lF,EAAQluD,SAAS9oC,OAAQkR,IACxF,CACC,IAAI4mF,EAAY,EAAInhF,OAAO6yB,EAAQt4B,GACnCymF,EAAcG,EAAWd,EAAQluD,SAAS53B,GAAI0mF,EAC/C,GAEDD,EAAc,GAAIv2F,KAAKq0F,QAAQltD,SAAU,GAEzC,IAAIkC,EAzMU,IAyMUrpC,KAAK+e,MAG7B,IAAK,IAAKlJ,EAAKyxB,KAAStnC,KAAKs0F,WAAWl2F,UACxC,CACC,IAAIw3F,EAAUtuD,EAAKzJ,QAInB,GADI+3D,EAAQrlB,UAASjpC,EAAKiF,IAAMqkC,GAAeC,YAAY+kB,EAAQrlB,UAC/DjpC,EAAKiF,IACT,CACCjF,EAAK8tD,UAAY,IAAIvY,GAAgBv1C,EAAKiF,IAAKvsC,KAAKo9E,QAASp9E,KAAKsqC,QAClEhD,EAAK8tD,UAAUhX,UACf92C,EAAK8tD,UAAU7R,YAAY,EAAG,EAAGvjF,KAAK60F,aAAc70F,KAAK80F,cACzD,IAAI3R,EAAS77C,EAAK8tD,UAAUhS,oBAC5B97C,EAAK+tD,OAAS,IAAIn9D,EAAImR,EAASA,EAAS1yB,KAAKoN,KAAKo/D,EAAO,GAAKA,EAAO,IAAKxsE,KAAKoN,KAAKo/D,EAAO,GAAKA,EAAO,IACxG,MACK77C,EAAK+tD,OAASn9D,EAAIZ,OAGvBgQ,EAAKqvD,UAAY,GACbf,EAAQ95F,MAAMkE,KAAK42F,cAActvD,EAAKqvD,UAAWf,EAAQ95F,KAAM,EAAU+1F,GAAyBgF,MAGtG,IAAIC,EAAQ1C,GAAeuB,eAAeC,GAM1C,GALIkB,GAAOxvD,EAAKqvD,UAAUn6F,KAAK,CAACwpB,KAAM8wE,EAAOr1E,IAAK,EAAUxjB,OAAQ4zF,GAAyBkF,WAE7FD,EAAQ92F,KAAKg2F,mBAAmB1uD,EAAKc,QACjC0uD,GAAOxvD,EAAKqvD,UAAUn6F,KAAK,CAACwpB,KAAM,IAAI8wE,KAAUr1E,IAAK,QAAUxjB,OAAQ4zF,GAAyBkF,WAEhG/2F,KAAK20F,oBAAsBiB,EAAQoB,YAAa,IAAK,IAAI14F,KAAOs3F,EAAQoB,YAC5E,CACC,IAAI9yB,EAAO5lE,EAAM,IACbvB,EAAM64F,EAAQoB,YAAY14F,GAC9B,GAAIvB,aAAeuC,MAElB,IAAK,IAAIwQ,EAAI,EAAGA,EAAI/S,EAAI6B,OAAQkR,IAAKo0D,IAAc,GAALp0D,EAAS,GAAK,MAAQ/S,EAAI+S,QAEpEo0D,GAAQnnE,EACbuqC,EAAKqvD,UAAUn6F,KAAK,CAACwpB,KAAMhmB,KAAKi3F,iBAAiB/yB,GAAOziD,IAAK,QAAUxjB,OAAQ4zF,GAAyBqF,YACzG,CACA,GAAItB,EAAQuB,SAAU,IAAK,IAAI5yF,KAAQqxF,EAAQuB,SAC/C,CACC,IAAIC,EAAcv1F,IAEjB,GAAgB,iBAALA,EAAe,OAAOuf,EAAavf,EAAG,GACjD,IAAK4uF,GAAa9+E,KAAM,OAAO9P,EAC/B,IAAIyvF,EAASb,GAAa9+E,KAAKu/E,UAAUrvF,GACzC,OAAI,EAAIyS,SAASg9E,GAAgBA,EAAO,GAAGpoB,MACpCrnE,CAAC,EAELgyC,EAAgB,GACKA,EAArBv0C,MAAMC,QAAQgF,GAAcA,EAAKlG,KAAKwD,GAAMu1F,EAAWv1F,KAAiB,CAACu1F,EAAW7yF,IACxF+iC,EAAKqvD,UAAUn6F,KAAK,CAACwpB,KAAM6tB,EAAK/1B,KAAK,KAAM2D,IAAK,MAAUxjB,OAAQ4zF,GAAyBwF,MAC5F,CAEA/vD,EAAKkuD,QAAU,IAAIt9D,EAAImR,EAASA,GAChC/B,EAAKyC,SAAW/pC,KAAK40F,aACrB,IAAK,IAAI9kF,EAAI,EAAGA,EAAIw3B,EAAKqvD,UAAU/3F,OAAQkR,IAC3C,CACC,IAAIkvE,EAAMh/E,KAAKo9E,QAAQ9B,YAAYh0C,EAAKqvD,UAAU7mF,GAAGkW,KAAMshB,EAAKyC,UAChEzC,EAAKkuD,QAAQ5yE,EAAIjM,KAAKC,IAAI0wB,EAAKkuD,QAAQ5yE,EAAGo8D,EAAI,IAC9C13C,EAAKkuD,QAAQ3yE,GAAKm8D,EAAI,IAAMlvE,EAAI,EAAa,EAATkvE,EAAI,GAAS,EAClD,CAYA,GAVA13C,EAAK+rD,QAAUn7D,EAAIZ,OACnBgQ,EAAK+rD,QAAQzwE,EAAIjM,KAAKC,IAAI0wB,EAAK+tD,OAAOzyE,EAAG0kB,EAAKkuD,QAAQ5yE,GAAK,EAAIymB,EAC/D/B,EAAK+rD,QAAQxwE,EAAIykB,EAAK+tD,OAAOxyE,EAAIykB,EAAKkuD,QAAQ3yE,EAAI,EAAIwmB,EAClD/B,EAAK+tD,OAAO77D,YAAc8N,EAAKkuD,QAAQh8D,aAE1C8N,EAAK+rD,QAAQxwE,GAAKwmB,EAClB/B,EAAKkuD,QAAQ9yE,GAAK4kB,EAAK+tD,OAAOxyE,EAAIwmB,EAClC/B,EAAK+tD,OAAOzyE,EAAI0kB,EAAKkuD,QAAQ5yE,EAAIjM,KAAKC,IAAI0wB,EAAK+tD,OAAOzyE,EAAG0kB,EAAKkuD,QAAQ5yE,IAGnE5iB,KAAKu0F,WACT,CACC,IAAI+C,EAAQt3F,KAAKu0F,WACb7b,EAAK4e,EAAM10E,EAAI0kB,EAAK+rD,QAAQzwE,EAAG+1D,EAAK2e,EAAMz0E,EAAIykB,EAAK+rD,QAAQxwE,EAC3D61D,EAAK,IAERpxC,EAAK+rD,QAAQzwE,GAAK81D,EAClBpxC,EAAK+tD,OAAOzyE,GAAK81D,GAEdC,EAAK,IAERrxC,EAAK+rD,QAAQxwE,GAAK81D,EAClBrxC,EAAK+tD,OAAOxyE,GAAK81D,EACjBrxC,EAAKkuD,QAAQ9yE,GAAKi2D,EAEpB,CAIA,GAFArxC,EAAK+iB,SAAW/iB,EAAK+rD,QAAQz3E,SAExB5b,KAAKw0F,gBAAkBltD,EAAKmvD,cAAgB,EAAIniF,SAASgzB,EAAKzJ,QAAQ6J,UAC3E,CACC,IAAI6vD,EArSa,IAqSQv3F,KAAK+e,MAAOy4E,EAtSnB,GAsSwCx3F,KAAK+e,MAC/DuoB,EAAKmuD,YAAc,IAAIv9D,EAAIoP,EAAK+iB,SAASxgC,OAAS0tE,EAAKjwD,EAAK+iB,SAAS1xB,OAAS,GAAM6+D,EAAIA,EAAIA,GAC5FlwD,EAAK+iB,SAASznC,GAAK20E,EAAMC,CAC1B,CACD,CACD,CAIQ,mBAAAtC,CAAoBr/E,GAE3B,IAAI4hF,EAAuB,CAAC5hF,GACxB6hF,EAAyB,GACzBC,EAAkB,GAElBC,EAAa,EAAGC,EAAc,EAElC,IAAK,IAAI/nF,EAAI+F,EAAM,EAAG/F,EAAI9P,KAAKs0F,WAAW11F,OAAQkR,IAClD,CAEC,GADW9P,KAAKs0F,WAAWxkF,GAClB0mF,WAAa3gF,EAAK,SAE3B,IAAIy7E,EAAStxF,KAAKk1F,oBAAoBplF,GACtC,GAAqB,GAAjBwhF,EAAO1yF,OAAa,SAExB,IAAI+6B,EAAU,KACd,IAAK,IAAI5vB,KAAKunF,EACd,CACCmG,EAAYj7F,KAAKuN,GACjB,IAAI+tF,EAAQ93F,KAAKs0F,WAAWvqF,GAAGsgD,SACtB1wB,EAALA,EAAWA,EAAIL,MAAMw+D,GAAmBA,CAC7C,CAEAJ,EAAYl7F,KAAK80F,GACjBqG,EAAUn7F,KAAKm9B,GAEfi+D,EAAajhF,KAAKC,IAAIghF,EAAYj+D,EAAI/W,GACtCi1E,GAAel+D,EAAI9W,CACpB,CACA,GAA0B,GAAtB60E,EAAY94F,OAAa,OAAO64F,EAEpC,IAAInF,EAhVS,EAgVStyF,KAAK+e,MAAOwzE,EAjVrB,GAiVuCvyF,KAAK+e,MACzD84E,GAAetF,GAAUmF,EAAY94F,OAAS,GAE9C,IAAIm5F,EAAO/3F,KAAKs0F,WAAWz+E,GAAKw0C,SAC5B7nC,EAAIu1E,EAAKluE,OAASyoE,EAGtB,GAAItyF,KAAK00F,cAAgBgD,EAAY94F,OAAS,GAAKi5F,EAAc73F,KAAK00F,aAAa7xE,EACnF,CACC,IAAIuvE,EAAWpyF,KAAK00F,aAAa94E,QACjC,IAAK,IAAI+d,KAAOg+D,EAAWvF,EAASvvE,EAAIlM,KAAKC,IAAIw7E,EAASvvE,EAAG8W,EAAI9W,GAEjE,IAAIm1E,EAAK,IAAI7F,GAAcC,EAAUuF,EAAsBpF,EAAQA,GACnE,GAAIyF,EAAGpmD,OACP,CACC,IAAIlvB,EAAIq1E,EAAKp/D,OAAS,GAAMq/D,EAAG3E,QAAQxwE,EACvC,IAAK,IAAI/S,EAAI,EAAGA,EAAI4nF,EAAY94F,OAAQkR,IACxC,CACC,IAAI6pB,EAAMq+D,EAAGxF,OAAO1iF,GAChBkT,EAAKR,EAAIm1E,EAAU7nF,GAAG0S,EAAImX,EAAInX,EAAGS,EAAKP,EAAIi1E,EAAU7nF,GAAG4S,EAAIiX,EAAIjX,EACnE,IAAK,IAAI3Y,KAAK2tF,EAAY5nF,GAEzB9P,KAAKs0F,WAAWvqF,GAAGsgD,SAAS7nC,GAAKQ,EACjChjB,KAAKs0F,WAAWvqF,GAAGsgD,SAAS3nC,GAAKO,CAEnC,CACA,OAAOw0E,CACR,CACD,CAKA,IAAI/0E,EAAIq1E,EAAKp/D,OAAS,GAAMk/D,EAC5B,IAAK,IAAI/nF,EAAI,EAAGA,EAAI4nF,EAAY94F,OAAQkR,IACxC,CACC,IAAIkT,EAAKR,EAAIm1E,EAAU7nF,GAAG0S,EAAGS,EAAKP,EAAIi1E,EAAU7nF,GAAG4S,EACnD,IAAK,IAAI3Y,KAAK2tF,EAAY5nF,GAEzB9P,KAAKs0F,WAAWvqF,GAAGsgD,SAAS7nC,GAAKQ,EACjChjB,KAAKs0F,WAAWvqF,GAAGsgD,SAAS3nC,GAAKO,EAElCP,GAAKi1E,EAAU7nF,GAAG+S,EAAI0vE,CACvB,CAEA,OAAOkF,CACR,CAGQ,kBAAAtC,GAEP,IAAI8C,EAAyB,GAC7B,IAAK,IAAInoF,EAAI,EAAGA,EAAI9P,KAAKs0F,WAAW11F,OAAQkR,IAC5C,CACCmoF,EAAYz7F,KAAK,IACjB,IAAK,IAAIqZ,EAAM7V,KAAKs0F,WAAWxkF,GAAG0mF,UAAW3gF,GAAO,EAAGA,EAAM7V,KAAKs0F,WAAWz+E,GAAK2gF,UAAWyB,EAAYpiF,GAAKrZ,KAAKsT,EACpH,CAEA,IAAIwiF,EA1YS,EA0YStyF,KAAK+e,MAAOsqB,EA5YpB,IA4YwCrpC,KAAK+e,MAE3D,OACA,CACC,IAAIgW,GAAW,EAEf,IAAK,IAAIjlB,EAAI,EAAGA,EAAImoF,EAAYr5F,OAAQkR,IACxC,CACC,IAAIooF,EAAOl4F,KAAKs0F,WAAWxkF,GAAG0mF,UAC1B2B,EAASn4F,KAAKs0F,WAAW4D,GAAM7tC,SAASxgC,OAASyoE,EACjDtvE,EAAKhjB,KAAKs0F,WAAWxkF,GAAGu6C,SAAS1gC,OAASwuE,EAC9C,GAAIn1E,EAAK,EAAG,SAEZ,IAAIo1E,EAAY,CAACtoF,KAAMmoF,EAAYnoF,IAC/BuoF,EAAa,EAAItgF,UAAUkgF,EAAYr5F,QAAQgM,QAAQiL,IAASuiF,EAAUl3F,SAAS2U,KAEvF,IAAK,IAAI9L,KAAKquF,EACd,CACC,IAAIvjB,EAAO70E,KAAKs0F,WAAWvqF,GAAGsgD,SAASvxB,SAASuQ,EAASA,GACzD,IAAK,IAAIhzB,KAAKgiF,EACd,CACC,IAAIvjB,EAAO90E,KAAKs0F,WAAWj+E,GAAGg0C,SAC1ByqB,EAAKnrD,OAASkrD,EAAKhrD,QACnBgrD,EAAKjrD,OAASkrD,EAAKhrD,QAAU+qD,EAAK/qD,OAASgrD,EAAKlrD,SAEpD5G,EAAKrM,KAAKW,IAAI0L,EAAI6xD,EAAKlrD,OAASmrD,EAAKjrD,QACtC,CACD,CAEA,GAAI7G,EAAK,EACT,CACC,IAAK,IAAIlT,KAAKsoF,EAAWp4F,KAAKs0F,WAAWxkF,GAAGu6C,SAAS7nC,GAAKQ,EAC1D+R,GAAW,CACZ,CACD,CAEA,IAAKA,EAAU,KAChB,CACD,CAIQ,aAAA6hE,CAAcnyE,EAA2BuB,EAAavE,EAAYxjB,GAEzE,IAAK+nB,EAAM,OACX,IAAIy1D,EAAO1B,GAASyB,cAAcx1D,EAAMhmB,KAAK40F,cAC7C,GAAI,EAAIv9E,KAAKokE,IAASz7E,KAAKg1F,aAG1B,YADAvwE,EAAKjoB,KAAK,CAACwpB,OAAMvE,MAAKxjB,WAIvB,IAAIkE,EAAI,EACR,KAAOs5E,EAAKt5E,GAAKnC,KAAKg1F,aAAc7yF,KACpC,KAAOs5E,EAAKt5E,GAAKnC,KAAK+0F,aAAc5yF,IACpC,CACC,IAAI6nE,EAAKhkD,EAAKlU,OAAO3P,GACrB,GAAI,QAAQjB,SAAS8oE,GACrB,CACC7nE,IACA,KACD,CACD,CAEAsiB,EAAKjoB,KAAK,CAACwpB,KAAMA,EAAKrF,UAAU,EAAGxe,GAAGkiE,OAAQ5iD,MAAKxjB,WACnD+B,KAAK42F,cAAcnyE,EAAMuB,EAAKrF,UAAUxe,GAAGkiE,OAAQ5iD,EAAKxjB,EACzD,CAGQ,gBAAAg5F,CAAiB7mB,GAExB,IAAIqL,EAAO1B,GAASyB,cAAcpL,EAAKpwE,KAAK40F,cAC5C,GAAI,EAAIv9E,KAAKokE,IAASz7E,KAAK+0F,aAAc,OAAO3kB,EAChD,IAAsBkoB,EAAOve,GAASuB,YAAvB,MAA6Ct7E,KAAK40F,cAAc,GAC3E2D,EAAO,EACX,KAAOA,EAAOnoB,EAAIxxE,UAAoB68E,EAAK8c,GAAQD,EAAOt4F,KAAK+0F,cAArCwD,KAC1B,OAAOnoB,EAAIzvD,UAAU,EAAG43E,GAHT,KAIhB,EIxhBM,MAAMC,GACT,cAAOC,CAAQn+D,GACX,IAAIC,EAKJ,GAHIA,EADAH,GAAII,cACK,IAAIJ,GAAII,cAAeC,gBAAgBH,EAAQ,oBAE/C,IAAII,WAAYD,gBAAgBH,EAAQ,mBACvC,MAAVC,EACA,OAAO,KACX,IAAI62D,EAAO72D,EAAOO,gBAClB,GAAY,MAARs2D,EACA,OAAO,KACX,IAAIlnB,EAAK,IAAI/rB,GACTu6C,EAAUp0E,EAAS8sE,EAAM,WAC7B,GAAe,MAAXsH,EACA,OAAO,KACXxuB,EAAG9rB,MAAQr8B,EAASuC,EAASo0E,EAAS,UACtCxuB,EAAG7rB,YAAct8B,EAASuC,EAASo0E,EAAS,gBAC5C,IAAIC,EAAUr0E,EAAS8sE,EAAM,aAC7B,GAAe,MAAXuH,EAAiB,CACjB,IAAIC,EAAUp0E,EAAUm0E,EAAS,OACjC,IAAK,IAAI7oF,EAAI,EAAGA,EAAI8oF,EAAQh6F,OAAQkR,IAAK,CACrC,IAAIs0E,EAAMwU,EAAQ9oF,GAClBo6D,EAAGvqB,gBAAgBykC,EAAI/jD,aAAa,QAAS+jD,EAAI/jD,aAAa,QAASte,EAASqiE,GACpF,CACJ,CACA,IAAIza,EAASrlD,EAAS8sE,EAAM,UACxBt1E,EAAU9J,SAAS23D,EAAOtpC,aAAa,UACvCw4D,EAAUr0E,EAAUmlD,EAAQ,UAChC,GAAIkvB,EAAQj6F,QAAUkd,EAClB,OAAO,KACX,IAAK,IAAIhM,EAAI,EAAGA,EAAIgM,EAAShM,IAAK,CAC9B,IAAI2R,EAAMo3E,EAAQ/oF,GAElB,GADSkC,SAASyP,EAAI4e,aAAa,QACzBvwB,EAAI,EACV,OAAO,KACXo6D,EAAGpoB,aAAargC,EAAI4e,aAAa,QAAS5e,EAAI4e,aAAa,QAASte,EAASN,GACjF,CACA,IAAIq3E,EAAS,EACb,IAAK,IAAIn7E,KAAO6G,EAAUF,EAAS8sE,EAAM,WAAY,OAAQ,CACzD,GAAIp/E,SAAS2L,EAAI0iB,aAAa,QAAUy4D,EAAS,EAC7C,OAAO,KACX5uB,EAAGxnB,YACH,IAAK,IAAIjhC,KAAO+C,EAAU7G,EAAK,QAAS,CACpC,IAAIo7E,EAAS/mF,SAASyP,EAAI4e,aAAa,OAAS,EAC5CggB,EAAK6pB,EAAGnqB,QAAQg5C,GAASh8F,EAAMglB,EAASN,GACjC,IAAP1kB,IACW,YAANsjD,EACL6pB,EAAGhpB,UAAU43C,EAAQC,EAAQh8F,GAClB,UAANsjD,EACL6pB,EAAG9oB,UAAU03C,EAAQC,EAAQh8F,GAClB,QAANsjD,EACL6pB,EAAG5oB,QAAQw3C,EAAQC,EAAQtrF,WAAW1Q,IAC3B,WAANsjD,EACL6pB,EAAG7oB,WAAWy3C,EAAQC,EAAQ/mF,SAASjV,IAC5B,WAANsjD,EACL6pB,EAAG3oB,WAAWu3C,EAAQC,EAAe,QAAPh8F,GAA8B,SAAPA,GAAyB,MACnE,UAANsjD,GACL6pB,EAAG1oB,UAAUs3C,EAAQC,EAAQh8F,IACjC0kB,EAAMA,EAAIid,mBACVq6D,GACJ,CACAp7E,EAAMA,EAAI+gB,mBACVo6D,GACJ,CACA,OAAO5uB,CACX,CACA,eAAO8uB,CAAS9vD,GACZ,IAAKA,EAAKoV,UAAYpV,EAAKqV,QACvB,KAAM,kCACV,OAAO,IAAIJ,GAAUr4B,EAAUojB,GACnC,CACA,eAAO+vD,CAAS/uB,GACZ,IAAI3sC,EAEAA,EADAnD,GAAII,cACE,IAAIJ,GAAII,cAAeC,gBAAgB,eAAgB,oBAEvD,IAAIC,WAAYD,gBAAgB,eAAgB,mBAC1D,IAAIi+D,EAAUn7D,EAAIxB,cAAc,WAChCwB,EAAIzC,gBAAgBkB,YAAY08D,GAChC,IAAIt6C,EAAQ7gB,EAAIxB,cAAc,SAAUkkB,EAAQ1iB,EAAIxB,cAAc,eAClE28D,EAAQ18D,YAAYoiB,GACpBA,EAAMpiB,YAAYuB,EAAId,eAAeytC,EAAG9rB,QACxCs6C,EAAQ18D,YAAYikB,GACpBA,EAAMjkB,YAAYuB,EAAIf,mBAAmB0tC,EAAG7rB,cAC5C,IAAI66C,EAAY37D,EAAIxB,cAAc,aAClCwB,EAAIzC,gBAAgBkB,YAAYk9D,GAChC,IAAK,IAAIppF,EAAI,EAAGA,EAAIo6D,EAAG9qB,cAAetvC,IAAK,CACvC,IAAIs0E,EAAM7mD,EAAIxB,cAAc,OAC5Bm9D,EAAUl9D,YAAYooD,GACtBA,EAAI7jD,aAAa,OAAQ2pC,EAAG7qB,WAAWvvC,IACvCs0E,EAAI7jD,aAAa,OAAQ2pC,EAAG5qB,WAAWxvC,IACvCs0E,EAAIpoD,YAAYuB,EAAIf,mBAAmB0tC,EAAG3qB,WAAWzvC,IACzD,CACA,IAAI65D,EAASpsC,EAAIxB,cAAc,UAC/BwB,EAAIzC,gBAAgBkB,YAAY2tC,GAChCA,EAAOppC,aAAa,QAAS2pC,EAAGruD,QAAQnI,YACxCi2D,EAAOppC,aAAa,QAAS2pC,EAAGpuD,QAAQpI,YACxC,IAAK,IAAI5D,EAAI,EAAGA,EAAIo6D,EAAGpuD,QAAShM,IAAK,CACjC,IAAIqpF,EAAS57D,EAAIxB,cAAc,UAC/B4tC,EAAO3tC,YAAYm9D,GACnBA,EAAO54D,aAAa,MAAOzwB,EAAI,GAAG4D,YAClCylF,EAAO54D,aAAa,OAAQ2pC,EAAGpqB,QAAQhwC,IACvCqpF,EAAO54D,aAAa,OAAQ2pC,EAAGnqB,QAAQjwC,IACvCqpF,EAAOn9D,YAAYuB,EAAId,eAAeytC,EAAGlqB,SAASlwC,IACtD,CACA,IAAI+tB,EAAUN,EAAIxB,cAAc,WAChCwB,EAAIzC,gBAAgBkB,YAAY6B,GAChC,IAAK,IAAI9tB,EAAI,EAAGA,EAAIm6D,EAAGruD,QAAS9L,IAAK,CACjC,IAAI4N,EAAM4f,EAAIxB,cAAc,OAC5Bpe,EAAI4iB,aAAa,MAAOxwB,EAAI,GAAG2D,YAC/BmqB,EAAQ7B,YAAYre,GACpB,IAAK,IAAIpF,EAAI,EAAGA,EAAI2xD,EAAGpuD,QAASvD,IAAK,CACjC,IAAI6gF,EAAO77D,EAAIxB,cAAc,QAC7Bq9D,EAAK74D,aAAa,MAAOhoB,EAAI,GAAG7E,YAChCiK,EAAIqe,YAAYo9D,GAChB,IAAI/4C,EAAK6pB,EAAGnqB,QAAQxnC,GAChB8gF,EAAU,KACd,GAAInvB,EAAGhqB,OAAOnwC,EAAGwI,SACZ,GAAU,YAAN8nC,EAAkB,CACvB,IAAIn5C,EAAMgjE,EAAGzpB,UAAU1wC,EAAGwI,GACtBrR,aAAe81C,KACf91C,EAAM0pE,GAAeQ,YAAYlqE,IACrCmyF,EAAU97D,EAAIf,mBAAmBt1B,EACrC,KACe,UAANm5C,EACLg5C,EAAU97D,EAAIf,mBAAmB0tC,EAAG3pB,UAAUxwC,EAAGwI,IACtC,QAAN8nC,EACLg5C,EAAU97D,EAAId,eAAeytC,EAAGnpB,QAAQhxC,EAAGwI,GAAG7E,YACnC,WAAN2sC,EACLg5C,EAAU97D,EAAId,eAAeytC,EAAGppB,WAAW/wC,EAAGwI,GAAG7E,YACtC,WAAN2sC,EACLg5C,EAAU97D,EAAId,eAAeytC,EAAGlpB,WAAWjxC,EAAGwI,GAAG7E,YACtC,UAAN2sC,IACLg5C,EAAU97D,EAAIf,mBAAmB0tC,EAAG1pB,UAAUzwC,EAAGwI,KACtC,MAAX8gF,GACAD,EAAKp9D,YAAYq9D,EACzB,CACJ,CACA,OAAIj/D,GAAIQ,cACG,IAAIR,GAAIQ,cAAeC,kBAAkB0C,EAAIzC,kBAE7C,IAAIC,eAAgBF,kBAAkB0C,EAAIzC,gBACzD,CACA,gBAAOw+D,CAAUpvB,GACb,IAAIxgE,EAAOwgE,EAAGxgE,KACV6vF,EAAOrvB,EAAGruD,QAAS29E,EAAOtvB,EAAGpuD,QAC7ByiC,EAAU,IAAIj/C,MAAMi6F,GACxB,IAAK,IAAIzpF,EAAI,EAAGA,EAAIypF,EAAMzpF,IACtByuC,EAAQzuC,GAAK,IAAIxQ,MAAMk6F,GAC3B,IAAK,IAAIjhF,EAAI,EAAGA,EAAIihF,EAAMjhF,IAAK,CAC3B,IAAIkhF,EAA6B,YAAjBvvB,EAAGnqB,QAAQxnC,GAC3B,IAAK,IAAIxI,EAAI,EAAGA,EAAIwpF,EAAMxpF,IAAK,CAC3B,IAAIhT,EAAM2M,EAAK60C,QAAQxuC,GAAGwI,GACf,MAAPxb,GAAe08F,IACf18F,EAAMA,EAAI2W,YACd6qC,EAAQxuC,GAAGwI,GAAKxb,CACpB,CACJ,CAQA,MAPW,CACPqhD,MAAO10C,EAAK00C,MACZC,YAAa30C,EAAK20C,YAClBC,QAASx4B,EAAUpc,EAAK40C,SACxBC,QAASA,EACTE,QAAS34B,EAAUpc,EAAK+0C,SAGhC,GHvKJ,SAAWqzC,GACPA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAkB,OAAI,IAAM,QACzC,CARD,CAQGA,KAAcA,GAAY,CAAC,IAE9B,SAAWC,GACPA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAsB,WAAI,GAAK,YAC5C,CAPD,CAOGA,KAAcA,GAAY,CAAC,IAC9B,MAAM2H,GACF,WAAAx8F,CAAYy8F,GACR35F,KAAK25F,YAAcA,EACnB35F,KAAK0d,MAAQ,GACb1d,KAAKkN,MAAQ,CACjB,CACA,KAAA0sF,CAAMp5E,IAAYA,aAAiC,EAASA,EAAI5hB,QAAU,GACtEoB,KAAK0d,MAAMlhB,KAAKgkB,EAAM,CAC1B,KAAAtI,CAAMsI,GACExgB,KAAK25F,aAAe35F,KAAKkN,MAAQ,GACjClN,KAAK0d,MAAMlhB,KAAK,KAAKm1F,OAAO3xF,KAAKkN,QACrClN,KAAK45F,MAAMp5E,EACf,CACA,IAAAukB,CAAKvkB,GACDxgB,KAAK45F,MAAMp5E,GACPxgB,KAAK25F,aACL35F,KAAK0d,MAAMlhB,KAAK,KACxB,CACA,KAAAq9F,CAAMr5E,GACExgB,KAAK25F,aAAe35F,KAAKkN,MAAQ,GACjClN,KAAK0d,MAAMlhB,KAAK,KAAKm1F,OAAO3xF,KAAKkN,QACrClN,KAAK45F,MAAMp5E,GACPxgB,KAAK25F,aACL35F,KAAK0d,MAAMlhB,KAAK,KACxB,CACA,IAAAwkB,CAAK1iB,EAAKvB,GACN,IAAI6pD,EACJ,GAAkB,iBAAP7pD,EAAiB,CACxBA,EAAMA,EAAI0wE,QAAQ,GAClB,IAAI1sE,EAAoD,QAA3C6lD,EAAK,uBAAuB5lD,KAAKjE,UAAyB,IAAP6pD,EAAgBA,EAAK,aAAa5lD,KAAKjE,GACnGgE,IACAhE,EAAMgE,EAAM,GACpB,CACAf,KAAK45F,MAAM,IAAIt7F,MAAQvB,KAC3B,CACA,GAAA+8F,GAAQ95F,KAAKkN,OAAS,CACtB,GAAA6sF,GAAQ/5F,KAAKkN,OAAS,CACtB,QAAAwG,GAAa,OAAO1T,KAAK0d,MAAMI,KAAK,GAAK,EAE7C,MAAMk8E,GACF,WAAA98F,CAAY8Y,GACRhW,KAAKi6F,MAAQ,GACbj6F,KAAKk6F,MAAQ,GACbl6F,KAAKN,MAAQ,EACbM,KAAKL,OAAS,EACdK,KAAKm6F,QAAU,EACfn6F,KAAKo6F,QAAU,EACfp6F,KAAK+e,MAAQ,EACb/e,KAAKq6F,QAAU,EACfr6F,KAAKs6F,aAAc,EACnBt6F,KAAKu6F,KAAO,KACZv6F,KAAKw6F,KAAO,KACZx6F,KAAKy6F,MAAQ,KACbz6F,KAAK06F,MAAQ,KACb,MAAMnf,EAAOxB,GAASpoE,KAEtB,GADA3R,KAAK26F,SAAW,EAAI9jF,cAAa,EAAO0kE,EAAKf,QAAQ57E,QAC1C,MAAPoX,EAAa,CACG,MAAZA,EAAIlX,OACJkB,KAAKN,MAAQsW,EAAIlX,KAAK,GACtBkB,KAAKL,OAASqW,EAAIlX,KAAK,IAEV,MAAbkX,EAAIikF,QACJj6F,KAAKi6F,MAAQjkF,EAAIikF,OACJ,MAAbjkF,EAAIkkF,QACJl6F,KAAKk6F,MAAQlkF,EAAIkkF,OACrB,IAAK,IAAI/3F,KAAKnC,KAAKk6F,MACf,GAAI/3F,EAAEy4F,WAAa7I,GAAU8I,KAAM,CAC/B,IAAI,IAAEzqB,GAAQjuE,EACd,IAAK,IAAI2N,EAAI,EAAGA,EAAIsgE,EAAIxxE,OAAQkR,IAAK,CACjC,IAAI/F,EAAIwxE,EAAKnuC,SAASgjC,EAAIt+D,OAAOhC,IAC7B/F,GAAK,EACL/J,KAAK26F,SAAS5wF,IAAK,EAEnB/J,KAAKs6F,aAAc,CAC3B,CACJ,CACR,CACJ,CACA,QAAAj1E,CAASV,EAAIC,EAAIC,EAAIC,EAAIg2E,EAAQC,GACZ,MAAbA,IACAA,EAAY,GAChB,IAAIC,EAAUh7F,KAAKi7F,iBAAiB,CAAEL,UAAW7I,GAAUj4D,KAAMihE,YAAWD,WAC5E,MAAMtV,EAAO,GAAMuV,EACnB/6F,KAAKk7F,aAAavkF,KAAKW,IAAIqN,EAAIE,GAAM2gE,EAAM7uE,KAAKW,IAAIsN,EAAIE,GAAM0gE,GAC9DxlF,KAAKk7F,aAAavkF,KAAKC,IAAI+N,EAAIE,GAAM2gE,EAAM7uE,KAAKC,IAAIgO,EAAIE,GAAM0gE,GAC9DxlF,KAAKk6F,MAAM19F,KAAK,CAAEo+F,UAAW7I,GAAUj4D,KAAMkhE,UAASr2E,KAAIC,KAAIC,KAAIC,MACtE,CACA,QAAAq2E,CAAS34E,EAAGE,EAAGE,EAAGC,EAAGu4E,EAASL,EAAWM,GACtB,MAAXD,IACAA,EAAUpB,GAAWsB,UACV,MAAXD,IACAA,EAAUrB,GAAWsB,UACR,MAAbP,IACAA,EAAY,GAChB,IAAIC,EAAUh7F,KAAKi7F,iBAAiB,CAAEL,UAAW7I,GAAUwJ,KAAMH,UAASC,UAASN,cACnF,MAAMvV,EAAO,GAAMuV,EACnB/6F,KAAKk7F,aAAa14E,EAAIgjE,EAAM9iE,EAAI8iE,GAChCxlF,KAAKk7F,aAAa14E,EAAII,EAAI4iE,EAAM9iE,EAAIG,EAAI2iE,GACxCxlF,KAAKk6F,MAAM19F,KAAK,CAAEo+F,UAAW7I,GAAUwJ,KAAMP,UAASx4E,IAAGE,IAAGE,IAAGC,KACnE,CACA,QAAA24E,CAAStuE,EAAIC,EAAIkG,EAAIC,EAAI8nE,EAASL,EAAWM,GAC1B,MAAXD,IACAA,EAAUpB,GAAWsB,UACV,MAAXD,IACAA,EAAUrB,GAAWsB,UACR,MAAbP,IACAA,EAAY,GAChB,MAAMvV,EAAO,GAAMuV,EACnB/6F,KAAKk7F,aAAahuE,EAAKmG,EAAKmyD,EAAMr4D,EAAKmG,EAAKkyD,GAC5CxlF,KAAKk7F,aAAahuE,EAAKmG,EAAKmyD,EAAMr4D,EAAKmG,EAAKkyD,GAC5C,IAAIwV,EAAUh7F,KAAKi7F,iBAAiB,CAAEL,UAAW7I,GAAUt4D,KAAM2hE,UAASC,UAASN,cACnF/6F,KAAKk6F,MAAM19F,KAAK,CAAEo+F,UAAW7I,GAAUt4D,KAAMuhE,UAAS9tE,KAAIC,KAAIkG,KAAIC,MACtE,CACA,QAAAmoE,CAASC,EAASC,EAASC,EAAWC,EAAUT,EAASL,EAAWM,EAASS,GAC1D,MAAXV,IACAA,EAAUpB,GAAWsB,UACV,MAAXD,IACAA,EAAUrB,GAAWsB,UACR,MAAbP,IACAA,EAAY,GACA,MAAZe,IACAA,GAAW,GACf,MAAMtW,EAAO,GAAMuV,EACnB,IAAK,IAAIjrF,EAAI,EAAGA,EAAI4rF,EAAQ98F,OAAQkR,IAChC9P,KAAKk7F,aAAaQ,EAAQ5rF,GAAK01E,EAAMmW,EAAQ7rF,GAAK01E,GACtC,GAARA,GACAxlF,KAAKk7F,aAAaQ,EAAQ5rF,GAAK01E,EAAMmW,EAAQ7rF,GAAK01E,GAE1D,IAAIwV,EAAUh7F,KAAKi7F,iBAAiB,CAAEL,UAAW7I,GAAUgK,KAAMX,UAASC,UAASN,YAAWe,aAC9F97F,KAAKk6F,MAAM19F,KAAK,CAAEo+F,UAAW7I,GAAUgK,KAAMf,UAASzgF,MAAOmhF,EAAQ98F,OACjE4jB,EAAG,EAAIlN,UAAUomF,GAAUh5E,EAAG,EAAIpN,UAAUqmF,GAAUznE,KAAM0nE,GAAa,IAAIA,GAAYI,OAAQH,GACzG,CACA,QAAAI,CAASP,EAASC,EAASP,EAASL,EAAWM,EAASS,GACpD97F,KAAKy7F,SAASC,EAASC,EAAS,MAAM,EAAMP,EAASL,EAAWM,EAASS,EAC7E,CACA,QAAA7L,CAASztE,EAAGE,EAAG0tD,EAAKtxE,EAAMg8F,EAAQoB,EAAOC,GACxB,MAATD,IACAA,EAAQpK,GAAUsK,KAAOtK,GAAUuK,UACtB,MAAbF,IACAA,EAAY,GAChB,IAAIzpE,EAAW,EAAGc,EAAW,EACZ,GAAb2oE,KACCzpE,EAAUc,GAAY,CAAC7c,KAAK2a,IAAI6qE,EAAYv4E,GAASjN,KAAK4a,IAAI4qE,EAAYv4E,KAC/E,MAAM23D,EAAOxB,GAASpoE,KACtB,IAAK,IAAI7B,EAAI,EAAGA,EAAIsgE,EAAIxxE,OAAQkR,IAAK,CACjC,IAAI/F,EAAIwxE,EAAKnuC,SAASgjC,EAAIt+D,OAAOhC,IAC7B/F,GAAK,EACL/J,KAAK26F,SAAS5wF,IAAK,EAEnB/J,KAAKs6F,aAAc,CAC3B,CACA,IAAI7d,EAAUlB,EAAKD,YAAYlL,EAAKtxE,GAChCkuB,EAAK,EAAGC,EAAK,EACbjK,EAAK,EACJk5E,EAAQpK,GAAUsK,OAEnBp5E,EADMk5E,EAAQpK,GAAUwK,OAClB7f,EAAQ,IAER,GAAMA,EAAQ,IACd,GAANz5D,IACAgK,GAAMhK,EAAK0P,EACXzF,GAAMjK,EAAKwQ,GAEf,IAAIvQ,EAAK,EACJi5E,EAAQpK,GAAUyK,OACnBt5E,EAAK,GAAMw5D,EAAQ,GACbyf,EAAQpK,GAAU0K,IACxBv5E,EAAKw5D,EAAQ,GACPyf,EAAQpK,GAAU2K,SACxBx5E,GAAMw5D,EAAQ,IACR,GAANx5D,IACA+J,GAAM/J,EAAKuQ,EACXvG,GAAMhK,EAAKyP,GAEf,IAAI/N,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAC7BmO,EAAK,EACT,IAAK,IAAInjB,EAAI,EAAGA,EAAIsgE,EAAIxxE,OAAQkR,IAAK,CACjC,IAAIk6D,EAAKoG,EAAIt+D,OAAOhC,GAChB/F,EAAIwxE,EAAKnuC,SAAS48B,GACtB,GAAIjgE,GAAK,EAAG,CACR,IAAI4+E,EAAWpN,EAAKM,YAAY9xE,GAAI6+E,EAAWrN,EAAKO,YAAY/xE,GAChE4a,EAAKhO,KAAKW,IAAIqN,EAAIsO,EAAK,EAAI3b,IAAIqxE,IAC/B9jE,EAAKlO,KAAKC,IAAIiO,EAAIoO,EAAK,EAAIrc,IAAI+xE,IAC/B/jE,EAAKjO,KAAKW,IAAIsN,GAAK,EAAIhO,IAAIgyE,IAC3B9jE,EAAKnO,KAAKC,IAAIkO,GAAK,EAAIxN,IAAIsxE,IAC3B31D,GAAMsoD,EAAKd,YAAY1wE,GACnB+F,EAAIsgE,EAAIxxE,OAAS,IACjBq0B,GAAMsoD,EAAKJ,WAAWnR,EAAIoG,EAAIt+D,OAAOhC,EAAI,IACjD,MAEImjB,GAAMsoD,EAAKlB,YACnB,CACA,MAAMqiB,EAAS59F,EAAOy8E,EAAKtB,iBAC3B,GAAiB,GAAbkiB,EACAn8F,KAAKk7F,aAAa14E,EAAIwK,EAAKrI,EAAK+3E,EAAQh6E,EAAIuK,EAAKrI,EAAK83E,GACtD18F,KAAKk7F,aAAa14E,EAAIwK,EAAKnI,EAAK63E,EAAQh6E,EAAIuK,EAAKnI,EAAK43E,OAErD,CACD,IAAIC,EAAMh4E,EAAK+3E,EAAQE,EAAMh4E,EAAK83E,EAC9BG,EAAMh4E,EAAK63E,EAAQI,EAAMh4E,EAAK43E,EAClC18F,KAAKk7F,aAAa14E,EAAIwK,EAAK2vE,EAAMjqE,EAAWkqE,EAAMppE,EAAU9Q,EAAIuK,EAAK0vE,EAAMnpE,EAAWopE,EAAMlqE,GAC5F1yB,KAAKk7F,aAAa14E,EAAIwK,EAAK6vE,EAAMnqE,EAAWkqE,EAAMppE,EAAU9Q,EAAIuK,EAAK4vE,EAAMrpE,EAAWopE,EAAMlqE,GAC5F1yB,KAAKk7F,aAAa14E,EAAIwK,EAAK6vE,EAAMnqE,EAAWoqE,EAAMtpE,EAAU9Q,EAAIuK,EAAK4vE,EAAMrpE,EAAWspE,EAAMpqE,GAC5F1yB,KAAKk7F,aAAa14E,EAAIwK,EAAK2vE,EAAMjqE,EAAWoqE,EAAMtpE,EAAU9Q,EAAIuK,EAAK0vE,EAAMnpE,EAAWspE,EAAMpqE,EAChG,CACA,IAAIsoE,EAAUh7F,KAAKi7F,iBAAiB,CAAEL,UAAW7I,GAAU8I,KAAM/7F,OAAMg8F,WACvE96F,KAAKk6F,MAAM19F,KAAK,CAAEo+F,UAAW7I,GAAU8I,KAAMG,UAASx4E,EAAGA,EAAIwK,EAAItK,EAAGA,EAAIuK,EAAImjD,MAAK+rB,aACrF,CACA,cAAAY,CAAev6E,EAAGE,EAAG0tD,EAAK4sB,EAAYjzD,EAAU+wD,EAAQoB,EAAO7f,GACtDA,IACDA,EAAM,CAAC,GACE,MAAT6f,IACAA,EAAQpK,GAAUsK,KAAOtK,GAAUuK,UAEvC,IAAI5f,EADS1C,GAASpoE,KACHwqE,kBAAkB/L,EAAK4sB,EAAYjzD,EAAUsyC,GAC3D6f,EAAQpK,GAAUsK,OACbF,EAAQpK,GAAUwK,MACxB95E,GAAKi6D,EAAQ,GAEbj6D,GAAK,GAAMi6D,EAAQ,IAClByf,EAAQpK,GAAUyK,OACnB75E,GAAK,GAAM+5D,EAAQ,GACbyf,EAAQpK,GAAU0K,IACxB95E,GAAK+5D,EAAQ,GACPyf,EAAQpK,GAAU2K,SACxB/5E,GAAK+5D,EAAQ,IACjBz8E,KAAKk7F,aAAa14E,EAAGE,EAAI+5D,EAAQ,IACjCz8E,KAAKk7F,aAAa14E,EAAIi6D,EAAQ,GAAI/5D,EAAI+5D,EAAQ,IAC9C,IAAIue,EAAUh7F,KAAKi7F,iBAAiB,CAAEL,UAAW7I,GAAUkL,WAAY7gB,OAAQ4gB,EAAYl+F,KAAMirC,EAAU+wD,SAAQze,QACnHr8E,KAAKk6F,MAAM19F,KAAK,CAAEo+F,UAAW7I,GAAUkL,WAAYjC,UAASx4E,IAAGE,IAAG0tD,OACtE,CACA,SAAA8sB,GAAc,OAAOl9F,KAAKu6F,IAAM,CAChC,SAAA4C,GAAc,OAAOn9F,KAAKw6F,IAAM,CAChC,UAAA4C,GAAe,OAAOp9F,KAAKy6F,KAAO,CAClC,UAAA4C,GAAe,OAAOr9F,KAAK06F,KAAO,CAClC,SAAA4C,GAAc,OAAO,IAAIplE,EAAIl4B,KAAKu6F,KAAMv6F,KAAKw6F,KAAMx6F,KAAKy6F,MAAQz6F,KAAKu6F,KAAMv6F,KAAK06F,MAAQ16F,KAAKw6F,KAAO,CACpG,OAAApd,GACIp9E,KAAKN,MAAQiX,KAAKoN,KAAK/jB,KAAKy6F,MAAQz6F,KAAKu6F,MACzCv6F,KAAKL,OAASgX,KAAKoN,KAAK/jB,KAAK06F,MAAQ16F,KAAKw6F,KAC9C,CACA,SAAAroE,GACqB,GAAbnyB,KAAKu6F,MAA0B,GAAbv6F,KAAKw6F,MACvBx6F,KAAKu9F,qBAAqBv9F,KAAKu6F,MAAOv6F,KAAKw6F,KAAM,EAAG,GACxDx6F,KAAKN,MAAQiX,KAAKoN,KAAK/jB,KAAKy6F,MAAQz6F,KAAKu6F,MACzCv6F,KAAKL,OAASgX,KAAKoN,KAAK/jB,KAAK06F,MAAQ16F,KAAKw6F,KAC9C,CACA,OAAA/hE,CAAQ/4B,EAAOC,GAAUK,KAAKN,MAAQA,EAAOM,KAAKL,OAASA,CAAQ,CACnE,gBAAA69F,CAAiB7jE,GACb35B,KAAKu9F,qBAAqBv9F,KAAKu6F,MAAOv6F,KAAKw6F,KAAM,EAAG,GACpD,IAAIiD,EAAK9mF,KAAKoN,KAAK/jB,KAAKy6F,MAAQz6F,KAAKu6F,MAAOmD,EAAK/mF,KAAKoN,KAAK/jB,KAAK06F,MAAQ16F,KAAKw6F,MACzEz7E,EAAQ,EACZ,GAAI0+E,EAAK9jE,EAAI/W,EAAG,CACZ,IAAIymD,EAAM1vC,EAAI/W,EAAI66E,EAClBA,EAAK9jE,EAAI/W,EACT86E,GAAMr0B,EACNtqD,GAASsqD,CACb,CACA,GAAIq0B,EAAK/jE,EAAI9W,EAAG,CACZ,IAAIwmD,EAAM1vC,EAAI9W,EAAI66E,EAClBA,EAAK/jE,EAAI9W,EACT46E,GAAMp0B,EACNtqD,GAASsqD,CACb,CACA,IAAI/d,EAAK,IAAO3xB,EAAI/W,EAAI66E,GAAKlyC,EAAK,IAAO5xB,EAAI9W,EAAI66E,GACjD19F,KAAKu9F,oBAAoB5jE,EAAInX,EAAI8oC,EAAI3xB,EAAIjX,EAAI6oC,EAAIxsC,EAAOA,EAC5D,CACA,WAAA4+E,CAAYC,EAAUC,GAClB,IAAIj7E,EAAI5iB,KAAKy6F,MAAQz6F,KAAKu6F,KAAM13E,EAAI7iB,KAAK06F,MAAQ16F,KAAKw6F,KACtD,GAAI53E,GAAKg7E,GAAY/6E,GAAKg7E,EACtB,OACJ,IAAI9+E,EAAQpI,KAAKW,IAAIsmF,EAAWh7E,EAAGi7E,EAAYh7E,GAC/C7iB,KAAKu9F,oBAAoB,EAAG,EAAGx+E,EAAOA,EAC1C,CACA,mBAAAw+E,CAAoBjyC,EAAIC,EAAIuyC,EAAIC,GAC5B,GAAU,GAANzyC,GAAiB,GAANC,GAAiB,GAANuyC,GAAiB,GAANC,EACjC,OACJ,IAAK,IAAIpkF,KAAK3Z,KAAKk6F,MAAO,CACtB,MAAMn8F,EAAO4b,EAAEihF,UACf,GAAI78F,GAAQg0F,GAAUj4D,KAAM,CACxB,IAAIoqC,EAAOvqD,EACXuqD,EAAKv/C,GAAK2mC,EAAK4Y,EAAKv/C,GAAKm5E,EACzB55B,EAAKt/C,GAAK2mC,EAAK2Y,EAAKt/C,GAAKm5E,EACzB75B,EAAKr/C,GAAKymC,EAAK4Y,EAAKr/C,GAAKi5E,EACzB55B,EAAKp/C,GAAKymC,EAAK2Y,EAAKp/C,GAAKi5E,CAC7B,MACK,GAAIhgG,GAAQg0F,GAAUwJ,KAAM,CAC7B,IAAIp6D,EAAOxnB,EACXwnB,EAAK3e,EAAI8oC,EAAKnqB,EAAK3e,EAAIs7E,EACvB38D,EAAKze,EAAI6oC,EAAKpqB,EAAKze,EAAIq7E,EACvB58D,EAAKve,EAAIue,EAAKve,EAAIk7E,EAClB38D,EAAKte,EAAIse,EAAKte,EAAIk7E,CACtB,MACK,GAAIhgG,GAAQg0F,GAAUt4D,KAAM,CAC7B,IAAInB,EAAO3e,EACX2e,EAAKpL,GAAKo+B,EAAKhzB,EAAKpL,GAAK4wE,EACzBxlE,EAAKnL,GAAKo+B,EAAKjzB,EAAKnL,GAAK4wE,EACzBzlE,EAAKjF,IAAMyqE,EACXxlE,EAAKhF,IAAMyqE,CACf,MACK,GAAIhgG,GAAQg0F,GAAUgK,KAAM,CAC7B,IAAI5uF,EAAOwM,EACPjD,EAAKvJ,EAAKoN,MAAOwM,EAAK5Z,EAAKqV,EAAGwE,EAAK7Z,EAAKuV,EAC5C,IAAK,IAAI5S,EAAI,EAAGA,EAAI4G,EAAI5G,IACpBiX,EAAGjX,GAAKw7C,EAAKvkC,EAAGjX,GAAKguF,EACrB92E,EAAGlX,GAAKy7C,EAAKvkC,EAAGlX,GAAKiuF,CAE7B,MACK,GAAIhgG,GAAQg0F,GAAU8I,MAAQ98F,GAAQg0F,GAAUkL,WAAY,CAC7D,IAAIj3E,EAAOrM,EACXqM,EAAKxD,EAAI8oC,EAAKtlC,EAAKxD,EAAIs7E,EACvB93E,EAAKtD,EAAI6oC,EAAKvlC,EAAKtD,EAAIq7E,CAC3B,CACJ,CACA,IAAIC,EAAO,IAAOF,EAAKC,GACvB,GAAY,GAARC,EACA,IAAK,IAAIhuF,KAAKhQ,KAAKi6F,MAAO,CACtB,MAAMl8F,EAAOiS,EAAE4qF,UACX78F,GAAQg0F,GAAUj4D,MAEb/7B,GAAQg0F,GAAUwJ,MAElBx9F,GAAQg0F,GAAUt4D,MAElB17B,GAAQg0F,GAAUgK,KALvB/rF,EAAE+qF,WAAaiD,GAOVjgG,GAAQg0F,GAAU8I,MAElB98F,GAAQg0F,GAAUkL,cADvBjtF,EAAElR,MAAQk/F,EAGlB,CACJh+F,KAAKu6F,KAAOjvC,EAAKtrD,KAAKu6F,KAAOuD,EAC7B99F,KAAKw6F,KAAOjvC,EAAKvrD,KAAKw6F,KAAOuD,EAC7B/9F,KAAKy6F,MAAQnvC,EAAKtrD,KAAKy6F,MAAQqD,EAC/B99F,KAAK06F,MAAQnvC,EAAKvrD,KAAK06F,MAAQqD,CACnC,CACA,UAAAE,CAAWn9E,GACP,IAAIk7D,EAASn7D,EAAWC,EAAQ,SAAU,CAAE,MAAS9gB,KAAKN,MAAO,OAAUM,KAAKL,SAEhF,OADAK,KAAKk+F,aAAaliB,GACXA,CACX,CACA,YAAAkiB,CAAaliB,EAAQmiB,GACjB,IAAI74E,EAAM02D,EAAOE,WAAW,MACxBiiB,GACA74E,EAAI84E,UAAU,EAAG,EAAGpiB,EAAOt8E,MAAOs8E,EAAOr8E,QAC7C,IAAIijB,EAAI5iB,KAAKN,MAAOmjB,EAAI7iB,KAAKL,OAC7BK,KAAKq6F,QAAU10E,IACfq2D,EAAOl8C,MAAMpgC,MAAQkjB,EAAI,KACzBo5D,EAAOl8C,MAAMngC,OAASkjB,EAAI,KAC1Bm5D,EAAOt8E,MAAQkjB,EAAI5iB,KAAKq6F,QACxBre,EAAOr8E,OAASkjB,EAAI7iB,KAAKq6F,QACzBr6F,KAAKq+F,cAAc/4E,EACvB,CACA,aAAA+4E,CAAc/4E,GACVA,EAAIg3D,OACJh3D,EAAIvG,MAAM/e,KAAKq6F,QAASr6F,KAAKq6F,SAC7Br6F,KAAKs+F,QAAU,GACf,IAAK,IAAIxuF,EAAI,EAAGA,EAAI9P,KAAKi6F,MAAMr7F,OAAQkR,IAAK,CACxC,IAAIE,EAAIhQ,KAAKi6F,MAAMnqF,GACfE,EAAE4qF,WAAa7I,GAAUj4D,KACzB95B,KAAKs+F,QAAQxuF,GAAK9P,KAAKu+F,cAAcvuF,GAChCA,EAAE4qF,WAAa7I,GAAUwJ,KAC9Bv7F,KAAKs+F,QAAQxuF,GAAK9P,KAAKw+F,cAAcxuF,GAChCA,EAAE4qF,WAAa7I,GAAUt4D,KAC9Bz5B,KAAKs+F,QAAQxuF,GAAK9P,KAAKy+F,cAAczuF,GAChCA,EAAE4qF,WAAa7I,GAAUgK,KAC9B/7F,KAAKs+F,QAAQxuF,GAAK9P,KAAK0+F,cAAc1uF,GAChCA,EAAE4qF,WAAa7I,GAAU8I,KAC9B76F,KAAKs+F,QAAQxuF,GAAK9P,KAAK2+F,cAAc3uF,GAChCA,EAAE4qF,WAAa7I,GAAUkL,aAC9Bj9F,KAAKs+F,QAAQxuF,GAAK9P,KAAK4+F,oBAAoB5uF,GACnD,CACA,IAAK,IAAIF,EAAI,EAAGA,EAAI9P,KAAKk6F,MAAMt7F,OAAQkR,IAAK,CACxC,IAAI3N,EAAInC,KAAKk6F,MAAMpqF,GACf3N,EAAEy4F,WAAa7I,GAAUj4D,KACzB95B,KAAK6+F,WAAWv5E,EAAKnjB,GAChBA,EAAEy4F,WAAa7I,GAAUwJ,KAC9Bv7F,KAAK8+F,WAAWx5E,EAAKnjB,GAChBA,EAAEy4F,WAAa7I,GAAUt4D,KAC9Bz5B,KAAK++F,WAAWz5E,EAAKnjB,GAChBA,EAAEy4F,WAAa7I,GAAUgK,KAC9B/7F,KAAKg/F,WAAW15E,EAAKnjB,GAChBA,EAAEy4F,WAAa7I,GAAU8I,KAC9B76F,KAAKi/F,WAAW35E,EAAKnjB,GAChBA,EAAEy4F,WAAa7I,GAAUkL,YAC9Bj9F,KAAKk/F,iBAAiB55E,EAAKnjB,EACnC,CACAmjB,EAAIo3D,SACR,CACA,SAAAyiB,CAAUxF,GAAc,EAAOyF,GAAY,GACvC,IAAIC,EAAM,IAAI3F,GAASC,GAYvB,OAXA0F,EAAInnF,MAAM,2CACNknF,GACAC,EAAIr+E,KAAK,cAAe,gCAC5Bq+E,EAAIr+E,KAAK,QAAShhB,KAAKN,OACvB2/F,EAAIr+E,KAAK,SAAUhhB,KAAKL,QACxB0/F,EAAIr+E,KAAK,UAAW,OAAOhhB,KAAKN,SAASM,KAAKL,UAC9C0/F,EAAIt6D,KAAK,KACTs6D,EAAIvF,MACJ95F,KAAKs/F,UAAUD,EAAKD,GACpBC,EAAItF,MACJsF,EAAIxF,MAAM,UACHwF,EAAI3rF,UACf,CACA,SAAA4rF,CAAUD,EAAKD,GAAY,GACvBp/F,KAAKs+F,QAAU,GACf,MAAM/iB,EAAOxB,GAASpoE,KACtB0tF,EAAIxF,MAAM,UACVwF,EAAIvF,MACA95F,KAAKs6F,cACL+E,EAAInnF,MAAM,SACVmnF,EAAIr+E,KAAK,KAAM,WACfq+E,EAAIr+E,KAAK,IAAKu6D,EAAKjB,cACnB+kB,EAAIr+E,KAAK,OAAQ,QACjBq+E,EAAIt6D,KAAK,OAEb,IAAK,IAAIj1B,EAAI,EAAGA,EAAIyrE,EAAKf,QAAQ57E,OAAQkR,IACjC9P,KAAK26F,SAAS7qF,KACduvF,EAAInnF,MAAM,SACVmnF,EAAIr+E,KAAK,KAAM,OAASlR,GACxBuvF,EAAIr+E,KAAK,IAAKu6D,EAAKb,WAAW5qE,IAC9BuvF,EAAIr+E,KAAK,OAAQ,QACjBq+E,EAAIt6D,KAAK,OAEjBs6D,EAAItF,MACJsF,EAAIxF,MAAM,WACV,IAAK,IAAI/pF,EAAI,EAAGA,EAAI9P,KAAKi6F,MAAMr7F,OAAQkR,IAAK,CACxC,IAAIE,EAAIhQ,KAAKi6F,MAAMnqF,GACfE,EAAE4qF,WAAa7I,GAAUj4D,KACzB95B,KAAKs+F,QAAQxuF,GAAK9P,KAAKu+F,cAAcvuF,GAChCA,EAAE4qF,WAAa7I,GAAUwJ,KAC9Bv7F,KAAKs+F,QAAQxuF,GAAK9P,KAAKw+F,cAAcxuF,GAChCA,EAAE4qF,WAAa7I,GAAUt4D,KAC9Bz5B,KAAKs+F,QAAQxuF,GAAK9P,KAAKy+F,cAAczuF,GAChCA,EAAE4qF,WAAa7I,GAAUgK,KAC9B/7F,KAAKs+F,QAAQxuF,GAAK9P,KAAK0+F,cAAc1uF,GAChCA,EAAE4qF,WAAa7I,GAAU8I,KAC9B76F,KAAKs+F,QAAQxuF,GAAK9P,KAAK2+F,cAAc3uF,GAChCA,EAAE4qF,WAAa7I,GAAUkL,aAC9Bj9F,KAAKs+F,QAAQxuF,GAAK9P,KAAK4+F,oBAAoB5uF,GACnD,CACA,IAAK,IAAIF,EAAI,EAAGA,EAAI9P,KAAKk6F,MAAMt7F,QAAS,CACpC,IAAIuD,EAAInC,KAAKk6F,MAAMpqF,GAAI6/B,EAAM,EAC7B,GAAIxtC,EAAEy4F,WAAa7I,GAAUgK,MAAQ55F,EAAEy4F,WAAa7I,GAAU8I,MAAQ14F,EAAEy4F,WAAa7I,GAAUkL,WAC3F,KAAOntF,EAAI6/B,EAAM3vC,KAAKk6F,MAAMt7F,QACpBoB,KAAKk6F,MAAMpqF,EAAI6/B,GAAKirD,WAAaz4F,EAAEy4F,WAAa56F,KAAKk6F,MAAMpqF,EAAI6/B,GAAKqrD,SAAW74F,EAAE64F,QADrDrrD,KAIpCxtC,EAAEy4F,WAAa7I,GAAUj4D,KACd,GAAP6V,EACA3vC,KAAKu/F,SAASF,EAAKl9F,GAEnBnC,KAAKw/F,SAASH,EAAKr/F,KAAKk6F,MAAMjrF,MAAMa,EAAGA,EAAI6/B,IAE1CxtC,EAAEy4F,WAAa7I,GAAUwJ,KACnB,GAAP5rD,EACA3vC,KAAKy/F,SAASJ,EAAKl9F,GAEnBnC,KAAK0/F,SAASL,EAAKr/F,KAAKk6F,MAAMjrF,MAAMa,EAAGA,EAAI6/B,IAE1CxtC,EAAEy4F,WAAa7I,GAAUt4D,KACnB,GAAPkW,EACA3vC,KAAK2/F,SAASN,EAAKl9F,GAEnBnC,KAAK4/F,SAASP,EAAKr/F,KAAKk6F,MAAMjrF,MAAMa,EAAGA,EAAI6/B,IAE1CxtC,EAAEy4F,WAAa7I,GAAUgK,KAC9B/7F,KAAK6/F,QAAQR,EAAKl9F,GACbA,EAAEy4F,WAAa7I,GAAU8I,KAC9B76F,KAAK8/F,QAAQT,EAAKl9F,EAAGi9F,GAChBj9F,EAAEy4F,WAAa7I,GAAUkL,YAC9Bj9F,KAAK+/F,cAAcV,EAAKl9F,GAC5B2N,GAAK6/B,CACT,CACJ,CACA,KAAAiqD,CAAMoG,GACF,IAAK,IAAI79F,KAAKnC,KAAKk6F,MACf,GAAI/3F,EAAEy4F,WAAa7I,GAAUj4D,KAAM,CAC/B,IAAI,QAAEkhE,EAAO,GAAEr2E,EAAE,GAAEC,EAAE,GAAEC,EAAE,GAAEC,GAAO3iB,GAC9B,UAAE44F,EAAS,OAAED,GAAW96F,KAAKi6F,MAAMe,GACvCgF,EAAK36E,SAASV,EAAIC,EAAIC,EAAIC,EAAIg2E,EAAQC,EAC1C,MACK,GAAI54F,EAAEy4F,WAAa7I,GAAUwJ,KAAM,CACpC,IAAI,QAAEP,EAAO,EAAEx4E,EAAC,EAAEE,EAAC,EAAEE,EAAC,EAAEC,GAAM1gB,GAC1B,QAAEi5F,EAAO,QAAEC,EAAO,UAAEN,GAAc/6F,KAAKi6F,MAAMe,GACjDgF,EAAK7E,SAAS34E,EAAGE,EAAGE,EAAGC,EAAGu4E,EAASL,EAAWM,EAClD,MACK,GAAIl5F,EAAEy4F,WAAa7I,GAAUt4D,KAAM,CACpC,IAAI,QAAEuhE,EAAO,GAAE9tE,EAAE,GAAEC,EAAE,GAAEkG,EAAE,GAAEC,GAAOnxB,GAC9B,QAAEi5F,EAAO,QAAEC,EAAO,UAAEN,GAAc/6F,KAAKi6F,MAAMe,GACjDgF,EAAKxE,SAAStuE,EAAIC,EAAIkG,EAAIC,EAAI8nE,EAASL,EAAWM,EACtD,MACK,GAAIl5F,EAAEy4F,WAAa7I,GAAUgK,KAAM,CACpC,IAAI,QAAEf,EAAO,MAAEzgF,EAAK,EAAEiI,EAAC,EAAEE,EAAC,KAAEwR,EAAI,OAAE8nE,GAAW75F,GACzC,QAAEi5F,EAAO,QAAEC,EAAO,UAAEN,EAAS,SAAEe,GAAa97F,KAAKi6F,MAAMe,GAC3DgF,EAAKvE,SAASj5E,EAAGE,EAAGwR,EAAM8nE,EAAQZ,EAASL,EAAWM,EAASS,EACnE,MACK,GAAI35F,EAAEy4F,WAAa7I,GAAU8I,KAAM,CACpC,IAAI,QAAEG,EAAO,EAAEx4E,EAAC,EAAEE,EAAC,IAAE0tD,EAAG,UAAE+rB,GAAch6F,GACpC,KAAErD,EAAI,OAAEg8F,GAAW96F,KAAKi6F,MAAMe,GAClCgF,EAAK/P,SAASztE,EAAGE,EAAG0tD,EAAKtxE,EAAMg8F,EAAQ,KAAMqB,EACjD,MACK,GAAIh6F,EAAEy4F,WAAa7I,GAAUkL,WAAY,CAC1C,IAAI,QAAEjC,EAAO,EAAEx4E,EAAC,EAAEE,EAAC,IAAE0tD,GAAQjuE,GACzB,OAAEi6E,EAAM,KAAEt9E,EAAI,OAAEg8F,GAAW96F,KAAKi6F,MAAMe,GAC1CgF,EAAKjD,eAAev6E,EAAGE,EAAG0tD,EAAKgM,EAAQt9E,EAAMg8F,EACjD,CAER,CACA,aAAAyD,CAAcvuF,GACV,IAAI+qF,EAAY/qF,EAAE+qF,UAAY/6F,KAAK+e,MAC/B+7E,EAAS9qF,EAAE8qF,OACf,MAAO,CAAEF,UAAW5qF,EAAE4qF,UAAWG,YAAWD,SAChD,CACA,aAAA0D,CAAcxuF,GACV,IAAIorF,EAAUprF,EAAEorF,QACZC,EAAUrrF,EAAEqrF,QACZN,EAAY/qF,EAAE+qF,UAAY/6F,KAAK+e,MACnC,MAAO,CAAE67E,UAAW5qF,EAAE4qF,UAAWQ,UAASC,UAASN,YACvD,CACA,aAAA0D,CAAczuF,GACV,IAAIorF,EAAUprF,EAAEorF,QACZC,EAAUrrF,EAAEqrF,QACZN,EAAY/qF,EAAE+qF,UAAY/6F,KAAK+e,MACnC,MAAO,CAAE67E,UAAW5qF,EAAE4qF,UAAWQ,UAASC,UAASN,YACvD,CACA,aAAA2D,CAAc1uF,GACV,IAAIorF,EAAUprF,EAAEorF,QACZC,EAAUrrF,EAAEqrF,QACZN,EAAY/qF,EAAE+qF,UAAY/6F,KAAK+e,MAC/B+8E,EAAW9rF,EAAE8rF,SACjB,MAAO,CAAElB,UAAW5qF,EAAE4qF,UAAWQ,UAASC,UAASN,YAAWe,WAClE,CACA,aAAA6C,CAAc3uF,GACV,IAAIlR,EAAOkR,EAAElR,KAAOkB,KAAK+e,MACrB+7E,EAAS9qF,EAAE8qF,OACf,MAAO,CAAEF,UAAW5qF,EAAE4qF,UAAWE,SAAQh8F,OAC7C,CACA,mBAAA8/F,CAAoB5uF,GAChB,IAAIosE,EAASpsE,EAAEosE,OACXt9E,EAAOkR,EAAElR,KAAOkB,KAAK+e,MACrB+7E,EAAS9qF,EAAE8qF,OACXze,EAAMrsE,EAAEqsE,IACZ,MAAO,CAAEue,UAAW5qF,EAAE4qF,UAAWE,SAAQ1e,SAAQt9E,OAAMu9E,MAC3D,CACA,UAAAwiB,CAAWv5E,EAAK4+C,GACZ,IAAI,GAAEv/C,EAAE,GAAEC,EAAE,GAAEC,EAAE,GAAEC,GAAOo/C,GACrB,OAAE42B,EAAM,UAAEC,GAAc/6F,KAAKs+F,QAAQp6B,EAAK82B,SAC9Cr2E,EAAK3kB,KAAKm6F,QAAUn6F,KAAK+e,MAAQ4F,EACjCC,EAAK5kB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ6F,EACjCC,EAAK7kB,KAAKm6F,QAAUn6F,KAAK+e,MAAQ8F,EACjCC,EAAK9kB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ+F,EACnB,MAAVg2E,IACAx1E,EAAIC,YACJD,EAAIL,OAAON,EAAIC,GACfU,EAAIH,OAAON,EAAIC,GACfQ,EAAI26E,YAAcn+E,EAAag5E,GAC/Bx1E,EAAI46E,UAAYnF,EAChBz1E,EAAI66E,QAAU,QACd76E,EAAIE,SAEZ,CACA,UAAAs5E,CAAWx5E,EAAK6b,GACZ,IAAI,EAAE3e,EAAC,EAAEE,EAAC,EAAEE,EAAC,EAAEC,GAAMse,GACjB,QAAEi6D,EAAO,QAAEC,EAAO,UAAEN,GAAc/6F,KAAKs+F,QAAQn9D,EAAK65D,SACxDx4E,EAAIxiB,KAAKm6F,QAAUn6F,KAAK+e,MAAQyD,EAChCE,EAAI1iB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ2D,EAChCE,GAAK5iB,KAAK+e,MACV8D,GAAK7iB,KAAK+e,MACNs8E,GAAWrB,GAAWsB,WACtBh2E,EAAI86E,UAAYt+E,EAAau5E,GAC7B/1E,EAAI+6E,SAAS79E,EAAGE,EAAGE,EAAGC,IAEtBu4E,GAAWpB,GAAWsB,WACtBh2E,EAAI26E,YAAcn+E,EAAas5E,GAC/B91E,EAAI46E,UAAYnF,EAChBz1E,EAAI66E,QAAU,SACd76E,EAAIg7E,WAAW99E,EAAGE,EAAGE,EAAGC,GAEhC,CACA,UAAAk8E,CAAWz5E,EAAKgT,GACZ,IAAI,GAAEpL,EAAE,GAAEC,EAAE,GAAEkG,EAAE,GAAEC,GAAOgF,GACrB,QAAE8iE,EAAO,QAAEC,EAAO,UAAEN,GAAc/6F,KAAKs+F,QAAQhmE,EAAK0iE,SACxD9tE,EAAKltB,KAAKm6F,QAAUn6F,KAAK+e,MAAQmO,EACjCC,EAAKntB,KAAKo6F,QAAUp6F,KAAK+e,MAAQoO,EACjCkG,GAAMrzB,KAAK+e,MACXuU,GAAMtzB,KAAK+e,MACPs8E,GAAWrB,GAAWsB,WACtBh2E,EAAI86E,UAAYt+E,EAAau5E,GAC7B/1E,EAAIC,YACJD,EAAIi7E,QAAQrzE,EAAIC,EAAIkG,EAAIC,EAAI,EAAG,EAAG,EAAI3c,KAAK+M,IAAI,GAC/C4B,EAAIxO,QAEJskF,GAAWpB,GAAWsB,WACtBh2E,EAAI26E,YAAcn+E,EAAas5E,GAC/B91E,EAAI46E,UAAYnF,EAChBz1E,EAAIC,YACJD,EAAIi7E,QAAQrzE,EAAIC,EAAIkG,EAAIC,EAAI,EAAG,EAAG,EAAI3c,KAAK+M,IAAI,GAC/C4B,EAAIE,SAEZ,CACA,UAAAw5E,CAAW15E,EAAKnY,GACZ,IAAI,MAAEoN,EAAK,EAAEiI,EAAC,EAAEE,EAAC,KAAEwR,EAAI,OAAE8nE,GAAW7uF,GAChC,QAAEiuF,EAAO,QAAEC,EAAO,UAAEN,EAAS,SAAEe,GAAa97F,KAAKs+F,QAAQnxF,EAAK6tF,SAClEx4E,EAAI,IAAIA,GACRE,EAAI,IAAIA,GACR,IAAK,IAAI5S,EAAI,EAAGA,EAAIyK,EAAOzK,IACvB0S,EAAE1S,GAAK9P,KAAKm6F,QAAUn6F,KAAK+e,MAAQyD,EAAE1S,GACrC4S,EAAE5S,GAAK9P,KAAKo6F,QAAUp6F,KAAK+e,MAAQ2D,EAAE5S,GAEzC,IAAK,IAAI0wF,EAAQ,EAAGA,GAAS,EAAGA,IAC5B,KAAa,GAATA,GAAcnF,GAAWrB,GAAWsB,UAE3B,GAATkF,GAAcpF,GAAWpB,GAAWsB,UAAxC,CAEAh2E,EAAIC,YACJD,EAAIL,OAAOzC,EAAE,GAAIE,EAAE,IACnB,IAAK,IAAI3Y,EAAI,EAAGA,EAAIwQ,EAAOxQ,IAClBmqB,GAASA,EAAKnqB,GAGVA,EAAIwQ,EAAQ,IAAM2Z,EAAKnqB,EAAI,IAChCub,EAAIJ,iBAAiB1C,EAAEzY,GAAI2Y,EAAE3Y,GAAIyY,EAAEzY,EAAI,GAAI2Y,EAAE3Y,EAAI,IACjDA,KAEKA,EAAIwQ,EAAQ,IAAM2Z,EAAKnqB,EAAI,KAChCub,EAAIm7E,cAAcj+E,EAAEzY,GAAI2Y,EAAE3Y,GAAIyY,EAAEzY,EAAI,GAAI2Y,EAAE3Y,EAAI,GAAIyY,EAAEzY,EAAI,GAAI2Y,EAAE3Y,EAAI,IAClEA,GAAK,GARLub,EAAIH,OAAO3C,EAAEzY,GAAI2Y,EAAE3Y,IAWvBiyF,GACA12E,EAAIF,YACK,GAATo7E,GACAl7E,EAAI86E,UAAYt+E,EAAau5E,GAC7B/1E,EAAIxO,SAGJwO,EAAI26E,YAAcn+E,EAAas5E,GAC/B91E,EAAI46E,UAAYnF,EAChBz1E,EAAI66E,QAAUrE,EAAW,SAAW,QACpCx2E,EAAIo7E,SAAW5E,EAAW,QAAU,QACpCx2E,EAAIE,SA3BI,CA8BpB,CACA,UAAAy5E,CAAW35E,EAAKU,GACZ,IAAI,EAAExD,EAAC,EAAEE,EAAC,IAAE0tD,EAAG,UAAE+rB,GAAcn2E,GAC3B,KAAElnB,EAAI,OAAEg8F,GAAW96F,KAAKs+F,QAAQt4E,EAAKg1E,SACrClkF,EAAOgL,EAAag5E,GACxBt4E,EAAIxiB,KAAKm6F,QAAUn6F,KAAK+e,MAAQyD,EAChCE,EAAI1iB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ2D,EAChC,IAAI64D,EAAOxB,GAASpoE,KAChBoN,EAAQjgB,EAAOkB,KAAK+e,MAAQw8D,EAAKvB,aACjCh3D,EAAK,EACT,IAAK,IAAIlT,EAAI,EAAGA,EAAIsgE,EAAIxxE,OAAQkR,IAAK,CACjC,IAAIk6D,EAAKoG,EAAIt+D,OAAOhC,GAChB/F,EAAIwxE,EAAKnuC,SAAS48B,GAClB78D,EAAO,KAOX,GANIpD,EAAI,GACJiZ,GAAMu4D,EAAKlB,aACXltE,EAAOouE,EAAKK,kBAGZzuE,EAAOouE,EAAKI,aAAa5xE,GACzBoD,EAAM,CACNmY,EAAIg3D,OACJ,IAAIn4D,EAAqB,GAAbg4E,EAAiBA,EAAYv4E,EAAS,EACrC,GAATO,EACAmB,EAAIq7E,UAAUn+E,EAAIQ,EAAKjE,EAAO2D,GAE9B4C,EAAIq7E,UAAUn+E,EAAI7L,KAAK2a,IAAInN,GAASnB,EAAKjE,EAAO2D,EAAI/L,KAAK4a,IAAIpN,GAASnB,EAAKjE,GAC/EuG,EAAIvG,MAAMA,GAAQA,GACL,GAAToF,GACAmB,EAAI0Q,QAAQ7R,GAChBmB,EAAI86E,UAAYtpF,EAChBwO,EAAIxO,KAAK3J,GACTmY,EAAIo3D,SACR,CACA15D,GAAMu4D,EAAKd,YAAY1wE,GACnB+F,EAAIsgE,EAAIxxE,OAAS,IACjBokB,GAAMu4D,EAAKJ,WAAWnR,EAAIoG,EAAIt+D,OAAOhC,EAAI,IACjD,CACJ,CACA,gBAAAovF,CAAiB55E,EAAKU,GAClB,IAAI,EAAExD,EAAC,EAAEE,EAAC,IAAE0tD,GAAQpqD,GAChB,KAAElnB,EAAI,OAAEg8F,EAAM,OAAE1e,EAAM,IAAEC,GAAQr8E,KAAKs+F,QAAQt4E,EAAKg1E,SAClDlkF,EAAOgL,EAAag5E,GACxBt4E,EAAIxiB,KAAKm6F,QAAUn6F,KAAK+e,MAAQyD,EAChCE,EAAI1iB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ2D,EAChC4C,EAAIg3D,OACJ,IAAI9zB,EAAM,GACN6zB,EAAIE,OACJ/zB,GAAO,SACP6zB,EAAIG,SACJh0B,GAAO,WACXljC,EAAIi2D,KAAO/yB,EAAO1pD,EAAOkB,KAAK+e,MAAS,MAAQq9D,EAC/C92D,EAAI86E,UAAYtpF,EAChBwO,EAAIs7E,SAASxwB,EAAK5tD,EAAGE,GACrB4C,EAAIo3D,SACR,CACA,QAAA6iB,CAASF,EAAKn7B,GACV,IAAI,GAAEv/C,EAAE,GAAEC,EAAE,GAAEC,EAAE,GAAEC,GAAOo/C,GACrB,OAAE42B,EAAM,UAAEC,GAAc/6F,KAAKs+F,QAAQp6B,EAAK82B,SAC9Cr2E,EAAK3kB,KAAKm6F,QAAUn6F,KAAK+e,MAAQ4F,EACjCC,EAAK5kB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ6F,EACjCC,EAAK7kB,KAAKm6F,QAAUn6F,KAAK+e,MAAQ8F,EACjCC,EAAK9kB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ+F,EAC7Bg2E,GAAUd,GAAWsB,WACrB+D,EAAInnF,MAAM,SACVmnF,EAAIr+E,KAAK,KAAM2D,GACf06E,EAAIr+E,KAAK,KAAM4D,GACfy6E,EAAIr+E,KAAK,KAAM6D,GACfw6E,EAAIr+E,KAAK,KAAM8D,GACf9kB,KAAK6gG,gBAAgBxB,EAAKvE,GAC1BuE,EAAIr+E,KAAK,eAAgB+5E,GACzBsE,EAAIr+E,KAAK,iBAAkB,SAC3Bq+E,EAAIt6D,KAAK,MAEjB,CACA,QAAAy6D,CAASH,EAAK3hF,GACV,IAAI,OAAEo9E,EAAM,UAAEC,GAAc/6F,KAAKs+F,QAAQ5gF,EAAM,GAAGs9E,SAClDqE,EAAInnF,MAAM,MACVlY,KAAK6gG,gBAAgBxB,EAAKvE,GAC1BuE,EAAIr+E,KAAK,eAAgB+5E,GACzBsE,EAAIr+E,KAAK,iBAAkB,SAC3Bq+E,EAAIt6D,KAAK,KACTs6D,EAAIvF,MACJ,IAAK,IAAI51B,KAAQxmD,EAAO,CACpB,IAAI,GAAEiH,EAAE,GAAEC,EAAE,GAAEC,EAAE,GAAEC,GAAOo/C,EACzBv/C,EAAK3kB,KAAKm6F,QAAUn6F,KAAK+e,MAAQ4F,EACjCC,EAAK5kB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ6F,EACjCC,EAAK7kB,KAAKm6F,QAAUn6F,KAAK+e,MAAQ8F,EACjCC,EAAK9kB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ+F,EACjCu6E,EAAInnF,MAAM,SACVmnF,EAAIr+E,KAAK,KAAM2D,GACf06E,EAAIr+E,KAAK,KAAM4D,GACfy6E,EAAIr+E,KAAK,KAAM6D,GACfw6E,EAAIr+E,KAAK,KAAM8D,GACfu6E,EAAIt6D,KAAK,KACb,CACAs6D,EAAItF,MACJsF,EAAIxF,MAAM,OACd,CACA,QAAA4F,CAASJ,EAAKl+D,GACV,IAAI,EAAE3e,EAAC,EAAEE,EAAC,EAAEE,EAAC,EAAEC,GAAMse,GACjB,QAAEi6D,EAAO,QAAEC,EAAO,UAAEN,GAAc/6F,KAAKs+F,QAAQn9D,EAAK65D,SACxDx4E,EAAIxiB,KAAKm6F,QAAUn6F,KAAK+e,MAAQyD,EAChCE,EAAI1iB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ2D,EAChCE,GAAK5iB,KAAK+e,MACV8D,GAAK7iB,KAAK+e,MACVsgF,EAAInnF,MAAM,SACVmnF,EAAIr+E,KAAK,IAAKwB,GACd68E,EAAIr+E,KAAK,IAAK0B,GACd28E,EAAIr+E,KAAK,QAAS4B,GAClBy8E,EAAIr+E,KAAK,SAAU6B,GACnB7iB,KAAK6gG,gBAAgBxB,EAAKjE,GACtBA,GAAWpB,GAAWsB,WACtB+D,EAAIr+E,KAAK,eAAgB+5E,GACzBsE,EAAIr+E,KAAK,iBAAkB,WAE/BhhB,KAAK8gG,cAAczB,EAAKhE,GACxBgE,EAAIt6D,KAAK,KACb,CACA,QAAA26D,CAASL,EAAK0B,GACV,IAAI,QAAE3F,EAAO,QAAEC,EAAO,UAAEN,GAAc/6F,KAAKs+F,QAAQyC,EAAM,GAAG/F,SAC5DqE,EAAInnF,MAAM,MACVlY,KAAK6gG,gBAAgBxB,EAAKjE,GACtBA,GAAWpB,GAAWsB,WACtB+D,EAAIr+E,KAAK,eAAgB+5E,GACzBsE,EAAIr+E,KAAK,iBAAkB,WAE/BhhB,KAAK8gG,cAAczB,EAAKhE,GACxBgE,EAAIt6D,KAAK,KACTs6D,EAAIvF,MACJ,IAAK,IAAI34D,KAAQ4/D,EAAO,CACpB,IAAI,EAAEv+E,EAAC,EAAEE,EAAC,EAAEE,EAAC,EAAEC,GAAMse,EACrB3e,EAAIxiB,KAAKm6F,QAAUn6F,KAAK+e,MAAQyD,EAChCE,EAAI1iB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ2D,EAChCE,GAAK5iB,KAAK+e,MACV8D,GAAK7iB,KAAK+e,MACVsgF,EAAInnF,MAAM,SACVmnF,EAAIr+E,KAAK,IAAKwB,GACd68E,EAAIr+E,KAAK,IAAK0B,GACd28E,EAAIr+E,KAAK,QAAS4B,GAClBy8E,EAAIr+E,KAAK,SAAU6B,GACnBw8E,EAAIt6D,KAAK,KACb,CACAs6D,EAAItF,MACJsF,EAAIxF,MAAM,OACd,CACA,QAAA8F,CAASN,EAAK/mE,GACV,IAAI,GAAEpL,EAAE,GAAEC,EAAE,GAAEkG,EAAE,GAAEC,GAAOgF,GACrB,QAAE8iE,EAAO,QAAEC,EAAO,UAAEN,GAAc/6F,KAAKs+F,QAAQhmE,EAAK0iE,SACxD9tE,EAAKltB,KAAKm6F,QAAUn6F,KAAK+e,MAAQmO,EACjCC,EAAKntB,KAAKo6F,QAAUp6F,KAAK+e,MAAQoO,EACjCkG,GAAMrzB,KAAK+e,MACXuU,GAAMtzB,KAAK+e,MACXsgF,EAAInnF,MAAM,YACVmnF,EAAIr+E,KAAK,KAAMkM,GACfmyE,EAAIr+E,KAAK,KAAMmM,GACfkyE,EAAIr+E,KAAK,KAAMqS,GACfgsE,EAAIr+E,KAAK,KAAMsS,GACftzB,KAAK6gG,gBAAgBxB,EAAKjE,GACtBA,GAAWpB,GAAWsB,UACtB+D,EAAIr+E,KAAK,eAAgB+5E,GAE7B/6F,KAAK8gG,cAAczB,EAAKhE,GACxBgE,EAAIt6D,KAAK,KACb,CACA,QAAA66D,CAASP,EAAK2B,GACV,IAAI,QAAE5F,EAAO,QAAEC,EAAO,UAAEN,GAAc/6F,KAAKs+F,QAAQ0C,EAAM,GAAGhG,SAC5DqE,EAAInnF,MAAM,MACVlY,KAAK6gG,gBAAgBxB,EAAKjE,GACtBA,GAAWpB,GAAWsB,UACtB+D,EAAIr+E,KAAK,eAAgB+5E,GAE7B/6F,KAAK8gG,cAAczB,EAAKhE,GACxBgE,EAAIt6D,KAAK,KACTs6D,EAAIvF,MACJ,IAAK,IAAIxhE,KAAQ0oE,EAAO,CACpB,IAAI,GAAE9zE,EAAE,GAAEC,EAAE,GAAEkG,EAAE,GAAEC,GAAOgF,EACzBpL,EAAKltB,KAAKm6F,QAAUn6F,KAAK+e,MAAQmO,EACjCC,EAAKntB,KAAKo6F,QAAUp6F,KAAK+e,MAAQoO,EACjCkG,GAAMrzB,KAAK+e,MACXuU,GAAMtzB,KAAK+e,MACXsgF,EAAInnF,MAAM,YACVmnF,EAAIr+E,KAAK,KAAMkM,GACfmyE,EAAIr+E,KAAK,KAAMmM,GACfkyE,EAAIr+E,KAAK,KAAMqS,GACfgsE,EAAIr+E,KAAK,KAAMsS,GACf+rE,EAAIt6D,KAAK,KACb,CACAs6D,EAAItF,MACJsF,EAAIxF,MAAM,OACd,CACA,OAAAgG,CAAQR,EAAKlyF,GACT,IAAI,MAAEoN,EAAK,EAAEiI,EAAC,EAAEE,EAAC,KAAEwR,EAAI,OAAE8nE,GAAW7uF,GAChC,QAAEiuF,EAAO,QAAEC,EAAO,UAAEN,EAAS,SAAEe,GAAa97F,KAAKs+F,QAAQnxF,EAAK6tF,SAClEx4E,EAAI,IAAIA,GACRE,EAAI,IAAIA,GACR,IAAK,IAAI5S,EAAI,EAAGA,EAAIyK,EAAOzK,IACvB0S,EAAE1S,GAAK9P,KAAKm6F,QAAUn6F,KAAK+e,MAAQyD,EAAE1S,GACrC4S,EAAE5S,GAAK9P,KAAKo6F,QAAUp6F,KAAK+e,MAAQ2D,EAAE5S,GAEzC,IAAImxF,EAAQ,KAAOz+E,EAAE,GAAK,IAAME,EAAE,GAC9B5S,EAAI,EACR,KAAOA,EAAIyK,GACF2Z,GAASA,EAAKpkB,GAIVokB,EAAKpkB,IAAMA,EAAIyK,EAAQ,IAAM2Z,EAAKpkB,EAAI,IAC3CmxF,GAAS,MAAQz+E,EAAE1S,GAAK,IAAM4S,EAAE5S,GAAK,IAAM0S,EAAE1S,EAAI,GAAK,IAAM4S,EAAE5S,EAAI,GAClEA,GAAK,GAEAokB,EAAKpkB,IAAMA,EAAIyK,EAAQ,GAAK2Z,EAAKpkB,EAAI,KAAOokB,EAAKpkB,EAAI,IAC1DmxF,GAAS,MAAQz+E,EAAE1S,GAAK,IAAM4S,EAAE5S,GAAK,IAAM0S,EAAE1S,EAAI,GAAK,IAAM4S,EAAE5S,EAAI,GAAK,IAAM0S,EAAE1S,EAAI,GAAK,IAAM4S,EAAE5S,EAAI,GACpGA,GAAK,GAGLA,KAZAmxF,GAAS,MAAQz+E,EAAE1S,GAAK,IAAM4S,EAAE5S,GAChCA,KAaJksF,IACAiF,GAAS,MACb5B,EAAInnF,MAAM,SACVmnF,EAAIr+E,KAAK,IAAKigF,GACdjhG,KAAK6gG,gBAAgBxB,EAAKjE,GACtBA,GAAWpB,GAAWsB,WACtB+D,EAAIr+E,KAAK,eAAgB+5E,GACzBsE,EAAIr+E,KAAK,kBAAmB86E,EAAW,QAAU,SACjDuD,EAAIr+E,KAAK,iBAAkB86E,EAAW,SAAW,UAErD97F,KAAK8gG,cAAczB,EAAKhE,GACxBgE,EAAIt6D,KAAK,KACb,CACA,OAAA+6D,CAAQT,EAAKr5E,EAAMo5E,GAAY,GAC3B,IAAI,EAAE58E,EAAC,EAAEE,EAAC,IAAE0tD,EAAG,UAAE+rB,GAAcn2E,GAC3B,KAAElnB,EAAI,OAAEg8F,GAAW96F,KAAKs+F,QAAQt4E,EAAKg1E,SACzCx4E,EAAIxiB,KAAKm6F,QAAUn6F,KAAK+e,MAAQyD,EAChCE,EAAI1iB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ2D,EAChC,IAAI64D,EAAOxB,GAASpoE,KAChBoN,EAAQjgB,EAAOkB,KAAK+e,MAAQw8D,EAAKvB,aACpB,GAAbmiB,IACAkD,EAAInnF,MAAM,MACVmnF,EAAIr+E,KAAK,YAAa,UAAUm7E,KAAa35E,KAAKE,MAClD28E,EAAIt6D,KAAK,KACTs6D,EAAIvF,OAERuF,EAAInnF,MAAM,MACVmnF,EAAIr+E,KAAK,YAAa,aAAewB,EAAI,IAAME,EAAI,KACnD1iB,KAAK8gG,cAAczB,EAAKvE,GACxBuE,EAAIt6D,KAAK,KACTs6D,EAAIvF,MACJuF,EAAInnF,MAAM,MACVmnF,EAAIr+E,KAAK,YAAa,SAAWjC,EAAQ,KAAQA,EAAS,KAC1DsgF,EAAIt6D,KAAK,KACTs6D,EAAIvF,MACJ,IAAI92E,EAAK,EACT,IAAK,IAAIlT,EAAI,EAAGA,EAAIsgE,EAAIxxE,OAAQkR,IAAK,CACjC,IAAIk6D,EAAKoG,EAAIt+D,OAAOhC,GAChB/F,EAAIwxE,EAAKnuC,SAAS48B,GACtBq1B,EAAInnF,MAAM,QACV,IAAI/W,EAAM4I,EAAI,EAAI,WAAa,QAAUA,EACrCq1F,EACAC,EAAIr+E,KAAK,aAAc7f,GAEvBk+F,EAAIr+E,KAAK,OAAQ7f,GACrBk+F,EAAIr+E,KAAK,IAAKgC,GACdq8E,EAAIt6D,KAAK,MACLh7B,GAAK,GACLiZ,GAAMu4D,EAAKd,YAAY1wE,GACnB+F,EAAIsgE,EAAIxxE,OAAS,IACjBokB,GAAMu4D,EAAKJ,WAAWnR,EAAIoG,EAAIt+D,OAAOhC,EAAI,MAG7CkT,GAAMu4D,EAAKlB,YACnB,CACAglB,EAAItF,MACJsF,EAAIxF,MAAM,QACVwF,EAAItF,MACJsF,EAAIxF,MAAM,QACO,GAAbsC,IACAkD,EAAItF,MACJsF,EAAIxF,MAAM,QAElB,CACA,aAAAkG,CAAcV,EAAKr5E,GACf,IAAI,EAAExD,EAAC,EAAEE,EAAC,IAAE0tD,GAAQpqD,GAChB,KAAElnB,EAAI,OAAEg8F,EAAM,OAAE1e,EAAM,IAAEC,GAAQr8E,KAAKs+F,QAAQt4E,EAAKg1E,SACtDx4E,EAAIxiB,KAAKm6F,QAAUn6F,KAAK+e,MAAQyD,EAChCE,EAAI1iB,KAAKo6F,QAAUp6F,KAAK+e,MAAQ2D,EAChC,IACIod,EAAQ,SADDhe,EAAag5E,oBACmB1e,iBAAsBt9E,EAAOkB,KAAK+e,SACzEs9D,EAAIE,OACJz8C,GAAS,uBACTu8C,EAAIG,SACJ18C,GAAS,wBAIbu/D,EAAInnF,MAAM,SACVmnF,EAAIr+E,KAAK,YAAa,YACtBq+E,EAAIr+E,KAAK,IAAKwB,GACd68E,EAAIr+E,KAAK,IAAK0B,GACd28E,EAAIr+E,KAAK,QAAS8e,GAClBu/D,EAAIt6D,KAAK,IAAgBqrC,EAPVnqD,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,UAOxF,UACpC,CACA,eAAA46E,CAAgBxB,EAAK59E,GACjB,GAAIA,GAAOu4E,GAAWsB,SAElB,YADA+D,EAAIr+E,KAAK,iBAAkB,KAG/Bq+E,EAAIr+E,KAAK,SAAUQ,EAAWC,IAC9B,IAAIiS,EAAQ/R,EAAYF,GACX,GAATiS,GACA2rE,EAAIr+E,KAAK,iBAAkB0S,EACnC,CACA,aAAAotE,CAAczB,EAAK59E,GACf,GAAIA,GAAOu4E,GAAWsB,SAElB,YADA+D,EAAIr+E,KAAK,eAAgB,KAG7Bq+E,EAAIr+E,KAAK,OAAQQ,EAAWC,IAC5B,IAAIiS,EAAQ/R,EAAYF,GACX,GAATiS,GACA2rE,EAAIr+E,KAAK,eAAgB0S,EACjC,CACA,gBAAAunE,CAAiBiG,GACb,IAAK,IAAIpxF,EAAI,EAAGA,EAAI9P,KAAKi6F,MAAMr7F,OAAQkR,IACnC,GAAI9P,KAAKi6F,MAAMnqF,GAAG8qF,WAAasG,EAAQtG,WAE5Bn/F,OAAOsT,KAAKmyF,GACNC,OAAOr/F,GAAMo/F,EAAQp/F,IAAM9B,KAAKi6F,MAAMnqF,GAAGhO,KAEtD,OAAOgO,EAGf,OADA9P,KAAKi6F,MAAMz9F,KAAK0kG,GACTlhG,KAAKi6F,MAAMr7F,OAAS,CAC/B,CACA,YAAAs8F,CAAa14E,EAAGE,GACZ,GAAiB,MAAb1iB,KAAKu6F,KAKL,OAJAv6F,KAAKu6F,KAAO/3E,EACZxiB,KAAKw6F,KAAO93E,EACZ1iB,KAAKy6F,MAAQj4E,OACbxiB,KAAK06F,MAAQh4E,GAGjB1iB,KAAKu6F,KAAO5jF,KAAKW,IAAItX,KAAKu6F,KAAM/3E,GAChCxiB,KAAKw6F,KAAO7jF,KAAKW,IAAItX,KAAKw6F,KAAM93E,GAChC1iB,KAAKy6F,MAAQ9jF,KAAKC,IAAI5W,KAAKy6F,MAAOj4E,GAClCxiB,KAAK06F,MAAQ/jF,KAAKC,IAAI5W,KAAK06F,MAAOh4E,EACtC,EAEJs3E,GAAWsB,UAAY,EIh/BhB,MAAM8F,GACT,WAAAlkG,CAAYs1F,EAAQ6O,GAChBrhG,KAAKwyF,OAASA,EACdxyF,KAAKqhG,GAAKA,EACVrhG,KAAKshG,UAAY,KACjBthG,KAAKusC,IAAMimD,EAAOlyC,cAClBtgD,KAAKsqC,OAASkoD,EAAO3U,YACrB79E,KAAKq9E,QAAUmV,EAAO1U,aACtB99E,KAAK+e,MAAQyzE,EAAOzU,WACpB/9E,KAAKuhG,SAAW,EAAMvhG,KAAK+e,KAC/B,CACA,WAAAuhC,GAAgB,OAAOtgD,KAAKusC,GAAK,CACjC,aAAAi1D,GAAkB,OAAOxhG,KAAKqhG,EAAI,CAClC,SAAAI,GAAc,OAAOzhG,KAAKwyF,MAAQ,CAClC,SAAA3U,GAAc,OAAO79E,KAAKsqC,MAAQ,CAClC,UAAAwzC,GAAe,OAAO99E,KAAKq9E,OAAS,CACpC,IAAAqkB,GACI,IAAI96C,EAAI+6C,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAYpDtiG,KAAKuiG,mBACL,IAAI,IAAEh2D,EAAG,OAAEimD,EAAM,QAAEnV,EAAO,OAAE/yC,EAAM,GAAE+2D,GAAOrhG,KACvCirC,EAAY,IAAI7mC,IAAIi5E,EAAQpyC,WAChC,IAAK,IAAIlhC,EAAI,EAAGA,GAAKwiC,EAAIE,SAAU1iC,IAC/B,GAAIwiC,EAAIupB,SAAS/rD,IAAMizC,GAAS6Z,oBAAsB5rB,EAAU3mC,IAAIyF,GAAI,CACpE,IAAI2oC,EAAOnG,EAAIM,OAAO9iC,GACtB,GAAIyoF,EAAOrQ,SAASzvC,EAAO,GAAG1sB,KAC1B,SACJ,IAAK,IAAI3P,KAAKk2B,EAAIwlB,aAAarf,GAC3B,GAAIr8B,GAAKtM,GAAKwiC,EAAIupB,SAASz/C,IAAM2mC,GAAS6Z,mBAAqBtqB,EAAIM,OAAOx2B,IAAMq8B,IAASzH,EAAU3mC,IAAI+R,GAAI,CACvG,IAAIy+C,EAAK09B,EAAOjQ,WAAWzkD,MAAMluB,GAAMA,EAAEswE,MAAQn2E,IAC7CgrD,EAAKy9B,EAAOjQ,WAAWzkD,MAAMluB,GAAMA,EAAEswE,MAAQ7pE,IAC7C4N,EAAMtN,KAAKue,MAAM4/B,EAAGoP,KAAKt/C,GAAKkwC,EAAGoP,KAAKp/C,GAAIgwC,EAAGoP,KAAKv/C,GAAKmwC,EAAGoP,KAAKr/C,IAC/DX,EAAMvN,KAAKue,MAAM6/B,EAAGmP,KAAKt/C,GAAKmwC,EAAGmP,KAAKp/C,GAAIiwC,EAAGmP,KAAKv/C,GAAKowC,EAAGmP,KAAKr/C,IACnE,GAAIlO,KAAKuF,IAAI8H,EAAUC,EAAKC,IAAQ,IAAMN,EAAQ,CAC9C5jB,KAAKwiG,eAAe1tC,EAAIC,GACE,QAAzBnO,EAAK5mD,KAAKshG,iBAA8B,IAAP16C,GAAyBA,EAAGrxC,OAAOs2B,GAAmB42D,SAAU,QAAS,CAAC3tC,EAAGoP,KAAKv/C,GAAImwC,EAAGoP,KAAKt/C,GAAIkwC,EAAGoP,KAAKr/C,GAAIiwC,EAAGoP,KAAKp/C,GAAIiwC,EAAGmP,KAAKv/C,GAAIowC,EAAGmP,KAAKt/C,GAAImwC,EAAGmP,KAAKr/C,GAAIkwC,EAAGmP,KAAKp/C,KACxMmmB,EAAU3qC,IAAIyJ,GACdkhC,EAAU3qC,IAAI+V,GACd,KACJ,CACJ,CACR,CACJ,IAAK,IAAIvG,EAAI,EAAGA,EAAI0iF,EAAOnQ,WAAYvyE,IAAK,CACxC,IAAIF,EAAI4iF,EAAOlQ,QAAQxyE,GACnBm7B,EAAU3mC,IAAIsL,EAAEswE,QAEhBtwE,EAAE7R,MAAQ6+E,GAAU2D,QACpB8gB,EAAGh8E,SAASzV,EAAEs0D,KAAKv/C,GAAI/U,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKr/C,GAAIjV,EAAEs0D,KAAKp/C,GAAIlV,EAAE6R,IAAK7R,EAAE9Q,MACvC,QAAzB6iG,EAAK3hG,KAAKshG,iBAA8B,IAAPK,GAAyBA,EAAGpsF,OAAOs2B,GAAmB27B,KAAM,IAAK,CAAC53D,EAAEs0D,KAAKv/C,GAAI/U,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKr/C,GAAIjV,EAAEs0D,KAAKp/C,MAEvIlV,EAAE7R,MAAQ6+E,GAAU4D,UACzBxgF,KAAK0iG,iBAAiB9yF,GACI,QAAzBgyF,EAAK5hG,KAAKshG,iBAA8B,IAAPM,GAAyBA,EAAGrsF,OAAOs2B,GAAmB27B,KAAM,IAAK,CAAC53D,EAAEs0D,KAAKv/C,GAAI/U,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKr/C,GAAIjV,EAAEs0D,KAAKp/C,MAEvIlV,EAAE7R,MAAQ6+E,GAAU6D,UACzBzgF,KAAK2iG,iBAAiB/yF,GACI,QAAzBiyF,EAAK7hG,KAAKshG,iBAA8B,IAAPO,GAAyBA,EAAGtsF,OAAOs2B,GAAmB27B,KAAM,IAAK,CAAC53D,EAAEs0D,KAAKv/C,GAAI/U,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKr/C,GAAIjV,EAAEs0D,KAAKp/C,MAEvIlV,EAAE7R,MAAQ6+E,GAAU8D,SACzB1gF,KAAK4iG,gBAAgBhzF,GACK,QAAzBkyF,EAAK9hG,KAAKshG,iBAA8B,IAAPQ,GAAyBA,EAAGvsF,OAAOs2B,GAAmB27B,KAAM,IAAK,CAAC53D,EAAEs0D,KAAKv/C,GAAI/U,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKr/C,GAAIjV,EAAEs0D,KAAKp/C,MAEvIlV,EAAE7R,MAAQ6+E,GAAUuD,QAAUvwE,EAAE7R,MAAQ6+E,GAAU+D,QACvD3gF,KAAK6iG,eAAejzF,GACM,QAAzBmyF,EAAK/hG,KAAKshG,iBAA8B,IAAPS,GAAyBA,EAAGxsF,OAAOs2B,GAAmB27B,KAAM,IAAK,CAAC53D,EAAEs0D,KAAKv/C,GAAI/U,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKr/C,GAAIjV,EAAEs0D,KAAKp/C,MAEvIlV,EAAE7R,MAAQ6+E,GAAUgE,WAAahxE,EAAE7R,MAAQ6+E,GAAUiE,WAAajxE,EAAE7R,MAAQ6+E,GAAUkE,eAC3F9gF,KAAK8iG,iBAAiBlzF,GACI,QAAzBoyF,EAAKhiG,KAAKshG,iBAA8B,IAAPU,GAAyBA,EAAGzsF,OAAOs2B,GAAmB27B,KAAM,IAAK,CAAC53D,EAAEs0D,KAAKv/C,GAAI/U,EAAEs0D,KAAKt/C,GAAIhV,EAAEs0D,KAAKr/C,GAAIjV,EAAEs0D,KAAKp/C,MAEpJ,CACA,IAAIi+E,EAAKz4D,EAAO5gC,KAAKk6B,WACrB,IAAK,IAAI7zB,KAAKyiF,EAAO9P,WACjB,GAAe,GAAX3yE,EAAEoU,MAAY,CACd,IAAI6+E,EAAMh1E,EAASoF,oBAAoBrjB,EAAEmd,GAAInd,EAAEod,GAAIpd,EAAEsjB,GAAItjB,EAAEujB,GAAIvjB,EAAEoU,OACjEk9E,EAAG5F,SAASuH,EAAIj8E,GAAIi8E,EAAIh8E,GAAIg8E,EAAI9uE,MAAM,EAAM6uE,EAAIhzF,EAAEjR,KAAMk7F,GAAWsB,UAAU,GACnD,QAAzB2G,EAAKjiG,KAAKshG,iBAA8B,IAAPW,GAAyBA,EAAG1sF,OAAOs2B,GAAmB42D,SAAU,OAAQ,CAAC1yF,EAAEmd,GAAInd,EAAEod,GAAIpd,EAAEsjB,GAAItjB,EAAEujB,GAAIvjB,EAAEoU,OACzI,MAEIk9E,EAAG7F,SAASzrF,EAAEmd,GAAInd,EAAEod,GAAIpd,EAAEsjB,GAAItjB,EAAEujB,GAAIyvE,EAAIhzF,EAAEjR,KAAMk7F,GAAWsB,UACjC,QAAzB4G,EAAKliG,KAAKshG,iBAA8B,IAAPY,GAAyBA,EAAG3sF,OAAOs2B,GAAmB42D,SAAU,OAAQ,CAAC1yF,EAAEmd,GAAInd,EAAEod,GAAIpd,EAAEsjB,GAAItjB,EAAEujB,KAGvI,IAAK,IAAInxB,KAAKqwF,EAAO3P,WACjBwe,EAAG5F,SAASt5F,EAAE4kB,GAAI5kB,EAAE6kB,GAAI7kB,EAAE+xB,MAAM,EAAO6uE,EAAI5gG,EAAErD,KAAMk7F,GAAWsB,UAAU,GAC9C,QAAzB6G,EAAKniG,KAAKshG,iBAA8B,IAAPa,GAAyBA,EAAG5sF,OAAOs2B,GAAmB42D,SAAU,OAAQ,IAAItgG,EAAE4kB,MAAO5kB,EAAE6kB,KAE7H,IAAK,IAAIlX,EAAI,EAAGA,EAAI0iF,EAAOtQ,YAAapyE,IAAK,CACzC,IAAI3N,EAAIqwF,EAAOrQ,SAASryE,GACxB,GAAIutE,EAAQryC,UAAU1mC,IAAInC,EAAE+iE,MACxB,SACJ,IAAIkL,EAAMjuE,EAAE6jB,KACRkH,EAAK/qB,EAAEm2B,KAAKpL,GAAIC,EAAKhrB,EAAEm2B,KAAKnL,GAAIkG,EAAKlxB,EAAEm2B,KAAKjF,GAChD,GAAW,MAAP+8C,EAAa,CACa,QAAzBgyB,EAAKpiG,KAAKshG,iBAA8B,IAAPc,GAAyBA,EAAG7sF,OAAOs2B,GAAmB07B,KAAM,IAAK,CAACr6C,EAAIC,IACxG,QACJ,CACA,IAAIyxD,EAAMz8E,EAAEy8E,IACRn9D,EAAMtf,EAAEsf,IACZ,KAAO2uD,EAAI7uD,SAAS,MAAM,CACtB,IAAIm3D,EAAKrlD,EAAK+8C,EAAIxxE,OACdmR,EAAU,IAAN6uE,EACRyiB,EAAG7F,SAAStuE,EAAKmG,EAAKqlD,EAAIvrD,EAAIpd,EAAGA,EAAGiqF,GAAWsB,SAAU,EAAG75E,GAC5DyL,GAAMwrD,EACNrlD,GAAMqlD,EACNtI,EAAMA,EAAIzvD,UAAU,EAAGyvD,EAAIxxE,OAAS,EACxC,CACA,KAAOwxE,EAAI1vD,WAAW,MAAM,CACxB,IAAIg4D,EAAKrlD,EAAK+8C,EAAIxxE,OACd4jB,EAAI0K,EAAKmG,EAAKqlD,EAAIh2D,EAAIyK,EAAIpd,EAAU,IAAN6uE,EAAY1uC,EAAY,GAAN0uC,EACpDyiB,EAAGh8E,SAAS7C,EAAIzS,EAAG2S,EAAGF,EAAIzS,EAAG2S,EAAGjB,EAAKyuB,GACrCmxD,EAAGh8E,SAAS7C,EAAGE,EAAI3S,EAAGyS,EAAGE,EAAI3S,EAAG0R,EAAKyuB,GACrChjB,GAAMwrD,EACNrlD,GAAMqlD,EACNtI,EAAMA,EAAIzvD,UAAU,EAAGyvD,EAAIxxE,OAC/B,CACA,KAAOwxE,EAAI1vD,WAAW,MAAM,CACxB,IAAIg4D,EAAKrlD,EAAK+8C,EAAIxxE,OACd4jB,EAAI0K,EAAKmG,EAAKqlD,EAAIh2D,EAAIyK,EAAIpd,EAAU,IAAN6uE,EAAY1uC,EAAY,GAAN0uC,EACpDyiB,EAAGh8E,SAAS7C,EAAIzS,EAAG2S,EAAGF,EAAIzS,EAAG2S,EAAGjB,EAAKyuB,GACrChjB,GAAMwrD,EACNrlD,GAAMqlD,EACNtI,EAAMA,EAAIzvD,UAAU,EAAGyvD,EAAIxxE,OAC/B,CACIwxE,EAAIxxE,OAAS,GACbyiG,EAAGpR,SAAS/iE,EAAIC,EAAIijD,EAAKwO,EAAKn9D,EAAKqwE,GAAUmR,OAASnR,GAAUyK,OAAQp6F,EAAEk+E,UAAY,GAC5D,QAAzBgiB,EAAKriG,KAAKshG,iBAA8B,IAAPe,GAAyBA,EAAG9sF,OAAOs2B,GAAmB07B,KAAM6I,EAAK,CAACljD,EAAIC,KAG9E,QAAzBm1E,EAAKtiG,KAAKshG,iBAA8B,IAAPgB,GAAyBA,EAAG/sF,OAAOs2B,GAAmB07B,KAAM,IAAK,CAACr6C,EAAIC,GAChH,CACAntB,KAAKkjG,iBACT,CACA,gBAAAX,GACI,IAAI37C,EAAI+6C,EAAIC,EACZ,IAAIr1D,EAAMvsC,KAAKusC,IAA2B8wC,GAAbr9E,KAAKsqC,OAAkBtqC,KAAKq9E,SAASmV,EAASxyF,KAAKwyF,OAAQzzE,EAAQ/e,KAAK+e,MAAOsiF,EAAKrhG,KAAKqhG,GACtH,IAAK,IAAIvxF,EAAI,EAAG6/B,EAAMh5B,KAAKW,IAAI+lE,EAAQnyC,eAAetsC,OAAQ2tC,EAAIC,UAAW18B,EAAI6/B,EAAK7/B,IAAK,CACvF,GAAIutE,EAAQryC,UAAU1mC,IAAIwL,EAAI,GAC1B,SACJ,IAAI4oE,EAAK2E,EAAQnyC,eAAep7B,GAAKiP,EAAO0C,EAAM47D,EAAQlyC,aAAar7B,GACnE6J,EAAI64E,EAAOrQ,SAASryE,GACpBujB,EAAK1Z,EAAE2e,KAAKjF,GAAK,GAAMtU,EAAOuU,EAAK3Z,EAAE2e,KAAKhF,GAAK,GAAMvU,EACrDokF,EAAQxsF,KAAKoN,KAAK,EAAIsP,GAAM,EAAIqlD,IAChC0qB,EAAQzsF,KAAKoN,KAAK,EAAIuP,GAAM,EAAIolD,IAChC2qB,EAAO,EAAIhwE,EAAK8vE,EAAOG,EAAO,EAAIhwE,EAAK8vE,EAC3C,IAAK,IAAIr5F,EAAI,EAAGA,GAAKo5F,EAAOp5F,IAAK,CAC7B,IAAIyY,EAAI7I,EAAE2e,KAAKpL,GAAKmG,EAAKtpB,EAAIs5F,EAC7BhC,EAAG7F,SAASh5E,EAAG7I,EAAE2e,KAAKnL,GAAKmG,EAAIolD,EAAIA,EAAIshB,GAAWsB,SAAU,EAAG75E,GAC/D4/E,EAAG7F,SAASh5E,EAAG7I,EAAE2e,KAAKnL,GAAKmG,EAAIolD,EAAIA,EAAIshB,GAAWsB,SAAU,EAAG75E,EACnE,CACA,IAAK,IAAI1X,EAAI,EAAGA,EAAIq5F,EAAOr5F,IAAK,CAC5B,IAAI2Y,EAAI/I,EAAE2e,KAAKnL,GAAKmG,EAAKvpB,EAAIu5F,EAC7BjC,EAAG7F,SAAS7hF,EAAE2e,KAAKpL,GAAKmG,EAAI3Q,EAAGg2D,EAAIA,EAAIshB,GAAWsB,SAAU,EAAG75E,GAC/D4/E,EAAG7F,SAAS7hF,EAAE2e,KAAKpL,GAAKmG,EAAI3Q,EAAGg2D,EAAIA,EAAIshB,GAAWsB,SAAU,EAAG75E,EACnE,CAC0B,QAAzBmlC,EAAK5mD,KAAKshG,iBAA8B,IAAP16C,GAAyBA,EAAGrxC,OAAOs2B,GAAmB03D,OAAQ,MAAO,CAAC5pF,EAAE2e,KAAKpL,GAAIvT,EAAE2e,KAAKnL,GAAIxT,EAAE2e,KAAKjF,GAAI1Z,EAAE2e,KAAKhF,IACpJ,CACA,IAAK,IAAIh1B,KAAO++E,EAAQvyC,kBAAmB,CACvC,IAAI4H,EAAO1gC,SAAS1T,GAAMmjB,EAAM47D,EAAQvyC,kBAAkBxsC,GACtDqb,EAAI64E,EAAOrQ,SAASzvC,EAAO,GAC3Brf,EAAK1c,KAAKC,IAAI+C,EAAE2e,KAAKjF,GAAI,GAAMtU,GAAQuU,EAAK3c,KAAKC,IAAI+C,EAAE2e,KAAKhF,GAAI,GAAMvU,GACtErI,EAAK,IAAOqI,EACZykF,EAAQ7sF,KAAKC,IAAI,EAAGD,KAAK0tC,MAAMhxB,GAAM,EAAI3c,KACzC+sF,EAAQ9sF,KAAKC,IAAI,EAAGD,KAAK0tC,MAAM/wB,GAAM,EAAI5c,KACzCgtF,EAAQ,EAAIrwE,EAAMmwE,EAAOG,EAAQ,EAAIrwE,EAAMmwE,EAC/C,IAAK,IAAI3zF,EAAI,EAAGA,GAAK0zF,EAAO1zF,IAAK,CAC7B,IAAI0S,EAAI7I,EAAE2e,KAAKpL,GAAKmG,EAAKvjB,EAAI4zF,EAC7BrC,EAAG7F,SAASh5E,EAAG7I,EAAE2e,KAAKnL,GAAKmG,EAAI5c,EAAIA,EAAIsjF,GAAWsB,SAAU,EAAG75E,GAC/D4/E,EAAG7F,SAASh5E,EAAG7I,EAAE2e,KAAKnL,GAAKmG,EAAI5c,EAAIA,EAAIsjF,GAAWsB,SAAU,EAAG75E,EACnE,CACA,IAAK,IAAI3R,EAAI,EAAGA,EAAI2zF,EAAO3zF,IAAK,CAC5B,IAAI4S,EAAI/I,EAAE2e,KAAKnL,GAAKmG,EAAKxjB,EAAI6zF,EAC7BtC,EAAG7F,SAAS7hF,EAAE2e,KAAKpL,GAAKmG,EAAI3Q,EAAGhM,EAAIA,EAAIsjF,GAAWsB,SAAU,EAAG75E,GAC/D4/E,EAAG7F,SAAS7hF,EAAE2e,KAAKpL,GAAKmG,EAAI3Q,EAAGhM,EAAIA,EAAIsjF,GAAWsB,SAAU,EAAG75E,EACnE,CAC0B,QAAzBkgF,EAAK3hG,KAAKshG,iBAA8B,IAAPK,GAAyBA,EAAGpsF,OAAOs2B,GAAmB03D,OAAQ,OAAQ,CAAC5pF,EAAE2e,KAAKpL,GAAIvT,EAAE2e,KAAKnL,GAAIxT,EAAE2e,KAAKjF,GAAI1Z,EAAE2e,KAAKhF,IACrJ,CACA,IAAK,IAAIh1B,KAAO++E,EAAQtyC,gBAAiB,CACrC,IAAI+e,EAAO93C,SAAS1T,GAAMmjB,EAAM47D,EAAQtyC,gBAAgBzsC,GACpDqmB,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAG8+E,EAAS,EAC7C,IAAK,IAAI9zF,EAAI,EAAGA,EAAI0iF,EAAOnQ,WAAYvyE,IAAK,CACxC,IAAIF,EAAI4iF,EAAOlQ,QAAQxyE,GACnBF,EAAEswE,MAAQp2B,IACVnlC,GAAM/U,EAAEs0D,KAAKv/C,GACbC,GAAMhV,EAAEs0D,KAAKt/C,GACbC,GAAMjV,EAAEs0D,KAAKr/C,GACbC,GAAMlV,EAAEs0D,KAAKp/C,GACb8+E,GAAU,EAElB,CACA,GAAIA,EAAS,EAAG,CACZ,IAAIvxE,EAAM,EAAIuxE,GACbj/E,EAAIC,EAAIC,EAAIC,GAAM,CAACH,EAAK0N,EAAKzN,EAAKyN,EAAKxN,EAAKwN,EAAKvN,EAAKuN,EAC3D,CACA,IAAIrP,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EACxByN,EAAM,GAAMtT,EAAQuE,EAAKP,EAAQC,EAAIC,IAAMqoC,EAAKroC,EAAKoP,EAAKk5B,GAAMvoC,EAAKqP,EACrEnF,EAAK,IAAOvI,EAAKE,GAAKsI,EAAK,IAAOvI,EAAKE,GAAKpO,EAAK,IAAOqI,EAC5D,IAAK,IAAI5c,IAAK,EAAE,GAAI,EAAG,EAAG,GAAI,CAC1B,IAAIqgB,EAAI0K,EAAK/qB,EAAImpD,EAAI5oC,EAAIyK,EAAKhrB,EAAIopD,EAClC81C,EAAG7F,SAASh5E,EAAGE,EAAGhM,EAAIA,EAAIsjF,GAAWsB,SAAU,EAAG75E,EACtD,CAC0B,QAAzBmgF,EAAK5hG,KAAKshG,iBAA8B,IAAPM,GAAyBA,EAAGrsF,OAAOs2B,GAAmB03D,OAAQ,WAAY,CAAC5+E,EAAIC,EAAIC,EAAIC,GAC7H,CACJ,CACA,eAAAo+E,GACI,IAAIt8C,EAAI+6C,EACR,IAAIp1D,EAAMvsC,KAAKusC,IAA2B8wC,GAAbr9E,KAAKsqC,OAAkBtqC,KAAKq9E,SAASmV,EAASxyF,KAAKwyF,OAAQzzE,EAAQ/e,KAAK+e,MAAOsiF,EAAKrhG,KAAKqhG,GACtH,IAAK,IAAI1nF,KAAK0jE,EAAQzxC,aAAc,CAChC,IAAIzpC,EAAIqwF,EAAOrQ,SAASxoE,EAAI,GACxBoL,EAAc,GAARhG,EACVsiF,EAAGh8E,SAASljB,EAAEm2B,KAAKpL,GAAKnI,EAAK5iB,EAAEm2B,KAAKnL,GAAKpI,EAAK5iB,EAAEm2B,KAAKpL,GAAKnI,EAAK5iB,EAAEm2B,KAAKnL,GAAKpI,EAAK,SAAU,GAC1Fs8E,EAAGh8E,SAASljB,EAAEm2B,KAAKpL,GAAKnI,EAAK5iB,EAAEm2B,KAAKnL,GAAKpI,EAAK5iB,EAAEm2B,KAAKpL,GAAKnI,EAAK5iB,EAAEm2B,KAAKnL,GAAKpI,EAAK,SAAU,GAChE,QAAzB6hC,EAAK5mD,KAAKshG,iBAA8B,IAAP16C,GAAyBA,EAAGrxC,OAAOs2B,GAAmB03D,OAAQ,UAAW,CAACphG,EAAEm2B,KAAKpL,GAAI/qB,EAAEm2B,KAAKnL,GAAIhrB,EAAEm2B,KAAKjF,GAAIlxB,EAAEm2B,KAAKhF,IACxJ,CACA,IAAK,IAAIxjB,EAAI,EAAG6/B,EAAMh5B,KAAKW,IAAI+lE,EAAQjyC,aAAaxsC,OAAQ2tC,EAAIC,UAAW18B,EAAI6/B,EAAK7/B,IAChF,GAAIutE,EAAQjyC,aAAat7B,GAAK,EAAG,CAC7B,IAAI4oE,EAAK2E,EAAQjyC,aAAat7B,GAAKiP,EAAO0C,EAAM47D,EAAQhyC,cAAcv7B,GAClE3N,EAAIqwF,EAAOrQ,SAASryE,GACxBuxF,EAAG7F,SAASr5F,EAAEm2B,KAAKpL,GAAI/qB,EAAEm2B,KAAKnL,GAAIurD,EAAIA,EAAIshB,GAAWsB,SAAU,EAAG75E,GACxC,QAAzBkgF,EAAK3hG,KAAKshG,iBAA8B,IAAPK,GAAyBA,EAAGpsF,OAAOs2B,GAAmB03D,OAAQ,SAAU,CAACphG,EAAEm2B,KAAKpL,GAAI/qB,EAAEm2B,KAAKnL,GAAIhrB,EAAEm2B,KAAKjF,GAAIlxB,EAAEm2B,KAAKhF,IACvJ,CACR,CACA,gBAAAovE,CAAiB9yF,GACb,IAAI+U,EAAK/U,EAAEs0D,KAAKv/C,GAAIC,EAAKhV,EAAEs0D,KAAKt/C,GAAIC,EAAKjV,EAAEs0D,KAAKr/C,GAAIC,EAAKlV,EAAEs0D,KAAKp/C,GAC5D9B,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EACxBnD,EAAM7R,EAAE6R,IAER6oE,GADO16E,EAAE9Q,KAAa8Q,EAAE00B,KACV3tB,KAAK2I,KAAK0D,EAAKA,EAAKC,EAAKA,IACvCqoC,EAAKg/B,EAAOrnE,EAAIsoC,GAAM++B,EAAOtnE,EAC7B+D,EAAK,CAACpC,EAAIE,EAAKymC,EAAIzmC,EAAKymC,GAAKtkC,EAAK,CAACpC,EAAIE,EAAKymC,EAAIzmC,EAAKymC,GACzD,GAA4C,MAAxCvrD,KAAKwyF,OAAOrQ,SAASvyE,EAAEg9B,IAAM,GAAG5mB,MAAgD,GAAhChmB,KAAKusC,IAAIsQ,aAAajtC,EAAEg9B,KAAW,CACnF,IAAIrV,EAAQ,KACZ,IAAK,IAAIznB,EAAI,EAAGA,EAAI9P,KAAKwyF,OAAOnQ,WAAYvyE,IAAK,CAC7C,IAAIlO,EAAI5B,KAAKwyF,OAAOlQ,QAAQxyE,GAC5B,GAAIlO,EAAE7D,MAAQ6+E,GAAU2D,SAAW3+E,EAAE8qC,KAAO98B,EAAEg9B,KAAOhrC,EAAEgrC,KAAOh9B,EAAEg9B,KAAM,CAClE,GAAa,MAATrV,EAAe,CACfA,EAAQ,KACR,KACJ,CACAA,EAAQ31B,CACZ,CACJ,CACA,GAAa,MAAT21B,EAAe,CACf,IAAItT,EAAMtN,KAAKue,MAAMtQ,EAAKE,EAAIH,EAAKE,GAC/BX,EAAMvN,KAAKue,MAAMqC,EAAM2sC,KAAKt/C,GAAK2S,EAAM2sC,KAAKp/C,GAAIyS,EAAM2sC,KAAKv/C,GAAK4S,EAAM2sC,KAAKr/C,IAC3EjV,EAAEg9B,KAAOrV,EAAMmV,MACfxoB,GAAOvN,KAAK+M,IAChB,IAAI0sC,EAAOz5C,KAAKuF,IAAI8H,EAAUC,EAAKC,IACnC,GAAIksC,EAAO,IAAMxsC,GAAUwsC,EAAO,IAAMxsC,EAAQ,CAC5C,IAAIigF,EAAO71E,EAASc,cAAc/H,EAAG,GAAIC,EAAG,GAAID,EAAG,GAAIC,EAAG,GAAIuQ,EAAM2sC,KAAKv/C,GAAI4S,EAAM2sC,KAAKt/C,GAAI2S,EAAM2sC,KAAKr/C,GAAI0S,EAAM2sC,KAAKp/C,IAClHg/E,EAAO91E,EAASc,cAAc/H,EAAG,GAAIC,EAAG,GAAID,EAAG,GAAIC,EAAG,GAAIuQ,EAAM2sC,KAAKv/C,GAAI4S,EAAM2sC,KAAKt/C,GAAI2S,EAAM2sC,KAAKr/C,GAAI0S,EAAM2sC,KAAKp/C,IACtHiC,EAAG,GAAK88E,EAAK,GACb78E,EAAG,GAAK68E,EAAK,GACb98E,EAAG,GAAK+8E,EAAK,GACb98E,EAAG,GAAK88E,EAAK,GACb,IAAIC,EAAMh9E,EAAG,GAAKA,EAAG,GAAIi9E,EAAMh9E,EAAG,GAAKA,EAAG,GAAIi9E,EAAO,GAAM1sE,EAAMz4B,KAAOikB,EAAQghF,EAAKC,GACrFj9E,EAAG,IAAMg9E,EAAME,EACfj9E,EAAG,IAAMg9E,EAAMC,EACf,IAAIC,EAAMn9E,EAAG,GAAKA,EAAG,GAAIo9E,EAAMn9E,EAAG,GAAKA,EAAG,GAAiBuQ,EAAMz4B,KAAOikB,EAAQmhF,EAAKC,GACrFp9E,EAAG,IAAMm9E,EAAMD,EACfj9E,EAAG,IAAMm9E,EAAMF,CACnB,CACJ,CACJ,CACA,GAA4C,MAAxCjkG,KAAKwyF,OAAOrQ,SAASvyE,EAAEg9B,IAAM,GAAG5mB,MAAgD,GAAhChmB,KAAKusC,IAAIsQ,aAAajtC,EAAEg9B,KAAW,CACnF,IAAIw3D,EAAS,KAAMC,EAAS,KAC5B,IAAK,IAAIv0F,EAAI,EAAGA,EAAI9P,KAAKwyF,OAAOnQ,WAAYvyE,IAAK,CAC7C,IAAIlO,EAAI5B,KAAKwyF,OAAOlQ,QAAQxyE,GAC5B,GAAIlO,EAAE7D,MAAQ6+E,GAAU2D,SAAW3+E,EAAE8qC,KAAO98B,EAAEg9B,KAAOhrC,EAAEgrC,KAAOh9B,EAAEg9B,KAC5D,GAAc,MAAVw3D,EACAA,EAASxiG,MACR,IAAc,MAAVyiG,EAEJ,CACDD,EAASC,EAAS,KAClB,KACJ,CAJIA,EAASziG,CAIb,CAER,CACA,GAAc,MAAVwiG,GAA4B,MAAVC,EAAgB,CAClC,IAAIpgF,EAAMtN,KAAKue,MAAMtQ,EAAKE,EAAIH,EAAKE,GAC/BX,EAAMvN,KAAKue,MAAMkvE,EAAOlgC,KAAKt/C,GAAKw/E,EAAOlgC,KAAKp/C,GAAIs/E,EAAOlgC,KAAKv/C,GAAKy/E,EAAOlgC,KAAKr/C,IAC/EquC,EAAMv8C,KAAKue,MAAMmvE,EAAOngC,KAAKt/C,GAAKy/E,EAAOngC,KAAKp/C,GAAIu/E,EAAOngC,KAAKv/C,GAAK0/E,EAAOngC,KAAKr/C,IAC/EjV,EAAEg9B,KAAOw3D,EAAO13D,MAChBxoB,GAAOvN,KAAK+M,IACZ9T,EAAEg9B,KAAOy3D,EAAO33D,MAChBwmB,GAAOv8C,KAAK+M,IAChB,IAAI4gF,EAAOtgF,EAAUC,EAAKC,GAAMqgF,EAAQ5tF,KAAKuF,IAAIooF,GAC7CE,EAAOxgF,EAAUC,EAAKivC,GAAMuxC,EAAQ9tF,KAAKuF,IAAIsoF,GAC7CE,EAAQ/tF,KAAKuF,IAAI8H,EAAUE,EAAKgvC,IACpC,GAAIqxC,EAAQ,IAAM3gF,GAAU2gF,EAAQ,IAAM3gF,GACtC6gF,EAAQ,IAAM7gF,GAAU6gF,EAAQ,IAAM7gF,GACtC8gF,EAAQ,IAAM9gF,GAAU8gF,EAAQ,IAAM9gF,EAAQ,CAC1C0gF,EAAO,KACNF,EAAQC,GAAU,CAACA,EAAQD,IAChC,IAAIP,EAAO71E,EAASc,cAAc/H,EAAG,GAAIC,EAAG,GAAID,EAAG,GAAIC,EAAG,GAAIo9E,EAAOlgC,KAAKv/C,GAAIy/E,EAAOlgC,KAAKt/C,GAAIw/E,EAAOlgC,KAAKr/C,GAAIu/E,EAAOlgC,KAAKp/C,IACtHg/E,EAAO91E,EAASc,cAAc/H,EAAG,GAAIC,EAAG,GAAID,EAAG,GAAIC,EAAG,GAAIq9E,EAAOngC,KAAKv/C,GAAI0/E,EAAOngC,KAAKt/C,GAAIy/E,EAAOngC,KAAKr/C,GAAIw/E,EAAOngC,KAAKp/C,IAC1HiC,EAAK,CAACpC,EAAIk/E,EAAK,GAAIh/E,EAAIi/E,EAAK,IAC5B98E,EAAK,CAACpC,EAAIi/E,EAAK,GAAI/+E,EAAIg/E,EAAK,GAChC,CACJ,CACJ,CACA9jG,KAAKqhG,GAAGpF,SAASl1E,EAAIC,EAAIgzE,GAAWsB,SAAU,EAAG75E,GAAK,EAC1D,CACA,cAAA+gF,CAAe1tC,EAAIC,GACf,MAAM4vC,EAAiB,CAAC/0F,EAAG2nB,KACvB,IAAI5S,EAAK/U,EAAEs0D,KAAKv/C,GAAIC,EAAKhV,EAAEs0D,KAAKt/C,GAAIC,EAAKjV,EAAEs0D,KAAKr/C,GAAIC,EAAKlV,EAAEs0D,KAAKp/C,GAC5D9B,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EACxB0lE,EAAO16E,EAAE00B,KAAO3tB,KAAK2I,KAAK0D,EAAKA,EAAKC,EAAKA,GACzCqoC,EAAKg/B,EAAOrnE,EAAIsoC,GAAM++B,EAAOtnE,EAC7BgxD,EAAMnvD,EAAKymC,EAAIs5C,EAAM9/E,EAAKymC,EAAI0oB,EAAMpvD,EAAKymC,EAAIu5C,EAAM//E,EAAKymC,EAG5D,OAFW,EAASyoB,EAAMz8C,EAAM2sC,KAAKv/C,GAAIigF,EAAMrtE,EAAM2sC,KAAKt/C,IAC/C,EAASqvD,EAAM18C,EAAM2sC,KAAKv/C,GAAIkgF,EAAMttE,EAAM2sC,KAAKt/C,IAE/C,CAAEkgF,OAAQ9wB,EAAK+wB,OAAQH,EAAKI,OAAQ/wB,EAAKgxB,OAAQJ,GAEjD,CAAEC,OAAQ7wB,EAAK8wB,OAAQF,EAAKG,OAAQhxB,EAAKixB,OAAQL,EAAK,EAErE,IAAI71E,EAAI41E,EAAe7vC,EAAIC,GAAKpgD,EAAIgwF,EAAe5vC,EAAID,IAClDkwC,EAAQC,GAAUj3E,EAASc,cAAcgmC,EAAGoP,KAAKv/C,GAAImwC,EAAGoP,KAAKt/C,GAAImK,EAAEi2E,OAAQj2E,EAAEk2E,OAAQlwC,EAAGmP,KAAKv/C,GAAIowC,EAAGmP,KAAKt/C,GAAIjQ,EAAEqwF,OAAQrwF,EAAEswF,QAC1Hl+E,EAAK,CAAC+tC,EAAGoP,KAAKv/C,GAAIoK,EAAE+1E,OAAQnwF,EAAEmwF,OAAQ/vC,EAAGmP,KAAKv/C,GAAIqgF,GAClDh+E,EAAK,CAAC8tC,EAAGoP,KAAKt/C,GAAImK,EAAEg2E,OAAQpwF,EAAEowF,OAAQhwC,EAAGmP,KAAKt/C,GAAIqgF,GACtDjlG,KAAKqhG,GAAGpF,SAASl1E,EAAIC,EAAIgzE,GAAWsB,SAAU,EAAGxmC,EAAGrzC,KAAK,EAC7D,CACA,gBAAAkhF,CAAiB/yF,GACb,IAAI+U,EAAK/U,EAAEs0D,KAAKv/C,GAAIC,EAAKhV,EAAEs0D,KAAKt/C,GAC5B5B,EADqCpT,EAAEs0D,KAAKr/C,GAClCF,EAAI1B,EADuCrT,EAAEs0D,KAAKp/C,GACpCF,EACxBnD,EAAM7R,EAAE6R,IACR3iB,EAAO8Q,EAAE9Q,KAAMwlC,EAAO10B,EAAE00B,KACxB8/C,EAAMztE,KAAK2I,KAAK0D,EAAKA,EAAKC,EAAKA,GAC/BiiF,EAASvuF,KAAKoN,KAAW,IAANqgE,EAAYpkF,KAAKuhG,UACpCjX,EAAOhmD,EAAO8/C,EACd94B,EAAKg/B,EAAOrnE,EAAIsoC,GAAM++B,EAAOtnE,EAAImiF,EAAW,GAAOD,EAAS,GAC5DE,EAA0C,GAAhCplG,KAAKusC,IAAIsQ,aAAajtC,EAAEg9B,MAAqD,MAAxC5sC,KAAKwyF,OAAOrQ,SAASvyE,EAAEg9B,IAAM,GAAG5mB,KAAe,EAAI,EAAK,IAAOhmB,KAAK+e,MAASqlE,EAChI,IAAK,IAAIr6E,EAAI,EAAGA,GAAKm7F,EAAS,EAAGn7F,IAAK,CAClC,IAAImjB,EAAKvI,EAAK5a,EAAIiZ,EAAKmiF,EAAWC,EAASj4E,EAAKvI,EAAK7a,EAAIkZ,EAAKkiF,EAAWC,EACrEC,EAAK/5C,EAAKvhD,EAAIo7F,EAAUG,EAAK/5C,EAAKxhD,EAAIo7F,EAC1CnlG,KAAKqhG,GAAGh8E,SAAS6H,EAAKm4E,EAAIl4E,EAAKm4E,EAAIp4E,EAAKm4E,EAAIl4E,EAAKm4E,EAAI7jF,EAAK3iB,EAC9D,CACJ,CACA,eAAA8jG,CAAgBhzF,GACZ,IAAI+U,EAAK/U,EAAEs0D,KAAKv/C,GAAIC,EAAKhV,EAAEs0D,KAAKt/C,GAC5B5B,EADqCpT,EAAEs0D,KAAKr/C,GAClCF,EAAI1B,EADuCrT,EAAEs0D,KAAKp/C,GACpCF,EACxBnD,EAAM7R,EAAE6R,IACR3iB,EAAO8Q,EAAE9Q,KAAMwlC,EAAO10B,EAAE00B,KACxB8/C,EAAMztE,KAAK2I,KAAK0D,EAAKA,EAAKC,EAAKA,GAC/BiiF,EAASvuF,KAAKoN,KAAW,IAANqgE,EAAYpkF,KAAKuhG,UACpCjX,EAAOhmD,EAAO8/C,EACd94B,EAAKg/B,EAAOrnE,EAAIsoC,GAAM++B,EAAOtnE,EAC7BtM,EAAK,EAAI,GAAKwuF,EAAS,GACvB1iF,EAAI,EAAIzL,YAAY,EAAGL,GAAKgM,EAAI,EAAI3L,YAAY,EAAGL,GAAKwd,EAAO,EAAIrd,cAAa,EAAOH,GAC3F8L,EAAE,GAAKmC,EACPjC,EAAE,GAAKkC,EACPsP,EAAK,IAAK,EACV,IAAK,IAAInqB,EAAI,EAAGsM,EAAI,EAAGtM,GAAKm7F,EAAQn7F,IAAKsM,GAAK,EAAG,CAC7C,IAAIyW,EAAKnI,EAAK5a,EAAIiZ,GAAMkiF,EAAS,GAAIn4E,EAAKnI,EAAK7a,EAAIkZ,GAAMiiF,EAAS,GAC9Dh4E,EAAKvI,GAAM5a,EAAI,GAAKiZ,GAAMkiF,EAAS,GAAI/3E,EAAKvI,GAAM7a,EAAI,GAAKkZ,GAAMiiF,EAAS,GAC1El4E,GAAMF,EAAKI,GAAM,EAAGD,GAAMF,EAAKI,GAAM,EACrC6mC,EAAOjqD,EAAI,GAAK,EAAI,GAAK,EAC7ByY,EAAEnM,GAAKyW,EACPtK,EAAEnM,EAAI,GAAK2W,EAAKgnC,EAAO1I,EACvB9oC,EAAEnM,EAAI,GAAK6W,EACXxK,EAAErM,GAAK0W,EACPrK,EAAErM,EAAI,GAAK4W,EAAK+mC,EAAOzI,EACvB7oC,EAAErM,EAAI,GAAK8W,EACX+G,EAAK7d,IAAK,EACV6d,EAAK7d,EAAI,IAAK,EACd6d,EAAK7d,EAAI,IAAK,CAClB,CACArW,KAAKqhG,GAAG5F,SAASj5E,EAAGE,EAAGwR,GAAM,EAAOzS,EAAK3iB,EAAMk7F,GAAWsB,UAAU,EACxE,CACA,cAAAuH,CAAejzF,GACX,IAAI+U,EAAK/U,EAAEs0D,KAAKv/C,GAAIC,EAAKhV,EAAEs0D,KAAKt/C,GAAIC,EAAKjV,EAAEs0D,KAAKr/C,GAAIC,EAAKlV,EAAEs0D,KAAKp/C,GAC5D9B,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EACxBnD,EAAM7R,EAAE6R,IACR3iB,EAAO8Q,EAAE9Q,KACTymG,EAASzmG,EAAMozB,EAAOnP,EAAQC,EAAIC,GACtC,GAAIiP,EAAO,IACP,OACJ,IAAIszE,EAAQ,GAAM1mG,EAAOozB,EACzBvN,GAAM6gF,EAAQxiF,EACd4B,GAAM4gF,EAAQviF,EACd4B,GAAM2gF,EAAQxiF,EACd8B,GAAM0gF,EAAQviF,EACdD,EAAK6B,EAAKF,EACV1B,EAAK6B,EAAKF,EACV,IAAIsgF,EAASvuF,KAAKoN,KAAK,GAAMmO,EAAOqzE,GAChCJ,EAAW,GAAOD,EAAS,GAC/B,IAAK,IAAIn7F,EAAI,EAAGA,GAAKm7F,EAAS,EAAGn7F,IAAK,CAClC,IAAIgG,EAAIw1F,EACJ31F,EAAE7R,MAAQ6+E,GAAU+D,SACpB5wE,GAAUhG,GAAK,GAAOm7F,EAAS,IAAM,GAAhC,GACT,IAAIh4E,EAAKvI,EAAK5a,EAAIiZ,EAAKmiF,EAAUh4E,EAAKvI,EAAK7a,EAAIkZ,EAAKkiF,EACpDnlG,KAAKqhG,GAAG7F,SAAStuE,EAAIC,EAAIpd,EAAGA,EAAGiqF,GAAWsB,SAAU,EAAG75E,EAC3D,CACJ,CACA,gBAAAqhF,CAAiBlzF,GACb,IAAI+U,EAAK/U,EAAEs0D,KAAKv/C,GAAIC,EAAKhV,EAAEs0D,KAAKt/C,GAAIC,EAAKjV,EAAEs0D,KAAKr/C,GAAIC,EAAKlV,EAAEs0D,KAAKp/C,GAC5D9B,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EACxBnD,EAAM7R,EAAE6R,IAER6oE,GADO16E,EAAE9Q,KAAa8Q,EAAE00B,KACV3tB,KAAK2I,KAAK0D,EAAKA,EAAKC,EAAKA,IACvCqoC,EAAKg/B,EAAOrnE,EAAIsoC,GAAM++B,EAAOtnE,EACjChjB,KAAKqhG,GAAGpF,SAAS,CAACt3E,EAAIE,EAAKymC,EAAIzmC,EAAKymC,GAAK,CAAC1mC,EAAIE,EAAKymC,EAAIzmC,EAAKymC,GAAK9pC,EAAkB,IAAbzhB,KAAK+e,MAAci7E,GAAWsB,UAAU,GAC1G1rF,EAAE7R,MAAQ6+E,GAAUgE,UACpB5gF,KAAKqhG,GAAGh8E,SAASV,EAAIC,EAAIC,EAAIC,EAAIrD,EAAkB,IAAbzhB,KAAK+e,QAG3C/e,KAAKqhG,GAAGh8E,SAASV,EAAIC,EAAIC,EAAK,IAAOymC,EAAIxmC,EAAK,IAAOymC,EAAI9pC,EAAkB,IAAbzhB,KAAK+e,OACnE/e,KAAKqhG,GAAGh8E,SAASV,EAAIC,EAAIC,EAAK,IAAOymC,EAAIxmC,EAAK,IAAOymC,EAAI9pC,EAAkB,IAAbzhB,KAAK+e,OAE3E,GHpaJ,SAAWizE,GACPA,EAAmBA,EAAyB,KAAI,GAAK,OACrDA,EAAmBA,EAA0B,MAAI,GAAK,QACtDA,EAAmBA,EAAwB,IAAI,GAAK,MACpDA,EAAmBA,EAA2B,OAAI,GAAK,SACvDA,EAAmBA,EAA2B,OAAI,GAAK,QAC1D,CAND,CAMGA,KAAuBA,GAAqB,CAAC,IACzC,MAAMyT,WAAmB5+D,GAC5B,WAAA3pC,CAAY+9D,EAAUyqC,EAASC,EAASC,EAAaC,GACjDn7F,QACA1K,KAAKi7D,SAAWA,EAChBj7D,KAAK0lG,QAAUA,EACf1lG,KAAK2lG,QAAUA,EACf3lG,KAAK4lG,YAAcA,EACnB5lG,KAAK6lG,aAAeA,EACpB7lG,KAAK8lG,UAAY,GACjB9lG,KAAKN,MAAQ,EACbM,KAAKL,OAAS,EACdK,KAAK+lG,eAAiB,KACtB/lG,KAAKgmG,gBAAkB,KACvBhmG,KAAKimG,iBAAmB,EACxBjmG,KAAKkmG,cAAgB,EACrBlmG,KAAKmmG,OAAS,QACdnmG,KAAK6jC,WAAa,SAClB7jC,KAAKomG,eAAiB,QACtBpmG,KAAKqmG,eAAiB,MACtBrmG,KAAKsmG,eAAiB,QACtBtmG,KAAKumG,eAAiB,MACtBvmG,KAAKwmG,cAAgB,SACrBxmG,KAAKymG,cAAgB,SACrBzmG,KAAKg8E,OAAS,KACdh8E,KAAKa,MAAQ,GACbb,KAAK0mG,QAAU,GACf1mG,KAAK2mG,eAAgB,EACrB3mG,KAAK4mG,cAAgB,GACrB5mG,KAAK6mG,WAAa,GAClB7mG,KAAK8mG,UAAY,GACjB9mG,KAAK+mG,UAAW,EAChB/mG,KAAKgnG,WAAa,EAClBhnG,KAAKinG,UAAY,EACjBjnG,KAAKwiB,EAAI,EACTxiB,KAAK0iB,EAAI,EACT1iB,KAAKknG,WAAY,EACjBlnG,KAAKknG,YAAcC,UAAUC,SAASrmG,MAAM,0BAChD,CACA,aAAAsmG,CAAc3nG,EAAOC,GACjBK,KAAK4lG,YAAclmG,EACnBM,KAAK6lG,aAAelmG,EAChBK,KAAK8mC,aACL9mC,KAAKsnG,cACLtnG,KAAKunG,SAEb,CACA,WAAIC,GACA,OAAOxnG,KAAKa,MAAMjC,OAAS,EAAIoB,KAAKa,MAAMb,KAAKa,MAAMjC,OAAS,GAAK,IACvE,CACA,aAAI6oG,GAAc,OAAOznG,KAAKa,MAAMjC,MAAQ,CAC5C,MAAAqoC,CAAOnmB,GACHpW,MAAMu8B,OAAOnmB,GACb9gB,KAAK8mC,WAAWhkB,IAAI,CAAE,SAAY,WAAY,MAAS,GAAG9iB,KAAKN,UAAW,OAAU,GAAGM,KAAKL,aAC5FK,KAAK8mC,WAAWtG,SAAS,gBACzBxgC,KAAK0nG,gBACL,IAAIC,EAAc,uCAClBA,GAAe,wBACf3nG,KAAKg8E,OAASn7D,EAAW7gB,KAAK8mC,WAAW3lB,GAAI,SAAU,CAAE,MAASnhB,KAAKN,MAAO,OAAUM,KAAKL,OAAQ,MADrGgoG,8DAEA3nG,KAAKg8E,OAAOl8C,MAAMpgC,MAAQM,KAAKN,MAAQ,KACvCM,KAAKg8E,OAAOl8C,MAAMngC,OAASK,KAAKL,OAAS,KACzCK,KAAKsnG,cACLtnG,KAAKunG,SACLvnG,KAAK8mC,WAAWpE,SAASp7B,GAAUtH,KAAK4nG,WAAWtgG,KACnDtH,KAAK8mC,WAAWlE,YAAYt7B,GAAUtH,KAAK6nG,iBAAiBvgG,KAC5DtH,KAAK8mC,WAAWjE,aAAav7B,IAAYA,EAAMwgG,iBAAkB9nG,KAAK+nG,UAAUzgG,EAAM,IACtFtH,KAAK8mC,WAAWhE,WAAWx7B,GAAUtH,KAAKgoG,QAAQ1gG,KAClDtH,KAAK8mC,WAAW5D,aAAa57B,GAAUtH,KAAKioG,UAAU3gG,KACtDtH,KAAK8mC,WAAW9D,cAAc17B,GAAUtH,KAAKkoG,SAAS5gG,KACtDtH,KAAK8mC,WAAW7D,aAAa37B,GAAUtH,KAAKmoG,UAAU7gG,IAC1D,CACA,QAAA8gG,CAASC,GACLA,EAAKC,WAAatoG,KAClBqoG,EAAKE,WAAavoG,KAAKa,MAAMjC,OAAS,EACtCypG,EAAKxX,OACL7wF,KAAKa,MAAMrE,KAAK6rG,GACG,MAAfroG,KAAKg8E,SACLh8E,KAAK0nG,gBACL1nG,KAAKwoG,gBACLxoG,KAAKsnG,cACLtnG,KAAKunG,SAEb,CACA,OAAAkB,GAC6B,GAArBzoG,KAAKa,MAAMjC,SAEf,EAAIyY,KAAKrX,KAAKa,OAAO6nG,aACrB1oG,KAAKa,MAAMjC,SACQ,MAAfoB,KAAKg8E,SACLh8E,KAAK0nG,gBACL1nG,KAAKwoG,gBACLxoG,KAAKsnG,cACLtnG,KAAKunG,UAEb,CACA,WAAAoB,GACuB,MAAf3oG,KAAKg8E,SACLh8E,KAAK0nG,gBACL1nG,KAAKwoG,gBACLxoG,KAAKsnG,cACLtnG,KAAKunG,SAEb,CACA,iBAAAqB,GACI,OAAO5oG,KAAK+lG,cAChB,CACA,iBAAA8C,CAAkBroG,GACVA,GAAMR,KAAK+lG,iBACX/lG,KAAK+lG,eAAiBvlG,EACtBR,KAAKunG,SAEb,CACA,aAAAuB,CAAcrgC,GACV,IAAI3uD,EAAS9Z,KAAK0mG,QAAQ97F,QAAQG,GAAc,KAARA,EAAEvK,KAC1CsZ,EAAOJ,MAAK,CAAC+7D,EAAIsQ,IAAe,IAAPtQ,EAAG/yD,EAAY+yD,EAAGjzD,GAAa,IAAPujE,EAAGrjE,EAAYqjE,EAAGvjE,KACnE,IAAI3M,EAAM,EAAGa,EAAKoD,EAAOlb,OACzB,IAAK,IAAIkR,EAAI,EAAGA,EAAI4G,EAAI5G,IACpB,GAAIgK,EAAOhK,GAAGtP,IAAMR,KAAK+lG,eAAgB,CACrClwF,EAAM/F,EACN,KACJ,CACJ9P,KAAK+lG,eAAiBjsF,GAAQjE,EAAM4yD,EAAM/xD,GAAMA,GAAIlW,GACpDR,KAAKunG,QACT,CACA,SAAAwB,GACQ/oG,KAAK+mG,WAET/mG,KAAK+mG,UAAW,EACZ/mG,KAAK8mC,aACL9mC,KAAK0nG,gBACL1nG,KAAKwoG,gBACLxoG,KAAKsnG,cACLtnG,KAAKunG,UAEb,CACA,SAAAyB,GACShpG,KAAK+mG,WAEV/mG,KAAK+mG,UAAW,EACZ/mG,KAAK8mC,aACL9mC,KAAK0nG,gBACL1nG,KAAKwoG,gBACLxoG,KAAKsnG,cACLtnG,KAAKunG,UAEb,CACA,gBAAA0B,GACI,OAAOjpG,KAAK2mG,aAChB,CACA,gBAAAuC,CAAiBjoE,GACbjhC,KAAK2mG,cAAgB1lE,EACrBjhC,KAAK4mG,cAAgB3lE,EAAO,GAAK,GACjCjhC,KAAK8lG,UAAY7kE,EAAO,GAAK,EACjC,CACA,aAAAkoE,CAAc3mF,EAAGE,GACb,IAAIE,EAAI5iB,KAAKN,MAAOmjB,EAAI7iB,KAAKL,OAC7B,GAAI6iB,EAAI,GAAKA,EAAII,GAAKF,EAAI,GAAKA,EAAIG,EAC/B,OAAO,EACX,GAAI7iB,KAAKi7D,UAAY+2B,GAAmBiR,QAA+B,GAArBjjG,KAAKa,MAAMjC,OACzD,OAAO,EACX,GAAIoB,KAAKi7D,UAAY+2B,GAAmBoK,KAAM,CAC1C,IAAIjwC,EAAK,GAAMtpC,EAAI,EAAGumF,EAAKppG,KAAK6mG,WAAYwC,EAAK,GAAMrpG,KAAK8mG,UAC5D,OAAOtkF,EAAII,EAAIwmF,GAAO1mF,EAAIypC,EAAKk9C,GAAM3mF,EAAIypC,EAAKk9C,CAClD,CACK,GAAIrpG,KAAKi7D,UAAY+2B,GAAmBsK,MAAO,CAChD,IAAInwC,EAAK,GAAMtpC,EAAI,EAAGumF,EAAKppG,KAAK6mG,WAAYwC,EAAK,GAAMrpG,KAAK8mG,UAC5D,OAAOtkF,EAAI4mF,GAAO1mF,EAAIypC,EAAKk9C,GAAM3mF,EAAIypC,EAAKk9C,CAC9C,CACK,GAAIrpG,KAAKi7D,UAAY+2B,GAAmBwK,IAAK,CAC9C,IAAIxwC,EAAK,GAAMppC,EAAI,EAAG0mF,EAAKtpG,KAAK6mG,WAAYwC,EAAK,GAAMrpG,KAAK8mG,UAC5D,OAAOpkF,EAAIG,EAAIymF,GAAO9mF,EAAIwpC,EAAKq9C,GAAM7mF,EAAIwpC,EAAKq9C,CAClD,CACK,GAAIrpG,KAAKi7D,UAAY+2B,GAAmByK,OAAQ,CACjD,IAAIzwC,EAAK,GAAMppC,EAAI,EAAG0mF,EAAKtpG,KAAK6mG,WAAYwC,EAAK,GAAMrpG,KAAK8mG,UAC5D,OAAOpkF,EAAI4mF,GAAO9mF,EAAIwpC,EAAKq9C,GAAM7mF,EAAIwpC,EAAKq9C,CAC9C,CACA,OAAO,CACX,CACA,QAAAE,GACI,OAAOvpG,KAAK6mG,UAChB,CACA,cAAA2C,CAAeC,GACX,OAAOzpG,KAAK8lG,UAAY2D,EAAOzpG,KAAKinG,WAAawC,EAAO,GAAK,EAAIzpG,KAAKgnG,UAC1E,CACA,aAAAU,GACI,GAAuB,MAAnB1nG,KAAK8mC,WACL,OACJ,IAAIkgE,EAAahnG,KAAKgnG,WAAYC,EAAYjnG,KAAKinG,UAEnD,GADAjnG,KAAK0pG,uBACoB,GAArB1pG,KAAKa,MAAMjC,OAOX,OANAoB,KAAKN,MAAQ,GACbM,KAAKL,OAAS,QACVK,KAAKi7D,UAAY+2B,GAAmBoK,MAAQp8F,KAAKi7D,UAAY+2B,GAAmBsK,MAChFt8F,KAAKL,OAASK,KAAK6lG,aACd7lG,KAAKi7D,UAAY+2B,GAAmBwK,KAAOx8F,KAAKi7D,UAAY+2B,GAAmByK,SACpFz8F,KAAKN,MAAQM,KAAK4lG,cAG1B,IAAK5lG,KAAK+mG,SAUN,OATI/mG,KAAKi7D,UAAY+2B,GAAmBoK,MAAQp8F,KAAKi7D,UAAY+2B,GAAmBsK,OAChFt8F,KAAKN,MAAQM,KAAK6mG,WAClB7mG,KAAKL,OAASK,KAAK8mG,UAAY,EAAIE,GAE9BhnG,KAAKi7D,UAAY+2B,GAAmBwK,KAAOx8F,KAAKi7D,UAAY+2B,GAAmByK,SACpFz8F,KAAKN,MAAQM,KAAK8mG,UAAY,EAAIE,EAClChnG,KAAKL,OAASK,KAAK6mG,iBAEvB7mG,KAAK2pG,gBAGT,IAAItB,EAAOroG,KAAKa,MAAMb,KAAKa,MAAMjC,OAAS,GAC1CypG,EAAKuB,QAAU,GACfvB,EAAKvgF,SACL,IAAI+hF,EAAW,EAAGC,EAAY,EACL,GAArB9pG,KAAKa,MAAMjC,SACNoB,KAAKi7D,UAAY+2B,GAAmBoK,MAAQp8F,KAAKi7D,UAAY+2B,GAAmBsK,MACrFwN,EAAY9pG,KAAK6mG,WAAaI,EACzBjnG,KAAKi7D,UAAY+2B,GAAmBwK,KAAOx8F,KAAKi7D,UAAY+2B,GAAmByK,SACpFoN,EAAW7pG,KAAK6mG,WAAaI,IACjC,IAAI8C,EAAa,KAAMx1E,EAAY,KACnC,GAAIv0B,KAAKi7D,UAAY+2B,GAAmBoK,MAAQp8F,KAAKi7D,UAAY+2B,GAAmBsK,MAAO,CACvF,IAAI0N,EAAgBrzF,KAAK0S,OAAOrpB,KAAK6lG,aAAe,EAAImB,EAAaC,IAAcjnG,KAAK8lG,UAAYmB,IAChGgD,EAAgBtzF,KAAKoN,KAAK,GAAMimF,GACpC,IAAK,IAAIjgG,EAAIigG,EAAejgG,GAAKkgG,EAAelgG,IAAK,CACjD,IAAImgG,EAAYvzF,KAAKoN,KAAKskF,EAAKuB,QAAQhrG,OAASmL,GAChD,IAAK,IAAIsM,EAAI6zF,EAAW7zF,GAAK6zF,EAAY,EAAG7zF,IAAK,CAC7C,IAAIm8E,EAASxyF,KAAKmqG,gBAAgB9B,EAAMt+F,EAAGsM,GACvCu0C,EAAQ5qD,KAAKoqG,YAAY5X,GAAU,EAAIA,EAAO,GAAG5zF,QACnC,MAAdmrG,GAAsBn/C,EAAQr2B,KAC9Bw1E,EAAavX,EACbj+D,EAAYq2B,EAEpB,CACJ,CACJ,MACK,GAAI5qD,KAAKi7D,UAAY+2B,GAAmBwK,KAAOx8F,KAAKi7D,UAAY+2B,GAAmByK,OAAQ,CAC5F,IAAI4N,EAAe1zF,KAAK0S,OAAOrpB,KAAK4lG,YAAc,EAAIoB,EAAaC,EAAY4C,IAAa7pG,KAAK8lG,UAAYmB,IACzGqD,EAAe3zF,KAAKoN,KAAK,GAAMsmF,GACnC,IAAK,IAAIv6F,EAAIu6F,EAAcv6F,GAAKw6F,EAAcx6F,IAAK,CAC/C,IAAI0iF,EAASxyF,KAAKuqG,eAAelC,EAAMv4F,GACnC86C,EAAQ5qD,KAAKoqG,YAAY5X,GAAU,EAAIA,EAAO5zF,QAChC,MAAdmrG,GAAsBn/C,EAAQr2B,KAC9Bw1E,EAAavX,EACbj+D,EAAYq2B,EAEpB,CACJ,CAGA,IAAI4/C,EAAQT,EAAW,GAAGnrG,OAAQ6rG,EAAQV,EAAWnrG,OAQrD,GAPAoB,KAAKN,MAAQ,EAAIsnG,EAAaC,GAAajnG,KAAK8lG,UAAYmB,GAAauD,EAAQX,EACjF7pG,KAAKL,OAAS,EAAIqnG,EAAaC,GAAajnG,KAAK8lG,UAAYmB,GAAawD,EAAQX,EAC9E9pG,KAAKi7D,UAAY+2B,GAAmBoK,MAAQp8F,KAAKi7D,UAAY+2B,GAAmBsK,MAChFt8F,KAAKN,OAASM,KAAK6mG,WACd7mG,KAAKi7D,UAAY+2B,GAAmBwK,KAAOx8F,KAAKi7D,UAAY+2B,GAAmByK,SACpFz8F,KAAKL,QAAUK,KAAK6mG,YACxB7mG,KAAK2pG,gBACDE,EAAW,GAAKC,EAAY,EAAG,CAC/B,IAAI71F,EAAI,CACJzT,GAAI,IACJgiB,EAAGwkF,EAAaC,EAChBvkF,EAAGskF,EAAaC,EAChBvnG,MAAOmqG,EAAW5C,EAClBtnG,OAAQmqG,EAAY7C,GAEpBjnG,KAAKi7D,UAAY+2B,GAAmBsK,MACpCroF,EAAEuO,GAAKxiB,KAAK6mG,WACP7mG,KAAKi7D,UAAY+2B,GAAmByK,SACzCxoF,EAAEyO,GAAK1iB,KAAK6mG,YACA,GAAZgD,IACA51F,EAAEvU,MAAQ8qG,EAAQxqG,KAAK8lG,UAAYmB,GAAauD,EAAQ,IAC3C,GAAbV,IACA71F,EAAEtU,OAAS8qG,EAAQzqG,KAAK8lG,UAAYmB,GAAawD,EAAQ,IAC7DzqG,KAAK0mG,QAAQlqG,KAAKyX,EACtB,CACA,IAAK,IAAIyO,EAAI,EAAGA,EAAI+nF,EAAO/nF,IACvB,IAAK,IAAIF,EAAI,EAAGA,EAAIgoF,EAAOhoF,IACvB,IAAK,IAAI1S,EAAI,EAAGA,EAAIu4F,EAAKuB,QAAQhrG,OAAQkR,IACrC,GAAIi6F,EAAWrnF,GAAGF,IAAM6lF,EAAKuB,QAAQ95F,GAAGtP,GAAI,CACxC,IAAyByT,EAAI,CAAEzT,GAAvB6nG,EAAKuB,QAAQ95F,GAAgBtP,IACrCyT,EAAEuO,EAAIwkF,EAAaC,EAAY4C,GAAY7pG,KAAK8lG,UAAYmB,GAAazkF,EACzEvO,EAAEyO,EAAIskF,EAAaC,EAAY6C,GAAa9pG,KAAK8lG,UAAYmB,GAAavkF,EACtE1iB,KAAKi7D,UAAY+2B,GAAmBsK,MACpCroF,EAAEuO,GAAKxiB,KAAK6mG,WACP7mG,KAAKi7D,UAAY+2B,GAAmByK,SACzCxoF,EAAEyO,GAAK1iB,KAAK6mG,YAChB5yF,EAAEvU,MAAQM,KAAK8lG,UACf7xF,EAAEtU,OAASK,KAAK8lG,UAChB9lG,KAAK0mG,QAAQlqG,KAAKyX,EACtB,CAEhB,CACA,aAAA01F,GACI,GAAI3pG,KAAKi7D,UAAY+2B,GAAmBiR,OACpC,OACJ,IAAIhvF,EAAI,CAAEzT,GAAI,KACVR,KAAKi7D,UAAY+2B,GAAmBoK,MACpCnoF,EAAEvU,MAAQM,KAAK6mG,WAFQ,EAGvB5yF,EAAEtU,OAASK,KAAK8mG,UAAY,EAC5B7yF,EAAEuO,EAAIxiB,KAAKN,MAAQuU,EAAEvU,MAJE,EAIY,EACnCuU,EAAEyO,EAAI,IAAO1iB,KAAKL,OAASsU,EAAEtU,SAExBK,KAAKi7D,UAAY+2B,GAAmBsK,OACzCroF,EAAEvU,MAAQM,KAAK6mG,WARQ,EASvB5yF,EAAEtU,OAASK,KAAK8mG,UAAY,EAC5B7yF,EAAEuO,EAAIk/D,EACNztE,EAAEyO,EAAI,IAAO1iB,KAAKL,OAASsU,EAAEtU,SAExBK,KAAKi7D,UAAY+2B,GAAmBwK,KACzCvoF,EAAEvU,MAAQM,KAAK8mG,UAAY,EAC3B7yF,EAAEtU,OAASK,KAAK6mG,WAfO,EAgBvB5yF,EAAEuO,EAAI,IAAOxiB,KAAKN,MAAQuU,EAAEvU,OAC5BuU,EAAEyO,EAAI1iB,KAAKL,OAASsU,EAAEtU,OAjBC,EAiBc,GAEhCK,KAAKi7D,UAAY+2B,GAAmByK,SACzCxoF,EAAEvU,MAAQM,KAAK8mG,UAAY,EAC3B7yF,EAAEtU,OAASK,KAAK6mG,WArBO,EAsBvB5yF,EAAEuO,EAAI,IAAOxiB,KAAKN,MAAQuU,EAAEvU,OAC5BuU,EAAEyO,EAAIg/D,GAEV1hF,KAAK0mG,QAAQlqG,KAAKyX,EACtB,CACA,aAAAu0F,GACIxoG,KAAK8mC,WAAWzH,QAChB,IAAK,IAAIvvB,EAAI,EAAGA,EAAI9P,KAAK0mG,QAAQ9nG,OAAQkR,IACrC9P,KAAK0mG,QAAQ52F,GAAG46F,OAAS,KACzB1qG,KAAK0mG,QAAQ52F,GAAG66F,SAAW,KAE/B,IAAIhD,EAAc,uCAClBA,GAAe,wBACf3nG,KAAKg8E,OAASn7D,EAAW7gB,KAAK8mC,WAAW3lB,GAAI,SAAU,CAAE,MAASnhB,KAAKN,MAAO,OAAUM,KAAKL,OAAQ,MADrGgoG,6DAEJ,CACA,oBAAA+B,GACI1pG,KAAK8mC,WAAWzH,QAChBr/B,KAAK0mG,QAAU,EACnB,CACA,WAAAY,GACI,IAAI9kF,EAAGE,EACH1iB,KAAKi7D,UAAY+2B,GAAmBoK,MACpC55E,EAAI,EACJE,EAAI,IAAO1iB,KAAK6lG,aAAe7lG,KAAKL,SAE/BK,KAAKi7D,UAAY+2B,GAAmBsK,OACzC95E,EAAIxiB,KAAK4lG,YAAc5lG,KAAKN,MAC5BgjB,EAAI,IAAO1iB,KAAK6lG,aAAe7lG,KAAKL,SAE/BK,KAAKi7D,UAAY+2B,GAAmBwK,KACzCh6E,EAAI,IAAOxiB,KAAK4lG,YAAc5lG,KAAKN,OACnCgjB,EAAI,GAEC1iB,KAAKi7D,UAAY+2B,GAAmByK,QACzCj6E,EAAI,IAAOxiB,KAAK4lG,YAAc5lG,KAAKN,OACnCgjB,EAAI1iB,KAAK6lG,aAAe7lG,KAAKL,SAG7B6iB,EAAI,IAAOxiB,KAAK4lG,YAAc5lG,KAAKN,OACnCgjB,EAAI,IAAO1iB,KAAK6lG,aAAe7lG,KAAKL,SAExCK,KAAKwiB,EAAIxiB,KAAK0lG,QAAUljF,EACxBxiB,KAAK0iB,EAAI1iB,KAAK2lG,QAAUjjF,EACxB1iB,KAAK8mC,WAAWhkB,IAAI,CAAE,SAAY,aAClC,EAAkB9iB,KAAK8mC,WAAY9mC,KAAKwiB,EAAGxiB,KAAK0iB,EAAG1iB,KAAKN,MAAOM,KAAKL,OACxE,CACA,MAAA4nG,GACI,IAAKvnG,KAAK8mC,aAAe9mC,KAAKg8E,OAC1B,OACJ,IAAIqe,EAAU10E,IACd3lB,KAAKg8E,OAAOt8E,MAAQM,KAAKN,MAAQ26F,EACjCr6F,KAAKg8E,OAAOr8E,OAASK,KAAKL,OAAS06F,EACnCr6F,KAAKg8E,OAAOl8C,MAAMpgC,MAAQM,KAAKN,MAAQ,KACvCM,KAAKg8E,OAAOl8C,MAAMngC,OAASK,KAAKL,OAAS,KACzC,IAAI2lB,EAAMtlB,KAAKg8E,OAAOE,WAAW,MACjC52D,EAAIg3D,OACJh3D,EAAIvG,MAAMs7E,EAASA,GACnB/0E,EAAI84E,UAAU,EAAG,EAAGp+F,KAAKN,MAAOM,KAAKL,QACrC,IAAIwN,EAAOnN,KAAK+oB,eAChBzD,EAAI86E,UAAYt+E,EAAa9hB,KAAK6jC,YAClCve,EAAIxO,KAAK3J,GACTmY,EAAI26E,YAAcn+E,EAAa9hB,KAAKmmG,QACpC7gF,EAAI46E,UAAY,EAChB56E,EAAIE,OAAOrY,GACAnN,KAAKa,MAAMjC,OAAS,GAAIoB,KAAKa,MAAMb,KAAKa,MAAMjC,OAAS,GAClEoB,KAAK8mC,WAAWhkB,IAAI,CAAE,MAAS9iB,KAAKN,MAAQ,KAAM,OAAUM,KAAKL,OAAS,OAC1E,IAAK,IAAImQ,EAAI,EAAGA,EAAI9P,KAAK0mG,QAAQ9nG,OAAQkR,IAAK,CAC1C,MAAMmE,EAAIjU,KAAK0mG,QAAQ52F,GAAIF,EAAI5P,KAAK4qG,aAAa32F,EAAEzT,IACnD,IAAIqqG,EAAMC,EAeV,GAd4B,MAAxB9qG,KAAKgmG,iBAA2B/xF,EAAEzT,IAAMR,KAAKgmG,iBAC7C6E,EAAO7qG,KAAKsmG,eACZwE,EAAO9qG,KAAKumG,gBAEgB,MAAvBvmG,KAAK+lG,gBAA0B9xF,EAAEzT,IAAMR,KAAK+lG,gBACjD8E,EAAO7qG,KAAKwmG,cACZsE,EAAO9qG,KAAKymG,gBAGZoE,EAAO7qG,KAAKomG,eACZ0E,EAAO9qG,KAAKqmG,gBAEhB/gF,EAAIg3D,OACJnvE,EAAOuX,EAAgBzQ,EAAEuO,EAAI,GAAKvO,EAAEyO,EAAI,GAAKzO,EAAEuO,EAAIvO,EAAEvU,MAAQ,EAAGuU,EAAEyO,EAAIzO,EAAEtU,OAAS,EAAG,GACxE,MAARmrG,EAAc,CACd,IAAIC,EAAOzlF,EAAI0lF,qBAAqB/2F,EAAEuO,EAAGvO,EAAEyO,EAAGzO,EAAEuO,EAAIvO,EAAEvU,MAAOuU,EAAEyO,EAAIzO,EAAEtU,QACrEorG,EAAKE,aAAa,EAAGnpF,EAAa+oF,IAClCE,EAAKE,aAAa,EAAGnpF,EAAagpF,IAClCxlF,EAAI86E,UAAY2K,CACpB,MAEIzlF,EAAI86E,UAAYt+E,EAAa+oF,GAUjC,GATAvlF,EAAIxO,KAAK3J,GACTmY,EAAI26E,YAAcn+E,EAAa9hB,KAAKmmG,QACpC7gF,EAAI46E,UAAY,GAChB56E,EAAIE,OAAOrY,GACXmY,EAAIo3D,UACY,MAAZzoE,EAAEy2F,SACFz2F,EAAEy2F,OAAOlpG,SACTyS,EAAEy2F,OAAS,MAEN,MAAL96F,EAAW,CACX,GAAkB,MAAdqE,EAAE02F,SAAkB,CACpB12F,EAAE02F,SAAW,GAAI,uCAAuC1rE,SAASj/B,KAAK8mC,YACtE,IAAIspC,EAAMxgE,EAAEs7F,SACZ,GAAIt7F,EAAEu7F,SAAU,CACZ,KAAO/6B,EAAI7uD,SAAS,MAChB6uD,EAAMA,EAAIzvD,UAAU,EAAGyvD,EAAIxxE,OAAS,GACxC,IAAIwsG,EAAUx7F,EAAEu7F,SACZpqG,EAAQqqG,EAAQrqG,MAAM,uBACtBA,IACAqqG,EAAUrqG,EAAM,IAAMf,KAAKknG,UAAY,MAAQ,QAAUnmG,EAAM,IACnEqvE,GAAO,KAAOg7B,EAAU,GAC5B,CACAprG,KAAKykC,WAAWxwB,EAAE02F,SAASxpF,GAAGsc,UAAW2yC,EAC7C,CACA,EAAkBn8D,EAAE02F,SAAU12F,EAAEuO,EAAGvO,EAAEyO,EAAGzO,EAAEvU,MAAOuU,EAAEtU,OACvD,CACA,GAAS,MAALiQ,QACC,GAAiB,MAAbA,EAAEy7F,SAA+B,MAAZp3F,EAAEy2F,OAAgB,CAC5Cz2F,EAAEy2F,OAAS,GAAI,UAAUzrE,SAASj/B,KAAK8mC,YAAYhkB,IAAI,CAAE,SAAY,WAAY,iBAAkB,SACnG7O,EAAEy2F,OAAOpqE,QAAQ,MAAOmD,GAAME,aAAe,gBAAkB/zB,EAAEy7F,QAAU,QAC3E,MAAM30F,EAAK1W,KAAK4mG,cACV55E,EAAK/Y,EAAEuO,EAAI7L,KAAK0S,MAAM,IAAOpV,EAAEvU,MAAQgX,IACvCuW,EAAKhZ,EAAEyO,EAAI/L,KAAK0S,MAAM,IAAOpV,EAAEtU,OAAS+W,IAC9C,EAAkBzC,EAAEy2F,OAAQ19E,EAAIC,EAAIvW,EAAIA,EAC5C,MACK,GAAiB,MAAb9G,EAAE07F,QAAiB,CACxB,IAAI5J,EAAO9xF,EAAE07F,mBAAmBtR,GAAapqF,EAAE07F,QAAU,IAAItR,GAAWpqF,EAAE07F,SAC1E5J,EAAKvH,QAAUlmF,EAAEuO,EAAI7L,KAAK0S,MAAM,IAAOpV,EAAEvU,MAAQgiG,EAAKhiG,QACtDgiG,EAAKtH,QAAUnmF,EAAEyO,EAAI/L,KAAK0S,MAAM,IAAOpV,EAAEtU,OAAS+hG,EAAK/hG,SACvD+hG,EAAKrD,cAAc/4E,EACvB,MACK,GAAc,MAAV1V,EAAEoW,KAAc,CACrB,IAAItP,EAAK1W,KAAK8lG,UACVpE,EAAO,IAAI1H,GAAW,CAAE,KAAQ,CAACtjF,EAAIA,KACrCkoE,EAAW,GAALloE,EACNsoE,EAAMjF,GAASpoE,KAAK2pE,YAAY1rE,EAAEoW,KAAM44D,GACxCI,EAAI,GAAKA,EAAI,GAAKtoE,IAClBkoE,GAAOloE,GAAMsoE,EAAI,GAAKA,EAAI,IAC1BA,EAAMjF,GAASpoE,KAAK2pE,YAAY1rE,EAAEoW,KAAM44D,IAExCI,EAAI,GAAKtoE,IACTkoE,GAAOloE,EAAKsoE,EAAI,GAChBA,EAAMjF,GAASpoE,KAAK2pE,YAAY1rE,EAAEoW,KAAM44D,IAE5C,IAAIp8D,EAAI,IAAO9L,EAAKsoE,EAAI,IAAKt8D,EAAI,IAAOhM,EAAKsoE,EAAI,IACjD0iB,EAAKzR,SAASztE,EAAI,EAAGE,EAAG9S,EAAEoW,KAAM44D,EAAK,GACrC8iB,EAAKzR,SAASztE,EAAI,EAAGE,EAAG9S,EAAEoW,KAAM44D,EAAK,GACrC8iB,EAAKzR,SAASztE,EAAGE,EAAI,EAAG9S,EAAEoW,KAAM44D,EAAK,GACrC8iB,EAAKzR,SAASztE,EAAGE,EAAI,EAAG9S,EAAEoW,KAAM44D,EAAK,GACrC8iB,EAAKzR,SAASztE,EAAGE,EAAG9S,EAAEoW,KAAM44D,EAAK,UACjC8iB,EAAKvH,QAAUlmF,EAAEuO,EAAI7L,KAAK0S,MAAM,IAAOpV,EAAEvU,MAAQgiG,EAAKhiG,QACtDgiG,EAAKtH,QAAUnmF,EAAEyO,EAAI/L,KAAK0S,MAAM,IAAOpV,EAAEtU,OAAS+hG,EAAK/hG,SACvD+hG,EAAKrD,cAAc/4E,EACvB,CACA,GAAS,MAAL1V,GAAaA,EAAE27F,UAAW,CAC1BjmF,EAAIg3D,OACJ,IAAInrD,EAAKld,EAAEuO,EAAIvO,EAAEvU,MAAQ,EAAG0xB,EAAKnd,EAAEyO,EAAIzO,EAAEtU,OAAS,EAClD2lB,EAAIC,YACJD,EAAIL,OAAOkM,EAAIC,GACf9L,EAAIH,OAAOgM,EAAK,EAAGC,GACnB9L,EAAIH,OAAOgM,EAAIC,EAAK,GACpB9L,EAAIF,YACJE,EAAI86E,UAAY,QAChB96E,EAAIxO,OACJwO,EAAIo3D,SACR,CACA,GAAY,KAARzoE,EAAEzT,GAAW,CACb8kB,EAAIg3D,OACJnvE,EAAO,IAAI6X,OACX,IAAI+B,EAAIC,EAAI4pB,EAAO5wC,KAAK+mG,SACpB/mG,KAAKi7D,UAAY+2B,GAAmBoK,MAAQp8F,KAAKi7D,UAAY+2B,GAAmBsK,OAChFv1E,EAAK,CAAC,GAAK,GAAK,IAChBC,EAAK,CAAC,GAAK,GAAK,IACZhnB,KAAKi7D,UAAY+2B,GAAmBoK,OACpCxrD,GAAQA,IAEP5wC,KAAKi7D,UAAY+2B,GAAmBwK,KAAOx8F,KAAKi7D,UAAY+2B,GAAmByK,SACpF11E,EAAK,CAAC,GAAK,GAAK,IAChBC,EAAK,CAAC,GAAK,GAAK,IACZhnB,KAAKi7D,UAAY+2B,GAAmBwK,MACpC5rD,GAAQA,IAEZA,IACA7pB,EAAK,CAAC,EAAIA,EAAG,GAAI,EAAIA,EAAG,GAAI,EAAIA,EAAG,IACnCC,EAAK,CAAC,EAAIA,EAAG,GAAI,EAAIA,EAAG,GAAI,EAAIA,EAAG,KAEvC7Z,EAAK8X,OAAOhR,EAAEuO,EAAIvO,EAAEvU,MAAQqnB,EAAG,GAAI9S,EAAEyO,EAAIzO,EAAEtU,OAASqnB,EAAG,IACvD7Z,EAAKgY,OAAOlR,EAAEuO,EAAIvO,EAAEvU,MAAQqnB,EAAG,GAAI9S,EAAEyO,EAAIzO,EAAEtU,OAASqnB,EAAG,IACvD7Z,EAAKgY,OAAOlR,EAAEuO,EAAIvO,EAAEvU,MAAQqnB,EAAG,GAAI9S,EAAEyO,EAAIzO,EAAEtU,OAASqnB,EAAG,IACvD7Z,EAAKiY,YACLE,EAAI86E,UAAY,QAChB96E,EAAI26E,YAAc,QAClB36E,EAAI46E,UAAY,EAChB56E,EAAIxO,KAAK3J,GACTmY,EAAIE,OAAOrY,GACXmY,EAAIo3D,SACR,MACK,GAAY,KAARzoE,EAAEzT,GAAW,CAClB8kB,EAAIg3D,OACJ,IAAIkvB,EAAQ,IAAIxmF,OAAUymF,EAAQ,IAAIzmF,OAClC0mF,EAAQ,EACR9oF,EAAI3O,EAAEvU,MAAgB,EAARgsG,EAAW7oF,EAAI5O,EAAEtU,OAAiB,EAAR+rG,EAC5C,IAAK,IAAIpnC,EAAI,EAAGA,EAAI1hD,EAAIC,EAAI,EAAGyhD,GAAK,GAAI,CACpC,IAAI3/C,EAAK,EAAGC,EAAK0/C,EAAGz/C,EAAKy/C,EAAGx/C,EAAK,EACjC,GAAIF,EAAK/B,EAAG,CACR,IAAI8N,EAAQ/L,EAAK/B,EACjB8B,GAAMgM,EACN/L,GAAM+L,CACV,CACA,GAAI9L,EAAKjC,EAAG,CACR,IAAI+N,EAAQ9L,EAAKjC,EACjBiC,GAAM8L,EACN7L,GAAM6L,CACV,CACA66E,EAAMvmF,OAAOhR,EAAEuO,EAAIkpF,EAAQ/mF,EAAI1Q,EAAEyO,EAAIgpF,EAAQ9mF,GAC7C4mF,EAAMrmF,OAAOlR,EAAEuO,EAAIkpF,EAAQ7mF,EAAI5Q,EAAEyO,EAAIgpF,EAAQ5mF,GAC7C2mF,EAAMxmF,OAAOhR,EAAEuO,EAAIkpF,EAAQ/mF,EAAK,EAAG1Q,EAAEyO,EAAIgpF,EAAQ9mF,GACjD6mF,EAAMtmF,OAAOlR,EAAEuO,EAAIkpF,EAAQ7mF,EAAK,EAAG5Q,EAAEyO,EAAIgpF,EAAQ5mF,EACrD,CACAQ,EAAI46E,UAAY,EAChB56E,EAAI26E,YAAc,UAClB36E,EAAIE,OAAOgmF,GACXlmF,EAAI26E,YAAc,QAClB36E,EAAIE,OAAOimF,GACXnmF,EAAIo3D,SACR,CACJ,CACAp3D,EAAIo3D,SACR,CACA,aAAAivB,GACI/lF,OAAOoc,YAAW,IAAMhiC,KAAKunG,UAAU,IAC3C,CACA,YAAAqD,CAAapqG,GACT,IAAI6nG,EAAOroG,KAAKa,MAAMb,KAAKa,MAAMjC,OAAS,GAC1C,IAAK,IAAIkR,EAAI,EAAGA,EAAIu4F,EAAKuB,QAAQhrG,OAAQkR,IACrC,GAAIu4F,EAAKuB,QAAQ95F,GAAGtP,IAAMA,EACtB,OAAO6nG,EAAKuB,QAAQ95F,GAC5B,OAAO,IACX,CACA,aAAA87F,CAAcprG,GACV,IAAK,IAAIsP,EAAI,EAAGA,EAAI9P,KAAK0mG,QAAQ9nG,OAAQkR,IACrC,GAAI9P,KAAK0mG,QAAQ52F,GAAGtP,IAAMA,EACtB,OAAOR,KAAK0mG,QAAQ52F,GAC5B,OAAO,IACX,CACA,YAAAiZ,GACI,IAAInG,EAAI5iB,KAAKN,MAAOmjB,EAAI7iB,KAAKL,OAAQksG,EAAKjpF,EAAI,EAAGkpF,EAAKjpF,EAAI,EAC1D,GAAI7iB,KAAKi7D,UAAY+2B,GAAmBiR,QAA+B,GAArBjjG,KAAKa,MAAMjC,OACzD,OAAO8lB,EAAgB,GAAK,GAAK9B,EAAI,GAAKC,EAAI,GAFe,GAGjE,IAAI1V,EAAO,IAAI6X,OACf,GAAIhlB,KAAKi7D,UAAY+2B,GAAmBoK,KAAM,CAC1C,IAAIjwC,EAAK,GAAMtpC,EAAI,EAAGumF,EAAKppG,KAAK6mG,WAAYwC,EAAK,GAAMrpG,KAAK8mG,UAC5D35F,EAAK8X,OAAO,GAAK,IACjB9X,EAAKgY,OAAO,GAAM0mF,EAAKzC,EAPsC,EAO9B,IAC/Bj8F,EAAKszF,cAAc,GAAMoL,EAAKzC,EAAI,GAAK,GAAMyC,EAAKzC,EAAI,GAAK,GAAMyC,EAAKzC,EAAI,KAC1Ej8F,EAAKgY,OAAO,GAAM0mF,EAAKzC,EAAI,GAAMj9C,EAAKk9C,GACtCl8F,EAAKgY,OAAO,GAAM0mF,EAV2C,EAUnC,GAAM1/C,EAAKk9C,GACrCl8F,EAAKszF,cAAc,GAAMoL,EAAI,GAAM1/C,EAAKk9C,EAAI,GAAMwC,EAAI,GAAM1/C,EAAKk9C,EAAI,GAAMwC,EAAI,GAAM1/C,EAAKk9C,EAX7B,GAY7Dl8F,EAAKgY,OAAO,GAAM0mF,EAAI,GAAM1/C,EAAKk9C,EAZ4B,GAa7Dl8F,EAAKszF,cAAc,GAAMoL,EAAI,GAAM1/C,EAAKk9C,EAAI,GAAMwC,EAAI,GAAM1/C,EAAKk9C,EAAI,GAAMwC,EAbd,EAasB,GAAM1/C,EAAKk9C,GAC9Fl8F,EAAKgY,OAAO,GAAM0mF,EAAKzC,EAAI,GAAMj9C,EAAKk9C,GACtCl8F,EAAKgY,OAAO,GAAM0mF,EAAKzC,EAAI,GAAM0C,EAf4B,GAgB7D3+F,EAAKszF,cAAc,GAAMoL,EAAKzC,EAAI,GAAM0C,EAAI,GAAMD,EAAKzC,EAAI,GAAM0C,EAAI,GAAMD,EAAKzC,EAhBnB,EAgB2B,GAAM0C,GAC9F3+F,EAAKgY,OAAO,GAAK,GAAM2mF,EAC3B,MACK,GAAI9rG,KAAKi7D,UAAY+2B,GAAmBsK,MAAO,CAChD,IAAInwC,EAAK,GAAMtpC,EAAI,EAAGumF,EAAKppG,KAAK6mG,WAAYwC,EAAK,GAAMrpG,KAAK8mG,UAC5D35F,EAAK8X,OAAOrC,EAAI,GAAK,IACrBzV,EAAKgY,OAAOvC,GAAK,GAAMipF,EAAKzC,EAtBiC,GAsBxB,IACrCj8F,EAAKszF,cAAc79E,GAAK,GAAMipF,EAAKzC,GAAK,GAAKxmF,GAAK,GAAMipF,EAAKzC,GAAK,GAAKxmF,GAAK,GAAMipF,EAAKzC,GAAK,KAC5Fj8F,EAAKgY,OAAOvC,GAAK,GAAMipF,EAAKzC,GAAK,GAAMj9C,EAAKk9C,GAC5Cl8F,EAAKgY,OAAOvC,GAAK,GAAMipF,EAzBsC,GAyB7B,GAAM1/C,EAAKk9C,GAC3Cl8F,EAAKszF,cAAc79E,GAAK,GAAMipF,GAAK,GAAM1/C,EAAKk9C,EAAIzmF,GAAK,GAAMipF,GAAK,GAAM1/C,EAAKk9C,EAAIzmF,GAAK,GAAMipF,GAAK,GAAM1/C,EAAKk9C,EA1B/C,GA2B7Dl8F,EAAKgY,OAAOvC,GAAK,GAAMipF,GAAK,GAAM1/C,EAAKk9C,EA3BsB,GA4B7Dl8F,EAAKszF,cAAc79E,GAAK,GAAMipF,GAAK,GAAM1/C,EAAKk9C,EAAIzmF,GAAK,GAAMipF,GAAK,GAAM1/C,EAAKk9C,EAAIzmF,GAAK,GAAMipF,EA5B/B,GA4BwC,GAAM1/C,EAAKk9C,GAChHl8F,EAAKgY,OAAOvC,GAAK,GAAMipF,EAAKzC,GAAK,GAAMj9C,EAAKk9C,GAC5Cl8F,EAAKgY,OAAOvC,GAAK,GAAMipF,EAAKzC,GAAK,GAAM0C,EA9BsB,GA+B7D3+F,EAAKszF,cAAc79E,GAAK,GAAMipF,EAAKzC,GAAK,GAAM0C,EAAIlpF,GAAK,GAAMipF,EAAKzC,GAAK,GAAM0C,EAAIlpF,GAAK,GAAMipF,EAAKzC,EA/BpC,GA+B6C,GAAM0C,GAChH3+F,EAAKgY,OAAOvC,EAAI,GAAK,GAAMkpF,EAC/B,MACK,GAAI9rG,KAAKi7D,UAAY+2B,GAAmBwK,IAAK,CAC9C,IAAIxwC,EAAK,GAAMppC,EAAI,EAAG0mF,EAAKtpG,KAAK6mG,WAAYwC,EAAK,GAAMrpG,KAAK8mG,UAC5D35F,EAAK8X,OAAO,GAAKpC,GAAK,GAAMipF,IAC5B3+F,EAAKgY,OAAO,GAAKtC,GAAK,GAAMymF,EArCiC,IAsC7Dn8F,EAAKszF,cAAc,GAAK59E,GAAK,GAAMymF,GAAK,GAAKzmF,GAAK,GAAMymF,GAAK,IAASzmF,GAAK,GAAMymF,IACjFn8F,EAAKgY,OAAO,GAAM6mC,EAAKq9C,EAAIxmF,GAAK,GAAMymF,IACtCn8F,EAAKgY,OAAO,GAAM6mC,EAAKq9C,EAAIxmF,EAAI,KAC/B1V,EAAKszF,cAAc,GAAMz0C,EAAKq9C,EAAIxmF,EAAI,GAAK,GAAMmpC,EAAKq9C,EAAIxmF,EAAI,GAAK,GAAMmpC,EAAKq9C,EAzCjB,EAyCyBxmF,EAAI,IAC1F1V,EAAKgY,OAAO,GAAM6mC,EAAKq9C,EA1CsC,EA0C9BxmF,EAAI,IACnC1V,EAAKszF,cAAc,GAAMz0C,EAAKq9C,EAAIxmF,EAAI,GAAK,GAAMmpC,EAAKq9C,EAAIxmF,EAAI,GAAK,GAAMmpC,EAAKq9C,EAAIxmF,EAAI,KACtF1V,EAAKgY,OAAO,GAAM6mC,EAAKq9C,EAAIxmF,GAAK,GAAMymF,IACtCn8F,EAAKgY,OAAO,GAAM0mF,EA7C2C,EA6CnChpF,GAAK,GAAMymF,IACrCn8F,EAAKszF,cAAc,GAAMoL,EAAIhpF,GAAK,GAAMymF,GAAK,GAAMuC,EAAIhpF,GAAK,GAAMymF,GAAK,GAAMuC,EAAIhpF,GAAK,GAAMymF,EA9C/B,IA+C7Dn8F,EAAKgY,OAAO,GAAM0mF,EAAIhpF,GAAK,GAAMipF,GACrC,MACK,GAAI9rG,KAAKi7D,UAAY+2B,GAAmByK,OAAQ,CACjD,IAAIzwC,EAAK,GAAMppC,EAAI,EAAG0mF,EAAKtpG,KAAK6mG,WAAYwC,EAAK,GAAMrpG,KAAK8mG,UAC5D35F,EAAK8X,OAAO,GAAK,GAAM6mF,GACvB3+F,EAAKgY,OAAO,GAAK,GAAMmkF,EApDsC,GAqD7Dn8F,EAAKszF,cAAc,GAAK,GAAM6I,EAAI,GAAK,GAAMA,EAAI,IAAS,GAAMA,GAChEn8F,EAAKgY,OAAO,GAAM6mC,EAAKq9C,EAAI,GAAMC,GACjCn8F,EAAKgY,OAAO,GAAM6mC,EAAKq9C,EAAI,KAC3Bl8F,EAAKszF,cAAc,GAAMz0C,EAAKq9C,EAAI,GAAK,GAAMr9C,EAAKq9C,EAAI,GAAK,GAAMr9C,EAAKq9C,EAxDT,EAwDiB,IAC9El8F,EAAKgY,OAAO,GAAM6mC,EAAKq9C,EAzDsC,EAyD9B,IAC/Bl8F,EAAKszF,cAAc,GAAMz0C,EAAKq9C,EAAI,GAAK,GAAMr9C,EAAKq9C,EAAI,GAAK,GAAMr9C,EAAKq9C,EAAI,KAC1El8F,EAAKgY,OAAO,GAAM6mC,EAAKq9C,EAAI,GAAMC,GACjCn8F,EAAKgY,OAAO,GAAM0mF,EA5D2C,EA4DnC,GAAMvC,GAChCn8F,EAAKszF,cAAc,GAAMoL,EAAI,GAAMvC,EAAI,GAAMuC,EAAI,GAAMvC,EAAI,GAAMuC,EAAI,GAAMvC,EA7Dd,GA8D7Dn8F,EAAKgY,OAAO,GAAM0mF,EAAI,GAAMC,EAChC,CACA,OAAO3+F,CACX,CACA,cAAAo9F,CAAelC,EAAM6B,GACjB,GAA2B,GAAvB7B,EAAKuB,QAAQhrG,OACb,MAAO,CAAC,CAAC,OACb,IAAIouB,EAAK,IAAI1tB,MAAM+oG,EAAKuB,QAAQhrG,QAASquB,EAAK,IAAI3tB,MAAM+oG,EAAKuB,QAAQhrG,QACjE4jB,EAAI,EAAGE,EAAI,EAAGE,EAAI,EAAGC,EAAI,EAC7B,IAAK,IAAI/S,EAAI,EAAGA,EAAIu4F,EAAKuB,QAAQhrG,OAAQkR,IACrC8S,EAAIjM,KAAKC,IAAI4L,EAAI,EAAGI,GACpBC,EAAIlM,KAAKC,IAAI8L,EAAI,EAAGG,GACpBmK,EAAGld,GAAK0S,EACRyK,EAAGnd,GAAK4S,EACRF,IACIA,GAAK0nF,IACL1nF,EAAI,EACJE,KAGR,IAAIqpF,EAAO,IAAIzsG,MAAMujB,GACrB,IAAK,IAAI/S,EAAI,EAAGA,EAAI+S,EAAG/S,IACnBi8F,EAAKj8F,GAAK,IAAIxQ,MAAMsjB,GACxB,IAAK,IAAI9S,EAAI,EAAGA,EAAIu4F,EAAKuB,QAAQhrG,OAAQkR,IACrCi8F,EAAK9+E,EAAGnd,IAAIkd,EAAGld,IAAMu4F,EAAKuB,QAAQ95F,GAAGtP,GAEzC,OAAOurG,CACX,CACA,eAAA5B,CAAgB9B,EAAM2D,EAAY9B,GAC9B,GAA2B,GAAvB7B,EAAKuB,QAAQhrG,OACb,MAAO,CAAC,CAAC,OACb,IAAIouB,EAAK,IAAI1tB,MAAM+oG,EAAKuB,QAAQhrG,QAASquB,EAAK,IAAI3tB,MAAM+oG,EAAKuB,QAAQhrG,QACjE4jB,EAAI,EAAGE,EAAI,EAAGE,EAAI,EAAGC,EAAI,EAC7B,IAAK,IAAI/S,EAAI,EAAGA,EAAIu4F,EAAKuB,QAAQhrG,OAAQkR,IACrC8S,EAAIjM,KAAKC,IAAI4L,EAAI,EAAGI,GACpBC,EAAIlM,KAAKC,IAAI8L,EAAI,EAAGG,GACpBmK,EAAGld,GAAK0S,EACRyK,EAAGnd,GAAK4S,EACRF,IACIA,GAAK0nF,IACL1nF,EAAI,EACJE,KAGR,IAAIqpF,EAAO,IAAIzsG,MAAMujB,GACrB,IAAK,IAAI/S,EAAI,EAAGA,EAAI+S,EAAG/S,IACnBi8F,EAAKj8F,GAAK,IAAIxQ,MAAMsjB,GACxB,IAAK,IAAI9S,EAAI,EAAGA,EAAIu4F,EAAKuB,QAAQhrG,OAAQkR,IACrCi8F,EAAK9+E,EAAGnd,IAAIkd,EAAGld,IAAMu4F,EAAKuB,QAAQ95F,GAAGtP,GAEzC,OAAOurG,CACX,CACA,WAAA3B,CAAY6B,GACR,IAAIrhD,EAAQ,EACR6/C,EAAQwB,EAAMrtG,OAAQ4rG,EAAQyB,EAAM,GAAGrtG,OAC3C,IAAK,IAAI8jB,EAAI,EAAGA,EAAI+nF,EAAO/nF,IACvB,IAAK,IAAIF,EAAI,EAAGA,EAAIgoF,EAAOhoF,IACJ,MAAfypF,EAAMvpF,GAAGF,IACTooC,IAMZ,OAJI5qD,KAAKkmG,cAAgB,GAAKuE,EAAQzqG,KAAKkmG,gBACvCt7C,GAAwC,KAA9B6/C,EAAQzqG,KAAKkmG,gBACvBlmG,KAAKimG,iBAAmB,GAAKuE,EAAQxqG,KAAKimG,mBAC1Cr7C,GAA2C,KAAjC4/C,EAAQxqG,KAAKimG,mBACpBr7C,CACX,CACA,eAAAshD,CAAgB1pF,EAAGE,GACf,IAAK,IAAI5S,EAAI,EAAGA,EAAI9P,KAAK0mG,QAAQ9nG,OAAQkR,IAAK,CAC1C,IAAImE,EAAIjU,KAAK0mG,QAAQ52F,GACrB,GAAI0S,GAAKvO,EAAEuO,GAAKE,GAAKzO,EAAEyO,GAAKF,EAAIvO,EAAEuO,EAAIvO,EAAEvU,OAASgjB,EAAIzO,EAAEyO,EAAIzO,EAAEtU,OACzD,OAAOmQ,CACf,CACA,OAAQ,CACZ,CACA,YAAAq8F,CAAa3pF,EAAGE,GACZ,IAAI7M,EAAM7V,KAAKksG,gBAAgB1pF,EAAGE,GAClC,KAAI7M,EAAM,GAEV,OAAO7V,KAAK0mG,QAAQ7wF,GAAKrV,EAC7B,CACA,aAAA4rG,CAAc5rG,GACA,KAANA,EAOW,KAANA,EAIER,KAAKa,MAAMb,KAAKa,MAAMjC,OAAS,GACrCytG,UAAU7rG,GAJXR,KAAKyoG,UAPDzoG,KAAK+mG,SACL/mG,KAAKgpG,YAELhpG,KAAK+oG,WASjB,CACA,UAAAnB,CAAWtgG,GACX,CACA,gBAAAugG,CAAiBvgG,GACbA,EAAMglG,0BACV,CACA,SAAAvE,CAAUzgG,GACNtH,KAAK8mC,WAAWhmB,SAASghB,YACzB,IAAI8jD,EAAK,EAAYt+E,EAAOtH,KAAK8mC,YACjC,IAAK9mC,KAAKmpG,cAAcvjB,EAAG,GAAIA,EAAG,IAC9B,OACJ,IAAIplF,EAAKR,KAAKmsG,aAAavmB,EAAG,GAAIA,EAAG,IACjCplF,GAAMR,KAAKgmG,kBACXhmG,KAAKgmG,gBAAkBxlG,EACvBR,KAAKunG,UAETjgG,EAAMilG,iBACV,CACA,OAAAvE,CAAQ1gG,GACJ,IAAIs+E,EAAK,EAAYt+E,EAAOtH,KAAK8mC,YACjC,IAAK9mC,KAAKmpG,cAAcvjB,EAAG,GAAIA,EAAG,IAC9B,OACJ,IAAIplF,EAAKR,KAAKmsG,aAAavmB,EAAG,GAAIA,EAAG,IAC3B,MAANplF,GAAcR,KAAKgmG,iBAAmBxlG,GACtCR,KAAKgmG,qBAAkBhkG,EACvBhC,KAAKosG,cAAc5rG,GACnBR,KAAK2rG,kBAGL3rG,KAAKgmG,qBAAkBhkG,EACvBhC,KAAK2rG,iBAETrkG,EAAMilG,iBACV,CACA,SAAAtE,CAAU3gG,GACN,IAAIs+E,EAAK,EAAYt+E,EAAOtH,KAAK8mC,YAC5B9mC,KAAKmpG,cAAcvjB,EAAG,GAAIA,EAAG,KAElCt+E,EAAMilG,iBACV,CACA,QAAArE,CAAS5gG,GACL,IAAIs+E,EAAK,EAAYt+E,EAAOtH,KAAK8mC,YACjC,GAAK9mC,KAAKmpG,cAAcvjB,EAAG,GAAIA,EAAG,IAAlC,CAOA,GAA4B,MAAxB5lF,KAAKgmG,gBAAyB,CAC9B,IAAIpgB,EAAK,EAAYt+E,EAAOtH,KAAK8mC,YACxB9mC,KAAKmsG,aAAavmB,EAAG,GAAIA,EAAG,KAC3B5lF,KAAKgmG,kBACXhmG,KAAKgmG,gBAAkB,KACvBhmG,KAAK2rG,gBAEb,CACArkG,EAAMilG,iBATN,MALgC,MAAxBvsG,KAAKgmG,kBACLhmG,KAAKgmG,gBAAkB,KACvBhmG,KAAK2rG,gBAajB,CACA,SAAAxD,CAAU7gG,GACN,IAAIs+E,EAAK,EAAYt+E,EAAOtH,KAAK8mC,YAC5B9mC,KAAKmpG,cAAcvjB,EAAG,GAAIA,EAAG,GAEtC,EI7xBG,MAAM4mB,GACT,WAAAtvG,GACI8C,KAAKuoG,YAAa,EAClBvoG,KAAK4pG,QAAU,EACnB,CACA,IAAA/Y,GAAS,CACT,QAAA4b,CAASnlG,GAAS,OAAO,CAAO,CAChC,UAAAohG,GAAe,CACf,eAAOgE,CAASplG,EAAO6jG,EAAU7sG,GAC7B,GAAgB,MAAZ6sG,GAAgC,IAAZA,EACpB,OAAO,EACX,IAAIwB,GAAS,EAAOC,GAAQ,EAAOC,GAAO,EAAOC,GAAQ,EAAOC,EAAO5B,EACvE,OACI,GAAI4B,EAAKrsF,WAAW,UAChBisF,GAAS,EACTI,EAAOA,EAAKpsF,UAAU,QAErB,GAAIosF,EAAKrsF,WAAW,SACrBksF,GAAQ,EACRG,EAAOA,EAAKpsF,UAAU,QAErB,GAAIosF,EAAKrsF,WAAW,QACrBmsF,GAAO,EACPE,EAAOA,EAAKpsF,UAAU,OAErB,KAAIosF,EAAKrsF,WAAW,QAKrB,MAJAosF,GAAQ,EACRC,EAAOA,EAAKpsF,UAAU,EAGjB,CAEb,OAAIgsF,GAAUrlG,EAAM0lG,UAEhBJ,GAAStlG,EAAM2lG,SAEfJ,GAAQvlG,EAAM4lG,QAEdJ,GAASxlG,EAAM6lG,UAEf7uG,IACAyuG,EAAOzuG,GACJyuG,EAAKzqD,eAAiBh7C,EAAMhJ,IAAIgkD,cAC3C,GHrCJ,SAAW2vC,GACPA,EAAYA,EAAgB,GAAI,GAAK,KACrCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAgB,GAAI,GAAK,KACrCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAgB,GAAI,GAAK,KACrCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAgB,GAAI,GAAK,KACrCA,EAAYA,EAAiB,IAAI,GAAK,KACzC,CATD,CASGA,KAAgBA,GAAc,CAAC,IAElC,SAAWC,GACPA,EAAcA,EAAmB,KAAK,GAAK,MAC3CA,EAAcA,EAAkB,IAAK,GAAK,KAC1CA,EAAcA,EAAmB,KAAK,GAAK,MAC3CA,EAAcA,EAAkB,GAAI,GAAK,KACzCA,EAAcA,EAAmB,IAAI,GAAK,MAC1CA,EAAcA,EAAkB,GAAI,GAAK,KACzCA,EAAcA,EAAmB,IAAI,GAAK,KAC7C,CARD,CAQGA,KAAkBA,GAAgB,CAAC,IAC/B,MAAMkb,GACT,WAAAlwG,CAAYqvC,GACRvsC,KAAKusC,IAAMA,EACXvsC,KAAKw9C,MAAQ,GACTjR,GACAvsC,KAAKg3E,WACb,CACA,KAAAp7D,GACI,IAAIgsC,EAAM,IAAIwlD,GAAQ,MAItB,OAHAxlD,EAAIrb,IAAMvsC,KAAKusC,IACfqb,EAAIylD,UAAYrtG,KAAKqtG,UACrBzlD,EAAIpK,MAAQx9C,KAAKw9C,MAAMvuC,MAAM,GACtB24C,CACX,CACA,aAAA0lD,GACI,MAAM/gE,EAAMvsC,KAAKusC,IACjB,IAAI+nB,EAAS,GACb,IAAK,IAAIxkD,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAC/BwkD,EAAO93D,KAAK+vC,EAAI2H,UAAUpkC,IAC9B,IAAK,IAAI3C,KAAQnN,KAAKw9C,MAAO,CACzB,IAAIsxC,EAAQ3hF,EAAKogG,MAAQpgG,EAAKqgG,MAC9B,IAAK,IAAI19F,EAAI,EAAGA,GAAK,EAAGA,IAChByT,EAASurE,EAAOh/E,KAChBg/E,EAAQh/E,GAChB,IAAK,IAAIF,KAAKzC,EAAKs8C,MACf6K,EAAO1kD,EAAI,GAAKk/E,CACxB,CACA,OAAOx6B,CACX,CACA,cAAAm5C,GACI,MAAMlhE,EAAMvsC,KAAKusC,IACjB,IAAImhE,EAAU,GACd,IAAK,IAAI59F,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,IAAI0rD,EAAKjvB,EAAI2H,UAAUpkC,GACvB49F,EAAQlxG,KAAW,GAANg/D,EAAU,EACb,GAANA,EAAU,EACA,GAANA,EAAU,EACA,GAANA,EAAU,EAAI,EAC9B,CACA,IAAK,IAAIruD,KAAQnN,KAAKw9C,MAAO,CACzB,IAAIsxC,EAAQ3hF,EAAKogG,MAAQpgG,EAAKqgG,MAC1BG,EAAOpqF,EAASurE,EAAO,GAAK,EAC5BvrE,EAASurE,EAAO,GAAK,EACjBvrE,EAASurE,EAAO,GAAK,EACjBvrE,EAASurE,EAAO,GAAK,EACjBA,EAAQ,EAAI,EACRA,EAAQ,EAAI,EACRA,EAAQ,EAAI,EAAI,EACxC,IAAK,IAAIl/E,KAAKzC,EAAKs8C,MACfikD,EAAQ99F,EAAI,GAAK+9F,CACzB,CACA,OAAOD,CACX,CACA,gBAAAE,GACI,MAAMrhE,EAAMvsC,KAAKusC,IACjB,IAAImhE,EAAU,GACd,IAAK,IAAI59F,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAAK,CACpC,IAAIy0D,EAAMh4B,EAAIqQ,WAAW9sC,GACzB49F,EAAQlxG,KAAY,GAAP+nE,EAAW,GACZ,GAARA,GAAa,EACF,GAAPA,EAAW,EACPA,GAAO,GAAK,EAAI,EAChC,CACA,IAAK,IAAIp3D,KAAQnN,KAAKw9C,MAAO,CACzB,IAAI+mB,EAAM,EACV,IAAK,IAAI5qD,KAAKxM,EAAKwkC,MACf4yB,GAAOh4B,EAAIqQ,WAAWjjC,GAC1B4qD,GAAOp3D,EAAKwkC,MAAM/yC,OAClB,IAAIivG,EAAOtqF,EAASghD,EAAK,GAAK,EAC1BhhD,EAASghD,GAAM,IAAM,EACjBhhD,EAASghD,EAAK,GAAK,EACfA,GAAO,GAAKA,EAAM,GAAK,EACnBA,EAAM,GAAKA,EAAM,EAAI,EACjBA,GAAO,GAAK,EAAI,EACpC,IAAK,IAAI5qD,KAAKxM,EAAKwkC,MACf+7D,EAAQ/zF,EAAI,GAAKk0F,CACzB,CACA,OAAOH,CACX,CACA,mBAAAI,GACI,MAAMvhE,EAAMvsC,KAAKusC,IACjB,IAAIg4B,EAAM,GACV,IAAK,IAAIz0D,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/By0D,EAAIz0D,EAAI,GAAKy8B,EAAIqQ,WAAW9sC,GAChC,IAAK,IAAI3C,KAAQnN,KAAKw9C,MAAO,CACzB,IAAIuwD,EAAQ,EACZ,IAAK,IAAIp0F,KAAKxM,EAAKwkC,MACfo8D,GAASxpC,EAAI5qD,EAAI,GACrB,IAAK,IAAIA,KAAKxM,EAAKwkC,MACf4yB,EAAI5qD,EAAI,GAAKo0F,CACrB,CACA,OAAOxpC,CACX,CACA,QAAA7wD,GACI,IAAI8M,EAAM,YAAc5C,KAAKC,UAAU7d,KAAKqtG,WAAa,WAAartG,KAAKw9C,MAAM5+C,OACjF,IAAK,IAAIuD,KAAKnC,KAAKw9C,MACfh9B,GAAO,KAAOre,EAAEorG,MAAQ,IAAMprG,EAAEqrG,MAAQ,MAAQ5vF,KAAKC,UAAU1b,EAAEwvC,OAAS,MAAQ/zB,KAAKC,UAAU1b,EAAEsnD,OAAS,IAChH,OAAOjpC,CACX,CACA,SAAAw2D,GACI,MAAMzqC,EAAMvsC,KAAKusC,IAAKiQ,EAAKjQ,EAAIC,SAAUiQ,EAAKlQ,EAAIE,SAClD,IAAIuhE,EAAY,EAAIn3F,cAAa,EAAO2lC,GAAKyxD,EAAW,EAAIp3F,cAAa,EAAO2lC,GAAK0xD,EAAc,EAAIr3F,cAAa,EAAO2lC,GACvH2xD,EAAU,EAAIp3F,YAAY,EAAGylC,GACjC,IAAK,IAAI1sC,EAAI,EAAGA,EAAI0sC,EAAI1sC,IACpBq+F,EAAQr+F,GAAKy8B,EAAI6sB,cAActpD,EAAI,GACvC,IAAK,IAAIA,EAAI,EAAGA,GAAK2sC,EAAI3sC,IAAK,CAC1B,IAAI0rD,EAAKjvB,EAAI2H,UAAUpkC,GAAI48B,EAAMH,EAAII,SAAS78B,GAAI88B,EAAML,EAAIM,OAAO/8B,GAKnE,GAJU,GAAN0rD,IACAwyC,EAAUthE,EAAM,IAAK,EACrBshE,EAAUphE,EAAM,IAAK,GAErB4uB,GAAM,EACNyyC,EAASvhE,EAAM,IAAK,EACpBuhE,EAASrhE,EAAM,IAAK,MAEnB,CACD,IAAIwhE,EAAO/5D,GAAUI,eAAelI,EAAIoQ,aAAajQ,IAAO2hE,EAAOh6D,GAAUI,eAAelI,EAAIoQ,aAAa/P,KACzGwhE,GAAQ,GAAKC,GAAQ,KACrBH,EAAYxhE,EAAM,IAAK,EACvBwhE,EAAYthE,EAAM,IAAK,EAE/B,CACAuhE,EAAQzhE,EAAM,IAAM8uB,EACpB2yC,EAAQvhE,EAAM,IAAM4uB,EAChBjvB,EAAIsY,cAAc/0C,GAAG0K,QAAQ0jC,GAAyB4G,eAAiB,IACvEmpD,EAASvhE,EAAM,IAAK,EACpBuhE,EAASrhE,EAAM,IAAK,EAE5B,CACA,IAAI0hE,EAAY,EAAIz3F,cAAa,EAAO2lC,GACxC,IAAK,IAAI1sC,EAAI,EAAGA,GAAK0sC,EAAI1sC,IACrB,IAAKm+F,EAASn+F,EAAI,GAAI,CAClB,IAAIy+F,EAAQ,EACZ,IAAK,IAAI/9D,KAAOjE,EAAI8c,YAAYv5C,IACxBm+F,EAASz9D,EAAM,IAAM09D,EAAY19D,EAAM,KACvC+9D,IACJA,GAAS,IACTD,EAAUx+F,EAAI,IAAK,EAC3B,CACJ,IAAK,IAAIA,EAAI,EAAGA,EAAI0sC,EAAI1sC,IAChBw+F,EAAUx+F,KACVm+F,EAASn+F,IAAK,GACtB9P,KAAKqtG,UAAY,EAAIx2F,cAAa,EAAO2lC,GACzC,IAAIgyD,EAAY,EAAI33F,cAAa,EAAO2lC,GACxC,MAAMiyD,EAAc,CAChBp6D,GAAUS,UACVT,GAAUa,UAAWb,GAAUc,UAAWd,GAAUe,UAAWf,GAAUgB,UAAWhB,GAAUiB,UAC9FjB,GAAUqB,WAAYrB,GAAUsB,WAAYtB,GAAUuB,UAAWvB,GAAUwB,UAAWxB,GAAUyB,WAChGzB,GAAUuC,WAAYvC,GAAUwC,WAAYxC,GAAUyC,WAAYzC,GAAU0C,WAAY1C,GAAU2C,WAClG3C,GAAUyD,WAAYzD,GAAU0D,WAAY1D,GAAU2D,WAAY3D,GAAU4D,WAAY5D,GAAU6D,UAClG7D,GAAUyF,WAAYzF,GAAU0F,WAAY1F,GAAU2F,WAAY3F,GAAU4F,WAAY5F,GAAU6F,YAEhGw0D,EAAQ,CACVr6D,GAAUa,UACVb,GAAUqB,WAAYrB,GAAUsB,WAChCtB,GAAUuC,WAAYvC,GAAUwC,WAChCxC,GAAUyD,WAAYzD,GAAU0D,WAChC1D,GAAUyF,WAAYzF,GAAU0F,YAE9B40D,EAAQ,CACVt6D,GAAUe,UAAWf,GAAUgB,UAAWhB,GAAUiB,UACpDjB,GAAUuB,UAAWvB,GAAUwB,UAAWxB,GAAUyB,WACpDzB,GAAUyC,WAAYzC,GAAU0C,WAAY1C,GAAU2C,WACtD3C,GAAU2D,WAAY3D,GAAU4D,WAAY5D,GAAU6D,UACtD7D,GAAU2F,WAAY3F,GAAU4F,WAAY5F,GAAU6F,YAE1Di1B,EAAM,IAAK,IAAIr/D,EAAI,EAAGA,EAAI0sC,EAAI1sC,IAAK,CAC/B,MAAM6J,EAAI7J,EAAI,EACd,GAAIk+F,EAAUl+F,IAAMm+F,EAASn+F,GACzB,SACJ,GAAyB,GAArBy8B,EAAIqQ,WAAWjjC,IAAkC,GAAvB4yB,EAAIqgB,aAAajzC,GAC3C,SACJ,MAAM+iC,EAAOnQ,EAAIoQ,aAAahjC,GAC9B,GAAY,GAAR+iC,GAIJ,KAAI+xD,EAAYj0F,QAAQkiC,GAAQ,IAE5ByxD,EAAQr+F,IAAMukC,GAAUM,gBAAgB+H,GAA5C,CAEA,GAAIgyD,EAAMl0F,QAAQkiC,IAAS,EACvB,IAAK,IAAIlM,KAAOjE,EAAI8c,YAAY1vC,GAC5B,GAAIg1F,EAAMn0F,QAAQ+xB,EAAIoQ,aAAanM,KAAS,EACxC,SAAS2+B,EAErB,GAAIw/B,EAAMn0F,QAAQkiC,IAAS,EACvB,IAAK,IAAIlM,KAAOjE,EAAI8c,YAAY1vC,GAC5B,GAAI+0F,EAAMl0F,QAAQ+xB,EAAIoQ,aAAanM,KAAS,EACxC,SAAS2+B,EAGrB,GADAq/B,EAAU1+F,IAAK,EACX4sC,GAAQrI,GAAUc,UAAW,CAC7B,IAAIy5D,GAAW,EACf,IAAK,IAAIp+D,KAAOjE,EAAI8c,YAAY1vC,GACxB80F,EAAYj0F,QAAQ+xB,EAAIoQ,aAAanM,IAAQ,IAC7Co+D,GAAW,GACdA,IACD5uG,KAAKqtG,UAAUv9F,IAAK,EAC5B,MACS4sC,GAAQrI,GAAUS,YACvB90C,KAAKqtG,UAAUv9F,IAAK,EArBZ,OANR9P,KAAKqtG,UAAUv9F,IAAK,CA6B5B,CACAq/D,EAAM,IAAK,IAAIr/D,EAAI,EAAGA,EAAI0sC,EAAI1sC,IAC1B,GAAI0+F,EAAU1+F,KAAO9P,KAAKqtG,UAAUv9F,GAAI,CACpC,IAAK,IAAI6J,KAAK4yB,EAAI8c,YAAYv5C,EAAI,GAC9B,IAAK0+F,EAAU70F,EAAI,GACf,SAASw1D,EACjBnvE,KAAKqtG,UAAUv9F,IAAK,CACxB,CACJ,IAAIyP,EAAIusB,GAAMQ,aAAaC,GAC3B,IAAK,IAAIz8B,EAAI,EAAGA,EAAI0sC,EAAI1sC,IAChB9P,KAAKqtG,UAAUv9F,IACfyP,EAAE0uB,YAAYn+B,GACtB,IAAK,IAAIg/B,KAAMvvB,EAAEyvB,2BAA4B,CACzC,GAAiB,GAAbF,EAAGlwC,OACH,SACJ,IAAIiwG,EAAQ,EAAIp2F,QAAQq2B,EAAI0N,GAC5B,EAAIrjC,MAAM21B,EAAI,GACd,IAAI3sC,EAAI,CACJwvC,MAAO7C,EACP2a,MAAO,GACP8jD,MAAO,EACPC,MAAO,GAEX,IAAK,IAAI19F,EAAI,EAAGA,GAAK2sC,EAAI3sC,IACjB++F,EAAMtiE,EAAII,SAAS78B,GAAK,IAAM++F,EAAMtiE,EAAIM,OAAO/8B,GAAK,IACpD3N,EAAEsnD,MAAMjtD,KAAKsT,GACrB,IAAIg/F,EAAY,EAAGC,EAAY,EAC/B,IAAK,IAAIp1F,KAAKxX,EAAEwvC,MAAO,CACnB,IAAIq9D,EAASziE,EAAI6sB,cAAcz/C,GAC/B,IAAK,IAAI/X,KAAK2qC,EAAI8c,YAAY1vC,GACrBk1F,EAAMjtG,EAAI,IACXotG,IACR,IAAItyD,EAAOnQ,EAAIoQ,aAAahjC,GAG5Bm1F,GAFWz6D,GAAUK,gBAAgBgI,GAAQnQ,EAAIqQ,WAAWjjC,GAAKq1F,EAGjED,GAFW16D,GAAUO,cAAc8H,GAAQrI,GAAUK,gBAAgBgI,GAAQsyD,CAGjF,CACA,IAAIC,EAAYt4F,KAAKW,IAAIw3F,EAAWC,GACpC5sG,EAAEorG,MAAQ0B,EACV9sG,EAAEqrG,MAAQ,EAAIrrG,EAAEsnD,MAAM7qD,OACtBoB,KAAKw9C,MAAMhhD,KAAK2F,EACpB,CACJ,EI1QJ,MAAM+sG,GACF,WAAAhyG,CAAYqH,GACRvE,KAAKuE,KAAOA,EACZvE,KAAKusC,IAAMhoC,EAAKgoC,IAChBvsC,KAAK0mF,SAAW,EAAI3vE,YAAY,EAAG/W,KAAKusC,IAAIC,UAC5CxsC,KAAKmvG,YAAc,EAAIp4F,YAAYm4F,GAAgBE,YAAapvG,KAAKusC,IAAIC,UACzExsC,KAAKqvG,aAAe,EAAIt4F,YAAYm4F,GAAgBE,YAAapvG,KAAKusC,IAAIE,UAC1EzsC,KAAKsvG,aAAe,EAAIv4F,YAAYm4F,GAAgBE,YAAapvG,KAAKusC,IAAIC,SAC9E,CACA,SAAAwqC,GACIh3E,KAAKuvG,IAAM,EAAI14F,cAAa,EAAO7W,KAAKusC,IAAIC,UAC5C,IAAK,IAAI18B,EAAI9P,KAAKusC,IAAIC,SAAU18B,GAAK,EAAGA,IACpC9P,KAAKuvG,IAAIz/F,EAAI,GAAgC,KAA3B9P,KAAKusC,IAAI2Q,YAAYptC,GAC3C9P,KAAKwvG,gBACLxvG,KAAKyvG,sBACLzvG,KAAK0vG,oBACL1vG,KAAK2vG,sBACL3vG,KAAK4vG,oBACT,CACA,YAAAC,CAAan9D,GAAQ,OAAO1yC,KAAK0mF,SAASh0C,EAAO,EAAI,CACrD,kBAAAo9D,CAAmBp9D,GAAQ,OAAO1yC,KAAKmvG,YAAYz8D,EAAO,EAAI,CAC9D,cAAAq9D,CAAejmD,GAAQ,OAAO9pD,KAAKqvG,aAAavlD,EAAO,EAAI,CAC3D,gBAAAkmD,CAAiBt9D,GAAQ,OAAO1yC,KAAKsvG,aAAa58D,EAAO,EAAI,CAC7D,aAAAu9D,GAAkB,OAAOjwG,KAAK0mF,SAASz3E,MAAM,EAAI,CACjD,kBAAAihG,GAAuB,OAAOlwG,KAAKmvG,YAAYlgG,MAAM,EAAI,CACzD,iBAAAkhG,GAAsB,OAAOnwG,KAAKqvG,aAAapgG,MAAM,EAAI,CACzD,aAAOtN,CAAO4C,GACV,IAAIigE,EAAS,IAAI0qC,GAAgB3qG,GAEjC,OADAigE,EAAOwS,YACAxS,CACX,CACA,wBAAO4rC,CAAkB7jE,EAAKmG,GAC1B,GAAInG,EAAIsQ,aAAanK,GAAQ,GAAKnG,EAAIsQ,aAAanK,GAAQnG,EAAI6sB,cAAc1mB,IAAS,EAClF,OAAO,KACX,IAAI6gC,EAAWhnC,EAAIwlB,aAAarf,GAC5BgwB,GAAW,EACf,IAAK,IAAI5yD,EAAI,EAAGA,EAAIyjE,EAAS30E,OAAQkR,IAAK,CACtC,IAAI0oD,EAAKjsB,EAAIupB,SAASyd,EAASzjE,IAC/B,GAAI0oD,GAAMxb,GAAS2lB,iBACf,OAAO,KACPp2B,EAAII,SAAS4mC,EAASzjE,KAAO4iC,IAE7B8lB,GAAMxb,GAAS6Z,mBAAqB2B,GAAMxb,GAAS8Z,oBACnD4L,GAAW,GACnB,CACA,IAAKA,IAAan2B,EAAI4uB,OAClB,OAAO,KACX,IAAI3qB,EAAMjE,EAAI8c,YAAY3W,GACtBlwB,EAAI,CAAC,EAAG,EAAG,EAAG,GACdE,EAAI,CAAC,EAAG,EAAG,EAAG,GACd4hD,EAAI,CAAC,EAAG,EAAG,EAAG,GACd+rC,EAAW,EAAGC,EAAY,EAC9B,IAAK,IAAIxgG,EAAI,EAAGA,EAAIyjE,EAAS30E,OAAQkR,IAAK,CACtC,MAAM48B,EAAMH,EAAII,SAAS4mC,EAASzjE,IAAK0oD,EAAKjsB,EAAIupB,SAASyd,EAASzjE,IAiBlE,GAhBA0S,EAAE1S,GAAKy8B,EAAI6e,MAAM5a,EAAI1gC,IAAMy8B,EAAI6e,MAAM1Y,GACrChwB,EAAE5S,GAAKy8B,EAAI8e,MAAM7a,EAAI1gC,IAAMy8B,EAAI8e,MAAM3Y,GACjCnG,EAAI4uB,OACJmJ,EAAEx0D,GAAKy8B,EAAI6uB,MAAM5qB,EAAI1gC,IAAMy8B,EAAI6uB,MAAM1oB,GAEhChG,GAAOgG,IACR8lB,GAAMxb,GAAS6Z,mBACfyN,EAAEx0D,GAAK,EACPwgG,KAEK93C,GAAMxb,GAAS8Z,oBACpBwN,EAAEx0D,IAAM,EACRwgG,MvCgFKttF,EuC7EMR,EAAE1S,GvC6EJmT,EuC7EQP,EAAE5S,GvC6ENqT,EuC7EUmhD,EAAEx0D,GvC8ElC6G,KAAK0H,MAAM2E,EAAIC,EAAIE,GuC7ER,OACNktF,IACIA,EAAW,GACX,OAAO,IAEnB,CvCuED,IAAkBrtF,EAAIC,EAAIE,EuCtEzB,GAAuB,GAAnBowD,EAAS30E,OAET,GADA4xC,EAAIh0C,KAAK,GACJ+vC,EAAI4uB,QAAuB,GAAbm1C,EAcd,CACD9tF,EAAE,KAAOA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACzBE,EAAE,KAAOA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACzB4hD,EAAE,KAAOA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACzB,IAAIlyC,EAAMlP,EAAUV,EAAE,GAAIE,EAAE,GAAI4hD,EAAE,IAClC,GAAIlyC,EAAM,KACN,OAAO,KACX,IAAIC,EAAM,EAAM1b,KAAK2I,KAAK8S,GAC1B5P,EAAE,IAAM6P,EACR3P,EAAE,IAAM2P,EACRiyC,EAAE,IAAMjyC,CACZ,KAzBmC,CAC/B,IAAIk+E,EAAM55F,KAAKue,MAAMxS,EAAE,GAAIF,EAAE,IAAKyB,EAAMtN,KAAKue,MAAMxS,EAAE,GAAIF,EAAE,IAAK0B,EAAMvN,KAAKue,MAAMxS,EAAE,GAAIF,EAAE,IACrFkG,EAAK,EAAGC,EAAK,EACb,EAAa1E,EAAKssF,GAAO,EAAarsF,EAAKqsF,KAC3C5nF,EAAK,EACLD,EAAK,GAETlG,EAAE,GAAK,IACPE,EAAE,GAAK,EACPF,EAAE,IAAM,IACRE,EAAEgG,GAAM,IACRlG,EAAE,IAAM,IACRE,EAAEiG,IAAO,GACb,CAcJ,IAAI6nF,EAAM,EAAGC,EAAM,EACnB,IAAK,IAAI1mG,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAI4P,EAAI,EAAG/J,EAAI,EACN,GAAL7F,GACA4P,EAAI,EACJ/J,EAAI,GAEM,GAAL7F,GACL4P,EAAI,EACJ/J,EAAI,GAEM,GAAL7F,GACL4P,EAAI,EACJ/J,EAAI,GAEM,GAAL7F,GACL4P,EAAI,EACJ/J,EAAI,GAEM,GAAL7F,GACL4P,EAAI,EACJ/J,EAAI,GAEM,GAAL7F,IACL4P,EAAI,EACJ/J,EAAI,GAER,IAAI+/E,EAAKjtE,EAAE/I,GAAK2qD,EAAE10D,GAAK8S,EAAE9S,GAAK00D,EAAE3qD,GAAK6I,EAAE,GACnCotE,EAAKtrB,EAAE3qD,GAAK6I,EAAE5S,GAAK00D,EAAE10D,GAAK4S,EAAE7I,GAAK+I,EAAE,GACnCguF,EAAKluF,EAAE7I,GAAK+I,EAAE9S,GAAK4S,EAAE5S,GAAK8S,EAAE/I,GAAK2qD,EAAE,GACnCv6D,GAAK,EACLymG,GAAO7gB,EAAKA,EAAKC,EAAKA,EAAK8gB,EAAKA,EAEhCD,GAAO9gB,EAAKA,EAAKC,EAAKA,EAAK8gB,EAAKA,CACxC,CAGA,OAFID,EAAMD,GACN,EAAIr7F,KAAKq7B,EAAK,EAAG,GACdA,CACX,CACA,yBAAOmgE,CAAmBpkE,EAAKmG,GAC3B,GAA8B,GAA1BnG,EAAIsQ,aAAanK,GACjB,OAAO,KACX,IAAKnG,EAAI4uB,OAAQ,CACb,IAAIy1C,EAAO,EAAGC,EAAO,EACrB,IAAK,IAAIjhG,KAAK28B,EAAIwlB,aAAarf,GAAO,CAClC,IAAI8lB,EAAKjsB,EAAIupB,SAASlmD,GAClB4oD,GAAMxb,GAAS6Z,kBACf+5C,IACKp4C,GAAMxb,GAAS8Z,mBACpB+5C,GACR,CACA,GAAY,GAARD,GAAqB,GAARC,QACZ,GAAY,GAARD,GAAqB,GAARC,QACjB,GAAY,GAARD,GAAqB,GAARC,EAElB,OAAO,IACf,CACA,IAAIrgE,EAAMjE,EAAI8c,YAAY3W,GACtBo+D,EAAK7kD,GAAQiP,SAAS3uB,EAAKmG,GAC3B94B,EAAK,EAAIb,IAAIkzC,GAAQiP,SAAS3uB,EAAKiE,EAAI,IAAKsgE,GAC5Cj3F,EAAK,EAAId,IAAIkzC,GAAQiP,SAAS3uB,EAAKiE,EAAI,IAAKsgE,GAC5CC,EAAK,EAAIh4F,IAAIkzC,GAAQiP,SAAS3uB,EAAKiE,EAAI,IAAKsgE,GAC5CE,EAAK,EAAIj4F,IAAIkzC,GAAQiP,SAAS3uB,EAAKiE,EAAI,IAAKsgE,GAChD,IAAK,IAAIn8F,IAAK,CAACiF,EAAIC,EAAIk3F,EAAIC,GAAK,CAC5B,IAAI5+E,EAAMlP,EAAUvO,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAClC,GAAIyd,EAAM,KACN,SACJ,IAAIC,EAAM,EAAM1b,KAAK2I,KAAK8S,GAC1Bzd,EAAE,IAAM0d,EACR1d,EAAE,IAAM0d,EACR1d,EAAE,IAAM0d,CACZ,CACA,IAAI0zD,EAAK/3D,EAASiE,MAAMrY,EAAIC,GAAKo3F,EAAKjjF,EAASiE,MAAMrY,EAAIm3F,GAAKG,EAAKljF,EAASiE,MAAMrY,EAAIo3F,GAClFjrB,EAAKkrB,GAAMlrB,GAAMmrB,GACjB,EAAI/7F,KAAKq7B,EAAK,EAAG,IAChB32B,EAAIk3F,GAAM,CAACA,EAAIl3F,IAEXq3F,EAAKD,IACV,EAAI97F,KAAKq7B,EAAK,EAAG,IAChBugE,EAAIC,GAAM,CAACA,EAAID,IAEpB,MAAMI,GAAa5kE,EAAI4uB,OAAS,GAAK,IAAMv3C,EACrCwtF,GAAa7kE,EAAI4uB,OAAS,IAAM,KAAOv3C,EACvCytF,EAAOrjF,EAASuE,WAAW3Y,EAAIC,GACrC,GAAIw3F,EAAOF,GAAaE,EAAOD,EAC3B,OAAO,KACX,MAAME,EAAOtjF,EAASuE,WAAW1Y,EAAIk3F,GACrC,GAAIO,EAAOH,GAAaG,EAAOF,EAC3B,OAAO,KACX,MAAMG,EAAOvjF,EAASuE,WAAWw+E,EAAIC,GACrC,GAAIO,EAAOJ,GAAaI,EAAOH,EAC3B,OAAO,KACX,MAAMI,EAAOxjF,EAASuE,WAAWy+E,EAAIp3F,GACrC,OAAI43F,EAAOL,GAAaK,EAAOJ,EACpB,KACJ5gE,CACX,CACA,wBAAOihE,CAAkBllE,EAAKmG,GAC1B,MAAMsjB,EAAOzpB,EAAIsQ,aAAanK,GAC9B,GAAY,GAARsjB,GAAqB,GAARA,EACb,OAAO,KACX,IAAI07C,EAAQ,EAAGC,EAAQ,EACnBnhE,EAAMjE,EAAI8c,YAAY3W,GAAO+W,EAAQld,EAAIwlB,aAAarf,GAC1D,IAAKnG,EAAI4uB,OAAQ,CACb,IAAK,IAAIrrD,EAAI,EAAGA,EAAI0gC,EAAI5xC,OAAQkR,IAC5B,GAAIy8B,EAAIupB,SAASrM,EAAM35C,KAAOktC,GAAS6Z,kBAAmB,CACtD,GAAI66C,EAAQ,EACR,OAAO,KACXA,EAAQlhE,EAAI1gC,EAChB,MACK,GAAIy8B,EAAIupB,SAASrM,EAAM35C,KAAOktC,GAAS8Z,kBAAmB,CAC3D,GAAI66C,EAAQ,EACR,OAAO,KACXA,EAAQnhE,EAAI1gC,EAChB,CAEJ,GAAa,GAAT4hG,GAAuB,GAATC,EACd,OAAO,KACX,IAAI1tF,EAAMtN,KAAKue,MAAMqX,EAAI8e,MAAMqmD,GAASnlE,EAAI8e,MAAM3Y,GAAOnG,EAAI6e,MAAMsmD,GAASnlE,EAAI6e,MAAM1Y,IAClFxuB,EAAMvN,KAAKue,MAAMqX,EAAI8e,MAAMsmD,GAASplE,EAAI8e,MAAM3Y,GAAOnG,EAAI6e,MAAMumD,GAASplE,EAAI6e,MAAM1Y,IACtF,GAAI/7B,KAAKuF,IAAI8H,EAAUC,EAAKC,IAAQ,IAAMN,EACtC,OAAO,IACf,CACA,IAAIktF,EAAK7kD,GAAQiP,SAAS3uB,EAAKmG,GAC3B/9B,EAAI,CAAC,GAAI,GAAI,GAAI,GAAI,IAEzB,IAAK,IAAI7E,EAAI,EAAGA,EAAIkmD,EAAMlmD,IAAK,CAC3B6E,EAAE7E,GAAK,EAAIiJ,IAAIkzC,GAAQiP,SAAS3uB,EAAKiE,EAAI1gC,IAAKghG,GAC9C,MAAMr5E,EAAMzJ,EAASgE,UAAUrd,EAAE7E,IACjC,GAAI2nB,EAJO,GAKP,OAAO,KACX,EAAIre,MAAMzE,EAAE7E,GAAI,EAAM2nB,GAClB+Y,EAAI1gC,IAAM4hG,EACV/8F,EAAE7E,GAAG,IAAM,EACN0gC,EAAI1gC,IAAM6hG,IACfh9F,EAAE7E,GAAG,IAAM,EACnB,CACA,IAAI8hG,EAAQ,EAAGC,EAAQ,EACvB,MAAMC,EAAiB,IAAMluF,EAC7B,IAAK,IAAI7Z,EAAI,EAAGA,EAAIisD,EAAO,EAAGjsD,IAC1B,GAAIymC,EAAIzmC,IAAM2nG,GAASlhE,EAAIzmC,IAAM4nG,EAC7B,IAAK,IAAIt7F,EAAItM,EAAI,EAAGsM,EAAI2/C,EAAM3/C,IAC1B,GAAIm6B,EAAIn6B,IAAMq7F,GAASlhE,EAAIn6B,IAAMs7F,GACjB3jF,EAASuE,WAAW5d,EAAE5K,GAAI4K,EAAE0B,IAC5By7F,EAAgB,CACxB,GAAa,GAATF,EACA,OAAO,KACXA,EAAQphE,EAAIzmC,GACZ8nG,EAAQrhE,EAAIn6B,EAChB,CAGhB,GAAIk2B,EAAI4uB,OACJ,IAAK,IAAIxhD,KAAK62B,EACN72B,GAAKi4F,GAASj4F,GAAKk4F,IACN,GAATH,EACAA,EAAQ/3F,EACM,GAATg4F,IACLA,EAAQh4F,IAGxB,IAAKi4F,IAAUC,EACX,OAAO,KACX,IAAIj4F,EAAK,KACLC,EAAKlF,EAAE67B,EAAIh2B,QAAQk3F,IACnBX,EAAKp8F,EAAE67B,EAAIh2B,QAAQm3F,IACnBX,EAAKr8F,EAAE67B,EAAIh2B,QAAQo3F,IACnBG,EAAKp9F,EAAE67B,EAAIh2B,QAAQq3F,IACnBG,EAAQ,EACZ,GAAY,GAARh8C,GACA,IAAK,IAAIlmD,EAAI,EAAGA,EAAIkmD,EAAMlmD,IACtB,GAAI0gC,EAAI1gC,IAAM4hG,GAASlhE,EAAI1gC,IAAM6hG,GAASnhE,EAAI1gC,IAAM8hG,GAASphE,EAAI1gC,IAAM+hG,EAAO,CAC1EG,EAAQxhE,EAAI1gC,GACZ8J,EAAKjF,EAAE7E,GACP,KACJ,MAEH,CACD8J,EAAK,CAAC,EAAG,EAAG,GACZA,EAAK,EAAIb,IAAIa,EAAIC,GACjBD,EAAK,EAAIb,IAAIa,EAAIm3F,GACjB,MAAMt5E,EAAMzJ,EAASgE,UAAUpY,GAC/B,GAAI6d,EAzDO,GA0DP,OAAO,KACX,EAAIre,MAAMQ,EAAI,EAAM6d,EACxB,CACA,IAAIw6E,EAAM,EAAIl5F,IAAIg5F,EAAIf,GAClBkB,EAAQlkF,EAAS6C,aAAaohF,EAAKr4F,GAEvC,OADWoU,EAASiE,MAAMigF,EAAOr4F,GAAYmU,EAASiE,MAAMigF,EAAOnB,GAExD,CAACiB,EAAON,EAAOC,EAAOC,EAAOC,GAE7B,CAACG,EAAON,EAAOC,EAAOE,EAAOD,EAC5C,CACA,uBAAOO,CAAiB5lE,EAAKmG,GACzB,MAAMsjB,EAAOzpB,EAAIsQ,aAAanK,GAC9B,GAAY,GAARsjB,GAAqB,GAARA,EACb,OAAO,KACX,IAAIxlB,EAAMjE,EAAI8c,YAAY3W,GAAO+W,EAAQld,EAAIwlB,aAAarf,GAK1D,GAJY,GAARsjB,IACAxlB,EAAIh0C,KAAK,GACTitD,EAAMjtD,KAAK,KAEV+vC,EAAI4uB,OAAQ,CACb,IAAIm1C,EAAY,EAChB,IAAK,IAAI1gG,KAAK65C,EACV,GAAI75C,EAAI,EAAG,CACP,MAAM4oD,EAAKjsB,EAAIupB,SAASlmD,GACpB4oD,GAAMxb,GAAS6Z,mBAAqB2B,GAAMxb,GAAS8Z,mBACnDw5C,GACR,CACJ,GAAa,GAARt6C,GAAas6C,EAAY,GAAe,GAARt6C,GAAas6C,EAAY,EAC1D,OAAO,IACf,CAEA,IAAIQ,EAAK7kD,GAAQiP,SAAS3uB,EAAKmG,GAC3B/9B,EAAI,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,IAAK,IAAI7E,EAAI,EAAGA,EAAIkmD,EAAMlmD,IAAK,CAC3B6E,EAAE7E,GAAKm8C,GAAQiP,SAAS3uB,EAAKiE,EAAI1gC,IACjC,EAAIwJ,aAAa3E,EAAE7E,GAAIghG,GACvB,IAAIr5E,EAAMzJ,EAASgE,UAAUrd,EAAE7E,IAC/B,GAAI2nB,EAPO,GAQP,OAAO,KACX,EAAIre,MAAMzE,EAAE7E,GAAI,EAAI2nB,GACpB,IAAI+gC,EAAKjsB,EAAIupB,SAASrM,EAAM35C,IACxB0oD,GAAMxb,GAAS6Z,kBACXtqB,EAAII,SAAS8c,EAAM35C,KAAO4iC,EAC1B/9B,EAAE7E,GAAG,IAAM,EAEX6E,EAAE7E,GAAG,IAAM,EAEV0oD,GAAMxb,GAAS8Z,oBAChBvqB,EAAII,SAAS8c,EAAM35C,KAAO4iC,EAC1B/9B,EAAE7E,GAAG,IAAM,EAEX6E,EAAE7E,GAAG,IAAM,EAEvB,CACA,GAAY,GAARkmD,EAAW,CACXrhD,EAAE,GAAK,CAAC,EAAG,EAAG,GACd,IAAK,IAAI7E,EAAI,EAAGA,EAAI,EAAGA,IACnB,EAAIwJ,aAAa3E,EAAE,GAAIA,EAAE7E,IAC7B,IAAI2nB,EAAMzJ,EAASgE,UAAUrd,EAAE,IAC/B,GAAI8iB,EA7BO,GA8BP,OAAO,KACX,EAAIre,MAAMzE,EAAE,GAAI,EAAI8iB,EACxB,CACA,IAAIw0E,EAAQ,EAAE,GAAI,GAAI,GAAI,EAAG,EAAG,GAC5BmG,EAAepkF,EAASuE,WAAW5d,EAAE,GAAIA,EAAE,IAC/C,IAAK,IAAI5K,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIsM,EAAU,GAALtM,EAAS,EAAIA,EAAI,EAAIsM,EAAI,EAAGA,IAAK,CAC3C,IAAI8N,EAAQ6J,EAASuE,WAAW5d,EAAE5K,GAAI4K,EAAE0B,IACpC8N,EAAQiuF,IACRnG,EAAM,GAAKliG,EACXkiG,EAAM,GAAK51F,EACX+7F,EAAejuF,EAEvB,CACJ,IAAIkuF,EAAQ,EAAIt5F,IAAIpE,EAAEs3F,EAAM,IAAKt3F,EAAEs3F,EAAM,KACrCqG,EAAiB/0G,OAAO4sB,kBAC5B,IAAK,IAAIra,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIA,GAAKm8F,EAAM,IAAMn8F,GAAKm8F,EAAM,GAAI,CAChC,IAAIt7E,EAAQha,KAAKuF,IAAK,GAAK0H,EAAUoK,EAASuE,WAAW5d,EAAE7E,GAAIuiG,IAC3D1hF,EAAQ2hF,IACRrG,EAAM,GAAKn8F,EACXwiG,EAAiB3hF,EAEzB,CACJ,IAAK,IAAI5lB,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAImnG,EAAQlkF,EAAS6C,aAAawhF,EAAO19F,EAAEs3F,EAAMlhG,EAAI,KACjDwnG,EAAah1G,OAAO4sB,kBACxB,IAAK,IAAIra,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,GAAIA,GAAKm8F,EAAM,IAAMn8F,GAAKm8F,EAAM,IAAMn8F,GAAKm8F,EAAM,IAAMn8F,GAAKm8F,EAAM,GAC9D,SACJ,IAAIt7E,EAAQ3C,EAASuE,WAAW5d,EAAE7E,GAAIoiG,GAClCvhF,EAAQ4hF,IACRtG,EAAMlhG,GAAK+E,EACXyiG,EAAa5hF,EAErB,CACJ,CACA,IAAK,IAAI7gB,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIm8F,EAAMzxF,QAAQ1K,GAAK,EAAG,CACtBm8F,EAAM,GAAKn8F,EACX,KACJ,CACJ,IAAI0iG,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7B,IAAK,IAAI1iG,EAAI,EAAGA,EAAI,EAAGA,IACnB0iG,EAAO1iG,GAAKm8F,EAAMn8F,GAAK,EAAI,EAAI0gC,EAAIy7D,EAAMn8F,IAC7C,OAAO0iG,CACX,CACA,sBAAOC,CAAgBlmE,EAAKud,GACxB,MAAMpd,EAAMH,EAAII,SAASmd,GAAOld,EAAML,EAAIM,OAAOid,GAC3C68B,EAAMp6C,EAAIsQ,aAAanQ,GAAMk6C,EAAMr6C,EAAIsQ,aAAajQ,GAC1D,GAAI+5C,EAAM,GAAKA,EAAM,GAAKC,EAAM,GAAKA,EAAM,EACvC,OAAO,KACX,IAAI8rB,EAAOnmE,EAAI8c,YAAY3c,GAAMimE,EAAOpmE,EAAI8c,YAAYzc,GACpDgmE,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EACjC,IAAK,IAAIhpG,EAAI,EAAGA,EAAI2oG,EAAK9zG,OAAQmL,IACzB2oG,EAAK3oG,IAAM6iC,IACD,GAANgmE,EACAA,EAAKF,EAAK3oG,GAEV8oG,EAAKH,EAAK3oG,IAGtB,IAAK,IAAIA,EAAI,EAAGA,EAAI4oG,EAAK/zG,OAAQmL,IACzB4oG,EAAK5oG,IAAM2iC,IACD,GAANomE,EACAA,EAAKH,EAAK5oG,GAEVgpG,EAAKJ,EAAK5oG,IAGtB,GAAI6oG,EAAK,GAAKC,EAAK,GAA4B,KAAvBtmE,EAAI2Q,YAAY01D,GAAY,CAChD,IAAI/iG,EAAI+iG,EACRA,EAAKC,EACLA,EAAKhjG,CACT,CACA,GAAIijG,EAAK,GAAKC,EAAK,GAA4B,KAAvBxmE,EAAI2Q,YAAY41D,GAAY,CAChD,IAAI9iG,EAAI8iG,EACRA,EAAKC,EACLA,EAAK/iG,CACT,CACA,IAAIgjG,EAAM/mD,GAAQiP,SAAS3uB,EAAKG,GAAMumE,EAAMhnD,GAAQiP,SAAS3uB,EAAKK,GAC9DsmE,EAAQ,EAAIn6F,IAAIk6F,EAAKD,GACrBG,EAAM,EAAIp6F,IAAIkzC,GAAQiP,SAAS3uB,EAAKqmE,GAAKI,GAAMI,EAAM,EAAIr6F,IAAIkzC,GAAQiP,SAAS3uB,EAAKumE,GAAKG,GAC5F,MAAMI,EAAW,GAAM,GACvB,IAAIC,EAAMtlF,EAAS6C,aAAasiF,EAAKD,GACrC,GAAIllF,EAAS+D,WAAWuhF,GAAOD,EAC3B,OAAO,KACX,IAAIE,EAAMvlF,EAAS6C,aAAauiF,EAAKF,GACrC,GAAIllF,EAAS+D,WAAWwhF,GAAOF,EAC3B,OAAO,KACX,IAAIG,EAAO,EAAIv6F,IAAIq6F,GACfG,EAAWzlF,EAASiE,MAAMqhF,EAAKC,GAAOvlF,EAASiE,MAAMuhF,EAAMD,GAC3DG,EAAWD,EAAUE,EAAWF,EAAUG,EAAWH,EACrDI,EAAM,KAAMC,EAAM,KAAMC,EAAM,KAAMC,EAAM,KAAMC,EAAO,KAC3D,GAAIpB,EAAK,EAEL,GADAgB,EAAM,EAAI96F,IAAIkzC,GAAQiP,SAAS3uB,EAAKsmE,GAAKG,GACrChlF,EAAS+D,WAAW8hF,GAAOR,GAC3B,GAA2B,KAAvB9mE,EAAI2Q,YAAY21D,GAChB,OAAO,SAEV,CAED,GADAkB,EAAM/lF,EAAS6C,aAAagjF,EAAKX,GAC7BllF,EAAS+D,WAAWgiF,GAAOV,EAC3B,OAAO,KACXY,EAAO,EAAIh7F,IAAI86F,GACfL,EAAW1lF,EAASiE,MAAM8hF,EAAKR,GAAOvlF,EAASiE,MAAMgiF,EAAMV,EAC/D,CAEJ,GAAIR,EAAK,EAEL,GADAe,EAAM,EAAI/6F,IAAIkzC,GAAQiP,SAAS3uB,EAAKwmE,GAAKE,GACrCjlF,EAAS+D,WAAW+hF,GAAOT,GAC3B,GAA2B,KAAvB9mE,EAAI2Q,YAAY61D,GAChB,OAAO,SAEV,CAED,GADAiB,EAAMhmF,EAAS6C,aAAaijF,EAAKZ,GAC7BllF,EAAS+D,WAAWiiF,GAAOX,EAC3B,OAAO,KACXM,EAAW3lF,EAASiE,MAAMqhF,EAAKU,GAAOhmF,EAASiE,MAAMuhF,EAAMQ,EAC/D,CAKJ,OAHW,MAAPD,GAAsB,MAAPC,IACfJ,EAAW5lF,EAASiE,MAAM8hF,EAAKC,GAAOhmF,EAASiE,MAAMgiF,EAAMD,IAE3DP,GAAYC,GAAYC,GAAYC,EAC7B,CAAChB,EAAIC,EAAIC,EAAIC,GACnBU,GAAaC,GAAaC,GAAaC,EAErC,KADI,CAAChB,EAAIC,EAAIE,EAAID,EAE5B,CACA,mBAAArD,GACI,MAAMljE,EAAMvsC,KAAKusC,IAAKiQ,EAAKjQ,EAAIC,SAAUiQ,EAAKlQ,EAAIE,SAClD,IAAIynE,EAAW,EAAIr9F,cAAa,EAAO2lC,GACvC,IAAK,IAAI1sC,EAAI,EAAGA,GAAK2sC,EAAI3sC,IACjBy8B,EAAIupB,SAAShmD,IAAMktC,GAAS6Z,mBAAqBtqB,EAAIupB,SAAShmD,IAAMktC,GAAS8Z,oBAC7Eo9C,EAAS3nE,EAAII,SAAS78B,GAAK,IAAK,GAExCqkG,EAAW,IAAK,IAAIrkG,EAAI,EAAGA,GAAK0sC,EAAI1sC,IAAK,CACrC9P,KAAKmvG,YAAYr/F,EAAI,GAAKo/F,GAAgBE,YAC1C,IAAI5+D,EAAMjE,EAAI8c,YAAYv5C,GAC1B,GAAoB,GAAd0gC,EAAI5xC,SAA8B,GAAd4xC,EAAI5xC,QAAuC,GAAxB2tC,EAAI6sB,cAActpD,IAC3D,SACJ,GAAkB,GAAd0gC,EAAI5xC,SAAgBoB,KAAKuvG,IAAI/+D,EAAI,GAAK,IAAMxwC,KAAKuvG,IAAI/+D,EAAI,GAAK,IAAMxwC,KAAKuvG,IAAI/+D,EAAI,GAAK,IACtF,SACJ,IAAK,IAAIzmC,EAAI,EAAGA,EAAIymC,EAAI5xC,OAAS,EAAGmL,IAChC,IAAK,IAAIsM,EAAItM,EAAI,EAAGsM,EAAIm6B,EAAI5xC,OAAQyX,IAChC,GAAIrW,KAAK0mF,SAASl2C,EAAIzmC,GAAK,IAAM/J,KAAK0mF,SAASl2C,EAAIn6B,GAAK,GACpD,SAAS89F,EAGrB,IAAKD,EAASpkG,EAAI,KAAOy8B,EAAI4uB,OAAQ,CACjCn7D,KAAKmvG,YAAYr/F,EAAI,GAAKo/F,GAAgBkF,eAC1C,QACJ,CACA,IAAI5B,EAAStD,GAAgBkB,kBAAkB7jE,EAAKz8B,GACpD,GAAc,MAAV0iG,EACA,SACJ,IAAI5jD,EAAM,CACO,GAAb4jD,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,GAClC,GAAbA,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,GAClC,GAAbA,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,GAClC,GAAbA,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,IAEnD5jD,EAAM,EAAIn1C,QAAQm1C,GAClB,IAAIylD,EAAS55F,EAAYE,eAAei0C,GACxC5uD,KAAKmvG,YAAYr/F,EAAI,GAAe,EAATukG,EAAgDnF,GAAgBoF,WAA7CpF,GAAgBqF,UAClE,CACJ,CACA,iBAAA7E,GACI,MAAMnjE,EAAMvsC,KAAKusC,IAAwBkQ,GAAdlQ,EAAIC,SAAeD,EAAIE,UAClD,IACI+nE,EAAW,EAAI39F,cAAa,EAAO4lC,GACvC,IAAK,IAAI+W,EAAM,EAAGA,GAAO,EAAGA,IACxB,IAAK,IAAIzjD,KAAKw8B,EAAImD,gBAAgB8jB,GAC9B,IAAK,IAAI1jD,EAAI,EAAGA,EAAIC,EAAEnR,OAAQkR,IAE1B0kG,EADQjoE,EAAI4H,SAASpkC,EAAED,GAAIC,EAAED,EAAIC,EAAEnR,OAAS,EAAIkR,EAAI,EAAI,IAC3C,IAAK,EAI9B2kG,EAAW,IAAK,IAAI3kG,EAAI,EAAGA,GAAK2sC,EAAI3sC,IAAK,CAErC,GADA9P,KAAKqvG,aAAav/F,EAAI,GAAKo/F,GAAgBE,YACnB,GAApB7iE,EAAI2H,UAAUpkC,IAAW9P,KAAKuE,KAAKmwG,eAAe5kG,IAAM0kG,EAAS1kG,EAAI,GACrE,SACJ,IAAI48B,EAAMH,EAAII,SAAS78B,GAAI88B,EAAML,EAAIM,OAAO/8B,GACxC4iG,EAAOnmE,EAAI8c,YAAY3c,GAAMimE,EAAOpmE,EAAI8c,YAAYzc,GACxD,GAAI8lE,EAAK9zG,QAAU,GAAK+zG,EAAK/zG,QAAU,GAAK8zG,EAAK9zG,OAAS,GAAK+zG,EAAK/zG,OAAS,EACzE,SACJ,GAAmB,GAAf8zG,EAAK9zG,SAAgBoB,KAAKuvG,IAAImD,EAAK,GAAK,IAAM1yG,KAAKuvG,IAAImD,EAAK,GAAK,IACjE,SACJ,GAAmB,GAAfC,EAAK/zG,SAAgBoB,KAAKuvG,IAAIoD,EAAK,GAAK,IAAM3yG,KAAKuvG,IAAIoD,EAAK,GAAK,IACjE,SACJ,IAAK,IAAI5oG,EAAI,EAAGA,EAAI2oG,EAAK9zG,OAAS,EAAGmL,IACjC,GAAI2oG,EAAK3oG,IAAM2iC,EACX,IAAK,IAAIr2B,EAAItM,EAAI,EAAGsM,EAAIq8F,EAAK9zG,OAAQyX,IACjC,GAAIq8F,EAAKr8F,IAAMq2B,GACP1sC,KAAK0mF,SAASgsB,EAAK3oG,GAAK,IAAM/J,KAAK0mF,SAASgsB,EAAKr8F,GAAK,GACtD,SAASo+F,EAC7B,IAAK,IAAI1qG,EAAI,EAAGA,EAAI4oG,EAAK/zG,OAAS,EAAGmL,IACjC,GAAI4oG,EAAK5oG,IAAM6iC,EACX,IAAK,IAAIv2B,EAAItM,EAAI,EAAGsM,EAAIs8F,EAAK/zG,OAAQyX,IACjC,GAAIs8F,EAAKt8F,IAAMu2B,GACP5sC,KAAK0mF,SAASisB,EAAK5oG,GAAK,IAAM/J,KAAK0mF,SAASisB,EAAKt8F,GAAK,GACtD,SAASo+F,EAC7B,GAAIloE,EAAIupB,SAAShmD,IAAMktC,GAAS2lB,iBAAkB,CAC9C3iE,KAAKqvG,aAAav/F,EAAI,GAAKo/F,GAAgBkF,eAC3C,QACJ,CACA,IAAI5B,EAAStD,GAAgBuD,gBAAgBlmE,EAAKz8B,GAClD,GAAc,MAAV0iG,EACA,SACJ,IAAImC,EAAmB,GAAbnC,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,GACrDoC,EAAmB,GAAbpC,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,GACrD3iB,EAAmB,GAAb2iB,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,GACrD1iB,EAAmB,GAAb0iB,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,GACzDxyG,KAAKqvG,aAAav/F,EAAI,GAAO6kG,EAAMC,GAAS/kB,EAAMC,EAAQof,GAAgBqF,WAAarF,GAAgBoF,UAC3G,CACJ,CACA,mBAAA3E,GACI,MAAMpjE,EAAMvsC,KAAKusC,IAAKiQ,EAAKjQ,EAAIC,SAAeD,EAAIE,SAClD0nE,EAAW,IAAK,IAAIrkG,EAAI,EAAGA,GAAK0sC,EAAI1sC,IAAK,CAErC,GADA9P,KAAKsvG,aAAax/F,EAAI,GAAKo/F,GAAgBE,YAChB,GAAvB7iE,EAAIsQ,aAAa/sC,GACjB,SACJ,GAAIukC,GAAUI,eAAelI,EAAIoQ,aAAa7sC,IAAM,EAChD,SACJ,IAAI0gC,EAAMjE,EAAI8c,YAAYv5C,GAC1B,IAAK,IAAI/F,EAAI,EAAGA,EAAIymC,EAAI5xC,OAAQmL,IAAK,CACjC,IAAIwQ,EAAQ,EACZ,IAAK,IAAIlE,EAAI,EAAGA,EAAIm6B,EAAI5xC,OAAQyX,IACxBrW,KAAK0mF,SAASl2C,EAAIzmC,GAAK,IAAM/J,KAAK0mF,SAASl2C,EAAIn6B,GAAK,IACpDkE,IAER,GAAIA,GAAS,EACT,SAAS45F,CACjB,CACA,IAAI3B,EAAStD,GAAgByB,mBAAmBpkE,EAAKz8B,GACrD,GAAc,MAAV0iG,EACA,SACJ,IAAI5jD,EAAM,CACO,GAAb4jD,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,GAClC,GAAbA,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,GAClC,GAAbA,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,GAClC,GAAbA,EAAO,GAAU,EAAIxyG,KAAK0mF,SAAS8rB,EAAO,GAAK,IAE/C6B,EAAS55F,EAAYG,YAAYg0C,GACrC5uD,KAAKsvG,aAAax/F,EAAI,GAAe,EAATukG,EAAgDnF,GAAgBoF,WAA7CpF,GAAgBqF,UACnE,CACJ,CACA,kBAAA3E,GACA,CACA,aAAAJ,GACI,MAAMjjE,EAAMvsC,KAAKusC,IAAKiQ,EAAKjQ,EAAIC,SAAUiQ,EAAKlQ,EAAIE,SAClD,IAAIooE,EAAQ,GACZ,IAAK,IAAI/kG,EAAI,EAAGA,EAAI0sC,EAAI1sC,IACpB+kG,EAAMr4G,KAAK,EAAIua,aAAa,EAAGw1B,EAAI6sB,cAActpD,EAAI,KACzD,IAAK,IAAIA,EAAI,EAAGA,GAAK2sC,EAAI3sC,IAAK,CAC1B,IAAIyoD,EAAKhsB,EAAII,SAAS78B,GAAK,EAAG0oD,EAAKjsB,EAAIM,OAAO/8B,GAAK,EAAG0rD,EAAKjvB,EAAI2H,UAAUpkC,GAGzE,GAFI9P,KAAKuE,KAAKmwG,eAAe5kG,KACzB0rD,EAAK,GACLjD,GAAMC,EACN,IAAK,IAAIzuD,EAAI,EAAGA,EAAIyxD,EAAIzxD,IACpB8qG,EAAMt8C,GAAI/7D,KAAKg8D,GACfq8C,EAAMr8C,GAAIh8D,KAAK+7D,EAE3B,CACAv4D,KAAK0mF,SAAW,EAAI3vE,YAAY,EAAGylC,GACnC,IAAIs4D,GAAa,EACjB,IAAK,IAAIhlG,EAAI,EAAGA,EAAI0sC,EAAI1sC,IACpB9P,KAAK0mF,SAAS52E,GAAKy8B,EAAIoQ,aAAa7sC,EAAI,GAChB,GAApB9P,KAAK0mF,SAAS52E,KACdglG,GAAa,GAErB,IAAIC,EAAQ,GACZ,IAAK,IAAIjlG,EAAI,EAAGA,EAAI0sC,EAAI1sC,IACpBilG,EAAMv4G,KAAK,IACf,OAAa,CACT,IAAK,IAAIsT,EAAI,EAAGA,EAAI0sC,EAAI1sC,IAAK,CACzB,IAAIklG,EAAMH,EAAM/kG,GAAI8+C,EAAM,GAC1B,IAAK,IAAI7kD,EAAI,EAAGA,EAAIirG,EAAIp2G,OAAQmL,IAC5B6kD,EAAIpyD,KAAKw4G,EAAIjrG,GAAK,EAAI,EAAI/J,KAAK0mF,SAASsuB,EAAIjrG,KAChD,EAAI2P,KAAKk1C,GACTmmD,EAAMjlG,GAAK8+C,CACf,CACA,IAAI+C,EAAS3xD,KAAKi1G,aAAaj1G,KAAK0mF,UAChCwuB,EAAUJ,EAAa,EAAI,EAC3BK,GAAgB,EACpB,IAAK,IAAIrlG,EAAI,EAAGA,EAAI6hD,EAAO/yD,OAAQkR,IAAK,CACpC,IAAIyP,EAAIoyC,EAAO7hD,GACf,IAAK,IAAI3N,EAAI,EAAGA,EAAIod,EAAE3gB,OAAS,GAAI,CAC/B,MAAM8pB,EAAKnJ,EAAEpd,GAAIwmB,EAAKpJ,EAAEpd,EAAI,GAC5B,IAAIizG,EAAM,EAAG1+F,EAAKC,KAAKC,IAAIm+F,EAAMrsF,GAAI9pB,OAAQm2G,EAAMpsF,GAAI/pB,QACvD,IAAK,IAAImL,EAAI,EAAGA,EAAI2M,EAAI3M,IAAK,CACzB,IAAI6P,EAAK7P,EAAIgrG,EAAMrsF,GAAI9pB,OAASm2G,EAAMrsF,GAAI3e,GAAK,EAAG8P,EAAK9P,EAAIgrG,EAAMpsF,GAAI/pB,OAASm2G,EAAMpsF,GAAI5e,GAAK,EAC7F,GAAI6P,EAAKC,EAAI,CACTu7F,GAAO,EACP,KACJ,CACA,GAAIx7F,EAAKC,EAAI,CACTu7F,EAAM,EACN,KACJ,CACJ,CACIA,EAAM,GACN71F,EAAEpd,GAAKwmB,EACPpJ,EAAEpd,EAAI,GAAKumB,EACPvmB,EAAI,GACJA,KAGJA,GACR,CACA,IAAK,IAAI4H,EAAI,EAAGA,EAAIwV,EAAE3gB,OAAQmL,IAAK,CAC/B,GAAS,GAALA,EACAmrG,SACC,GAAIH,EAAMx1F,EAAExV,IAAInL,QAAUm2G,EAAMx1F,EAAExV,EAAI,IAAInL,OAC3Cs2G,IACAC,GAAgB,OAGhB,IAAK,IAAI9+F,EAAI,EAAGA,EAAI0+F,EAAMx1F,EAAExV,IAAInL,OAAQyX,IACpC,GAAI0+F,EAAMx1F,EAAExV,IAAIsM,IAAM0+F,EAAMx1F,EAAExV,EAAI,IAAIsM,GAAI,CACtC6+F,IACAC,GAAgB,EAChB,KACJ,CAERn1G,KAAK0mF,SAASnnE,EAAExV,IAAMmrG,CAC1B,CACJ,CACA,IAAKC,EACD,KACR,CACJ,CACA,YAAAF,CAAal4G,GACT,IAAIs4G,EAAO,IAAIjxG,IACf,IAAK,IAAIuQ,KAAK5X,EACVs4G,EAAK/0G,IAAIqU,GACb,IAAIqF,EAAS1a,MAAMgH,KAAK+uG,GACxB,EAAI37F,KAAKM,GACT,IAAItT,EAAM,GACV,IAAK,IAAIoJ,EAAI,EAAGA,EAAIkK,EAAOpb,OAAQkR,IAC/BpJ,EAAIlK,KAAK,IACb,IAAK,IAAIsT,EAAI,EAAGA,EAAI/S,EAAI6B,OAAQkR,IAE5BpJ,EADUsT,EAAOQ,QAAQzd,EAAI+S,KACpBtT,KAAKsT,GAElB,OAAOpJ,CACX,EAEJwoG,GAAgBE,YAAc,EAC9BF,GAAgBqF,WAAa,EAC7BrF,GAAgBoF,WAAa,EAC7BpF,GAAgBkF,eAAiB,EACjClF,GAAgBoG,cAAgB,EAChCpG,GAAgBqG,mBAAqB,CACjC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAChF,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAEpFrG,GAAgBsG,mBAAqB,CACjC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAExDtG,GAAgBuG,oBAAsB,CAClC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GACpD,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAExDvG,GAAgBwG,kBAAoB,CAChC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAC/C,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IAEnDxG,GAAgByG,kBAAoB,CAChC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5E,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5E,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5E,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5E,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5E,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,ICrtBhF,MAAMC,GACF,WAAA14G,CAAYqvC,GACRvsC,KAAKusC,IAAMA,EACXvsC,KAAK61G,SAAW,KAChB71G,KAAK81G,SAAW,KAChB91G,KAAK+1G,YAAc,KACnB/1G,KAAKg2G,aAAe,KACpBh2G,KAAKi2G,WAAa,KAClBj2G,KAAKk2G,WAAa,KAClBl2G,KAAKm2G,YAAc,KACnBn2G,KAAK+yF,KAAO,KACZ/yF,KAAKo2G,UAAY,KACjBp2G,KAAKq2G,eAAiB,KACtBr2G,KAAKs2G,KAAO,KACZt2G,KAAKu2G,OAAS,IAClB,CACA,0BAAAC,GACI,IAAIjqE,EAAMvsC,KAAKusC,IACfvsC,KAAK61G,SAAW,EAAIh/F,cAAa,EAAO01B,EAAIC,UAC5CxsC,KAAK81G,SAAW,EAAIj/F,cAAa,EAAO01B,EAAIE,UAC5C,IAAImD,EAAQrD,EAAImD,gBAAgB,GAChC,MAAM+mE,EAAK7mE,EAAMhxC,OACjB,GAAU,GAAN63G,EACA,OACJz2G,KAAK02G,gBACL,IAAIt+F,EAAO,EAAIvB,cAAa,EAAO4/F,GACnC,IAAK,IAAI3mG,EAAI,EAAGA,EAAI2mG,EAAI3mG,IACpB,IAAK,IAAI/F,EAAI,EAAGA,EAAI6lC,EAAM9/B,GAAGlR,OAAQmL,IAAK,CACtC,IAAI4P,EAAIi2B,EAAM9/B,GAAG/F,GACjB,IAAK/J,KAAKu2G,OAAO58F,EAAI,GAAI,CACrBvB,EAAKtI,IAAK,EACV,KACJ,CACA,IAAIF,EAAI28B,EAAI4H,SAASx6B,EAAGi2B,EAAM9/B,GAAG/F,GAAK6lC,EAAM9/B,GAAGlR,OAAS,EAAI,EAAImL,EAAI,IAChEyxD,EAAKjvB,EAAI2H,UAAUtkC,GACvB,GAAU,GAAN4rD,GAAiB,GAANA,EAAS,CACpBpjD,EAAKtI,IAAK,EACV,KACJ,CACJ,CAEJ,OAAa,CACT,IAAI6mG,GAAY,EAChB,IAAK,IAAI7mG,EAAI,EAAGA,EAAI2mG,EAAI3mG,IACpB,IAAKsI,EAAKtI,GAAI,CACV,IAAI8mG,GAAS,EAAMC,GAAS,EAC5B,IAAK,IAAI9sG,EAAI,EAAGA,EAAI6lC,EAAM9/B,GAAGlR,OAAQmL,IAAK,CACtC,IAAI6F,EAAI28B,EAAI4H,SAASvE,EAAM9/B,GAAG/F,GAAI6lC,EAAM9/B,GAAG/F,GAAK6lC,EAAM9/B,GAAGlR,OAAS,EAAI,EAAImL,EAAI,IAC9E,GAAI/J,KAAK81G,SAASlmG,EAAI,GAClB,SACJ,IAAI4rD,EAAKjvB,EAAI2H,UAAUtkC,GACvBgnG,EAASA,GAAUp7C,GAAO,GAAS,EAAJzxD,GAC/B8sG,EAASA,GAAUr7C,GAAO,GAAS,EAAJzxD,EACnC,CACA,IAAK6sG,IAAWC,EACZ,SACJ,IAAK,IAAI9sG,EAAI,EAAGA,EAAI6lC,EAAM9/B,GAAGlR,OAAQmL,IAAK,CACtC,IAAI6F,EAAI28B,EAAI4H,SAASvE,EAAM9/B,GAAG/F,GAAI6lC,EAAM9/B,GAAG/F,GAAK6lC,EAAM9/B,GAAGlR,OAAS,EAAI,EAAImL,EAAI,IAC9E/J,KAAK81G,SAASlmG,EAAI,IAAK,CAC3B,CACAwI,EAAKtI,IAAK,EACV6mG,GAAY,CAChB,CACJ,IAAKA,EACD,KACR,CACA,IAAK,IAAI7mG,EAAI,EAAGA,EAAI9P,KAAK81G,SAASl3G,OAAQkR,IAClC9P,KAAK81G,SAAShmG,KACd9P,KAAK61G,SAAStpE,EAAII,SAAS78B,EAAI,GAAK,IAAK,EACzC9P,KAAK61G,SAAStpE,EAAIM,OAAO/8B,EAAI,GAAK,IAAK,EAEnD,CACA,2BAAAgnG,GACI,IAAIvqE,EAAMvsC,KAAKusC,IACfvsC,KAAK61G,SAAW,EAAIh/F,cAAa,EAAO01B,EAAIC,UAC5CxsC,KAAK81G,SAAW,EAAIj/F,cAAa,EAAO01B,EAAIE,UAC5CzsC,KAAK02G,gBACL,MAAMl6D,EAAKjQ,EAAIC,SAAUiQ,EAAKlQ,EAAIE,SAClC,IAAIwiE,EAAY,EAAIl4F,YAAY,EAAGylC,GAC/Bu6D,EAAY,EAAIlgG,cAAa,EAAO2lC,GACxC,IAAK,IAAI1sC,EAAI,EAAGA,GAAK0sC,EAAI1sC,IAAK,CAC1B,IAAI4sC,EAAOnQ,EAAIoQ,aAAa7sC,GAC5Bm/F,EAAUn/F,EAAI,IAAwC,GAAlCukC,GAAUI,eAAeiI,GAAarI,GAAUK,gBAAgBgI,GAAQ,GAAKnQ,EAAIqQ,WAAW9sC,GAAKy8B,EAAI6sB,cAActpD,GACjIy8B,EAAIqgB,aAAa98C,EAC3B,CACA,IAAK,IAAIA,EAAI,EAAGA,GAAK2sC,EAAI3sC,IAAK,CAC1B,MAAM48B,EAAMH,EAAII,SAAS78B,GAAI88B,EAAML,EAAIM,OAAO/8B,GAAI0rD,EAAKjvB,EAAI2H,UAAUpkC,GAGrE,GAFAm/F,EAAUviE,EAAM,IAAM8uB,EACtByzC,EAAUriE,EAAM,IAAM4uB,EACZ,GAANA,EAAS,CACT,MAAMw7C,EAAQzqE,EAAIknC,cAAc/mC,GAAMuqE,EAAQ1qE,EAAIknC,cAAc7mC,GAC5DoqE,EAAQ,GAAKA,GAASC,IACtBF,EAAUrqE,EAAM,IAAK,GACrBuqE,EAAQ,GAAKA,GAASD,IACtBD,EAAUnqE,EAAM,IAAK,EAC7B,CACJ,CACA,IAAIgD,EAAQ,GACZ,IAAK,IAAI4jB,EAAM,EAAGA,GAAO,EAAGA,IACxB,IAAK,IAAI0jD,KAAO3qE,EAAImD,gBAAgB8jB,GAAM,CACtC,IAAI2jD,GAAQ,EACZ,IAAK,IAAIrnG,EAAI,EAAGA,EAAI0jD,EAAK1jD,IAAK,CAC1B,MAAM6J,EAAIu9F,EAAIpnG,GACd,IAAK9P,KAAKu2G,OAAO58F,EAAI,IAAMs1F,EAAUt1F,EAAI,GAAK,IAAMo9F,EAAUp9F,EAAI,GAAI,CAClEw9F,GAAQ,EACR,KACJ,CACA,IAAIvnG,EAAI28B,EAAI4H,SAASx6B,EAAGu9F,EAAIpnG,EAAI0jD,EAAM,EAAI1jD,EAAI,EAAI,IAC9C0rD,EAAKjvB,EAAI2H,UAAUtkC,GACvB,GAAU,GAAN4rD,GAAiB,GAANA,EAAS,CACpB27C,GAAQ,EACR,KACJ,CACJ,CACIA,GACAvnE,EAAMpzC,KAAK06G,EACnB,CACJ,KAAOtnE,EAAMhxC,OAAS,GAAG,CACrB,IAAI+3G,GAAY,EAChB,IAAK,IAAI7mG,EAAI,EAAGA,EAAI8/B,EAAMhxC,OAAQkR,IAAK,CACnC,IAAIC,EAAI6/B,EAAM9/B,GACV0tC,EAAQ,CAAC,GACb,IAAK,IAAIzzC,EAAI,EAAGA,EAAIgG,EAAEnR,OAAQmL,IAAK,CAC/B,MAAM4P,EAAI5J,EAAEhG,GACN+qD,EAAKvoB,EAAI4H,SAASx6B,EAAG5J,EAAEhG,EAAIgG,EAAEnR,OAAS,EAAImL,EAAI,EAAI,IAClDgrD,EAAKxoB,EAAI4H,SAASx6B,EAAG5J,EAAEhG,EAAI,EAAIA,EAAI,EAAIgG,EAAEnR,OAAS,IACxD,GAAIoB,KAAK81G,SAAShhD,EAAK,GACnB,IAAK,IAAIz+C,EAAImnC,EAAM5+C,OAAS,EAAGyX,GAAK,EAAGA,IAAK,CACxC,MAAMxK,EAAI2xC,EAAMnnC,GAAK,EACjBmnC,EAAMhjC,QAAQ3O,GAAK,IACnB2xC,EAAQ,EAAIjoC,OAAOioC,EAAO3xC,GAClC,MAE0B,GAArB0gC,EAAI2H,UAAU4gB,IAEdm6C,EAAUt1F,EAAI,IAAM,GAA0B,GAArB4yB,EAAI2H,UAAU4gB,IAAiC,GAArBvoB,EAAI2H,UAAU6gB,KADtE,EAAI57C,MAAMqkC,EAAO,EAGzB,CACA,IAAI45D,GAAO,EACX,IAAK,IAAIvrG,KAAK2xC,EAAO,CACjB,GAAS,GAAL3xC,GAAsB,GAAZkE,EAAEnR,OAAa,CACzBw4G,GAAO,EACP,KACJ,CACA,GAAS,GAALvrG,EAAQ,CACRurG,GAAO,EACP,KACJ,CACJ,CACA,GAAIA,EAAM,CACN,IAAK,IAAIrtG,EAAI,EAAGA,EAAIgG,EAAEnR,OAAQmL,IAAK,CAC/B,IAAI4P,EAAI5J,EAAEhG,GAAI6F,EAAI28B,EAAI4H,SAASx6B,EAAG5J,EAAEhG,EAAIgG,EAAEnR,OAAS,EAAImL,EAAI,EAAI,IAC/D/J,KAAK61G,SAASl8F,EAAI,IAAK,EACvB3Z,KAAK81G,SAASlmG,EAAI,IAAK,CAC3B,CACAggC,EAAMtiC,OAAOwC,EAAG,GAChBA,IACA6mG,GAAY,CAChB,CACJ,CACA,IAAKA,EACD,KACR,CACJ,CACA,qBAAAU,GACI,MAAM9qE,EAAMvsC,KAAKusC,IAAKiQ,EAAKjQ,EAAIC,SAAUiQ,EAAKlQ,EAAIE,SAClDzsC,KAAK+1G,YAAc,IAAIz2G,MAAMk9C,GAC7Bx8C,KAAKg2G,aAAe,IAAI12G,MAAMk9C,GAC9Bx8C,KAAKi2G,WAAa,IAAI32G,MAAMk9C,GAC5Bx8C,KAAKk2G,WAAa,IAAI52G,MAAMk9C,GAC5Bx8C,KAAKm2G,YAAc,IAAI72G,MAAMm9C,GAC7B,IAAK,IAAI3sC,EAAI,EAAGA,GAAK0sC,EAAI1sC,IAAK,CAC1B,IAAI2hC,EAAM4C,GAAUI,eAAelI,EAAIoQ,aAAa7sC,IAChDwnG,EAAO/qE,EAAIsQ,aAAa/sC,GAAI6qD,EAAKpuB,EAAI6sB,cAActpD,GACnD8gG,EAAO,EAAGC,EAAO,EACrB,IAAK,IAAIjhG,KAAK28B,EAAIwlB,aAAajiD,GACvBy8B,EAAIupB,SAASlmD,IAAMotC,GAAS6Z,mBAAqBtqB,EAAII,SAAS/8B,IAAME,EACpE8gG,IACKrkE,EAAIupB,SAASlmD,IAAMotC,GAAS8Z,mBAAqBvqB,EAAII,SAAS/8B,IAAME,GACzE+gG,KAEG,GAAPp/D,IAAsB,GAAR6lE,GAAmB,GAAN38C,GAAqB,GAAR28C,GAAmB,GAAN38C,IAGhDlpB,GAAO,GAAa,GAAR6lE,GAAqB,GAAR1G,GAAqB,GAARC,KAF3C7wG,KAAK+1G,YAAYjmG,EAAI,GAAKo/F,GAAgBkB,kBAAkB7jE,EAAKz8B,IAKjE2hC,GAAO,GAAa,GAAR6lE,GAAmB,GAAN38C,IACzB36D,KAAKg2G,aAAalmG,EAAI,GAAKo/F,GAAgByB,mBAAmBpkE,EAAKz8B,IAEnE2hC,GAAO,IAAc,GAAR6lE,GAAqB,GAARA,IAAoB,GAAN38C,IACxC36D,KAAKi2G,WAAWnmG,EAAI,GAAKo/F,GAAgBuC,kBAAkBllE,EAAKz8B,KAEhE2hC,GAAO,IAAc,GAAR6lE,GAAqB,GAARA,IAAoB,GAAN38C,GAG5B,GAAPlpB,GAAoB,GAAR6lE,GAAmB,GAAN38C,KAF9B36D,KAAKk2G,WAAWpmG,EAAI,GAAKo/F,GAAgBiD,iBAAiB5lE,EAAKz8B,GAKvE,CACA,IAAK,IAAIA,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,GAAwB,GAApBy8B,EAAI2H,UAAUpkC,IAAWy8B,EAAIupB,SAAShmD,IAAMktC,GAAS2lB,kBAAoB3iE,KAAK00G,eAAe5kG,GAC7F,SACJ,IAAI48B,EAAMH,EAAII,SAAS78B,GAAI88B,EAAML,EAAIM,OAAO/8B,GACxCs+F,EAAO/5D,GAAUI,eAAelI,EAAIoQ,aAAajQ,IACjD2hE,EAAOh6D,GAAUI,eAAelI,EAAIoQ,aAAa/P,IACjD2qE,EAAQhrE,EAAIsQ,aAAanQ,GAAM8qE,EAAMjrE,EAAI6sB,cAAc1sB,GACvD+qE,EAAQlrE,EAAIsQ,aAAajQ,GAAM8qE,EAAMnrE,EAAI6sB,cAAcxsB,GAC/C,GAARwhE,GAAqB,GAARC,GAAckJ,EAAQC,GAAO,GAAKA,GAAO,GAAOC,EAAQC,GAAO,GAAKA,GAAO,IACxF13G,KAAKm2G,YAAYrmG,EAAI,GAAKo/F,GAAgBuD,gBAAgBlmE,EAAKz8B,GAEvE,CACJ,CACA,eAAA6nG,GACI,IAAIprE,EAAMvsC,KAAKusC,IAAKiQ,EAAKjQ,EAAIC,SAAUiQ,EAAKlQ,EAAIE,SAC5CmrE,EAAW,EAAI/gG,cAAa,EAAM2lC,GAAKq7D,EAAW,EAAIhhG,cAAa,EAAM4lC,GAC7E,IAAK,IAAI3sC,EAAI,EAAGA,GAAK0sC,EAAI1sC,IACjBm8C,GAAQ6O,eAAevuB,EAAKz8B,KAC5B8nG,EAAS9nG,EAAI,IAAK,EAClB+nG,EAAStrE,EAAIwlB,aAAajiD,GAAG,GAAK,IAAK,GAE/C,IAAI,EAAI8E,QAAQgjG,KAEhBrrE,EAAM0f,GAAQrd,aAAarC,EAAKqrE,GAC5B53G,KAAK61G,WACL71G,KAAK61G,SAAW,EAAIj9F,QAAQ5Y,KAAK61G,SAAU+B,IAC3C53G,KAAK81G,WACL91G,KAAK81G,SAAW,EAAIl9F,QAAQ5Y,KAAK81G,SAAU+B,IAC3C73G,KAAK+1G,aAAe/1G,KAAKg2G,cAAgBh2G,KAAKi2G,YAAcj2G,KAAKk2G,YAAcl2G,KAAKm2G,aAAa,CAC7Fn2G,KAAK+1G,cACL/1G,KAAK+1G,YAAc,EAAIn9F,QAAQ5Y,KAAK+1G,YAAa6B,IACjD53G,KAAKg2G,eACLh2G,KAAKg2G,aAAe,EAAIp9F,QAAQ5Y,KAAKg2G,aAAc4B,IACnD53G,KAAKi2G,aACLj2G,KAAKi2G,WAAa,EAAIr9F,QAAQ5Y,KAAKi2G,WAAY2B,IAC/C53G,KAAKk2G,aACLl2G,KAAKk2G,WAAa,EAAIt9F,QAAQ5Y,KAAKk2G,WAAY0B,IAC/C53G,KAAKm2G,cACLn2G,KAAKm2G,YAAc,EAAIv9F,QAAQ5Y,KAAKm2G,YAAa0B,IACrD,IAAIC,EAAU,EAAIriG,QAAQ,EAAInV,IAAI,EAAIoY,QAAQk/F,GAAW,GAAI,GAC7D,IAAK,IAAI9nG,EAAI,EAAGA,EAAI,EAAI0E,IAAIxU,KAAK+1G,aAAcjmG,IACvC9P,KAAK+1G,YAAYjmG,KACjB9P,KAAK+1G,YAAYjmG,GAAK,EAAIuI,OAAOy/F,EAAS93G,KAAK+1G,YAAYjmG,KACnE,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAI0E,IAAIxU,KAAKg2G,cAAelmG,IACxC9P,KAAKg2G,aAAalmG,KAClB9P,KAAKg2G,aAAalmG,GAAK,EAAIuI,OAAOy/F,EAAS93G,KAAKg2G,aAAalmG,KACrE,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAI0E,IAAIxU,KAAKi2G,YAAanmG,IACtC9P,KAAKi2G,WAAWnmG,KAChB9P,KAAKi2G,WAAWnmG,GAAK,EAAIuI,OAAOy/F,EAAS93G,KAAKi2G,WAAWnmG,KACjE,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAI0E,IAAIxU,KAAKk2G,YAAapmG,IACtC9P,KAAKk2G,WAAWpmG,KAChB9P,KAAKk2G,WAAWpmG,GAAK,EAAIuI,OAAOy/F,EAAS93G,KAAKk2G,WAAWpmG,KACjE,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAI0E,IAAIxU,KAAKm2G,aAAcrmG,IACvC9P,KAAKm2G,YAAYrmG,KACjB9P,KAAKm2G,YAAYrmG,GAAK,EAAIuI,OAAOy/F,EAAS93G,KAAKm2G,YAAYrmG,IACvE,CACJ,CACA,qBAAAioG,GACI,GAAiC,MAA7BnC,GAAaoC,aACb,KAAM,+BACVh4G,KAAK+yF,KAAO6iB,GAAaoC,aAAah4G,KAAKusC,IAC/C,CACA,kBAAA0rE,GACI,IAAIC,GAAO,EACX,IAAK,IAAIpoG,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IACpC,GAA+B,KAA3B9P,KAAKusC,IAAI2Q,YAAYptC,GAAW,CAChCooG,GAAO,EACP,KACJ,CACJ,IAAKA,EAED,YADAl4G,KAAKo2G,UAAYp2G,KAAKm4G,mBAG1B,IAAIC,EAAMp4G,KAAKusC,IAAI3wB,QACnB,IAAK,IAAI9L,EAAIsoG,EAAI5rE,SAAU18B,GAAK,EAAGA,IACL,KAAtBsoG,EAAIl7D,YAAYptC,IAChBsoG,EAAIlrD,mBAAmBp9C,GAC/B9P,KAAKo2G,UAAYR,GAAaoC,aAAaI,EAC/C,CACA,cAAAC,CAAe3lE,GACX,OAAwB,MAAjB1yC,KAAK61G,UAA2B71G,KAAK61G,SAASnjE,EAAO,EAChE,CACA,cAAAgiE,CAAe5qD,GACX,OAAwB,MAAjB9pD,KAAK81G,UAA2B91G,KAAK81G,SAAShsD,EAAO,EAChE,CACA,aAAAwuD,CAAcxuD,GACV,OAAwB,MAAjB9pD,KAAK81G,UAAoB91G,KAAK81G,SAAShsD,EAAO,IAAM,EAAI9pD,KAAKusC,IAAI2H,UAAU4V,EACtF,CACA,kBAAAyuD,GACI,OAAwB,MAAjBv4G,KAAK61G,SAAmB,KAAO71G,KAAK61G,SAAS5mG,MAAM,EAC9D,CACA,kBAAAupG,GACI,OAAwB,MAAjBx4G,KAAK81G,SAAmB,KAAO91G,KAAK81G,SAAS7mG,MAAM,EAC9D,CACA,eAAAkpG,GAGI,OAFiB,MAAbn4G,KAAK+yF,MACL/yF,KAAK+3G,wBACF/3G,KAAK+yF,IAChB,CACA,YAAA0lB,GAGI,OAFsB,MAAlBz4G,KAAKo2G,WACLp2G,KAAKi4G,qBACFj4G,KAAKo2G,SAChB,CACA,UAAAsC,GAGI,OAFiB,MAAb14G,KAAKs2G,OACLt2G,KAAKs2G,KAAO,IAAIlJ,GAAQptG,KAAKusC,MAC1BvsC,KAAKs2G,IAChB,CACA,iBAAAqC,GACI,GAA2B,MAAvB34G,KAAKq2G,eAAwB,CAC7Br2G,KAAKq2G,eAAiB,GACtB,IAAK,IAAIvmG,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IAAK,CACzC,IAAIqR,EAAKnhB,KAAKusC,IAAI2Q,YAAYptC,GAC1B9P,KAAKq2G,eAAe77F,QAAQ2G,GAAM,GAClCnhB,KAAKq2G,eAAe75G,KAAK2kB,EACjC,CACJ,CACA,OAAOnhB,KAAKq2G,cAChB,CACA,YAAAuC,CAAarhF,EAAOshF,EAAU,KAC1B,GAAkC,MAA9BjD,GAAakD,cACb,KAAM,+BACV,GAAI94G,KAAKusC,IAAIC,UAAYjV,EAAMgV,IAAIC,UAAYxsC,KAAKusC,IAAIE,UAAYlV,EAAMgV,IAAIE,SAC1E,OAAO,EAKX,GAJiB,MAAbzsC,KAAK+yF,MACL/yF,KAAK+3G,wBACS,MAAdxgF,EAAMw7D,MACNx7D,EAAMwgF,wBACN/3G,KAAK+yF,MAAQx7D,EAAMw7D,KACnB,OAAO,EACX,GAAqC,GAAjC/yF,KAAKusC,IAAI91B,UAAU8gB,EAAMgV,KACzB,OAAO,EACX,IAAIwsE,EAAQ/4G,KAAK24G,oBAAqBK,EAAQzhF,EAAMohF,oBACpD,IAAK,IAAI7oG,EAAI,EAAGA,EAAIipG,EAAMn6G,OAAQkR,IAC9B,IAAKkpG,EAAM93G,SAAS63G,EAAMjpG,IACtB,OAAO,EAEf,OAAO8lG,GAAakD,cAAc94G,KAAMu3B,EAAOshF,EACnD,CACA,mBAAOI,CAAa1sE,GAChB,GAAW,MAAPA,EACA,OAAO,KACX,IAAIhoC,EAAO,IAAIqxG,GAAarpE,GAE5B,OADAhoC,EAAK8yG,wBACE9yG,CACX,CACA,mBAAO20G,CAAa3sE,GAChB,GAAW,MAAPA,EACA,OAAO,KACX,IAAIhoC,EAAO,IAAIqxG,GAAarpE,GAE5B,OADAhoC,EAAKiyG,6BACEjyG,CACX,CACA,yBAAO40G,CAAmB5sE,GACtB,GAAW,MAAPA,EACA,OAAO,KACX,IAAIhoC,EAAO,IAAIqxG,GAAarpE,GAG5B,OAFAhoC,EAAKiyG,6BACLjyG,EAAK8yG,wBACE9yG,CACX,CACA,oBAAO60G,CAAc7sE,GACjB,GAAW,MAAPA,EACA,OAAO,KACX,IAAIhoC,EAAO,IAAIqxG,GAAarpE,GAE5B,OADAhoC,EAAKuyG,8BACEvyG,CACX,CACA,0BAAO80G,CAAoB9sE,GACvB,GAAW,MAAPA,EACA,OAAO,KACX,IAAIhoC,EAAO,IAAIqxG,GAAarpE,GAG5B,OAFAhoC,EAAKuyG,8BACLvyG,EAAK8yG,wBACE9yG,CACX,CACA,aAAAmyG,GACI,GAAmB,MAAf12G,KAAKu2G,OAAT,CAEAv2G,KAAKu2G,OAAS,EAAI1/F,cAAa,EAAO7W,KAAKusC,IAAIC,UAC/C,IAAK,IAAI18B,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIE,SAAU38B,IACP,GAAzB9P,KAAKusC,IAAI2H,UAAUpkC,KAEf9P,KAAKu2G,OAAOv2G,KAAKusC,IAAII,SAAS78B,GAAK,IAAK,EACxC9P,KAAKu2G,OAAOv2G,KAAKusC,IAAIM,OAAO/8B,GAAK,IAAK,EANxC,CASd,EAEJ8lG,GAAaoC,aAAe,KAC5BpC,GAAakD,cAAgB,KCxY7B,IAAIQ,GAAY,GAchB,MAAMC,GAAW,WACjB,SAASC,KAAc,OAAOD,EAAU,CACxC,SAASE,GAASC,EAAKC,GAEnB,OAAOL,GADkB,KAAdI,EAAMC,IACQD,IAAQ,CACrC,CACA,SAASE,GAAQF,GAAO,OAAOA,EAAMH,EAAU,CAC/C,MAAMM,GACF,WAAA38G,CAAYqH,EAAMu1G,GACd95G,KAAKuE,KAAOA,EACZvE,KAAK85G,KAAOA,EACZ95G,KAAK+5G,eAAiB,KACtB/5G,KAAKg6G,kBAAoB,KACzBh6G,KAAKyd,SAAW,GAChBzd,KAAKi6G,eAAiB,GACtBj6G,KAAKk6G,UAAY,GACjBl6G,KAAKm6G,OAAS,GACdn6G,KAAK6uG,MAAQ,GACb7uG,KAAKo6G,QAAU,GACfp6G,KAAKq6G,QAAU,GAhCvB,WACI,KAAIf,GAAU16G,OAAS,GAEvB,IAAK,IAAIkR,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAIyI,EAAIzI,EACR,IAAK,IAAI/F,EAAI,EAAGA,EAAI,EAAGA,IACV,EAAJwO,EACDA,EAAI,WAAcA,IAAM,EAExBA,KAAW,EACnB+gG,GAAU98G,KAAK+b,EACnB,CACJ,CAqBQ+hG,EACJ,CACA,SAAAtjC,GACI,IAAIzqC,EAAMvsC,KAAKuE,KAAKgoC,IAAKiQ,EAAKjQ,EAAIC,SAClCxsC,KAAKyd,SAAW,EAAI1G,YAAY,EAAGylC,GACnCx8C,KAAKi6G,eAAiB,EAAIpjG,cAAa,EAAO2lC,GAC9C,IAAK,IAAI1sC,EAAI,EAAGA,EAAI0sC,EAAI1sC,IACpB9P,KAAKk6G,UAAU19G,KAAK,IACxBwD,KAAK6uG,MAAQ,EAAIh4F,cAAa,EAAO2lC,GACrC,IAAK,IAAI1sC,EAAI,EAAGA,EAAI0sC,EAAI1sC,IACpB9P,KAAK6uG,MAAM/+F,GAAKy8B,EAAIoQ,aAAa7sC,EAAI,IAAM,IAAMm8C,GAAQc,UAAUxgB,EAAKz8B,EAAI,GAC5E9P,KAAKo6G,QAAQ59G,KAAK,IAClBwD,KAAKq6G,QAAQ79G,KAAK,IAEtB,IAAK,IAAIsT,EAAI,EAAGA,EAAI0sC,EAAI1sC,IACpB,GAAK9P,KAAK6uG,MAAM/+F,GAAhB,CAEA9P,KAAKo6G,QAAQtqG,GAAKy8B,EAAI8c,YAAYv5C,EAAI,GACtC9P,KAAKq6G,QAAQvqG,GAAKy8B,EAAIwlB,aAAajiD,EAAI,GACvC,IAAK,IAAI/F,EAAI/J,KAAKo6G,QAAQtqG,GAAGlR,OAAS,EAAGmL,GAAK,EAAGA,IACxC/J,KAAK6uG,MAAM7uG,KAAKo6G,QAAQtqG,GAAG/F,GAAK,KACjC/J,KAAKo6G,QAAQtqG,GAAGxC,OAAOvD,EAAG,GAC1B/J,KAAKq6G,QAAQvqG,GAAGxC,OAAOvD,EAAG,GANtB,CAShB,IAAK,IAAI+F,EAAI,EAAGA,EAAI0sC,EAAI1sC,IAChB9P,KAAK6uG,MAAM/+F,KACX9P,KAAKyd,SAAS3N,GAAK9P,KAAKu6G,oBAAoBzqG,EAAI,GAChD9P,KAAKk6G,UAAUpqG,GAAK,CAACA,EAAI,GACzB9P,KAAKw6G,WAAW,CAAEC,SAAUz6G,KAAKyd,SAAS3N,GAAI4qG,UAAW,EAAG/oE,MAAO3xC,KAAKk6G,UAAUpqG,GAAI6qG,YAAa7qG,EAAI,KAE/G,IAAI8qG,EAAQ56G,KAAK85G,KACjB,IAAK,IAAIv7F,EAAO,EAAGA,GAAQq8F,EAAOr8F,IAAQ,CACtC,IAAIs8F,EAAW,EAAI9jG,YAAY,EAAGylC,GAClC,IAAK,IAAI1sC,EAAI,EAAGA,EAAI0sC,EAAI1sC,IAChB9P,KAAK6uG,MAAM/+F,KACX+qG,EAAS/qG,GAAK9P,KAAK86G,gBAAgBv8F,EAAMzO,EAAI,IACrD9P,KAAKyd,SAAWo9F,EAChB,IAAK,IAAI/qG,EAAI,EAAGA,EAAI0sC,EAAI1sC,IAChB9P,KAAK6uG,MAAM/+F,KACX9P,KAAKk6G,UAAUpqG,GAAK9P,KAAK+6G,UAAU/6G,KAAKk6G,UAAUpqG,IAClD9P,KAAKg7G,cAAc,CAAEP,SAAUz6G,KAAKyd,SAAS3N,GAAI4qG,UAAWn8F,EAAMozB,MAAO3xC,KAAKk6G,UAAUpqG,GAAI6qG,YAAa7qG,EAAI,IAEzH,CACJ,CACA,aAAOnO,CAAO4C,EAAMu1G,GACZv1G,aAAgBy4C,KAChBz4C,EAAOqxG,GAAauD,mBAAmB50G,IAC3C,IAAI02G,EAAO,IAAIpB,GAAqBt1G,EAAMu1G,GAE1C,OADAmB,EAAKjkC,YACEikC,CACX,CACA,WAAA36D,GAAgB,OAAOtgD,KAAKuE,KAAKgoC,GAAK,CACtC,SAAI2uE,GAAU,OAAOl7G,KAAKm6G,OAAOv7G,MAAQ,CACzC,KAAAu8G,CAAMtlG,GAAO,OAAO7V,KAAKm6G,OAAOtkG,EAAM,CACtC,eAAAulG,GAAoB,OAAOp7G,KAAKm6G,OAAOlrG,MAAM,EAAI,CACjD,eAAAosG,GACI,IAAIpoB,EAAS,IAAI7uF,IACjB,IAAK,IAAIusC,KAAM3wC,KAAKm6G,OAChBlnB,EAAO3yF,IAAIqwC,EAAG8pE,UAClB,OAAO,EAAI3gG,OAAOxa,MAAMgH,KAAK2sF,GACjC,CACA,eAAAqoB,CAAgBC,GACZ,IAAIC,EAAUD,EAAU,EACpBtoB,EAAS,IAAI7uF,IACjB,IAAK,IAAIusC,KAAM3wC,KAAKm6G,OAChBlnB,EAAO3yF,IAAIqwC,EAAG8pE,SAAWe,GAC7B,OAAO,EAAI1hG,OAAOxa,MAAMgH,KAAK2sF,GACjC,CACA,eAAOwoB,CAASC,EAAOC,GACnB,IAAI7tB,EAAS,EAAGigB,EAAQ,EACpB73F,EAAMwlG,EAAM98G,OAAQuX,EAAMwlG,EAAM/8G,OACpC,GAAW,GAAPsX,GAAmB,GAAPC,EACZ,OAAO,EACX,IAAIuS,EAAK,EAAGC,EAAK,EACjB,KAAOD,EAAKxS,GAAOyS,EAAKxS,GAAK,CACzB,GAAIuS,GAAMxS,EAAK,CACX63F,GAAS53F,EAAMwS,EACf,KACJ,CACA,GAAIA,GAAMxS,EAAK,CACX43F,GAAS73F,EAAMwS,EACf,KACJ,CACA,IAAI9O,EAAK8hG,EAAMhzF,GAAK7O,EAAK8hG,EAAMhzF,GAC3B/O,GAAMC,GACNi0E,GAAU,EACVplE,GAAM,EACNC,GAAM,GAED/O,EAAKC,EACV6O,GAAM,EAENC,GAAM,EACVolF,GAAS,CACb,CACA,OAAOjgB,EAASigB,CACpB,CACA,mBAAAwM,CAAoB7nE,GAChB,MAAMnG,EAAMvsC,KAAKuE,KAAKgoC,IACtB,IAAIiE,EAAMjE,EAAI8c,YAAY3W,GACtBkpE,EAAS,EAAGC,EAAQtvE,EAAI6sB,cAAc1mB,GAC1C,IAAK,IAAI/4B,KAAK62B,EACgB,KAAtBjE,EAAI2Q,YAAYvjC,GAChBkiG,IAEAD,IACR,IAAIl/D,EAAOnQ,EAAIoQ,aAAajK,GACxBopE,EAASnlG,KAAKC,IAAI,EAAGy9B,GAAUM,gBAAgB+H,GAAQm/D,GACvDt3C,EAAMh4B,EAAIqQ,WAAWlK,GACrBqpE,EAASxvE,EAAIknC,cAAc/gC,GAAQ,EAAI,EAAI,EAC3CgnE,EAAMF,KAKV,OAJAE,EAAMD,GAASC,EAAMkC,GAAU,EAAKE,GACpCpC,EAAMD,GAASC,EAAKh9D,GACpBg9D,EAAMD,GAASC,EAAKn1C,EAAM,KAC1Bm1C,EAAMD,GAASC,EAAMmC,GAAS,EAAKE,GAC5BnC,GAAQF,EACnB,CACA,eAAAoB,CAAgBv8F,EAAMm0B,GAClB,IAAIlC,EAAMxwC,KAAKo6G,QAAQ1nE,EAAO,GAAIof,EAAO9xD,KAAKq6G,QAAQ3nE,EAAO,GACzD6K,EAAM,EAAIxmC,YAAY,EAAG,EAAI,EAAIy5B,EAAI5xC,QACzC2+C,EAAI,GAAKh/B,EACTg/B,EAAI,GAAKv9C,KAAKyd,SAASi1B,EAAO,GAC9B,IAAK,IAAI5iC,EAAI,EAAGA,EAAI0gC,EAAI5xC,OAAQkR,IAC5BytC,EAAI,EAAIztC,EAAI,GAAK9P,KAAKuE,KAAKmwG,eAAe5iD,EAAKhiD,IAAM,GAAM9P,KAAKuE,KAAKgoC,IAAI2H,UAAU4d,EAAKhiD,IACxFytC,EAAI,EAAIztC,EAAI,GAAK9P,KAAKyd,SAAS+yB,EAAI1gC,GAAK,GAE5C,IAAI3N,EAAI,EACR,KAAOA,EAAIquC,EAAI5xC,OAAS,GAAG,CACvB,IAAImL,EAAI,EAAI,EAAI5H,EACZo7C,EAAIxzC,GAAKwzC,EAAIxzC,EAAI,IAAOwzC,EAAIxzC,IAAMwzC,EAAIxzC,EAAI,IAAMwzC,EAAIxzC,EAAI,GAAKwzC,EAAIxzC,EAAI,IACrE,EAAIoL,KAAKooC,EAAKxzC,EAAGA,EAAI,GACrB,EAAIoL,KAAKooC,EAAKxzC,EAAI,EAAGA,EAAI,GACrB5H,EAAI,GACJA,KAGJA,GACR,CACA,IAAIu3G,EAAMF,KACV,IAAK,IAAI1pG,EAAI,EAAGA,EAAIytC,EAAI3+C,OAAQkR,GAAK,EAAG,CACpC4pG,EAAMD,GAASC,EAAKn8D,EAAIztC,IACxB,IAAI6E,EAAI4oC,EAAIztC,EAAI,GAChB4pG,EAAMD,GAASC,EAAK/kG,GAAK,IACzB+kG,EAAMD,GAASC,EAAM/kG,GAAK,GAAM,KAChC+kG,EAAMD,GAASC,EAAM/kG,GAAK,EAAK,KAC/B+kG,EAAMD,GAASC,EAAS,IAAJ/kG,EACxB,CACA,IAAK3U,KAAKi6G,eAAevnE,EAAO,IAAM,EAAIl+B,IAAIxU,KAAKuE,KAAKwxG,aAAe,GAAwC,MAAnC/1G,KAAKuE,KAAKwxG,YAAYrjE,EAAO,GAAY,CACjH,IAAIspE,EAAKh8G,KAAKuE,KAAKwxG,YAAYrjE,EAAO,GAClCupE,EAAM,CACG,GAATD,EAAG,GAAU,EAAIh8G,KAAKyd,SAASu+F,EAAG,GAAK,GAC9B,GAATA,EAAG,GAAU,EAAIh8G,KAAKyd,SAASu+F,EAAG,GAAK,GAC9B,GAATA,EAAG,GAAU,EAAIh8G,KAAKyd,SAASu+F,EAAG,GAAK,GAC9B,GAATA,EAAG,GAAU,EAAIh8G,KAAKyd,SAASu+F,EAAG,GAAK,IAEvCC,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAMA,EAAI,KAClHvC,EAAMD,GAASC,EAAKj/F,EAAYG,YAAYqhG,GAAO,GACnDj8G,KAAKi6G,eAAevnE,EAAO,IAAK,EAExC,CACA,OAAOknE,GAAQF,EACnB,CACA,SAAAqB,CAAUppE,GACN,IAAIv5B,EAAO,EAAIvB,cAAa,EAAO7W,KAAKuE,KAAKgoC,IAAIC,UACjD,IAAK,IAAI18B,EAAI,EAAGA,EAAI6hC,EAAM/yC,OAAQkR,IAAK,CACnCsI,EAAKu5B,EAAM7hC,GAAK,IAAK,EACrB,IAAK,IAAI6J,KAAK3Z,KAAKo6G,QAAQzoE,EAAM7hC,GAAK,GAClCsI,EAAKuB,EAAI,IAAK,CACtB,CACA,OAAO,EAAIrZ,IAAI,EAAIkY,QAAQJ,GAAO,EACtC,CACA,UAAAoiG,CAAW0B,GACHl8G,KAAKg6G,mBACLh6G,KAAKg6G,kBAAkBkC,GACvBl8G,KAAK+5G,gBACL/5G,KAAK+5G,eAAemC,GACxBl8G,KAAKm6G,OAAO39G,KAAK0/G,EACrB,CACA,aAAAlB,CAAckB,GACNl8G,KAAKg6G,mBACLh6G,KAAKg6G,kBAAkBkC,GAC3B,IAAItuD,GAAO,EACPjd,EAAK,KACT,IAAK,IAAI7gC,EAAI,EAAGA,EAAI9P,KAAKm6G,OAAOv7G,OAAQkR,IAAK,CACzC,IAAIqsG,EAASn8G,KAAKm6G,OAAOrqG,GACzB,GAAI,EAAIwG,OAAO6lG,EAAOxqE,MAAOuqE,EAAMvqE,OAAQ,CACvChB,EAAKwrE,EACLvuD,EAAM99C,EACN,KACJ,CACJ,CACI89C,EAAM,EACN5tD,KAAKm6G,OAAO39G,KAAK0/G,GAGjBvrE,EAAG+pE,UAAYwB,EAAMxB,WAAa/pE,EAAG8pE,SAAWyB,EAAMzB,WAE1Dz6G,KAAKm6G,OAAOvsD,GAAOsuD,EACfl8G,KAAK+5G,gBACL/5G,KAAK+5G,eAAemC,GAC5B,EAEJrC,GAAqBuC,YAAc,EACnCvC,GAAqBwC,YAAc,EACnCxC,GAAqByC,YAAc,EACnCzC,GAAqB0C,YAAc,ECpO5B,MAAMC,GAAiB,CAC1B,QACA,UACA,UACA,UACA,aACA,aACA,cACA,cACA,YACA,aACA,eACA,YACA,aACA,eACA,eAEJ,MAAMC,GACF,WAAAv/G,GACI8C,KAAK08G,QAAU,EACnB,CACA,iBAAOC,GAAe,OAAQ38G,KAAK2R,IAAM,CACzC,gBAAOirG,GACH,OAxC8C58F,EAwC7BhgB,KAxCsCigB,OAwChC,EAxC+CE,EAwC/B,YACnC,IAAIngB,KAAK2R,KAAT,CAEA,IAAK8xB,GAAME,aACP,KAAM,gCACV3jC,KAAK2R,KAAO,IAAI8qG,GAChB,IAAK,IAAII,KAAOL,GAAgB,CAC5B,IAAIp2F,EAAMqd,GAAME,aAAe,mBAAqBk5E,EAAM,MACtDC,QAAc32F,EAAYC,GAC1B8jD,EAAKsuB,GAAgBC,QAAQqkB,GAC7BpsC,EAASxG,EAAG1mB,eAAe,YAAau5D,EAAY7yC,EAAG/pB,cAAc,SAAU,UACnF,KAAIuwB,EAAS,GAAKqsC,EAAY,GAE9B,IAAK,IAAIjtG,EAAI,EAAGA,EAAIo6D,EAAGruD,QAAS/L,IAAK,CACjC,IAAI26C,EAAOyf,EAAGtpB,iBAAiB9wC,EAAG4gE,GAAS50E,EAAOouE,EAAG3pB,UAAUzwC,EAAGitG,GAClE,IAAKtyD,IAAS3uD,EACV,SACJ,IAAIkhH,EAAW,EAAGC,EAAY,EAC9B,IAAK,IAAIlzG,EAAI,EAAGA,GAAK0gD,EAAKje,SAAUziC,IAC5B0gD,EAAKvN,YAAYnzC,IAAMkiD,GAAQ4P,sBACd,GAAbohD,IACAA,EAAYlzG,GAChB0gD,EAAKwL,eAAelsD,EAAGkiD,GAAQ2I,mBAC/BooD,KAEQ,GAAZA,IAEAC,EAAY,GACZxyD,EAAKoK,UAAU,EAAGooD,GACtBj9G,KAAK2R,KAAKurG,mBAAmBphH,EAAM2uD,GACvC,CACJ,CA7BU,CA8Bd,EAtEG,KAFgEvqC,OAwCpC,KAtCjBA,EAAInd,WAAU,SAAU3F,EAASD,GAC/C,SAASijB,EAAUxkB,GAAS,IAAMykB,EAAKF,EAAU7W,KAAK1N,GAAS,CAAE,MAAOiQ,GAAK1O,EAAO0O,EAAI,CAAE,CAC1F,SAASyU,EAAS1kB,GAAS,IAAMykB,EAAKF,EAAiB,MAAEvkB,GAAS,CAAE,MAAOiQ,GAAK1O,EAAO0O,EAAI,CAAE,CAC7F,SAASwU,EAAKlX,GAJlB,IAAevN,EAIauN,EAAOQ,KAAOvM,EAAQ+L,EAAOvN,QAJ1CA,EAIyDuN,EAAOvN,MAJhDA,aAAiBskB,EAAItkB,EAAQ,IAAIskB,GAAE,SAAU9iB,GAAWA,EAAQxB,EAAQ,KAIjBoB,KAAKojB,EAAWE,EAAW,CAC7GD,GAAMF,EAAYA,EAAU9e,MAAM2e,EAASC,GAAc,KAAK3W,OAClE,IAPwC,IAAU0W,EAASC,EAAYC,EAAGC,CAyE1E,CACA,UAAAg9F,GACI,OAAOn9G,KAAK08G,QAAQztG,MAAM,EAC9B,CACA,kBAAAiuG,CAAmBphH,EAAMshH,EAAQC,GAAU,GACvC,IAAI5yD,EAAO2yD,EAAOxhG,QAClB5b,KAAKs9G,eAAexhH,EAAM2uD,EAAM4yD,EACpC,CACA,cAAAE,CAAeC,EAAOH,GAAU,GAC5B,IAAI9wE,EAAMixE,EAAM5hG,QAChB,IAAK,IAAI9L,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAAK,CACpC,IAAI26C,EAAOwB,GAAQwI,UAAUloB,EAAKz8B,GAC7B26C,GAELzqD,KAAKs9G,eAAe/wE,EAAI2Q,YAAYptC,GAAI26C,EAAM4yD,EAClD,CACJ,CACA,oBAAAI,CAAqBlxE,EAAKmG,GACtB,IAAI+X,EAAOwB,GAAQwI,UAAUloB,EAAKmG,GAClC,IAAK+X,EACD,OAAO,EACX,IAAIizD,EAAUzxD,GAAQuK,gBAAgB/L,GAClCkzD,EAAS1xD,GAAQ0M,iBAAiB+kD,GAClCE,EAAS/D,GAAqBl4G,OAAOi0G,GAAauD,mBAAmBuE,GAAU7D,GAAqB0C,aAAalB,kBACrH,IAAK,IAAIwC,KAAU79G,KAAK08G,QACpB,GAAImB,EAAOpzD,KAAKje,UAAYie,EAAKje,SAAU,CACvC,IAAIzrC,EAAQ8qD,GAAU4oB,iBAAiBhqB,EAAMozD,EAAOpzD,MACpD,IAAK1pD,EAAO,CACR,IAAI+8G,EAAW7xD,GAAQuK,gBAAgBqnD,EAAOpzD,MAC9C,GAAIkzD,GAAU1xD,GAAQ0M,iBAAiBmlD,GAAW,CAC9C,IAAIC,EAAUlE,GAAqBl4G,OAAOi0G,GAAauD,mBAAmB2E,GAAWjE,GAAqB0C,aAAalB,kBACnH,EAAI/kG,OAAOsnG,EAAQG,KACnBh9G,GAAQ,EAChB,CACJ,CACA,GAAIA,EAEA,OADAwrC,EAAI0pB,eAAevjB,EAAMmrE,EAAO/hH,OACzB,CAEf,CACJ,OAAO,CACX,CACA,cAAAwhH,CAAexhH,EAAM2uD,EAAM4yD,GACvB,GAAY,KAARvhH,EACA,OACJ,IAAIivD,EAAK,EAAGC,EAAK,EACbxa,EAAMia,EAAKpB,YAAY,GAC3B,IAAK,IAAI1vC,KAAK62B,EACVua,GAAMN,EAAKW,MAAMzxC,GAAK8wC,EAAKW,MAAM,GACjCJ,GAAMP,EAAKY,MAAM1xC,GAAK8wC,EAAKY,MAAM,GAErC,GAAI7a,EAAI5xC,OAAS,EAAG,CAChB,IAAIyzB,EAAM,EAAMme,EAAI5xC,OACpBmsD,GAAM14B,EACN24B,GAAM34B,CACV,CACA,GAAItP,EAAQgoC,EAAIC,GAAM,GAAM,GAAK,CAC7B,IAAI7mC,EAAQxN,KAAKue,MAAM81B,EAAID,GACvBp0C,KAAKuF,IAAIiI,GAAS,EAAIP,GACtBioC,GAAUsL,eAAe1M,GAAOtmC,EACxC,CACA,IAAIypC,GAAO,EACX,IAAK,IAAI99C,EAAI,EAAGA,EAAI9P,KAAK08G,QAAQ99G,OAAQkR,IAErC,GADQ9P,KAAK08G,QAAQ5sG,GACfhU,MAAQA,EAAd,CAEA8xD,EAAM99C,EACN,KAFY,CAIhB,IAAK0tB,EAAMwgF,GAAUh+G,KAAKi+G,kBAAkBniH,GACxCoiH,EAAM,CAAEpiH,OAAM2uD,OAAM0zD,SAAU3gF,EAAM4gF,WAAYJ,GAChDpwD,EAAM,EACFyvD,EACAr9G,KAAK08G,QAAQhnG,QAAQwoG,GAErBl+G,KAAK08G,QAAQlgH,KAAK0hH,GAGlBb,GAAWzvD,EAAM,GACjB5tD,KAAK08G,QAAQpvG,OAAOsgD,EAAK,GACzB5tD,KAAK08G,QAAQhnG,QAAQwoG,IAGrBl+G,KAAK08G,QAAQ9uD,GAAOswD,CAEhC,CACA,iBAAAD,CAAkBniH,GACd,IAAI0hC,EAAO,GAAIwgF,EAAS,GACpBzoG,EAAS,CAACkyB,EAAK1mB,KACXA,IACAyc,GAAQ,IAAMzc,EAAM,KACxByc,GAAQzX,EAAW0hB,GACnBu2E,GAAUv2E,EACN1mB,IACAyc,GAAQ,KAAOzc,EAAM,IAAG,EAEhC,IAAK,IAAI0mB,KAAO3rC,EAAK6kC,MAAM,KAAM,CAC7B,OAAa,CACT,IAAI5/B,EAAQ0mC,EAAI1mC,MAAM,wBACtB,IAAKA,EACD,MACJ,IAAIs9G,EAAMt9G,EAAM,GAAIu9G,EAAMv9G,EAAM,GAAIw9G,EAAOx9G,EAAM,GACjDwU,EAAO8oG,EAAK,MACRC,EAAI59F,WAAW,KACfnL,EAAO+oG,EAAI39F,UAAU,GAAI,OAEzBpL,EAAO+oG,EAAK,OAChB72E,EAAM82E,CACV,CACAhpG,EAAOkyB,EAAK,KAChB,CACA,MAAO,CAACjK,EAAMwgF,EAAO17D,cACzB,EAEJm6D,GAAgB9qG,KAAO,KCrLhB,MAAM6sG,GACT,WAAAthH,CAAYqvC,EAAKkyE,EAAWC,GACxB1+G,KAAKy+G,UAAYA,EACjBz+G,KAAK0+G,aAAeA,EACpB1+G,KAAK2+G,QAAU,GACf3+G,KAAKusC,IAAMA,EAAI3wB,OACnB,CACA,QAAAgjG,GACI,MAAM,IAAEryE,EAAG,UAAEkyE,EAAS,aAAEC,EAAY,QAAEC,GAAY3+G,KAClD,IAAIuf,EAAIusB,GAAMQ,aAAaC,GAC3BhtB,EAAE0uB,YAAYwwE,EAAY,GAC1B,IAAK,IAAI3vE,KAAMvvB,EAAEyvB,2BAA4B,CACzC,EAAI71B,MAAM21B,EAAI,GACd,IAAI/Z,GAAW,EACf,IAAK,IAAIpb,KAAK+kG,EACV,GAAI5vE,EAAGt0B,QAAQb,IAAM,EAAG,CACpBob,GAAW,EACX,KACJ,CACJ,IAAKA,EACD,SACJ,IAAI8pF,EAAM,CAAEltE,MAAO7C,EAAI05B,OAAQ,IAC/Bq2C,EAAIltE,MAAQ7C,EACZ,IAAIgwE,GAAc,EAClB,IAAK,IAAInlG,KAAKklG,EAAIltE,MACd,GAAIpF,EAAI4H,SAASx6B,EAAG8kG,GAAa,EAAG,CAChCK,GAAc,EACd,KACJ,CACJ,IAAK,IAAInlG,KAAKklG,EAAIltE,OACDpF,EAAI4H,SAASx6B,EAAG8kG,GAAa,IAC1BK,GAAeJ,EAAax9G,SAASyY,KACjDklG,EAAIr2C,OAAOhsE,KAAKmd,GAExBglG,EAAQniH,KAAKqiH,GACb,IAAK,IAAIllG,KAAKklG,EAAIr2C,OACoB,GAA9Bj8B,EAAI4H,SAASx6B,EAAG8kG,IAChBz+G,KAAK++G,eAAeplG,EAChC,CACA,GAAsB,GAAlBglG,EAAQ//G,OACR,MAAM,IAAIlB,MAAM,mBACpB,IAAIshH,EAAezyE,EAAI8c,YAAYo1D,GACnC,IAAK,IAAII,KAAOF,EACZK,EAAe,EAAI3kG,QAAQ2kG,EAAcH,EAAIr2C,QACjD,IAAIxc,EAAKzf,EAAI6e,MAAMqzD,GAAYtyD,EAAK5f,EAAI8e,MAAMozD,GAC1CtzB,EAAa,IAAI7rF,MAAM0/G,EAAapgH,QACxC,IAAK,IAAIkR,EAAI,EAAGA,EAAIkvG,EAAapgH,OAAQkR,IACrCq7E,EAAWr7E,GAAK6G,KAAKue,MAAMqX,EAAI8e,MAAM2zD,EAAalvG,IAAMq8C,EAAI5f,EAAI6e,MAAM4zD,EAAalvG,IAAMk8C,GAC7F,IAAK,IAAI6yD,KAAOF,EACZ,GAAyB,GAArBE,EAAIr2C,OAAO5pE,OAAa,CACxB,IAAI+a,EAAIklG,EAAIr2C,OAAO,GACnBq2C,EAAII,SAAWtoG,KAAKue,MAAMqX,EAAI8e,MAAM1xC,GAAKwyC,EAAI5f,EAAI6e,MAAMzxC,GAAKqyC,GAC5DhsD,KAAKk/G,aAAaL,EACtB,KACK,CACD,IAAI16F,EAAQ,IAAI7kB,MAAMu/G,EAAIr2C,OAAO5pE,QACjC,IAAK,IAAIkR,EAAI,EAAGA,EAAI+uG,EAAIr2C,OAAO5pE,OAAQkR,IAAK,CACxC,IAAI6J,EAAIklG,EAAIr2C,OAAO14D,GACnBqU,EAAMrU,GAAK6G,KAAKue,MAAMqX,EAAI8e,MAAM1xC,GAAKwyC,EAAI5f,EAAI6e,MAAMzxC,GAAKqyC,EAC5D,CACA7nC,EAAQ6J,EAASkC,WAAW/L,GAC5B,IAAI4uC,EAAO5uC,EAAM,GACjB,IAAK,IAAIrU,EAAI,EAAGA,EAAIqU,EAAMvlB,OAAQkR,IAC9BqU,EAAMrU,GAAK,EAAaqU,EAAMrU,GAAIijD,GACtC8rD,EAAII,SAAWlsD,EAAO,EAAIj6C,IAAIqL,GAASA,EAAMvlB,OAC7CoB,KAAKk/G,aAAaL,EACtB,CAEJ,GAA2B,GAAvBG,EAAapgH,OACb+/G,EAAQjlG,MAAK,CAACylG,EAAIC,IAAOh8F,EAAO+7F,EAAGF,SAAWG,EAAGH,YACjDj/G,KAAKq/G,mBAAmBV,QAEvB,GAA2B,GAAvBK,EAAapgH,OAClB+/G,EAAQjlG,MAAK,CAACylG,EAAIC,IAGPh8F,EAFK,EAAa+7F,EAAGF,SAAU9zB,EAAW,IACrC,EAAai0B,EAAGH,SAAU9zB,EAAW,OAGrDnrF,KAAKs/G,oBAAoBX,EAASxzB,EAAW,GAAI1nE,GAAO,OAEvD,CACD,IAAI87F,EAAa,EAAI9lG,QAAQ0xE,GAC7B,IAAK,IAAIr7E,EAAI,EAAGA,EAAIyvG,EAAW3gH,OAAQkR,IAAK,CACxC,IAAIu+C,GAAMv+C,EAAI,GAAKyvG,EAAW3gH,OAC1BulB,EAAQgnE,EAAWo0B,EAAWzvG,IAC9B0vG,EAAS,EAAar0B,EAAWo0B,EAAWlxD,IAAMlqC,GAClD+uE,EAAQ,GACZ,IAAK,IAAI2rB,KAAOF,EACD,EAAaE,EAAII,SAAU96F,GAC3Bq7F,GACPtsB,EAAM12F,KAAKqiH,GAEC,GAAhB3rB,EAAMt0F,SAEVs0F,EAAMx5E,MAAK,CAACylG,EAAIC,IAGLh8F,EAFK,EAAa+7F,EAAGF,SAAU96F,GAC1B,EAAai7F,EAAGH,SAAU96F,MAG1CnkB,KAAKs/G,oBAAoBpsB,EAAO/uE,EAAOq7F,GAAQ,GACnD,CACJ,CAEA,OADAx/G,KAAKy/G,iBACElzE,CACX,CACA,cAAAwyE,CAAeW,GACX,MAAM,IAAEnzE,EAAG,UAAEkyE,GAAcz+G,KAC3B,IAAI2/G,EAAOpzE,EAAIqQ,WAAW6hE,GAAYmB,EAAOrzE,EAAIqQ,WAAW8iE,GAC5D,GAAIC,EAAO,GAAKC,EAAO,EAInB,OAHArzE,EAAIghB,cAAckxD,EAAWkB,EAAO,GACpCpzE,EAAIghB,cAAcmyD,EAASE,EAAO,QAClCrzE,EAAI6mB,QAAQqrD,EAAWiB,EAAS,GAGpC,GAAIC,EAAO,GAAKC,EAAO,EAInB,OAHArzE,EAAIghB,cAAckxD,EAAWkB,EAAO,GACpCpzE,EAAIghB,cAAcmyD,EAASE,EAAO,QAClCrzE,EAAI6mB,QAAQqrD,EAAWiB,EAAS,GAGpC,IAAIj9D,EAAQ,EACRlW,EAAI8P,cAAcqjE,IAAY1iE,GAASC,mBAAqB1Q,EAAI6sB,cAAcsmD,GAAW,IACzFj9D,EAAQ,GACZlW,EAAI6mB,QAAQqrD,EAAWiB,EAASj9D,EACpC,CACA,YAAAy8D,CAAaL,GACT,MAAM,IAAEtyE,EAAG,UAAEkyE,GAAcz+G,KAC3B,IAAIgsD,EAAKzf,EAAI6e,MAAMqzD,GAAYtyD,EAAK5f,EAAI8e,MAAMozD,GAC1CvuE,EAAM2uE,EAAIltE,MAAM/yC,OAAQ0wD,EAAMuvD,EAAIr2C,OAAO5pE,OACzCihH,EAAY,IAAIvgH,MAAMgwD,GAC1B,IAAK,IAAIx/C,EAAI,EAAGA,EAAIw/C,EAAKx/C,IACrB+vG,EAAU/vG,GAAK+uG,EAAIltE,MAAMn3B,QAAQqkG,EAAIr2C,OAAO14D,IAChD,IAAIgwG,EAAK,IAAIxgH,MAAM4wC,GAAM6vE,EAAK,IAAIzgH,MAAM4wC,GACpCpjB,EAAKm/B,GAAQC,WAAW3f,GAAMxf,EAAKk/B,GAAQG,WAAW7f,GACtDyzE,EAAY,EAAIppG,IAAIkW,GAAM,EAAIxV,IAAIwV,GAAM,EAAIlW,IAAImW,GAAM,EAAIzV,IAAIyV,GAC9D/J,EAAKg9F,EAAYrpG,KAAK2a,IAAIutF,EAAII,UAAWh8F,EAAK+8F,EAAYrpG,KAAK4a,IAAIstF,EAAII,UAC3E,IAAK,IAAInvG,EAAI,EAAGA,EAAIogC,EAAKpgC,IACrBgwG,EAAGhwG,GAAKy8B,EAAI6e,MAAMyzD,EAAIltE,MAAM7hC,IAAMkT,EAClC+8F,EAAGjwG,GAAKy8B,EAAI8e,MAAMwzD,EAAIltE,MAAM7hC,IAAMmT,EAEtC,IAAIiK,EAAK,EAAIpU,IAAIgnG,GAAM5vE,EAAK/iB,EAAK,EAAIrU,IAAIinG,GAAM7vE,EAC3C+vE,EAAS,GACb,IAAK,IAAInwG,EAAI,EAAGA,EAAIogC,EAAKpgC,IAAK,CAC1B,IAAIyuB,EAAUhhC,OAAO4sB,kBACrB,IAAK,IAAItU,KAAOgqG,EACZthF,EAAU5nB,KAAKW,IAAIinB,EAAS,EAASuhF,EAAGhwG,GAAKgwG,EAAGjqG,GAAMkqG,EAAGjwG,GAAKiwG,EAAGlqG,KACrEoqG,EAAOzjH,KAAK,GAAO,EAAIma,KAAK2I,KAAKif,IACrC,CACA,IAAIhK,EAAYh3B,OAAO4sB,kBACnB+1F,EAAS,KAAMC,EAAS,KAC5B,IAAK,IAAIh8F,EAAQ,EAAGA,EAAQ,IAAKA,GAAS,GAAI,CAC1C,IAAIuO,EAAW/b,KAAK2a,IAAInN,EAAQP,GAAS4P,EAAW7c,KAAK4a,IAAIpN,EAAQP,GACjE6I,EAAK,IAAIntB,MAAM4wC,GAAMxjB,EAAK,IAAIptB,MAAM4wC,GACpC0a,EAAQ,EACZ,IAAK,IAAI96C,EAAI,EAAGA,EAAIogC,EAAKpgC,IAAK,CAC1B,IAAI0S,EAAIs9F,EAAGhwG,GAAKod,EAAIxK,EAAIq9F,EAAGjwG,GAAKqd,EAChCV,EAAG3c,GAAKod,EAAK1K,EAAIkQ,EAAWhQ,EAAI8Q,EAChC9G,EAAG5c,GAAKqd,EAAK3K,EAAIgR,EAAW9Q,EAAIgQ,EAChC,IAAIR,EAAOnP,EAAQ0J,EAAG3c,GAAKk8C,EAAIt/B,EAAG5c,GAAKq8C,GACnC0yD,EAAIr2C,OAAOhuD,QAAQqkG,EAAIltE,MAAM7hC,KAAO,EACpC86C,GAAS14B,EAET04B,GAAS14B,EAAO+tF,EAAOnwG,EAC/B,CACI86C,EAAQr2B,IACRA,EAAYq2B,EACZs1D,EAASzzF,EACT0zF,EAASzzF,EAEjB,CAGA,GAFAozF,EAAKI,EACLH,EAAKI,EACM,GAAP7wD,EACAtsC,EAAKg6B,GAASsN,UAAY3zC,KAAK2a,IAAIutF,EAAII,UACvCh8F,EAAK+5B,GAASsN,UAAY3zC,KAAK4a,IAAIstF,EAAII,UACvC,EAAI9lG,MAAM2mG,EAAI9zD,EAAKhpC,EAAK88F,EAAGD,EAAU,KACrC,EAAI1mG,MAAM4mG,EAAI5zD,EAAKlpC,EAAK88F,EAAGF,EAAU,SAEpC,CACD,IAAIO,EAAW,IAAI9gH,MAAMgwD,GAAM+wD,EAAU,EAAItpG,YAAY,EAAGu4C,GAAMgxD,EAAQ,EAAIvpG,YAAY,EAAGu4C,GAAMixD,EAAQ,EAAIxpG,YAAY,EAAGu4C,GAC9H,IAAK,IAAIx/C,EAAI,EAAGA,EAAIw/C,EAAKx/C,IAAK,CAC1B,IAAIw7C,EAAKw0D,EAAGD,EAAU/vG,IAAMk8C,EAAIT,EAAKw0D,EAAGF,EAAU/vG,IAAMq8C,EACxDi0D,EAAStwG,GAAK6G,KAAKue,MAAMq2B,EAAID,GACzBgE,EAAM,IACN+wD,EAAQvwG,GAAKiT,EAAQuoC,EAAIC,GACzB+0D,EAAMxwG,GAAKw7C,EAAK+0D,EAAQvwG,GACxBywG,EAAMzwG,GAAKy7C,EAAK80D,EAAQvwG,GAEhC,CACA,EAAIqJ,MAAMknG,GAAU,EAAI/oG,IAAI+oG,IAC5B,IAAIG,EAAcxyF,EAASmC,cAAciwF,GACrCK,EAAO,IAAInhH,MAAMgwD,GAAMoxD,EAAO,IAAIphH,MAAMgwD,GACxCqxD,EAAO,IAAIrhH,MAAMgwD,GAAMsxD,EAAO,IAAIthH,MAAMgwD,GACxCuxD,EAAS,GAAKj9F,GAAU0rC,EAAM,GAAInrC,EAAQ06F,EAAII,SAAW,GAAM4B,EACnE,IAAK,IAAI/wG,EAAI,EAAGA,EAAIw/C,EAAKx/C,IACrB2wG,EAAK3wG,GAAKgwG,EAAGD,EAAUW,EAAY1wG,KACnC4wG,EAAK5wG,GAAKiwG,EAAGF,EAAUW,EAAY1wG,KACnC6wG,EAAK7wG,GAAKk8C,EAAKhP,GAASsN,UAAY3zC,KAAK2a,IAAInN,GAASk8F,EAAQvwG,GAAKwwG,EAAMxwG,GACzE8wG,EAAK9wG,GAAKq8C,EAAKnP,GAASsN,UAAY3zC,KAAK4a,IAAIpN,GAASk8F,EAAQvwG,GAAKywG,EAAMzwG,GACzEqU,GAAS08F,GAAUvxD,EAAM,GAE7B,IAAI79B,EAAMzD,EAASgH,YAAYyrF,EAAMC,EAAMC,EAAMC,GACjD,IAAK,IAAI9wG,EAAI,EAAGA,EAAIogC,EAAKpgC,IAAK,CAC1B,IAAK0S,EAAGE,GAAKsL,EAAS4D,YAAYkuF,EAAGhwG,GAAIiwG,EAAGjwG,GAAI2hB,GAChDquF,EAAGhwG,GAAK0S,EACRu9F,EAAGjwG,GAAK4S,CACZ,CACJ,CACA,IAAK,IAAI5S,EAAI,EAAGA,EAAIogC,EAAKpgC,IACrBy8B,EAAI4e,WAAW0zD,EAAIltE,MAAM7hC,GAAIgwG,EAAGhwG,GAAIiwG,EAAGjwG,GAC/C,CACA,kBAAAuvG,CAAmBnsB,GACf,GAAoB,GAAhBA,EAAMt0F,OACN,OACJ,IAAIkiH,EAAW,EAAIzpG,KAAK67E,GAAO+rB,SAC/B6B,GAAY,GAAM,EAAa,EAAI1pG,MAAM87E,GAAO+rB,SAAU6B,GAC1D9gH,KAAKs/G,oBAAoBpsB,EAAO4tB,EAAUr9F,GAAO,EACrD,CACA,mBAAA67F,CAAoBpsB,EAAO4tB,EAAUC,EAASC,GAC1C,MAAM,IAAEz0E,EAAG,UAAEkyE,GAAcz+G,KAC3B,IAAIgsD,EAAKzf,EAAI6e,MAAMqzD,GAAYtyD,EAAK5f,EAAI8e,MAAMozD,GAC1CrhE,EAAM81C,EAAMt0F,OACZqiH,EAAW,IAAI3hH,MAAM89C,GAAM8jE,EAAY,IAAI5hH,MAAM89C,GACjD+jE,EAAa,EACjB,IAAK,IAAIrxG,EAAI,EAAGA,EAAIstC,EAAKttC,IAAK,CAC1B,IAAKy+E,EAAQC,GAAUxuF,KAAKohH,qBAAqBluB,EAAMpjF,IACvDmxG,EAASnxG,GAAKy+E,EACd2yB,EAAUpxG,GAAK,EAAa0+E,EAAQD,GACpC4yB,GAAcD,EAAUpxG,EAC5B,CACA,IAAIs5D,GAAY23C,EAAUI,IAAe/jE,GAAO4jE,EAAU,EAAI,IAC1D78F,EAAQ28F,GAAYE,EAAU53C,EAAW,GAAMA,GACnD,IAAK,IAAIt5D,EAAI,EAAGA,EAAIstC,EAAKttC,IAAK,CAC1B,IAAIuxG,EAAWl9F,EAAQ88F,EAASnxG,GAC5B4iB,EAAW/b,KAAK2a,IAAI+vF,GAAW7tF,EAAW7c,KAAK4a,IAAI8vF,GACvD,IAAK,IAAI1nG,KAAKu5E,EAAMpjF,GAAG6hC,MAAO,CAC1B,IAAInvB,EAAI+pB,EAAI6e,MAAMzxC,GAAKqyC,EAAItpC,EAAI6pB,EAAI8e,MAAM1xC,GAAKwyC,EAC9C5f,EAAI4e,WAAWxxC,EAAGqyC,EAAKxpC,EAAIkQ,EAAWhQ,EAAI8Q,EAAU24B,EAAK3pC,EAAIgR,EAAW9Q,EAAIgQ,EAChF,CACAvO,GAAS+8F,EAAUpxG,GAAKs5D,CAC5B,CACJ,CACA,oBAAAg4C,CAAqBvC,GACjB,MAAM,IAAEtyE,EAAG,UAAEkyE,GAAcz+G,KAC3B,IAAImkB,EAAQ,GACR6nC,EAAKzf,EAAI6e,MAAMqzD,GAAYtyD,EAAK5f,EAAI8e,MAAMozD,GAC9C,IAAK,IAAI3uG,EAAI,EAAGA,EAAI+uG,EAAIr2C,OAAO5pE,OAAQkR,IAAK,CACxC,IAAI0S,EAAI+pB,EAAI6e,MAAMyzD,EAAIr2C,OAAO14D,IAAMk8C,EAC/BtpC,EAAI6pB,EAAI8e,MAAMwzD,EAAIr2C,OAAO14D,IAAMq8C,EACnChoC,EAAM3nB,KAAKma,KAAKue,MAAMxS,EAAGF,GAC7B,CACA,EAAI9I,KAAKyK,GACT,IAAIoQ,EAAYh3B,OAAO4sB,kBAAmBm3F,EAAU,EAAGC,EAAU,EACjE,IAAK,IAAIzxG,EAAI,EAAGA,EAAIqU,EAAMvlB,OAAQkR,IAAK,CACnC,IAAI86C,EAAQ,EACZ,IAAK,IAAI7gD,EAAI,EAAGA,EAAIoa,EAAMvlB,OAAS,EAAGmL,IAClC6gD,GAAS,EAAazmC,EAAMpa,EAAI,GAAIoa,EAAMpa,IAC1C6gD,EAAQr2B,IACRA,EAAYq2B,EACZ02D,EAAU,EAAIlqG,MAAM+M,GACpBo9F,EAAU,EAAIlqG,KAAK8M,IAEvBA,EAAM3nB,KAAK2nB,EAAM9E,QACrB,CACA,MAAO,CAACiiG,EAASC,EACrB,CACA,cAAA9B,GACI,MAAM,IAAElzE,EAAG,UAAEkyE,EAAS,QAAEE,GAAY3+G,KAC9Bw8C,EAAKjQ,EAAIC,SAAUiQ,EAAKlQ,EAAIE,SAAUyD,EAAMlwC,KAAK2+G,QAAQ//G,OAC/D,IAAI4iH,EAAO,EAAIzqG,aAAa,EAAGylC,GAAKilE,EAAO,EAAI1qG,aAAa,EAAG0lC,GAC/D,IAAK,IAAI3sC,EAAI,EAAGA,GAAK0sC,EAAI1sC,IACjBy8B,EAAIunC,aAAahkE,IAAMy8B,EAAIunC,aAAa2qC,KACxC+C,EAAK1xG,EAAI,GAAK,GACtB,IAAK,IAAIA,EAAI,EAAGA,EAAIogC,EAAKpgC,IACrB,IAAK,IAAI6J,KAAKglG,EAAQ7uG,GAAG6hC,MACrB6vE,EAAK7nG,EAAI,GAAK7J,EAAI,EAC1B,IAAK,IAAIA,EAAI,EAAGA,GAAK2sC,EAAI3sC,IAAK,CAC1B,IAAIs+F,EAAOoT,EAAKj1E,EAAII,SAAS78B,GAAK,GAAIu+F,EAAOmT,EAAKj1E,EAAIM,OAAO/8B,GAAK,GAC9Ds+F,EAAO,GAAKC,EAAO,GACdD,GAAQC,IACboT,EAAK3xG,EAAI,GAAKs+F,EACtB,CACA,IAAIsT,EAAS,IAAIpiH,MAAM4wC,GAAMyxE,EAAS,IAAIriH,MAAM4wC,GAC5C8b,EAAKzf,EAAI6e,MAAMqzD,GAAYtyD,EAAK5f,EAAI8e,MAAMozD,GAC9C,IAAK,IAAI3uG,EAAI,EAAGA,EAAIogC,EAAKpgC,IAAK,CAC1B,IAAI+uG,EAAMF,EAAQ7uG,GACdkT,EAAK,EAAGC,EAAK,EACjB,IAAK,IAAItJ,KAAKklG,EAAIr2C,OACdxlD,GAAMupB,EAAI6e,MAAMzxC,GAAKqyC,EACrB/oC,GAAMspB,EAAI8e,MAAM1xC,GAAKwyC,EAEzBnpC,GAAM67F,EAAIr2C,OAAO5pE,OACjBqkB,GAAM47F,EAAIr2C,OAAO5pE,OACjB,IAAImwF,EAAU,EAAMhsE,EAAQC,EAAIC,GAChCy+F,EAAO5xG,GAAU,GAALkT,EAAW+rE,EACvB4yB,EAAO7xG,GAAU,GAALmT,EAAW8rE,CAC3B,CACA,MAAM6yB,EAAWv+F,EAAI,IACrB,IAAK,IAAI9I,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,IAAIsnG,EAAU,EAAIhrG,cAAa,EAAOq5B,GACtC4xE,EAAO,IAAK,IAAI/3G,EAAI,EAAGA,EAAIyyC,EAAK,EAAGzyC,IAC/B,KAAIy3G,EAAKz3G,GAAK,GAEd,IAAK,IAAIsM,EAAItM,EAAI,EAAGsM,EAAImmC,EAAInmC,IACxB,GAAImrG,EAAKnrG,IAAM,GAAKmrG,EAAKnrG,IAAMmrG,EAAKz3G,KAC5B,EAASwiC,EAAI6e,MAAMrhD,EAAI,GAAKwiC,EAAI6e,MAAM/0C,EAAI,GAAIk2B,EAAI8e,MAAMthD,EAAI,GAAKwiC,EAAI8e,MAAMh1C,EAAI,IAAMurG,IACjFJ,EAAKz3G,GAAK,IACV83G,EAAQL,EAAKz3G,GAAK,IAAK,GACvBy3G,EAAKnrG,GAAK,IACVwrG,EAAQL,EAAKnrG,GAAK,IAAK,IAE3B,EAAIzB,QAAQitG,IACZ,MAAMC,EAGtB,GAAI,EAAIjtG,SAASgtG,GACbC,EAAO,IAAK,IAAI/3G,EAAI,EAAGA,EAAI0yC,EAAK,EAAG1yC,IAAK,CACpC,GAAI03G,EAAK13G,GAAK,EACV,SACJ,IAAI4a,EAAK4nB,EAAI6e,MAAM7e,EAAII,SAAS5iC,EAAI,IAAK6a,EAAK2nB,EAAI8e,MAAM9e,EAAII,SAAS5iC,EAAI,IACrE8a,EAAK0nB,EAAI6e,MAAM7e,EAAIM,OAAO9iC,EAAI,IAAK+a,EAAKynB,EAAI8e,MAAM9e,EAAIM,OAAO9iC,EAAI,IACrE,IAAK,IAAIsM,EAAItM,EAAI,EAAGsM,EAAIomC,EAAIpmC,IACxB,GAAIorG,EAAKprG,IAAM,GAAKorG,EAAKprG,IAAMorG,EAAK13G,GAAI,CACpC,IAAIqkB,EAAKme,EAAI6e,MAAM7e,EAAII,SAASt2B,EAAI,IAAKgY,EAAKke,EAAI8e,MAAM9e,EAAII,SAASt2B,EAAI,IACrEiY,EAAKie,EAAI6e,MAAM7e,EAAIM,OAAOx2B,EAAI,IAAKkY,EAAKge,EAAI8e,MAAM9e,EAAIM,OAAOx2B,EAAI,IAOrE,GANI2X,EAASmB,oBAAoBxK,EAAIC,EAAIC,EAAIC,EAAIsJ,EAAIC,EAAIC,EAAIC,KACrDkzF,EAAK13G,GAAK,IACV83G,EAAQJ,EAAK13G,GAAK,IAAK,GACvB03G,EAAKprG,GAAK,IACVwrG,EAAQJ,EAAKprG,GAAK,IAAK,IAE3B,EAAIzB,QAAQitG,GACZ,MAAMC,CACd,CACR,CACJ,GAAI,EAAIhtG,SAAS+sG,GACb,MACJ,IAAK,IAAI/xG,EAAI,EAAGA,EAAIogC,EAAKpgC,IACrB,GAAI+xG,EAAQ/xG,GACR,IAAK,IAAI6J,KAAKglG,EAAQ7uG,GAAG6hC,MACrBpF,EAAI4e,WAAWxxC,EAAG4yB,EAAI6e,MAAMzxC,GAAK+nG,EAAO5xG,GAAIy8B,EAAI8e,MAAM1xC,GAAKgoG,EAAO7xG,GAGlF,CACJ,ECrVG,MAAMiyG,GACT,WAAA7kH,GACI8C,KAAKgiH,QAAU,EACfhiH,KAAKiiH,QAAS,EACdjiH,KAAKkiH,SAAU,EACfliH,KAAKmiH,cAAgB,EACrBniH,KAAKoiH,YAAc,CACvB,EAEJ,MAAMC,GACF,WAAAnlH,CAAYqvC,EAAK+1E,EAAOzE,GACpB79G,KAAKusC,IAAMA,EACXvsC,KAAKsiH,MAAQA,EACbtiH,KAAK69G,OAASA,EACd79G,KAAKub,MAAQ,GACbvb,KAAKuiH,UAAY,EACjBviH,KAAKwiH,eAAgB,EACrBxiH,KAAKyiH,WAAa,KAClBziH,KAAK0iH,SAAW,GAChB1iH,KAAK2iH,SAAW,GAChB3iH,KAAK4iH,UAAY,EACjB,IAAIC,EAAS,IAAI5xE,GAAa1E,GAAMu2E,EAAS,IAAI7xE,GAAaqxE,GAC9DQ,EAAOnwE,mBAAmBkwE,GAC1BC,EAAOzwE,kBACP,IAAI0wE,EAAQ,IAAIl7D,GAAatb,GAAMy2E,EAAQ,IAAIn7D,GAAay6D,GAC5DU,EAAMrwE,mBAAmBowE,GACzBC,EAAM3wE,kBACNryC,KAAKijH,eACT,CACA,WAAAC,GACI,IACIC,EAASnjH,KAAKusC,IAAI3wB,QAASu6C,EAASn2D,KAAKsiH,MAAM1mG,QACnD,GAAIunG,EAAO32E,SAAW,EAAG,CACrB,IAAI42E,EAASD,EAAO94D,WAAYg5D,EAASltD,EAAO9L,WAC5CrnC,EAAKogG,EAAOv5F,OAAS,EAAIw5F,EAAO15F,OAChC1G,EAAK,IAAOmgG,EAAOx5F,OAASw5F,EAAOt5F,QAAU,IAAOu5F,EAAOz5F,OAASy5F,EAAOv5F,QAC/E+hC,GAAUuL,kBAAkBjB,EAAQnzC,EAAIC,EAC5C,KACK,CACD,IAAIogG,EAASltD,EAAO9L,WACpBwB,GAAUuL,kBAAkBjB,GAASktD,EAAO3qF,QAAS2qF,EAAO1qF,OAChE,CACawqF,EAAO94D,WAApB,IAAgCg5D,EAASltD,EAAO9L,WAC5Cn9B,EAAKm2F,EAAO3qF,OAAQvL,EAAKk2F,EAAO1qF,OAChC2qF,EAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjFhuG,EAAW,IAAK,IAAIxF,EAAI,EAAGA,EAAIwzG,EAAK1kH,OAAQkR,IAAK,CAC7C,IAAIyzG,EAASptD,EAAOv6C,QACpBiwC,GAAUsL,eAAeosD,GAASD,EAAKxzG,GAAK8T,EAAQsJ,EAAIC,GACxD,IAAK,IAAIpjB,EAAI,EAAGA,EAAI/J,KAAKub,MAAM3c,OAAQmL,IACnC,GAAI8hD,GAAU4oB,iBAAiB8uC,EAAQvjH,KAAKub,MAAMxR,GAAG28F,SACjD,SAASpxF,EACjB,IAAInT,EAAI,IAAI4/G,GACZ5/G,EAAEoqC,IAAM42E,EAAOvnG,QACfzZ,EAAEoqC,IAAIh3B,OAAOguG,GACbphH,EAAEukG,QAAU6c,EACZphH,EAAEqhH,OAASxjH,KAAKyjH,YAAYthH,EAAEoqC,IAAK42E,GACnChhH,EAAE6/G,QAAU,EACZ7/G,EAAE8/G,QAAS,EACXjiH,KAAKub,MAAM/e,KAAK2F,EACpB,CACJ,CACA,WAAAuhH,CAAYhxE,GACR1yC,KAAKuiH,UAAY,EACjB,IAAIoB,GAAY,IAAIlmH,MAAOmmH,UACvBT,EAASnjH,KAAKusC,IAAI3wB,QAASu6C,EAASn2D,KAAKsiH,MAAM1mG,QAC/CioG,EAAW,GACf,GAAuB,MAAnB7jH,KAAKyiH,WAAoB,CACzB,IAAIqB,EAAYj4D,GAAUwqB,YAAYr2E,KAAKyiH,WAAW7mG,SACtD,IAAK,IAAI9L,EAAI,EAAGA,EAAI9P,KAAK0iH,SAAS9jH,WAC1B,IAAInB,MAAOmmH,UAAYD,EAA6B,IAAjB3jH,KAAK4iH,WADN9yG,IAGtC9P,KAAK+jH,iBAAiBF,EAAUV,EAAQnjH,KAAKyiH,WAAY/vE,EAAM1yC,KAAK0iH,SAAS5yG,IAC7E9P,KAAK+jH,iBAAiBF,EAAUV,EAAQW,EAAWpxE,EAAM1yC,KAAK0iH,SAAS5yG,GAE/E,CACA,IAAK9P,KAAKwiH,cAAe,CACrB,IAAIwB,EAAU7tD,EAAOv6C,QACrBiwC,GAAUwqB,YAAY2tC,GACtB,IAAK,IAAIl0G,EAAI,EAAGA,GAAKqmD,EAAO3pB,aACpB,IAAI/uC,MAAOmmH,UAAYD,EAA6B,IAAjB3jH,KAAK4iH,WADV9yG,IAGlC9P,KAAKikH,iBAAiBJ,EAAUV,EAAQhtD,EAAQzjB,EAAM5iC,GACtD9P,KAAKikH,iBAAiBJ,EAAUV,EAAQa,EAAStxE,EAAM5iC,GACvD9P,KAAKkkH,cAAcL,EAAUV,EAAQhtD,EAAQzjB,EAAM5iC,GACnD9P,KAAKkkH,cAAcL,EAAUV,EAAQa,EAAStxE,EAAM5iC,EAE5D,CACA9P,KAAKmkH,qBAAqBN,EAC9B,CACA,WAAAO,CAAYrmE,EAAIC,GACZh+C,KAAKuiH,UAAY,EACjB,IAAIoB,GAAY,IAAIlmH,MAAOmmH,UACvBT,EAASnjH,KAAKusC,IAAI3wB,QAASu6C,EAASn2D,KAAKsiH,MAAM1mG,QAC/CioG,EAAW,GACf,GAAuB,MAAnB7jH,KAAKyiH,WAAoB,CACzB,IAAIqB,EAAYj4D,GAAUwqB,YAAYr2E,KAAKyiH,WAAW7mG,SACtD,IAAK,IAAI7R,EAAI,EAAGA,EAAI/J,KAAK0iH,SAAS9jH,WAC1B,IAAInB,MAAOmmH,UAAYD,EAA6B,IAAjB3jH,KAAK4iH,WADN74G,IAAK,CAG3C,IAAIyf,EAAKxpB,KAAK0iH,SAAS34G,GACnBymC,EAAMxwC,KAAKyiH,WAAWp5D,YAAY7/B,GACtC,IAAK,IAAInT,EAAI,EAAGA,EAAIm6B,EAAI5xC,OAAQyX,IAAK,CACjC,IAAIoT,EAAK+mB,EAAIn6B,GACbrW,KAAKqkH,iBAAiBR,EAAUV,EAAQnjH,KAAKyiH,WAAY1kE,EAAIC,EAAIx0B,EAAIC,GAAI,GACzEzpB,KAAKqkH,iBAAiBR,EAAUV,EAAQnjH,KAAKyiH,WAAYzkE,EAAID,EAAIv0B,EAAIC,GAAI,GACzEzpB,KAAKqkH,iBAAiBR,EAAUV,EAAQW,EAAW/lE,EAAIC,EAAIx0B,EAAIC,GAAI,GACnEzpB,KAAKqkH,iBAAiBR,EAAUV,EAAQW,EAAW9lE,EAAID,EAAIv0B,EAAIC,GAAI,GACnEzpB,KAAKqkH,iBAAiBR,EAAUV,EAAQnjH,KAAKyiH,WAAY1kE,EAAIC,EAAIx0B,EAAIC,GAAI,GACzEzpB,KAAKqkH,iBAAiBR,EAAUV,EAAQnjH,KAAKyiH,WAAYzkE,EAAID,EAAIv0B,EAAIC,GAAI,GACzEzpB,KAAKqkH,iBAAiBR,EAAUV,EAAQW,EAAW/lE,EAAIC,EAAIx0B,EAAIC,GAAI,GACnEzpB,KAAKqkH,iBAAiBR,EAAUV,EAAQW,EAAW9lE,EAAID,EAAIv0B,EAAIC,GAAI,EACvE,CACJ,CACJ,CACA,IAAKzpB,KAAKwiH,cAAe,CACrB,IAAIwB,EAAU7tD,EAAOv6C,QACrBiwC,GAAUwqB,YAAY2tC,GACtB,IAAK,IAAIl0G,EAAI,EAAGA,GAAKqmD,EAAO1pB,aACpB,IAAIhvC,MAAOmmH,UAAYD,EAA6B,IAAjB3jH,KAAK4iH,WADV9yG,IAAK,CAGvC,IAAI62E,EAAMxwB,EAAOxpB,SAAS78B,GAAI82E,EAAMzwB,EAAOtpB,OAAO/8B,GAClD9P,KAAKskH,iBAAiBT,EAAUV,EAAQhtD,EAAQpY,EAAIC,EAAI2oC,EAAKC,GAC7D5mF,KAAKskH,iBAAiBT,EAAUV,EAAQa,EAASjmE,EAAIC,EAAI2oC,EAAKC,GAC9D5mF,KAAKskH,iBAAiBT,EAAUV,EAAQhtD,EAAQpY,EAAIC,EAAI4oC,EAAKD,GAC7D3mF,KAAKskH,iBAAiBT,EAAUV,EAAQa,EAASjmE,EAAIC,EAAI4oC,EAAKD,EAClE,CACJ,CACA3mF,KAAKmkH,qBAAqBN,EAC9B,CACA,YAAAU,CAAa5yE,GACT3xC,KAAKuiH,UAAY5wE,EAAM/yC,OACvB,IAAI+kH,GAAY,IAAIlmH,MAAOmmH,UACvBT,EAASnjH,KAAKusC,IAAI3wB,QAASu6C,EAASn2D,KAAKsiH,MAAM1mG,QAC/CioG,EAAW,GACf,GAAuB,MAAnB7jH,KAAKyiH,WAAoB,CACzB,IAAIqB,EAAYj4D,GAAUwqB,YAAYr2E,KAAKyiH,WAAW7mG,SAClD5b,KAAK0iH,SAAS9jH,QAAU+yC,EAAM/yC,SAC9BoB,KAAKwkH,mBAAmBX,EAAUV,EAAQnjH,KAAKyiH,WAAY9wE,EAAO3xC,KAAK0iH,UAAU,GACjF1iH,KAAKwkH,mBAAmBX,EAAUV,EAAQW,EAAWnyE,EAAO3xC,KAAK0iH,UAAU,IAE3E1iH,KAAK2iH,SAAS/jH,QAAU+yC,EAAM/yC,SAC9BoB,KAAKwkH,mBAAmBX,EAAUV,EAAQnjH,KAAKyiH,WAAY9wE,EAAO3xC,KAAK2iH,UAAU,GACjF3iH,KAAKwkH,mBAAmBX,EAAUV,EAAQW,EAAWnyE,EAAO3xC,KAAK2iH,UAAU,GAEnF,CACA,IAAK3iH,KAAKwiH,cAAe,CACrB,IAAIwB,EAAU7tD,EAAOv6C,QACrBiwC,GAAUwqB,YAAY2tC,GACtB,IAAK,IAAIl0G,EAAI,EAAGA,GAAKqmD,EAAO3pB,aACpB,IAAI/uC,MAAOmmH,UAAYD,EAA6B,IAAjB3jH,KAAK4iH,WADV9yG,IAGlC9P,KAAKykH,mBAAmBZ,EAAUV,EAAQhtD,EAAQxkB,EAAO7hC,GACzD9P,KAAKykH,mBAAmBZ,EAAUV,EAAQa,EAASryE,EAAO7hC,EAElE,CACA9P,KAAKmkH,qBAAqBN,EAC9B,CACA,aAAAZ,GACIjjH,KAAK0iH,SAAW,GAChB1iH,KAAK2iH,SAAW,GAChB,IAAK,IAAI7yG,EAAI,EAAGA,GAAK9P,KAAKsiH,MAAM91E,SAAU18B,IACtC,GAAiC,KAA7B9P,KAAKsiH,MAAMplE,YAAYptC,IAAa9P,KAAKsiH,MAAMzlE,aAAa/sC,GAAK,EAAG,CACpE9P,KAAK0iH,SAASlmH,KAAKsT,GACnB,IAAI0gC,EAAMxwC,KAAKsiH,MAAMj5D,YAAYv5C,GACjC,IAAK,IAAI/F,EAAI,EAAGA,EAAIymC,EAAI5xC,OAAQmL,IACxB/J,KAAK2iH,SAASnoG,QAAQg2B,EAAIzmC,IAAM,GAChC/J,KAAK2iH,SAASnmH,KAAKg0C,EAAIzmC,GACnC,CACJ,GAAI/J,KAAK0iH,SAAS9jH,OAAS,EAAG,CAC1BoB,KAAKyiH,WAAaziH,KAAKsiH,MAAM1mG,QAC7B,IAAK,IAAI9L,EAAI9P,KAAK0iH,SAAS9jH,OAAS,EAAGkR,GAAK,EAAGA,IAC3C9P,KAAKsiH,MAAMp1D,mBAAmBltD,KAAK0iH,SAAS5yG,GACpD,CACJ,CACA,gBAAAm0G,CAAiBx/F,EAAM0+F,EAAQhtD,EAAQuuD,EAAI5wF,GACvC,IAAI6wF,EAASx6D,GAAW4D,gBAAgBo1D,EAAQuB,GAC5CE,EAASz6D,GAAW4D,gBAAgBoI,EAAQriC,GAC5C+wF,EAAWh5D,GAAUuC,eAAe+0D,EAAQuB,GAC5CI,EAAWj5D,GAAUuC,eAAe+H,EAAQriC,GAC5Cy6D,EAAS,GAAIC,EAAS,GAAIu2B,EAAW,GACzC,IAAK,IAAIh7G,EAAI,EAAGA,EAAI86G,EAASjmH,OAAQmL,IACjC,IAAK,IAAIsM,EAAI,EAAGA,EAAIuuG,EAAOhmH,OAAQyX,IAC/Bk4E,EAAO/xF,KAAKqoH,EAAS96G,IACrBykF,EAAOhyF,KAAKooH,EAAOvuG,IACnB0uG,EAASvoH,MAAM,IAEvB,IAAK,IAAIuN,EAAI,EAAGA,EAAI46G,EAAO/lH,OAAQmL,IAC/B,IAAK,IAAIsM,EAAI,EAAGA,EAAIyuG,EAASlmH,OAAQyX,IACjCk4E,EAAO/xF,KAAKmoH,EAAO56G,IACnBykF,EAAOhyF,KAAKsoH,EAASzuG,IACrB0uG,EAASvoH,KAAK,GAEtB,IAAK,IAAIuN,EAAI,EAAGA,EAAI46G,EAAO/lH,OAAQmL,IAC/B,IAAK,IAAIsM,EAAI,EAAGA,EAAIuuG,EAAOhmH,OAAQyX,IAC/Bk4E,EAAO/xF,KAAKmoH,EAAO56G,IACnBykF,EAAOhyF,KAAKooH,EAAOvuG,IACnB0uG,EAASvoH,KAAK,GAEtB,IAAIwoH,EAAMl5E,GAAMQ,aAAa6pB,GAAQnmB,aAAa,GAC9Csb,EAAK63D,EAAO/3D,MAAMs5D,GAAKn5D,EAAK43D,EAAO93D,MAAMq5D,GAAKh1F,EAAKymC,EAAO/K,MAAMt3B,GAAKnE,EAAKwmC,EAAO9K,MAAMv3B,GAC3F,IAAK,IAAIhkB,EAAI,EAAGA,EAAIy+E,EAAO3vF,OAAQkR,IAAK,CACpC,IAAIygB,EAAMvM,EAAUuqE,EAAOz+E,GAAI0+E,EAAO1+E,IAClC26C,EAAO0L,EAAOv6C,QAClBiwC,GAAUuL,kBAAkB3M,EAAMa,EAAK57B,EAAI67B,EAAK57B,GAChDk8B,GAAUsL,eAAe1M,EAAMl6B,EAAK+6B,EAAIC,GACxC,IAAI05D,EAAO9B,EAAOvnG,QACdspG,EAAMD,EAAKz4E,SACfy4E,EAAK1vG,OAAOk1C,GACZ,IAAI+4D,EAASxjH,KAAKyjH,YAAYwB,EAAM9B,GAEpC,GADAh5D,GAAWiD,mBAAmB63D,EAAMjlH,KAAKmlH,OAAO3B,IAC5CyB,EAAKz4E,UAAY04E,EACjB,SACJ,IAAI/iH,EAAI,IAAI4/G,GACZ5/G,EAAEoqC,IAAM04E,EACR9iH,EAAEukG,QAAUj8C,EACZtoD,EAAEqhH,OAASA,EACXrhH,EAAEozD,OAAS,CAACmvD,GACZviH,EAAEijH,OAAS,CAACtxF,GACZ3xB,EAAE6/G,QAAUgD,EAAIlxF,EAAK,GACrB3xB,EAAE8/G,QAAS,EACX9/G,EAAEggH,cAAgB4C,EAASj1G,GAC3B9P,KAAKqlH,kBAAkBljH,EAAGghH,GAC1B1+F,EAAKjoB,KAAK2F,EACd,CACJ,CACA,gBAAAmiH,CAAiB7/F,EAAM0+F,EAAQhtD,EAAQuuD,EAAIY,EAAIxxF,EAAIC,GAC/C,IAAI23D,EAAM/0E,KAAKue,MAAMiuF,EAAO93D,MAAMi6D,GAAMnC,EAAO93D,MAAMq5D,GAAKvB,EAAO/3D,MAAMk6D,GAAMnC,EAAO/3D,MAAMs5D,IACtFa,EAAM5uG,KAAKue,MAAMihC,EAAO9K,MAAMt3B,GAAMoiC,EAAO9K,MAAMv3B,GAAKqiC,EAAO/K,MAAMr3B,GAAMoiC,EAAO/K,MAAMt3B,IACtF5G,EAAK,IAAOi2F,EAAO/3D,MAAMs5D,GAAMvB,EAAO/3D,MAAMk6D,IAAMn4F,EAAK,IAAOg2F,EAAO93D,MAAMq5D,GAAMvB,EAAO93D,MAAMi6D,IAC9F76D,EAAO0L,EAAOv6C,QAClBiwC,GAAUuL,kBAAkB3M,EAAMv9B,EAAK,IAAOipC,EAAO/K,MAAMt3B,GAAMqiC,EAAO/K,MAAMr3B,IAAM5G,EAAK,IAAOgpC,EAAO9K,MAAMv3B,GAAMqiC,EAAO9K,MAAMt3B,KAChI83B,GAAUsL,eAAe1M,EAAMihC,EAAM65B,EAAKr4F,EAAIC,GAC9Cs9B,EAAKU,WAAWr3B,EAAIqvF,EAAO/3D,MAAMs5D,GAAKvB,EAAO93D,MAAMq5D,IACnDj6D,EAAKU,WAAWp3B,EAAIovF,EAAO/3D,MAAMk6D,GAAKnC,EAAO93D,MAAMi6D,IACnD,IAAIL,EAAO9B,EAAOvnG,QACdspG,EAAMD,EAAKz4E,SACfy4E,EAAK1vG,OAAOk1C,GACZ,IAAI+4D,EAASxjH,KAAKyjH,YAAYwB,EAAM9B,GAEpC,GADAh5D,GAAWiD,mBAAmB63D,EAAMjlH,KAAKmlH,OAAO3B,IAC5CyB,EAAKz4E,UAAY04E,EACjB,OACJ,IAAIF,EAAMl5E,GAAMQ,aAAa6pB,GAAQnmB,aAAa,GAC9C7tC,EAAI,IAAI4/G,GACZ5/G,EAAEoqC,IAAM04E,EACR9iH,EAAEukG,QAAUj8C,EACZtoD,EAAEqhH,OAASA,EACXrhH,EAAEozD,OAAS,CAACmvD,EAAIY,GAChBnjH,EAAEijH,OAAS,CAACtxF,EAAIC,GAChB5xB,EAAE6/G,QAAUrrG,KAAKW,IAAI0tG,EAAIlxF,EAAK,GAAIkxF,EAAIjxF,EAAK,IAC3C5xB,EAAE8/G,QAAS,EACXjiH,KAAKqlH,kBAAkBljH,EAAGghH,GAC1B1+F,EAAKjoB,KAAK2F,EACd,CACA,kBAAAsiH,CAAmBhgG,EAAM0+F,EAAQhtD,EAAQqvD,EAAM1xF,GAC3C,IAAI22B,EAAO0L,EAAOv6C,QACdo3C,EAAKmwD,EAAO/3D,MAAMo6D,EAAK,IAAKvyD,EAAKkwD,EAAO93D,MAAMm6D,EAAK,IACvD35D,GAAUuL,kBAAkB3M,EAAMuI,EAAKvI,EAAKW,MAAMt3B,GAAKm/B,EAAKxI,EAAKY,MAAMv3B,IACvE,IAAIw3B,EAAK63D,EAAO/3D,MAAMo6D,EAAK,IAAMxyD,EAAIzH,EAAK43D,EAAO93D,MAAMm6D,EAAK,IAAMvyD,EAC9D0xD,EAAShuG,KAAKue,MAAMq2B,EAAID,GAAKm6D,EAAO1iG,EAAQuoC,EAAIC,GAChDy5D,EAAMl5E,GAAMQ,aAAa6pB,GAAQnmB,aAAa,GAC9C01E,EAAO,GACX,IAAK,IAAI3xF,EAAK,EAAGA,GAAM02B,EAAKje,SAAUzY,IAClC,GAAID,GAAMC,EAAI,CACV,IAAIrE,EAAK+6B,EAAKW,MAAMr3B,GAAM02B,EAAKW,MAAMt3B,GAAKnE,EAAK86B,EAAKY,MAAMt3B,GAAM02B,EAAKY,MAAMv3B,GAAK6xF,EAAO5iG,EAAQ2M,EAAIC,GACnG,GAAIhZ,KAAKuF,IAAIypG,EAAOF,GAAQ,GACxB,SACJ,IAAIb,EAASjuG,KAAKue,MAAMvF,EAAID,GAC5Bm8B,GAAUsL,eAAe1M,EAAMk6D,EAASC,EAAQ5xD,EAAIC,GACpDyyD,EAAO,CAAC5xF,EAAIC,GACZ,IAAK,IAAIhqB,EAAI,EAAGA,EAAIy7G,EAAK5mH,OAAQmL,IAAK,CAClC,IAAI6jD,GAAM,EACV,IAAK,IAAIv3C,EAAI,EAAGA,GAAKo0C,EAAKje,SAAUn2B,IAChC,GAAIqvG,EAAKlrG,QAAQnE,GAAK,GACd0M,EAAQogG,EAAO/3D,MAAMo6D,EAAKz7G,IAAM0gD,EAAKW,MAAM/0C,GAAI8sG,EAAO93D,MAAMm6D,EAAKz7G,IAAM0gD,EAAKY,MAAMh1C,IAAM,GAAM,GAAK,CACnGu3C,GAAM,EACN83D,EAAKlpH,KAAK6Z,GACV,KACJ,CACR,IAAKu3C,EACD,KACR,CACA,GAAI83D,EAAK9mH,OAAS4mH,EAAK5mH,OACnB,SACJ,IAAIgnH,EAASZ,EAAIpmH,OACjB,IAAK,IAAIkR,EAAI,EAAGA,EAAI41G,EAAK9mH,OAAQkR,IAC7B81G,EAASjvG,KAAKW,IAAIsuG,EAAQZ,EAAIU,EAAK51G,GAAK,IAC5C,IAAIkT,EAAK,EAAGC,EAAK,EACjB,IAAK,IAAInT,EAAI,EAAGA,EAAI01G,EAAK5mH,OAAQkR,IAC7BkT,GAAMmgG,EAAO/3D,MAAMo6D,EAAK11G,IAAM26C,EAAKW,MAAMs6D,EAAK51G,IAC9CmT,GAAMkgG,EAAO93D,MAAMm6D,EAAK11G,IAAM26C,EAAKY,MAAMq6D,EAAK51G,IAElD,IAAI2lB,EAAQ,EAAM+vF,EAAK5mH,OACvBokB,GAAMyS,EACNxS,GAAMwS,EACNo2B,GAAUuL,kBAAkB3M,EAAMznC,EAAIC,GACtC,IAAIgiG,EAAO9B,EAAOvnG,QACdspG,EAAMD,EAAKz4E,SACfy4E,EAAK1vG,OAAOk1C,GACZ,IAAI+4D,EAASxjH,KAAKyjH,YAAYwB,EAAM9B,GACpC,IAAK,IAAIrzG,EAAI,EAAGA,EAAI41G,EAAK9mH,OAAQkR,IAAK,CAClC,IAAI0S,EAAIyiG,EAAK75D,MAAMo6D,EAAK11G,IAAK4S,EAAIuiG,EAAK55D,MAAMm6D,EAAK11G,IACjDm1G,EAAK95D,WAAW+5D,EAAMQ,EAAK51G,GAAI0S,EAAGE,EACtC,CAEA,GADAynC,GAAWiD,mBAAmB63D,EAAMjlH,KAAKmlH,OAAO3B,IAC5CyB,EAAKz4E,UAAY04E,EACjB,SACJ,IAAI/iH,EAAI,IAAI4/G,GACZ5/G,EAAEoqC,IAAM04E,EACR9iH,EAAEukG,QAAUj8C,EAAK7uC,QACjBzZ,EAAEqhH,OAASA,EACXrhH,EAAEozD,OAASiwD,EAAKv2G,MAAM,GACtB9M,EAAEijH,OAASM,EAAKz2G,MAAM,GACtB9M,EAAE6/G,QAAUrrG,KAAKW,IAAI0tG,EAAIlxF,EAAK,GAAIkxF,EAAIjxF,EAAK,IAC3C5xB,EAAE8/G,QAAS,EACXjiH,KAAKqlH,kBAAkBljH,EAAGghH,GAC1B1+F,EAAKjoB,KAAK2F,EACd,CACR,CACA,aAAA+hH,CAAcz/F,EAAM0+F,EAAQhtD,EAAQuuD,EAAI5wF,GACpC,IAAI+xF,EAAoC,GAA5B1C,EAAO1vC,cAAcixC,IAAYvB,EAAOtmE,aAAa6nE,IAAO,EACpEoB,EAAoC,GAA5B3vD,EAAOsd,cAAc3/C,IAAYqiC,EAAOtZ,aAAa/oB,IAAO,EACxE,IAAK+xF,IAAUC,EACX,OACJ,IAAInB,EAASx6D,GAAW4D,gBAAgBo1D,EAAQuB,GAC5CE,EAASz6D,GAAW4D,gBAAgBoI,EAAQriC,GAC5CkxF,EAAMl5E,GAAMQ,aAAa6pB,GAAQnmB,aAAa,GAClD,IAAK,IAAIjmC,EAAI,EAAGA,EAAI46G,EAAO/lH,OAAQmL,IAC/B,IAAK,IAAIsM,EAAI,EAAGA,EAAIuuG,EAAOhmH,OAAQyX,IAAK,CACpC,IAAIi1C,EAAK63D,EAAO/3D,MAAMs5D,GAAKn5D,EAAK43D,EAAO93D,MAAMq5D,GAAKh1F,EAAKymC,EAAO/K,MAAMt3B,GAAKnE,EAAKwmC,EAAO9K,MAAMv3B,GACvF9Q,EAAKg6B,GAASsN,UAAY3zC,KAAK2a,IAAIqzF,EAAO56G,IAAKkZ,EAAK+5B,GAASsN,UAAY3zC,KAAK4a,IAAIozF,EAAO56G,IACzFwmB,EAAMvM,EAAU2gG,EAAO56G,GAAI4M,KAAK+M,GAAKkhG,EAAOvuG,IAC5Co0C,EAAO0L,EAAOv6C,QAClBiwC,GAAUuL,kBAAkB3M,EAAMa,EAAK57B,EAAK1M,EAAIuoC,EAAK57B,EAAK1M,GAC1D4oC,GAAUsL,eAAe1M,EAAMl6B,EAAK+6B,EAAKtoC,EAAIuoC,EAAKtoC,GAClD,IAAIgiG,EAAO9B,EAAOvnG,QACdmqG,EAAMd,EAAKz4E,SAAW1Y,EAAIoxF,EAAMD,EAAKz4E,SACzCy4E,EAAK1vG,OAAOk1C,GACZ,IAAI+4D,EAASxjH,KAAKyjH,YAAYwB,EAAM9B,GAKpC,GAJA8B,EAAK7xD,QAAQsxD,EAAIqB,EAAK,GACtBA,EAAMt7D,EAAKF,QAAQ,IAAKe,EAAIC,GAC5Bd,EAAK2I,QAAQt/B,EAAIiyF,EAAK,GACtB57D,GAAWiD,mBAAmB63D,EAAMjlH,KAAKmlH,OAAO3B,IAC5CyB,EAAKz4E,UAAY04E,EACjB,SACJ,IAAI/iH,EAAI,IAAI4/G,GACZ5/G,EAAEoqC,IAAM04E,EACR9iH,EAAEukG,QAAUj8C,EACZtoD,EAAEqhH,OAASA,EACXrhH,EAAEozD,OAAS,CAACmvD,GACZviH,EAAEijH,OAAS,CAACW,GACZ5jH,EAAE6/G,QAAUgD,EAAIlxF,EAAK,GACrB3xB,EAAE+/G,SAAU,EACZ//G,EAAE8/G,QAAS,EACXjiH,KAAKqlH,kBAAkBljH,EAAGghH,GAC1B1+F,EAAKjoB,KAAK2F,EACd,CACR,CACA,gBAAA4hH,CAAiBt/F,EAAM0+F,EAAQhtD,EAAQqvD,EAAMQ,GACzC,GAAiC,GAA7B7vD,EAAOtZ,aAAampE,GACpB,OACJ,IAAIrB,EAASx6D,GAAW4D,gBAAgBo1D,EAAQqC,GAChD,GAAIrvD,EAAOtZ,aAAampE,GAAQ,GAAK7C,EAAOtmE,aAAa2oE,GAAQ,EAAG,CAChE,IAAIl6D,EAAK,EAAGC,EAAK,EACb/a,EAAM2yE,EAAO95D,YAAYm8D,GAC7B,IAAK,IAAI11G,EAAI,EAAGA,EAAI0gC,EAAI5xC,OAAQkR,IAC5Bw7C,GAAM63D,EAAO/3D,MAAM5a,EAAI1gC,IAAMqzG,EAAO/3D,MAAMo6D,GAC1Cj6D,GAAM43D,EAAO93D,MAAM7a,EAAI1gC,IAAMqzG,EAAO93D,MAAMm6D,GAE9C,IAAIn1F,EAAM1Z,KAAKue,MAAMq2B,EAAID,GACrBtxC,GAAS,EACb,IAAK,IAAIlK,EAAI,EAAGA,EAAI60G,EAAO/lH,OAAQkR,IAC/B,GAAI6G,KAAKuF,IAAI8H,EAAUqM,EAAKs0F,EAAO70G,KAAO,EAAI+T,EAAQ,CAClD7J,GAAS,EACT,KACJ,CACAA,GACA2qG,EAAOnoH,KAAK6zB,EACpB,CACA,IAAI41F,EAAK9vD,EAAO/K,MAAM46D,GAAOE,EAAK/vD,EAAO9K,MAAM26D,GAC3ChjG,EAAK,EAAGC,EAAK,EACbutB,EAAM2lB,EAAO9M,YAAY28D,GAC7B,IAAK,IAAIl2G,EAAI,EAAGA,EAAI0gC,EAAI5xC,OAAQkR,IAC5BkT,GAAMmzC,EAAO/K,MAAM5a,EAAI1gC,IAAMm2G,EAC7BhjG,GAAMkzC,EAAO9K,MAAM7a,EAAI1gC,IAAMo2G,EAEjCljG,GAAMwtB,EAAI5xC,OACVqkB,GAAMutB,EAAI5xC,OACV,IAAIgmH,EAASjuG,KAAKue,MAAMjS,EAAID,GACxBmjG,EAAc,EAClB,GAAkB,GAAd31E,EAAI5xC,OAAa,CACjB,IAAIwnH,EAAMjD,EAAOjmE,YAAYsoE,GAAOa,EAAMlwD,EAAOjZ,YAAY1M,EAAI,IACtD,KAAP41E,GAAcA,GAAOC,IACrBF,EAAc,EACtB,CACA,IAAK,IAAIr2G,EAAI,EAAGA,EAAI60G,EAAO/lH,OAAQkR,IAAK,CACpC,IAAI26C,EAAO0L,EAAOv6C,QAClB,GAA4B,GAAxB5b,KAAK0iH,SAAS9jH,OACd,IAAK,IAAImL,EAAI,EAAGA,GAAK0gD,EAAKje,SAAUziC,IAChC,GAAIA,GAAKi8G,GAA+B,KAAvBv7D,EAAKvN,YAAYnzC,GAAW,CACzC0gD,EAAKwL,eAAelsD,EAAGs4G,GAAeiE,sBACtC,KACJ,CAERz6D,GAAUsL,eAAe1M,EAAMk6D,EAAO70G,GAAK80G,EAAQqB,EAAIC,GACvDr6D,GAAUuL,kBAAkB3M,EAAM04D,EAAO/3D,MAAMo6D,GAAQS,EAAI9C,EAAO93D,MAAMm6D,GAAQU,GAChF,IAAIjB,EAAO9B,EAAOvnG,QACdspG,EAAMD,EAAKz4E,SACfy4E,EAAK1vG,OAAOk1C,GACZ,IAAI+4D,EAASxjH,KAAKyjH,YAAYwB,EAAM9B,GAEpC,GADAh5D,GAAWiD,mBAAmB63D,EAAMjlH,KAAKmlH,OAAO3B,IAC5CyB,EAAKz4E,UAAY04E,EACjB,SACJ,IAAIqB,EAAM,EACV,IAAK,IAAIx8G,EAAI,EAAGA,GAAKk7G,EAAKz4E,SAAUziC,IAChC,GAAIk7G,EAAK/nE,YAAYnzC,IAAMs4G,GAAeiE,qBAAsB,CAC5D,IAAIE,EAAOvB,EAAK57D,YAAYt/C,GACT,GAAfy8G,EAAK5nH,SACL2nH,EAAMC,EAAK,GACPD,EAAMx8G,GACNw8G,KAERtB,EAAK/3D,mBAAmBnjD,GACxBy5G,EAAOl2G,OAAOvD,EAAI,EAAG,GACrB,KACJ,CACJ,IAAI5H,EAAI,IAAI4/G,GACZ5/G,EAAEoqC,IAAM04E,EACR9iH,EAAEukG,QAAUj8C,EACZtoD,EAAEqhH,OAASA,EACXrhH,EAAEozD,OAAS,CAACiwD,GACZrjH,EAAEijH,OAAS,CAACY,GACZ7jH,EAAE6/G,QAAU,EACZ7/G,EAAE8/G,QAAS,EACX9/G,EAAEggH,cAAgBgE,EAClBhkH,EAAEigH,YAAcmE,EAChBvmH,KAAKqlH,kBAAkBljH,EAAGghH,GAC1B1+F,EAAKjoB,KAAK2F,EACd,CACJ,CACA,gBAAAkiH,CAAiB5/F,EAAM0+F,EAAQhtD,EAAQuuD,EAAIY,EAAIU,EAAMN,EAAMe,GACvD,IAAIn7D,EAAK63D,EAAO/3D,MAAMs5D,GAAKn5D,EAAK43D,EAAO93D,MAAMq5D,GACzCuB,EAAK9vD,EAAO/K,MAAM46D,GAAOE,EAAK/vD,EAAO9K,MAAM26D,GAC3Ct2F,EAAKymC,EAAO/K,MAAMs6D,GAAO/1F,EAAKwmC,EAAO9K,MAAMq6D,GAC3Cf,EAAShuG,KAAKue,MAAMiuF,EAAO93D,MAAMi6D,GAAM/5D,EAAI43D,EAAO/3D,MAAMk6D,GAAMh6D,GAC9D+D,EAAS14C,KAAKue,MAAMvF,EAAKu2F,EAAIx2F,EAAKu2F,GAClCS,EAA+C,GAA3BvD,EAAOtmE,aAAa6nE,GACxCO,EAAO9B,EAAOvnG,QAAS6uC,EAAO0L,EAAOv6C,QACzCiwC,GAAUsL,eAAe1M,EAAMk6D,EAASt1D,EAAQ42D,EAAIC,GAChDO,GACA56D,GAAUuL,kBAAkB3M,EAAMa,EAAK26D,EAAI16D,EAAK26D,GAChDjB,EAAK95D,WAAWm6D,EAAI76D,EAAKW,MAAMs6D,GAAOj7D,EAAKY,MAAMq6D,MAGjD75D,GAAUuL,kBAAkB3M,EAAM04D,EAAO/3D,MAAMk6D,GAAM76D,EAAKW,MAAMs6D,GAAOvC,EAAO93D,MAAMi6D,GAAM76D,EAAKY,MAAMq6D,IACrGj7D,EAAKU,WAAW66D,EAAM16D,EAAIC,IAE9B,IAAI25D,EAAMD,EAAKz4E,SACfy4E,EAAK1vG,OAAOk1C,GACZ,IAAI+4D,EAASxjH,KAAKyjH,YAAYwB,EAAM9B,GAEpC,GADAh5D,GAAWiD,mBAAmB63D,EAAMjlH,KAAKmlH,OAAO3B,IAC5CyB,EAAKz4E,UAAY04E,EACjB,OACJ,IAAI/iH,EAAI,IAAI4/G,GACZ5/G,EAAEoqC,IAAM04E,EACR9iH,EAAEukG,QAAUj8C,EACZtoD,EAAEqhH,OAASA,EACXrhH,EAAEozD,OAAS,CAACmvD,EAAIY,GAChBnjH,EAAEijH,OAAS,CAACY,EAAMN,GAClBvjH,EAAE6/G,QAAU0E,EAAoB,EAAI,EACpCvkH,EAAE8/G,QAAS,EACXjiH,KAAKqlH,kBAAkBljH,EAAGghH,GAC1B1+F,EAAKjoB,KAAK2F,EACd,CACA,kBAAAqiH,CAAmB//F,EAAM0+F,EAAQhtD,EAAQqvD,EAAMQ,EAAMW,GACjD,IAAIC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EACrC,IAAK,IAAIj3G,EAAI,EAAGA,EAAI01G,EAAK5mH,OAAQkR,IAC7B82G,GAAOzD,EAAO/3D,MAAMo6D,EAAK11G,IACzB+2G,GAAO1D,EAAO93D,MAAMm6D,EAAK11G,IAE7B,IAAK,IAAIA,EAAI,EAAGA,EAAIk2G,EAAKpnH,OAAQkR,IAC7Bg3G,GAAO3wD,EAAO/K,MAAM46D,EAAKl2G,IACzBi3G,GAAO5wD,EAAO9K,MAAM26D,EAAKl2G,IAE7B82G,GAAOpB,EAAK5mH,OACZioH,GAAOrB,EAAK5mH,OACZkoH,GAAOd,EAAKpnH,OACZmoH,GAAOf,EAAKpnH,OACZ,IAAIsmH,EAAM/B,EAAO32E,SACjB,IAAK,IAAIziC,EAAI,EAAGA,EAAIy7G,EAAK5mH,OAAQmL,IAC7B,IAAK,IAAIsM,EAAI,EAAGA,EAAI2vG,EAAKpnH,OAAQyX,IAAK,CAClC,IAAI4uG,EAAO9B,EAAOvnG,QAAS6uC,EAAO0L,EAAOv6C,QACrCqI,EAAMtN,KAAKue,MAAM+vF,EAAK55D,MAAMm6D,EAAKz7G,IAAM88G,EAAK5B,EAAK75D,MAAMo6D,EAAKz7G,IAAM68G,GAClE1iG,EAAMvN,KAAKue,MAAMu1B,EAAKY,MAAM26D,EAAK3vG,IAAM0wG,EAAKt8D,EAAKW,MAAM46D,EAAK3vG,IAAMywG,GACtEj7D,GAAUsL,eAAe1M,EAAMxmC,EAAMC,EAAK4iG,EAAKC,GAC/Cl7D,GAAUuL,kBAAkB3M,EAAMm8D,EAAME,EAAKD,EAAME,GACnD9B,EAAK1vG,OAAOk1C,GACZ,IAAI+4D,EAASxjH,KAAKyjH,YAAYwB,EAAM9B,GAChC6D,EAAO,EAAIjwG,YAAY,EAAGivG,EAAKpnH,QAASqoH,EAAOjB,EAAK/2G,MAAM,GAC9D,EAAIyK,KAAKutG,GACT,IAAI7uG,EAAO,EAAIvB,cAAa,EAAOquG,GACnC,IAAK,IAAI3lG,EAAI0nG,EAAKroH,OAAS,EAAG2gB,GAAK,EAAGA,IAAK,CACvC,IAAI2nG,EAAQD,EAAK1nG,GAAK2lG,EAClB3mF,EAAU,EAAG4oF,EAAW,EAC5B,IAAK,IAAIr3G,EAAI,EAAGA,EAAI01G,EAAK5mH,OAAQkR,IAC7B,IAAKsI,EAAKotG,EAAK11G,GAAK,GAAI,CACpB,IACIsiB,EAAMrP,EADDkiG,EAAK75D,MAAMo6D,EAAK11G,IAAMm1G,EAAK75D,MAAM87D,GAAajC,EAAK55D,MAAMm6D,EAAK11G,IAAMm1G,EAAK55D,MAAM67D,KAEzE,GAAX3oF,GAAgBnM,EAAM+0F,KACtB5oF,EAAUinF,EAAK11G,GACfq3G,EAAW/0F,EAEnB,CACJ,IAAKu0F,EAAU,CAEX,GADU5jG,EAAQkiG,EAAK75D,MAAM87D,GAASjC,EAAK75D,MAAM7sB,GAAU0mF,EAAK55D,MAAM67D,GAASjC,EAAK55D,MAAM9sB,IAChF,GAAM,GAAK,CACjB,IAAIoR,EAAM8a,EAAKF,QAAQ,IAAK06D,EAAK75D,MAAM7sB,GAAU0mF,EAAK55D,MAAM9sB,IAC5DksB,EAAK2I,QAAQzjB,EAAKs3E,EAAK1nG,GAAI,EAC/B,CACA0lG,EAAK95D,WAAW5sB,EAAS0mF,EAAK75D,MAAM87D,GAAQjC,EAAK55D,MAAM67D,GAC3D,CACAF,EAAKznG,GAAKgf,EACVnmB,EAAKmmB,EAAU,IAAK,EACpB,IAAIiS,EAAMy0E,EAAK57D,YAAY69D,GAC3B,IAAK,IAAIp3G,EAAI,EAAGA,EAAI0gC,EAAI5xC,OAAQkR,IAAK,CACjC,IAAIF,EAAIq1G,EAAK9wE,SAAS+yE,EAAO12E,EAAI1gC,IACjCm1G,EAAK7xD,QAAQ70B,EAASiS,EAAI1gC,GAAIm1G,EAAK/wE,UAAUtkC,GAAIq1G,EAAKnvD,SAASlmD,GACnE,CACAq1G,EAAK/3D,mBAAmBg6D,GACxB1D,EAAOl2G,OAAO45G,EAAQ,EAAG,GACzBz8D,EAAKU,WAAW87D,EAAK1nG,GAAI0lG,EAAK75D,MAAM7sB,GAAU0mF,EAAK55D,MAAM9sB,GAC7D,CACA,IAAK,IAAIzuB,EAAIm1G,EAAKz4E,SAAU18B,EAAIo1G,EAAKp1G,IACjC,GAA2B,KAAvBm1G,EAAK/nE,YAAYptC,GAAW,CAC5Bm1G,EAAK/3D,mBAAmBp9C,GACxB0zG,EAAOl2G,OAAOwC,EAAI,EAAG,GACrB,IAAK,IAAIhO,EAAI,EAAGA,EAAImlH,EAAKroH,OAAQkD,IACzBgO,EAAIm3G,EAAKnlH,IACTmlH,EAAKnlH,IACjB,CACJ,IAAK,IAAIgO,EAAI26C,EAAKje,SAAU18B,GAAK,EAAGA,IACL,KAAvB26C,EAAKvN,YAAYptC,IACjB26C,EAAKwL,eAAenmD,EAAG,KAE/B,IAAI3N,EAAI,IAAI4/G,GACZ5/G,EAAEoqC,IAAM04E,EACR9iH,EAAEukG,QAAUj8C,EACZtoD,EAAEqhH,OAASA,EACXrhH,EAAEozD,OAASyxD,EACX7kH,EAAEijH,OAAS6B,EACX9kH,EAAE6/G,QAAU,EACZ7/G,EAAE8/G,QAAS,EACXjiH,KAAKqlH,kBAAkBljH,EAAGghH,GAC1B1+F,EAAKjoB,KAAK2F,EACd,CACR,CACA,oBAAAgiH,CAAqB1/F,GACjB,IAAI2iG,EAAO3iG,EAAK7lB,OAChB,GAAY,GAARwoH,EACA,OACJ,IAAIC,EAAQ,EAAIxwG,cAAa,EAAMuwG,GACnC,IAAK,IAAIr9G,EAAI,EAAGA,EAAIq9G,EAAO,EAAGr9G,IAC1B,GAAIs9G,EAAMt9G,GAAI,CACV,IAAIoiB,EAAK1H,EAAK1a,GACd,IAAK,IAAIsM,EAAItM,EAAI,EAAGsM,EAAI+wG,EAAM/wG,IAC1B,GAAIgxG,EAAMhxG,GAAI,CACV,IAAIsnC,EAAKl5B,EAAKpO,GACVw1C,GAAU4oB,iBAAiBtoD,EAAGogB,IAAKoR,EAAGpR,OAClCpgB,EAAGg2F,cAAgBh2F,EAAG61F,QAAUrkE,EAAGwkE,cAAgBxkE,EAAGqkE,UACtDv9F,EAAK1a,GAAK4zC,EACVl5B,EAAKpO,GAAK8V,GAEdk7F,EAAMhxG,IAAK,EAEnB,CACR,CACJ,IAAIu0C,EAAQ,EAAI7zC,YAAY,EAAGqwG,GAC3BE,EAAU,EACd,IAAK,IAAIx3G,EAAI,EAAGA,EAAIs3G,EAAMt3G,IAClBu3G,EAAMv3G,IACN86C,EAAM96C,GAAK9P,KAAKunH,iBAAiB9iG,EAAK3U,IAClC86C,EAAM96C,GAAK,KACXw3G,KAGJ18D,EAAM96C,GAAK,EAEnB,GAAIw3G,EAAU,EACV,IAAK,IAAIx3G,EAAI,EAAGA,EAAIs3G,EAAMt3G,IAClBu3G,EAAMv3G,IAAM86C,EAAM96C,IAAM,MACxBu3G,EAAMv3G,IAAK,GACvB,IAAI03G,EAAS,GAAIC,EAAO,GACxB,IAAK,IAAI33G,EAAI,EAAGA,EAAIs3G,EAAMt3G,IAClBu3G,EAAMv3G,KACN03G,EAAOhrH,KAAKouD,EAAM96C,IAClB23G,EAAKjrH,KAAKsT,IAElB,IAAIu+D,EAAO,EAAI50D,QAAQ+tG,GACvB,IAAK,IAAI13G,EAAI,EAAGA,EAAIu+D,EAAKzvE,OAAQkR,IAAK,CAClC,IAAI3N,EAAIsiB,EAAKgjG,EAAKp5C,EAAKv+D,KACnB3N,EAAE8/G,QACFjiH,KAAKub,MAAM/e,KAAK2F,EAExB,CACA,IAAK,IAAI2N,EAAI,EAAGA,EAAIu+D,EAAKzvE,OAAQkR,IAAK,CAClC,IAAI3N,EAAIsiB,EAAKgjG,EAAKp5C,EAAKv+D,KAClB3N,EAAE8/G,QACHjiH,KAAKub,MAAM/e,KAAK2F,EAExB,CACJ,CACA,iBAAAkjH,CAAkBqC,EAAMvE,GACpBl3D,GAAQkB,qBAAqBu6D,EAAKn7E,KAClC,IAAK,IAAIz8B,EAAI43G,EAAKtC,OAAOxmH,OAAS,EAAGkR,GAAK,EAAGA,IAAK,CAC9C,IAAIqR,EAAKumG,EAAKhhB,QAAQxpD,YAAYwqE,EAAKtC,OAAOt1G,IACpC,KAANqR,GAAaA,GAAMkhG,GAAeiE,uBAEtCoB,EAAKnyD,OAAOjoD,OAAOwC,EAAG,GACtB43G,EAAKtC,OAAO93G,OAAOwC,EAAG,GAC1B,CACA,IAAK,IAAIA,EAAI43G,EAAKhhB,QAAQl6D,SAAU18B,GAAK,EAAGA,IAAK,CAC7C,IAAIqR,EAAKumG,EAAKhhB,QAAQxpD,YAAYptC,GAClC,GAAU,KAANqR,GAAaA,GAAMkhG,GAAeiE,qBAGtC,GADQz6D,GAAUiF,YAAYqyD,EAAQuE,EAAKhhB,QAAQt7C,MAAMt7C,GAAI43G,EAAKhhB,QAAQr7C,MAAMv7C,IACxE,EACJ43G,EAAKhhB,QAAQzwC,eAAenmD,EAAG,SAC9B,CACD43G,EAAKhhB,QAAQx5C,mBAAmBp9C,GAChC,IAAK,IAAI/F,EAAI,EAAGA,EAAI29G,EAAKtC,OAAOxmH,OAAQmL,IAChC29G,EAAKtC,OAAOr7G,GAAK+F,GACjB43G,EAAKtC,OAAOr7G,IACxB,CACJ,CACJ,CACA,gBAAAw9G,CAAiBG,GACb,IAAIn7E,EAAMvsC,KAAKusC,IAAKo7E,EAAOD,EAAKhhB,QAASkhB,EAASF,EAAKn7E,IACnDqe,EAAQ,GAAM88D,EAAK1F,QAAU0F,EAAKvF,cACtCv3D,GAASiB,GAAU+pB,mBAAmBgyC,EAAQ,MAC9Ch9D,GAASg9D,EAAOp7E,SAChB,IAAIt2B,EAAMq2B,EAAIC,SAAUr2B,EAAMwxG,EAAKn7E,SAC/BuoC,EAAM,GAAIC,EAAM,GAAIC,EAAM,GAAIC,EAAM,GACxC,IAAK,IAAIplE,EAAI,EAAGA,EAAIoG,EAAKpG,IACrBilE,EAAIv4E,KAAK+vC,EAAI6e,MAAMt7C,EAAI,IACvBklE,EAAIx4E,KAAK+vC,EAAI8e,MAAMv7C,EAAI,IAE3B,IAAK,IAAIA,EAAI,EAAGA,EAAIqG,EAAKrG,IACrBmlE,EAAIz4E,KAAKmrH,EAAKv8D,MAAMt7C,EAAI,IACxBolE,EAAI14E,KAAKmrH,EAAKt8D,MAAMv7C,EAAI,IAE5B,IAAK,IAAI/F,EAAI,EAAGA,EAAImM,EAAKnM,IACrB,IAAK,IAAIsM,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC1B,GAAI0M,EAAQgyD,EAAIhrE,GAAKkrE,EAAI5+D,GAAI2+D,EAAIjrE,GAAKmrE,EAAI7+D,IAAMw1C,GAAUW,qBACtD,SACJ,IAAIq7D,GAAY,EAChB,IAAK,IAAI/lH,EAAI,EAAGA,EAAI4lH,EAAKnyD,OAAO32D,OAAQkD,IACpC,GAAI4lH,EAAKnyD,OAAOzzD,IAAMiI,EAAI,GAAK29G,EAAKtC,OAAOtjH,IAAMuU,EAAI,EAAG,CACpDwxG,GAAY,EACZ,KACJ,CACAA,IAEJj9D,GAAS,IACb,CACJ,IAAK88D,EAAKzF,OACN,IAAK,IAAInyG,EAAI,EAAGA,EAAI43G,EAAKnyD,OAAO32D,OAAQkR,IAAK,CACzC,IAAIqR,EAAKorB,EAAI2Q,YAAYwqE,EAAKnyD,OAAOzlD,IACrC,GAAU,KAANqR,GAAmB,KAANA,GAAmB,KAANA,GAAmB,KAANA,GAAmB,KAANA,EACpD,SACJ,IAAIuxF,EAAOnmE,EAAI8c,YAAYq+D,EAAKnyD,OAAOzlD,IAAK6iG,EAAOgV,EAAKt+D,YAAYq+D,EAAKtC,OAAOt1G,IAChF,KAAI4iG,EAAK9zG,OAAS+zG,EAAK/zG,QAAU,GAEjC,IAAK,IAAImL,EAAI,EAAGA,EAAI2oG,EAAK9zG,OAAQmL,IAC7B,IAAK,IAAIsM,EAAI,EAAGA,EAAIs8F,EAAK/zG,OAAQyX,IAAK,CAClC,IAAIyxG,EAAKpV,EAAK3oG,GAAIg+G,EAAKpV,EAAKt8F,GACxB2xG,EAAMz7E,EAAI2H,UAAU3H,EAAI4H,SAASuzE,EAAKnyD,OAAOzlD,GAAIg4G,IACjDG,EAAMN,EAAKzzE,UAAUyzE,EAAKxzE,SAASuzE,EAAKtC,OAAOt1G,GAAIi4G,IACnDG,EAAY,EAChB,GAAY,GAAPF,GAAmB,GAAPC,GAAqB,GAAPD,GAAmB,GAAPC,GAAqB,GAAPD,GAAmB,GAAPC,EACjEC,EAAY,QACX,MAAY,GAAPF,GAAmB,GAAPC,GAAqB,GAAPD,GAAmB,GAAPC,GAAqB,GAAPD,GAAmB,GAAPC,GAGtE,SAFAC,EAAY,GAEJ,CACZ,IAAInkB,EAAMhvB,EAAI+yC,EAAK,GAAK/yC,EAAI2yC,EAAKnyD,OAAOzlD,GAAK,GACzCk0F,EAAMhvB,EAAI8yC,EAAK,GAAK9yC,EAAI0yC,EAAKnyD,OAAOzlD,GAAK,GACzCo0F,EAAMjvB,EAAI8yC,EAAK,GAAK9yC,EAAIyyC,EAAKtC,OAAOt1G,GAAK,GACzCq0F,EAAMjvB,EAAI6yC,EAAK,GAAK7yC,EAAIwyC,EAAKtC,OAAOt1G,GAAK,GACzCqU,EAAQxN,KAAKuF,IAAI8H,EAAUrN,KAAKue,MAAM8uE,EAAKD,GAAMptF,KAAKue,MAAMivE,EAAKD,KAASrgF,EAC1ElN,KAAKuF,IAAIiI,EAAQ+jG,GAAa,IAC9Bt9D,GAAS,GACjB,CACR,CACJ,IAAK,IAAI96C,EAAI,EAAGA,GAAK83G,EAAOp7E,SAAU18B,IAClC,GAA6B,KAAzB83G,EAAO1qE,YAAYptC,IAAsC,KAAzB83G,EAAO1qE,YAAYptC,GAAW,CAC9D,IAAIgiD,EAAO81D,EAAO71D,aAAajiD,GAC3Bq4G,EAAU,EACd,IAAK,IAAIp+G,EAAI,EAAGA,EAAI+nD,EAAKlzD,OAAQmL,IAAK,CAClC,IAAIyxD,EAAKosD,EAAO1zE,UAAU4d,EAAK/nD,IAE/B,GADAo+G,GAAW3sD,EACD,GAANA,EAAS,CACT2sD,EAAU,EACV,KACJ,CACJ,CACIA,EAAU,IACVv9D,GAAS,IACjB,CACJ,GAAI88D,EAAKnyD,OAAO32D,QAAU,EAAG,CACzB,IAAIwpH,EAAQ,EAAIvxG,cAAa,EAAOX,GACpC,IAAK,IAAIpG,EAAI,EAAGA,EAAI43G,EAAKnyD,OAAO32D,OAAQkR,IACpCs4G,EAAMV,EAAKnyD,OAAOzlD,GAAK,IAAK,EAChC,IAAK,IAAIA,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,IAAI48B,EAAMH,EAAII,SAAS78B,GAAI88B,EAAML,EAAIM,OAAO/8B,GAC5C,IAAKs4G,EAAM17E,EAAM,KAAO07E,EAAMx7E,EAAM,GAChC,SACJ,IAAIy7E,EAAMX,EAAKnyD,OAAO/6C,QAAQkyB,GAAM47E,EAAMZ,EAAKnyD,OAAO/6C,QAAQoyB,GAC1D27E,EAAKZ,EAAKxzE,SAASuzE,EAAKtC,OAAOiD,GAAMX,EAAKtC,OAAOkD,IAC3C,GAANC,GAEAh8E,EAAI2H,UAAUpkC,IAAM63G,EAAKzzE,UAAUq0E,KACnC39D,GAAS,EACjB,CACJ,CACA,OAAOA,CACX,CACA,WAAA64D,CAAY5rD,EAAM2wD,GACd,IAAI3yG,EAAM,EAAIkB,YAAY,EAAG8gD,EAAKrrB,UAClC,IAAK,IAAI18B,EAAI04G,EAAKh8E,SAAU18B,GAAK,EAAGA,IAChC+F,EAAI/F,EAAI,GAAKA,EACjB,OAAO+F,CACX,CACA,MAAAsvG,CAAOsD,GACH,IAAI/hH,EAAM,EAAImQ,cAAa,EAAO4xG,EAAM7pH,QACxC,IAAK,IAAIkR,EAAI,EAAGA,EAAI24G,EAAM7pH,OAAQkR,IAC9BpJ,EAAIoJ,GAAiB,GAAZ24G,EAAM34G,GACnB,OAAOpJ,CACX,EC3tBG,IAAIgiH,GD6tBXrG,GAAeiE,qBAAuB,MC5tBtC,SAAWoC,GACPA,EAAaA,EAAqB,OAAI,GAAK,SAC3CA,EAAaA,EAAoB,MAAI,GAAK,QAC1CA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAkB,IAAI,GAAK,MACxCA,EAAaA,EAAwB,UAAI,GAAK,YAC9CA,EAAaA,EAAyB,WAAI,GAAK,aAC/CA,EAAaA,EAA6B,eAAI,GAAK,iBACnDA,EAAaA,EAA6B,eAAI,GAAK,iBACnDA,EAAaA,EAAyB,WAAI,GAAK,aAC/CA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAA0B,YAAI,IAAM,cACjDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAA4B,cAAI,IAAM,gBACnDA,EAAaA,EAA+B,iBAAI,IAAM,mBACtDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAA8B,gBAAI,IAAM,kBACrDA,EAAaA,EAAsB,QAAI,IAAM,UAC7CA,EAAaA,EAAsB,QAAI,IAAM,UAC7CA,EAAaA,EAAqB,OAAI,IAAM,SAC5CA,EAAaA,EAAsB,QAAI,IAAM,UAC7CA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAA0B,YAAI,IAAM,cACjDA,EAAaA,EAAwB,UAAI,IAAM,YAC/CA,EAAaA,EAAuB,SAAI,IAAM,WAC9CA,EAAaA,EAAuB,SAAI,IAAM,WAC9CA,EAAaA,EAAuB,SAAI,IAAM,WAC9CA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAAmB,KAAI,IAAM,OAC1CA,EAAaA,EAAoB,MAAI,IAAM,QAC3CA,EAAaA,EAAwB,UAAI,IAAM,YAC/CA,EAAaA,EAAuB,SAAI,IAAM,WAC9CA,EAAaA,EAAmB,KAAI,IAAM,OAC1CA,EAAaA,EAAoB,MAAI,IAAM,QAC3CA,EAAaA,EAAqB,OAAI,IAAM,SAC5CA,EAAaA,EAAuB,SAAI,IAAM,WAC9CA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAA4B,cAAI,IAAM,gBACnDA,EAAaA,EAAmB,KAAI,IAAM,OAC1CA,EAAaA,EAAmB,KAAI,IAAM,OAC1CA,EAAaA,EAA6B,eAAI,IAAM,iBACpDA,EAAaA,EAA0B,YAAI,IAAM,cACjDA,EAAaA,EAA0B,YAAI,IAAM,cACjDA,EAAaA,EAA4B,cAAI,IAAM,gBACnDA,EAAaA,EAA0B,YAAI,IAAM,cACjDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAA+B,iBAAI,IAAM,mBACtDA,EAAaA,EAA+B,iBAAI,IAAM,mBACtDA,EAAaA,EAAgC,kBAAI,IAAM,oBACvDA,EAAaA,EAAgC,kBAAI,IAAM,oBACvDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAA8B,gBAAI,IAAM,kBACrDA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAAwB,UAAI,IAAM,YAC/CA,EAAaA,EAAyB,WAAI,IAAM,aAChDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAA2B,aAAI,IAAM,eAClDA,EAAaA,EAA8B,gBAAI,IAAM,iBACxD,CAjED,CAiEGA,KAAiBA,GAAe,CAAC,IAC7B,MAAMC,GACT,WAAAzrH,CAAY8N,EAAO49G,EAAUC,EAAOC,GAChC9oH,KAAKgL,MAAQA,EACbhL,KAAK4oH,SAAWA,EAChB5oH,KAAK6oH,MAAQA,EACb7oH,KAAK8oH,MAAQA,EACb9oH,KAAK+oH,YAAc,KACnB/oH,KAAKiL,OACD,CACIshC,IAAK,KACLy8E,aAAc,EACdC,aAAc,EACdC,aAAc,MAEtB,IAAI1sE,EAAKx8C,KAAKgL,MAAMuhC,IAAIC,SAGxB,IAF+B,MAA3BxsC,KAAKgL,MAAMk+G,eACXlpH,KAAKgL,MAAMk+G,aAAe,EAAIryG,cAAa,EAAO2lC,IAC/Cx8C,KAAKgL,MAAMk+G,aAAatqH,OAAS49C,GACpCx8C,KAAKgL,MAAMk+G,aAAa1sH,MAAK,GAKjC,GAJAwD,KAAKmpH,YAAcnpH,KAAKgL,MAAMk+G,aAAaj6G,MAAM,GACjDjP,KAAKopH,cAAgB,EAAI9wG,UAAUtY,KAAKmpH,aACxCnpH,KAAKqpH,aAAe,GACpBrpH,KAAKspH,YAActpH,KAAKopH,cAAgB,EACd,GAAtBppH,KAAKopH,eACL,GAAIppH,KAAKgL,MAAMg+G,YAAc,EACzBhpH,KAAKopH,cAAgB,EACrBppH,KAAKmpH,YAAYnpH,KAAKgL,MAAMg+G,YAAc,IAAK,EAC/ChpH,KAAKqpH,aAAe,CAACrpH,KAAKgL,MAAMg+G,kBAE/B,GAAIhpH,KAAKgL,MAAMi+G,YAAc,EAAG,CACjC,IAAIv8E,EAAM1sC,KAAKgL,MAAMuhC,IAAII,SAAS3sC,KAAKgL,MAAMi+G,aAAcr8E,EAAM5sC,KAAKgL,MAAMuhC,IAAIM,OAAO7sC,KAAKgL,MAAMi+G,aAC9Fn0D,EAAKn+C,KAAKW,IAAIo1B,EAAKE,GAAMmoB,EAAKp+C,KAAKC,IAAI81B,EAAKE,GAChD5sC,KAAKopH,cAAgB,EACrBppH,KAAKmpH,YAAYr0D,EAAK,IAAK,EAC3B90D,KAAKmpH,YAAYp0D,EAAK,IAAK,EAC3B/0D,KAAKqpH,aAAe,CAACv0D,EAAIC,EAC7B,OAGA/0D,KAAKqpH,aAAe,EAAI7wG,QAAQxY,KAAKmpH,aACrC,EAAIhwG,MAAMnZ,KAAKqpH,aAAc,EAErC,CACA,QAAAE,CAAST,GACL9oH,KAAK8oH,MAAQA,CACjB,CACA,QAAAU,GACI,OAAO,CACX,CACA,OAAAC,GACI,IAAIZ,EAAQ7oH,KAAK6oH,MACjB,GAAI7oH,KAAK4oH,UAAYF,GAAagB,OAC9B1pH,KAAK2pH,kBACJ,GAAI3pH,KAAK4oH,UAAYF,GAAakB,MACnC5pH,KAAK6pH,iBACJ,GAAI7pH,KAAK4oH,UAAYF,GAAaoB,KACnC9pH,KAAK+pH,UAAS,QACb,GAAI/pH,KAAK4oH,UAAYF,GAAasB,IACnChqH,KAAK+pH,UAAS,QACb,GAAI/pH,KAAK4oH,UAAYF,GAAauB,UACnCjqH,KAAKkqH,eAAc,QAClB,GAAIlqH,KAAK4oH,UAAYF,GAAayB,WACnCnqH,KAAKkqH,eAAc,QAClB,GAAIlqH,KAAK4oH,UAAYF,GAAa0B,eACnCpqH,KAAKqqH,gBAAgB,QACpB,GAAIrqH,KAAK4oH,UAAYF,GAAa4B,eACnCtqH,KAAKqqH,eAAe,QACnB,GAAIrqH,KAAK4oH,UAAYF,GAAa6B,WACnCvqH,KAAKwqH,sBACJ,GAAIxqH,KAAK4oH,UAAYF,GAAa+B,WACnCzqH,KAAK0qH,sBACJ,GAAI1qH,KAAK4oH,UAAYF,GAAaiC,aACnC3qH,KAAK4qH,wBACJ,GAAI5qH,KAAK4oH,UAAYF,GAAamC,YACnC7qH,KAAK8qH,uBACJ,GAAI9qH,KAAK4oH,UAAYF,GAAaqC,aACnC/qH,KAAKgrH,wBACJ,GAAIhrH,KAAK4oH,UAAYF,GAAauC,cACnCjrH,KAAKkrH,yBACJ,GAAIlrH,KAAK4oH,UAAYF,GAAayC,iBACnCnrH,KAAKorH,4BACJ,GAAIprH,KAAK4oH,UAAYF,GAAa2C,aACnCrrH,KAAKsrH,wBACJ,GAAItrH,KAAK4oH,UAAYF,GAAa6C,gBACnCvrH,KAAKwrH,2BACJ,GAAIxrH,KAAK4oH,UAAYF,GAAa+C,QACnCzrH,KAAK0rH,YAAY7C,EAAMl2C,QAASk2C,EAAM8C,UAAW9C,EAAM+C,UAAW/C,EAAMgD,iBACvE,GAAI7rH,KAAK4oH,UAAYF,GAAaoD,OACnC9rH,KAAK+rH,WAAWlD,EAAMl4F,YACrB,GAAI3wB,KAAK4oH,UAAYF,GAAasD,QACnChsH,KAAKisH,YAAY,EAAGjvE,GAAS+Y,sBAC5B,GAAI/1D,KAAK4oH,UAAYF,GAAawD,WACnClsH,KAAKmsH,sBACJ,GAAInsH,KAAK4oH,UAAYF,GAAalK,YACnCx+G,KAAKosH,uBACJ,GAAIpsH,KAAK4oH,UAAYF,GAAa2D,UACnCrsH,KAAKssH,SAASzD,EAAMpmE,MAAOzF,GAAS+Y,sBACnC,GAAI/1D,KAAK4oH,UAAYF,GAAa6D,SACnCvsH,KAAKssH,SAAS,EAAGzD,EAAM9qH,WACtB,GAAIiC,KAAK4oH,UAAYF,GAAa8D,SACnCxsH,KAAKysH,aAAa5D,EAAMp7D,WACvB,GAAIztD,KAAK4oH,UAAYF,GAAagE,SACnC1sH,KAAK2sH,aAAa9D,EAAMpmE,MAAOomE,EAAM9qH,KAAM8qH,EAAMl2C,QAASk2C,EAAMlkG,GAAIkkG,EAAMjkG,GAAIikG,EAAMhkG,GAAIgkG,EAAM/jG,SAC7F,GAAI9kB,KAAK4oH,UAAYF,GAAakE,WACnC5sH,KAAK6sH,sBACJ,GAAI7sH,KAAK4oH,UAAYF,GAAaoE,WACnC9sH,KAAK+sH,sBACJ,GAAI/sH,KAAK4oH,UAAYF,GAAasE,WACnChtH,KAAKitH,sBACJ,GAAIjtH,KAAK4oH,UAAYF,GAAawE,WACnCltH,KAAKmtH,sBACJ,GAAIntH,KAAK4oH,UAAYF,GAAa0E,KACnCptH,KAAKqtH,gBACJ,GAAIrtH,KAAK4oH,UAAYF,GAAa4E,MACnCttH,KAAKutH,UAAU1E,EAAMpgD,IAAK,SACzB,GAAIzoE,KAAK4oH,UAAYF,GAAa8E,UACnCxtH,KAAKutH,UAAU1E,EAAMpgD,IAAK,QACzB,GAAIzoE,KAAK4oH,UAAYF,GAAa+E,SACnCztH,KAAK0tH,aAAa7E,EAAMpgD,UACvB,GAAIzoE,KAAK4oH,UAAYF,GAAaiF,KACnC3tH,KAAK4tH,SAAS/E,EAAMgF,WACnB,GAAI7tH,KAAK4oH,UAAYF,GAAaoF,MACnC9tH,KAAK+tH,UAAUlF,EAAMpxF,UACpB,GAAIz3B,KAAK4oH,UAAYF,GAAasF,OACnChuH,KAAKiuH,WAAWpF,EAAM1kG,MAAO0kG,EAAM9+F,QAAS8+F,EAAM7+F,cACjD,GAAIhqB,KAAK4oH,UAAYF,GAAawF,SACnCluH,KAAKmuH,aAAatF,EAAM32F,WACvB,GAAIlyB,KAAK4oH,UAAYF,GAAa0F,WACnCpuH,KAAKquH,eAAexF,EAAMyF,YACzB,GAAItuH,KAAK4oH,UAAYF,GAAa6F,aACnCvuH,KAAKwuH,wBACJ,GAAIxuH,KAAK4oH,UAAYF,GAAa+F,cACnCzuH,KAAK0uH,kBAAkB7F,EAAMyF,YAC5B,GAAItuH,KAAK4oH,UAAYF,GAAaiG,KACnC3uH,KAAK4uH,SAAS/F,EAAMgG,QAAShG,EAAM1yC,OAAQ0yC,EAAMzyC,aAChD,GAAIp2E,KAAK4oH,UAAYF,GAAaoG,KACnC9uH,KAAK+uH,SAASlG,EAAMmG,MAAOnG,EAAMoG,MAAOpG,EAAMqG,cAC7C,IAAIlvH,KAAK4oH,UAAYF,GAAarG,eAInC,OAHAriH,KAAKmvH,mBAAmBnyE,GAAS2D,WAAWkoE,EAAMuG,kBAC9CpvH,KAAK8oH,OACL9oH,KAAK8oH,MAAMuG,gBAAgBrvH,KAAKiL,OAAOqkH,eAGtCtvH,KAAK4oH,UAAYF,GAAa6G,YACnCvvH,KAAKwvH,kBACAxvH,KAAK4oH,UAAYF,GAAa+G,YACnCzvH,KAAK0vH,kBACA1vH,KAAK4oH,UAAYF,GAAaiH,cACnC3vH,KAAK4vH,oBACA5vH,KAAK4oH,UAAYF,GAAamH,YACnC7vH,KAAK8vH,kBACA9vH,KAAK4oH,UAAYF,GAAaqH,aACnC/vH,KAAKgwH,mBACAhwH,KAAK4oH,UAAYF,GAAauH,kBAAoBjwH,KAAK4oH,UAAYF,GAAawH,kBACrFlwH,KAAK4oH,UAAYF,GAAayH,mBAAqBnwH,KAAK4oH,UAAYF,GAAa0H,kBACjFpwH,KAAKqwH,iBAAiBrwH,KAAK4oH,UACtB5oH,KAAK4oH,UAAYF,GAAa7gE,aACnC7nD,KAAKswH,mBACAtwH,KAAK4oH,UAAYF,GAAa6H,aACnCvwH,KAAKwwH,mBACAxwH,KAAK4oH,UAAYF,GAAa+H,gBACnCzwH,KAAK0wH,sBACA1wH,KAAK4oH,UAAYF,GAAaiI,WACnC3wH,KAAK4wH,iBACA5wH,KAAK4oH,UAAYF,GAAamI,UACnC7wH,KAAK8wH,gBACA9wH,KAAK4oH,UAAYF,GAAaqI,WACnC/wH,KAAKgxH,iBACAhxH,KAAK4oH,UAAYF,GAAauI,aACnCjxH,KAAKkxH,mBACAlxH,KAAK4oH,UAAYF,GAAayI,aACnCnxH,KAAKoxH,mBACApxH,KAAK4oH,UAAYF,GAAa2I,aACnCrxH,KAAKsxH,mBACAtxH,KAAK4oH,UAAYF,GAAa6I,iBACnCvxH,KAAKwxH,oBAAoB3I,EAAM1yC,OAAQ0yC,EAAMzyC,OAAO,CACxDp2E,KAAKyxH,QACT,CACA,MAAAA,GACSzxH,KAAK8oH,QAEa,MAAnB9oH,KAAKiL,OAAOshC,KAAevsC,KAAKiL,OAAO+9G,aAAe,GAAKhpH,KAAKiL,OAAOg+G,aAAe,GAAiC,MAA5BjpH,KAAKiL,OAAOi+G,cACvGlpH,KAAK8oH,MAAM4I,SAAS1xH,KAAKiL,QAAQ,GACd,MAAfjL,KAAK2xH,QACL3xH,KAAK8oH,MAAM8I,YAAY5xH,KAAK2xH,QAAQ,IAGrB,MAAf3xH,KAAK2xH,QACL3xH,KAAK8oH,MAAM8I,YAAY5xH,KAAK2xH,QAAQ,GAEhD,CACA,UAAAhI,GACI,IAAK3pH,KAAK6xH,iBACN,OACJ,IAAItlF,EAAMvsC,KAAKgL,MAAMuhC,IAGrB,GAFAvsC,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtB5b,KAAK8xH,aACD9xH,KAAKgL,MAAMi+G,YAAc,IAAMjpH,KAAKspH,YAGpC,OAFAtpH,KAAKiL,OAAOshC,IAAIgrB,WAAWv3D,KAAKgL,MAAMi+G,kBACtCjpH,KAAKiL,OAAOg+G,YAAc,GAG9B,GAA0B,GAAtBjpH,KAAKopH,eAAsBppH,KAAKqpH,aAAa,IAAMrpH,KAAKgL,MAAMg+G,YAAa,CAC3E,IAAIx4E,EAAMjE,EAAI8c,YAAYrpD,KAAKgL,MAAMg+G,aACnB,GAAdx4E,EAAI5xC,SACJoB,KAAKiL,OAAO+9G,YAAcx4E,EAAI,GAC1BxwC,KAAKiL,OAAO+9G,YAAchpH,KAAKgL,MAAMg+G,aACrChpH,KAAKiL,OAAO+9G,cAExB,CACA,IAAK,IAAIl5G,EAAI9P,KAAKopH,cAAgB,EAAGt5G,GAAK,EAAGA,IACzC9P,KAAKiL,OAAOshC,IAAI2gB,mBAAmBltD,KAAKqpH,aAAav5G,GAC7D,CACA,QAAAi6G,CAASgI,GACL,IAAIxlF,EAAMvsC,KAAKgL,MAAMuhC,IACjBvsC,KAAKopH,cAAgB,IACrB78E,EAAM0f,GAAQ0L,wBAAwBprB,EAAKvsC,KAAKmpH,cAChDnpH,KAAK8oH,MACL9oH,KAAK8oH,MAAMkJ,YAAYzlF,GAEvBvsC,KAAK+oH,YAAcx8E,EAAI74B,WACvBq+G,IACA/xH,KAAK8xH,aACL9xH,KAAKiL,OAAOshC,IAAM0f,GAAQrd,aAAa5uC,KAAKgL,MAAMuhC,IAAK,EAAIp0B,QAAQnY,KAAKmpH,cAEhF,CACA,SAAAU,GACI7pH,KAAKiL,OAAOshC,IAAM,IAAIyQ,GACtBh9C,KAAK8xH,YACT,CACA,aAAA5H,CAAc+H,GACV,IAAIphF,GAAO,EACX,IAAK,IAAI/gC,EAAI,EAAGA,EAAI9P,KAAKgL,MAAMuhC,IAAIC,SAAU18B,IACzC,GAAI9P,KAAKmpH,YAAYr5G,IAAMmiH,EAAK,CAC5BphF,GAAO,EACP,KACJ,CACAA,EACA7wC,KAAK2xH,OAASM,EAAM,8BAAgC,gCAGxDjyH,KAAKiL,OAAOi+G,aAAe,EAAIryG,aAAao7G,EAAKjyH,KAAKgL,MAAMuhC,IAAIC,SACpE,CACA,cAAA69E,CAAe5hD,GACX,IAAIypD,EAASjmE,GAAQgM,cAAcj4D,KAAKgL,MAAMuhC,KAC9C,GAAqB,GAAjB2lF,EAAOtzH,QAAeoB,KAAKspH,aAAetpH,KAAKopH,eAAiBppH,KAAKgL,MAAMuhC,IAAIC,SAE/E,YADAxsC,KAAK2xH,OAAS,+BAGlB,IAAIpL,EAAMvmH,KAAKmyH,kBAAkBD,EAAQzpD,GACzCzoE,KAAKiL,OAAOi+G,aAAe,EAAIryG,cAAa,EAAO7W,KAAKgL,MAAMuhC,IAAIC,UAClE,IAAK,IAAI18B,EAAI,EAAGA,EAAIoiH,EAAO3L,GAAK3nH,OAAQkR,IACpC9P,KAAKiL,OAAOi+G,aAAagJ,EAAO3L,GAAKz2G,GAAK,IAAK,CACvD,CACA,cAAA06G,GACI,IAAKxqH,KAAKoyH,iBACN,OACJ,IAAI7lF,EAAMvsC,KAAKgL,MAAMuhC,IAAKy8E,EAAchpH,KAAKgL,MAAMg+G,YAAaC,EAAcjpH,KAAKgL,MAAMi+G,YACzF,GAAID,EAAc,GAAsC,GAAjCz8E,EAAIsQ,aAAamsE,GAEpC,YADAhpH,KAAK2xH,OAAS,mCAGlB,GAAI1I,EAAc,GAAoD,GAA/C18E,EAAIsQ,aAAatQ,EAAII,SAASs8E,KAAmE,GAA7C18E,EAAIsQ,aAAatQ,EAAIM,OAAOo8E,IAEnG,YADAjpH,KAAK2xH,OAAS,mCAGlB,IAAIU,EAAQrJ,EAAc,EAAI/8D,GAAQiM,aAAa3rB,EAAKy8E,GAAe/8D,GAAQqM,aAAa/rB,EAAK08E,GAC7F1C,EAAMvmH,KAAKmyH,kBAAkBE,EAAO,GACxCryH,KAAKiL,OAAOi+G,aAAe,EAAIryG,cAAa,EAAO01B,EAAIC,UACvD,IAAK,IAAI18B,EAAI,EAAGA,EAAIuiH,EAAM9L,GAAK3nH,OAAQkR,IACnC9P,KAAKiL,OAAOi+G,aAAamJ,EAAM9L,GAAKz2G,GAAK,IAAK,CACtD,CACA,cAAA46G,GACI,IAAK1qH,KAAK6xH,iBACN,OACJ,IAAItlF,EAAMvsC,KAAKgL,MAAMuhC,IAAKy8E,EAAchpH,KAAKgL,MAAMg+G,YAAaC,EAAcjpH,KAAKgL,MAAMi+G,YAEzF,GADAjpH,KAAKiL,OAAOi+G,aAAelpH,KAAKgL,MAAMk+G,aAAaj6G,MAAM,GACpDjP,KAAKspH,YAUN,IAAK,IAAIx5G,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,IAAI48B,EAAMH,EAAII,SAAS78B,GAAK,EAAG88B,EAAML,EAAIM,OAAO/8B,GAAK,EACjD9P,KAAKgL,MAAMk+G,aAAax8E,KAAS1sC,KAAKgL,MAAMk+G,aAAat8E,GACzD5sC,KAAKiL,OAAOi+G,aAAat8E,IAAO,EAC3B5sC,KAAKgL,MAAMk+G,eAAiBlpH,KAAKgL,MAAMk+G,aAAax8E,KACzD1sC,KAAKiL,OAAOi+G,aAAax8E,IAAO,EACxC,MAfIs8E,EAAc,EACdhpH,KAAKiL,OAAOi+G,aAAaF,EAAc,IAAK,GAG5ChpH,KAAKiL,OAAOi+G,aAAa38E,EAAII,SAASs8E,GAAe,IAAK,EAC1DjpH,KAAKiL,OAAOi+G,aAAa38E,EAAIM,OAAOo8E,GAAe,IAAK,EAYpE,CACA,gBAAA2B,GACI,IAAK5qH,KAAKsyH,kBACN,OACJ,IAAI/lF,EAAMvsC,KAAKgL,MAAMuhC,IACjBhyB,EAAQ,EAAIxD,YAAY,EAAGw1B,EAAIC,UACnC,IAAK,IAAI18B,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,IAAI48B,EAAMH,EAAII,SAAS78B,GAAK,EAAG88B,EAAML,EAAIM,OAAO/8B,GAAK,EAChD9P,KAAKgL,MAAMk+G,aAAax8E,IAAS1sC,KAAKgL,MAAMk+G,aAAat8E,KAE9DryB,EAAMmyB,KACNnyB,EAAMqyB,KACV,CACA5sC,KAAKiL,OAAOi+G,aAAelpH,KAAKgL,MAAMk+G,aAAaj6G,MAAM,GACzD,IAAK,IAAIa,EAAI,EAAGA,EAAIy8B,EAAIC,SAAU18B,IAC9B9P,KAAKiL,OAAOi+G,aAAap5G,GAAK9P,KAAKgL,MAAMk+G,aAAap5G,IAAMyK,EAAMzK,IAAM,CAChF,CACA,eAAAg7G,GACI,IAAK9qH,KAAK6xH,iBACN,OACJ,IAAItlF,EAAMvsC,KAAKgL,MAAMuhC,IACrBvsC,KAAKiL,OAAOi+G,aAAelpH,KAAKgL,MAAMk+G,aAAaj6G,MAAM,GACzD,IAAK,IAAIa,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,IAAI48B,EAAMH,EAAII,SAAS78B,GAAK,EAAG88B,EAAML,EAAIM,OAAO/8B,GAAK,EACjD9P,KAAKgL,MAAMk+G,aAAax8E,KAAS1sC,KAAKgL,MAAMk+G,aAAat8E,IAAsC,GAA9BL,EAAIknC,cAAc7mC,EAAM,GACzF5sC,KAAKiL,OAAOi+G,aAAat8E,IAAO,EAC3B5sC,KAAKgL,MAAMk+G,aAAat8E,KAAS5sC,KAAKgL,MAAMk+G,aAAax8E,IAAsC,GAA9BH,EAAIknC,cAAc/mC,EAAM,KAC9F1sC,KAAKiL,OAAOi+G,aAAax8E,IAAO,EACxC,CACJ,CACA,gBAAAs+E,GACI,GAAKhrH,KAAK6xH,iBAAV,CAEA7xH,KAAKiL,OAAOi+G,aAAelpH,KAAKgL,MAAMk+G,aAAaj6G,MAAM,GACzD,IAAK,IAAIc,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,IAAI6/B,EAAQ5vC,KAAKgL,MAAMuhC,IAAImD,gBAAgB3/B,GAC3C,IAAK,IAAIhG,EAAI,EAAGA,EAAI6lC,EAAMhxC,OAAQmL,IAAK,CACnC,IAAIwoH,GAAM,EACV,IAAK,IAAIl8G,EAAI,EAAGA,EAAIu5B,EAAM7lC,GAAGnL,OAAQyX,IACjC,GAAIrW,KAAKmpH,YAAYv5E,EAAM7lC,GAAGsM,GAAK,GAAI,CACnCk8G,GAAM,EACN,KACJ,CACJ,GAAIA,EACA,IAAK,IAAIl8G,EAAI,EAAGA,EAAIu5B,EAAM7lC,GAAGnL,OAAQyX,IACjCrW,KAAKiL,OAAOi+G,aAAat5E,EAAM7lC,GAAGsM,GAAK,IAAK,CACxD,CACJ,CAfU,CAgBd,CACA,iBAAA60G,GACI,IAAKlrH,KAAK6xH,iBACN,OACJ,IAAItlF,EAAMvsC,KAAKgL,MAAMuhC,IACrBvsC,KAAKiL,OAAOi+G,aAAelpH,KAAKgL,MAAMk+G,aAAaj6G,MAAM,GACzD,IAAIujH,EAAQ,EACZ,IAAK,IAAI1iH,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/B0iH,EAAQ77G,KAAKC,IAAI47G,EAAOjmF,EAAIknC,cAAc3jE,IAC9C,GAAa,GAAT0iH,EACA,OACJ,IAAIC,EAAQ,EAAI57G,cAAa,EAAO27G,GACpC,IAAK,IAAI1iH,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAAK,CACpC,IAAI4iH,EAAKnmF,EAAIknC,cAAc3jE,GACvB4iH,EAAK,GAAK1yH,KAAKmpH,YAAYr5G,EAAI,KAC/B2iH,EAAMC,EAAK,IAAK,EACxB,CACA,IAAK,IAAI5iH,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAAK,CACpC,IAAI4iH,EAAKnmF,EAAIknC,cAAc3jE,GACvB4iH,EAAK,GAAKD,EAAMC,EAAK,KACrB1yH,KAAKiL,OAAOi+G,aAAap5G,EAAI,IAAK,EAC1C,CACJ,CACA,oBAAAs7G,GACI,IAAKprH,KAAKoyH,iBACN,OACJ,IAAI7lF,EAAMvsC,KAAKgL,MAAMuhC,IACrBvsC,KAAKiL,OAAOi+G,aAAelpH,KAAKgL,MAAMk+G,aAAaj6G,MAAM,GACzD,IAAI2qD,EAAM,GAAIC,EAAM,GAChB75D,KAAKgL,MAAMg+G,YAAc,EACzBpvD,EAAMrtB,EAAI2Q,YAAYl9C,KAAKgL,MAAMg+G,cAGjCpvD,EAAMrtB,EAAI2Q,YAAY3Q,EAAII,SAAS3sC,KAAKgL,MAAMi+G,cAC9CpvD,EAAMttB,EAAI2Q,YAAY3Q,EAAIM,OAAO7sC,KAAKgL,MAAMi+G,eAEhD,IAAK,IAAIn5G,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC3By8B,EAAI2Q,YAAYptC,IAAM8pD,GAAOrtB,EAAI2Q,YAAYptC,IAAM+pD,IACnD75D,KAAKiL,OAAOi+G,aAAap5G,EAAI,IAAK,EAC9C,CACA,gBAAAw7G,GACI,GAAKtrH,KAAKoyH,iBAGV,GADApyH,KAAKiL,OAAOi+G,aAAelpH,KAAKgL,MAAMk+G,aAAaj6G,MAAM,GACrDjP,KAAKgL,MAAMg+G,YAAc,EACzBhpH,KAAKiL,OAAOi+G,aAAalpH,KAAKgL,MAAMg+G,YAAc,IAAMhpH,KAAKiL,OAAOi+G,aAAalpH,KAAKgL,MAAMg+G,YAAc,OAEzG,CACD,IAAIt8E,EAAM1sC,KAAKgL,MAAMuhC,IAAII,SAAS3sC,KAAKgL,MAAMi+G,aAAcr8E,EAAM5sC,KAAKgL,MAAMuhC,IAAIM,OAAO7sC,KAAKgL,MAAMi+G,aAC9F1C,GAAOvmH,KAAKgL,MAAMk+G,aAAax8E,EAAM,KAAO1sC,KAAKgL,MAAMk+G,aAAat8E,EAAM,GAC9E5sC,KAAKiL,OAAOi+G,aAAax8E,EAAM,GAAK65E,EACpCvmH,KAAKiL,OAAOi+G,aAAat8E,EAAM,GAAK25E,CACxC,CACJ,CACA,mBAAAiF,GACSxrH,KAAKoyH,mBAEVpyH,KAAKiL,OAAOi+G,aAAelpH,KAAKgL,MAAMk+G,aAAaj6G,MAAM,GACrDjP,KAAKgL,MAAMg+G,YAAc,EACzBhpH,KAAKiL,OAAOi+G,aAAalpH,KAAKgL,MAAMg+G,YAAc,IAAK,GAGvDhpH,KAAKiL,OAAOi+G,aAAalpH,KAAKgL,MAAMuhC,IAAII,SAAS3sC,KAAKgL,MAAMi+G,aAAe,IAAK,EAChFjpH,KAAKiL,OAAOi+G,aAAalpH,KAAKgL,MAAMuhC,IAAIM,OAAO7sC,KAAKgL,MAAMi+G,aAAe,IAAK,GAEtF,CACA,WAAAyC,CAAY/4C,EAASg5C,EAAWC,EAAWC,GAEvC,GAAI7rH,KAAKopH,cAAgB,IADF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAClBloH,SAASyxE,GAAU,CAC7D,IAAIgkC,GAAY,EAChB,IAAK,IAAI7mG,EAAI,EAAGA,EAAI9P,KAAKopH,cAAet5G,IACpC,GAAI9P,KAAKgL,MAAMuhC,IAAI2Q,YAAYl9C,KAAKqpH,aAAav5G,KAAO6iE,EAAS,CAC7DgkC,GAAY,EACZ,KACJ,CACJ,IAAKA,EAED,YADA32G,KAAK2xH,OAAS,wBAGtB,CACA,IAAIplF,EAAMvsC,KAAKiL,OAAOshC,IAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACvC+2G,EAAcjgF,IACd,GAAe,KAAXigC,EACA7W,GAAUmE,wBAAwB1zB,EAAKmG,EAAM,CAAC,MAC9CopB,GAAUK,gBAAgB5vB,EAAKmG,EAAM0U,GAAcoW,eAElD,GAAe,KAAXmV,EACL7W,GAAUiE,qBAAqBxzB,EAAKmG,EAAM,CAAC,IAAK,KAAM,KAAM,MAC5DopB,GAAUK,gBAAgB5vB,EAAKmG,EAAM0U,GAAcsW,kBAElD,GAAe,KAAXiV,EACL7W,GAAUiE,qBAAqBxzB,EAAKmG,EAAM,CAAC,IAAK,IAAK,KAAM,OAC3DopB,GAAUK,gBAAgB5vB,EAAKmG,EAAM0U,GAAcsW,kBAElD,GAAe,KAAXiV,EACL7W,GAAUiE,qBAAqBxzB,EAAKmG,EAAM,CAAC,IAAK,KAAM,KAAM,IAAK,MACjEopB,GAAUK,gBAAgB5vB,EAAKmG,EAAM0U,GAAcsW,kBAElD,GAAe,KAAXiV,EACL7W,GAAUmE,wBAAwB1zB,EAAKmG,EAAM,CAAC,IAAK,MACnDopB,GAAUK,gBAAgB5vB,EAAKmG,EAAM0U,GAAcoW,eAElD,GAAe,KAAXmV,EAAgB,CACrB,MAAMigD,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAChG92D,GAAUmE,wBAAwB1zB,EAAKmG,EAAMkgF,GAC7C92D,GAAUK,gBAAgB5vB,EAAKmG,EAAM0U,GAAcoW,SACvD,MACK,GAAe,KAAXmV,EAAgB,CACrB,MAAMkgD,EAAoB,CACtB,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACrD,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACrD,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAC/C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACpF,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEvF/2D,GAAUiE,qBAAqBxzB,EAAKmG,EAAMmgF,GAC1C/2D,GAAUK,gBAAgB5vB,EAAKmG,EAAM0U,GAAcsW,YACvD,MACK,GAAe,KAAXiV,EAAgB,CACrB,MAAMmgD,EAAc,CAChB,IAAK,IAAK,IAAK,IACf,KAAM,KAAM,IAAK,IAAK,KACtB,KAAM,KAAM,KAAM,KAAM,KAAM,KAC9B,KAAM,KAAM,KAAM,KAAM,KAAM,IAC9B,KAAM,KAAM,KAAM,KAAM,KAAM,MAElCh3D,GAAUiE,qBAAqBxzB,EAAKmG,EAAMogF,GAC1Ch3D,GAAUK,gBAAgB5vB,EAAKmG,EAAM0U,GAAcsW,YACvD,KACoB,KAAXiV,IACL7W,GAAUiE,qBAAqBxzB,EAAKmG,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MACpEopB,GAAUK,gBAAgB5vB,EAAKmG,EAAM0U,GAAcsW,aACvD,EAEJ,GAAoB,GAAhBnxB,EAAIC,SACJD,EAAIge,QAAQooB,EAAS,EAAG,GACxBggD,EAAWpmF,EAAIC,eAEd,GAA0B,GAAtBxsC,KAAKopH,cACO,MAAbuC,GAAkC,MAAbC,EACrBr/E,EAAIge,QAAQooB,EAASg5C,EAAWC,GAEhCzhE,GAAWC,aAAa7d,EAAKomC,GACjCggD,EAAWpmF,EAAIC,eAGf,IAAK,IAAI18B,EAAI,EAAGA,EAAI9P,KAAKopH,cAAet5G,IAChC+7G,EACAt/E,EAAI0pB,eAAej2D,KAAKqpH,aAAav5G,GAAI6iE,GAEzC1mB,GAAQgK,eAAe1pB,EAAKvsC,KAAKqpH,aAAav5G,GAAI6iE,GACtDggD,EAAW3yH,KAAKqpH,aAAav5G,GAGzC,CACA,UAAAi8G,CAAWp7F,GACP,GAAK3wB,KAAK6xH,iBAAV,CAEA7xH,KAAKiL,OAAOshC,IAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACjC,IAAK,IAAI9L,EAAI,EAAGA,EAAI9P,KAAKopH,cAAet5G,IAAK,CACzC,IAAIy0D,EAAM5tD,KAAKC,KAAK,GAAID,KAAKW,IAAI,GAAItX,KAAKgL,MAAMuhC,IAAIqQ,WAAW58C,KAAKqpH,aAAav5G,IAAM6gB,IACvF3wB,KAAKiL,OAAOshC,IAAIghB,cAAcvtD,KAAKqpH,aAAav5G,GAAIy0D,EACxD,CALU,CAMd,CACA,WAAA0nD,CAAYxpE,EAAO1kD,GACf,IAAKiC,KAAK6xH,iBACN,OACJ,IAAIxgE,EAAOlH,GAAW4G,mBAAmB/wD,KAAKgL,MAAMuhC,IAAKvsC,KAAKqpH,cAC9D,GAAY,MAARh4D,EAAJ,CAIArxD,KAAKiL,OAAOshC,IAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACjC,IAAK,IAAI9L,EAAI,EAAGA,EAAIuhD,EAAKzyD,OAAQkR,GAAK,EAClCm8C,GAAQmH,QAAQpzD,KAAKiL,OAAOshC,IAAK8kB,EAAKvhD,GAAIuhD,EAAKvhD,EAAI,GAAI2yC,EAAO1kD,EAHlE,MAFIiC,KAAK2xH,OAAS,yDAMtB,CACA,cAAAxF,GACI,IAAI4G,EAAM,GACNxmF,EAAMvsC,KAAKgL,MAAMuhC,IACrB,GAAIvsC,KAAKspH,YACL,IAAK,IAAIx5G,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAC3B9P,KAAKmpH,YAAY58E,EAAII,SAAS78B,GAAK,IAAM9P,KAAKmpH,YAAY58E,EAAIM,OAAO/8B,GAAK,IAC1EijH,EAAIv2H,KAAKsT,QAEhB,GAAI9P,KAAKgL,MAAMg+G,YAAc,EAC9B,IAAK,IAAIrvG,KAAK4yB,EAAIwlB,aAAa/xD,KAAKgL,MAAMg+G,aACtC+J,EAAIv2H,KAAKmd,QAER3Z,KAAKgL,MAAMi+G,YAAc,GAC9B8J,EAAIv2H,KAAKwD,KAAKgL,MAAMi+G,aAExB,GAAkB,GAAd8J,EAAIn0H,OAEJ,YADAoB,KAAK2xH,OAAS,8DAGlB,IAAIqB,EAAW,EAAIn8G,cAAa,EAAO01B,EAAIE,UAC3C,IAAK,IAAI78B,KAAKmjH,EACVC,EAASpjH,EAAI,IAAK,EACtB5P,KAAKiL,OAAOshC,IAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACjC,IAAK,IAAI9L,EAAIy8B,EAAIE,SAAU38B,GAAK,EAAGA,IAC3BkjH,EAASljH,EAAI,IACb9P,KAAKiL,OAAOshC,IAAIgrB,WAAWznD,EACvC,CACA,eAAAs8G,GACI,IAAKpsH,KAAK6xH,iBACN,OACJ,IAAItlF,EAAMvsC,KAAKgL,MAAMuhC,IACjB0mF,EAAWjzH,KAAKqpH,aAAap6G,MAAM,GACnCwvG,EAAYz+G,KAAKgL,MAAMg+G,YAC3B,GAAiB,GAAbvK,EACA,IAAK,IAAI9kG,KAAK3Z,KAAKqpH,aAAc,CAC7B,IAAI3sE,EAAOnQ,EAAIoQ,aAAahjC,GAC5B,GAAI06B,GAAUI,eAAeiI,IAAS,EAAG,CACrC+hE,EAAY9kG,EACZ,KACJ,CACJ,CAEJ,GAAiB,GAAb8kG,EACA,IAAK,IAAI9kG,KAAK3Z,KAAKqpH,aAAc,CAC7B,IAAI3sE,EAAOnQ,EAAIoQ,aAAahjC,GAC5B,GAAI06B,GAAUG,aAAakI,IAAS,EAAG,CACnC+hE,EAAY9kG,EACZ,KACJ,CACJ,CAEJ,GAAiB,GAAb8kG,EAEA,YADAz+G,KAAK2xH,OAAS,8DAGlB,IAAI5nH,EAAIkpH,EAASz4G,QAAQikG,GAKzB,GAJI10G,GAAK,GACLkpH,EAAS3lH,OAAOvD,EAAG,GACA,GAAnBkpH,EAASr0H,SACTq0H,EAAW1mF,EAAI8c,YAAYo1D,IACR,GAAnBwU,EAASr0H,OAAb,CAIA2tC,EAAM,IAAIiyE,GAAYjyE,EAAKkyE,EAAWwU,GAAUrU,WAChD5+G,KAAKiL,OAAOshC,IAAMA,EAClBvsC,KAAKiL,OAAO+9G,YAAcvK,EAC1Bz+G,KAAKiL,OAAOg+G,aAAe,EAC3BjpH,KAAKiL,OAAOi+G,aAAe,EAAIryG,cAAa,EAAO01B,EAAIC,UACvD,IAAK,IAAI7yB,KAAKs5G,EACVjzH,KAAKiL,OAAOi+G,aAAavvG,EAAI,IAAK,CAPtC,MAFI3Z,KAAK2xH,OAAS,kEAUtB,CACA,QAAArF,CAAS7pE,EAAO1kD,GACZ,IAAKiC,KAAK6xH,iBACN,OACJ,GAA0B,GAAtB7xH,KAAKopH,cAEL,YADAppH,KAAKkzH,eAAelzH,KAAKqpH,aAAa,GAAI5mE,EAAO1kD,GAGrD,IAAIo1H,EAAQlnE,GAAQrd,aAAa5uC,KAAKgL,MAAMuhC,IAAKvsC,KAAKmpH,aAClDiK,GAAU,EACd,IAAK,IAAItjH,EAAIqjH,EAAM3mF,SAAU18B,GAAK,EAAGA,IACjC,GAA6B,GAAzBqjH,EAAMr/C,aAAahkE,GAAS,CAC5BsjH,GAAU,EACV,KACJ,CACAA,EACApzH,KAAKqzH,kBAAkB5wE,EAAO1kD,GAE9BiC,KAAKisH,YAAYxpE,EAAO1kD,EAChC,CACA,YAAA0uH,CAAah/D,GACT,IAAI3D,EAA6B,GAAtB9pD,KAAKopH,cAAqBppH,KAAKgL,MAAMuhC,IAAI4H,SAASn0C,KAAKqpH,aAAa,GAAIrpH,KAAKqpH,aAAa,IAAM,EACjF,GAAtBrpH,KAAKopH,eAAsBppH,KAAKopH,cAAgB,GAA4B,GAAtBppH,KAAKopH,eAA8B,GAARt/D,EACjF9pD,KAAK2xH,OAAS,6CAGQ,GAAtB3xH,KAAKopH,cACLppH,KAAKszH,oBAAoB7lE,EAAMztD,KAAKqpH,aAAa,IAEjDrpH,KAAKuzH,oBAAoB9lE,EAAM3D,EACvC,CACA,YAAA6iE,CAAalqE,EAAO1kD,EAAM40E,EAAShuD,EAAIC,EAAIC,EAAIC,GAC3C,IAAIynB,EAAMvsC,KAAKgL,MAAMuhC,IACjBwR,EAAK8N,GAAUiF,YAAYvkB,EAAK5nB,EAAIC,EAAI,KAAOo5B,EAAK6N,GAAUiF,YAAYvkB,EAAK1nB,EAAIC,EAAI,KACvFi5B,EAAK,GAAKA,GAAMC,GAEhBD,EAAK,GAAKC,EAAK,GAAKzR,EAAI4H,SAAS4J,EAAIC,GAAM,IAE/Ch+C,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACZ,GAANmiC,IACAA,EAAK/9C,KAAKiL,OAAOshC,IAAIge,QAAQ,IAAK5lC,EAAIC,IAChC,GAANo5B,IACAA,EAAKh+C,KAAKiL,OAAOshC,IAAIge,QAAQooB,EAAS9tD,EAAIC,IAC9C9kB,KAAKiL,OAAOshC,IAAI6mB,QAAQrV,EAAIC,EAAIyE,EAAO1kD,GAC3C,CACA,cAAA8uH,GACI,GAAI7sH,KAAKgL,MAAMwoH,OAGX,OAFAxzH,KAAKiL,OAAOshC,IAAMvsC,KAAKgL,MAAMwoH,YAC7BxzH,KAAKiL,OAAOuoH,OAASxzH,KAAKgL,MAAMuhC,KAGpC,IAAKvsC,KAAK6xH,iBACN,OACJ,IAAItlF,EAAMvsC,KAAKgL,MAAMuhC,IACjBv9B,EAAM,EAAGwhD,EAAM,GACnB,GAA0B,GAAtBxwD,KAAKopH,cAAoB,CACzBp6G,EAAMhP,KAAKqpH,aAAa,GACxB,IAAI74E,EAAMjE,EAAI8c,YAAYr6C,GAC1B,IAAK,IAAIc,EAAI,EAAGA,EAAI0gC,EAAI5xC,OAAQkR,IACI,GAA5By8B,EAAIsQ,aAAarM,EAAI1gC,KACrB0gD,EAAIh0D,KAAKg0C,EAAI1gC,GACzB,MACK,GAA0B,GAAtB9P,KAAKopH,eAAsB78E,EAAI4H,SAASn0C,KAAKqpH,aAAa,GAAIrpH,KAAKqpH,aAAa,IAAM,EAAG,CAC9F,IAAIoK,EAAMlnF,EAAIsQ,aAAa78C,KAAKqpH,aAAa,IAAKqK,EAAMnnF,EAAIsQ,aAAa78C,KAAKqpH,aAAa,IACvFoK,EAAM,GAAY,GAAPC,GACX1kH,EAAMhP,KAAKqpH,aAAa,GACxB74D,EAAIh0D,KAAKwD,KAAKqpH,aAAa,KAEf,GAAPoK,GAAYC,EAAM,IACvB1kH,EAAMhP,KAAKqpH,aAAa,GACxB74D,EAAIh0D,KAAKwD,KAAKqpH,aAAa,IAEnC,CACA,GAAW,GAAPr6G,GAA0B,GAAdwhD,EAAI5xD,OAEhB,YADAoB,KAAK2xH,OAAS,yCAGlB,IAAIlhE,EAAQtG,GAAWmE,kBAAkB/hB,EAAKv9B,EAAK,GAC/B,GAAhByhD,EAAM7xD,QAIVoB,KAAKiL,OAAOshC,IAAM4d,GAAWoG,mBAAmBhkB,EAAKv9B,EAAKwhD,EAAKC,GACxC,MAAnBzwD,KAAKiL,OAAOshC,MACZvsC,KAAK2xH,OAAS,0CALd3xH,KAAK2xH,OAAS,uCAOtB,CACA,cAAA5E,GACI,IAAIjjE,EAAO9pD,KAAKgL,MAAMi+G,YACtB,GAAY,GAARn/D,EAEA,YADA9pD,KAAK2xH,OAAS,iCAGlB,IAAIplF,EAAMvsC,KAAKgL,MAAMuhC,IACrB,GAAIA,EAAIujB,WAAWhG,GAEf,YADA9pD,KAAK2xH,OAAS,8BAGlB,GAA4C,GAAxCplF,EAAIsQ,aAAatQ,EAAII,SAASmd,KAAqD,GAAtCvd,EAAIsQ,aAAatQ,EAAIM,OAAOid,IAEzE,YADA9pD,KAAK2xH,OAAS,sCAGlBplF,EAAMA,EAAI3wB,QACV,IAAKo2F,EAAON,EAAO1sB,GAAQhlF,KAAK2zH,WAAW7pE,GAAM,GAC7C58B,EAAKqf,EAAI6e,MAAM4mD,GAAQ7kF,EAAKof,EAAI8e,MAAM2mD,GACtC7tF,EAAQxN,KAAKue,MAAMqX,EAAI8e,MAAM2mD,GAASzlE,EAAI8e,MAAMqmD,GAAQnlE,EAAI6e,MAAM4mD,GAASzlE,EAAI6e,MAAMsmD,IACzF,IAAK,IAAI/3F,KAAKqrE,EACV,GAAIrrE,GAAKq4F,EAAO,CACZ,IAAIhvF,EAAKupB,EAAI6e,MAAMzxC,GAAKuT,EAAIjK,EAAKspB,EAAI8e,MAAM1xC,GAAKwT,EAAI+E,EAAOnP,EAAQC,EAAIC,GACnE49F,EAASlqG,KAAKue,MAAMjS,EAAID,GAC5B69F,EAAS18F,EAAQH,EAAU68F,EAAQ18F,GACnCooB,EAAI4e,WAAWxxC,EAAGuT,EAAKgF,EAAOvb,KAAK2a,IAAIuvF,GAAS1zF,EAAK+E,EAAOvb,KAAK4a,IAAIsvF,GACzE,CACJ,IAAIzoG,EAAO,EAAIK,QAAQ,EAAInY,IAAI0kF,GAAO,GAAIz4C,EAAIC,UAC9C,IAAK,IAAI58B,EAAI,EAAGA,GAAK28B,EAAIE,SAAU78B,IAC/B,GAAIwI,EAAKm0B,EAAII,SAAS/8B,GAAK,IAAMwI,EAAKm0B,EAAIM,OAAOj9B,GAAK,GAAI,CACtD,IAAI4oD,EAAKjsB,EAAIupB,SAASlmD,GAClB4oD,GAAMxb,GAAS6Z,kBACftqB,EAAI8qB,YAAYznD,EAAGotC,GAAS8Z,mBACvB0B,GAAMxb,GAAS8Z,mBACpBvqB,EAAI8qB,YAAYznD,EAAGotC,GAAS6Z,kBACpC,CACAhL,GAAU4oB,iBAAiBz0E,KAAKgL,MAAMuhC,IAAKA,GAC3CvsC,KAAK2xH,OAAS,0BAGlB3xH,KAAKiL,OAAOshC,IAAMA,CACtB,CACA,cAAA0gF,GACI,GAA0B,GAAtBjtH,KAAKopH,cAEL,YADAppH,KAAK2xH,OAAS,kCAGlB,IAAIj/E,EAAO1yC,KAAKqpH,aAAa,GAC7B,GAAIrpH,KAAKgL,MAAMuhC,IAAIsQ,aAAanK,GAAQ,EAEpC,YADA1yC,KAAK2xH,OAAS,oDAGlB,IAAIthG,EAAM85B,GAAW8D,uBAAuBjuD,KAAKgL,MAAMuhC,IAAKmG,EAAM,GAGlE,GAFkB,GAAdriB,EAAIzxB,SACJyxB,EAAM85B,GAAWgE,YAAYnuD,KAAKgL,MAAMuhC,IAAKmG,IAC/B,GAAdriB,EAAIzxB,OAEJ,YADAoB,KAAK2xH,OAAS,4DAGlB,IAAIiC,EAAUvjG,EAAI,GACdnD,EAAKltB,KAAKgL,MAAMuhC,IAAI6e,MAAM1Y,GAAOvlB,EAAKntB,KAAKgL,MAAMuhC,IAAI8e,MAAM3Y,GAC/D,GAAIriB,EAAIzxB,OAAS,EAAG,CAChB,IAAIo1C,EAAO,EACX,IAAK,IAAIlkC,EAAI,EAAGA,EAAIugB,EAAIzxB,OAAQkR,IAAK,CACjC,IAAI0S,EAAI0K,EAAK8vB,GAASsN,UAAY3zC,KAAK2a,IAAIjB,EAAIvgB,IAC3C4S,EAAIyK,EAAK6vB,GAASsN,UAAY3zC,KAAK4a,IAAIlB,EAAIvgB,IAC3C86C,EAAQiB,GAAU2F,gBAAgBxxD,KAAKgL,MAAMuhC,IAAK/pB,EAAGE,IAChD,GAAL5S,GAAU86C,EAAQ5W,KAClBA,EAAO4W,EACPgpE,EAAUvjG,EAAIvgB,GAEtB,CACJ,CACA,IAAI+jH,EAAOD,EAAU,GAAOhwG,EAAQkwG,EAAOF,EAAU,GAAOhwG,EACxD2oB,EAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACrBmiC,EAAKxR,EAAIge,QAAQ,IAAKr9B,EAAK8vB,GAASsN,UAAY3zC,KAAK2a,IAAIuiG,GAAO1mG,EAAK6vB,GAASsN,UAAY3zC,KAAK4a,IAAIsiG,IACnG71E,EAAKzR,EAAIge,QAAQ,IAAKr9B,EAAK8vB,GAASsN,UAAY3zC,KAAK2a,IAAIwiG,GAAO3mG,EAAK6vB,GAASsN,UAAY3zC,KAAK4a,IAAIuiG,IACvGvnF,EAAI6mB,QAAQ1gB,EAAMqL,EAAI,GACtBxR,EAAI6mB,QAAQ1gB,EAAMsL,EAAI,GACtBh+C,KAAKiL,OAAOshC,IAAMA,CACtB,CACA,cAAA4gF,GACI,IAAI5gF,EAAMvsC,KAAKgL,MAAMuhC,IAAKud,EAAO9pD,KAAKgL,MAAMi+G,YAC5C,GAAY,GAARn/D,EAEA,YADA9pD,KAAK2xH,OAAS,iCAGlB,GAAIplF,EAAIujB,WAAWhG,GAEf,YADA9pD,KAAK2xH,OAAS,mCAGlB,IAAKoC,EAAOvhH,EAAGwyE,GAAQhlF,KAAK2zH,WAAW7pE,GACvCvd,EAAMA,EAAI3wB,QACV2wB,EAAIyoB,aAAalL,EAAM,GACvB,IAAIkqE,EAAW,EAAIn9G,cAAa,EAAO01B,EAAIC,UAC3C,IAAK,IAAI7yB,KAAKqrE,EACVgvC,EAASr6G,EAAI,IAAK,EACtB,IAAI8wC,EAAOwB,GAAQ0L,wBAAwBprB,EAAKynF,GAChD,IAAK,IAAIlkH,EAAIy8B,EAAIC,SAAU18B,GAAK,EAAGA,IAC3BkkH,EAASlkH,EAAI,IAAMA,GAAKikH,IACxBxnF,EAAI2gB,mBAAmBp9C,GACnBA,EAAIikH,IACJA,GAAS,IAErBxnF,EAAI0pB,eAAe89D,EAAO,KAC1BxnF,EAAIghB,cAAcwmE,EAAO,GACzBxnF,EAAI+gB,gBAAgBymE,EAAO,GAC3BxnF,EAAI8gB,iBAAiB0mE,EAAO/2E,GAASC,mBACrC1Q,EAAI4oB,eAAe4+D,EAAO/2E,GAAS8P,iBACnCvgB,EAAI2pB,cAAc69D,EAAO,GACzBxnF,EAAIgG,aAAawhF,EAAO,IACxBxnF,EAAIiZ,iBAAiBuuE,EAAO,IAC5B,IAAIE,EAAS,IAAI5R,GAAe91E,EAAKke,EAAM,IAC3CwpE,EAAOzR,eAAgB,EACvByR,EAAOvQ,YAAYqQ,GACQ,GAAvBE,EAAO14G,MAAM3c,QAIjBoB,KAAKiL,OAAOshC,IAAM0nF,EAAO14G,MAAM,GAAGgxB,IAClCvsC,KAAK8xH,aACL9xH,KAAKiL,OAAO+9G,YAAc+K,GALtB/zH,KAAK2xH,OAAS,mBAMtB,CACA,QAAAtE,GACSrtH,KAAK6xH,mBAEV7xH,KAAKiL,OAAOshC,IAAM4d,GAAWuH,qBAAqB1xD,KAAKgL,MAAMuhC,IAAKvsC,KAAKmpH,aAChD,MAAnBnpH,KAAKiL,OAAOshC,IACZvsC,KAAK2xH,OAAS,yCAGd3xH,KAAK8xH,aAEb,CACA,SAAAvE,CAAU9kD,EAAK+2C,GACX,IAAKx/G,KAAK6xH,iBACN,OACJ,IAAI7uG,EAAKw8F,GAAiB,QAAP/2C,GAAiB,EAAW,SAAPA,EAAiB,EAAI,GACzDxlD,EAAKu8F,GAAiB,QAAP/2C,GAAiB,EAAW,MAAPA,EAAc,EAAI,GAC1DzoE,KAAKiL,OAAOshC,IAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACjC,IAAK,IAAI9L,EAAI,EAAGA,EAAI9P,KAAKopH,cAAet5G,IAAK,CACzC,IAAI0S,EAAIxiB,KAAKiL,OAAOshC,IAAI6e,MAAMprD,KAAKqpH,aAAav5G,IAAK4S,EAAI1iB,KAAKiL,OAAOshC,IAAI8e,MAAMrrD,KAAKqpH,aAAav5G,IACjG9P,KAAKiL,OAAOshC,IAAI4e,WAAWnrD,KAAKqpH,aAAav5G,GAAI0S,EAAIQ,EAAIN,EAAIO,EACjE,CACJ,CACA,YAAAyqG,CAAajlD,GACT,IAAKzoE,KAAK6xH,iBACN,OACJ,GAAI7xH,KAAKopH,eAAiBppH,KAAKgL,MAAMuhC,IAAIC,SAErC,YADAxsC,KAAK2xH,OAAS,oCAGlB,IAAI3uG,EAAY,QAAPylD,GAAiB,EAAW,SAAPA,EAAiB,EAAI,EAC/CxlD,EAAY,QAAPwlD,GAAiB,EAAW,MAAPA,EAAc,EAAI,EAChDzoE,KAAKiL,OAAOshC,IAAM4d,GAAW8H,WAAWjyD,KAAKgL,MAAMuhC,IAAKvsC,KAAKmpH,YAAanmG,EAAIC,GACvD,MAAnBjjB,KAAKiL,OAAOshC,KACZvsC,KAAKutH,UAAU9kD,EAAK,EAE5B,CACA,QAAAmlD,CAASC,GACL,GAAI7tH,KAAKgL,MAAMuhC,IAAIC,SAAW,EAE1B,YADAxsC,KAAK2xH,OAAS,kCAGlB,IAAIuC,EAAqB,OAARrG,EACb3gG,EAAK,EAAGC,EAAK,EACb/U,EAAOpY,KAAKmpH,YAAa58E,EAAMvsC,KAAKgL,MAAMuhC,IAC9C,GAAIvsC,KAAKgL,MAAMg+G,YAAc,GAGzB,GAFA97F,EAAKqf,EAAI6e,MAAMprD,KAAKgL,MAAMg+G,aAC1B77F,EAAKof,EAAI8e,MAAMrrD,KAAKgL,MAAMg+G,cACrBhpH,KAAKspH,YAAa,CACnBlxG,EAAO,EAAIvB,cAAa,EAAO01B,EAAIC,UACnC,IAAIsC,EAAKvC,EAAIunC,aAAa9zE,KAAKgL,MAAMg+G,aACrC,IAAK,IAAIl5G,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/BsI,EAAKtI,EAAI,GAAKy8B,EAAIunC,aAAahkE,IAAMg/B,CAC7C,OAEC,GAAI9uC,KAAKgL,MAAMi+G,YAAc,EAAG,CACjC,IAAIv8E,EAAMH,EAAII,SAAS3sC,KAAKgL,MAAMi+G,aAAcr8E,EAAML,EAAIM,OAAO7sC,KAAKgL,MAAMi+G,aAG5E,GAFA/7F,EAAK,IAAOqf,EAAI6e,MAAM1e,GAAOH,EAAI6e,MAAMxe,IACvCzf,EAAK,IAAOof,EAAI8e,MAAM3e,GAAOH,EAAI8e,MAAMze,KAClC5sC,KAAKspH,YAAa,CACnBlxG,EAAO,EAAIvB,cAAa,EAAO01B,EAAIC,UACnC,IAAIsC,EAAKvC,EAAIunC,aAAapnC,GAC1B,IAAK,IAAI58B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/BsI,EAAKtI,EAAI,GAAKy8B,EAAIunC,aAAahkE,IAAMg/B,CAC7C,CACJ,MACK,GAA0B,GAAtB9uC,KAAKopH,cAAoB,CAC9B,IAAIzvF,EAAM4S,EAAI8d,WACdn9B,EAAK,IAAOyM,EAAIhQ,OAASgQ,EAAI9P,QAC7BsD,EAAK,IAAOwM,EAAI/P,OAAS+P,EAAI7P,QAC7B1R,EAAO,EAAIvB,cAAa,EAAM01B,EAAIC,SACtC,KACK,CACD,IAAK,IAAI18B,EAAI,EAAGA,EAAI9P,KAAKopH,cAAet5G,IACpCod,GAAMqf,EAAI6e,MAAMprD,KAAKqpH,aAAav5G,IAClCqd,GAAMof,EAAI8e,MAAMrrD,KAAKqpH,aAAav5G,IAEtC,IAAIqkH,EAAQ,EAAMn0H,KAAKopH,cACvBl8F,GAAMinG,EACNhnG,GAAMgnG,CACV,CACAn0H,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtB,IAAK,IAAI9L,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC3BsI,EAAKtI,EAAI,KACJokH,EAGDl0H,KAAKiL,OAAOshC,IAAI6mC,SAAStjE,EAAG,EAAIqd,EAAKntB,KAAKiL,OAAOshC,IAAI8e,MAAMv7C,IAF3D9P,KAAKiL,OAAOshC,IAAI4mC,SAASrjE,EAAG,EAAIod,EAAKltB,KAAKiL,OAAOshC,IAAI6e,MAAMt7C,IAI3E,CACA,SAAAi+G,CAAUt2F,GACN,MAAM,IAAE8U,EAAG,YAAEy8E,EAAW,YAAEC,GAAgBjpH,KAAKgL,MAC/C,GAAIuhC,EAAIC,SAAW,EAEf,YADAxsC,KAAK2xH,OAAS,kCAGlB,GAAI3I,EAAc,EAAG,CACjB,IAAIoL,EAAY,GAChB,IAAK,IAAIz6G,KAAK3Z,KAAKqpH,aACX1vG,GAAKqvG,GAAez8E,EAAI4H,SAAS60E,EAAarvG,GAAK,GACnDy6G,EAAU53H,KAAKmd,GACvB,IAAI4F,EAAIusB,GAAMQ,aAAaC,GAC3BhtB,EAAE0uB,YAAY+6E,EAAc,GAC5B,IAAIj0F,GAAW,EACf,IAAK,IAAI+Z,KAAMvvB,EAAEyvB,2BAA4B,CACzC,EAAI71B,MAAM21B,EAAI,GACd,IAAIp4B,EAAK,EAAGsM,EAAK,EAAGC,EAAK,EACzB,IAAK,IAAItJ,KAAKm1B,EACNslF,EAAUlzH,SAASyY,KACnBqJ,GAAMupB,EAAI6e,MAAMzxC,GAAK4yB,EAAI6e,MAAM49D,GAC/B/lG,GAAMspB,EAAI8e,MAAM1xC,GAAK4yB,EAAI8e,MAAM29D,GAC/BtyG,KAER,GAAU,GAANA,KAEHsM,EAAIC,GAAM,CAACD,EAAKtM,EAAIuM,EAAKvM,KACtBC,KAAKuF,IAAI8G,GAAM,IAAOrM,KAAKuF,IAAI+G,GAAM,KAAzC,EAECD,EAAIC,GAAM,CAACD,GAAMyU,EAAM,GAAIxU,GAAMwU,EAAM,IACnCz3B,KAAKiL,OAAOshC,MACbvsC,KAAKiL,OAAOshC,IAAMA,EAAI3wB,SAC1B,IAAK,IAAIjC,KAAKm1B,EACV9uC,KAAKiL,OAAOshC,IAAI4e,WAAWxxC,EAAG3Z,KAAKiL,OAAOshC,IAAI6e,MAAMzxC,GAAKqJ,EAAIhjB,KAAKiL,OAAOshC,IAAI8e,MAAM1xC,GAAKsJ,GAC5F8R,GAAW,CANC,CAOhB,CACA,GAAIA,EACA,MACR,CACA,IAAInlB,EACJ,GAA0B,GAAtB5P,KAAKopH,gBAAuBx5G,EAAI28B,EAAI4H,SAASn0C,KAAKqpH,aAAa,GAAIrpH,KAAKqpH,aAAa,KAAO,IAAM98E,EAAIujB,WAAWlgD,GAAI,CACrH,IAAImuC,EAAK/9C,KAAKqpH,aAAa,GAAIrrE,EAAKh+C,KAAKqpH,aAAa,GAClD8J,EAAQ5mF,EAAI3wB,QAChBu3G,EAAM57D,WAAW3nD,GACjB,IAAIwF,EAAO,GAAIC,EAAO,GACtB,IAAK,IAAIvF,EAAI,EAAGA,GAAKqjH,EAAM3mF,SAAU18B,IAC7BqjH,EAAMr/C,aAAahkE,IAAMqjH,EAAMr/C,aAAa/1B,GAC5C3oC,EAAK5Y,KAAKsT,GACLqjH,EAAMr/C,aAAahkE,IAAMqjH,EAAMr/C,aAAa91B,IACjD3oC,EAAK7Y,KAAKsT,GAElB,IAAIkT,GAAMupB,EAAI6e,MAAMpN,GAAMzR,EAAI6e,MAAMrN,KAAQtmB,EAAM,GAC9CxU,GAAMspB,EAAI8e,MAAMrN,GAAMzR,EAAI8e,MAAMtN,KAAQtmB,EAAM,GAMlD,GALIriB,EAAKxW,QAAUyW,EAAKzW,SACpBokB,GAAM,GACNC,GAAM,IAEVjjB,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QAClBxG,EAAKxW,QAAUyW,EAAKzW,OACpB,IAAK,IAAIkR,EAAI,EAAGA,EAAIsF,EAAKxW,OAAQkR,IAAK,CAClC,IAAI6J,EAAIvE,EAAKtF,GACb9P,KAAKiL,OAAOshC,IAAI4e,WAAWxxC,EAAG3Z,KAAKiL,OAAOshC,IAAI6e,MAAMzxC,GAAKqJ,EAAIhjB,KAAKiL,OAAOshC,IAAI8e,MAAM1xC,GAAKsJ,EAC5F,CACJ,GAAI5N,EAAKzW,QAAUwW,EAAKxW,OACpB,IAAK,IAAIkR,EAAI,EAAGA,EAAIuF,EAAKzW,OAAQkR,IAAK,CAClC,IAAI6J,EAAItE,EAAKvF,GACb9P,KAAKiL,OAAOshC,IAAI4e,WAAWxxC,EAAG3Z,KAAKiL,OAAOshC,IAAI6e,MAAMzxC,GAAKqJ,EAAIhjB,KAAKiL,OAAOshC,IAAI8e,MAAM1xC,GAAKsJ,EAC5F,CACJ,MACJ,CACA,IAAIiK,EAAK,EAAGC,EAAK,EACjB,GAAI67F,EAAc,EACd97F,EAAKqf,EAAI6e,MAAM49D,GACf77F,EAAKof,EAAI8e,MAAM29D,QAEd,GAAIC,EAAc,EAAG,CACtB,IAAIv8E,EAAMH,EAAII,SAASs8E,GAAcr8E,EAAML,EAAIM,OAAOo8E,GACtD/7F,EAAK,IAAOqf,EAAI6e,MAAM1e,GAAOH,EAAI6e,MAAMxe,IACvCzf,EAAK,IAAOof,EAAI8e,MAAM3e,GAAOH,EAAI8e,MAAMze,GAC3C,KACK,CACD,IAAK,IAAI98B,EAAI,EAAGA,EAAI9P,KAAKopH,cAAet5G,IACpCod,GAAMqf,EAAI6e,MAAMprD,KAAKqpH,aAAav5G,IAClCqd,GAAMof,EAAI8e,MAAMrrD,KAAKqpH,aAAav5G,IAEtC,IAAIqkH,EAAQ,EAAMn0H,KAAKopH,cACvBl8F,GAAMinG,EACNhnG,GAAMgnG,CACV,CACAn0H,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtB,IAAK,IAAI9L,EAAI,EAAGA,EAAI9P,KAAKopH,cAAet5G,IAAK,CACzC,IAAI0S,EAAIxiB,KAAKiL,OAAOshC,IAAI6e,MAAMprD,KAAKqpH,aAAav5G,IAC5C4S,EAAI1iB,KAAKiL,OAAOshC,IAAI8e,MAAMrrD,KAAKqpH,aAAav5G,IAChD9P,KAAKiL,OAAOshC,IAAI4e,WAAWnrD,KAAKqpH,aAAav5G,IAAK0S,EAAI0K,GAAMuK,EAAMvK,GAAKxK,EAAIyK,GAAMsK,EAAMtK,EAC3F,CACJ,CACA,UAAA8gG,CAAW9pG,EAAO4F,EAASC,GACvB7F,GAASP,EACT,IAAI2oB,EAAMvsC,KAAKgL,MAAMuhC,IACrB,GAAe,MAAXxiB,GAA8B,MAAXC,EAAiB,CACpChqB,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtB,IAAIxD,EAA6B,GAAtBpY,KAAKopH,cAAqB,EAAIvyG,cAAa,EAAM01B,EAAIC,UAAYxsC,KAAKmpH,YAEjF,YADAt9D,GAAUgqB,YAAY71E,KAAKiL,OAAOshC,IAAKn0B,EAAM2R,EAASC,EAAS7F,EAEnE,CACA,GAAIooB,EAAIC,SAAW,EAEf,YADAxsC,KAAK2xH,OAAS,kCAGlB,IAAIzkG,EAAK,EAAGC,EAAK,EACb/U,EAAOpY,KAAKmpH,YAChB,GAAInpH,KAAKgL,MAAMg+G,YAAc,EAAG,CAG5B,GAFA97F,EAAKqf,EAAI6e,MAAMprD,KAAKgL,MAAMg+G,aAC1B77F,EAAKof,EAAI8e,MAAMrrD,KAAKgL,MAAMg+G,cACrBhpH,KAAKspH,YAAa,CACnBlxG,EAAO,EAAIvB,cAAa,EAAO01B,EAAIC,UACnC,IAAIsC,EAAKvC,EAAIunC,aAAa9zE,KAAKgL,MAAMg+G,aACrC,IAAK,IAAIl5G,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/BsI,EAAKtI,EAAI,GAAKy8B,EAAIunC,aAAahkE,IAAMg/B,CAC7C,CACA,GAA2B,GAAvB,EAAIx2B,UAAUF,IAAcA,EAAKpY,KAAKgL,MAAMg+G,YAAc,GAE1D,YADAhpH,KAAK2xH,OAAS,yBAGtB,MACK,GAAI3xH,KAAKgL,MAAMi+G,YAAc,EAAG,CACjC,IAAIv8E,EAAMH,EAAII,SAAS3sC,KAAKgL,MAAMi+G,aAAcr8E,EAAML,EAAIM,OAAO7sC,KAAKgL,MAAMi+G,aAG5E,GAFA/7F,EAAK,IAAOqf,EAAI6e,MAAM1e,GAAOH,EAAI6e,MAAMxe,IACvCzf,EAAK,IAAOof,EAAI8e,MAAM3e,GAAOH,EAAI8e,MAAMze,KAClC5sC,KAAKspH,YAAa,CACnBlxG,EAAO,EAAIvB,cAAa,EAAO01B,EAAIC,UACnC,IAAIsC,EAAKvC,EAAIunC,aAAapnC,GAC1B,IAAK,IAAI58B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/BsI,EAAKtI,EAAI,GAAKy8B,EAAIunC,aAAahkE,IAAMg/B,CAC7C,CACJ,MACK,GAA0B,GAAtB9uC,KAAKopH,cAAoB,CAC9B,IAAIzvF,EAAM4S,EAAI8d,WACdn9B,EAAK,IAAOyM,EAAIhQ,OAASgQ,EAAI9P,QAC7BsD,EAAK,IAAOwM,EAAI/P,OAAS+P,EAAI7P,QAC7B1R,EAAO,EAAIvB,cAAa,EAAM01B,EAAIC,SACtC,KACK,CACD,GAA0B,GAAtBxsC,KAAKopH,cAEL,YADAppH,KAAK2xH,OAAS,0BAGlB,IAAK,IAAI7hH,EAAI,EAAGA,EAAI9P,KAAKopH,cAAet5G,IACpCod,GAAMqf,EAAI6e,MAAMprD,KAAKqpH,aAAav5G,IAClCqd,GAAMof,EAAI8e,MAAMrrD,KAAKqpH,aAAav5G,IAEtC,IAAIqkH,EAAQ,EAAMn0H,KAAKopH,cACvBl8F,GAAMinG,EACNhnG,GAAMgnG,CACV,CACAn0H,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtBiwC,GAAUgqB,YAAY71E,KAAKiL,OAAOshC,IAAKn0B,EAAM8U,EAAIC,EAAIhJ,EACzD,CACA,YAAAgqG,CAAaj8F,GACT,IAAI43B,EAAO9pD,KAAKgL,MAAMi+G,YACtB,GAAY,GAARn/D,EAEA,YADA9pD,KAAK2xH,OAAS,iCAGlB,IAAIplF,EAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACzB,GAAI2wB,EAAIujB,WAAWhG,GAAO,CACtB,IAAIkoD,EAAQzlE,EAAII,SAASmd,GAAO4nD,EAAQnlE,EAAIM,OAAOid,GAC/C9mC,EAAKupB,EAAI6e,MAAMsmD,GAASnlE,EAAI6e,MAAM4mD,GAAQ/uF,EAAKspB,EAAI8e,MAAMqmD,GAASnlE,EAAI8e,MAAM2mD,GAAQqiB,EAAUtxG,EAAQC,EAAIC,GAAKoP,EAAM,EAAMgiG,EAC3HC,EAAOt0H,KAAKu0H,WAAWviB,GAAQwiB,EAAOx0H,KAAKu0H,WAAW7iB,GACtDpmD,EAAKtoC,GAAMkP,EAAOmiG,GAAWhiG,EAAKk5B,EAAKtoC,GAAMiP,EAAOmiG,GAAWhiG,EAC/DiiG,IAASE,EACTjoF,EAAI4e,WAAW6mD,EAAOzlE,EAAI6e,MAAM4mD,GAAS1mD,EAAI/e,EAAI8e,MAAM2mD,GAASzmD,GAE3DipE,IAASF,EACd/nF,EAAI4e,WAAWumD,EAAOnlE,EAAI6e,MAAMsmD,GAASpmD,EAAI/e,EAAI8e,MAAMqmD,GAASnmD,IAGhEhf,EAAI4e,WAAW6mD,EAAOzlE,EAAI6e,MAAM4mD,GAAS,GAAM1mD,EAAI/e,EAAI8e,MAAM2mD,GAAS,GAAMzmD,GAC5Ehf,EAAI4e,WAAWumD,EAAOnlE,EAAI6e,MAAMsmD,GAAS,GAAMpmD,EAAI/e,EAAI8e,MAAMqmD,GAAS,GAAMnmD,GAEpF,KACK,CACD,IAAKymD,EAAON,EAAO1sB,GAAQhlF,KAAK2zH,WAAW7pE,GACvC9mC,EAAKupB,EAAI6e,MAAMsmD,GAASnlE,EAAI6e,MAAM4mD,GAAQ/uF,EAAKspB,EAAI8e,MAAMqmD,GAASnlE,EAAI8e,MAAM2mD,GAC5EqiB,EAAUtxG,EAAQC,EAAIC,GAAKoP,EAAM,EAAMgiG,EACvC/oE,EAAKtoC,GAAMkP,EAAOmiG,GAAWhiG,EAAKk5B,EAAKtoC,GAAMiP,EAAOmiG,GAAWhiG,EACnE,IAAK,IAAI1Y,KAAKqrE,EACVz4C,EAAI4e,WAAWxxC,EAAG4yB,EAAI6e,MAAMzxC,GAAK2xC,EAAI/e,EAAI8e,MAAM1xC,GAAK4xC,EAC5D,CACAvrD,KAAKiL,OAAOshC,IAAMA,CACtB,CACA,cAAA8hF,CAAeC,GACX,IAAIxkE,EAAO9pD,KAAKgL,MAAMi+G,YACtB,GAAY,GAARn/D,EAEA,YADA9pD,KAAK2xH,OAAS,iCAGlB,IAAIplF,EAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACzB,GAAI2wB,EAAIujB,WAAWhG,GAEf,YADA9pD,KAAK2xH,OAAS,6BAGlB,IAAK3f,EAAON,EAAO1sB,GAAQhlF,KAAK2zH,WAAW7pE,GACvC58B,EAAKqf,EAAI6e,MAAMsmD,GAAQvkF,EAAKof,EAAI8e,MAAMqmD,GACtC/gF,EAAQ29F,EAAQ33G,KAAKue,MAAMqX,EAAI8e,MAAM2mD,GAAS7kF,EAAIof,EAAI6e,MAAM4mD,GAAS9kF,GACrEwF,EAAW/b,KAAK2a,IAAIX,GAAQ6C,EAAW7c,KAAK4a,IAAIZ,GACpD,IAAK,IAAIhX,KAAKqrE,EAAM,CAChB,IAAIxiE,EAAI+pB,EAAI6e,MAAMzxC,GAAKuT,EAAIxK,EAAI6pB,EAAI8e,MAAM1xC,GAAKwT,EAC9Cof,EAAI4e,WAAWxxC,EAAGuT,EAAK1K,EAAIkQ,EAAWhQ,EAAI8Q,EAAUrG,EAAK3K,EAAIgR,EAAW9Q,EAAIgQ,EAChF,CACA1yB,KAAKiL,OAAOshC,IAAMA,CACtB,CACA,gBAAAiiF,GAEI,GAAY,GADDxuH,KAAKgL,MAAMi+G,YAGlB,YADAjpH,KAAK2xH,OAAS,iCAGlB,IAAIplF,EAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACrB8wB,EAAMH,EAAII,SAAS3sC,KAAKgL,MAAMi+G,aAAcr8E,EAAML,EAAIM,OAAO7sC,KAAKgL,MAAMi+G,aACxE9kG,EAAQxN,KAAKue,MAAMqX,EAAI8e,MAAMze,GAAOL,EAAI8e,MAAM3e,GAAMH,EAAI6e,MAAMxe,GAAOL,EAAI6e,MAAM1e,IAAQ7oB,EACvFM,EAAQ,IACRA,GAAS,KACb,IAAIsvC,EAAgC,GAAzB98C,KAAK0tC,MAAMlgC,EAAQ,IAC9B,GAAIxN,KAAKuF,IAAIiI,EAAQsvC,GAAQ,KACzB,OACJ,IAAI9iC,GAAS8iC,EAAOtvC,GAASP,EACzBxL,EAAOpY,KAAKgL,MAAMk+G,aACtB,GAAI,EAAIp0G,SAASsD,GAAO,CACpB,IAAI02B,EAAKvC,EAAIunC,aAAapnC,GAC1B,IAAK,IAAI58B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/BsI,EAAKtI,EAAI,GAAKg/B,GAAMvC,EAAIunC,aAAahkE,EAC7C,CACA,IAAIod,EAAK,IAAOqf,EAAI6e,MAAM1e,GAAOH,EAAI6e,MAAMxe,IAAOzf,EAAK,IAAOof,EAAI8e,MAAM3e,GAAOH,EAAI8e,MAAMze,IACzF,IAAK,IAAI98B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/B,GAAIsI,EAAKtI,EAAI,GAAI,CACb,IAAIkT,EAAKupB,EAAI6e,MAAMt7C,GAAKod,EAAIjK,EAAKspB,EAAI8e,MAAMv7C,GAAKqd,EAC5CrJ,EAAKnN,KAAKue,MAAMjS,EAAID,GAAM2N,EAAOuB,EAAOnP,EAAQC,EAAIC,GACxDspB,EAAI4e,WAAWr7C,EAAGod,EAAKgF,EAAOvb,KAAK2a,IAAIxN,GAAKqJ,EAAK+E,EAAOvb,KAAK4a,IAAIzN,GACrE,CACJ9jB,KAAKiL,OAAOshC,IAAMA,CACtB,CACA,iBAAAmiF,CAAkBJ,GACd,GAA8B,GAA1BtuH,KAAKgL,MAAMg+G,aAA8D,GAA1C,EAAI1wG,UAAUtY,KAAKgL,MAAMk+G,cAExD,YADAlpH,KAAK2xH,OAAS,gDAGlB,IAAIplF,EAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACrBmiC,EAAK/9C,KAAKgL,MAAMg+G,YAChBr3E,EAAQ,GACZ,IAAK,IAAI7hC,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC3BA,GAAKiuC,GAAM/9C,KAAKgL,MAAMk+G,aAAap5G,EAAI,IACvC6hC,EAAMn1C,KAAKsT,GACnB,IAAIkuC,EAAKzR,EAAI4H,SAAS4J,EAAIpM,EAAM,IAAM,EAAIA,EAAMtyB,QAC5CktB,EAAI4H,SAAS4J,EAAIpM,EAAM,IAAM,EAAIA,EAAM7jC,MAAQ,EACnD,GAAU,GAANkwC,GAAyC,GAA9BzR,EAAI4H,SAAS6J,EAAIrM,EAAM,IAElC,YADA3xC,KAAK2xH,OAAS,uCAGlB,IAAI8C,EAAK9iF,EAAM,GACXzkB,EAAKqf,EAAI6e,MAAMpN,GAAK7wB,EAAKof,EAAI8e,MAAMrN,GACnCuwC,EAAS53E,KAAKue,MAAMqX,EAAI8e,MAAMtN,GAAM5wB,EAAIof,EAAI6e,MAAMrN,GAAM7wB,GAExDyD,EAAQ29F,EAAQtqG,EADPrN,KAAKue,MAAMqX,EAAI8e,MAAMopE,GAAMtnG,EAAIof,EAAI6e,MAAMqpE,GAAMvnG,GACtBqhE,GAClCmmC,EAAS,GAAIC,EAAS,GAC1B,GAA6B,GAAzBpoF,EAAIknC,cAAc11B,IAAYxR,EAAIknC,cAAc11B,IAAOxR,EAAIknC,cAAcghD,GAAK,CAC9E,IAAIl1G,EAAIusB,GAAMQ,aAAaC,GAC3BhtB,EAAEyuB,WAAWgQ,EAAK,EAAGD,EAAK,GAC1Bx+B,EAAEyuB,WAAWgQ,EAAK,EAAGy2E,EAAK,GAC1B,IAAI3lF,EAAKvvB,EAAEsvB,sBACX,IAAK,IAAI/+B,EAAI,EAAGA,EAAIyP,EAAEytB,SAAUl9B,IACxBg/B,EAAGh/B,IAAMg/B,EAAGiP,EAAK,GACjB22E,EAAOl4H,KAAKsT,EAAI,GACXg/B,EAAGh/B,IAAMg/B,EAAG2lF,EAAK,IACtBE,EAAOn4H,KAAKsT,EAAI,EAE5B,CACIy8B,EAAIknC,cAAc11B,GAAM,GAAKxR,EAAIknC,cAAc11B,IAAOxR,EAAIknC,cAAcz1B,KACxE02E,EAAS,CAAC32E,IACVxR,EAAIknC,cAAcghD,GAAM,GAAKloF,EAAIknC,cAAcghD,IAAOloF,EAAIknC,cAAcz1B,KACxE22E,EAAS,CAACF,IACd5oE,GAAUgqB,YAAYtpC,EAAK,EAAI9zB,QAAQ,EAAInY,IAAIo0H,GAAS,GAAInoF,EAAIC,UAAWtf,EAAIC,GAAK,GAAMwD,GAC1Fk7B,GAAUgqB,YAAYtpC,EAAK,EAAI9zB,QAAQ,EAAInY,IAAIq0H,GAAS,GAAIpoF,EAAIC,UAAWtf,EAAIC,EAAI,GAAMwD,GACzF3wB,KAAKiL,OAAOshC,IAAMA,CACtB,CACA,QAAAqiF,CAASC,EAAS14C,EAAQC,GACtB,IAAIw+C,EAAO50H,KAAKqpH,aAChB,GAAqB,GAAjB,EAAI70G,IAAIogH,GAAY,CACpB,GAAe,GAAX/F,EACA,OACJ+F,EAAO,CAAC/F,EACZ,CACA7uH,KAAKiL,OAAOshC,IAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACjC,IAAK,IAAIjC,KAAKi7G,EACV50H,KAAKiL,OAAOshC,IAAI4e,WAAWxxC,EAAG3Z,KAAKiL,OAAOshC,IAAI6e,MAAMzxC,GAAKw8D,EAAQn2E,KAAKiL,OAAOshC,IAAI8e,MAAM1xC,GAAKy8D,EACpG,CACA,QAAA24C,CAASC,EAAOC,EAAOC,GACnB,IAAI17D,EAAMw7D,EAAMpwH,OACZ+yC,EAAQ,EAAI56B,YAAY,EAAGy8C,GAAM/J,EAAQ,EAAI1yC,YAAY,EAAGy8C,GAC5DqhE,EAAS70H,KAAKgL,MAAMuhC,IAAI3wB,QAC5B,IAAK,IAAI9L,EAAI,EAAGA,EAAI0jD,EAAK1jD,IACrB6hC,EAAM7hC,GAAK+7C,GAAUiF,YAAY+jE,EAAQ7F,EAAMl/G,GAAIm/G,EAAMn/G,IACzC,GAAZ6hC,EAAM7hC,KACN6hC,EAAM7hC,GAAK+kH,EAAOtqE,QAAQ,IAAKykE,EAAMl/G,GAAIm/G,EAAMn/G,KAEvD,IAAK,IAAIA,EAAI,EAAGA,EAAI0jD,EAAK1jD,IAAK,CAC1B,IAAIu+C,EAAKv+C,EAAI0jD,EAAM,EAAI1jD,EAAI,EAAI,EAC/B25C,EAAM35C,GAAK+kH,EAAO1gF,SAASxC,EAAM7hC,GAAI6hC,EAAM0c,IAC3B,GAAZ5E,EAAM35C,KACN25C,EAAM35C,GAAK+kH,EAAOzhE,QAAQzhB,EAAM7hC,GAAI6hC,EAAM0c,GAAK,GACvD,CACA,GAAI6gE,EAAU,CACV,IAAI9pE,EAAU,EAAIruC,YAAY,EAAGy8C,GAC7BshE,EAAK,EAAIj+G,cAAa,EAAO28C,GACjC,IAAK,IAAI1jD,EAAI,EAAGA,EAAI0jD,EAAK1jD,IAAK,CAC1Bs1C,EAAQt1C,GAAKukC,GAAUM,gBAAgBkgF,EAAOl4E,aAAahL,EAAM7hC,KAAO+kH,EAAOj4E,WAAWjL,EAAM7hC,IAC5F+kH,EAAOx4E,cAAc1K,EAAM7hC,KAAOktC,GAASC,oBAC3CmI,EAAQt1C,IAAM+kH,EAAOx4E,cAAc1K,EAAM7hC,KAC7C,IAAK,IAAIF,KAAKilH,EAAO9iE,aAAapgB,EAAM7hC,IACpCs1C,EAAQt1C,IAAM+kH,EAAO3gF,UAAUtkC,GAC/BilH,EAAO3gF,UAAUuV,EAAM35C,KAAO,IAC9BglH,EAAGhlH,IAAK,EACJA,EAAI0jD,EAAM,GACVshE,EAAGhlH,IAAK,EACRA,KAGAglH,EAAG,IAAK,EAEpB,CACA,IAAK,IAAIhlH,EAAI,EAAGA,EAAI0jD,EAAK1jD,IAAK,CAC1B,IAAIu+C,EAAKv+C,EAAI0jD,EAAM,EAAI1jD,EAAI,EAAI,EAC3BglH,EAAGhlH,IAAMglH,EAAGzmE,IAEZjJ,EAAQt1C,GAAK,GAAKs1C,EAAQiJ,GAAM,IAChCwmE,EAAO7/D,aAAavL,EAAM35C,GAAI,GAC9BglH,EAAGhlH,IAAK,EACRglH,EAAGzmE,IAAM,EACTjJ,EAAQt1C,KACRs1C,EAAQiJ,KAEhB,CACJ,CACAruD,KAAKiL,OAAOshC,IAAMsoF,CACtB,CACA,kBAAA1F,CAAmB1kE,GACf,IAAIle,EAAMvsC,KAAKgL,MAAMuhC,IACjB0nF,EAAS,IAAI5R,GAAe91E,EAAKke,EAAM,IACjB,GAAtBzqD,KAAKopH,cACL6K,EAAO/Q,cACoB,GAAtBljH,KAAKopH,cACV6K,EAAOvQ,YAAY1jH,KAAKqpH,aAAa,IACV,GAAtBrpH,KAAKopH,eAAsB78E,EAAI4H,SAASn0C,KAAKqpH,aAAa,GAAIrpH,KAAKqpH,aAAa,IAAM,EAC3F4K,EAAO7P,YAAYpkH,KAAKqpH,aAAa,GAAIrpH,KAAKqpH,aAAa,IAE3D4K,EAAO1P,aAAavkH,KAAKqpH,cAC7B,IAAIiG,EAAe,GACnB,IAAK,IAAI5H,KAAQuM,EAAO14G,MAAO,CAC3B,IAAIrU,EAAM,CAAC,EACXA,EAAS,IAAIwgH,EAAKn7E,IAAI74B,WACtBxM,EAAa,QAAIwgH,EAAKhhB,QAAQhzF,WAC9BxM,EAAY,OAAIwgH,EAAKnyD,OACrBruD,EAAY,OAAIwgH,EAAKtC,OACrBl+G,EAAY,OAAIwgH,EAAKlE,OACrB8L,EAAa9yH,KAAK0K,EACtB,CACAlH,KAAKiL,OAAOqkH,aAAeA,CAC/B,CACA,eAAAE,GACA,CACA,eAAAE,GACI,IAAK1vH,KAAK6xH,iBACN,OACJ,IAAK7xH,KAAK+0H,yBACN,OACJ,IAAIxoF,EAAM0f,GAAQmJ,gBAAgBp1D,KAAKgL,MAAMuhC,IAAK,EAAIp0B,QAAQnY,KAAKmpH,aAAc,KACjF,GAAW,MAAP58E,EAAJ,CAIA,GAAIkwE,GAAgB9qG,KAAM,CACtB8qG,GAAgB9qG,KAAK4rG,eAAehxE,GAAK,GACzC,IAAK,IAAIz8B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IACL,KAAtBy8B,EAAI2Q,YAAYptC,IAAam8C,GAAQc,UAAUxgB,EAAKz8B,IACpD2sG,GAAgB9qG,KAAK8rG,qBAAqBlxE,EAAKz8B,EAC3D,CACA9P,KAAKiL,OAAOshC,IAAMA,EAClBvsC,KAAK8xH,aACL9xH,KAAKiL,OAAO+9G,YAAcz8E,EAAIC,QAT9B,MAFIxsC,KAAK2xH,OAAS,0EAYtB,CACA,iBAAA/B,GACI,IAAK5vH,KAAK6xH,iBACN,OACJ,IAAK7xH,KAAK+0H,yBACN,OACJ,IAAIC,EAAQh1H,KAAKgL,MAAMuhC,IAAI3wB,QAC3B,IAAK,IAAI9L,EAAI,EAAGA,GAAKklH,EAAMxoF,SAAU18B,IACjCklH,EAAM3nE,iBAAiBv9C,EAAGklH,EAAM57D,cAActpD,IAClD,IAAIouG,EAAMjyD,GAAQrd,aAAaomF,EAAOh1H,KAAKmpH,aACvC9vD,EAAUpN,GAAQ0M,iBAAiBulD,GAAK,GACxC3xE,EAAM0f,GAAQmJ,gBAAgBp1D,KAAKgL,MAAMuhC,IAAK,EAAIp0B,QAAQnY,KAAKmpH,aAAc9vD,GACtE,MAAP9sB,GAIJvsC,KAAKiL,OAAOshC,IAAMA,EAClBvsC,KAAK8xH,aACL9xH,KAAKiL,OAAO+9G,YAAcz8E,EAAIC,UAL1BxsC,KAAK2xH,OAAS,0EAMtB,CACA,eAAA7B,GACI,IAAIj6G,EAAM,GACV,IAAK,IAAI/F,KAAK9P,KAAKqpH,aACXp9D,GAAQc,UAAU/sD,KAAKgL,MAAMuhC,IAAKz8B,IAClC+F,EAAIrZ,KAAKsT,GACjB,GAAkB,GAAd+F,EAAIjX,OAEJ,YADAoB,KAAK2xH,OAAS,8BAGlB,IAAIplF,EAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACzB,IAAK,IAAI9L,KAAK+F,EACVo2C,GAAQiJ,YAAY3oB,EAAKz8B,GAC7B9P,KAAKiL,OAAOshC,IAAMA,CACtB,CACA,gBAAAyjF,GACI,IAAIn6G,EAAM,GACV,IAAK,IAAI/F,KAAK9P,KAAKqpH,aACXp9D,GAAQc,UAAU/sD,KAAKgL,MAAMuhC,IAAKz8B,IAClC+F,EAAIrZ,KAAKsT,GACjB,GAAkB,GAAd+F,EAAIjX,OAEJ,YADAoB,KAAK2xH,OAAS,+BAGlB,IAAIplF,EAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACzB,IAAK,IAAI9L,KAAK+F,EACVo2C,GAAQsK,gBAAgBhqB,EAAKz8B,GAAG,GACpC9P,KAAKiL,OAAOshC,IAAMA,EAClBvsC,KAAK8xH,YACT,CACA,gBAAAzB,CAAiBzH,GACb,IAAK5oH,KAAKi1H,iBAAmBj1H,KAAK6xH,iBAC9B,OACJ,IAAIqD,EAAQ,IAAIjkF,GAAajxC,KAAKgL,MAAMuhC,IAAI3wB,SACxCu5G,EAAUn1H,KAAKqpH,aAAap6G,MAAM,GAAImmH,EAAUp1H,KAAKgL,MAAMg+G,YAG/D,GAFIoM,EAAU,GAAKD,EAAQ36G,QAAQ46G,GAAW,GAC1CD,EAAQ34H,KAAK44H,GACbxM,GAAYF,GAAauH,kBACzB,IAAKiF,EAAMhiF,WAAWiiF,GAElB,YADAn1H,KAAK2xH,OAAS,oCAIjB,GAAI/I,GAAYF,GAAawH,kBAC9B,IAAKgF,EAAM7hF,WAAW8hF,GAElB,YADAn1H,KAAK2xH,OAAS,oCAIjB,GAAI/I,GAAYF,GAAayH,mBAC9B,IAAK+E,EAAM3hF,YAAY4hF,GAEnB,YADAn1H,KAAK2xH,OAAS,qCAIjB,GAAI/I,GAAYF,GAAa0H,oBACzB8E,EAAMzhF,eAAe0hF,GAAU,CAChC,GAAIn1H,KAAKq1H,mBAAmBF,GACxB,OAEJ,YADAn1H,KAAK2xH,OAAS,uBAElB,CAEJuD,EAAM7iF,kBACNryC,KAAKiL,OAAOshC,IAAM2oF,EAAM3oF,GAC5B,CACA,gBAAA+jF,GACStwH,KAAKi1H,gBAAmBj1H,KAAK6xH,kBAE9B7xH,KAAK8oH,OACL9oH,KAAK8oH,MAAMwM,oBAAoBt1H,KAAKqpH,aAC5C,CACA,gBAAAmH,GACI,IAAIjkF,EAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACzB,IAAK5b,KAAKi1H,eACN,OACJ,IAAItjF,EAAQ3xC,KAAKqpH,aACG,GAAhB13E,EAAM/yC,SACN+yC,EAAQ,EAAI35B,UAAUu0B,EAAIC,WAC9B,IAAK,IAAI7yB,KAAKg4B,EAAO,CACjB,IAAIgpB,EAAKpuB,EAAI6sB,cAAcz/C,GACvBghD,EAAK,GACLxQ,GAAW0I,yBAAyBtmB,EAAK5yB,EAAGghD,EACpD,CACIpuB,EAAIC,UAAYxsC,KAAKgL,MAAMuhC,IAAIC,SAInCxsC,KAAKiL,OAAOshC,IAAMA,EAHdvsC,KAAK2xH,OAAS,4BAItB,CACA,mBAAAjB,GACI,IAAK1wH,KAAKi1H,eACN,OACJ,IAAI1oF,EAAMvsC,KAAKgL,MAAMuhC,IACjBgpF,EAAUv1H,KAAKmpH,YACf,EAAIr0G,SAASygH,KACbA,EAAU,EAAI1+G,cAAa,EAAM01B,EAAIC,WACzC,IAAIwlB,EAAW,EAAIn7C,cAAa,EAAM01B,EAAIC,UAC1C,IAAK,IAAI18B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/B,GAAIm8C,GAAQ6O,eAAevuB,EAAKz8B,GAAI,CAChC,IAAIu8B,EAAME,EAAI8c,YAAYv5C,GAAG,IACzBylH,EAAQzlH,EAAI,IAAMylH,EAAQlpF,EAAM,MAChC2lB,EAASliD,EAAI,IAAK,EAC1B,CACA,EAAI8E,QAAQo9C,GACZhyD,KAAK2xH,OAAS,yBAGlB3xH,KAAKiL,OAAOshC,IAAM0f,GAAQrd,aAAarC,EAAKylB,EAChD,CACA,cAAA4+D,GACI,IAAK5wH,KAAK6xH,iBACN,OACJ,IAAItlF,EAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACzB,MAAM,YAAEqtG,GAAgBjpH,KAAKgL,MAC7B,GAAIi+G,EAAc,GAAKntD,GAAUE,gBAAgBzvB,EAAK08E,GAGlD,OAFAntD,GAAUS,mBAAmBhwB,EAAK08E,QAClCjpH,KAAKiL,OAAOshC,IAAMA,GAGtB,IAAIxX,GAAW,EACf,IAAK,IAAIpb,KAAK3Z,KAAKqpH,aACXvtD,GAAUC,gBAAgBxvB,EAAK5yB,KAC/BmiD,GAAUO,mBAAmB9vB,EAAK5yB,GAClCob,GAAW,GAEnB,IAAK,IAAInlB,EAAI,EAAGA,GAAK28B,EAAIE,SAAU78B,IAC3B5P,KAAKmpH,YAAY58E,EAAII,SAAS/8B,GAAK,IAAM5P,KAAKmpH,YAAY58E,EAAIM,OAAOj9B,GAAK,IAAMksD,GAAUE,gBAAgBzvB,EAAK38B,KAC/GksD,GAAUS,mBAAmBhwB,EAAK38B,GAClCmlB,GAAW,GAEfA,EACA/0B,KAAKiL,OAAOshC,IAAMA,EAElBvsC,KAAK2xH,OAAS,0BACtB,CACA,aAAAb,GACI,IAAK9wH,KAAK6xH,iBACN,OACJ,MAAM,IAAEtlF,EAAG,YAAE08E,GAAgBjpH,KAAKgL,MAClC,GAAIi+G,EAAc,EAAG,CACjB,IAAKntD,GAAUE,gBAAgBzvB,EAAK08E,GAEhC,YADAjpH,KAAK2xH,OAAS,4BAGlB,IAAI6D,EAAO,IAAIx4E,GACfw4E,EAAKjrE,QAAQ,IAAK,EAAG,GACrBirE,EAAKjrE,QAAQ,IAAKvN,GAASsN,UAAW,GACtCkrE,EAAKpiE,QAAQ,EAAG,EAAG,GACnBoiE,EAAK9sE,aAAa,EAAGnc,EAAIkc,UAAUwgE,GAAar+G,QAAQ0xD,GAASA,EAAK57C,WAAW,QACjF1gB,KAAK+oH,YAAcyM,EAAK9hH,UAC5B,MACK,GAA0B,GAAtB1T,KAAKopH,cAAoB,CAC9B,IAAI12E,EAAO1yC,KAAKqpH,aAAa,GAC7B,IAAKvtD,GAAUC,gBAAgBxvB,EAAKmG,GAEhC,YADA1yC,KAAK2xH,OAAS,4BAGlB,IAAI6D,EAAO,IAAIx4E,GACfw4E,EAAKjrE,QAAQ,IAAK,EAAG,GACrBirE,EAAKjjF,aAAa,EAAGhG,EAAI8E,UAAUqB,GAAM9nC,QAAQ0xD,GAASA,EAAK57C,WAAW,QAC1E1gB,KAAK+oH,YAAcyM,EAAK9hH,UAC5B,MAEI1T,KAAK2xH,OAAS,0CACtB,CACA,cAAAX,GACI,IAAKhxH,KAAK6xH,iBACN,OACJ,IAAI2D,EAAOx1H,KAAK6oH,MAAM2M,KACtB,GAAKA,EACA,IAAqB,GAAjBA,EAAKhpF,UAAwC,KAAvBgpF,EAAKt4E,YAAY,IAAa4e,GAAUC,gBAAgBy5D,EAAM,GAAI,CAC7F,IAAIjpF,EAAMvsC,KAAKiL,OAAOshC,IAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACvC65G,EAASD,EAAKnkF,UAAU,GAAGzmC,QAAQ0xD,GAASA,EAAK57C,WAAW,OAChE,IAAK,IAAI/G,KAAK3Z,KAAKqpH,aAAc,CAC7B,IAAIqM,EAASnpF,EAAI8E,UAAU13B,GAAG/O,QAAQ0xD,GAASA,EAAK57C,WAAW,OAC/D6rB,EAAIgG,aAAa54B,EAAG,IAAI+7G,KAAWD,GACvC,CACA,MACJ,CACK,GAAqB,GAAjBD,EAAKhpF,UAAwC,KAAvBgpF,EAAKt4E,YAAY,IAAoC,KAAvBs4E,EAAKt4E,YAAY,IACzD,GAAjBs4E,EAAK/oF,UAAiBqvB,GAAUE,gBAAgBw5D,EAAM,GAAI,CAC1D,IAAIjpF,EAAMvsC,KAAKiL,OAAOshC,IAAMvsC,KAAKgL,MAAMuhC,IAAI3wB,QACvC65G,EAASD,EAAK/sE,UAAU,GAAG79C,QAAQ0xD,GAASA,EAAK57C,WAAW,OAChE,IAAK,IAAI9Q,EAAI,EAAGA,GAAK28B,EAAIE,SAAU78B,IAC/B,GAAI5P,KAAKmpH,YAAY58E,EAAII,SAAS/8B,GAAK,IAAM5P,KAAKmpH,YAAY58E,EAAIM,OAAOj9B,GAAK,GAAI,CAC9E,IAAI+lH,EAASppF,EAAIkc,UAAU74C,GAAGhF,QAAQ0xD,GAASA,EAAK57C,WAAW,OAC/D6rB,EAAImc,aAAa94C,EAAG,IAAI+lH,KAAWF,GACvC,CACJ,MACJ,EACAz1H,KAAK2xH,OAAS,8BAClB,CACA,gBAAAT,GACA,CACA,gBAAAE,GACA,CACA,gBAAAE,GACI,IAAKtxH,KAAK6xH,iBACN,OACJ,MAAM,IAAEtlF,EAAG,YAAE08E,GAAgBjpH,KAAKgL,MAClC,IAAIy+C,EAAQ,GACZ,IAAK,IAAI35C,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAC3B9P,KAAKmpH,YAAY58E,EAAII,SAAS78B,GAAK,IAAM9P,KAAKmpH,YAAY58E,EAAIM,OAAO/8B,GAAK,IAC1E25C,EAAMjtD,KAAKsT,GACnB,GAAoB,GAAhB25C,EAAM7qD,OAAV,CAIAoB,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtB,IAAK,IAAIhM,KAAK65C,EACVzpD,KAAKiL,OAAOshC,IAAIyoB,aAAaplD,EAAG,GAChCksD,GAAUqF,mBAAmBnhE,KAAKiL,OAAOshC,IAAK38B,EAAG,EAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAJtE,MAFI5P,KAAK2xH,OAAS,gCAQtB,CACA,mBAAAH,CAAoBr7C,EAAQC,GACxB,IAAIxvB,EAAI+6C,EACR,IAAK3hG,KAAKoyH,iBACN,OACJ,GAAc,GAAVj8C,GAAyB,GAAVC,EACf,OACJ,MAAM,IAAE7pC,EAAG,YAAEy8E,GAAgBhpH,KAAKgL,MAClC,IAAI4qH,EAKJ,GAHIA,EADiC,GAAjCrpF,EAAIsQ,aAAamsE,GACF,EAAIjxG,UAAU,IAAI1Z,KAAKyR,GAAMA,EAAI2T,EAAQ,KAEe,QAAvDmjC,EAAKuD,GAAW4D,gBAAgBxhB,EAAKy8E,UAAiC,IAAPpiE,EAAgBA,EAAKuD,GAAWgE,YAAY5hB,EAAKy8E,GACzG,GAAvB4M,EAAah3H,OACb,OACJ,IAAIulB,EAAQxN,KAAKue,MAAMkhD,EAAQD,GAC3BtgE,EAAM,EAAI4B,OAAOm+G,EAAav3H,KAAKgqC,GAAS1xB,KAAKuF,IAAI8H,EAAUG,EAAOkkB,IAAS,IAAO1xB,KAAKuF,IAAIvF,KAAK4a,IAAI8W,OACxGthB,EAAKwlB,EAAI6e,MAAM49D,GAAehsE,GAASsN,UAAY3zC,KAAK2a,IAAIskG,EAAa//G,IACzEmR,EAAKulB,EAAI8e,MAAM29D,GAAehsE,GAASsN,UAAY3zC,KAAK4a,IAAIqkG,EAAa//G,IAC7E7V,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtB,IAAIi6G,EAAU71H,KAAKiL,OAAOshC,IAAIge,QAAQ,IAAKxjC,EAAIC,GAC/ChnB,KAAKiL,OAAOshC,IAAI6mB,QAAQ41D,EAAa6M,EAAS,GAC9C71H,KAAKiL,OAAOshC,IAAoH,QAA7Go1D,EAAKx3C,GAAWuH,qBAAqB1xD,KAAKiL,OAAOshC,IAAK,EAAI11B,cAAa,EAAM7W,KAAKiL,OAAOshC,IAAIC,kBAA+B,IAAPm1D,EAAgBA,EAAK3hG,KAAKiL,OAAOshC,IACzK,IAAK,IAAIz8B,EAAI,EAAGA,GAAK9P,KAAKiL,OAAOshC,IAAIC,SAAU18B,IAE3C,GAAI,EADK9P,KAAKiL,OAAOshC,IAAI6e,MAAMt7C,GAAKiX,EAAS/mB,KAAKiL,OAAOshC,IAAI8e,MAAMv7C,GAAKkX,GACjD6kC,GAAUW,qBAAsB,CACnDxsD,KAAKiL,OAAO+9G,YAAcl5G,EAC1B,KACJ,CAER,CACA,cAAA+hH,GAGI,OAF0B,GAAtB7xH,KAAKopH,gBACLppH,KAAK2xH,OAAS,0DACX3xH,KAAKopH,cAAgB,CAChC,CACA,YAAA6L,GAGI,OAF+B,GAA3Bj1H,KAAKgL,MAAMuhC,IAAIC,WACfxsC,KAAK2xH,OAAS,uBACX3xH,KAAKgL,MAAMuhC,IAAIC,SAAW,CACrC,CACA,cAAA4lF,GACI,OAA8B,GAA1BpyH,KAAKgL,MAAMg+G,aAA8C,GAA1BhpH,KAAKgL,MAAMi+G,cAC1CjpH,KAAK2xH,OAAS,yCACP,EAGf,CACA,eAAAW,GAGI,OAFKtyH,KAAKspH,cACNtpH,KAAK2xH,OAAS,0BACX3xH,KAAKspH,WAChB,CACA,iBAAA6I,CAAkBxgE,EAAQ8W,GACtB,GAA0B,GAAtBzoE,KAAKopH,cACL,OAAO,EACX,IAAK,IAAIr/G,EAAI,EAAGA,EAAI4nD,EAAO/yD,OAAQmL,IAAK,CACpC,IAAIwV,EAAIoyC,EAAO5nD,GACXkoH,GAAM,EACV,IAAK,IAAI57G,EAAI,EAAGA,EAAIkJ,EAAE3gB,OAAQyX,IAC1B,IAAKrW,KAAKmpH,YAAY5pG,EAAElJ,GAAK,GAAI,CAC7B47G,GAAM,EACN,KACJ,CACJ,GAAIA,EAEA,OADAloH,GAAK0+D,EACE1+D,EAAI,EAAIA,EAAI4nD,EAAO/yD,OAASmL,GAAK4nD,EAAO/yD,OAASmL,EAAI4nD,EAAO/yD,OAASmL,CAEpF,CACA,IAAK,IAAIA,EAAI,EAAGA,EAAI4nD,EAAO/yD,OAAQmL,IAAK,CACpC,IAAIwV,EAAIoyC,EAAO5nD,GACf,IAAK,IAAIsM,EAAI,EAAGA,EAAIkJ,EAAE3gB,OAAQyX,IAC1B,GAAIrW,KAAKmpH,YAAY5pG,EAAElJ,GAAK,GACxB,OAAOtM,CACnB,CACA,OAAO,CACX,CACA,UAAA+nH,GACI9xH,KAAKiL,OAAO+9G,YAAc,EAC1BhpH,KAAKiL,OAAOg+G,YAAc,EAC1BjpH,KAAKiL,OAAOi+G,aAAe,EAAIryG,cAAa,EAAO7W,KAAKgL,MAAMuhC,IAAIC,SACtE,CACA,cAAA0mF,CAAexgF,EAAM+P,EAAO1kD,GACxB,IAAIwuC,EAAMvsC,KAAKgL,MAAMuhC,IACjBlc,EAAM85B,GAAW8D,uBAAuB1hB,EAAKmG,EAAM+P,GAGvD,GAFkB,GAAdpyB,EAAIzxB,SACJyxB,EAAM85B,GAAWgE,YAAY5hB,EAAKmG,IACpB,GAAdriB,EAAIzxB,OAEJ,YADAoB,KAAK2xH,OAAS,6DAGlB,IAAI3kG,EAAK,GAAIC,EAAK,GAAI6oG,EAAS,GAC/B,IAAK,IAAIhmH,EAAI,EAAGA,EAAIugB,EAAIzxB,OAAQkR,IAAK,CACjC,IAAI0S,EAAI+pB,EAAI6e,MAAM1Y,GAAQsK,GAASsN,UAAY3zC,KAAK2a,IAAIjB,EAAIvgB,IACxD4S,EAAI6pB,EAAI8e,MAAM3Y,GAAQsK,GAASsN,UAAY3zC,KAAK4a,IAAIlB,EAAIvgB,IACxD86C,EAAQiB,GAAU2F,gBAAgBjlB,EAAK/pB,EAAGE,GAC1C2xB,GAAUI,eAAelI,EAAIoQ,aAAajK,KAAU,EACpDkY,GAAuC,KAA9Bj0C,KAAKuF,IAAI,EAAUmU,EAAIvgB,KAEhC86C,GAAsD,KAA7Cj0C,KAAKuF,IAAI8H,EAAU,GAAMrN,KAAK+M,GAAI2M,EAAIvgB,KACnDkd,EAAGxwB,KAAKgmB,GACRyK,EAAGzwB,KAAKkmB,GACRozG,EAAOt5H,KAAKouD,EAChB,CACA,IAAI/0C,EAAM,EAAI4D,QAAQq8G,GACtB91H,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtB,IAAIspD,EAAOrZ,GAAUiF,YAAY9wD,KAAKiL,OAAOshC,IAAKvf,EAAGnX,EAAI,IAAKoX,EAAGpX,EAAI,KACzD,GAARqvD,IACAA,EAAOllE,KAAKiL,OAAOshC,IAAIge,QAAQ,IAAKv9B,EAAGnX,EAAI,IAAKoX,EAAGpX,EAAI,MAC3Do2C,GAAQmH,QAAQpzD,KAAKiL,OAAOshC,IAAKmG,EAAMwyB,EAAMziB,EAAO1kD,GAChD8X,EAAIjX,QAAU,IACdoB,KAAKiL,OAAOuoH,OAASjnF,EAAI3wB,QACzBspD,EAAOrZ,GAAUiF,YAAY9wD,KAAKiL,OAAOuoH,OAAQxmG,EAAGnX,EAAI,IAAKoX,EAAGpX,EAAI,KACxD,GAARqvD,IACAA,EAAOllE,KAAKiL,OAAOuoH,OAAOjpE,QAAQ,IAAKv9B,EAAGnX,EAAI,IAAKoX,EAAGpX,EAAI,MAC9Do2C,GAAQmH,QAAQpzD,KAAKiL,OAAOuoH,OAAQ9gF,EAAMwyB,EAAMziB,EAAO1kD,GAE/D,CACA,iBAAAs1H,CAAkB5wE,EAAO1kD,GACrB,IAAIwuC,EAAMvsC,KAAKgL,MAAMuhC,IACjBkd,EAAQ,GACZ,IAAK,IAAI35C,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAC3B9P,KAAKmpH,YAAY58E,EAAII,SAAS78B,GAAK,IAAM9P,KAAKmpH,YAAY58E,EAAIM,OAAO/8B,GAAK,IAC1E25C,EAAMjtD,KAAKsT,GACnB,IAAIimH,EAAah4H,GAAQi/C,GAAS8Z,mBAAqB/4D,GAAQi/C,GAAS6Z,kBACpEm/D,EAAaD,GAAch4H,GAAQi/C,GAAS2lB,iBAC5Cg0C,EAAYof,EAChB,IAAK,IAAIjmH,EAAI,EAAGA,EAAI25C,EAAM7qD,SAAW+3G,EAAW7mG,IAAK,CACjD,IAAIF,EAAI65C,EAAM35C,IACVy8B,EAAI2H,UAAUtkC,IAAM6yC,GAAS1kD,GAAQi/C,GAAS+Y,iBAEzCxpB,EAAIupB,SAASlmD,IAAM7R,KADxB44G,GAAY,EAGpB,CACA,GAAKA,EAAL,CAIA32G,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtB,IAAK,IAAI9L,EAAI,EAAGA,EAAI25C,EAAM7qD,OAAQkR,IAAK,CACnC,IAAIF,EAAI65C,EAAM35C,GAAI48B,EAAM1sC,KAAKiL,OAAOshC,IAAII,SAAS/8B,GAAIg9B,EAAM5sC,KAAKiL,OAAOshC,IAAIM,OAAOj9B,GAC9EmmH,GAAc/1H,KAAKiL,OAAOshC,IAAIupB,SAASlmD,IAAM7R,EAC7CiC,KAAKiL,OAAOshC,IAAI+qB,cAAc1nD,EAAGg9B,EAAKF,GAEjC1sC,KAAKiL,OAAOshC,IAAI2H,UAAUtkC,IAAM6yC,GAASziD,KAAKiL,OAAOshC,IAAIupB,SAASlmD,IAAM7R,EACxEi4H,GAAcvzE,GAASziD,KAAKiL,OAAOshC,IAAI2H,UAAUtkC,GAGlD5P,KAAKiL,OAAOshC,IAAI8qB,YAAYznD,EAAG7R,GAF/BiC,KAAKiL,OAAOshC,IAAIyoB,aAAaplD,EAAG6yC,GAI/BszE,GACL/1H,KAAKiL,OAAOshC,IAAI+qB,cAAc1nD,EAAGg9B,EAAKF,EAE9C,CAhBA,MAFI1sC,KAAK2xH,OAAS,uBAmBtB,CACA,mBAAA2B,CAAoB7lE,EAAM/a,GACtB,IAAInG,EAAMvsC,KAAKgL,MAAMuhC,IAEjB+iB,EADM/iB,EAAI8c,YAAY3W,GACZ9zC,OAAQ2wD,EAAMpF,GAAWuD,YAAYD,GAAM7uD,OACzD,GAAI0wD,EAAMC,EAEN,YADAvvD,KAAK2xH,OAAS,oEAGlB,GAAW,GAAPriE,EAEA,YADAtvD,KAAKkzH,eAAexgF,EAAM,EAAGsK,GAAS+Y,iBAG1C,GAAIzG,GAAOC,EAIP,OAHAvvD,KAAKiL,OAAOshC,IAAM4d,GAAWwF,kBAAkBpjB,EAAKmG,EAAM+a,QACnC,MAAnBztD,KAAKiL,OAAOshC,MACZvsC,KAAK2xH,OAAS,wCAGtB,IAAIthG,EAAMw7B,GAAUuC,eAAe7hB,EAAKmG,GACpCujF,EAAS9rE,GAAWoE,oBAAoBd,EAAMp9B,GAClD,GAAc,MAAV4lG,EAIA,OAHAj2H,KAAKiL,OAAOshC,IAAM4d,GAAWwF,kBAAkBpjB,EAAKmG,EAAM+a,QACnC,MAAnBztD,KAAKiL,OAAOshC,MACZvsC,KAAK2xH,OAAS,wCAGtB3xH,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtB,IAAIuI,EAAQgmC,GAAWmH,qBAAqB/kB,EAAKmG,EAAMujF,GACnDzzG,EAAIxiB,KAAKiL,OAAOshC,IAAI6e,MAAM1Y,GAAQsK,GAASsN,UAAY3zC,KAAK2a,IAAInN,GAChEzB,EAAI1iB,KAAKiL,OAAOshC,IAAI8e,MAAM3Y,GAAQsK,GAASsN,UAAY3zC,KAAK4a,IAAIpN,GAChE+gD,EAAOrZ,GAAUiF,YAAY9wD,KAAKiL,OAAOshC,IAAK/pB,EAAGE,GACzC,GAARwiD,IACAA,EAAOllE,KAAKiL,OAAOshC,IAAIge,QAAQ,IAAK/nC,EAAGE,IAC3CupC,GAAQmH,QAAQpzD,KAAKiL,OAAOshC,IAAKmG,EAAMwyB,EAAM,EACjD,CACA,mBAAAquD,CAAoB9lE,EAAM3D,GACtB,IAAIvd,EAAMvsC,KAAKgL,MAAMuhC,IACjBG,EAAMH,EAAII,SAASmd,GAAOld,EAAML,EAAIM,OAAOid,GAC3C2pE,EAAMlnF,EAAIsQ,aAAanQ,GAAMgnF,EAAMnnF,EAAIsQ,aAAajQ,GACxD,GAAI6mF,EAAM,GAAY,GAAPC,OACV,MAAW,GAAPD,GAAYC,EAAM,GAOvB,YADA1zH,KAAK2xH,OAAS,yCANY,CAC1B,IAAI3hH,EAAIyjH,EACRA,EAAMC,EACNA,EAAM1jH,CACV,CAIA,CACA,IAAIwgC,EAAMjE,EAAI8c,YAAY3c,GACtB/nB,EAAK4nB,EAAI6e,MAAM1e,GAAM9nB,EAAK2nB,EAAI8e,MAAM3e,GACpC7nB,EAAK0nB,EAAI6e,MAAMxe,GAAM9nB,EAAKynB,EAAI8e,MAAMze,GACpCvc,EAAM,GACV,IAAK,IAAIvgB,EAAI,EAAUA,EAAI0gC,EAAI5xC,OAAQkR,IAC/B0gC,EAAI1gC,IAAM88B,GACVvc,EAAI7zB,KAAKma,KAAKue,MAAMqX,EAAI8e,MAAM7a,EAAI1gC,IAAM8U,EAAI2nB,EAAI6e,MAAM5a,EAAI1gC,IAAM6U,IAExE,IAAIsxG,EAAS9rE,GAAWoE,oBAAoBd,EAAMp9B,GAClD,GAAc,MAAV4lG,EAEA,YADAj2H,KAAK2xH,OAAS,yCAGlB,IAAI5hE,EAAUtsC,EAAQ,EAAGktC,EAAQ,EAAGC,EAAQ,EACxCC,EAAQl6C,KAAKue,MAAMpQ,EAAKF,EAAIC,EAAKF,GAAK5U,EAAIgT,EAAQ8B,EAAKF,EAAIG,EAAKF,GACpE,IAAK,IAAI9U,EAAI,EAAGA,EAAImmH,EAAOr3H,OAAQkR,IAAK,CACpC,IAAIgU,EAAKE,EAAUiyG,EAAOnmH,GAAI+gD,GAG9B,GAFI/sC,EAAK,IACLA,GAAML,GACN3T,EAAI,GAAKgU,EAAKisC,EACd,SACJ,IAAIvtC,EAAImC,EAAK5U,EAAI4G,KAAK2a,IAAIxN,EAAK+sC,GAC3BnuC,EAAIkC,EAAK7U,EAAI4G,KAAK4a,IAAIzN,EAAK+sC,GAC3BhF,GAAUiF,YAAYvkB,EAAK/pB,EAAGE,GAAK,IAEvCqtC,EAAUjsC,EACV6sC,EAAQnuC,EACRouC,EAAQluC,EACZ,CACIqtC,EAAUtsC,EACVzjB,KAAK2xH,OAAS,yCAGlB3xH,KAAKiL,OAAOshC,IAAMA,EAAI3wB,QACtB5b,KAAKiL,OAAOshC,IAAI4e,WAAWve,EAAK+jB,EAAOC,GAC3C,CACA,sBAAAmkE,GACI,IAAIt/D,EAAW,EACXlpB,EAAMvsC,KAAKgL,MAAMuhC,IAAK2pF,EAAWl2H,KAAKmpH,YAC1C,IAAK,IAAIr5G,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,IAAIglD,EAAKvoB,EAAII,SAAS78B,GAAIilD,EAAKxoB,EAAIM,OAAO/8B,GACtC4iC,EAAO,EACX,GAAKwjF,EAASphE,EAAK,KAAOohE,EAASnhE,EAAK,IAAM9I,GAAQc,UAAUxgB,EAAKuoB,IAChEohE,EAASnhE,EAAK,KAAOmhE,EAASphE,EAAK,IAAM7I,GAAQc,UAAUxgB,EAAKwoB,GAEjE,OADA/0D,KAAK2xH,OAAS,4BACP,EAMX,GAJIuE,EAASphE,EAAK,KAAOohE,EAASnhE,EAAK,GACnCriB,EAAOoiB,EACFohE,EAASnhE,EAAK,KAAOmhE,EAASphE,EAAK,KACxCpiB,EAAOqiB,GACC,GAARriB,GAAaA,GAAQ+iB,OACpB,IAAgB,GAAZA,EAIL,OADAz1D,KAAK2xH,OAAS,wCACP,EAHPl8D,EAAW/iB,CAIf,CACJ,CACA,OAAO,CACX,CACA,UAAAihF,CAAW7pE,EAAMqsE,GAAkB,GAC/B,IAAI,IAAE5pF,GAAQvsC,KAAKgL,MACfgnG,EAAQzlE,EAAII,SAASmd,GAAO4nD,EAAQnlE,EAAIM,OAAOid,GAC/CvqC,EAAIusB,GAAMQ,aAAaC,GAC3BhtB,EAAEyuB,WAAWgkE,EAAQ,EAAGN,EAAQ,GAChC,IAAI0kB,EAAQ,GAAIC,EAAQ,GACxB,IAAK,IAAIpnF,KAAO1vB,EAAEyvB,2BACVC,EAAI/tC,SAAS8wG,EAAQ,KACrBokB,EAAQ,EAAI91H,IAAI2uC,EAAK,IACrBA,EAAI/tC,SAASwwG,EAAQ,KACrB2kB,EAAQ,EAAI/1H,IAAI2uC,EAAK,IAE7B,IAAIqnF,EAAUF,EAAMx3H,QAAU2tC,EAAIknC,cAAcu+B,GAAS,EAAI,EAAI,GAC7DukB,EAAUF,EAAMz3H,QAAU2tC,EAAIknC,cAAci+B,GAAS,EAAI,EAAI,GAC7D4iB,GAAO,EAAOE,GAAO,EACzB,IAAK,IAAI76G,KAAKy8G,EACV,GAAIp2H,KAAKu0H,WAAW56G,GAAI,CACpB26G,GAAO,EACP,KACJ,CACJ,IAAK,IAAI36G,KAAK08G,EACV,GAAIr2H,KAAKu0H,WAAW56G,GAAI,CACpB66G,GAAO,EACP,KACJ,CACJ,GAAI2B,GAA8C,GAA3B5pF,EAAIsQ,aAAam1D,GACpC,MAAO,CAACN,EAAOM,EAAOqkB,GACrB,GAAIF,GAA8C,GAA3B5pF,EAAIsQ,aAAa60D,GACzC,MAAO,CAACM,EAAON,EAAO0kB,GACrB,GAAI9B,IAASE,QACb,GAAKA,IAASF,GAASiC,EAAUD,EAClC,MAAO,CAAC5kB,EAAOM,EAAOqkB,GAC1B,MAAO,CAACrkB,EAAON,EAAO0kB,EAC1B,CACA,UAAA7B,CAAW7hF,GACP,IAAIt6B,EAAOpY,KAAKgL,MAAMk+G,aACtB,QAAO9wG,GAAOA,EAAKs6B,EAAO,EAC9B,CACA,kBAAA2iF,CAAmB1jF,GACf,IAAI6kF,EAAU,IAAI3uE,GAAa7nD,KAAKgL,MAAMuhC,IAAI3wB,SAC9C,IAAK,IAAIpb,KAAMg2H,EAAQvuE,YAAa,CAChC,IAAI3B,EAAOkwE,EAAQtuE,QAAQ1nD,GAC3B,IAAK,IAAIkyC,KAAQf,EACb,GAAI2U,EAAK3U,MAAMzwC,SAASwxC,GAIpB,OAHA8jF,EAAQjuE,WAAW/nD,GACnBg2H,EAAQnkF,kBACRryC,KAAKiL,OAAOshC,IAAMiqF,EAAQjqF,KACnB,CAEnB,CACA,OAAO,CACX,EC92DJ,MAAMkqF,GAAiB,CACnB,KAAM,KAAM,KAAM,KAAM,MAEtBC,GAAmB,CACrB,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KACnC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAElCC,GAAmB,CACrB,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KACnC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE9CC,GAAmB,CACrB,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC/C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChD,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,MAE7CC,GAAmB,CACrB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAChD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAE9CC,GAAkB,CACpB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClD,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEpD,IAAIC,IACJ,SAAWA,GACPA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAmB,MAAI,IAAM,OAC5C,CAZD,CAYGA,KAAgBA,GAAc,CAAC,IAClC,MAAMC,GAAgB,CAClB,CAAEx2H,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,oBAAqBC,SAAU,eAC5E,CAAE3qG,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,oBAAqBC,SAAU,qBAC5E,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,WAAYC,SAAU,KACvE,CAAE3qG,GAAI,UAAW6qG,QAAS,cAAeH,SAAU,YAAaC,SAAU,KAC1E,CAAE3qG,GAAI,UAAW6qG,QAAS,cAAeH,SAAU,+BAAgCC,SAAU,IAC7F,CAAE3qG,GAAI,UAAW6qG,QAAS,cAAeH,SAAU,iDAAkDC,SAAU,KAC/G,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,oBAAqBC,SAAU,WAChF,CAAE3qG,GAAI,UAAW6qG,QAAS,cAAeH,SAAU,mBAAoBC,SAAU,WACjF,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,mCAAoCC,SAAU,KAC/F,CAAE3qG,GAAI,MAAO6qG,QAAS,UAAWH,SAAU,2CAA4CC,SAAU,eACjG,CAAE3qG,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,+BAAgCC,SAAU,eACvF,CAAE3qG,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,6BAC/C,CAAE1qG,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,yBAA0BK,WAAW,EAAMJ,SAAU,KAClG,CAAE3qG,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,yBAA0BK,WAAW,EAAMJ,SAAU,KAClG,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,8BAA+BK,WAAW,EAAMJ,SAAU,KAC3G,CAAE3qG,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,yBAA0BK,WAAW,EAAMJ,SAAU,MAEhG8rB,GAAgB,CAClB,CAAEz2H,GAAI,YAAawlB,KAAM,IAAKklF,SAAU,6BAA8BC,SAAU,WAChF,CAAE3qG,GAAI,YAAawlB,KAAM,IAAKklF,SAAU,+BAAgCC,SAAU,WAClF,CAAE3qG,GAAI,YAAawlB,KAAM,IAAKklF,SAAU,6BAA8BC,SAAU,WAChF,CAAE3qG,GAAI,YAAawlB,KAAM,IAAKklF,SAAU,6BAA8BC,SAAU,WAChF,CAAE3qG,GAAI,YAAawlB,KAAM,IAAKklF,SAAU,iCAAkCC,SAAU,WACpF,CAAE3qG,GAAI,YAAawlB,KAAM,IAAKklF,SAAU,+BAAgCC,SAAU,WAClF,CAAE3qG,GAAI,YAAawlB,KAAM,IAAKklF,SAAU,+BAAgCC,SAAU,WAClF,CAAE3qG,GAAI,aAAcwlB,KAAM,KAAMklF,SAAU,+BAAgCC,SAAU,WACpF,CAAE3qG,GAAI,aAAcwlB,KAAM,KAAMklF,SAAU,8BAA+BC,SAAU,WACnF,CAAE3qG,GAAI,YAAawlB,KAAM,IAAKklF,SAAU,6BAA8BC,SAAU,WAChF,CAAE3qG,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,4BAA6BC,SAAU,UAAW7sG,IAAK,KACpG,CAAEkC,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,4BAA6BC,SAAU,UAAW7sG,IAAK,KACtG,CAAEkC,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,8BAA+BK,WAAW,EAAMJ,SAAU,IAC3G,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,iCAAkCK,WAAW,EAAMJ,SAAU,IAC9G,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,iCAAkCK,WAAW,EAAMJ,SAAU,IAC9G,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,iCAAkCK,WAAW,EAAMJ,SAAU,IAC9G,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,iCAAkCK,WAAW,EAAMJ,SAAU,IAC9G,CAAE3qG,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,+BAAgCK,WAAW,EAAMJ,SAAU,KAExG+rB,GAAgB,CAClB,CAAE12H,GAAI,MAAO6qG,QAAS,UAAWH,SAAU,iCAAkCC,SAAU,KACvF,CAAE3qG,GAAI,MAAO6qG,QAAS,UAAWH,SAAU,iCAAkCC,SAAU,KACvF,CAAE3qG,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,iCAAkCC,SAAU,KAC3F,CAAE3qG,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,oCAAqCC,SAAU,IAC5F,CAAE3qG,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,qCAAsCC,SAAU,KAC7F,CAAE3qG,GAAI,WAAY6qG,QAAS,SAAUH,SAAU,mCAAoCC,SAAU,KAC7F,CAAE3qG,GAAI,WAAY6qG,QAAS,WAAYH,SAAU,mCAAoCC,SAAU,KAC/F,CAAE3qG,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,kDAAmDC,SAAU,KAC5G,CAAE3qG,GAAI,WAAY6qG,QAAS,WAAYH,SAAU,qCACjD,CAAE1qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,yCAA0CC,SAAU,WACrG,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,4CAA6CC,SAAU,IACxG,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,wCAAyCC,SAAU,KACpG,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,iDAAkDC,SAAU,IAC7G,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,yBAA0BC,SAAU,WACrF,CAAE3qG,GAAI,WAAY6qG,QAAS,eAAgBH,SAAU,2BAA4BC,SAAU,WAC3F,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,iCAAkCC,SAAU,WAC7F,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,iCAAkCC,SAAU,WAC7F,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,gCAAiCC,SAAU,WAC5F,CAAE3qG,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,gCAAiCC,SAAU,WAC1F,CAAE3qG,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,gCAAiCC,SAAU,WAC1F,CAAE3qG,GAAI,cAAe6qG,QAAS,kBAAmBH,SAAU,uCAAwCC,SAAU,IAC7G,CAAE3qG,GAAI,eAAgB6qG,QAAS,mBAAoBH,SAAU,4BAA6BC,SAAU,IACpG,CAAE3qG,GAAI,eAAgB6qG,QAAS,mBAAoBH,SAAU,4BAA6BC,SAAU,IACpG,CAAE3qG,GAAI,gBAAiB6qG,QAAS,oBAAqBH,SAAU,8BAA+BC,SAAU,IACxG,CAAE3qG,GAAI,gBAAiB6qG,QAAS,oBAAqBH,SAAU,0BAA2BC,SAAU,IACpG,CAAE3qG,GAAI,UAAW6qG,QAAS,cAAeH,SAAU,0BAA2BC,SAAU,KAEtFgsB,GAAkB,CACpB,CAAE32H,GAAI,UAAW6qG,QAAS,gBAAiBH,SAAU,mCAAoCC,SAAU,IACnG,CAAE3qG,GAAI,YAAa6qG,QAAS,kBAAmBH,SAAU,2BAA4BC,SAAU,IAC/F,CAAE3qG,GAAI,WAAY6qG,QAAS,iBAAkBH,SAAU,sCAAuCC,SAAU,IACxG,CAAE3qG,GAAI,YAAa6qG,QAAS,kBAAmBH,SAAU,mCAAoCC,SAAU,IACvG,CAAE3qG,GAAI,YAAa6qG,QAAS,mBAAoBH,SAAU,mCAAoCC,SAAU,IACxG,CAAE3qG,GAAI,aAAc6qG,QAAS,sBAAuBH,SAAU,4CAA6CC,SAAU,IACrH,CAAE3qG,GAAI,UAAW6qG,QAAS,cAAeH,SAAU,uCAAwCC,SAAU,KACrG,CAAE3qG,GAAI,UAAW6qG,QAAS,cAAeH,SAAU,mCAAoCC,SAAU,KACjG,CAAE3qG,GAAI,SAAU6qG,QAAS,kBAAmBH,SAAU,+BAAgCC,SAAU,KAChG,CAAE3qG,GAAI,YAAa6qG,QAAS,qBAAsBH,SAAU,2BAA4BC,SAAU,KAClG,CAAE3qG,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,2CAA4CC,SAAU,IACnG,CAAE3qG,GAAI,MAAO6qG,QAAS,UAAWH,SAAU,iCAAkCC,SAAU,IACvF,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,mDAAoDC,SAAU,KAC/G,CAAE3qG,GAAI,UAAW6qG,QAAS,cAAeH,SAAU,mDAAoDC,SAAU,MACjH,CAAE3qG,GAAI,eAAgB6qG,QAAS,mBAAoBH,SAAU,sCAAuCC,SAAU,UAAW7sG,IAAK,KAC9H,CAAEkC,GAAI,cAAe6qG,QAAS,kBAAmBH,SAAU,8BAA+BC,SAAU,WAAY7sG,IAAK,MAEnH84H,GAAgB,CAClB,CAAE52H,GAAI,KAAM6qG,QAAS,SAAUH,SAAU,kCAAmCC,SAAU,WAAY7sG,IAAK,WACvG,CAAEkC,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,oCAAqCC,SAAU,aAAc7sG,IAAK,aAC/G,CAAEkC,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,2CAA4CC,SAAU,aAAc7sG,IAAK,aACtH,CAAEkC,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,4CAA6CC,SAAU,cAAe7sG,IAAK,cAC1H,CAAEkC,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,kCAAmCC,SAAU,IAC9F,CAAE3qG,GAAI,WAAY6qG,QAAS,eAAgBH,SAAU,oCAAqCC,SAAU,IACpG,CAAE3qG,GAAI,WAAY6qG,QAAS,eAAgBH,SAAU,2CAA4CC,SAAU,IAC3G,CAAE3qG,GAAI,YAAa6qG,QAAS,gBAAiBH,SAAU,4CAA6CC,SAAU,IAC9G,CAAE3qG,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,6BAA8BC,SAAU,IACvF,CAAE3qG,GAAI,UAAW6qG,QAAS,cAAeH,SAAU,+BAAgCC,SAAU,IAC7F,CAAE3qG,GAAI,UAAW6qG,QAAS,cAAeH,SAAU,sCAAuCC,SAAU,IACpG,CAAE3qG,GAAI,WAAY6qG,QAAS,eAAgBH,SAAU,uCAAwCC,SAAU,IACvG,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,+BAAqCC,SAAU,IAChG,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,uBAA6BC,SAAU,IACxF,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,+BAAqCC,SAAU,IAChG,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,uBAA6BC,SAAU,IACxF,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,gCAAsCC,SAAU,IACjG,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,wBAA8BC,SAAU,IACzF,CAAE3qG,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,gCAAsCC,SAAU,UAAW7sG,IAAK,KACjH,CAAEkC,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,wBAA8BC,SAAU,UAAW7sG,IAAK,KACzG,CAAEkC,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,mCAAoCC,SAAU,UAAW7sG,IAAK,KAC7G,CAAEkC,GAAI,QAAS6qG,QAAS,YAAaH,SAAU,iCAAkCC,SAAU,UAAW7sG,IAAK,KAC3G,CAAEkC,GAAI,SAAU6qG,QAAS,aAAcH,SAAU,mCAAoCC,SAAU,WAC/F,CAAE3qG,GAAI,OAAQ6qG,QAAS,WAAYH,SAAU,mCAAoCC,SAAU,YAExF,MAAMksB,WAAoB7qB,GAC7B,WAAAtvG,CAAY4rH,EAAOwO,EAAUP,GAAYQ,MACrC7sH,QACA1K,KAAK8oH,MAAQA,EACb9oH,KAAKs3H,QAAUA,CACnB,CACA,MAAAxvG,GACI,GAAI9nB,KAAKs3H,SAAWP,GAAYQ,KAC5B,IAAK,IAAIC,KAAOR,GACZh3H,KAAK4pG,QAAQptG,KAAKg7H,QACrB,GAAIx3H,KAAKs3H,SAAWP,GAAYxvD,KACjC,IAAK,IAAIiwD,KAAOP,GACZj3H,KAAK4pG,QAAQptG,KAAKg7H,QACrB,GAAIx3H,KAAKs3H,SAAWP,GAAYvvD,KACjC,IAAK,IAAIgwD,KAAON,GACZl3H,KAAK4pG,QAAQptG,KAAKg7H,QACrB,GAAIx3H,KAAKs3H,SAAWP,GAAYU,OACjC,IAAK,IAAID,KAAOL,GACZn3H,KAAK4pG,QAAQptG,KAAKg7H,QACrB,GAAIx3H,KAAKs3H,SAAWP,GAAYpI,KACjC,IAAK,IAAI6I,KAAOJ,GACZp3H,KAAK4pG,QAAQptG,KAAKg7H,QACjBx3H,KAAKs3H,SAAWP,GAAYW,OACjC13H,KAAK23H,iBAAiBb,IACjB92H,KAAKs3H,SAAWP,GAAYa,OACjC53H,KAAK23H,iBAAiBjB,IACjB12H,KAAKs3H,SAAWP,GAAYc,OACjC73H,KAAK23H,iBAAiBhB,IACjB32H,KAAKs3H,SAAWP,GAAYe,OACjC93H,KAAK23H,iBAAiBf,IACjB52H,KAAKs3H,SAAWP,GAAYgB,OACjC/3H,KAAK23H,iBAAiBd,IACjB72H,KAAKs3H,SAAWP,GAAYiB,OACjCh4H,KAAK23H,iBAAiBlB,GAC9B,CACA,gBAAAkB,CAAiBx+D,GACb,IAAK,IAAIh4C,KAAMg4C,EACXn5D,KAAK4pG,QAAQptG,KAAK,CAAEgE,GAAI,WAAW2gB,IAAM6E,KAAM7E,EAAI+pF,SAAU,sBAAsB/pF,MAE3F,CACA,SAAAkrF,CAAU7rG,GACN,IAAIy3H,EAAO,EAAGpP,EAAQ,KACtB,GAAIroH,EAAGkgB,WAAW,YAAa,CAC3B,IAAIS,EAAK3gB,EAAGmgB,UAAU,GACtBs3G,EAAOvP,GAAa+C,QACpB5C,EAAQ,CAAEl2C,QAASxxD,EACvB,KACe,UAAN3gB,EACLy3H,EAAOvP,GAAagB,OACT,QAANlpH,EACDR,KAAK8oH,MAAMoP,UACXl4H,KAAK8oH,MAAMqP,cAEXn4H,KAAK8oH,MAAM8I,YAAY,oBAEhB,QAANpxH,EACDR,KAAK8oH,MAAMsP,UACXp4H,KAAK8oH,MAAMuP,cAEXr4H,KAAK8oH,MAAM8I,YAAY,oBAEhB,OAANpxH,EACLy3H,EAAOvP,GAAasB,IACT,QAANxpH,EACLy3H,EAAOvP,GAAaoB,KACT,SAANtpH,EACLR,KAAK8oH,MAAMwP,eACA,OAAN93H,EACLy3H,EAAOvP,GAAakB,MACT,WAANppH,EACLR,KAAK8oH,MAAMyP,YACA,WAAN/3H,EACLR,KAAK8oH,MAAM0P,KAAK,IACL,UAANh4H,EACLR,KAAK8oH,MAAM0P,KAAK,MACL,UAANh4H,EACLy3H,EAAOvP,GAAauB,UACT,WAANzpH,EACLy3H,EAAOvP,GAAayB,WACT,WAAN3pH,EACLy3H,EAAOvP,GAAa0B,eACT,WAAN5pH,EACLy3H,EAAOvP,GAAa4B,eACT,WAAN9pH,EACLy3H,EAAOvP,GAAa6B,WACT,QAAN/pH,GACLy3H,EAAOvP,GAAaoD,OACpBjD,EAAQ,CAAEl4F,MAAO,IAEN,SAANnwB,GACLy3H,EAAOvP,GAAaoD,OACpBjD,EAAQ,CAAEl4F,OAAQ,IAEP,OAANnwB,GACLy3H,EAAOvP,GAAa2D,UACpBxD,EAAQ,CAAEpmE,MAAO,IAEN,OAANjiD,GACLy3H,EAAOvP,GAAa2D,UACpBxD,EAAQ,CAAEpmE,MAAO,IAEN,SAANjiD,GACLy3H,EAAOvP,GAAa2D,UACpBxD,EAAQ,CAAEpmE,MAAO,IAEN,QAANjiD,GACLy3H,EAAOvP,GAAa2D,UACpBxD,EAAQ,CAAEpmE,MAAO,IAEN,QAANjiD,GACLy3H,EAAOvP,GAAa2D,UACpBxD,EAAQ,CAAEpmE,MAAO,IAEN,YAANjiD,GACLy3H,EAAOvP,GAAa6D,SACpB1D,EAAQ,CAAE9qH,KAAMi/C,GAAS6Z,oBAEd,YAANr2D,GACLy3H,EAAOvP,GAAa6D,SACpB1D,EAAQ,CAAE9qH,KAAMi/C,GAAS8Z,oBAEd,SAANt2D,GACLy3H,EAAOvP,GAAa6D,SACpB1D,EAAQ,CAAE9qH,KAAMi/C,GAAS2lB,mBAEd,UAANniE,GACLy3H,EAAOvP,GAAa8D,SACpB3D,EAAQ,CAAEp7D,KAAMtG,GAAS2H,SAEd,YAANtuD,GACLy3H,EAAOvP,GAAa8D,SACpB3D,EAAQ,CAAEp7D,KAAMtG,GAAS8H,WAEd,UAANzuD,GACLy3H,EAAOvP,GAAa8D,SACpB3D,EAAQ,CAAEp7D,KAAMtG,GAASgI,SAEd,UAAN3uD,GACLy3H,EAAOvP,GAAa8D,SACpB3D,EAAQ,CAAEp7D,KAAMtG,GAASiI,SAEd,UAAN5uD,GACLy3H,EAAOvP,GAAa8D,SACpB3D,EAAQ,CAAEp7D,KAAMtG,GAAS+H,SAEd,SAAN1uD,GACLy3H,EAAOvP,GAAa8D,SACpB3D,EAAQ,CAAEp7D,KAAMtG,GAAS4H,QAEd,SAANvuD,GACLy3H,EAAOvP,GAAa8D,SACpB3D,EAAQ,CAAEp7D,KAAMtG,GAAS6H,QAEd,UAANxuD,EACLy3H,EAAOvP,GAAakE,WACT,UAANpsH,EACLy3H,EAAOvP,GAAaoE,WACT,WAANtsH,EACLy3H,EAAOvP,GAAasD,QACT,cAANxrH,EACLy3H,EAAOvP,GAAawD,WACT,eAAN1rH,EACLy3H,EAAOvP,GAAalK,YACT,gBAANh+G,EACLy3H,EAAOvP,GAAauH,iBACT,gBAANzvH,EACLy3H,EAAOvP,GAAawH,iBACT,iBAAN1vH,EACLy3H,EAAOvP,GAAayH,kBACT,iBAAN3vH,EACLy3H,EAAOvP,GAAa0H,kBACT,WAAN5vH,EACLy3H,EAAOvP,GAAa7gE,aACT,UAANrnD,EACLy3H,EAAOvP,GAAasE,WACT,UAANxsH,EACLy3H,EAAOvP,GAAawE,WACT,cAAN1sH,EACLy3H,EAAOvP,GAAayC,iBACT,WAAN3qH,EACLy3H,EAAOvP,GAAa+B,WACT,aAANjqH,EACLy3H,EAAOvP,GAAaiC,aACT,WAANnqH,EACLy3H,EAAOvP,GAAa0B,eACT,WAAN5pH,EACLy3H,EAAOvP,GAAa4B,eACT,YAAN9pH,EACLy3H,EAAOvP,GAAamC,YACT,aAANrqH,EACLy3H,EAAOvP,GAAaqC,aACT,aAANvqH,EACLy3H,EAAOvP,GAAauC,cACT,UAANzqH,EACLy3H,EAAOvP,GAAa2C,aACT,aAAN7qH,EACLy3H,EAAOvP,GAAa6C,gBACT,QAAN/qH,EACLy3H,EAAOvP,GAAa0E,KACT,UAAN5sH,EACLy3H,EAAOvP,GAAa+G,YACT,WAANjvH,EACLy3H,EAAOvP,GAAaiH,cACT,eAANnvH,EACLy3H,EAAOvP,GAAamH,YACT,gBAANrvH,EACLy3H,EAAOvP,GAAaqH,aACT,MAANvvH,GACLy3H,EAAOvP,GAAa4E,MACpBzE,EAAQ,CAAEpgD,IAAK,OAEJ,QAANjoE,GACLy3H,EAAOvP,GAAa4E,MACpBzE,EAAQ,CAAEpgD,IAAK,SAEJ,QAANjoE,GACLy3H,EAAOvP,GAAa4E,MACpBzE,EAAQ,CAAEpgD,IAAK,SAEJ,SAANjoE,GACLy3H,EAAOvP,GAAa4E,MACpBzE,EAAQ,CAAEpgD,IAAK,UAEJ,UAANjoE,GACLy3H,EAAOvP,GAAa8E,UACpB3E,EAAQ,CAAEpgD,IAAK,OAEJ,YAANjoE,GACLy3H,EAAOvP,GAAa8E,UACpB3E,EAAQ,CAAEpgD,IAAK,SAEJ,YAANjoE,GACLy3H,EAAOvP,GAAa8E,UACpB3E,EAAQ,CAAEpgD,IAAK,SAEJ,aAANjoE,GACLy3H,EAAOvP,GAAa8E,UACpB3E,EAAQ,CAAEpgD,IAAK,UAEJ,SAANjoE,GACLy3H,EAAOvP,GAAa+E,SACpB5E,EAAQ,CAAEpgD,IAAK,OAEJ,WAANjoE,GACLy3H,EAAOvP,GAAa+E,SACpB5E,EAAQ,CAAEpgD,IAAK,SAEJ,WAANjoE,GACLy3H,EAAOvP,GAAa+E,SACpB5E,EAAQ,CAAEpgD,IAAK,SAEJ,YAANjoE,GACLy3H,EAAOvP,GAAa+E,SACpB5E,EAAQ,CAAEpgD,IAAK,UAEJ,UAANjoE,GACLy3H,EAAOvP,GAAasF,OACpBnF,EAAQ,CAAE1kG,MAAO,IAEN,UAAN3jB,GACLy3H,EAAOvP,GAAasF,OACpBnF,EAAQ,CAAE1kG,OAAQ,IAEP,UAAN3jB,GACLy3H,EAAOvP,GAAasF,OACpBnF,EAAQ,CAAE1kG,MAAO,IAEN,UAAN3jB,GACLy3H,EAAOvP,GAAasF,OACpBnF,EAAQ,CAAE1kG,OAAQ,IAEP,UAAN3jB,GACLy3H,EAAOvP,GAAasF,OACpBnF,EAAQ,CAAE1kG,MAAO,KAEN,UAAN3jB,GACLy3H,EAAOvP,GAAasF,OACpBnF,EAAQ,CAAE1kG,OAAQ,KAEP,UAAN3jB,GACLy3H,EAAOvP,GAAasF,OACpBnF,EAAQ,CAAE1kG,MAAO,KAEN,UAAN3jB,GACLy3H,EAAOvP,GAAasF,OACpBnF,EAAQ,CAAE1kG,OAAQ,KAEP,SAAN3jB,GACLy3H,EAAOvP,GAAaiF,KACpB9E,EAAQ,CAAEgF,KAAM,QAEL,SAANrtH,GACLy3H,EAAOvP,GAAaiF,KACpB9E,EAAQ,CAAEgF,KAAM,QAEL,UAANrtH,GACLy3H,EAAOvP,GAAaoF,MACpBjF,EAAQ,CAAEpxF,IAAK,EAAI,MAER,QAANj3B,GACLy3H,EAAOvP,GAAaoF,MACpBjF,EAAQ,CAAEpxF,IAAK,MAEJ,YAANj3B,EACLy3H,EAAOvP,GAAa2I,aACT,QAAN7wH,EACLR,KAAKsoG,WAAWF,SAAS,IAAIivB,GAAYr3H,KAAK8oH,MAAOiO,GAAYxvD,OACtD,QAAN/mE,EACLR,KAAKsoG,WAAWF,SAAS,IAAIivB,GAAYr3H,KAAK8oH,MAAOiO,GAAYvvD,OACtD,UAANhnE,EACLR,KAAKsoG,WAAWF,SAAS,IAAIivB,GAAYr3H,KAAK8oH,MAAOiO,GAAYU,SACtD,QAANj3H,EACLR,KAAKsoG,WAAWF,SAAS,IAAIivB,GAAYr3H,KAAK8oH,MAAOiO,GAAYpI,OACtD,UAANnuH,EACLR,KAAKsoG,WAAWF,SAAS,IAAIivB,GAAYr3H,KAAK8oH,MAAOiO,GAAYW,SACtD,UAANl3H,EACLR,KAAKsoG,WAAWF,SAAS,IAAIivB,GAAYr3H,KAAK8oH,MAAOiO,GAAYa,SACtD,UAANp3H,EACLR,KAAKsoG,WAAWF,SAAS,IAAIivB,GAAYr3H,KAAK8oH,MAAOiO,GAAYc,SACtD,UAANr3H,EACLR,KAAKsoG,WAAWF,SAAS,IAAIivB,GAAYr3H,KAAK8oH,MAAOiO,GAAYe,SACtD,UAANt3H,EACLR,KAAKsoG,WAAWF,SAAS,IAAIivB,GAAYr3H,KAAK8oH,MAAOiO,GAAYgB,SACtD,SAANv3H,EACLR,KAAKsoG,WAAWF,SAAS,IAAIivB,GAAYr3H,KAAK8oH,MAAOiO,GAAYiB,QAEjES,MAAM,uBAAyBj4H,EAAK,KACpCy3H,EAAO,GACP,IAAItP,GAAiB3oH,KAAK8oH,MAAM4P,WAAYT,EAAMpP,EAAO7oH,KAAK8oH,OAAOW,SAE7E,CACA,QAAAhd,CAASnlG,GACL,IAAK,IAAIqxH,IAAa,CAAC3B,GAAeC,GAAeC,GAAeC,GAAiBC,IACjF,IAAK,IAAI5hH,KAAQmjH,EACb,GAAInsB,GAAWE,SAASplG,EAAOkO,EAAK21F,SAAU31F,EAAKlX,KAE/C,OADA0B,KAAKqsG,UAAU72F,EAAKhV,KACb,EAGnB,OAAO,CACX,ECxeG,MAAMo4H,GACT,WAAA17H,CAAY27H,EAAOC,EAAUC,GACzB/4H,KAAK64H,MAAQA,EACb74H,KAAK84H,SAAWA,EAChB94H,KAAK+4H,UAAYA,CACrB,CACA,QAAAC,GACI,MAAM,MAAEH,EAAK,SAAEC,GAAa94H,KAC5B,IAAIi5H,EAAO,IACPH,EAASZ,WAAaY,EAASV,aAC3BU,EAASZ,WACTe,EAAKz8H,KAAK,CAAE0sE,MAAO,OAAQgwD,YAAa,cAAeC,MAAO,IAAML,EAASX,gBAC7EW,EAASV,WACTa,EAAKz8H,KAAK,CAAE0sE,MAAO,OAAQgwD,YAAa,oBAAqBC,MAAO,IAAML,EAAST,gBACvFY,EAAKz8H,KAAK,QAEVq8H,EAAM7P,YAAc,GAAK6P,EAAM5P,YAAc,IAC7CgQ,EAAKz8H,KAAK,CAAE0sE,MAAO,OAAQ,YAAe,QAASiwD,MAAO,IAAML,EAASM,gBAC7Ep5H,KAAKq5H,YAAYJ,EAAM,SAAU,IAAKvQ,GAAagB,QACnD1pH,KAAKq5H,YAAYJ,EAAM,MAAO,cAAevQ,GAAasB,KAC1DhqH,KAAKq5H,YAAYJ,EAAM,OAAQ,cAAevQ,GAAaoB,MACvD9pH,KAAK+4H,UAAUO,gBACfL,EAAKz8H,KAAK,CAAE0sE,MAAO,QAAS,YAAe,cAAeiwD,MAAO,IAAML,EAASR,iBACpFt4H,KAAKq5H,YAAYJ,EAAM,WAAY,UAAWvQ,GAAaoD,OAAQ,CAAEn7F,MAAO,IAC5E3wB,KAAKq5H,YAAYJ,EAAM,WAAY,UAAWvQ,GAAaoD,OAAQ,CAAEn7F,OAAQ,IAC7E3wB,KAAKq5H,YAAYJ,EAAM,eAAgB,IAAKvQ,GAAa2D,UAAW,CAAE5pE,MAAO,IAC7EziD,KAAKq5H,YAAYJ,EAAM,eAAgB,IAAKvQ,GAAa2D,UAAW,CAAE5pE,MAAO,IAC7EziD,KAAKq5H,YAAYJ,EAAM,eAAgB,IAAKvQ,GAAa2D,UAAW,CAAE5pE,MAAO,IAC7EziD,KAAKq5H,YAAYJ,EAAM,eAAgB,IAAKvQ,GAAa2D,UAAW,CAAE5pE,MAAO,IAC7EziD,KAAKq5H,YAAYJ,EAAM,eAAgB,KAAMvQ,GAAa2D,UAAW,CAAE5pE,MAAO,IAC9EziD,KAAKq5H,YAAYJ,EAAM,0BAA2B,IAAKvQ,GAAa6D,SAAU,CAAExuH,KAAMi/C,GAAS2lB,mBAC/F3iE,KAAKq5H,YAAYJ,EAAM,gBAAiB,IAAKvQ,GAAa6D,SAAU,CAAExuH,KAAMi/C,GAAS6Z,oBACrF72D,KAAKq5H,YAAYJ,EAAM,kBAAmB,IAAKvQ,GAAa6D,SAAU,CAAExuH,KAAMi/C,GAAS8Z,oBACvF92D,KAAKq5H,YAAYJ,EAAM,kBAAmB,KAAMvQ,GAAakE,YAC7D5sH,KAAKq5H,YAAYJ,EAAM,gBAAiB,UAAWvQ,GAAasE,YAChEhtH,KAAKq5H,YAAYJ,EAAM,cAAe,KAAMvQ,GAAawE,YACzDltH,KAAKq5H,YAAYJ,EAAM,aAAc,KAAMvQ,GAAa0E,MACxDptH,KAAKq5H,YAAYJ,EAAM,mBAAoB,IAAKvQ,GAAa+G,aAC7DzvH,KAAKq5H,YAAYJ,EAAM,qBAAsB,KAAMvQ,GAAaiH,eAChE3vH,KAAKq5H,YAAYJ,EAAM,qBAAsB,WAAYvQ,GAAamH,aACtE7vH,KAAKq5H,YAAYJ,EAAM,sBAAuB,UAAWvQ,GAAaqH,cACtE,IAAIwJ,EAAYv5H,KAAKw5H,gBACjB,EAAIllH,SAASilH,IACbN,EAAKz8H,KAAK,CAAE0sE,MAAO,SAAUuwD,QAASF,IAC1C,IAAIG,EAAW15H,KAAK25H,eAChB,EAAIrlH,SAASolH,IACbT,EAAKz8H,KAAK,CAAE0sE,MAAO,QAASuwD,QAASC,IACzC,IAAIlwD,EAAO,IAAI3hB,GAAagxE,EAAMtsF,KAClC,IAAK,IAAIub,KAAS0hB,EAAKrhB,WAAY,CAC/B,IAAIpK,EAAK86E,EAAM7P,YAAahrE,EAAK,EAGjC,GAFI66E,EAAM5P,YAAc,KACnBlrE,EAAIC,GAAM66E,EAAMtsF,IAAI0mC,WAAW4lD,EAAM5P,cACtCnhE,EAAMnW,MAAMzwC,SAAS68C,IAAO+J,EAAMnW,MAAMzwC,SAAS88C,GAAK,CACtD,IAAIkrB,EAAQ,kBAAoBphB,EAAMnW,MAAM/yC,OAAS,SAAiC,GAAtBkpD,EAAMnW,MAAM/yC,OAAc,GAAK,KAAO,IACtGq6H,EAAKz8H,KAAK,CAAE0sE,MAAOA,EAAOiwD,MAAO,IAAML,EAASxD,oBAAoBxtE,EAAMnW,QAC9E,CACJ,CAMA,OALIsnF,EAAKr6H,OAAS,GACdq6H,EAAKz8H,KAAK,MACdy8H,EAAKz8H,KAAK,CAAE0sE,MAAO,eAAgBiwD,MAAO,IAAML,EAASP,cACzDU,EAAKz8H,KAAK,CAAE0sE,MAAO,UAAW,YAAe,IAAKiwD,MAAO,IAAML,EAASN,KAAK,QAC7ES,EAAKz8H,KAAK,CAAE0sE,MAAO,WAAY,YAAe,IAAKiwD,MAAO,IAAML,EAASN,KAAK,MACvES,CACX,CACA,WAAAI,CAAYJ,EAAM76E,EAAO86E,EAAaU,EAAO/Q,EAAQ,MACjD,IAAIgR,EAAS,IAAIlR,GAAiB3oH,KAAK64H,MAAOe,EAAO/Q,GACrDgR,EAAOpQ,WACFoQ,EAAO5uH,OAAOshC,KAAQstF,EAAO9Q,cAElCkQ,EAAKz8H,KAAK,CAAE0sE,MAAO9qB,EAAO,YAAe86E,EAAaC,MAAO,KACrDn5H,KAAK84H,SAASpH,SAASmI,EAAO5uH,QAAQ,GAClC4uH,EAAO9Q,aACP/oH,KAAK+4H,UAAU33E,UAAUy4E,EAAO9Q,YAAY,GAE5D,CACA,aAAAyQ,GACI,IAAIP,EAAO,GAaX,OAZAj5H,KAAKq5H,YAAYJ,EAAM,OAAQ,KAAMvQ,GAAaoE,YAClD9sH,KAAKq5H,YAAYJ,EAAM,OAAe,KAAMvQ,GAAasF,OAAQ,CAAE7pG,MAAO,IAC1EnkB,KAAKq5H,YAAYJ,EAAM,OAAe,KAAMvQ,GAAasF,OAAQ,CAAE7pG,OAAQ,IAC3EnkB,KAAKq5H,YAAYJ,EAAM,OAAe,KAAMvQ,GAAasF,OAAQ,CAAE7pG,MAAO,IAC1EnkB,KAAKq5H,YAAYJ,EAAM,OAAe,KAAMvQ,GAAasF,OAAQ,CAAE7pG,OAAQ,IAC3EnkB,KAAKq5H,YAAYJ,EAAM,QAAgB,KAAMvQ,GAAasF,OAAQ,CAAE7pG,MAAO,KAC3EnkB,KAAKq5H,YAAYJ,EAAM,QAAgB,KAAMvQ,GAAasF,OAAQ,CAAE7pG,OAAQ,KAC5EnkB,KAAKq5H,YAAYJ,EAAM,QAAgB,UAAWvQ,GAAasF,OAAQ,CAAE7pG,MAAO,KAChFnkB,KAAKq5H,YAAYJ,EAAM,QAAgB,UAAWvQ,GAAasF,OAAQ,CAAE7pG,OAAQ,KACjFnkB,KAAKq5H,YAAYJ,EAAM,SAAU,UAAWvQ,GAAaiF,KAAM,CAAEE,KAAM,QACvE7tH,KAAKq5H,YAAYJ,EAAM,SAAU,UAAWvQ,GAAaiF,KAAM,CAAEE,KAAM,QACvE7tH,KAAKq5H,YAAYJ,EAAM,QAAS,KAAMvQ,GAAa6F,cAC5C0K,CACX,CACA,YAAAU,GACI,IAAIV,EAAO,GAGX,OAFAj5H,KAAKq5H,YAAYJ,EAAM,QAAS,KAAMvQ,GAAaiI,YACnD3wH,KAAKq5H,YAAYJ,EAAM,OAAQ,KAAMvQ,GAAamI,WAC3CoI,CACX,EChFG,IAAIa,GAeAC,GC5BAC,GAKAC,IDSX,SAAWH,GACPA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAoB,MAAI,GAAK,QAC1CA,EAAaA,EAAoB,MAAI,GAAK,QAC1CA,EAAaA,EAAkB,IAAI,GAAK,MACxCA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAqB,OAAI,GAAK,SAC3CA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAqB,OAAI,GAAK,SAC3CA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAqB,OAAI,IAAM,SAC5CA,EAAaA,EAAmB,KAAI,IAAM,MAC7C,CAbD,CAaGA,KAAiBA,GAAe,CAAC,IAEpC,SAAWC,GACPA,EAAqBA,EAA2B,KAAI,GAAK,OACzDA,EAAqBA,EAAsC,gBAAI,GAAK,kBACpEA,EAAqBA,EAAoC,cAAI,GAAK,gBAClEA,EAAqBA,EAAgC,UAAI,GAAK,WACjE,CALD,CAKGA,KAAyBA,GAAuB,CAAC,IAC7C,MAAMG,WAAmBrzF,GAC5B,WAAA3pC,GACIwN,QACA1K,KAAKusC,IAAM,KACXvsC,KAAKsqC,OAAS,KACdtqC,KAAKm6F,QAAU,EACfn6F,KAAKo6F,QAAU,EACfp6F,KAAK6pC,WAAa,EAClB7pC,KAAKm6H,QAAU,CACXC,WAAYL,GAAqB7qB,gBACjCmrB,aAAa,EACbC,WAAW,EACXC,eAAe,GAEnBv6H,KAAKN,MAAQ,EACbM,KAAKL,OAAS,EACdK,KAAKmmG,OAAS,QACdnmG,KAAKw6H,aAAe,EACpBx6H,KAAK6jC,WAAa,SAClB7jC,KAAKy6H,YAAc,KACnBz6H,KAAK06H,eAAiB,KACtB16H,KAAK26H,WAAa,KAClB36H,KAAK46H,WAAa,KAClB56H,KAAKwyF,OAAS,KACdxyF,KAAKsrG,QAAU,KACftrG,KAAKwkE,OAAS,KACdxkE,KAAK66H,WAAa,KAClB76H,KAAK86H,QAAS,EACd96H,KAAK+6H,SAAWjB,GAAakB,KAC7Bh7H,KAAKgpH,YAAc,EACnBhpH,KAAKipH,YAAc,EACnBjpH,KAAKi7H,UAAY,EACjBj7H,KAAKk7H,UAAY,EACjBl7H,KAAKkpH,aAAe,KACpBlpH,KAAKm7H,OAAS,EACdn7H,KAAKo7H,OAAS,EACdp7H,KAAKq7H,UAAW,EAChBr7H,KAAKs7H,SAAU,EACft7H,KAAKu7H,QAAS,EACdv7H,KAAKw7H,OAAQ,EACbx7H,KAAKy7H,OAAS,KACdz7H,KAAK07H,OAAS,KACd17H,KAAK27H,UAAY,KACjB37H,KAAK47H,OAAS,EACd57H,KAAK67H,OAAS,EACd77H,KAAK87H,OAAS,EACd97H,KAAK+7H,OAAS,EACd/7H,KAAKg8H,WAAa,KAClBh8H,KAAKi8H,cAAgB,KACrBj8H,KAAKk8H,YAAc,EACnBl8H,KAAKm8H,WAAa,KAClBn8H,KAAKo8H,gBAAkB,EACvBp8H,KAAKq8H,SAAW,EAChBr8H,KAAKs8H,SAAW,EAChBt8H,KAAKu8H,eAAiB,GACtBv8H,KAAKw8H,cAAgB,EACrBx8H,KAAKy8H,aAAe,EACpBz8H,KAAK08H,gBAAkB,EACvB18H,KAAK28H,cAAe,EACpB38H,KAAK48H,kBAAmB,EACxB58H,KAAK68H,eAAiB,EACtB78H,KAAK88H,eAAiB,GACtB98H,KAAK+8H,aAAenzF,GAAaQ,sBACjCpqC,KAAK+8H,aAAarzH,KAAKk6B,WAAa,SACpC5jC,KAAK+8H,aAAarzH,KAAKygC,SAAW,EAAIpzB,YAAY,SAAU/W,KAAK+8H,aAAarzH,KAAKygC,SAASvrC,OAChG,CACA,MAAAqoC,CAAOnmB,GACH,IAAK9gB,KAAKN,QAAUM,KAAKL,OACrB,KAAM,kDACV+K,MAAMu8B,OAAOnmB,GACb9gB,KAAKqiB,UAAY,GAAI,UAAU4c,SAASj/B,KAAK8mC,YAC7C9mC,KAAKqiB,UAAUS,IAAI,CAAE,SAAY,WAAY,MAAS9iB,KAAKN,MAAQ,KAAM,OAAUM,KAAKL,OAAS,OACjGK,KAAKqiB,UAAUS,IAAI,CAAE,mBAAoBhB,EAAa9hB,KAAK6jC,cACvD7jC,KAAKmmG,QAAUnM,GAAWsB,WAC1Bt7F,KAAKqiB,UAAUS,IAAI,CAAE,OAAU,aAAehB,EAAa9hB,KAAKmmG,UAChEnmG,KAAKqiB,UAAUS,IAAI,CAAE,gBAAiB9iB,KAAKw6H,aAAe,QAE9Dx6H,KAAKqiB,UAAUS,IAAI,CAAE,QAAW,SAChC9iB,KAAKqiB,UAAUrB,KAAK,CAAE,SAAY,MAClC,IAAI2mF,EAAc,CAAE,SAAY,WAAY,KAAQ,IAAK,IAAO,IAAK,MAAS,GAAG3nG,KAAKN,UAAW,OAAU,GAAGM,KAAKL,SAAU,iBAAkB,QAC/IK,KAAKg9H,QAAU,GAAI,UAAU/9F,SAASj/B,KAAKqiB,WAAWS,IAAI,CAAE,SAAY,WAAY,KAAQ,IAAK,IAAO,IAAK,iBAAkB,SAC/H9iB,KAAKy6H,YAAc,GAAI,aAAax7F,SAASj/B,KAAKqiB,WAAWS,IAAI6kF,GACjE3nG,KAAK06H,eAAiB,GAAI,aAAaz7F,SAASj/B,KAAKqiB,WAAWS,IAAI6kF,GACpE3nG,KAAK26H,WAAa,GAAI,aAAa17F,SAASj/B,KAAKqiB,WAAWS,IAAI6kF,GAChE3nG,KAAK46H,WAAa,GAAI,UAAU37F,SAASj/B,KAAKqiB,WAAWS,IAAI6kF,GAC7D3nG,KAAK46H,WAAW93G,IAAI,CAAE,aAAc,SAAU,iBAAkB,SAAU,cAAe,OAAQ,YAAa,QAClH,CACA,QAAA41G,GAOI,MANY,CACRnsF,IAAKvsC,KAAKusC,IAAI3wB,QACdotG,YAAahpH,KAAKgpH,YAClBC,YAAajpH,KAAKipH,YAClBC,aAAmC,MAArBlpH,KAAKkpH,aAAuB,KAAOlpH,KAAKkpH,aAAaj6G,MAAM,GAGjF,CACA,WAAAguH,CAAYvqF,GACR,QAAyB,MAArB1yC,KAAKkpH,cAAwBx2E,EAAO1yC,KAAKkpH,aAAatqH,SAEnDoB,KAAKkpH,aAAax2E,EAAO,EACpC,CACA,UAAAwqF,CAAWxqF,GACP,QAAsB,MAAlB1yC,KAAK27H,WAAqBjpF,EAAO1yC,KAAK27H,UAAU/8H,SAE7CoB,KAAK27H,UAAUjpF,EAAO,EACjC,CACA,KAAA3zB,GAAU,OAAO/e,KAAK6pC,UAAY,CAClC,MAAAg1C,CAAO/xD,GACH,OAAOA,EAAK9sB,KAAK6pC,WAAa7pC,KAAKm6F,OACvC,CACA,MAAArb,CAAO/xD,GACH,OAAOA,GAAM/sB,KAAK6pC,WAAa7pC,KAAKo6F,OACxC,CACA,MAAA+iC,CAAOp2G,GACH,OAAQA,EAAK/mB,KAAKm6F,SAAWn6F,KAAK6pC,UACtC,CACA,MAAAuzF,CAAOp2G,GACH,OAAQA,EAAKhnB,KAAKo6F,UAAYp6F,KAAK6pC,UACvC,CACA,UAAAwzF,CAAWt+G,GAAS,OAAOA,EAAQ/e,KAAK6pC,UAAY,CACpD,UAAAyzF,CAAWjtG,GAAO,OAAOA,EAAMrwB,KAAK6pC,UAAY,CAChD,KAAA40C,GAAU,OAAO,CAAO,CACxB,WAAAnD,CAAY96D,EAAKupB,GAAY,OAAOgwC,GAASpoE,KAAK2pE,YAAY96D,EAAKupB,EAAW,CAC9E,aAAA4hE,GAC+B,MAAvB3rG,KAAK06H,iBAET16H,KAAK86H,QAAS,EACdl1G,OAAOoc,YAAW,KAAYhiC,KAAK86H,QAC/B96H,KAAKunG,QAAQ,GAAK,IAC1B,CACA,cAAAg2B,GACI,IAAIhxF,EAAMvsC,KAAKusC,IACXvsC,KAAKi7H,UAAY,GAAKhvE,GAAQc,UAAUxgB,EAAKvsC,KAAKi7H,aAClD1uF,EAAMA,EAAI3wB,QACV2wB,EAAI0pB,eAAej2D,KAAKi7H,UAAW,IACnC1uF,EAAIghB,cAAcvtD,KAAKi7H,UAAW,GAClC1uF,EAAI+gB,gBAAgBttD,KAAKi7H,UAAW,GACpChvE,GAAQiJ,YAAY3oB,EAAKvsC,KAAKi7H,YAElC,IAAI59C,EAAUr9E,KAAKw9H,cAAcjxF,GACjCvsC,KAAKwyF,OAAS,IAAI3V,GAAgBtwC,EAAKvsC,KAAMA,KAAKsqC,OAAQ+yC,GAC1Dr9E,KAAKwyF,OAAOxU,iBAAiBh+E,KAAKm6H,QAAQI,eAC1Cv6H,KAAKwyF,OAAOpU,SAChB,CACA,gBAAAq/C,GAGI,GAFAz9H,KAAKsrG,QAAU,IAAItR,GACnB,IAAIoH,GAAaphG,KAAKwyF,OAAQxyF,KAAKsrG,SAAS5J,OACxC1hG,KAAKi7H,UAAY,GAAKhvE,GAAQc,UAAU/sD,KAAKusC,IAAKvsC,KAAKi7H,WAAY,CACnE,IAAIyC,EAAYzxE,GAAQwI,UAAUz0D,KAAKusC,IAAKvsC,KAAKi7H,WACjDj7H,KAAK29H,mBAAmB39H,KAAKi7H,UAAWyC,GACxC19H,KAAK+8H,aAAarzH,KAAKmgC,WAAa7pC,KAAKsqC,OAAO5gC,KAAKmgC,WACrD,IAAI2oD,EAAS,IAAI3V,GAAgB6gD,EAAW19H,KAAMA,KAAK+8H,aAAc,IAAIpyF,IACzE6nD,EAAOpU,UACP,IAAIgjB,GAAa5O,EAAQxyF,KAAKsrG,SAAS5J,MAC3C,CACJ,CACA,MAAA6F,GACIvnG,KAAK86H,QAAS,EACd96H,KAAK49H,aACL59H,KAAK69H,cACL79H,KAAK89H,iBACL99H,KAAK+9H,YACT,CACA,UAAAH,GACI,IAAII,EAAWpgH,KAAKC,UAAU,CAAC7d,KAAKN,MAAOM,KAAKL,OAAQK,KAAKusC,IAAI74B,aACjE,GAAIsqH,GAAYh+H,KAAK88H,eACjB,OAIJ,GAHA98H,KAAK88H,eAAiBkB,EACtBh+H,KAAKg9H,QAAQ39F,QACbr/B,KAAKg9H,QAAQl6G,IAAI,CAAE,WAAc,SAAU,KAAQ,IAAK,IAAO,MACtC,GAArB9iB,KAAKusC,IAAIC,SACT,OACJ,IAAIyxF,EAAU,GAAI,UAAUh/F,SAASj/B,KAAKg9H,SAC1CiB,EAAQn7G,IAAI,CAAE,QAAW,eAAgB,aAAc,QAAS,cAAe,aAAc,YAAa,MAAO,MAAS,YAC1H,IAAI0a,EAAOyuB,GAAQ0M,iBAAiB34D,KAAKusC,IAAK,CAAC,QAAS,SAAU,QAAS,WACvEg4B,EAAM,EACV,IAAK,IAAIz0D,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IACpCy0D,GAAOvkE,KAAKusC,IAAIqQ,WAAW9sC,IACnB,GAARy0D,EACA/mC,GAAQ,eACH+mC,GAAO,EACZ/mC,GAAQ,QAAQ+mC,UACJ,GAAPA,EACL/mC,GAAQ,eACH+mC,EAAM,IACX/mC,GAAQ,SAAS+mC,WACrB/mC,GAAQ,OAASyuB,GAAQqN,gBAAgBt5D,KAAKusC,KAAKkhC,QAAQ,GAC3DwwD,EAAQ1+F,QAAQ/B,GAChBwE,YAAW,KACP,IAAIpf,EAAIq7G,EAAQv+H,QAASmjB,EAAIo7G,EAAQt+H,SACrC,EAAkBK,KAAKg9H,QAASh9H,KAAKN,MAAQkjB,EAAI,EAAG,EAAGA,EAAGC,GAC1D7iB,KAAKg9H,QAAQl6G,IAAI,CAAE,WAAc,WAAY,GAC9C,EACP,CACA,WAAA+6G,GACI,IAAIK,EAAY,SACZC,EAAc,SAAUC,EAAe,QACvCC,EAAa,SACbC,EAAY,SACZjkC,EAAU10E,IACd3lB,KAAKy6H,YAAYp9F,SAAS39B,MAAQM,KAAKN,MAAQ26F,EAC/Cr6F,KAAKy6H,YAAYp9F,SAAS19B,OAASK,KAAKL,OAAS06F,EACjDr6F,KAAKy6H,YAAY33G,IAAI,CAAE,MAAS,GAAG9iB,KAAKN,UAAW,OAAU,GAAGM,KAAKL,aACrE,IAAI2lB,EAAMtlB,KAAKy6H,YAAYp9F,SAAS6+C,WAAW,MAI/C,GAHA52D,EAAIg3D,OACJh3D,EAAIvG,MAAMs7E,EAASA,GACnB/0E,EAAI84E,UAAU,EAAG,EAAGp+F,KAAKN,MAAOM,KAAKL,QACjCK,KAAKi7H,UAAY,EAAG,CACpB,IAAInzE,EAAQ,IAAID,GAAa7nD,KAAKusC,KAAK4b,WACvC,IAAK,IAAI7B,KAAQwB,EACTxB,EAAK3U,MAAMzwC,SAASlB,KAAKi7H,YACzBj7H,KAAKu+H,gBAAgBj5G,EAAKghC,EAAMwB,GACxC,IAAIpxC,EAAK,EACL1W,KAAKi7H,WAAaj7H,KAAKgpH,cACvBtyG,GAAM,IACN1W,KAAKi9H,YAAYj9H,KAAKi7H,aACtBvkH,GAAM,IACN1W,KAAKipH,YAAc,IAAMjpH,KAAKusC,IAAII,SAAS3sC,KAAKipH,cAAgBjpH,KAAKi7H,WAAaj7H,KAAKusC,IAAIM,OAAO7sC,KAAKipH,cAAgBjpH,KAAKi7H,aAC5HvkH,GAAM,IACV1W,KAAKw+H,cAAcl5G,EAAKtlB,KAAKi7H,UAAWiD,GAAY,EAAGxnH,EAC3D,CACA,GAAI1W,KAAKk7H,UAAY,EAAG,CACpB,IAAIxuF,EAAM1sC,KAAKusC,IAAII,SAAS3sC,KAAKk7H,WAAYtuF,EAAM5sC,KAAKusC,IAAIM,OAAO7sC,KAAKk7H,WACpEpzE,EAAQ,IAAID,GAAa7nD,KAAKusC,KAAK4b,WACvC,IAAK,IAAI7B,KAAQwB,EACTxB,EAAK3U,MAAMzwC,SAASwrC,IAAQ4Z,EAAK3U,MAAMzwC,SAAS0rC,IAChD5sC,KAAKu+H,gBAAgBj5G,EAAKghC,EAAMwB,GACxC,IAAIpxC,EAAK,EACL1W,KAAKk7H,WAAal7H,KAAKipH,cACvBvyG,GAAM,IACN1W,KAAKi9H,YAAYvwF,IAAQ1sC,KAAKi9H,YAAYrwF,KAC1Cl2B,GAAM,IACV1W,KAAKy+H,cAAcn5G,EAAKtlB,KAAKk7H,UAAWgD,GAAY,EAAGxnH,EAC3D,CACA,IAAK,IAAI5G,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIE,SAAU38B,IAAK,CACzC,IAAI4G,EAAK5G,GAAK9P,KAAKipH,YAAc,GAAM,EACnCv8E,EAAM1sC,KAAKusC,IAAII,SAAS78B,GAAI88B,EAAM5sC,KAAKusC,IAAIM,OAAO/8B,GAClD4uH,EAAM1+H,KAAKi9H,YAAYvwF,GAAMiyF,EAAM3+H,KAAKi9H,YAAYrwF,GAAMgyF,EAAM5+H,KAAKk9H,WAAWxwF,GAAMmyF,EAAM7+H,KAAKk9H,WAAWtwF,GAC5G8xF,GAAOC,EACP3+H,KAAKy+H,cAAcn5G,EAAKxV,EAAGuuH,GAAa,EAAG3nH,IACrCgoH,GAAOE,KAASD,GAAOE,IAC7B7+H,KAAKy+H,cAAcn5G,EAAKxV,EAAGwuH,GAAY,EAAG5nH,EAClD,CACA,IAAK,IAAI5G,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IAAK,CACzC,IAAI4G,EAAK1W,KAAKgpH,aAAel5G,EAAI,GAAM,EACnC9P,KAAKi9H,YAAYntH,GACjB9P,KAAKw+H,cAAcl5G,EAAKxV,EAAGuuH,GAAa,EAAG3nH,GACtC1W,KAAKk9H,WAAWptH,IACrB9P,KAAKw+H,cAAcl5G,EAAKxV,EAAGwuH,GAAY,EAAG5nH,EAClD,CAOA,GANI1W,KAAKgpH,YAAc,GACnBhpH,KAAKw+H,cAAcl5G,EAAKtlB,KAAKgpH,YAAamV,EAAaC,EAAc,GAErEp+H,KAAKipH,YAAc,GACnBjpH,KAAKy+H,cAAcn5G,EAAKtlB,KAAKipH,YAAakV,EAAaC,EAAc,IAErEp+H,KAAK+6H,UAAYjB,GAAanL,MAAS3uH,KAAK+6H,UAAYjB,GAAavyD,MAAQvnE,KAAKm7H,OAAS,GAAMn7H,KAAK+6H,UAAYjB,GAAatyD,OACxG,MAAnBxnE,KAAKg8H,YAAsBh8H,KAAKg8H,WAAWp9H,OAAS,EACpD,IAAK,IAAI2gB,KAAKvf,KAAKg8H,WACf,IAAK,IAAIlsH,EAAI,EAAGA,EAAIyP,EAAEiD,EAAE5jB,OAAQkR,IAAK,CACjC,IAAIgvH,EAAK9+H,KAAKsqC,OAAO5gC,KAAKsgC,SAAWhqC,KAAK6pC,WAC1CvkB,EAAI26E,YAAc,UAClB36E,EAAI46E,UAAY4+B,EAChBz5G,EAASC,EAAK/F,EAAEw/G,QAASx/G,EAAEy/G,QAASz/G,EAAE0/G,MAAMnvH,GAAIyP,EAAE2/G,MAAMpvH,IACxDwV,EAAIC,YACJD,EAAIi7E,QAAQhhF,EAAE0/G,MAAMnvH,GAAIyP,EAAE2/G,MAAMpvH,GAAI,EAAIgvH,EAAI,EAAIA,EAAI,EAAG,EAAGr7G,GAAO,GACjE6B,EAAI86E,UAAY,UAChB96E,EAAIxO,MACR,CAGZ,GAAI9W,KAAK+6H,UAAYjB,GAAahL,KAAM,CACpC,IAAKE,EAAOC,GAASjvH,KAAKm/H,oBACtB3rE,EAAe,MAATw7D,EAAgB,EAAIA,EAAMpwH,OACpC,GAAI40D,EAAM,EAAG,CACT,IAAIz0C,EAAQ/e,KAAK6pC,WACbi1F,EAAK9+H,KAAKsqC,OAAO5gC,KAAKsgC,SAAWjrB,EACrCuG,EAAI26E,YAAc,UAClB36E,EAAI46E,UAAY4+B,EAChB,IAAK,IAAIhvH,EAAI,EAAGA,EAAI0jD,EAAK1jD,IAAK,CAC1B,IAAIu+C,EAAKv+C,EAAI0jD,EAAM,EAAI1jD,EAAI,EAAI,EAG/BuV,EAASC,EAFAtlB,KAAK6+E,OAAOmwC,EAAMl/G,IAAU9P,KAAK8+E,OAAOmwC,EAAMn/G,IAC9C9P,KAAK6+E,OAAOmwC,EAAM3gE,IAAWruD,KAAK8+E,OAAOmwC,EAAM5gE,IAE5D,CACA,GAAIruD,KAAK28H,aAAc,CACnB,IAAIzvG,EAAK,EAAGC,EAAK,EACjB,IAAK,IAAIrd,EAAI,EAAGA,EAAI0jD,EAAK1jD,IACrBod,GAAM8hG,EAAMl/G,GACZqd,GAAM8hG,EAAMn/G,GAEhBod,GAAMsmC,EACNrmC,GAAMqmC,EACN,IAAIzuC,EAAM,EACV,IAAK,IAAIjV,EAAI,EAAGA,EAAI0jD,EAAK1jD,IACrBiV,GAAOhC,EAAQisG,EAAMl/G,GAAKod,EAAI+hG,EAAMn/G,GAAKqd,GAC7CpI,EAAM/kB,KAAKs9H,WAAiB,GAANv4G,EAAYyuC,GAClCluC,EAAIC,YACJD,EAAIi7E,QAAQvgG,KAAK6+E,OAAO3xD,GAAKltB,KAAK8+E,OAAO3xD,GAAKpI,EAAKA,EAAK,EAAG,EAAGtB,GAAO,GACrE6B,EAAIE,QACR,CACJ,CACJ,CACAF,EAAIo3D,SACR,CACA,cAAAohD,GACI,IAAIzjC,EAAU10E,IACd3lB,KAAK06H,eAAer9F,SAAS39B,MAAQM,KAAKN,MAAQ26F,EAClDr6F,KAAK06H,eAAer9F,SAAS19B,OAASK,KAAKL,OAAS06F,EACpDr6F,KAAK06H,eAAe53G,IAAI,CAAE,MAAS,GAAG9iB,KAAKN,UAAW,OAAU,GAAGM,KAAKL,aACxE,IAAI2lB,EAAMtlB,KAAK06H,eAAer9F,SAAS6+C,WAAW,MAMlD,GALA52D,EAAIg3D,OACJh3D,EAAIvG,MAAMs7E,EAASA,GACnB/0E,EAAI84E,UAAU,EAAG,EAAGp+F,KAAKN,MAAOM,KAAKL,QACjB,MAAhBK,KAAKsrG,SACLtrG,KAAKsrG,QAAQjN,cAAc/4E,GACL,MAAtBtlB,KAAKi8H,cAAuB,CAC5B,IAAIvU,EAAO1nH,KAAKi8H,cAAcj8H,KAAKk8H,aACf,MAAhBxU,EAAKpc,SACLoc,EAAKpc,QAAQjN,cAAc/4E,EACnC,CACAA,EAAIo3D,SACR,CACA,UAAAqhD,GACI,IAAI1jC,EAAU10E,IACd3lB,KAAK26H,WAAWt9F,SAAS39B,MAAQM,KAAKN,MAAQ26F,EAC9Cr6F,KAAK26H,WAAWt9F,SAAS19B,OAASK,KAAKL,OAAS06F,EAChDr6F,KAAK26H,WAAW73G,IAAI,CAAE,MAAS,GAAG9iB,KAAKN,UAAW,OAAU,GAAGM,KAAKL,aACpE,IAAI2lB,EAAMtlB,KAAK26H,WAAWt9F,SAAS6+C,WAAW,MAI9C,GAHA52D,EAAIg3D,OACJh3D,EAAIvG,MAAMs7E,EAASA,GACnB/0E,EAAI84E,UAAU,EAAG,EAAGp+F,KAAKN,MAAOM,KAAKL,SAChCK,KAAK+6H,UAAYjB,GAAasF,OAASp/H,KAAK+6H,UAAYjB,GAAauF,SAAWr/H,KAAKy7H,OAAO78H,OAAS,EAAG,CACzG,IAAI0gI,EAAUt/H,KAAK+6H,UAAYjB,GAAauF,OACxClyH,EAAO,IAAI6X,OACf7X,EAAK8X,OAAOjlB,KAAKy7H,OAAO,GAAIz7H,KAAK07H,OAAO,IACxC,IAAK,IAAI5rH,EAAI,EAAGA,EAAI9P,KAAKy7H,OAAO78H,OAAQkR,IACpC3C,EAAKgY,OAAOnlB,KAAKy7H,OAAO3rH,GAAI9P,KAAK07H,OAAO5rH,IAC5C3C,EAAKiY,YACLE,EAAI86E,UAAYt+E,EAAaw9G,EAAU,WAAa,YACpDh6G,EAAIxO,KAAK3J,GACTmY,EAAI26E,YAAcq/B,EAAU,UAAY,UACxCh6G,EAAI46E,UAAY,GAChB56E,EAAIE,OAAOrY,EACf,CACA,GAAInN,KAAK+6H,UAAYjB,GAAa9L,OAAQ,CACtC,IAAKh7D,EAAIC,EAAI9uC,EAAO6N,GAAahyB,KAAKu/H,qBAClCxgH,EAAQ/e,KAAK6pC,WACbi1F,EAAK9+H,KAAKsqC,OAAO5gC,KAAKsgC,SAAWjrB,EACrCuG,EAAI26E,YAAc,UAClB36E,EAAI46E,UAAY,GAAM4+B,EACtBz5G,EAASC,EAAK0tC,EAAIC,EAAID,EAAKhhC,EAAWihC,GACtC3tC,EAAI26E,YAAc,UAClB36E,EAAI46E,UAAY4+B,EAChBz5G,EAASC,EAAK0tC,EAAIC,EAAID,EAAKhhC,EAAYrb,KAAK2a,IAAInN,GAAQ8uC,EAAKjhC,EAAYrb,KAAK4a,IAAIpN,IAClFmB,EAAIC,YACJD,EAAIi7E,QAAQvtC,EAAIC,EAAI,EAAI6rE,EAAI,EAAIA,EAAI,EAAG,EAAGr7G,GAAO,GACjD6B,EAAI86E,UAAY,UAChB96E,EAAIxO,OACJ,IAAK,IAAI47B,KAAQ1yC,KAAKw/H,cAAa,GAAM,GAAQ,CAC7C,IAAI1yG,EAAK9sB,KAAK6+E,OAAO7+E,KAAKusC,IAAI6e,MAAM1Y,IAAQ3lB,EAAK/sB,KAAK8+E,OAAO9+E,KAAKusC,IAAI8e,MAAM3Y,IACxEriB,EAAM1Z,KAAKue,MAAMnI,EAAKkmC,EAAInmC,EAAKkmC,GAAK9gC,EAAOnP,EAAQ+J,EAAKkmC,EAAIjmC,EAAKkmC,GACjEvjC,EAAKsjC,EAAK9gC,EAAOvb,KAAK2a,IAAIjB,EAAMlM,GAAQwL,EAAKsjC,EAAK/gC,EAAOvb,KAAK4a,IAAIlB,EAAMlM,GAC5EmB,EAAIC,YACJD,EAAIi7E,QAAQ7wE,EAAIC,EAAI,EAAImvG,EAAI,EAAIA,EAAI,EAAG,EAAGr7G,GAAO,GACjD6B,EAAI26E,YAAc,QAClB36E,EAAI46E,UAAY,GAChB56E,EAAIE,QACR,CACJ,CACA,GAAIxlB,KAAK+6H,UAAYjB,GAAanL,KAAM,CACpC,IAAK3rG,EAAIC,GAAMjjB,KAAKy/H,qBAChB1gH,EAAQ/e,KAAK6pC,WACbi1F,EAAK9+H,KAAKsqC,OAAO5gC,KAAKsgC,SAAWjrB,EACrC,IAAK,IAAI2zB,KAAQ1yC,KAAKw/H,cAAa,GAAO,GAAO,CAC7C,IAAI1yG,EAAK9sB,KAAK6+E,OAAO7+E,KAAKusC,IAAI6e,MAAM1Y,IAAQ3lB,EAAK/sB,KAAK8+E,OAAO9+E,KAAKusC,IAAI8e,MAAM3Y,IAC5EptB,EAAIC,YACJD,EAAIi7E,QAAQzzE,EAAK9J,EAAI+J,EAAK9J,EAAI,EAAI67G,EAAI,EAAIA,EAAI,EAAG,EAAGr7G,GAAO,GAC3D6B,EAAI26E,YAAc,QAClB36E,EAAI46E,UAAY,GAChB56E,EAAIE,QACR,CACJ,CACA,GAAKxlB,KAAK+6H,UAAYjB,GAAavyD,MAAQvnE,KAAKm7H,OAAS,GAAMn7H,KAAK+6H,UAAYjB,GAAatyD,KAAM,CAC/F,IAAImL,EAAU3yE,KAAK+6H,UAAYjB,GAAavyD,KAAOvnE,KAAKu8H,eAAiB,IACrE95E,EAAQziD,KAAK+6H,UAAYjB,GAAatyD,KAAOxnE,KAAKw8H,cAAgB,EAClEz+H,EAAOiC,KAAK+6H,UAAYjB,GAAatyD,KAAOxnE,KAAKy8H,aAAez/E,GAAS+Y,gBAC7E/1D,KAAK0/H,oBAAoBp6G,EAAKqtD,EAASlwB,EAAO1kD,EAClD,CACIiC,KAAKm6H,QAAQG,WACbt6H,KAAK2/H,kBAAkBr6G,GAC3BA,EAAIo3D,SACR,CACA,YAAA8iD,CAAaI,GAAY,EAAOC,GAAY,GACxC,IAAIluF,EAAQ,GACZ,GAAyB,MAArB3xC,KAAKkpH,aAAsB,CAC3B,IAAK,IAAIp5G,EAAI,EAAGA,EAAI9P,KAAKkpH,aAAatqH,OAAQkR,IACtC9P,KAAKkpH,aAAap5G,IAClB6hC,EAAMn1C,KAAKsT,EAAI,GACvB,GAAI6hC,EAAM/yC,OAAS,EACf,OAAO+yC,CACf,CASA,GARI3xC,KAAKgpH,YAAc,EACnBr3E,EAAMn1C,KAAKwD,KAAKgpH,aACXhpH,KAAKipH,YAAc,IACxBt3E,EAAMn1C,KAAKwD,KAAKusC,IAAII,SAAS3sC,KAAKipH,cAClCt3E,EAAMn1C,KAAKwD,KAAKusC,IAAIM,OAAO7sC,KAAKipH,eAEhC4W,GAA6B,GAAhBluF,EAAM/yC,QAAeoB,KAAKm7H,OAAS,GAChDxpF,EAAMn1C,KAAKwD,KAAKm7H,QAChByE,GAA6B,GAAhBjuF,EAAM/yC,OACnB,IAAK,IAAIkR,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IACpC6hC,EAAMn1C,KAAKsT,GAEnB,OAAO6hC,CACX,CACA,WAAAmuF,CAAYt9G,EAAGE,GACX,GAAI1iB,KAAK+6H,UAAYjB,GAAasF,OAASp/H,KAAK+6H,UAAYjB,GAAauF,OACrE,QACA78G,EAAI,GAAKE,EAAI,GAAKF,EAAIxiB,KAAKN,OAASgjB,EAAI1iB,KAAKL,UAC7CK,KAAK+6H,SAAWjB,GAAakB,KAC7Bh7H,KAAKy7H,OAAS,KACdz7H,KAAK07H,OAAS,KACd17H,KAAK27H,UAAY,KACjB37H,KAAK2rG,iBAET,IAAIn3F,EAAM,EAAIA,IAAIxU,KAAKy7H,QACnBjnH,EAAM,GAAKxU,KAAKy7H,OAAOjnH,EAAM,IAAMgO,GAAKxiB,KAAK07H,OAAOlnH,EAAM,IAAMkO,IAEpE1iB,KAAKy7H,OAAOj/H,KAAKgmB,GACjBxiB,KAAK07H,OAAOl/H,KAAKkmB,GACjB1iB,KAAK+/H,qBACL//H,KAAK2rG,gBACT,CACA,kBAAAo0B,GACI//H,KAAK27H,UAAY,IAAIr8H,MAAMU,KAAKusC,IAAIC,UACpC,IAAK,IAAI18B,EAAI,EAAGA,EAAI9P,KAAKusC,IAAIC,SAAU18B,IACnC9P,KAAK27H,UAAU7rH,IAAK,EACxB,IAAK,IAAIA,EAAI,EAAGA,EAAI9P,KAAKwyF,OAAOtQ,YAAapyE,IAAK,CAC9C,IAAI3N,EAAInC,KAAKwyF,OAAOrQ,SAASryE,GACf,GAAV3N,EAAE+iE,OAENllE,KAAK27H,UAAUx5H,EAAE+iE,KAAO,GAAKl3C,EAASC,eAAe9rB,EAAEm2B,KAAKpL,GAAI/qB,EAAEm2B,KAAKnL,GAAIntB,KAAKy7H,OAAQz7H,KAAK07H,QACjG,CACJ,CACA,aAAA8C,CAAcl5G,EAAKotB,EAAM2oD,EAAS2kC,EAAWC,GACzC,GAAmB,MAAfjgI,KAAKwyF,OACL,OACJ,IAAIrwF,EAAI,KACR,IAAK,IAAI2N,EAAI,EAAGA,EAAI9P,KAAKwyF,OAAOtQ,YAAapyE,IACzC,GAAI9P,KAAKwyF,OAAOrQ,SAASryE,GAAGo1D,MAAQxyB,EAAM,CACtCvwC,EAAInC,KAAKwyF,OAAOrQ,SAASryE,GACzB,KACJ,CACJ,GAAS,MAAL3N,EACA,OACJ,IAAI+9H,EAAS,GAAMlgI,KAAK6pC,WACpB3c,GAD2C7J,EAAI68G,GAC1C/9H,EAAEm2B,KAAKpL,IAAIC,EAAKhrB,EAAEm2B,KAAKnL,GAC5BpI,EAAMpO,KAAKC,IAAIspH,EAAQvpH,KAAKC,IAAIzU,EAAEm2B,KAAKjF,GAAIlxB,EAAEm2B,KAAKhF,MAAQ,GAAM2sG,GAAWjgI,KAAK6pC,YACpE,GAAZwxD,IACA/1E,EAAIC,YACJD,EAAIi7E,QAAQrzE,EAAIC,EAAIpI,EAAKA,EAAK,EAAG,EAAGtB,GAAO,GAC3C6B,EAAI86E,UAAYt+E,EAAau5E,GAC7B/1E,EAAIxO,SAEU,GAAdkpH,IACA16G,EAAIC,YACJD,EAAIi7E,QAAQrzE,EAAIC,EAAIpI,EAAKA,EAAK,EAAG,EAAGtB,GAAO,GAC3C6B,EAAI26E,YAAcn+E,EAAak+G,GAC/B16G,EAAI46E,UAAY,EAChB56E,EAAIE,SAEZ,CACA,aAAAi5G,CAAcn5G,EAAKwkC,EAAMuxC,EAAS2kC,EAAWC,GACzC,GAAmB,MAAfjgI,KAAKwyF,OACL,OACJ,IAAI7tE,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAG23B,EAAK,EAAG/lC,EAAK,EACjD,IAAK,IAAI5G,EAAI,EAAGA,EAAI9P,KAAKwyF,OAAOnQ,WAAYvyE,IAAK,CAC7C,IAAI+c,EAAI7sB,KAAKwyF,OAAOlQ,QAAQxyE,GACxB+c,EAAEqzD,MAAQp2B,IAEdnlC,GAAMkI,EAAEq3C,KAAKv/C,GACbC,GAAMiI,EAAEq3C,KAAKt/C,GACbC,GAAMgI,EAAEq3C,KAAKr/C,GACbC,GAAM+H,EAAEq3C,KAAKp/C,GACb23B,IACA/lC,GAAMmW,EAAE/tB,MAAQ,GAAMmhI,GAAWjgI,KAAK6pC,WAC1C,CACA,GAAU,GAAN4S,EACA,OACJ,IAAI0jF,EAAQ,EAAI1jF,EAChB/lC,GAAMypH,EACNx7G,GAAMw7G,EACNv7G,GAAMu7G,EACNt7G,GAAMs7G,EACNr7G,GAAMq7G,EACN,IAAIn9G,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EAAImqE,EAAU,EAAIhsE,EAAQC,EAAIC,GAC1DD,GAAM+rE,EACN9rE,GAAM8rE,EACN,IACyB/iC,EAAIG,EADzBb,EAAKroC,EAAIsoC,GAAMvoC,EACf7V,EAAO,IAAI6X,OAAkBo7G,EAAO,GACxCjzH,EAAK8X,OAAON,EAAK2mC,EAAK50C,EAAIkO,EAAK2mC,EAAK70C,GACpCs1C,EAAKrnC,GAAM2mC,EAAK50C,EAAKsM,EAAKtM,GAAM0pH,EAChCj0E,EAAKvnC,GAAM2mC,EAAK70C,EAAKuM,EAAKvM,GAAM0pH,EAChCjzH,EAAK+X,iBAAiB8mC,EAAIG,EAAIxnC,EAAK3B,EAAKtM,EAAIkO,EAAK3B,EAAKvM,GACtDs1C,EAAKrnC,IAAO2mC,EAAK50C,EAAKsM,EAAKtM,GAAM0pH,EACjCj0E,EAAKvnC,IAAO2mC,EAAK70C,EAAKuM,EAAKvM,GAAM0pH,EACjCjzH,EAAK+X,iBAAiB8mC,EAAIG,EAAIxnC,EAAK2mC,EAAK50C,EAAIkO,EAAK2mC,EAAK70C,GACtDvJ,EAAKgY,OAAON,EAAKymC,EAAK50C,EAAIoO,EAAKymC,EAAK70C,GACpCs1C,EAAKnnC,IAAOymC,EAAK50C,EAAKsM,EAAKtM,GAAM0pH,EACjCj0E,EAAKrnC,IAAOymC,EAAK70C,EAAKuM,EAAKvM,GAAM0pH,EACjCjzH,EAAK+X,iBAAiB8mC,EAAIG,EAAItnC,EAAK7B,EAAKtM,EAAIoO,EAAK7B,EAAKvM,GACtDs1C,EAAKnnC,GAAMymC,EAAK50C,EAAKsM,EAAKtM,GAAM0pH,EAChCj0E,EAAKrnC,GAAMymC,EAAK70C,EAAKuM,EAAKvM,GAAM0pH,EAChCjzH,EAAK+X,iBAAiB8mC,EAAIG,EAAItnC,EAAKymC,EAAK50C,EAAIoO,EAAKymC,EAAK70C,GACtDvJ,EAAKiY,aACW,GAAZi2E,IACA/1E,EAAIC,YACJD,EAAI86E,UAAYt+E,EAAau5E,GAC7B/1E,EAAIxO,KAAK3J,KAEK,GAAd6yH,IACA16G,EAAIC,YACJD,EAAI26E,YAAcn+E,EAAak+G,GAC/B16G,EAAI46E,UAAY,EAChB56E,EAAIE,OAAOrY,GAEnB,CACA,mBAAAuyH,CAAoBp6G,EAAKqtD,EAASlwB,EAAO1kD,GACrC,IAAI4mB,EAAK3kB,KAAK47H,OAAQh3G,EAAK5kB,KAAK67H,OAChC,GAAI77H,KAAKm7H,OAAS,EACdx2G,EAAK3kB,KAAK6+E,OAAO7+E,KAAKusC,IAAI6e,MAAMprD,KAAKm7H,SACrCv2G,EAAK5kB,KAAK8+E,OAAO9+E,KAAKusC,IAAI8e,MAAMrrD,KAAKm7H,cAEpC,GAAIn7H,KAAKo7H,OAAS,EAAG,CACtB,IAAK1uF,EAAKE,GAAO5sC,KAAKusC,IAAI0mC,WAAWjzE,KAAKo7H,QAC1Cz2G,EAAK3kB,KAAK6+E,OAAO,IAAO7+E,KAAKusC,IAAI6e,MAAM1e,GAAO1sC,KAAKusC,IAAI6e,MAAMxe,KAC7DhoB,EAAK5kB,KAAK8+E,OAAO,IAAO9+E,KAAKusC,IAAI8e,MAAM3e,GAAO1sC,KAAKusC,IAAI8e,MAAMze,IACjE,CACA,IAAI/nB,EAAK7kB,KAAK87H,OAAQh3G,EAAK9kB,KAAK+7H,OAC5BsE,EAASrgI,KAAKymH,YAAY5hG,EAAIC,GAAKw7G,GAAW,EAC9CD,KACCx7G,EAAIC,EAAIw7G,GAAYD,GACzB,IAAIthH,EAAQ/e,KAAK6pC,WAIjB,GAHAvkB,EAAI26E,YAAcqgC,EAAW,UAAY,UACzCh7G,EAAI46E,UAAYlgG,KAAKsqC,OAAO5gC,KAAKsgC,SAAWjrB,GAASuhH,EAAW,IAAM,GACtEj7G,EAASC,EAAKX,EAAIC,EAAIC,EAAIC,GACX,KAAX6tD,EAAgB,CAChB,IAAI4tD,EAAKvgI,KAAKsqC,OAAO5gC,KAAKqgC,SAAWhrB,EACrCuG,EAAIi2D,KAAO91D,EAAc86G,GACzB,IAAI9jD,EAAUn3D,EAAIg2D,YAAY3I,GAC9BrtD,EAAI86E,UAAY,UAChB96E,EAAIs7E,SAASjuB,EAAS9tD,EAAK,GAAM43D,EAAQ/8E,MAAOolB,EAAK,GAAMy7G,EAC/D,CACJ,CACA,iBAAAZ,CAAkBr6G,GACd,MAAM,OAAEktE,EAAM,IAAEjmD,GAAQvsC,KACxB,IAAIwgI,EAAS,GACb,IAAK,IAAI1wH,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/B,GAAIgsD,GAAUC,gBAAgBxvB,EAAKz8B,GAAI,CACnC,IAAI+jC,EAAO,GACX,IAAK,IAAIyoB,KAAQ/vB,EAAI8E,UAAUvhC,GACvBwsD,EAAK57C,WAAW,MAChBmzB,EAAKr3C,KAAK8/D,GAClB,IAAImkE,EAAKjuC,EAAOrQ,SAASryE,EAAI,GAC7B0wH,EAAOhkI,KAAK,CAAE4zE,IAAKv8B,EAAK/1B,KAAK,KAAM0E,EAAGi+G,EAAGnoG,KAAKpL,GAAKuzG,EAAGnoG,KAAKjF,GAAI3Q,EAAG+9G,EAAGnoG,KAAKnL,IAC9E,CACJ,IAAK,IAAIrd,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAC/B,GAAIgsD,GAAUE,gBAAgBzvB,EAAKz8B,GAAI,CACnC,IAAI+jC,EAAO,GACX,IAAK,IAAIyoB,KAAQ/vB,EAAIkc,UAAU34C,GACvBwsD,EAAK57C,WAAW,OAAS47C,EAAK57C,WAAW2mC,GAAcoY,SACvD5rB,EAAKr3C,KAAK8/D,GAClB,IAAI3sB,EAAM,EAAGziB,EAAK,EAAGC,EAAK,EAC1B,IAAK,IAAIpB,KAAMymE,EAAOjQ,WACdx2D,EAAGm0D,MAAQpwE,IACX6/B,GAAO,EACPziB,GAAMnB,EAAGm4C,KAAKv/C,GAAKoH,EAAGm4C,KAAKr/C,GAC3BsI,GAAMpB,EAAGm4C,KAAKt/C,GAAKmH,EAAGm4C,KAAKp/C,IAEnC07G,EAAOhkI,KAAK,CAAE4zE,IAAKv8B,EAAK/1B,KAAK,KAAM0E,EAAG0K,EAAKyiB,EAAKjtB,EAAGyK,EAAKwiB,GAC5D,CACJ,IAAI4wF,EAAK,GAAMvgI,KAAKsqC,OAAO5gC,KAAKqgC,SAAW/pC,KAAK6pC,WAChD,IAAK,IAAI62F,KAASF,EACdl7G,EAAIi2D,KAAO91D,EAAc86G,GACzBj7G,EAAI86E,UAAY,UAChB96E,EAAIs7E,SAAS8/B,EAAMtwD,IAAKswD,EAAMl+G,EAAGk+G,EAAMh+G,EAE/C,CACA,eAAA67G,CAAgBj5G,EAAKghC,EAAMonC,GACvB,MAAM,IAAEnhD,EAAG,OAAEimD,GAAWxyF,KACxB,IAAIwiB,EAAI,GAAIE,EAAI,GACZ3D,EAAQ/e,KAAK6pC,WACjB,IAAK,IAAIlwB,KAAK2sC,EAAK3U,MAAO,CACtB,IAAIu6C,EAAKsG,EAAOrQ,SAASxoE,EAAI,GACzBoL,EAAMpO,KAAKC,IAAI,GAAMmI,EAAOpI,KAAKC,IAAIs1E,EAAG5zD,KAAKjF,GAAI64D,EAAG5zD,KAAKhF,KAC7D,MAAMqtG,EAAM,GAAIC,EAAOn9G,EAAQk9G,EAC/B,IAAK,IAAI7wH,EAAI,EAAGA,EAAI6wH,EAAK7wH,IAAK,CAC1B,IAAIgU,EAAKhU,EAAI8wH,EACbp+G,EAAEhmB,KAAK0vF,EAAG5zD,KAAKpL,GAAKnI,EAAMpO,KAAK2a,IAAIxN,IACnCpB,EAAElmB,KAAK0vF,EAAG5zD,KAAKnL,GAAKpI,EAAMpO,KAAK4a,IAAIzN,GACvC,CACJ,CACA,IAAI+8G,EAAW,GAAIC,EAAU,GAAIC,EAAW,GAC5C,IAAK,IAAIjxH,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,IAAI48B,EAAMH,EAAII,SAAS78B,GAAI88B,EAAML,EAAIM,OAAO/8B,GACxCkxH,EAAQ16E,EAAK3U,MAAMzwC,SAASwrC,GAAMu0F,EAAQ36E,EAAK3U,MAAMzwC,SAAS0rC,GAClE,IAAKo0F,IAAUC,EACX,SACCA,EAKKD,IACNH,EAASrkI,KAAKsT,GACdgxH,EAAQtkI,KAAKowC,GACbm0F,EAASvkI,KAAKkwC,KAPdm0F,EAASrkI,KAAKsT,GACdgxH,EAAQtkI,KAAKkwC,GACbq0F,EAASvkI,KAAKowC,IAOlB,IAAIijD,EAAM2C,EAAOrQ,SAASz1C,EAAM,GAAIojD,EAAM0C,EAAOrQ,SAASv1C,EAAM,GAC5DjoB,EAAKkrE,EAAIv3D,KAAKpL,GAAItI,EAAKirE,EAAIv3D,KAAKnL,GAAItI,EAAKirE,EAAIx3D,KAAKpL,GAAIpI,EAAKgrE,EAAIx3D,KAAKnL,GACnE6zG,EAEKC,KACLp8G,EAAIC,GAAM,CAAC,IAAOH,EAAKE,GAAK,IAAOD,EAAKE,MAFxCH,EAAIC,GAAM,CAAC,IAAOD,EAAKE,GAAK,IAAOD,EAAKE,IAG7C,IAAI9B,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EAAI3Q,EAAI8O,EAAQC,EAAIC,GAAK89D,EAAOz9D,EAAKrP,GAC7Dq3C,EAAKroC,EAAK89D,EAAO,GAAMhiE,EAAOwsC,GAAMvoC,EAAK+9D,EAAO,GAAMhiE,EACtDmiH,EAAUvqH,KAAKoN,KAAK,EAAI9P,EAAI8K,GAAS,EAAGoiH,EAAWxqH,KAAKoN,KAAK,EAAIhB,EAAQuoC,EAAIC,GAAMxsC,GAAS,EAChG,IAAK,IAAIjP,EAAI,EAAGA,GAAKoxH,EAASpxH,IAC1B0S,EAAEhmB,KAAKmoB,EAAK2mC,EAAKtoC,EAAKlT,EAAIoxH,GAC1Bx+G,EAAElmB,KAAKooB,EAAK2mC,EAAKtoC,EAAKnT,EAAIoxH,GAC1B1+G,EAAEhmB,KAAKmoB,EAAK2mC,EAAKtoC,EAAKlT,EAAIoxH,GAC1Bx+G,EAAElmB,KAAKooB,EAAK2mC,EAAKtoC,EAAKnT,EAAIoxH,GAE9B,IAAK,IAAIpxH,EAAI,EAAGA,EAAIqxH,EAAUrxH,IAC1B0S,EAAEhmB,KAAKmoB,EAAK2mC,EAAK,EAAIA,EAAKx7C,EAAIqxH,GAC9Bz+G,EAAElmB,KAAKooB,EAAK2mC,EAAK,EAAIA,EAAKz7C,EAAIqxH,GAC9B3+G,EAAEhmB,KAAKqoB,EAAKymC,EAAK,EAAIA,EAAKx7C,EAAIqxH,GAC9Bz+G,EAAElmB,KAAKsoB,EAAKymC,EAAK,EAAIA,EAAKz7C,EAAIqxH,EAEtC,CACA,IAAKp6G,EAAIC,GAAMgH,EAASuI,eAAe/T,EAAGE,EAAG,GAAM3D,GAC/C5R,EAAO,IAAI6X,OACf7X,EAAK8X,OAAO8B,EAAG,GAAIC,EAAG,IACtB,IAAK,IAAIlX,EAAI,EAAGA,EAAIiX,EAAGnoB,OAAQkR,IAC3B3C,EAAKgY,OAAO4B,EAAGjX,GAAIkX,EAAGlX,IAC1B3C,EAAKiY,YACLE,EAAIg3D,OACJh3D,EAAI86E,UAAY,UAChB96E,EAAIxO,KAAK3J,GACTmY,EAAI26E,YAAc,UAClB36E,EAAI46E,UAAY,EAChB56E,EAAIE,OAAOrY,GACXmY,EAAIo3D,UACJ,IAAI0kD,EAAY,GACZC,EAAa,GACbC,EAAa,GACjB,GAA8B,GAA1B,EAAI9sH,IAAI8xC,EAAKkB,UACb65E,EAAW7kI,KAAK,CAACskI,EAAQD,EAASrmH,QAAQ8rC,EAAKkB,SAAS,KAAMs5E,EAAQD,EAASrmH,QAAQ8rC,EAAKkB,SAAS,OACrG65E,EAAW7kI,KAAK,CAACskI,EAAQD,EAASrmH,QAAQ8rC,EAAKkB,SAAS,KAAMs5E,EAAQD,EAASrmH,QAAQ8rC,EAAKkB,SAAS,YAEpG,GAAyB,GAArB,EAAIhzC,IAAIqsH,IAAkC,MAAhBv6E,EAAKiB,QAChCjB,EAAKiB,SAAWL,GAAyB+B,YAAc3C,EAAKiB,SAAWL,GAAyBiC,QAChGk4E,EAAW7kI,KAAK,CAACskI,EAAQ,GAAIA,EAAQ,KAErCx6E,EAAKiB,SAAWL,GAAyBgC,YAAc5C,EAAKiB,SAAWL,GAAyBiC,SAChGi4E,EAAU5kI,KAAKskI,EAAQ,IACvBM,EAAU5kI,KAAKskI,EAAQ,UAI3B,IAAK,IAAIlxH,KAAKixH,EAAU,CACpB,IAAI9iF,EAAKxR,EAAII,SAAS/8B,GAAIouC,EAAKzR,EAAIM,OAAOj9B,GACtC02C,EAAK3U,MAAMzwC,SAAS88C,MACnBD,EAAIC,GAAM,CAACA,EAAID,IACpB,IAAIiM,EAAO1D,EAAKoB,SAASjnD,IAAImP,GAAI0K,EAAOgsC,EAAKqB,SAASlnD,IAAImP,GACtD2xH,E/B5sByB,K+B4sBdh1F,EAAI2Q,YAAYc,GAC/B,IAAK,IAAI3V,KAASk5F,EAAW,CAACj7E,GAAQonC,EAClC,IAAK,IAAI/zE,KAAK0uB,EAAKsJ,MAAO,CACtB,IAAI6vF,GAAQ,EACZ,IAAK,IAAIhxF,KAAOjE,EAAI8c,YAAY1vC,GAC5B,IAAK0uB,EAAKsJ,MAAMzwC,SAASsvC,GAAM,CAC3BgxF,GAAQ,EACR,KACJ,CACJ,GAAKA,EAAL,CAEA,GAAI,EAAIltH,SAAS01C,GAAO,CACpB,IAAIy3E,EAASp5F,EAAKof,SAAShnD,IAAIkZ,GAAI44G,GAAM,EACzC,GAAIkP,EACA,IAAK,IAAIhoE,KAAMgoE,EACXlP,EAAMA,GAAOvoE,EAAK9oD,SAASu4D,GACnC,IAAK84D,EACD,QACR,CACA,GAAI,EAAIj+G,SAASgG,GAAO,CACpB,IAAImnH,EAASp5F,EAAKof,SAAShnD,IAAIkZ,GAAI44G,GAAM,EACzC,GAAIkP,EACA,IAAK,IAAIhoE,KAAMgoE,EACXlP,EAAMA,GAAOj4G,EAAKpZ,SAASu4D,GACnC,GAAI84D,EACA,QACR,CACI54G,GAAKokC,EACLqjF,EAAU5kI,KAAKuhD,GACVuI,IAASje,EACdg5F,EAAW7kI,KAAK,CAACuhD,EAAIpkC,IAErB2nH,EAAW9kI,KAAK,CAACuhD,EAAIpkC,GAtBb,CAuBhB,CACR,CAEJynH,EAAY,EAAIlnH,aAAaknH,GAC7BC,EAAa,EAAIzoH,QAAQyoH,EAAY,EAAIlnH,WAAWknH,EAAWhjI,KAAKqjI,GAAS,EAAIpqH,IAAIoqH,GAAQn1F,EAAIC,SAAW,EAAI51B,IAAI8qH,OACpHJ,EAAa,EAAI1oH,QAAQ0oH,EAAY,EAAInnH,WAAWmnH,EAAWjjI,KAAKqjI,GAAS,EAAIpqH,IAAIoqH,GAAQn1F,EAAIC,SAAW,EAAI51B,IAAI8qH,OACpHp8G,EAAIg3D,OACJh3D,EAAI26E,YAAc,UAClB36E,EAAI46E,UAAY,EAChB56E,EAAIq8G,YAAY,CAAC,EAAG,IACpBr8G,EAAIC,YACJ,IAAK,IAAI5L,KAAKynH,EAAW,CACrB,IAAIj1G,EAAKqmE,EAAOrQ,SAASxoE,EAAI,GAAIgL,EAAKwH,EAAGmM,KAAKpL,GAAItI,EAAKuH,EAAGmM,KAAKnL,GAC3DtI,EAAK,EAAGC,EAAK,EAAG6qB,EAAM,EAC1B,IAAK,IAAI7/B,EAAI,EAAGA,EAAI+wH,EAASjiI,OAAQkR,IACjC,GAAIgxH,EAAQhxH,IAAM6J,EAAG,CACjB,IAAIgkC,EAAK60C,EAAOrQ,SAAS4+C,EAASjxH,GAAK,GACvC+U,GAAM84B,EAAGrlB,KAAKpL,GACdpI,GAAM64B,EAAGrlB,KAAKnL,GACdwiB,GACJ,CACAA,EAAM,IACN9qB,GAAM8qB,EACN7qB,GAAM6qB,GAEV9qB,EAAKF,EAAK,IAAOE,EAAKF,GACtBG,EAAKF,EAAK,IAAOE,EAAKF,GACtB,IAAI5B,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EAAIm8D,EAAOz9D,EAAKP,EAAQC,EAAIC,IAAMqoC,EAAKroC,EAAK89D,EAAMx1B,GAAMvoC,EAAK+9D,EACrF7zD,EAAK,IAAOvI,EAAKE,GAAKsI,EAAK,IAAOvI,EAAKE,GAC3C,MAAM8nE,EAAM,EAAI7tE,EAChBuG,EAAIL,OAAON,EAAIC,GACfU,EAAIJ,iBAAiBgI,EAAKo+B,EAAKshC,EAAKz/D,EAAKo+B,EAAKqhC,EAAK/nE,EAAIC,GACvDQ,EAAIJ,iBAAiBgI,EAAKo+B,EAAKshC,EAAKz/D,EAAKo+B,EAAKqhC,EAAKjoE,EAAIC,EAC3D,CACA,IAAK,IAAKm5B,EAAIC,KAAOqjF,EAAY,CAC7B,IAAI18G,EAAK4nB,EAAI6e,MAAMrN,GAAKn5B,EAAK2nB,EAAI8e,MAAMtN,GAAKl5B,EAAK0nB,EAAI6e,MAAMpN,GAAKl5B,EAAKynB,EAAI8e,MAAMrN,GAC3Eh7B,EAAK6B,EAAKF,EAAI1B,EAAK6B,EAAKF,EAAIm8D,EAAOz9D,EAAKP,EAAQC,EAAIC,IAAMqoC,EAAKroC,EAAK89D,EAAMx1B,GAAMvoC,EAAK+9D,EACrF7zD,EAAK,IAAOvI,EAAKE,GAAKsI,EAAK,IAAOvI,EAAKE,GAC3C,MAAM8nE,EAAM,EACZ,IAAIwC,EAAMliE,EAAKo+B,EAAKshC,EAAKyC,EAAMliE,EAAKo+B,EAAKqhC,EAAKoC,EAAM9hE,EAAKo+B,EAAKshC,EAAKqC,EAAM9hE,EAAKo+B,EAAKqhC,GAC9E7lE,EAAIC,GAAM6kC,GAAU2F,gBAAgBjlB,EAAK6iD,EAAKC,GAAOxjC,GAAU2F,gBAAgBjlB,EAAKyiD,EAAKC,GAAO,CAACG,EAAKC,GAAO,CAACL,EAAKC,GACxH3pE,EAAIL,OAAOjlB,KAAK6+E,OAAOl6D,GAAK3kB,KAAK8+E,OAAOl6D,IACxCU,EAAIJ,iBAAiBllB,KAAK6+E,OAAO93D,GAAK/mB,KAAK8+E,OAAO93D,GAAKhnB,KAAK6+E,OAAOh6D,GAAK7kB,KAAK8+E,OAAOh6D,GACxF,CACA,IAAK,IAAKi5B,EAAIC,KAAOsjF,EAAY,CAC7B,IAAIn1G,EAAKqmE,EAAOrQ,SAASpkC,EAAK,GAAIJ,EAAK60C,EAAOrQ,SAASnkC,EAAK,GAC5D14B,EAAIL,OAAOkH,EAAGmM,KAAKpL,GAAIf,EAAGmM,KAAKnL,IAC/B7H,EAAIH,OAAOw4B,EAAGrlB,KAAKpL,GAAIywB,EAAGrlB,KAAKnL,GACnC,CACA7H,EAAIE,SACJF,EAAIo3D,SACR,CACA,iBAAAyiD,GACI,IAAIzsF,EAAO1yC,KAAKm7H,OAAQrxE,EAAO9pD,KAAKo7H,OAAQ7uF,EAAMvsC,KAAKusC,IACnD5nB,EAAK+tB,EAAO,EAAInG,EAAI6e,MAAM1Y,GAAQoX,EAAO,EAAI,IAAOvd,EAAI6e,MAAM7e,EAAII,SAASmd,IAASvd,EAAI6e,MAAM7e,EAAIM,OAAOid,KAAU9pD,KAAKm9H,OAAOn9H,KAAK47H,QACpIh3G,EAAK8tB,EAAO,EAAInG,EAAI8e,MAAM3Y,GAAQoX,EAAO,EAAI,IAAOvd,EAAI8e,MAAM9e,EAAII,SAASmd,IAASvd,EAAI8e,MAAM9e,EAAIM,OAAOid,KAAU9pD,KAAKo9H,OAAOp9H,KAAK67H,QACtE74G,EAAzDhjB,KAAKm9H,OAAOn9H,KAAK87H,QAAkDn3G,EAAI1B,EAAxCjjB,KAAKo9H,OAAOp9H,KAAK+7H,QAAiCn3G,EACtF4uC,EAAM78C,KAAKW,IAAI,EAAGX,KAAK0tC,MAAwB,EAAlBthC,EAAQC,EAAIC,GAAU+5B,GAASsN,WAAa,GAC7E,OAAIkJ,EAAM,EAOH,CAAC,KAAM,MANL1J,EAAO,EACLK,GAAW4J,gBAAgBxnB,EAAKinB,EAAK1J,EAAM9mC,EAAIC,GACjDyvB,EAAO,GAAKnG,EAAIsQ,aAAanK,GAAQ,IAAM1yC,KAAK48H,iBAC9CzyE,GAAWwJ,gBAAgBpnB,EAAKinB,EAAK9gB,EAAM1vB,EAAIC,GAE/CknC,GAAWoJ,eAAehnB,EAAKinB,EAAK7uC,EAAIC,EAAI5B,EAAIC,GAAKjjB,KAAK48H,iBAEzE,CACA,kBAAA2C,GACI,IAAIvsE,EAAKhzD,KAAK47H,OAAQ3oE,EAAKjzD,KAAK67H,OAC5BpoE,EAAOzzD,KAAKymH,YAAYzzD,EAAIC,GACpB,MAARQ,IACAT,EAAKS,EAAK,GACVR,EAAKQ,EAAK,IAEd,IAAItvC,EAAQxN,KAAKue,MAAMl1B,KAAK+7H,OAAS9oE,EAAIjzD,KAAK87H,OAAS9oE,GAAKhhC,EAAYjP,EAAQ/iB,KAAK87H,OAAS9oE,EAAIhzD,KAAK+7H,OAAS9oE,GAGhH,OAFIjzD,KAAK68H,eAAiB,IACtB14G,EAAQxN,KAAK0tC,MAAMlgC,EAAQnkB,KAAK68H,gBAAkB78H,KAAK68H,gBACpD,CAAC7pE,EAAIC,EAAI9uC,EAAO6N,EAC3B,CACA,kBAAAytG,GACI,IAAI96G,EAAK3kB,KAAK47H,OAAQh3G,EAAK5kB,KAAK67H,OAAQh3G,EAAK7kB,KAAK87H,OAAQh3G,EAAK9kB,KAAK+7H,OACpE,GAAI/7H,KAAKm7H,OAAS,EAAG,CACjBx2G,EAAK3kB,KAAK6+E,OAAO7+E,KAAKusC,IAAI6e,MAAMprD,KAAKm7H,SACrCv2G,EAAK5kB,KAAK8+E,OAAO9+E,KAAKusC,IAAI8e,MAAMrrD,KAAKm7H,SACrC,IAAI1nE,EAAOzzD,KAAKymH,YAAY5hG,EAAIC,GACpB,MAAR2uC,IACA5uC,EAAK4uC,EAAK,GACV3uC,EAAK2uC,EAAK,GAElB,CACA,MAAO,CAAC5uC,EAAKF,EAAIG,EAAKF,EAC1B,CACA,WAAA6hG,CAAYjkG,EAAGE,GACX,GAAI1iB,KAAKo7H,OAAS,EAAG,CACjB,IAAIl0H,EAAMlH,KAAK4hI,WAAWp/G,EAAGE,GAC7B,GAAIxb,EAAM,EAAG,CACT,IAAKwlC,EAAKE,GAAO5sC,KAAKusC,IAAI0mC,YAAY/rE,GAGtC,MAAO,CAFElH,KAAK6+E,OAAO,IAAO7+E,KAAKusC,IAAI6e,MAAM1e,GAAO1sC,KAAKusC,IAAI6e,MAAMxe,KACxD5sC,KAAK8+E,OAAO,IAAO9+E,KAAKusC,IAAI8e,MAAM3e,GAAO1sC,KAAKusC,IAAI8e,MAAMze,MACjD,EACpB,CACA,OAAO,IACX,CACA,IAAIskB,EAAU3zD,OAAO4sB,kBAAmBwmC,EAAQ,EAAGC,EAAQ,EAAGF,GAAW,EACzE,MAAMmxE,EAAWx+G,EAAI,GAAMrjB,KAAK6pC,YAChC,GAAuB,MAAnB7pC,KAAKg8H,WACL,IAAK,IAAIjyH,EAAI,EAAGA,EAAI/J,KAAKg8H,WAAWp9H,OAAQmL,IACxC,IAAK,IAAIsM,EAAI,EAAGA,EAAIrW,KAAKg8H,WAAWjyH,GAAGyY,EAAE5jB,OAAQyX,IAAK,CAClD,IAAI0Q,EAAK/mB,KAAKg8H,WAAWjyH,GAAGk1H,MAAM5oH,GAAI2Q,EAAKhnB,KAAKg8H,WAAWjyH,GAAGm1H,MAAM7oH,GAChE+b,EAAM,EAASrL,EAAKvE,EAAGwE,EAAKtE,GAC5B0P,EAAMyvG,GAAYzvG,EAAM8+B,KACvBA,EAASP,EAAOC,EAAOF,GAAY,CAACt+B,EAAKrL,EAAIC,GAAI,GAC1D,CACR,IAAK,IAAIlX,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IAAK,CACzC,IAAIiX,EAAK/mB,KAAK6+E,OAAO7+E,KAAKusC,IAAI6e,MAAMt7C,IAAKkX,EAAKhnB,KAAK8+E,OAAO9+E,KAAKusC,IAAI8e,MAAMv7C,IACrEsiB,EAAM,EAASrL,EAAKvE,EAAGwE,EAAKtE,GAC5B0P,EAAMyvG,GAAYzvG,EAAM8+B,KACvBA,EAASP,EAAOC,EAAOF,GAAY,CAACt+B,EAAKrL,EAAIC,GAAI,GAC1D,CACA,OAAI4D,SAASsmC,GACF,CAACP,EAAOC,EAAOF,GACnB,IACX,CACA,gBAAAoxE,CAAiBt/G,EAAGE,EAAG25D,EAAM,CAAC,GAC1B,IAAI0lD,EAAY,GAAM/hI,KAAK6pC,WACvBm4F,EAAW,EAAGztG,EAAYh3B,OAAO4sB,kBACrC,IAAKkyD,EAAI4lD,QACL,IAAK,IAAInyH,EAAI,EAAGA,EAAI9P,KAAKwyF,OAAOtQ,YAAapyE,IAAK,CAC9C,IAAI3N,EAAInC,KAAKwyF,OAAOrQ,SAASryE,GAC7B,GAAc,GAAV3N,EAAE+iE,KACF,SACJ,IACI9yC,EAAM,EADDzb,KAAKuF,IAAIsG,EAAIrgB,EAAEm2B,KAAKpL,IAAUvW,KAAKuF,IAAIwG,EAAIvgB,EAAEm2B,KAAKnL,KAGvDiF,EADW/O,EAAI1M,KAAKC,IAAImrH,EAAWprH,KAAKC,IAAIzU,EAAEm2B,KAAKjF,GAAIlxB,EAAEm2B,KAAKhF,OAG9DlB,EAAMmC,IACNytG,EAAW7/H,EAAE+iE,KACb3wC,EAAYnC,EAEpB,CACJ,GAAgB,GAAZ4vG,EACA,OAAOA,EACX,IAAK3lD,EAAI6lD,QACL,IAAK,IAAIpyH,EAAI,EAAGA,EAAI9P,KAAKwyF,OAAOnQ,WAAYvyE,IAAK,CAC7C,IAAI+c,EAAI7sB,KAAKwyF,OAAOlQ,QAAQxyE,GAC5B,GAAc,GAAV+c,EAAEqzD,KACF,SACJ,IAAIv7D,EAAKkI,EAAEq3C,KAAKv/C,GAAIC,EAAKiI,EAAEq3C,KAAKt/C,GAC5BC,EAAKgI,EAAEq3C,KAAKr/C,GAAIC,EAAK+H,EAAEq3C,KAAKp/C,GAChC,GAAItC,EAAI7L,KAAKW,IAAIqN,EAAIE,GAAMk9G,GAAar/G,EAAI/L,KAAKW,IAAIsN,EAAIE,GAAMi9G,GAC3Dv/G,EAAI7L,KAAKC,IAAI+N,EAAIE,GAAMk9G,GAAar/G,EAAI/L,KAAKC,IAAIgO,EAAIE,GAAMi9G,EAC3D,SACJ,IAAI7vG,EAAOlE,EAASkB,qBAAqB1M,EAAGE,EAAGiC,EAAIC,EAAIC,EAAIC,GACvDoN,EAAO6vG,GAEP7vG,EAAOqC,IACPytG,GAAYn1G,EAAEqzD,KACd3rD,EAAYrC,EAEpB,CACJ,OAAO8vG,CACX,CACA,UAAAJ,CAAWp/G,EAAGE,EAAG25D,EAAM,CAAC,GACpB,OAAOr8E,KAAK8hI,iBAAiBt/G,EAAGE,EAAG25D,IAAQ,CAC/C,CACA,aAAAmhD,CAAcjxF,GACV,IAAI8wC,EAAU,IAAI1yC,GAClB,IAAK,IAAI76B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC3Bm8C,GAAQc,UAAUxgB,EAAKz8B,IAAMA,GAAK9P,KAAKi7H,YACvC59C,EAAQvyC,kBAAkBh7B,GAAK,SAQvC,GAPAutE,EAAQzxC,aAAeigB,GAAU6pB,oBAAoBnpC,EAAK,IAC1D8wC,EAAQ/xC,aAAe,EAAIt0B,YAAY,GAAIu1B,EAAIC,UAC/C6wC,EAAQ9xC,YAAc,EAAIx0B,YAAY0sB,GAAMG,WAAY2I,EAAIC,UAC5D6wC,EAAQ7xC,aAAe,EAAIz0B,YAAY,GAAKw1B,EAAIC,UAChD6wC,EAAQ5xC,aAAe,EAAIz0B,YAAY,GAAIu1B,EAAIE,UAC/C4wC,EAAQ3xC,YAAc,EAAI30B,YAAY0sB,GAAMG,WAAY2I,EAAIE,UAC5D4wC,EAAQ1xC,aAAe,EAAI50B,YAAY,GAAKw1B,EAAIE,UAC5CzsC,KAAKm6H,QAAQE,YACb,IAAK,IAAIvqH,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAAK,CACpC,IAAIw7C,EAAKW,GAAQoP,mBAAmB9uB,EAAKz8B,GAC/B,MAANw7C,IACA+xB,EAAQ/xC,aAAax7B,EAAI,GAAKm8C,GAAQ0P,mBAAmBrQ,GACzD+xB,EAAQ9xC,YAAYz7B,EAAI,GAAK,SAErC,CAEJ,GAAI9P,KAAKm6H,QAAQC,YAAcL,GAAqB7qB,gBAAiB,CAC5DlvG,KAAKwkE,SACNxkE,KAAKwkE,OAAS0qC,GAAgBvtG,OAAOi0G,GAAasD,aAAa3sE,KACnE4iC,EAAM,IAAK,IAAIr/D,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAAK,CAC1C,IAAIqyH,EAAMniI,KAAKwkE,OAAOsrC,mBAAmBhgG,GACzC,GAAIqyH,GAAOjzB,GAAgBE,YAA3B,CAEA,IAAK,IAAIt9C,KAAQvlB,EAAIwlB,aAAajiD,GAC9B,GAA2B,GAAvBy8B,EAAI2H,UAAU4d,GACd,SAASqd,EACjB,GAAIgzD,GAAOjzB,GAAgBkF,eACvB,IAAK,IAAI5jE,KAAOjE,EAAI8c,YAAYv5C,GAC5B,GAAIukC,GAAUI,eAAelI,EAAIoQ,aAAanM,KAAS,EACnD,SAAS2+B,EAErBkO,EAAQ/xC,aAAax7B,EAAI,GAAKqyH,GAAOjzB,GAAgBqF,WAAa,IAC9D4tB,GAAOjzB,GAAgBoF,WAAa,IAChC6tB,GAAOjzB,GAAgBkF,eAAiB,MAAQ,IACxD/2B,EAAQ9xC,YAAYz7B,EAAI,GAAK,KAZjB,CAahB,CACA,IAAK,IAAIA,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,CACpC,IAAIk1E,EAAOhlF,KAAKwkE,OAAOurC,eAAejgG,GAClCk1E,GAAQkqB,GAAgBE,cAE5B/xB,EAAQ5xC,aAAa37B,EAAI,GAAKk1E,GAAQkqB,GAAgBqF,WAAa,IAC/DvvB,GAAQkqB,GAAgBoF,WAAa,IACjCtvB,GAAQkqB,GAAgBkF,eAAiB,MAAQ,IACzD/2B,EAAQ3xC,YAAY57B,EAAI,GAAK,MACjC,CACJ,MACK,GAAI9P,KAAKm6H,QAAQC,YAAcL,GAAqBqI,cAAe,CACpE/kD,EAAQ/xC,aAAe,EAAIt0B,YAAY,GAAIu1B,EAAIC,UAC/C6wC,EAAQ9xC,YAAc,EAAIx0B,YAAY,QAAUw1B,EAAIC,UACpD6wC,EAAQ7xC,aAAe,EAAIz0B,YAAY,GAAKw1B,EAAIC,UAChD,IAAK,IAAI18B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC3By8B,EAAIkqB,WAAW3mD,GAAK,IACpButE,EAAQ/xC,aAAax7B,EAAI,GAAKy8B,EAAIkqB,WAAW3mD,GAAG4D,WAC5D,MACK,GAAI1T,KAAKm6H,QAAQC,YAAcL,GAAqBsI,UAAW,CAChEhlD,EAAQ/xC,aAAe,EAAIt0B,YAAY,GAAIu1B,EAAIC,UAC/C6wC,EAAQ9xC,YAAc,EAAIx0B,YAAY,QAAUw1B,EAAIC,UACpD6wC,EAAQ7xC,aAAe,EAAIz0B,YAAY,GAAKw1B,EAAIC,UAChD,IAAK,IAAI18B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC/ButE,EAAQ/xC,aAAax7B,EAAI,GAAKA,EAAE4D,UACxC,CACA,OAAO2pE,CACX,CACA,kBAAAsgD,CAAmB2E,EAAY5E,GAC3B,MAAM,IAAEnxF,GAAQvsC,KAChB,GAAIisD,GAAQ73C,QAAQspH,GAChB,OACJ,GAAyC,GAArC19H,KAAKusC,IAAIsQ,aAAaylF,GACtB,OACJ,IAAIj2F,EAAME,EAAI8c,YAAYi5E,GAAY,GAClCvrE,EAAMxqB,EAAI6e,MAAMk3E,GAAc/1F,EAAI6e,MAAM/e,GAAM2qB,EAAMzqB,EAAI8e,MAAMi3E,GAAc/1F,EAAI8e,MAAMhf,GACtFmE,EAAMktF,EAAUr0E,YAAY,GAC5B4N,EAAM,EAAGC,EAAM,EAAG7kC,EAAM/O,EAAKktB,EAAI5xC,QACrC,IAAK,IAAI+a,KAAK62B,EACVymB,GAAOymE,EAAUtyE,MAAMzxC,GAAK+jH,EAAUtyE,MAAM,GAC5C8L,GAAOwmE,EAAUryE,MAAM1xC,GAAK+jH,EAAUryE,MAAM,GAEhD4L,GAAO5kC,EACP6kC,GAAO7kC,EACP,IAAIpO,EAAMtN,KAAKue,MAAM8hC,EAAKD,GAAM7yC,EAAMvN,KAAKue,MAAMgiC,EAAKD,GACtDpL,GAAUsL,eAAeumE,EAAWz5G,EAAMC,GACxB,GAAdssB,EAAI5xC,QACJitD,GAAUuL,kBAAkBsmE,EAAWnxF,EAAI6e,MAAMk3E,GAAc5E,EAAUtyE,MAAM5a,EAAI,IAAKjE,EAAI8e,MAAMi3E,GAAc5E,EAAUryE,MAAM7a,EAAI,KACpIktF,EAAUvyE,WAAW,EAAG5e,EAAI6e,MAAM/e,GAAME,EAAI8e,MAAMhf,KAGlDwf,GAAUuL,kBAAkBsmE,EAAWnxF,EAAI6e,MAAM/e,GAAOqxF,EAAUtyE,MAAM,GAAI7e,EAAI8e,MAAMhf,GAAOqxF,EAAUryE,MAAM,IAEjH,IAAK,IAAIz7C,KAAK8tH,EAAU3rE,aAAa,GAAI,CACrC,IAAIp4C,EAAI+jH,EAAUjiE,UAAU7rD,EAAG,GAC3B8tH,EAAUrhF,cAAc1iC,IAAMqjC,GAASC,mBAE3CygF,EAAUrwE,iBAAiB1zC,EAAGhD,KAAKC,IAAI,EAAG8mH,EAAUtkE,cAAcz/C,IACtE,CACA+jH,EAAUxwE,mBAAmB,EACjC,EEz+BG,MAAMq1E,GACT,WAAArlI,CAAY4jB,EAAS,MACjB9gB,KAAKwiI,gBAAkB,GACvBxiI,KAAKyiI,gBAAkB,GACvBziI,KAAK0iI,aAAe,EACpB1iI,KAAK2iI,cAAgB,EACrB3iI,KAAK4iI,iBAAmB,GACxB5iI,KAAK6iI,iBAAmB,EACxB7iI,KAAK8iI,UAAY,GACjB9iI,KAAKo+C,MAAQ,SACbp+C,KAAK+iI,eAAgB,EACrB/iI,KAAKylC,OAAS,KACdzlC,KAAKgjI,cAAgB,KACrBhjI,KAAKijI,cAAgB,KACrBjjI,KAAK8gB,OAASI,GAAUJ,GACxB,GAAiB,SA5BN,wMA6Bf,CACA,OAAAoiH,CAAQ3iI,GACJP,KAAKgjI,cAAgBziI,CACzB,CACA,OAAA4iI,CAAQ5iI,GACJP,KAAKijI,cAAgB1iI,CACzB,CACA,IAAAgmB,GACIye,KACA,IAAIO,EAAOvlC,KAAK8gB,QAAU,GAAI6c,SAAS4H,MACvCA,EAAK/E,SAAS,gBACd,IAAI4iG,EAAKpjI,KAAKqjI,qBAAuB,GAAI,UAAUpkG,SAASsG,GAC5D69F,EAAGtgH,IAAI,CAAE,SAAY,UACrBsgH,EAAGtgH,IAAI,CAAE,KAAQ,IAAK,MAAS,IAAK,IAAO,IAAK,OAAU,MAC1DsgH,EAAGtgH,IAAI,CAAE,mBAAoB,QAAS,QAAW,KACjDsgH,EAAG1gG,SAAQ,IAAM1iC,KAAKsjI,UACtB,IAAIvgC,EAAK/iG,KAAKujI,qBAAuB,GAAI,UAAUtkG,SAASsG,GAC5Dw9D,EAAGjgF,IAAI,CAAE,SAAY,UACrBigF,EAAGjgF,IAAI,CAAE,KAAQ,IAAK,MAAS,IAAK,IAAO,IAAK,OAAU,MACtD9iB,KAAKylC,OAAS,IACd29F,EAAGpjG,OAAO,UAAWhgC,KAAKylC,QAC1Bs9D,EAAG/iE,OAAO,UAAWhgC,KAAKylC,OAAS,IAEvC,IAAI8mD,EAAKvsF,KAAKwjI,iBAAmB,GAAI,6BAA6BvkG,SAAS8jE,GAC3ExW,EAAGzpE,IAAI,CAAE,YAAa9iB,KAAKwiI,gBAAkB,MACzCxiI,KAAK0iI,aAAe,EACpBn2C,EAAGzpE,IAAI,CAAE,YAAa9iB,KAAK0iI,aAAe,OACb,MAAxB1iI,KAAKyiI,iBACVl2C,EAAGzpE,IAAI,CAAE,YAAa9iB,KAAKyiI,gBAAkB,MAC7CziI,KAAK2iI,cAAgB,EACrBp2C,EAAGzpE,IAAI,CAAE,aAAc9iB,KAAK2iI,cAAgB,OACvC3iI,KAAK6iI,iBAAmB,GAC7Bt2C,EAAGzpE,IAAI,CAAE,aAAc9iB,KAAK6iI,iBAAmB,OACnDt2C,EAAGzpE,IAAI,CAAE,mBAAoB,QAAS,gBAAiB,MAAO,OAAU,oBACxEypE,EAAGzpE,IAAI,CAAE,SAAY,aACrBypE,EAAGzpE,IAAI,CAAE,KAAS,GAAK,GAAM9iB,KAAKwiI,gBAAmB,MACrDj2C,EAAGzpE,IAAI,CAAE,IAAO9iB,KAAK8iI,UAAY,OACjCv2C,EAAGzpE,IAAI,CAAE,aAAc9iB,KAAK4iI,iBAAmB,MAC/C,IAAIa,EAAW,GAAI,UAAUxkG,SAASstD,GAAIzpE,IAAI,CAAE,QAAW,SAC3D2gH,EAAS3gH,IAAI,CAAE,iBAAkB,SAAU,cAAe,YACtD9iB,KAAK2iI,cAAgB,EACrBc,EAAS3gH,IAAI,CAAE,aAAc9iB,KAAK2iI,cAAgB,OAC7C3iI,KAAK6iI,iBAAmB,GAC7BY,EAAS3gH,IAAI,CAAE,aAAc9iB,KAAK6iI,iBAAmB,OACzD,IAAIa,EAAO1jI,KAAK2jI,SAAW,GAAI,UAAU1kG,SAASwkG,GAClDC,EAAK5gH,IAAI,CAAE,cAAe,IAAK,YAAa,MAC5C4gH,EAAK5gH,IAAI,CAAE,OAAU,IAAK,QAAW,MACrC4gH,EAAK5gH,IAAI,CAAE,mBAAoB,YAC/B4gH,EAAK5gH,IAAI,CAAE,mBAAoB,uDAC/B4gH,EAAK5gH,IAAI,CAAE,gBAAiB,sBAC5B4gH,EAAK5gH,IAAI,CAAE,gBAAiB,gBAC5B,IAAI8gH,EAAO,GAAI,UAAU3kG,SAASwkG,GAAU3gH,IAAI,CAAE,MAAS,SAC3D8gH,EAAK9gH,IAAI,CAAE,cAAe,IAAK,YAAa,MACxC9iB,KAAK+iI,eACLa,EAAK9gH,IAAI,CAAE,aAAc,SAC7B9iB,KAAK6jI,QAAU,GAAI,UAAU5kG,SAAS2kG,GAAM9gH,IAAI,CAAE,QAAW,UAC7D,IAAIghH,EAAW,GAAI,YAAY7kG,SAASykG,GAAOp+E,EAAK,GAAI,SAASrmB,SAAS6kG,GAC1EA,EAAS9iH,KAAK,CAAE,MAAS,SACzB,IAAI+iH,EAAU,GAAI,yBAAyB9kG,SAASqmB,GAAIxiC,IAAI,CAAE,QAAW,UAC/D,GAAI,WAAWmc,SAAS8kG,GAASjhH,IAAI,CAAE,YAAa,QAAS,cAAe,QAClF8Z,QAAQ58B,KAAKo+C,OACjB,IAAI4lF,EAAYhkI,KAAKikI,gBAAkB,GAAI,uCAAuChlG,SAASqmB,GAAIxiC,IAAI,CAAE,QAAW,UAChH9iB,KAAKkkI,SAAW,GAAI,gEAAgEjlG,SAAS+kG,GAC7FhkI,KAAKkkI,SAASxhG,SAAQ,IAAM1iC,KAAKsjI,UACjCtjI,KAAKg5H,WACLh5H,KAAKmkI,iBACDnkI,KAAKijI,eACLjjI,KAAKijI,cAAcjjI,KAC3B,CACA,KAAAsjI,GACIt+F,KACAhlC,KAAKqjI,qBAAqB7hI,SAC1BxB,KAAKujI,qBAAqB/hI,UACfxB,KAAK8gB,QAAU,GAAI6c,SAAS4H,OAClC1E,YAAY,gBACb7gC,KAAKgjI,eACLhjI,KAAKgjI,cAAchjI,KAC3B,CACA,IAAAwlF,GACIxlF,KAAKmkI,gBACT,CACA,OAAAC,GAAY,OAAOpkI,KAAK6jI,OAAS,CACjC,UAAAQ,GAAe,OAAOrkI,KAAKikI,eAAiB,CAC5C,QAAAjL,GACIh5H,KAAKokI,UAAUxnG,QAAQ,oBAC3B,CACA,cAAAunG,GACI,IAAIG,EAAO1+G,OAAOmgB,WAAYw+F,EAAOvkI,KAAKwjI,iBAAiB9jI,QAC3DM,KAAKwjI,iBAAiB1gH,IAAI,CAAE,KAAS,IAAOwhH,EAAOC,GAAS,MAChE,ECxHG,MAAMC,GACT,WAAAtnI,CAAYi9F,EAASC,EAASvwD,GAC1B7pC,KAAKm6F,QAAUA,EACfn6F,KAAKo6F,QAAUA,EACfp6F,KAAK6pC,WAAaA,EAClB7pC,KAAKuhG,SAAW,EAAI13D,CACxB,CACA,KAAA9qB,GAAU,OAAO/e,KAAK6pC,UAAY,CAClC,MAAAg1C,CAAO/xD,GAAM,OAAOA,EAAK9sB,KAAK6pC,WAAa7pC,KAAKm6F,OAAS,CACzD,MAAArb,CAAO/xD,GAAM,OAAOA,GAAM/sB,KAAK6pC,WAAa7pC,KAAKo6F,OAAS,CAC1D,MAAA+iC,CAAOp2G,GAAM,OAAQA,EAAK/mB,KAAKm6F,SAAWn6F,KAAKuhG,QAAU,CACzD,MAAA67B,CAAOp2G,GAAM,OAAQA,EAAKhnB,KAAKo6F,UAAYp6F,KAAKuhG,QAAU,CAC1D,KAAA9iB,GAAU,OAAO,CAAO,CACxB,WAAAnD,CAAY96D,EAAKupB,GAAY,OAAOgwC,GAASpoE,KAAK2pE,YAAY96D,EAAKupB,EAAW,ECJ3E,MAAM06F,GACT,SAAAC,CAAUC,EAAQC,GAAS,OAAO,CAAO,CACzC,UAAAC,CAAWD,GAAS,OAAO,CAAO,EAE/B,MAAME,GACT,WAAA5nI,GACI8C,KAAK+kI,SAAW,CAAC,IAAIN,GACzB,CACA,WAAAO,CAAY39H,GACRrH,KAAK+kI,SAASvoI,KAAK6K,EACvB,CACA,UAAA49H,GACIjlI,KAAK+kI,SAASj3H,KAClB,CACA,cAAAo3H,GACI,OAAO,EAAI7tH,KAAKrX,KAAK+kI,SACzB,CACA,WAAAI,CAAYR,GACJ3kI,KAAKklI,iBAAiBR,UAAUC,EAAQ3kI,OAE5C29B,SAASynG,YAAYT,EAAS,MAAQ,OAC1C,CACA,YAAAU,GACQrlI,KAAKklI,iBAAiBL,WAAW7kI,OAErC29B,SAASynG,YAAY,QACzB,CACA,SAAA7kF,GAAc,OAAO,IAAM,CAC3B,SAAAa,CAAU5gC,GAAO,CACjB,QAAA8kH,CAASC,GAAQ,CACjB,UAAAC,GAAe,OAAO,CAAO,CAC7B,OAAAjmG,CAAQ/B,GAAQ,CAChB,YAAA87F,GAAiB,OAAO,CAAO,CAC/B,cAAAmM,CAAejlH,EAAK3X,GAAM,ECvCvB,MAAM68H,WAAmB7+F,GAC5B,WAAA3pC,CAAYuN,EAASypH,GAAa,GAW9B,GAVAxpH,QACA1K,KAAKyK,QAAUA,EACfzK,KAAKk0H,WAAaA,EAClBl0H,KAAKqpC,QAAU,EACfrpC,KAAK2lI,YAAa,EAClB3lI,KAAK8b,QAAU,EACf9b,KAAK4lI,OAAS,EACd5lI,KAAK6lI,UAAY,GACjB7lI,KAAK8lI,QAAU,GACf9lI,KAAK+lI,eAAiB,KACA,GAAlBt7H,EAAQ7L,OACR,KAAM,+DACLylC,GAAa,WACd,GAAiB,SAAUrkC,KAAKgmI,aACxC,CACA,gBAAAC,GACI,OAAOjmI,KAAK4lI,MAChB,CACA,gBAAAM,GACI,OAAOlmI,KAAKyK,QAAQzK,KAAK4lI,OAC7B,CACA,gBAAAO,CAAiBtwH,GACb,OAAO7V,KAAK8lI,QAAQjwH,GAAKsL,EAC7B,CACA,QAAAilH,CAAS7lI,GACLP,KAAK+lI,eAAiBxlI,CAC1B,CACA,MAAA0mC,CAAOnmB,GACHpW,MAAMu8B,OAAOnmB,GACb9gB,KAAK8mC,WAAWhkB,IAAI,CAAE,QAAW,QAAS,iBAAkB,UAC5D9iB,KAAK6lI,UAAY,GACjB7lI,KAAK8lI,QAAU,GACf,IAAIO,EAAQ,GAAI,qCAAqCpnG,SAASj/B,KAAK8mC,YAC/Dwe,EAAKtlD,KAAKk0H,WAAa,KAAO,GAAI,SAASj1F,SAASonG,GACxD,IAAK,IAAIv2H,EAAI,EAAGA,EAAI9P,KAAKyK,QAAQ7L,OAAQkR,IAAK,EACtC9P,KAAKk0H,YAAel0H,KAAK8b,QAAU,GAAKhM,EAAI,GAAKA,EAAI9P,KAAK8b,SAAW,KACrEwpC,EAAK,GAAI,SAASrmB,SAASonG,IAC/B,IAAIC,EAAK,GAAI,iCAAiCrnG,SAASqmB,GACnD3f,EAAM,GAAI,6BAA6B1G,SAASqnG,GACpD3gG,EAAI7iB,IAAI,CAAE,QAAW,GAAG9iB,KAAKqpC,cAC7B1D,EAAIjD,SAAQ,IAAM1iC,KAAKumI,YAAYz2H,KACnC9P,KAAK6lI,UAAUrpI,KAAKmpC,GAChB3lC,KAAKk0H,aACLoS,EAAK,GAAI,yCAAyCrnG,SAASqmB,GAC3DtlD,KAAK8lI,QAAQtpI,KAAK8pI,GAE1B,CACAtmI,KAAKwmI,eACT,CACA,WAAAD,CAAY1wH,GACJA,GAAO7V,KAAK4lI,SAEhB5lI,KAAKymI,iBAAiB5wH,GAClB7V,KAAK+lI,gBACL/lI,KAAK+lI,eAAelwH,EAAK7V,MACjC,CACA,gBAAAymI,CAAiB5wH,GACT7V,KAAK4lI,QAAU/vH,IAEnB7V,KAAK4lI,OAAS/vH,EACd7V,KAAKwmI,gBACT,CACA,gBAAAE,CAAiB3pI,GACb,IAAI8Y,EAAM7V,KAAKyK,QAAQ+P,QAAQzd,GAC3B8Y,GAAO,GACP7V,KAAKymI,iBAAiB5wH,EAC9B,CACA,aAAA2wH,GACI,IAAK,IAAI12H,EAAI,EAAGA,EAAI9P,KAAKyK,QAAQ7L,QAAUkR,EAAI9P,KAAK6lI,UAAUjnI,OAAQkR,IAAK,CACvE,IAAI61B,EAAM3lC,KAAK6lI,UAAU/1H,GACrBsgE,EAAMpwE,KAAKyK,QAAQqF,GACL,GAAdsgE,EAAIxxE,QAAekR,GAAK9P,KAAK4lI,OAC7BjgG,EAAI/I,QAAQ,OACO,GAAdwzC,EAAIxxE,OACT+mC,EAAI/I,QAAQ,OACP58B,KAAK2lI,WACVhgG,EAAIpG,QAAQ6wC,GAEZzqC,EAAI/I,QAAQwzC,GAChBzqC,EAAI9E,YAAY,6CACZ/wB,GAAK9P,KAAK4lI,OACVjgG,EAAInF,SAAS,yBAEbmF,EAAInF,SAAS,sBACrB,CACJ,CACA,UAAAwlG,GACmBxkH,EAAWiiB,GAAMK,UAAhC,IAA2CC,EAAgBviB,EAAWiiB,GAAMM,eAAgBC,EAAgBxiB,EAAWiiB,GAAMO,eAE7H,OADgBxiB,EAAWiiB,GAAMQ,WAC1B,ybAgB0CF,MAAkBC,qhBAjBLxiB,EAAWiiB,GAAMS,oBAAkC1iB,EAAWiiB,GAAMU,6XAqDtI,EC/IG,MAAMwiG,WAAe9/F,GACxB,WAAA3pC,CAAYuN,GACRC,QACA1K,KAAKyK,QAAUA,EACfzK,KAAK4mI,aAAc,EACnB5mI,KAAK4lI,OAAS,EACd5lI,KAAK6lI,UAAY,GACjB7lI,KAAK6mI,SAAW,GAChB7mI,KAAKqpC,QAAU,EACfrpC,KAAK+lI,eAAiB,KACjB1hG,GAAa,WACd,GAAiB,SAAUrkC,KAAKgmI,aACxC,CACA,QAAAI,CAAS7lI,GACLP,KAAK+lI,eAAiBxlI,CAC1B,CACA,gBAAA0lI,GACI,OAAOjmI,KAAK4lI,MAChB,CACA,gBAAAM,GACI,OAAOlmI,KAAKyK,QAAQzK,KAAK4lI,OAC7B,CACA,WAAAkB,CAAYC,GACR,IAAIlxH,EAA0B,iBAAbkxH,EAAwBA,EAAY/mI,KAAKyK,QAAQ+P,QAAQusH,GAC1E,OAAIlxH,EAAM,EACC,KACJ7V,KAAK6mI,SAAShxH,EACzB,CACA,MAAAoxB,CAAOnmB,GACHpW,MAAMu8B,OAAOnmB,GACb,IAAIkmH,EAAO,GAAI,UAAU/nG,SAASj/B,KAAK8mC,YAAYhkB,IAAI,CAAE,QAAW,SACpEkkH,EAAKlkH,IAAI,CAAE,cAAe,SAAU,kBAAmB,QAAS,eAAgB,UAChF,IAAImkH,EAAU,eACd,IAAK,IAAIn3H,EAAI,EAAGA,EAAI9P,KAAKyK,QAAQ7L,OAAQkR,IACrCm3H,GAAW,OAASn3H,EAAI,UAC5Bm3H,GAAW,mBACXD,EAAKlkH,IAAI,CAAE,wBAAyBmkH,IACpC,IAAIC,EAAY,GAAI,UAAUjoG,SAAS+nG,GACvCE,EAAUpkH,IAAI,CAAE,cAAe,cAAe,WAAY,IAAK,OAAU,SACzEokH,EAAUpkH,IAAI,CAAE,gBAAiB,sBACjC,IAAK,IAAIhT,EAAI,EAAGA,EAAI9P,KAAKyK,QAAQ7L,OAAQkR,IAAK,CAC1C,IAAIujF,EAAU,GAAI,kCAAkCp0D,SAAS+nG,GAC7D3zC,EAAQvwE,IAAI,CAAE,cAAe,MAAQhT,EAAG,WAAY,MACpD,IAAI0nH,EAAM,GAAI,6BAA6Bv4F,SAASo0D,GACpDmkC,EAAI10G,IAAI,CAAE,QAAW,GAAG9iB,KAAKqpC,cAC7BmuF,EAAI90F,SAAQ,IAAM1iC,KAAKumI,YAAYz2H,KACnC9P,KAAK6lI,UAAUrpI,KAAKg7H,GACpB,IAAI2P,EAAQ,GAAI,UAAUloG,SAAS+nG,GACnCG,EAAMrkH,IAAI,CAAE,cAAe,cAAe,WAAY,MACtDqkH,EAAMrkH,IAAI,CAAE,aAAc,QAAS,eAAgB,SAAU,MAAS,SACtE9iB,KAAK6mI,SAASrqI,KAAK2qI,EACvB,CACAnnI,KAAKwmI,eACT,CACA,WAAAD,CAAY1wH,GACJA,GAAO7V,KAAK4lI,SAEhB5lI,KAAKymI,iBAAiB5wH,GAClB7V,KAAK+lI,gBACL/lI,KAAK+lI,eAAelwH,EAAK7V,MACjC,CACA,gBAAAymI,CAAiB5wH,GACb,GAAI7V,KAAK4lI,QAAU/vH,EACf,OACJ7V,KAAK4lI,OAAS/vH,EACd,IAAI8M,EAAM3iB,KAAK8mC,WACfnkB,EAAIqd,OAAO,YAAa,GAAGrd,EAAIjjB,aAC/BM,KAAKwmI,eACT,CACA,gBAAAE,CAAiB3pI,GACb,IAAI8Y,EAAM7V,KAAKyK,QAAQ+P,QAAQzd,GAC3B8Y,GAAO,GACP7V,KAAKymI,iBAAiB5wH,EAC9B,CACA,cAAAuxH,CAAe3+D,GACXzoE,KAAKymI,kBAAkBzmI,KAAK4lI,OAASn9D,EAAMzoE,KAAKyK,QAAQ7L,QAAUoB,KAAKyK,QAAQ7L,OACnF,CACA,aAAA4nI,GACI,IAAK,IAAI12H,EAAI,EAAGA,EAAI9P,KAAKyK,QAAQ7L,QAAUkR,EAAI9P,KAAK6lI,UAAUjnI,OAAQkR,IAAK,CACvE,IAAI61B,EAAM3lC,KAAK6lI,UAAU/1H,GACrBsgE,EAAMpwE,KAAKyK,QAAQqF,GACL,GAAdsgE,EAAIxxE,QAAekR,GAAK9P,KAAK4lI,OAC7BjgG,EAAI/I,QAAQ,OACO,GAAdwzC,EAAIxxE,OACT+mC,EAAI/I,QAAQ,OAEZ+I,EAAI/I,QAAQwzC,GAChBzqC,EAAI9E,YAAY,6CACZ/wB,GAAK9P,KAAK4lI,OACVjgG,EAAInF,SAAS,yBAEbmF,EAAInF,SAAS,uBACbxgC,KAAK4mI,YACL5mI,KAAK6mI,SAAS/2H,GAAGkwB,OAAO,aAAclwB,GAAK9P,KAAK4lI,OAAS,UAAY,UAErE5lI,KAAK6mI,SAAS/2H,GAAGkwB,OAAO,UAAWlwB,GAAK9P,KAAK4lI,OAAS,QAAU,OACxE,CACJ,CACA,UAAAI,GACmBxkH,EAAWiiB,GAAMK,UAAhC,IAA2CC,EAAgBviB,EAAWiiB,GAAMM,eAAgBC,EAAgBxiB,EAAWiiB,GAAMO,eAE7H,OADgBxiB,EAAWiiB,GAAMQ,WAC1B,6bAgB0CF,MAAkBC,qhBAjBLxiB,EAAWiiB,GAAMS,oBAAkC1iB,EAAWiiB,GAAMU,yYAqDtI,EC1JG,MAAMkjG,WAA0BxgG,GACnC,WAAA3pC,CAAYoqI,GACR58H,QACA1K,KAAKsnI,OAASA,CAClB,CACA,MAAArgG,CAAOnmB,GACHpW,MAAMu8B,OAAOnmB,GACb9gB,KAAKunI,UAAY,GAAI,UAAUtoG,SAASj/B,KAAK8mC,YAC7C9mC,KAAKwnI,YACL,IAAIC,EAAa,GAAI,UAAUxoG,SAASj/B,KAAK8mC,YAAYhkB,IAAI,CAAE,aAAc,WAC9D,GAAI,gEAAgEmc,SAASwoG,GACnF/kG,SAAQ,KACb1iC,KAAKsnI,OAAO9qI,KAAKwgD,GAASo3B,cAC1Bp0E,KAAKwnI,WAAW,IAED,GAAI,oEAAoEvoG,SAASwoG,GAAY3kH,IAAI,CAAE,cAAe,UACxH4f,SAAQ,KACjB1iC,KAAKsnI,OAAO9qI,KAAKwgD,GAASq3B,kBAC1Br0E,KAAKwnI,WAAW,GAExB,CACA,cAAAE,GACI,IAAIp1F,EAAQ,GACZ,IAAK,IAAIq1F,KAAS3nI,KAAKsnI,QACdK,EAAMjnH,WAAWs8B,GAASq3B,mBAAqBszD,EAAM/oI,OAAS,GAC/D0zC,EAAM91C,KAAKmrI,GACnB,OAAOr1F,CACX,CACA,kBAAAs1F,GACI,IAAI90D,EAAY,GAChB,IAAK,IAAI60D,KAAS3nI,KAAKsnI,OACfK,EAAMjnH,WAAWs8B,GAASq3B,mBAAqBszD,EAAM/oI,OAAS,GAC9Dk0E,EAAUt2E,KAAKmrI,GACvB,OAAO70D,CACX,CACA,SAAA00D,GAEI,GADAxnI,KAAKunI,UAAUloG,QACW,GAAtBr/B,KAAKsnI,OAAO1oI,OACZ,OACJ,IAAIynI,EAAQ,GAAI,YAAYpnG,SAASj/B,KAAKunI,WAAWzkH,IAAI,CAAE,MAAS,SAChEwiC,EAAK,GAAI,SAASrmB,SAASonG,GAC/B,GAAI,SAASpnG,SAASqmB,GAAIxiC,IAAI,CAAE,aAAc,QAAS,cAAe,OAAQ,kBAAmB,cAAe8Z,QAAQ,QACxH,GAAI,SAASqC,SAASqmB,GAAIxiC,IAAI,CAAE,cAAe,OAAQ,kBAAmB,cAAe8Z,QAAQ,SACjG,IAAK,IAAI9sB,EAAI,EAAGA,EAAI9P,KAAKsnI,OAAO1oI,OAAQkR,IAAK,CACzC,IAAI+3H,EAAU,IAAKC,EAAW,GAC1B9nI,KAAKsnI,OAAOx3H,GAAGlR,OAAS,IACxBipI,EAAU7nI,KAAKsnI,OAAOx3H,GAAGgC,OAAO,GAChCg2H,EAAW9nI,KAAKsnI,OAAOx3H,GAAG6Q,UAAU,IAExC2kC,EAAK,GAAI,SAASrmB,SAASonG,GAC3B,IAAI0B,EAAS,GAAI,SAAS9oG,SAASqmB,GAAIxiC,IAAI,CAAE,aAAc,UAAYklH,EAAU,GAAI,SAAS/oG,SAASqmB,GAAK2iF,EAAW,GAAI,SAAShpG,SAASqmB,GAC7I,GAAI,WAAWrmB,SAAS8oG,GAAQjlH,IAAI,CAAE,QAAW,QAAS,OAAU,kBAAmB,mBAAoB,YAAa8Z,QAAQirG,GAChI,IAAI78H,EAAQ,GAAI,sBAAsBi0B,SAAS+oG,GAASllH,IAAI,CAAE,MAAS,OAAQ,KAAQ,YACvF9X,EAAM40B,SAASkoG,GACf98H,EAAMo4B,SAAQ,KAAQpjC,KAAKsnI,OAAOx3H,GAAK+3H,EAAU78H,EAAM20B,UAAU,IACjD,GAAI,6EAAoFV,SAASgpG,GAAUnlH,IAAI,CAAE,cAAe,UACtI4f,SAAQ,KACd1iC,KAAKsnI,OAAOh6H,OAAOwC,EAAG,GACtB9P,KAAKwnI,WAAW,GAExB,CACJ,GNxDJ,SAAWxN,GACPA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,MAChD,CAHD,CAGGA,KAAmBA,GAAiB,CAAC,IAExC,SAAWC,GACPA,EAAkBA,EAA4B,SAAI,GAAK,WACvDA,EAAkBA,EAAwB,KAAI,GAAK,OACnDA,EAAkBA,EAA2B,QAAI,GAAK,SACzD,CAJD,CAIGA,KAAsBA,GAAoB,CAAC,IACvC,MAAMiO,WAAmBrhG,GAC5B,WAAA3pC,CAAYa,EAAMwuC,EAAK12B,GAYnB,GAXAnL,QACA1K,KAAKjC,KAAOA,EACZiC,KAAKusC,IAAMA,EACXvsC,KAAK6V,IAAMA,EACX7V,KAAKymC,KAAO,GACZzmC,KAAK0mC,KAAO,GACZ1mC,KAAKmoI,MAAQ,GACbnoI,KAAKooI,MAAQ,GACbpoI,KAAKqoI,MAAQ,GACbroI,KAAKsoI,MAAQ,GACbtoI,KAAKuoI,QAAU,KACXxqI,GAAQi8H,GAAezyD,KAAM,CAC7B,MAAM70B,EAAO78B,EACb,IAAI26B,EAAMjE,EAAI8c,YAAY3W,GAC1B1yC,KAAKwoI,WAAa,CAAC91F,KAASlC,GAC5B,IAAK,IAAI5gC,KAAK28B,EAAIwlB,aAAarf,GAC3B1yC,KAAKmoI,MAAM3rI,KAAK,GAChBwD,KAAKooI,MAAM5rI,KAAKwD,KAAKwoI,WAAWhuH,QAAQ+xB,EAAIkvB,UAAU7rD,EAAG8iC,KAE7D,IAAIvuB,EAAQ,GACZ,IAAK,IAAIxK,KAAK62B,EACVrsB,EAAM3nB,KAAKma,KAAKue,QAAQqX,EAAI8e,MAAM1xC,GAAK4yB,EAAI8e,MAAM3Y,IAAQnG,EAAI6e,MAAMzxC,GAAK4yB,EAAI6e,MAAM1Y,KACtF,IAAI+P,EAAQ,EAAIhpC,QAAQ0K,GACxB,IAAK,IAAIrU,EAAI,EAAGA,EAAI2yC,EAAM7jD,OAAQkR,IAC9B9P,KAAKqoI,MAAM7rI,KAAKimD,EAAM3yC,GAAK,GAC3B9P,KAAKsoI,MAAM9rI,KAAKimD,EAAM3yC,EAAI2yC,EAAM7jD,OAAS,EAAIkR,EAAI,EAAI,GAAK,GAE9D9P,KAAKyoI,SAAW,CAAE1qI,KAAMk8H,GAAkByO,SAAU7yH,IAAK,EAC7D,KACK,CACD,MAAMi0C,EAAOj0C,EACb,IAAIkoC,EAAKxR,EAAII,SAASmd,GAAO9L,EAAKzR,EAAIM,OAAOid,GAC7C9pD,KAAKwoI,WAAa,IAAIj8F,EAAI8c,YAAYtL,MAAQxR,EAAI8c,YAAYrL,IAC9D,IAAI1xB,EAAO,CAACyxB,EAAIC,KACZh+C,KAAKmoI,MAAM3rI,KAAKwD,KAAKwoI,WAAWhuH,QAAQujC,IACxC/9C,KAAKooI,MAAM5rI,KAAKwD,KAAKwoI,WAAWhuH,QAAQwjC,GAAI,EAEhD1xB,EAAKyxB,EAAIC,GACT,IAAK,IAAIrkC,KAAK4yB,EAAI8c,YAAYtL,GACtBpkC,GAAKqkC,GACL1xB,EAAKyxB,EAAIpkC,GACjB,IAAK,IAAIA,KAAK4yB,EAAI8c,YAAYrL,GACtBrkC,GAAKokC,GACLzxB,EAAK0xB,EAAIrkC,GACjB3Z,KAAKyoI,SAAW,CAAE1qI,KAAMk8H,GAAkB0O,KAAM9yH,IAAK,EACzD,CACJ,CACA,MAAAoxB,CAAOnmB,GACHpW,MAAMu8B,OAAOnmB,GACb,IAAI2iH,EAAW,GAAI,UAAUxkG,SAASj/B,KAAK8mC,YAAYhkB,IAAI,CAAE,aAAc,WAC3E9iB,KAAK4oI,WAAa,GAAI,UAAU3pG,SAASwkG,GAAU3gH,IAAI,CAAE,QAAW,iBACpE9iB,KAAK8mC,WAAWpE,SAASp7B,GAAUtH,KAAK4nG,WAAW,EAAYtgG,EAAOtH,KAAK4oI,eAC3E5oI,KAAK8mC,WAAW7D,aAAa37B,GAAUtH,KAAKmoG,UAAU,EAAY7gG,EAAOtH,KAAK4oI,eAC9E5oI,KAAKunG,QACT,CACA,cAAAshC,CAAetiB,GACX,MAAM50E,EAAQ3xC,KAAKwoI,WACnB,OAAIjiB,EAAIxoH,MAAQk8H,GAAkByO,SACvB,CAAC/2F,EAAM40E,EAAI1wG,MAClB0wG,EAAIxoH,MAAQk8H,GAAkB0O,KACvB,CAACh3F,EAAM3xC,KAAKmoI,MAAM5hB,EAAI1wG,MAAO87B,EAAM3xC,KAAKooI,MAAM7hB,EAAI1wG,OACzD0wG,EAAIxoH,MAAQk8H,GAAkB6O,QACvB,CAACn3F,EAAM,GAAIA,EAAM3xC,KAAKqoI,MAAM9hB,EAAI1wG,MAAO87B,EAAM3xC,KAAKsoI,MAAM/hB,EAAI1wG,OAChE,IACX,CACA,MAAA0xF,GACIvnG,KAAK4oI,WAAWvpG,QAEhBr/B,KAAKymC,KAAO,GACZzmC,KAAK0mC,KAAO,GACZ,MAAMqiG,EAAU,IAChB,IAAK,IAAIpvH,KAAK3Z,KAAKwoI,WACfxoI,KAAKymC,KAAKjqC,KAAKwD,KAAKusC,IAAI6e,MAAMzxC,IAC9B3Z,KAAK0mC,KAAKlqC,KAAKwD,KAAKusC,IAAI8e,MAAM1xC,IAElC,IAAIqvH,EAAM,EAAI1xH,IAAItX,KAAKymC,MAAQsiG,EAASj1C,EAAM,EAAIl9E,IAAI5W,KAAKymC,MAAQsiG,EAC/Dh1C,EAAM,EAAIz8E,IAAItX,KAAK0mC,MAAQqiG,EAAS/0C,EAAM,EAAIp9E,IAAI5W,KAAK0mC,MAAQqiG,EACnE/oI,KAAK+e,MAAQpI,KAAKW,IAAI,GAAIX,KAAKW,IAAI,KAAWw8E,EAAMk1C,GAAM,KAAWh1C,EAAMD,KAC3E,IAAI/wE,EAAK,IAXD,KAWa8wE,EAAMk1C,GAAOhpI,KAAK+e,OAAQkE,EAAK,IAXnC,KAW+C+wE,EAAMD,GAAO/zF,KAAK+e,OAClF,IAAK,IAAIjP,EAAI,EAAGA,EAAI9P,KAAKwoI,WAAW5pI,OAAQkR,IACxC9P,KAAKymC,KAAK32B,GAAKkT,GAAMhjB,KAAKymC,KAAK32B,GAAKk5H,GAAOhpI,KAAK+e,MAChD/e,KAAK0mC,KAAK52B,GAdG,KAcOmT,GAAMjjB,KAAK0mC,KAAK52B,GAAKikF,GAAO/zF,KAAK+e,OAEzD/e,KAAKipI,OAASF,EAAU/oI,KAAK+e,MAC7B,IAAImqH,EAAM,IAAIlvC,GACdkvC,EAAIzwG,QAlBI,IAAS,KAmBjB,IAAIsqE,EAAKt/D,GAAMG,WAAYw/F,EAAK3/F,GAAMI,WAAYslG,EAAW,MAAUC,EAAW,QAClF,IAAK,IAAIt5H,EAAI,EAAGA,EAAI9P,KAAKwoI,WAAW5pI,OAAQkR,IACpC9P,KAAKuoI,SAAWvoI,KAAKuoI,QAAQxqI,MAAQk8H,GAAkByO,UAAY1oI,KAAKuoI,QAAQ1yH,KAAO/F,EACvFo5H,EAAI1tC,SAASx7F,KAAKymC,KAAK32B,GAAI9P,KAAK0mC,KAAK52B,GAAI9P,KAAKipI,OAAQjpI,KAAKipI,OAAQlmC,EAAI,EAAGqgC,GACrEpjI,KAAKyoI,UAAYzoI,KAAKyoI,SAAS1qI,MAAQk8H,GAAkByO,UAAY1oI,KAAKyoI,SAAS5yH,KAAO/F,EAC/Fo5H,EAAI1tC,SAASx7F,KAAKymC,KAAK32B,GAAI9P,KAAK0mC,KAAK52B,GAAI9P,KAAKipI,OAAQjpI,KAAKipI,OAAQE,EAAU,EAAGC,GAEhFF,EAAI1tC,SAASx7F,KAAKymC,KAAK32B,GAAI9P,KAAK0mC,KAAK52B,GAAI9P,KAAKipI,OAAQjpI,KAAKipI,OAAQjvC,GAAWsB,SAAU,EAAGyH,GAEnG,IAAK,IAAIsmC,IAAW,CAAC,EAAG,EAAG,GACvB,IAAK,IAAIv5H,EAAI,EAAGA,EAAI9P,KAAKmoI,MAAMvpI,OAAQkR,IAAK,CACxC,IAAI6U,EAAK3kB,KAAKymC,KAAKzmC,KAAKmoI,MAAMr4H,IAAK8U,EAAK5kB,KAAK0mC,KAAK1mC,KAAKmoI,MAAMr4H,IACzD+U,EAAK7kB,KAAKymC,KAAKzmC,KAAKooI,MAAMt4H,IAAKgV,EAAK9kB,KAAK0mC,KAAK1mC,KAAKooI,MAAMt4H,IACzD9P,KAAKuoI,SAAWvoI,KAAKuoI,QAAQxqI,MAAQk8H,GAAkB0O,MAAQ3oI,KAAKuoI,QAAQ1yH,KAAO/F,EACpE,GAAXu5H,IACAH,EAAI7jH,SAASV,EAAIC,EAAIC,EAAIC,EAAIi+E,EAAiB,GAAb/iG,KAAK+e,MAAc,GACpDmqH,EAAI7jH,SAASV,EAAIC,EAAIC,EAAIC,EAAIs+G,EAAiB,GAAbpjI,KAAK+e,QAGrC/e,KAAKyoI,UAAYzoI,KAAKyoI,SAAS1qI,MAAQk8H,GAAkB0O,MAAQ3oI,KAAKyoI,SAAS5yH,KAAO/F,EAC5E,GAAXu5H,IACAH,EAAI7jH,SAASV,EAAIC,EAAIC,EAAIC,EAAIqkH,EAAuB,GAAbnpI,KAAK+e,MAAc,GAC1DmqH,EAAI7jH,SAASV,EAAIC,EAAIC,EAAIC,EAAIskH,EAAuB,GAAbppI,KAAK+e,QAIjC,GAAXsqH,GACAH,EAAI7jH,SAASV,EAAIC,EAAIC,EAAIC,EAAIi+E,EAAiB,GAAb/iG,KAAK+e,MAElD,CACJ,IAAK,IAAIjP,EAAI,EAAGA,EAAI9P,KAAKqoI,MAAMzpI,OAAQkR,IAAK,CACxC,IAMIiX,EAAIC,EAAIsiH,EANRp8G,EAAKltB,KAAKymC,KAAK,GAAItZ,EAAKntB,KAAK0mC,KAAK,GAClCq9D,EAAM,IAAO/jG,KAAKymC,KAAKzmC,KAAKqoI,MAAMv4H,IAAMod,GAAK82E,EAAM,IAAOhkG,KAAK0mC,KAAK1mC,KAAKqoI,MAAMv4H,IAAMqd,GACrF+2E,EAAM,IAAOlkG,KAAKymC,KAAKzmC,KAAKsoI,MAAMx4H,IAAMod,GAAKi3E,EAAM,IAAOnkG,KAAK0mC,KAAK1mC,KAAKsoI,MAAMx4H,IAAMqd,GACrFpI,EAAM,IAAOhC,EAAQghF,EAAKC,GAAOjhF,EAAQmhF,EAAKC,IAC9C5V,EAAS53E,KAAKue,MAAM8uE,EAAKD,GAAO,GAAKngF,EAAQ4qE,EAAS73E,KAAKue,MAAMivE,EAAKD,GAAO,GAAKtgF,EAAQi9F,EAAS78F,EAAUwqE,EAAQD,GACrHg7C,EAAMxkH,EAAMpO,KAAK2a,IAAIi9D,GAASi7C,EAAMzkH,EAAMpO,KAAK4a,IAAIg9D,GAASk7C,EAAM1kH,EAAMpO,KAAK2a,IAAIk9D,GAASk7C,EAAM3kH,EAAMpO,KAAK4a,IAAIi9D,GAEnH,GAAIqyB,EAAS,EAAG,CACZ,IAAKr5B,EAAKC,EAAKC,EAAKC,GAAO35D,EAAS4E,iBAAiB7N,EAAKwkH,EAAKC,EAAKC,EAAKC,GACzE3iH,EAAK,EAAIzmB,IAAI,CAACipI,EAAK/hD,EAAKE,EAAK+hD,GAAMv8G,GACnClG,EAAK,EAAI1mB,IAAI,CAACkpI,EAAK/hD,EAAKE,EAAK+hD,GAAMv8G,GACnCm8G,EAAK,EAAC,GAAO,GAAM,GAAM,EAC7B,KACK,CACD,IAAIK,EAASp7C,EAAS,IAAOsyB,EAASp9F,GAClCmmH,EAAM7kH,EAAMpO,KAAK2a,IAAIq4G,GAASE,EAAM9kH,EAAMpO,KAAK4a,IAAIo4G,IAClDniD,EAAKC,EAAKC,EAAKC,GAAO35D,EAAS4E,iBAAiB7N,EAAKwkH,EAAKC,EAAKI,EAAKC,IACpEC,EAAKC,EAAKC,EAAKC,GAAOj8G,EAAS4E,iBAAiB7N,EAAK6kH,EAAKC,EAAKJ,EAAKC,GACzE3iH,EAAK,EAAIzmB,IAAI,CAACipI,EAAK/hD,EAAKE,EAAKkiD,EAAKE,EAAKE,EAAKP,GAAMv8G,GAClDlG,EAAK,EAAI1mB,IAAI,CAACkpI,EAAK/hD,EAAKE,EAAKkiD,EAAKE,EAAKE,EAAKP,GAAMv8G,GAClDm8G,EAAK,EAAC,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,EAChD,CACItpI,KAAKuoI,SAAWvoI,KAAKuoI,QAAQxqI,MAAQk8H,GAAkB6O,SAAW9oI,KAAKuoI,QAAQ1yH,KAAO/F,GACtFo5H,EAAIztC,SAAS10E,EAAIC,EAAIsiH,GAAI,EAAOvmC,EAAiB,GAAb/iG,KAAK+e,MAAc,EAAGi7E,GAAWsB,UAAU,GAC/E4tC,EAAIztC,SAAS10E,EAAIC,EAAIsiH,GAAI,EAAOlG,EAAiB,GAAbpjI,KAAK+e,MAAai7E,GAAWsB,UAAU,IAEtEt7F,KAAKyoI,UAAYzoI,KAAKyoI,SAAS1qI,MAAQk8H,GAAkB6O,SAAW9oI,KAAKyoI,SAAS5yH,KAAO/F,GAC9Fo5H,EAAIztC,SAAS10E,EAAIC,EAAIsiH,GAAI,EAAOH,EAAuB,GAAbnpI,KAAK+e,MAAc,EAAGi7E,GAAWsB,UAAU,GACrF4tC,EAAIztC,SAAS10E,EAAIC,EAAIsiH,GAAI,EAAOF,EAAuB,GAAbppI,KAAK+e,MAAai7E,GAAWsB,UAAU,IAGjF4tC,EAAIztC,SAAS10E,EAAIC,EAAIsiH,GAAI,EAAOvmC,EAAiB,GAAb/iG,KAAK+e,MAAai7E,GAAWsB,UAAU,EACnF,CACAt7F,KAAK4oI,WAAWvpG,QACN,GAAI6pG,EAAI/pC,aAAalgE,SAASj/B,KAAK4oI,YAAY9lH,IAAI,CAAE,iBAAkB,QACrF,CACA,UAAA8kF,CAAWhiB,GAEP,GADAt+E,MAAMilG,kBACFvsG,KAAKjC,MAAQi8H,GAAexyD,KAC5B,OACJ,IAAI0iE,EAAQlqI,KAAKmqI,eAAevkD,EAAG,GAAIA,EAAG,IACrCskD,IAEAlqI,KAAKoqI,cAAcpqI,KAAKyoI,SAAUyB,KACnClqI,KAAKyoI,SAAWyB,EAChBlqI,KAAKuoI,QAAU,KACfvoI,KAAKunG,SACLvnG,KAAK+lI,eAAemE,IAE5B,CACA,SAAA/hC,CAAUviB,GACN,GAAI5lF,KAAKjC,MAAQi8H,GAAexyD,KAC5B,OACJ,IAAI0iE,EAAQlqI,KAAKmqI,eAAevkD,EAAG,GAAIA,EAAG,IACtCskD,GAASlqI,KAAKoqI,cAAcF,EAAOlqI,KAAKyoI,YACxCyB,EAAQ,MACPlqI,KAAKoqI,cAAcpqI,KAAKuoI,QAAS2B,KAClClqI,KAAKuoI,QAAU2B,EACflqI,KAAKunG,SAEb,CACA,cAAA4iC,CAAe3nH,EAAGE,GACd,IAAIwK,EAAKltB,KAAKymC,KAAK,GAAItZ,EAAKntB,KAAK0mC,KAAK,GACtC,GAAI3jB,EAAQP,EAAI0K,EAAIxK,EAAIyK,IAAOntB,KAAKipI,OAChC,MAAO,CAAElrI,KAAMk8H,GAAkByO,SAAU7yH,IAAK,GACpD,IAAIw0H,EAAS,EACb,IAAK,IAAIv6H,EAAI,EAAGA,EAAI9P,KAAKwoI,WAAW5pI,OAAQkR,IACxCu6H,EAAS1zH,KAAKC,IAAIyzH,EAAQtnH,EAAQ/iB,KAAKymC,KAAK32B,GAAKod,EAAIltB,KAAK0mC,KAAK52B,GAAKqd,GAAMntB,KAAKipI,QACnF,GAAIlmH,EAAQP,EAAI0K,EAAIxK,EAAIyK,GAAMk9G,EAC1B,OAAO,KACX,IAAIlmH,EAAQxN,KAAKue,MAAMxS,EAAIyK,EAAI3K,EAAI0K,GAC/Bo9G,EAAW,KAAMC,EAAahtI,OAAO4sB,kBACzC,IAAK,IAAIra,EAAI,EAAGA,EAAI9P,KAAKooI,MAAMxpI,OAAQkR,IAAK,CACxC,IAAI6gB,EAAQha,KAAKuF,IAAI8H,EAAUrN,KAAKue,MAAMl1B,KAAK0mC,KAAK1mC,KAAKooI,MAAMt4H,IAAMqd,EAAIntB,KAAKymC,KAAKzmC,KAAKooI,MAAMt4H,IAAMod,GAAK/I,IACrGwM,EAAQ,GAAK/M,GAAU+M,EAAQ45G,IAC/BD,EAAW,CAAEvsI,KAAMk8H,GAAkB0O,KAAM9yH,IAAK/F,GAChDy6H,EAAa55G,EAErB,CACA,IAAK,IAAI7gB,EAAI,EAAGA,EAAI9P,KAAKqoI,MAAMzpI,OAAQkR,IAAK,CACxC,IAAIy+E,EAAS53E,KAAKue,MAAMl1B,KAAK0mC,KAAK1mC,KAAKqoI,MAAMv4H,IAAMqd,EAAIntB,KAAKymC,KAAKzmC,KAAKqoI,MAAMv4H,IAAMod,GAE9Es9G,EAAWj8C,EAAS,GAAOvqE,EADlBrN,KAAKue,MAAMl1B,KAAK0mC,KAAK1mC,KAAKsoI,MAAMx4H,IAAMqd,EAAIntB,KAAKymC,KAAKzmC,KAAKsoI,MAAMx4H,IAAMod,GACjCqhE,GAC7C59D,EAAQha,KAAKuF,IAAI8H,EAAUwmH,EAAUrmH,IACrCwM,EAAQ45G,IACRD,EAAW,CAAEvsI,KAAMk8H,GAAkB6O,QAASjzH,IAAK/F,GACnDy6H,EAAa55G,EAErB,CACA,OAAO25G,CACX,CACA,aAAAF,CAAc9V,EAAME,GAChB,OAAY,MAARF,GAAwB,MAARE,GAER,MAARF,GAAwB,MAARE,GAEbF,EAAKv2H,MAAQy2H,EAAKz2H,MAAQu2H,EAAKz+G,KAAO2+G,EAAK3+G,GACtD,EOtOJ,MAAM40H,GAAmB,CACrB,EAAG,EACH,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACnD,EAAG,EACH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EACH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzBC,GAAmB,CACrB,EAAG,GACH,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAC1B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3D,EAAG,EACH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACvE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACrD,EAAG,EACH,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACvE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAqD1B,MAAMC,WAA4B9jG,GACrC,WAAA3pC,GACIwN,QACA1K,KAAK4qI,QAAU,GACf5qI,KAAK6qI,aAAe,GACpB,GAAiB,gBAxDC,g9BAyDtB,CACA,MAAA5jG,CAAOnmB,GACHpW,MAAMu8B,OAAOnmB,GACb,IAAIkmH,EAAO,GAAI,UAAU/nG,SAASj/B,KAAK8mC,YAAYhkB,IAAI,CAAE,QAAW,SACpEkkH,EAAKlkH,IAAI,CAAE,cAAe,SAAU,kBAAmB,QAAS,IAAO,QACvE,IAAInF,EAAM8sH,GAAiBpsI,KAAKqkB,GAAM/L,KAAK0tC,MAAM,EAAI3hC,GAAK,IACtDjB,EAAMipH,GAAiBrsI,KAAKmkB,GAAM7L,KAAK0tC,MAAM,EAAI7hC,GAAK,IACtDmtB,EAAMhyB,EAAI/e,OACd,IAAK,IAAIkR,EAAI,EAAGA,EAAI6/B,EAAK7/B,IAAK,CAC1B,IAAI61B,EAAM,GAAI,UAAU1G,SAAS+nG,GACjCrhG,EAAI7iB,IAAI,CAAE,WAAY,GAAGnF,EAAI7N,cAAe,cAAe,GAAG2R,EAAI3R,gBAClE61B,EAAInF,SAAS,6BACb,IAAIiR,EAAM4C,GAAUI,eAAe3kC,EAAI,GAC5B,GAAP2hC,EACA9L,EAAInF,SAAS,4BACD,GAAPiR,EACL9L,EAAInF,SAAS,4BACD,GAAPiR,EACL9L,EAAInF,SAAS,4BACD,GAAPiR,GACL9L,EAAInF,SAAS,4BACjB,IAAIrf,EAAKkzB,GAAUC,SAASxkC,EAAI,GAChC61B,EAAI/I,QAAQzb,GACZnhB,KAAK4qI,QAAQpuI,KAAKmpC,GAClBA,EAAIjD,SAAQ,KACR1iC,KAAK8qI,cAAc3pH,GACnBnhB,KAAK+lI,eAAe5kH,EAAG,IAE3BwkB,EAAI/C,YAAYt7B,IACZtH,KAAK+qI,sBACLzjI,EAAMwgG,iBACNxgG,EAAMilG,iBAAiB,GAE/B,CACJ,CACA,QAAA65B,CAAS7lI,GACLP,KAAK+lI,eAAiBxlI,CAC1B,CACA,aAAAyqI,CAAczqI,GACVP,KAAK+qI,oBAAsBxqI,CAC/B,CACA,aAAAuqI,CAAcn4D,GACV,IAAIj2B,EAAOrI,GAAUC,SAAS95B,QAAQm4D,GACtC3yE,KAAK6qI,aAAe,CAACnuF,GACrB18C,KAAKirI,gBACT,CACA,mBAAAC,CAAoBC,GAChBnrI,KAAK6qI,aAAeM,EAAY9sI,KAAK8iB,GAAOkzB,GAAUC,SAAS95B,QAAQ2G,KAAKvW,QAAQ8xC,GAASA,EAAO,IACpG18C,KAAKirI,gBACT,CACA,cAAAA,GACI,IAAK,IAAIn7H,EAAI,EAAGA,GAAK9P,KAAK4qI,QAAQhsI,OAAQkR,IAClC9P,KAAK6qI,aAAa3pI,SAAS4O,GAC3B9P,KAAK4qI,QAAQ96H,EAAI,GAAG0wB,SAAS,8BAE7BxgC,KAAK4qI,QAAQ96H,EAAI,GAAG+wB,YAAY,6BAE5C,EC3IG,MAAMuqG,WAA0BvkG,GACnC,WAAA3pC,CAAYqvC,EAAKmG,EAAMoX,GACnBp/C,QACA1K,KAAKusC,IAAMA,EACXvsC,KAAK0yC,KAAOA,EACZ1yC,KAAK8pD,KAAOA,CAChB,CACA,MAAA7iB,CAAOnmB,GACHpW,MAAMu8B,OAAOnmB,GACb,IAAIkmH,EAAO,GAAI,UAAU/nG,SAASj/B,KAAK8mC,YACvCkgG,EAAKlkH,IAAI,CAAE,QAAW,OAAQ,cAAe,SAAU,kBAAmB,UAC1EkkH,EAAKlkH,IAAI,CAAE,eAAgB,QAAS,kBAAmB,UACvDkkH,EAAKlkH,IAAI,CAAE,wBAAyB,oCACpC,IAAInF,EAAM,EACN0tH,EAAY,IACA,GAAI,sBAAsBpsG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,cAG3E2tH,EAAkB,KAClB,IAAI3lG,EAAM,GAAI,UAAU1G,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,YAAe,QAAW,SACnF6vB,EAAM,GAAI,YAAYvO,SAAS0G,GAAK7iB,IAAI,CAAE,eAAgB,UAC1DyoH,EAAM,GAAI,4BAA4BtsG,SAASuO,GAGnD,OAFAA,EAAIlR,WAAW,OAER,CAACivG,EADI,GAAI,sBAAsBtsG,SAAS0G,GAAK7iB,IAAI,CAAE,YAAa,MACpD,EAEnB9iB,KAAK0yC,KAAO,GACZ,GAAI,sBAAsBzT,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAC5D3d,KAAKwrI,aAAeH,IACpB,GAAI,uBAAuBpsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAC7D3d,KAAKyrI,YAAc,IAAI/F,GAAW,CAAC,QAAS,MAAO,OACnD1lI,KAAKyrI,YAAYxkG,OAAO,GAAI,UAAUhI,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,eAC3E,GAAI,0BAA0BshB,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAChE3d,KAAK0rI,eAAiB,IAAIhG,GAAW,CAAC,QAAS,MAAO,OACtD1lI,KAAK0rI,eAAezkG,OAAO,GAAI,UAAUhI,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,eAC9E,GAAI,uBAAuBshB,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,cAC5D3d,KAAK2rI,eAAgB3rI,KAAK4rI,eAAiBN,IAC5C,GAAI,yBAAyBrsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,cAC9D3d,KAAK6rI,gBAAiB7rI,KAAK8rI,gBAAkBR,IAC9C,GAAI,yBAAyBrsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAC/D3d,KAAK+rI,aAAe,IAAIrG,GAAW,CAAC,QAAS,MAAO,OACpD1lI,KAAK+rI,aAAa9kG,OAAO,GAAI,UAAUhI,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,eAC5E,GAAI,4BAA4BshB,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAClE3d,KAAKgsI,cAAgBX,IACrB,GAAI,2BAA2BpsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aACjE3d,KAAKisI,eAAiBZ,IACtB,GAAI,wBAAwBpsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAC9D3d,KAAKksI,eAAiBb,IACtB,GAAI,wBAAwBpsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAC9D3d,KAAKmsI,cAAgBd,IACrB,GAAI,uBAAuBpsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAC7D3d,KAAKosI,cAAgBf,IACrB,GAAI,wBAAwBpsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAC9D3d,KAAKqsI,eAAiBhB,IACtB,GAAI,uBAAuBpsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAC7D3d,KAAKssI,cAAgBjB,IACrBrrI,KAAKusI,cAGL,GAAI,yBAAyBttG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,cAC9D3d,KAAK6rI,gBAAiB7rI,KAAK8rI,gBAAkBR,IAC9C,GAAI,yBAAyBrsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAC/D3d,KAAK+rI,aAAe,IAAIrG,GAAW,CAAC,QAAS,MAAO,OACpD1lI,KAAK+rI,aAAa9kG,OAAO,GAAI,UAAUhI,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,eAC5E,GAAI,4BAA4BshB,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAClE3d,KAAKgsI,cAAgBX,IACrB,GAAI,wBAAwBpsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAC9D3d,KAAKgsI,cAAgBX,IACrB,GAAI,0BAA0BpsG,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAkBnF,EAAL,aAChE3d,KAAKwsI,YAAcnB,IACnBrrI,KAAKysI,YAEb,CACA,UAAAC,GACI,MAAM,IAAEngG,EAAG,KAAEmG,GAAS1yC,KACtB87D,GAAUO,mBAAmB9vB,EAAKmG,GAClC,IAAI6xB,EAAMvkE,KAAK2sI,aAAa3sI,KAAKwrI,aAAa7rG,YAC1C4kC,GACAzI,GAAU4D,oBAAoBnzB,EAAKmG,EAAM6xB,GAC7C,IAAI6yC,EAAOp3G,KAAKyrI,YAAYxF,mBACxB7uB,EAAO,GACPt7C,GAAU8D,qBAAqBrzB,EAAKmG,EAAc,GAAR0kE,GAC9C,IAAIw1B,EAAQ5sI,KAAK0rI,eAAezF,mBAC5B2G,EAAQ,GACR9wE,GAAUgE,wBAAwBvzB,EAAKmG,EAAe,GAATk6F,GACjD,IAAIC,EAAO7sI,KAAK8sI,aAAa9sI,KAAK4rI,cAAcjsG,YAC5CktG,IACK7sI,KAAK2rI,eAAevuG,QAAQ2vG,QAG7BjxE,GAAUmE,wBAAwB1zB,EAAKmG,EAAMm6F,GAF7C/wE,GAAUiE,qBAAqBxzB,EAAKmG,EAAMm6F,IAIlD,IAAI1mD,EAASnmF,KAAK2sI,aAAa3sI,KAAK8rI,eAAensG,YAC/CwmD,IACKnmF,KAAK6rI,gBAAgBzuG,QAAQ2vG,QAG9BjxE,GAAUqE,yBAAyB5zB,EAAKmG,EAAMyzC,GAF9CrqB,GAAUoE,sBAAsB3zB,EAAKmG,EAAMyzC,IAInD,IAAI6mD,EAAUhtI,KAAK+rI,aAAa9F,mBAC5B+G,EAAU,GACVlxE,GAAUsE,sBAAsB7zB,EAAKmG,EAAiB,GAAXs6F,GAC/C,IAAI9mD,EAAQlmF,KAAK2sI,aAAa3sI,KAAKgsI,cAAcrsG,YAC7CumD,GACApqB,GAAUuE,qBAAqB9zB,EAAKmG,EAAMwzC,GAC9C,IAAI5d,EAAMtoE,KAAK2sI,aAAa3sI,KAAKisI,eAAetsG,YAC5C2oC,GACAxM,GAAUwE,sBAAsB/zB,EAAKmG,EAAM41B,GAC/C,IAAI93B,EAAMxwC,KAAK2sI,aAAa3sI,KAAKksI,eAAevsG,YAC5C6Q,GACAsrB,GAAUyE,sBAAsBh0B,EAAKmG,EAAMlC,GAC/C,IAAIsZ,EAAO9pD,KAAK2sI,aAAa3sI,KAAKmsI,cAAcxsG,YAC5CmqB,GACAgS,GAAU0E,qBAAqBj0B,EAAKmG,EAAMoX,GAC9C,IAAI/sD,EAAMiD,KAAK2sI,aAAa3sI,KAAKosI,cAAczsG,YAC3C5iC,GACA++D,GAAU2E,qBAAqBl0B,EAAKmG,EAAM31C,GAC9C,IAAI0nE,EAAMzkE,KAAK2sI,aAAa3sI,KAAKqsI,eAAe1sG,YAC5C8kC,GACA3I,GAAU4E,sBAAsBn0B,EAAKmG,EAAM+xB,GAC/C,IAAIjL,EAAMx5D,KAAK2sI,aAAa3sI,KAAKssI,cAAc3sG,YAC3C65B,GACAsC,GAAU6E,oBAAoBp0B,EAAKmG,EAAM8mB,EACjD,CACA,UAAAyzE,GACI,MAAM,IAAE1gG,EAAG,KAAEud,GAAS9pD,KACtB87D,GAAUS,mBAAmBhwB,EAAKud,GAClC,IAAIq8B,EAASnmF,KAAK2sI,aAAa3sI,KAAK8rI,eAAensG,YAC/CwmD,IACKnmF,KAAK6rI,gBAAgBzuG,QAAQ2vG,QAG9BjxE,GAAUkF,yBAAyBz0B,EAAKud,EAAMq8B,GAF9CrqB,GAAUiF,sBAAsBx0B,EAAKud,EAAMq8B,IAInD,IAAI6mD,EAAUhtI,KAAK+rI,aAAa9F,mBAC5B+G,EAAU,GACVlxE,GAAUmF,sBAAsB10B,EAAKud,EAAiB,GAAXkjF,GAC/C,IAAI9mD,EAAQlmF,KAAK2sI,aAAa3sI,KAAKgsI,cAAcrsG,YAC7CumD,GACApqB,GAAUoF,qBAAqB30B,EAAKud,EAAMo8B,GAC9C,IAAIzjC,EAAQziD,KAAK2sI,aAAa3sI,KAAKwsI,YAAY7sG,YAC3C8iB,GACAqZ,GAAUqF,mBAAmB50B,EAAKud,EAAMrH,EAChD,CACA,SAAA8pF,GACI,MAAM,IAAEhgG,EAAG,KAAEmG,GAAS1yC,KACtB,IAAIukE,EAAMzI,GAAUgB,iBAAiBvwB,EAAKmG,GACtC0kE,EAAOt7C,GAAUmB,kBAAkB1wB,EAAKmG,GACxCk6F,EAAQ9wE,GAAUsB,qBAAqB7wB,EAAKmG,GAC5Cm6F,EAAO/wE,GAAUwB,kBAAkB/wB,EAAKmG,GACxCw6F,EAAUpxE,GAAU2B,qBAAqBlxB,EAAKmG,GAC9CyzC,EAASrqB,GAAU6B,mBAAmBpxB,EAAKmG,GAC3Cy6F,EAAYrxE,GAAU+B,sBAAsBtxB,EAAKmG,GACjDs6F,EAAUlxE,GAAUiC,mBAAmBxxB,EAAKmG,GAC5CwzC,EAAQpqB,GAAUmC,kBAAkB1xB,EAAKmG,GACzC41B,EAAMxM,GAAUqC,mBAAmB5xB,EAAKmG,GACxClC,EAAMsrB,GAAUuC,mBAAmB9xB,EAAKmG,GACxCoX,EAAOgS,GAAUyC,kBAAkBhyB,EAAKmG,GACxC31C,EAAM++D,GAAU2C,kBAAkBlyB,EAAKmG,GACvC+xB,EAAM3I,GAAU6C,mBAAmBpyB,EAAKmG,GACxC8mB,EAAMsC,GAAU+C,iBAAiBtyB,EAAKmG,GAC/BopB,GAAUiD,kBAAkBxyB,EAAKmG,GAC9BopB,GAAUoD,qBAAqB3yB,EAAKmG,GAClD1yC,KAAKwrI,aAAa5rG,SAAS,EAAItrB,SAASiwD,GAAOA,EAAIzmD,KAAK,KAAO,IAC/D9d,KAAKyrI,YAAYhF,iBAAyB,MAARrvB,EAAe,EAAIA,EAAO,EAAI,GAChEp3G,KAAK0rI,eAAejF,iBAA0B,MAATmG,EAAgB,EAAIA,EAAQ,EAAI,GACrE5sI,KAAK2rI,eAAevuG,QAAQ2vG,QAAU,EAAI34H,QAAQy4H,IAAS,EAAIv4H,SAAS44H,GACxEltI,KAAK4rI,cAAchsG,SAAS,EAAItrB,SAASu4H,GAAQA,EAAK/uH,KAAK,KAAO,EAAIxJ,SAAS44H,GAAWA,EAAQpvH,KAAK,KAAO,IAC9G9d,KAAK6rI,gBAAgBzuG,QAAQ2vG,QAAU,EAAI34H,QAAQ+xE,IAAW,EAAI7xE,SAAS64H,GAC3EntI,KAAK8rI,eAAelsG,SAAS,EAAItrB,SAAS6xE,GAAUA,EAAOroE,KAAK,KAAO,EAAIxJ,SAAS64H,GAAaA,EAAUrvH,KAAK,KAAO,IACvH9d,KAAK+rI,aAAatF,iBAA4B,MAAXuG,EAAkB,EAAIA,EAAU,EAAI,GACvEhtI,KAAKgsI,cAAcpsG,SAAS,EAAItrB,SAAS4xE,GAASA,EAAMpoE,KAAK,KAAO,IACpE9d,KAAKisI,eAAersG,SAAS,EAAItrB,SAASg0D,GAAOA,EAAIxqD,KAAK,KAAO,IACjE9d,KAAKksI,eAAetsG,SAAS,EAAItrB,SAASk8B,GAAOA,EAAI1yB,KAAK,KAAO,IACjE9d,KAAKmsI,cAAcvsG,SAAS,EAAItrB,SAASw1C,GAAQA,EAAKhsC,KAAK,KAAO,IAClE9d,KAAKosI,cAAcxsG,SAAS,EAAItrB,SAASvX,GAAOA,EAAI+gB,KAAK,KAAO,IAChE9d,KAAKqsI,eAAezsG,SAAS,EAAItrB,SAASmwD,GAAOA,EAAI3mD,KAAK,KAAO,IACjE9d,KAAKssI,cAAc1sG,SAAS,EAAItrB,SAASklD,GAAOA,EAAI17C,KAAK,KAAO,GACpE,CACA,SAAA2uH,GACI,MAAM,IAAElgG,EAAG,KAAEud,GAAS9pD,KACtB,IAAImmF,EAASrqB,GAAUsD,mBAAmB7yB,EAAKud,GAC3CqjF,EAAYrxE,GAAUuD,sBAAsB9yB,EAAKud,GACjDkjF,EAAUlxE,GAAUwD,mBAAmB/yB,EAAKud,GAC5Co8B,EAAQpqB,GAAUyD,kBAAkBhzB,EAAKud,GACzCrH,EAAQqZ,GAAU0D,gBAAgBjzB,EAAKud,GAC3C9pD,KAAK6rI,gBAAgBzuG,QAAQ2vG,QAAU,EAAI34H,QAAQ+xE,IAAW,EAAI7xE,SAAS64H,GAC3EntI,KAAK8rI,eAAelsG,SAAS,EAAItrB,SAAS6xE,GAAUA,EAAOroE,KAAK,KAAO,EAAIxJ,SAAS64H,GAAaA,EAAUrvH,KAAK,KAAO,IACvH9d,KAAK+rI,aAAatF,iBAA4B,MAAXuG,EAAkB,EAAIA,EAAU,EAAI,GACvEhtI,KAAKgsI,cAAcpsG,SAAS,EAAItrB,SAAS4xE,GAASA,EAAMpoE,KAAK,KAAO,IACpE9d,KAAKwsI,YAAY5sG,SAAS,EAAItrB,SAASmuC,GAASA,EAAM3kC,KAAK,KAAO,GACtE,CACA,YAAAgvH,CAAatsH,GACT,IAAIiE,EAAO,GACX,GAAIjE,EACA,IAAK,IAAIinB,KAAOjnB,EAAImgB,MAAM,aAClB8G,GACAhjB,EAAKjoB,KAAKirC,GACtB,OAAOhjB,EAAK7lB,OAAS6lB,EAAO,IAChC,CACA,YAAAkoH,CAAansH,GACT,IAAIiE,EAAO,GACX,GAAIjE,EACA,IAAK,IAAIinB,KAAOjnB,EAAImgB,MAAM,aAAc,CAChC8G,EAAI/mB,WAAW,OACf+mB,EAAMA,EAAI9mB,UAAU,IACxB,IAAIgvB,EAAM39B,SAASy1B,GACd7mB,MAAM+uB,IACPlrB,EAAKjoB,KAAKmzC,EAClB,CACJ,OAAOlrB,EAAK7lB,OAAS6lB,EAAO,IAChC,ECnMG,MAAM2oH,WAAiB7K,GAC1B,WAAArlI,CAAYqvC,EAAKmG,EAAMqmF,EAAWsU,GAC9B3iI,QACA1K,KAAK0yC,KAAOA,EACZ1yC,KAAK+4H,UAAYA,EACjB/4H,KAAKqtI,cAAgBA,EACrBrtI,KAAKstI,KAAO,EACZttI,KAAKutI,KAAO,EACZvtI,KAAKwtI,KAAO,KACZxtI,KAAKytI,WAAa,KAClBztI,KAAK0tI,UAAY,KACjB1tI,KAAK2tI,cAAgB,GACrB3tI,KAAK4tI,eAAiB,EACtB5tI,KAAK6tI,QAAUthG,EACfvsC,KAAKusC,IAAMA,EAAI3wB,QACf5b,KAAKo+C,MAAQ,YACbp+C,KAAKwiI,gBAAkB,GACvBxiI,KAAKyiI,gBAAkB,EAC3B,CACA,QAAAzJ,GACIh5H,KAAK+4H,UAAUiM,YAAY,IAAIP,IAC/B,IAAI76B,EAAU5pG,KAAKqkI,aAAc9+F,EAAOvlC,KAAKokI,UAC7CpkI,KAAK8tI,SAAW,GAAI,gEAAgE7uG,SAAS2qE,GAAS9mF,IAAI,CAAE,cAAe,UAC3H9iB,KAAK8tI,SAASprG,SAAQ,IAAM1iC,KAAK+tI,iBAC7B/tI,KAAK0yC,KAAO,GACZ1yC,KAAKwtI,KAAO,IAAI7G,GAAO,CAAC,OAAQ,eAAgB,WAAY,QAAS,UACrE3mI,KAAKwtI,KAAKvmG,OAAO1B,GACjBvlC,KAAKwtI,KAAKpH,UAAUvwH,GAAQ7V,KAAKguI,YAAYn4H,KAC7C7V,KAAKiuI,aAAajuI,KAAKwtI,KAAK1G,YAAY,SACxC9mI,KAAKkuI,qBAAqBluI,KAAKwtI,KAAK1G,YAAY,iBAC5C9mI,KAAK0yC,KAAO,GACZ1yC,KAAKmuI,iBAAiBnuI,KAAKwtI,KAAK1G,YAAY,aAChD9mI,KAAKouI,cAAcpuI,KAAKwtI,KAAK1G,YAAY,UACzC9mI,KAAKquI,cAAcruI,KAAKwtI,KAAK1G,YAAY,WAGzC9mI,KAAKiuI,aAAa1oG,GAEtB,IAAI+oG,EAAY/oG,EAAKtH,QAAQ,kBACzBqwG,EAAU1vI,OAAS,GACnB0vI,EAAU,GAAGxsG,WAAU,GAC3B,IAAK,IAAInf,KAAO2rH,EACZ3rH,EAAIG,IAAI,CAAE,KAAQ,YAClBH,EAAIyf,WAAW96B,IACM,SAAbA,EAAMhJ,IACN0B,KAAK+tI,eACa,UAAbzmI,EAAMhJ,IACX0B,KAAKsjI,QACa,UAAbh8H,EAAMhJ,KACX0B,KAAKwtI,KAAKpG,gBAAgB,GAC1BpnI,KAAKguI,YAAYhuI,KAAKwtI,KAAKvH,oBAC3B3+H,EAAMwgG,kBAEY,YAAbxgG,EAAMhJ,MACX0B,KAAKwtI,KAAKpG,eAAe,GACzBpnI,KAAKguI,YAAYhuI,KAAKwtI,KAAKvH,oBAC3B3+H,EAAMwgG,kBAEVxgG,EAAMilG,iBAAiB,GAGnC,CACA,KAAA+2B,GACItjI,KAAK+4H,UAAUkM,aACfv6H,MAAM44H,OACV,CACA,YAAAyK,GACI/tI,KAAKusC,IAAIkrB,eAAgB,EACzBz3D,KAAKuuI,iBACL,IAAIC,EAASxuI,KAAKwtI,KAAOxtI,KAAKwtI,KAAKtH,mBAAqB,KAC1C,gBAAVsI,GACAxuI,KAAKyuI,eACK,YAAVD,GACAxuI,KAAK0uI,iBACK,SAAVF,GACAxuI,KAAK2uI,cACK,SAAVH,GACAxuI,KAAK4uI,cACT5uI,KAAKusC,IAAIkrB,eAAgB,EACrBz3D,KAAKqtI,eACLrtI,KAAKqtI,cAAcrtI,KAC3B,CACA,YAAAiuI,CAAa9G,GACT,IAAIH,EAAO,GAAI,UAAU/nG,SAASkoG,GAClCH,EAAKlkH,IAAI,CAAE,QAAW,OAAQ,cAAe,SAAU,kBAAmB,UAC1EkkH,EAAKlkH,IAAI,CAAE,eAAgB,QAAS,kBAAmB,UACvDkkH,EAAKlkH,IAAI,CAAE,wBAAyB,qEACpCkkH,EAAKxnG,WAAW,kDAChBx/B,KAAK6uI,YAAc,GAAI,sBAAsB5vG,SAAS+nG,GACtDhnI,KAAK6uI,YAAY/rH,IAAI,CAAE,YAAa,4BACpC9iB,KAAK6uI,YAAYzrG,SAAQ,IAAMpjC,KAAK8uI,eAAehE,cAAc9qI,KAAK6uI,YAAYlvG,cAClFqnG,EAAKxnG,WAAW,kDAChBx/B,KAAK+uI,YAAc,GAAI,mCAAmC9vG,SAAS+nG,GACnEhnI,KAAK+uI,YAAYjsH,IAAI,CAAE,YAAa,aACpCkkH,EAAKxnG,WAAW,oDAChBx/B,KAAKgvI,cAAgB,GAAI,mCAAmC/vG,SAAS+nG,GACrEhnI,KAAKgvI,cAAclsH,IAAI,CAAE,YAAa,aACtCkkH,EAAKxnG,WAAW,qDAChBx/B,KAAKivI,eAAiB,IAAIvJ,GAAW,CAAC,OAAQ,OAAQ,IAAK,IAAK,IAAK,IAAK,UAC1E1lI,KAAKivI,eAAehoG,OAAO,GAAI,oDAAoDhI,SAAS+nG,IAC5FhnI,KAAKivI,eAAe7I,UAAUvwH,GAAQ7V,KAAKkvI,cAAc9xG,QAAQ+xG,SAAkB,GAAPt5H,IAC5E7V,KAAKkvI,cAAgB,GAAI,mCAAmCjwG,SAAS+nG,GACrEhnI,KAAKkvI,cAAcpsH,IAAI,CAAE,YAAa,aACtC9iB,KAAKkvI,cAAc9xG,QAAQ+xG,UAAW,EACtCnI,EAAKxnG,WAAW,mDAChBx/B,KAAKovI,cAAgB,IAAI1J,GAAW,CAAC,UAAW,aAChD1lI,KAAKovI,cAAcnoG,OAAO,GAAI,oDAAoDhI,SAAS+nG,IAC3FhnI,KAAKovI,cAAchJ,UAAUvwH,GAAQ7V,KAAKqvI,aAAajyG,QAAQ+xG,SAAkB,GAAPt5H,IAC1E7V,KAAKqvI,aAAe,GAAI,mCAAmCpwG,SAAS+nG,GACpEhnI,KAAKqvI,aAAavsH,IAAI,CAAE,YAAa,aACrC9iB,KAAKqvI,aAAajyG,QAAQ+xG,UAAW,EACrCnI,EAAKxnG,WAAW,mDAChBx/B,KAAKsvI,aAAe,GAAI,mCAAmCrwG,SAAS+nG,GACpEhnI,KAAKsvI,aAAaxsH,IAAI,CAAE,YAAa,aACrCkkH,EAAKxnG,WAAW,iDAChBx/B,KAAKuvI,WAAa,GAAI,uDAAuDtwG,SAAS+nG,GACtFhnI,KAAKuvI,WAAWzsH,IAAI,CAAE,YAAa,aACnC,IAAI0sH,EAAc,GAAI,UAAUvwG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,wBAClE9iB,KAAK8uI,eAAiB,IAAInE,GAC1B3qI,KAAK8uI,eAAe1I,UAAUzzD,GAAY3yE,KAAK6uI,YAAYjvG,SAAS+yC,KACpE3yE,KAAK8uI,eAAe9D,eAAc,IAAMhrI,KAAK+tI,iBAC7C/tI,KAAK8uI,eAAe7nG,OAAOuoG,GAC3B,MAAMjjG,EAAMvsC,KAAKusC,IAAKmG,EAAO1yC,KAAK0yC,KAClC,GAAIA,EAAO,EAAG,CACV1yC,KAAK6uI,YAAYjvG,SAAS2M,EAAI2Q,YAAYxK,IAC1C1yC,KAAK+uI,YAAYnvG,SAAS2M,EAAIqQ,WAAWlK,GAAMh/B,YAC/C1T,KAAKgvI,cAAcpvG,SAAS2M,EAAIqgB,aAAala,GAAMh/B,YACnD,IAAIinD,EAAKpuB,EAAI8P,cAAc3J,GACvBioB,GAAM3d,GAASC,mBACfj9C,KAAKivI,eAAexI,iBAAiB,GACrCzmI,KAAKkvI,cAActvG,SAAS2M,EAAI6sB,cAAc1mB,GAAMh/B,YACpD1T,KAAKkvI,cAAc9xG,QAAQ+xG,UAAW,GAEjCx0E,GAAM,GACX36D,KAAKivI,eAAexI,iBAAiB9rE,EAAK,GAC1C36D,KAAKkvI,cAActvG,SAAS+6B,EAAGjnD,YAC/B1T,KAAKkvI,cAAc9xG,QAAQ+xG,UAAW,IAGtCnvI,KAAKivI,eAAexI,iBAAiB,GACrCzmI,KAAKkvI,cAActvG,SAAS+6B,EAAGjnD,YAC/B1T,KAAKkvI,cAAc9xG,QAAQ+xG,UAAW,GAE1CnvI,KAAKovI,cAAc3I,iBAAiBl6F,EAAIsgB,YAAYna,IAASsK,GAAS8P,gBAAkB,EAAI,GACxFvgB,EAAIsgB,YAAYna,IAASsK,GAAS8P,iBAClC9sD,KAAKqvI,aAAazvG,SAAS2M,EAAIsgB,YAAYna,GAAMh/B,YACrD1T,KAAKqvI,aAAajyG,QAAQ+xG,SAAW5iG,EAAIsgB,YAAYna,IAASsK,GAAS8P,gBACvE9sD,KAAKsvI,aAAa1vG,SAAS2M,EAAIkqB,WAAW/jB,GAAMh/B,YAChD1T,KAAKuvI,WAAW3vG,SAAS8S,EAAKh/B,YAC9B1T,KAAK8uI,eAAehE,cAAcv+F,EAAI2Q,YAAYxK,GACtD,CACJ,CACA,oBAAAw7F,CAAqB/G,GACjB,IAAIsI,EAAU,GAAI,UAAUxwG,SAASkoG,GAAOrkH,IAAI,CAAE,QAAW,OAAQ,cAAe,eACpF2sH,EAAQ3sH,IAAI,CAAE,YAAa,OAAQ,aAAc,OAAQ,aAAc,WACvE,IAAI4sH,EAAa,GAAI,UAAUzwG,SAASwwG,GAAS3sH,IAAI,CAAE,eAAgB,QAAS,KAAQ,QACpF6sH,EAAW,GAAI,UAAU1wG,SAASwwG,GAAS3sH,IAAI,CAAE,KAAQ,aAC7D9iB,KAAK4vI,kBAAoB,GAAI,sBAAsB3wG,SAASywG,GAC5D1vI,KAAK4vI,kBAAkBtvG,QAAQ,cAAe,UAC9C,IAAIuvG,EAAa,GACjB7vI,KAAK4vI,kBAAkBxtG,WAAW96B,IACb,WAAbA,EAAMhJ,IACN0B,KAAK8vI,mBAAmB,GACN,aAAbxoI,EAAMhJ,KACX0B,KAAK8vI,kBAAkB,EAAE,IAEjC9vI,KAAK4vI,kBAAkBxsG,SAAQ,KAC3B,IAAI46E,EAASh+G,KAAK4vI,kBAAkBjwG,WAChCq+E,GAAU6xB,IAEdA,EAAa7xB,EACbh+G,KAAK+vI,oBAAmB,IAE5B,IAAItI,EAAa,GAAI,UAAUxoG,SAASywG,GAAY5sH,IAAI,CAAE,aAAc,UACzD,GAAI,gEAAgEmc,SAASwoG,GACnF/kG,SAAQ,KACb1iC,KAAKgwI,oBAAoB,GACrBhwI,KAAK0yC,KAAO,GAAKuZ,GAAQc,UAAU/sD,KAAKusC,IAAKvsC,KAAK0yC,OAClD1yC,KAAK+tI,cAAc,IAE3B/tI,KAAKiwI,YAAc,GAAI,YAAYhxG,SAAS0wG,GAAU7sH,IAAI,CAAE,kBAAmB,WAAY,MAAS,SACpG9iB,KAAK+vI,mBACT,CACA,gBAAA5B,CAAiBhH,GACb,MAAM,IAAE56F,EAAG,KAAEmG,GAAS1yC,KACtB,IAAIkwI,EAAgB,GAAI,UAAUjxG,SAASkoG,GAAOrkH,IAAI,CAAE,aAAc,WAClEqtH,EAAgB,GAAI,UAAUlxG,SAASixG,GAAeptH,IAAI,CAAE,QAAW,iBACvEkkH,EAAO,GAAI,UAAU/nG,SAASkxG,GAClCnJ,EAAKlkH,IAAI,CAAE,QAAW,OAAQ,cAAe,SAAU,kBAAmB,UAC1EkkH,EAAKlkH,IAAI,CAAE,eAAgB,QAAS,kBAAmB,UACvDkkH,EAAKlkH,IAAI,CAAE,wBAAyB,qEACpC9iB,KAAKowI,WAAa,IAAIlI,GAAWlO,GAAezyD,KAAMh7B,EAAKmG,GAC3D1yC,KAAKowI,WAAWnpG,OAAO,GAAI,UAAUhI,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,yBAA0B,aAAc,YAC/G,IAAIutH,EAAS,GAAI,UAAUpxG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAC7D9iB,KAAKswI,WAAa,GAAI,mCAAmCrxG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAC3F,IAAIytH,EAAS,GAAI,UAAUtxG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAC7D9iB,KAAKwwI,WAAa,GAAI,mCAAmCvxG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAC3F9iB,KAAKowI,WAAWrK,eAAkBxf,IAC9B,IAAI50E,EAAQ3xC,KAAKowI,WAAWvH,eAAetiB,GAC3C,GAAIA,EAAIxoH,MAAQk8H,GAAkByO,SAC9B2H,EAAOzzG,QAAQ,cACf2zG,EAAO3zG,QAAQ,KACf58B,KAAKswI,WAAW1wG,SAAS5/B,KAAKywI,SAAWlkG,EAAI6e,MAAMzZ,EAAM,IAAI87B,QAAQ,IACrEztE,KAAKwwI,WAAW5wG,SAAS5/B,KAAK0wI,SAAWnkG,EAAI8e,MAAM1Z,EAAM,IAAI87B,QAAQ,SAEpE,GAAI84C,EAAIxoH,MAAQk8H,GAAkB0O,KAAM,CACzC,IAAI3lH,EAAKupB,EAAI6e,MAAMzZ,EAAM,IAAMpF,EAAI6e,MAAMzZ,EAAM,IAAK1uB,EAAKspB,EAAI8e,MAAM1Z,EAAM,IAAMpF,EAAI8e,MAAM1Z,EAAM,IAC/F0+F,EAAOzzG,QAAQ,YACf2zG,EAAO3zG,QAAQ,SACf58B,KAAKswI,WAAW1wG,SAAS5/B,KAAKywI,SAAW1tH,EAAQC,EAAIC,GAAIwqD,QAAQ,IACjEztE,KAAKwwI,WAAW5wG,SAAS5/B,KAAK0wI,UAAY/5H,KAAKue,MAAMjS,EAAID,GAAMa,GAAQ4pD,QAAQ,GACnF,MACK,GAAI84C,EAAIxoH,MAAQk8H,GAAkB6O,QAAS,CAC5C,IAAI57G,EAAKqf,EAAI6e,MAAMzZ,EAAM,IAAKxkB,EAAKof,EAAI8e,MAAM1Z,EAAM,IAC/CztB,EAAMvN,KAAKue,MAAMqX,EAAI8e,MAAM1Z,EAAM,IAAMxkB,EAAIof,EAAI6e,MAAMzZ,EAAM,IAAMzkB,GACjEjJ,EAAMtN,KAAKue,MAAMqX,EAAI8e,MAAM1Z,EAAM,IAAMxkB,EAAIof,EAAI6e,MAAMzZ,EAAM,IAAMzkB,GACrEmjH,EAAOzzG,QAAQ,SACf2zG,EAAO3zG,QAAQ,IACf58B,KAAKswI,WAAW1wG,SAAS5/B,KAAKywI,UAAY,EAAavsH,EAAKD,GAAOJ,GAAQ4pD,QAAQ,IACnFztE,KAAKwwI,WAAW5wG,SAAS5/B,KAAK0wI,SAAW,GAC7C,CACAH,EAAOvwG,OAAO,UAAWumF,EAAIxoH,MAAQk8H,GAAkB6O,QAAU,OAAS,SAC1E9oI,KAAKwwI,WAAWxwG,OAAO,UAAWumF,EAAIxoH,MAAQk8H,GAAkB6O,QAAU,OAAS,QAAQ,EAE/F9oI,KAAKowI,WAAWrK,eAAe/lI,KAAKowI,WAAW3H,SACnD,CACA,aAAA2F,CAAcjH,GACVnnI,KAAK2wI,YAAc,IAAIvF,GAAkBprI,KAAKusC,IAAKvsC,KAAK0yC,KAAM,GAC9D1yC,KAAK2wI,YAAY1pG,OAAOkgG,EAC5B,CACA,aAAAkH,CAAclH,GACV,IAAIG,EAAS,IAAItnI,KAAKusC,IAAI8E,UAAUrxC,KAAK0yC,SAAU1yC,KAAKusC,IAAImY,cAAc1kD,KAAK0yC,OAC/E1yC,KAAK4wI,aAAe,IAAIvJ,GAAkBC,GAC1CtnI,KAAK4wI,aAAa3pG,OAAOkgG,EAC7B,CACA,cAAAoH,GACI,IAAI,IAAEhiG,EAAG,KAAEmG,GAAS1yC,KACR,GAAR0yC,IACAA,EAAO1yC,KAAK0yC,KAAOnG,EAAIge,QAAQ,IAAKvqD,KAAKstI,KAAMttI,KAAKutI,OACxD,IAAIsD,EAAM7wI,KAAK6uI,YAAYlvG,WAChB,IAAPkxG,GACAtkG,EAAI0pB,eAAevjB,EAAMm+F,GAC7B,IAAItsE,EAAMvyD,SAAShS,KAAK+uI,YAAYpvG,YAChC4kC,GAAO,IAAMA,EAAM,IACnBh4B,EAAIghB,cAAc7a,EAAM6xB,GAC5B,IAAI+B,EAAMt0D,SAAShS,KAAKgvI,cAAcrvG,YAClC2mC,GAAO,GAAKA,EAAM,IAClB/5B,EAAI+gB,gBAAgB5a,EAAM4zB,GAC9B,IAAIwqE,EAAQ9wI,KAAKivI,eAAehJ,mBAChC,GAAa,GAAT6K,EACAvkG,EAAI8gB,iBAAiB3a,EAAMsK,GAASC,wBACnC,GAAI6zF,GAAS,EACdvkG,EAAI8gB,iBAAiB3a,EAAMo+F,EAAQ,OAClC,CACD,IAAIrsE,EAAMzyD,SAAShS,KAAKkvI,cAAcvvG,YAClC8kC,GAAO,GAAKA,EAAM,IAClBl4B,EAAI8gB,iBAAiB3a,EAAM+xB,EACnC,CACA,GAA6C,GAAzCzkE,KAAKovI,cAAcnJ,mBAAyB,CAC5C,IAAIzsE,EAAMxnD,SAAShS,KAAKqvI,aAAa1vG,YACjC65B,GAAO,GAAKA,EAAM,KAClBjtB,EAAI4oB,eAAeziB,EAAM8mB,EACjC,MAEIjtB,EAAI4oB,eAAeziB,EAAMsK,GAAS8P,iBACtC,IAAIzuD,EAAM2T,SAAShS,KAAKsvI,aAAa3vG,YAChC/e,MAAMviB,IACPkuC,EAAI2pB,cAAcxjB,EAAMr0C,EAChC,CACA,YAAAowI,GACI,MAAM,IAAEliG,EAAG,KAAEmG,GAAS1yC,KACtB,GAAIA,KAAK4tI,cAAgB,EAAG,CACxB,IAAIzsH,EAAKorB,EAAI2Q,YAAYxK,GACzBuZ,GAAQiJ,YAAY3oB,EAAKmG,GACzBnG,EAAI0pB,eAAevjB,EAAMvxB,EAC7B,KACK,CACD,IAAI08F,EAAS79G,KAAKytI,WAAWztI,KAAK4tI,eAClCrhG,EAAI0pB,eAAevjB,EAAMmrE,EAAO/hH,MAChCmwD,GAAQyI,UAAUnoB,EAAKmG,EAAMmrE,EAAOpzD,KACxC,CACJ,CACA,cAAAikF,GACI,IAAIqC,EAAU/wI,KAAKswI,WAAW3wG,WAAYqxG,EAAUhxI,KAAKwwI,WAAW7wG,WACpE,GAAI3/B,KAAKywI,UAAYM,GAAW/wI,KAAK0wI,UAAYM,EAC7C,OACJ,MAAM,IAAEzkG,GAAQvsC,KAChB,IAAIumH,EAAMvmH,KAAKowI,WAAW3H,SAAU92F,EAAQ3xC,KAAKowI,WAAWvH,eAAetiB,GAC3E,GAAIA,EAAIxoH,MAAQk8H,GAAkByO,SAAU,CACxC,IAAIlmH,EAAI/U,WAAWsjI,GAAUruH,EAAIjV,WAAWujI,GAC5C,GAAIpwH,MAAM4B,IAAM5B,MAAM8B,IAAM/L,KAAKuF,IAAIsG,GAAK,KAAO7L,KAAKuF,IAAIwG,GAAK,IAC3D,OACJ6pB,EAAI4e,WAAWxZ,EAAM,GAAInvB,EAAGE,EAChC,MACK,GAAI6jG,EAAIxoH,MAAQk8H,GAAkB0O,KAAM,CACzC,GAAI3oI,KAAKywI,UAAYM,EAAS,CAC1B,IAAI7+G,EAAOzkB,WAAWsjI,GACtB,GAAInwH,MAAMsR,IAASvb,KAAKuF,IAAIgW,GAAQ,IAChC,OACJ,IAAI9Z,EAAO,EAAIvB,cAAa,EAAO01B,EAAIC,UACvCp0B,EAAKu5B,EAAM,GAAK,IAAK,EACrB,IAAIs/F,EAAU,CAAE1kG,MAAKy8E,YAAa,EAAGC,YAAa18E,EAAI4H,SAASxC,EAAM,GAAIA,EAAM,IAAK,aAAgBv5B,GAChGyhH,EAAS,IAAIlR,GAAiBsoB,EAASvoB,GAAawF,SAAU,CAAEh8F,SAIpE,OAHA2nG,EAAOpQ,eACHoQ,EAAO5uH,OAAOshC,MACdvsC,KAAKusC,IAAMstF,EAAO5uH,OAAOshC,KAEjC,CACK,GAAIvsC,KAAK0wI,UAAYM,EAAS,CAC/B,IAAI1iB,EAAQ7gH,WAAWujI,GACvB,GAAIpwH,MAAM0tG,GACN,OACJ,IAAIl2G,EAAO,EAAIvB,cAAa,EAAO01B,EAAIC,UACvCp0B,EAAKu5B,EAAM,GAAK,IAAK,EACrB,IAAIs/F,EAAU,CAAE1kG,MAAKy8E,YAAa,EAAGC,YAAa18E,EAAI4H,SAASxC,EAAM,GAAIA,EAAM,IAAKu3E,aAAc9wG,GAC9FyhH,EAAS,IAAIlR,GAAiBsoB,EAASvoB,GAAa0F,WAAY,CAAEE,MAAOA,EAAQ1qG,IAIrF,OAHAi2G,EAAOpQ,eACHoQ,EAAO5uH,OAAOshC,MACdvsC,KAAKusC,IAAMstF,EAAO5uH,OAAOshC,KAEjC,CACJ,MACK,GAAIg6E,EAAIxoH,MAAQk8H,GAAkB6O,QAAS,CAC5C,IAAIxa,EAAQ7gH,WAAWsjI,GACvB,GAAInwH,MAAM0tG,GACN,OACJ,IAAIl2G,EAAO,EAAIvB,cAAa,EAAO01B,EAAIC,UACvC,IAAK,IAAI7yB,KAAKg4B,EACVv5B,EAAKuB,EAAI,IAAK,EAClB,IAAIs3H,EAAU,CAAE1kG,MAAKy8E,YAAar3E,EAAM,GAAIs3E,YAAa,EAAGC,aAAc9wG,GACtEyhH,EAAS,IAAIlR,GAAiBsoB,EAASvoB,GAAa+F,cAAe,CAAEH,MAAOA,EAAQ1qG,IAIxF,OAHAi2G,EAAOpQ,eACHoQ,EAAO5uH,OAAOshC,MACdvsC,KAAKusC,IAAMstF,EAAO5uH,OAAOshC,KAEjC,CACJ,CACA,WAAAoiG,GACI3uI,KAAK2wI,YAAYjE,YACrB,CACA,WAAAkC,GACI5uI,KAAKusC,IAAIgG,aAAavyC,KAAK0yC,KAAM1yC,KAAK4wI,aAAalJ,kBACnD1nI,KAAKusC,IAAIiZ,iBAAiBxlD,KAAK0yC,KAAM1yC,KAAK4wI,aAAahJ,qBAC3D,CACA,iBAAAmI,GACI,GAAItzB,GAAgBE,aAEhB,YADA36E,YAAW,IAAMy6E,GAAgBG,YAAY5/G,MAAK,IAAMgD,KAAK+vI,uBAAsB,GAMvF,GAHA/vI,KAAKiwI,YAAY5wG,QACjBo9E,GAAgB9qG,KAAK4rG,eAAev9G,KAAKusC,KAAK,GAC9CvsC,KAAKytI,WAAahxB,GAAgB9qG,KAAKwrG,cAClCn9G,KAAK0tI,UAAW,CACjB1tI,KAAK0tI,UAAY,GACjB,IAAIpjG,EAASV,GAAaY,qBAAqB,IAC3C4yC,EAAU,IAAIonD,GAAmB,EAAG,EAAGl6F,EAAO5gC,KAAKmgC,YACvD,IAAK,IAAIg0E,KAAU79G,KAAKytI,WAAY,CAChC,IAAIpwD,EAAU,IAAI1yC,GACd4B,EAAMsxE,EAAOpzD,KAAK7uC,QACtByhE,EAAQjyC,aAAe,EAAIr0B,YAAY,EAAGw1B,EAAIC,UAC9C6wC,EAAQhyC,cAAgB,EAAIt0B,YAAY,EAAGw1B,EAAIC,UAC/C,IAAK,IAAI18B,EAAI,EAAGA,GAAKy8B,EAAIC,SAAU18B,IAC3By8B,EAAI2Q,YAAYptC,IAAMm8C,GAAQ2I,oBAC9BroB,EAAI0pB,eAAenmD,EAAG,KACtButE,EAAQjyC,aAAat7B,EAAI,GAAK,GAC9ButE,EAAQhyC,cAAcv7B,EAAI,GAAK,OAEvC,IAAI0iF,EAAS,IAAI3V,GAAgBtwC,EAAK6wC,EAAS9yC,EAAQ+yC,GACvDmV,EAAOpU,UACP,IAAI8qD,EAAM,IAAIlvC,GACd,IAAIoH,GAAa5O,EAAQ02C,GAAKxnC,OAC9BwnC,EAAI/2G,YACJnyB,KAAK0tI,UAAUlxI,KAAK0sI,EAAI/pC,YAC5B,CACA,MAAM,IAAE5yD,EAAG,KAAEmG,GAAS1yC,KACtB,GAAI0yC,EAAO,GAAKuZ,GAAQc,UAAUxgB,EAAKmG,GAAO,CAC1C,IAAI52C,EAAOywC,EAAI2Q,YAAYxK,GAAOw+F,EAAKjlF,GAAQ0M,iBAAiB1M,GAAQwI,UAAUloB,EAAKmG,IACvF,IAAK,IAAI5iC,EAAI,EAAGA,EAAI9P,KAAKytI,WAAW7uI,OAAQkR,IACxC,GAAIhU,GAAQkE,KAAKytI,WAAW39H,GAAGhU,KAAM,CAC7Bo1I,GAAMjlF,GAAQ0M,iBAAiB34D,KAAKytI,WAAW39H,GAAG26C,QAClDzqD,KAAK4tI,cAAgB99H,GACzB,KACJ,CACR,CACJ,CACA,IAAIw1C,EAAK,GAAI,SAASrmB,SAASj/B,KAAKiwI,aACpC3qF,EAAG9lB,WAAW,yBACd8lB,EAAG9lB,WAAW,6BACdx/B,KAAKmxI,cAAgB,GACrBnxI,KAAK2tI,cAAgB,GACrB,IAAI3vB,EAASh+G,KAAK4vI,kBAAkBjwG,WAAW2iB,cAC/C,IAAK,IAAIxyC,EAAI,EAAGA,EAAI9P,KAAKytI,WAAW7uI,OAAQkR,IAAK,CAC7C,GAAI9P,KAAK4tI,eAAiB99H,IAAM9P,KAAKytI,WAAW39H,GAAGsuG,WAAWl9G,SAAS88G,GACnE,SACJ,IAAI50F,EAAQ,CACRk8B,GAAI,GAAI,SAASrmB,SAASj/B,KAAKiwI,aAC/Bp6H,IAAK/F,EACLshI,MAAOpxI,KAAKmxI,cAAcvyI,OAAS,GAAK,EAAI,UAAY,WAE5DwqB,EAAMk8B,GAAGtlB,OAAO,mBAAoBhgC,KAAK4tI,eAAiBxkH,EAAMvT,IAAM2L,EAAWiiB,GAAMK,UAAY1a,EAAMgoH,OACzG,IAAIC,EAAU,GAAI,SAASpyG,SAAS7V,EAAMk8B,IAAKgsF,EAAW,GAAI,SAASryG,SAAS7V,EAAMk8B,IACtF+rF,EAAQ9xG,QAAQv/B,KAAKytI,WAAW39H,GAAGquG,UACnC,GAAIn+G,KAAK0tI,UAAU59H,IAAImvB,SAASqyG,GAAUxuH,IAAI,CAAE,QAAW,QAAS,iBAAkB,SACtFsG,EAAMk8B,GAAGxiC,IAAI,CAAE,OAAU,YACzBsG,EAAMk8B,GAAG5iB,SAAQ,IAAM1iC,KAAKgwI,mBAAmBlgI,KAC/CsZ,EAAMk8B,GAAG1iB,YAAYt7B,GAAUtH,KAAK+tI,iBACpC/tI,KAAKmxI,cAAc30I,KAAK4sB,GACxBppB,KAAK2tI,cAAcnxI,KAAKsT,EAC5B,CACJ,CACA,kBAAAkgI,CAAmBn6H,GACf,GAAI7V,KAAK4tI,eAAiB/3H,EAA1B,CAEA7V,KAAK4tI,cAAgB/3H,EACrB,IAAK,IAAIuT,KAASppB,KAAKmxI,cACnB/nH,EAAMk8B,GAAGtlB,OAAO,mBAAoBhgC,KAAK4tI,eAAiBxkH,EAAMvT,IAAM2L,EAAWiiB,GAAMK,UAAY1a,EAAMgoH,OACrGpxI,KAAK4tI,eAAiBxkH,EAAMvT,KAC5BuT,EAAMk8B,GAAGnkC,GAAGowH,eAAe,CAAE,MAAS,WALpC,CAOd,CACA,iBAAAzB,CAAkBrnE,GACd,IAAI/xD,EAAK1W,KAAK2tI,cAAc/uI,OAC5B,GAAU,GAAN8X,EACA,OACJ,IAAIb,EAAM7V,KAAK2tI,cAAcnzH,QAAQxa,KAAK4tI,eAGlC/3H,EAFJA,EAAM,EACF4yD,EAAM,EACA/xD,EAAK,EAEL,GAGHb,EAAMa,EAAK+xD,GAAO/xD,EAC7B1W,KAAKgwI,mBAAmBhwI,KAAK2tI,cAAc93H,GAC/C,CACA,WAAAm4H,CAAYn4H,GACG,GAAPA,EACA7V,KAAK6uI,YAAY/sG,YACL,GAAPjsB,EACL7V,KAAK4vI,kBAAkB9tG,YACX,GAAPjsB,GACL7V,KAAKswI,WAAWxuG,WACxB,ECrcG,MAAM0vG,WAAiBjP,GAC1B,WAAArlI,CAAYqvC,EAAKud,EAAMivE,EAAWsU,GAC9B3iI,QACA1K,KAAK8pD,KAAOA,EACZ9pD,KAAK+4H,UAAYA,EACjB/4H,KAAKqtI,cAAgBA,EACrBrtI,KAAK6tI,QAAUthG,EACfvsC,KAAKusC,IAAMA,EAAI3wB,QACf5b,KAAKo+C,MAAQ,YACbp+C,KAAKwiI,gBAAkB,GACvBxiI,KAAKyiI,gBAAkB,EAC3B,CACA,QAAAzJ,GACIh5H,KAAK+4H,UAAUiM,YAAY,IAAIP,IAC/B,IAAI76B,EAAU5pG,KAAKqkI,aAAc9+F,EAAOvlC,KAAKokI,UAC7CpkI,KAAK8tI,SAAW,GAAI,gEAAgE7uG,SAAS2qE,GAAS9mF,IAAI,CAAE,cAAe,UAC3H9iB,KAAK8tI,SAASprG,SAAQ,IAAM1iC,KAAK+tI,iBACjC/tI,KAAKwtI,KAAO,IAAI7G,GAAO,CAAC,OAAQ,WAAY,QAAS,UACrD3mI,KAAKwtI,KAAKvmG,OAAO1B,GACjBvlC,KAAKwtI,KAAKpH,UAAUvwH,GAAQ7V,KAAKguI,YAAYn4H,KAC7C7V,KAAKyxI,aAAazxI,KAAKwtI,KAAK1G,YAAY,SACxC9mI,KAAKmuI,iBAAiBnuI,KAAKwtI,KAAK1G,YAAY,aAC5C9mI,KAAKouI,cAAcpuI,KAAKwtI,KAAK1G,YAAY,UACzC9mI,KAAKquI,cAAcruI,KAAKwtI,KAAK1G,YAAY,UACzC,IAAIwH,EAAY/oG,EAAKtH,QAAQ,kBACzBqwG,EAAU1vI,OAAS,GACnB0vI,EAAU,GAAGxsG,WAAU,GAC3B,IAAK,IAAInf,KAAO2rH,EACZ3rH,EAAIG,IAAI,CAAE,KAAQ,YAClBH,EAAIyf,WAAW96B,IACM,SAAbA,EAAMhJ,IACN0B,KAAK+tI,eACa,UAAbzmI,EAAMhJ,IACX0B,KAAKsjI,QACa,UAAbh8H,EAAMhJ,KACX0B,KAAKwtI,KAAKpG,gBAAgB,GAC1BpnI,KAAKguI,YAAYhuI,KAAKwtI,KAAKvH,oBAC3B3+H,EAAMwgG,kBAEY,YAAbxgG,EAAMhJ,MACX0B,KAAKwtI,KAAKpG,eAAe,GACzBpnI,KAAKguI,YAAYhuI,KAAKwtI,KAAKvH,oBAC3B3+H,EAAMwgG,kBAEVxgG,EAAMilG,iBAAiB,GAGnC,CACA,KAAA+2B,GACItjI,KAAK+4H,UAAUkM,aACfv6H,MAAM44H,OACV,CACA,YAAAyK,GACI/tI,KAAKusC,IAAIkrB,eAAgB,EACzBz3D,KAAKuuI,iBAC+B,YAAhCvuI,KAAKwtI,KAAKtH,oBACVlmI,KAAK0uI,iBAC2B,SAAhC1uI,KAAKwtI,KAAKtH,oBACVlmI,KAAK2uI,cAC2B,SAAhC3uI,KAAKwtI,KAAKtH,oBACVlmI,KAAK4uI,cACT5uI,KAAKusC,IAAIkrB,eAAgB,EACrBz3D,KAAKqtI,eACLrtI,KAAKqtI,cAAcrtI,KAC3B,CACA,YAAAyxI,CAAatK,GACT,MAAM,IAAE56F,EAAG,KAAEud,GAAS9pD,KACtB,IAAIgnI,EAAO,GAAI,UAAU/nG,SAASkoG,GAClCH,EAAKlkH,IAAI,CAAE,QAAW,OAAQ,cAAe,SAAU,kBAAmB,UAC1EkkH,EAAKlkH,IAAI,CAAE,eAAgB,QAAS,kBAAmB,UACvDkkH,EAAKlkH,IAAI,CAAE,wBAAyB,qEACpC,GAAI,UAAUmc,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAAc8Z,QAAQ,SACtE,IAAI80G,EAAa,GACjB,IAAK,IAAI9vI,EAAI,EAAGA,GAAK,EAAGA,IACpB8vI,EAAWl1I,KAAK,eAAeoF,iBACnC5B,KAAK2xI,YAAc,IAAIjM,GAAWgM,GAClC1xI,KAAK2xI,YAAYhM,YAAa,EAC9B3lI,KAAK2xI,YAAYlL,iBAAiBl6F,EAAI2H,UAAU4V,IAChD9pD,KAAK2xI,YAAY1qG,OAAO,GAAI,UAAUhI,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAe,cAAe,WAAY,OACrG,GAAI,UAAUmc,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAAc8Z,QAAQ,UACtE58B,KAAK4xI,aAAe,IAAIlM,GAAW,CAAC,OAAQ,KAAM,OAAQ,YAC1D1lI,KAAK4xI,aAAanL,iBAAiBl6F,EAAIupB,SAAShM,IAChD9pD,KAAK4xI,aAAa3qG,OAAO,GAAI,UAAUhI,SAAS+nG,GAAMlkH,IAAI,CAAE,cAAe,cAAe,WAAY,OACtG,GAAI,UAAUmc,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAAc8Z,QAAQ,QACtE58B,KAAK6xI,UAAY,GAAI,qBAAqB5yG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,WAAY,KAAQ,YAChG9iB,KAAK6xI,UAAUz0G,QAAQ00G,UAAW,EAClC9xI,KAAK6xI,UAAUjyG,SAAS2M,EAAII,SAASmd,GAAMp2C,YAC3C,GAAI,UAAUurB,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAAc8Z,QAAQ,MACtE58B,KAAK+xI,QAAU,GAAI,qBAAqB9yG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,WAAY,KAAQ,YAC9F9iB,KAAK+xI,QAAQ30G,QAAQ00G,UAAW,EAChC9xI,KAAK+xI,QAAQnyG,SAAS2M,EAAIM,OAAOid,GAAMp2C,YACvC,GAAI,UAAUurB,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAAc8Z,QAAQ,SACtE58B,KAAKuvI,WAAa,GAAI,qBAAqBtwG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,WAAY,KAAQ,YACjG9iB,KAAKuvI,WAAWnyG,QAAQ00G,UAAW,EACnC9xI,KAAKuvI,WAAW3vG,SAASkqB,EAAKp2C,WAClC,CACA,gBAAAy6H,CAAiBhH,GACb,MAAM,IAAE56F,EAAG,KAAEud,GAAS9pD,KACtB,IAAIkwI,EAAgB,GAAI,UAAUjxG,SAASkoG,GAAOrkH,IAAI,CAAE,aAAc,WAClEqtH,EAAgB,GAAI,UAAUlxG,SAASixG,GAAeptH,IAAI,CAAE,QAAW,iBACvEkkH,EAAO,GAAI,UAAU/nG,SAASkxG,GAClCnJ,EAAKlkH,IAAI,CAAE,QAAW,OAAQ,cAAe,SAAU,kBAAmB,UAC1EkkH,EAAKlkH,IAAI,CAAE,eAAgB,QAAS,kBAAmB,UACvDkkH,EAAKlkH,IAAI,CAAE,wBAAyB,yCACpC9iB,KAAKowI,WAAa,IAAIlI,GAAWlO,GAAexyD,KAAMj7B,EAAKud,GAC3D9pD,KAAKowI,WAAWnpG,OAAO,GAAI,UAAUhI,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,yBAA0B,aAAc,YAC/G,IAAIutH,EAAS,GAAI,UAAUpxG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAC7D9iB,KAAKswI,WAAa,GAAI,mCAAmCrxG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAC3F9iB,KAAKowI,WAAWrK,eAAkBxf,IAC9B,GAAIA,EAAIxoH,MAAQk8H,GAAkB0O,KAAM,CACpC,IAAI5qF,EAAKxR,EAAII,SAASmd,GAAO9L,EAAKzR,EAAIM,OAAOid,GACzC9mC,EAAKupB,EAAI6e,MAAMpN,GAAMzR,EAAI6e,MAAMrN,GAAK96B,EAAKspB,EAAI8e,MAAMrN,GAAMzR,EAAI8e,MAAMtN,GACvEsyF,EAAOzzG,QAAQ,YACf58B,KAAKswI,WAAW1wG,SAAS5/B,KAAKywI,SAAW1tH,EAAQC,EAAIC,GAAIwqD,QAAQ,GACrE,GAEJztE,KAAKowI,WAAWrK,eAAe/lI,KAAKowI,WAAW3H,SACnD,CACA,aAAA2F,CAAcjH,GACVnnI,KAAK2wI,YAAc,IAAIvF,GAAkBprI,KAAKusC,IAAK,EAAGvsC,KAAK8pD,MAC3D9pD,KAAK2wI,YAAY1pG,OAAOkgG,EAC5B,CACA,aAAAkH,CAAclH,GACV,IAAIG,EAAS,IAAItnI,KAAKusC,IAAIkc,UAAUzoD,KAAK8pD,SAAU9pD,KAAKusC,IAAIsY,cAAc7kD,KAAK8pD,OAC/E9pD,KAAK4wI,aAAe,IAAIvJ,GAAkBC,GAC1CtnI,KAAK4wI,aAAa3pG,OAAOkgG,EAC7B,CACA,cAAAoH,GACI,IAAI,IAAEhiG,EAAG,KAAEud,GAAS9pD,KACpBusC,EAAIyoB,aAAalL,EAAM9pD,KAAK2xI,YAAY1L,oBACxC15F,EAAI8qB,YAAYvN,EAAM9pD,KAAK4xI,aAAa3L,mBAC5C,CACA,cAAAyI,GACI,IAAIqC,EAAU/wI,KAAKswI,WAAW3wG,WAC9B,GAAI3/B,KAAKywI,UAAYM,EACjB,OACJ,MAAM,IAAExkG,GAAQvsC,KAChB,IAAIumH,EAAMvmH,KAAKowI,WAAW3H,SAAU92F,EAAQ3xC,KAAKowI,WAAWvH,eAAetiB,GAC3E,GAAIA,EAAIxoH,MAAQk8H,GAAkB0O,MAC1B3oI,KAAKywI,UAAYM,EAAS,CAC1B,IAAI7+G,EAAOzkB,WAAWsjI,GACtB,GAAInwH,MAAMsR,IAASvb,KAAKuF,IAAIgW,GAAQ,IAChC,OACJ,IAAI++G,EAAU,CAAE1kG,MAAKy8E,YAAa,EAAGC,YAAa18E,EAAI4H,SAASxC,EAAM,GAAIA,EAAM,IAAKu3E,aAAc,MAC9F2Q,EAAS,IAAIlR,GAAiBsoB,EAASvoB,GAAawF,SAAU,CAAEh8F,SAGpE,OAFA2nG,EAAOpQ,eACPzpH,KAAKusC,IAAMstF,EAAO5uH,OAAOshC,IAE7B,CAER,CACA,WAAAoiG,GACI3uI,KAAK2wI,YAAY1D,YACrB,CACA,WAAA2B,GACI5uI,KAAKusC,IAAImc,aAAa1oD,KAAK8pD,KAAM9pD,KAAK4wI,aAAalJ,kBACnD1nI,KAAKusC,IAAImrB,iBAAiB13D,KAAK8pD,KAAM9pD,KAAK4wI,aAAahJ,qBAC3D,CACA,WAAAoG,CAAYn4H,GACG,GAAPA,EACA7V,KAAK6xI,UAAU/vG,YACH,GAAPjsB,GACL7V,KAAKswI,WAAWxuG,WACxB,ECjKJ,MAAMkwG,GAAa,IAAIpgE,WAAW,GAAIqgE,GAAY,IAAIrgE,WAAW,GACjE,SAASsgE,GAAiBr8H,GAAO,OAAOrY,OAAOuU,aAAakgI,GAAYt7H,KAAKW,IAAI,GAAIX,KAAKC,IAAI,EAAGf,IAAQ,EAAI,CAC7G,SAASs8H,GAAiBt8H,GAAO,OAAOrY,OAAOuU,aAAaigI,GAAar7H,KAAKW,IAAI,GAAIX,KAAKC,IAAI,EAAGf,IAAQ,EAAI,CACvG,MAAMu8H,WAAoB7P,GAC7B,WAAArlI,CAAYqvC,EAAKoF,EAAOonF,EAAWsU,GAC/B3iI,QACA1K,KAAK2xC,MAAQA,EACb3xC,KAAK+4H,UAAYA,EACjB/4H,KAAKqtI,cAAgBA,EACrBrtI,KAAKqyI,cAAgB,KACrBryI,KAAKsyI,eAAiB,KACtBtyI,KAAKuyI,UAAY,EACjBvyI,KAAKsmD,KAAO,KACZtmD,KAAKwyI,YAAc,GACnBxyI,KAAKyyI,SAAW,GAChBzyI,KAAK+gI,SAAW,GAChB/gI,KAAK6tI,QAAUthG,EACfvsC,KAAKusC,IAAMA,EAAI3wB,QACf5b,KAAKo+C,MAAQ,gBACbp+C,KAAKwiI,gBAAkB,GACvBxiI,KAAKyiI,gBAAkB,GACvBziI,KAAKw2H,QAAU,IAAI3uE,GAAa7nD,KAAKusC,KACrCoF,EAAQ,EAAI73B,OAAO63B,GACnB,IAAK,IAAInxC,KAAMR,KAAKw2H,QAAQvuE,YAAa,CACrC,IAAI5f,EAAOroC,KAAKw2H,QAAQtuE,QAAQ1nD,GAChC,GAAI,EAAI8V,OAAOq7B,EAAOtJ,EAAKsJ,OAAQ,CAC/B3xC,KAAKuyI,UAAY/xI,EACjBR,KAAKsmD,KAAOje,EACZ,KACJ,CACJ,CACKroC,KAAKsmD,OACNtmD,KAAKsmD,KAAO,IAAIgB,GAAiB3V,IAC1B3xC,KAAK0yI,KAAO1yI,KAAKusC,IAAI3wB,QAAhC,IACIxD,EAAO,EAAIvB,cAAa,EAAO7W,KAAK0yI,KAAKlmG,UAC7C,IAAK,IAAI18B,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIE,SAAU38B,IAAK,CACzC,IAAI48B,EAAM1sC,KAAKusC,IAAII,SAAS78B,GAAI88B,EAAM5sC,KAAKusC,IAAIM,OAAO/8B,GAClDy5C,EAAMvpD,KAAK2xC,MAAMzwC,SAASwrC,GAAM8c,EAAMxpD,KAAK2xC,MAAMzwC,SAAS0rC,IAC1D2c,GAAOC,KACPpxC,EAAKs0B,EAAM,GAAKt0B,EAAKw0B,EAAM,IAAK,GAChC2c,IAAQC,IACRxpD,KAAKwyI,YAAYh2I,KAAKkwC,GACtB1sC,KAAKyyI,SAASj2I,KAAKsT,GACnB9P,KAAK+gI,SAASvkI,KAAKowC,IAEnB4c,IAAQD,IACRvpD,KAAKwyI,YAAYh2I,KAAKowC,GACtB5sC,KAAKyyI,SAASj2I,KAAKsT,GACnB9P,KAAK+gI,SAASvkI,KAAKkwC,GAE3B,CACA1sC,KAAKwyI,YAAc,EAAIz4H,aAAa/Z,KAAKwyI,aACzCxyI,KAAK2yI,KAAO,EAAIj6H,QAAQN,GACxBpY,KAAK0yI,KAAOzmF,GAAQrd,aAAa5uC,KAAK0yI,KAAMt6H,GAC5C,IAAIyvC,GAAa7nD,KAAK0yI,MAAM9+F,WAChC,CACA,QAAAolF,GACIh5H,KAAK+4H,UAAUiM,YAAY,IAAIP,IAC/B,IAAI76B,EAAU5pG,KAAKqkI,aAAc9+F,EAAOvlC,KAAKokI,UAC7CpkI,KAAK8tI,SAAW,GAAI,gEAAgE7uG,SAAS2qE,GAAS9mF,IAAI,CAAE,cAAe,UACrG,GAAlB9iB,KAAKuyI,WACLvyI,KAAK8tI,SAASlxG,QAAQ,UAC1B58B,KAAK8tI,SAASprG,SAAQ,IAAM1iC,KAAK+tI,iBAC7B/tI,KAAKuyI,UAAY,IACjBvyI,KAAK4yI,UAAY,GAAI,iEAAiE3zG,SAAS2qE,GAAS9mF,IAAI,CAAE,cAAe,UAC7H9iB,KAAK4yI,UAAUlwG,SAAQ,IAAM1iC,KAAK6yI,iBAEtC,IAAI7L,EAAO,GAAI,UAAU/nG,SAASsG,GAClCyhG,EAAKlkH,IAAI,CAAE,QAAW,OAAQ,cAAe,SAAU,kBAAmB,UAC1EkkH,EAAKlkH,IAAI,CAAE,eAAgB,QAAS,kBAAmB,UACvDkkH,EAAKlkH,IAAI,CAAE,wBAAyB,4EACpC,GAAI,UAAUmc,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAAc8Z,QAAQ,WACtE,IAAIk2G,EAAc,GAAI,qBAAqB7zG,SAAS,GAAI,UAAUA,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,cACpGgwH,EAAY11G,QAAQ00G,UAAW,EAC/BgB,EAAYlzG,SAAS5/B,KAAKsmD,KAAK3U,MAAM/yC,OAAO8U,YAC5C,GAAI,UAAUurB,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,aAAc8Z,QAAQ,aACtE,IAAIm2G,EAAa,GAAI,qBAAqB9zG,SAAS,GAAI,UAAUA,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,cACnGiwH,EAAW31G,QAAQ00G,UAAW,EAC9BiB,EAAWnzG,SAAS5/B,KAAKyyI,SAAS7zI,OAAO8U,YACzC,IAAIiK,EAAM,EACkB,GAAxB3d,KAAKyyI,SAAS7zI,SACd+e,IACA,GAAI,UAAUshB,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,aAAgBif,QAAQ,gBAC3E58B,KAAKqyI,cAAgB,IAAI3M,GAAW,CAAC,UAAW,eAAgB,eAAgB,WAChF1lI,KAAKqyI,cAAcprG,OAAO,GAAI,UAAUhI,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,4BACzE3d,KAAKsmD,KAAKiB,SAAWL,GAAyB+B,WAC9CjpD,KAAKqyI,cAAc5L,iBAAiB,GAC/BzmI,KAAKsmD,KAAKiB,SAAWL,GAAyBgC,WACnDlpD,KAAKqyI,cAAc5L,iBAAiB,GAC/BzmI,KAAKsmD,KAAKiB,SAAWL,GAAyBiC,QACnDnpD,KAAKqyI,cAAc5L,iBAAiB,IAEhB,GAAxBzmI,KAAKyyI,SAAS7zI,QAA2D,GAA5C,EAAIqb,eAAeja,KAAK+gI,UAAUniI,SAC/D+e,IACA,GAAI,UAAUshB,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,aAAgBif,QAAQ,oBAC3E58B,KAAKgzI,gBAAgB,GAAI,UAAU/zG,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,4BAE5E,IAAIs1H,EAAWzyH,IACX,IAAKA,EACD,OAAO,KACX,IAAIiE,EAAO,GACX,IAAK,IAAIgjB,KAAOjnB,EAAImgB,MAAM,KAAM,CAC5B,IAAIhsB,EAAI3C,SAASy1B,GACjB,KAAI9yB,EAAI,GAGJ,OAFA8P,EAAKjoB,KAAKmY,EAGlB,CACA,OAAO8P,CAAI,EAEf,IAAK,IAAI3U,EAAI,EAAGA,EAAI9P,KAAKwyI,YAAY5zI,OAAQkR,IAAK,CAC9C6N,IACA,IAAIu1H,EAAW,GAAI,UAAUj0G,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,WAAc,aAAc,QAAS,gBAAiB,UAC/G,GAAL7N,GACAojI,EAASt2G,QAAQ,SACrB,GAAI,WAAWqC,SAASi0G,GAAUpwH,IAAI,CAAE,MAAS,YAAa8Z,QAAQs1G,GAAiBpiI,EAAI,IAC3F,IAAI9E,EAAQ,GAAI,sBAAsBi0B,SAAS,GAAI,UAAUA,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,wBAA2B,MAAS,UAClI+0B,EAAO1yC,KAAKwyI,YAAY1iI,GACxBqjI,EAAQnzI,KAAKsmD,KAAKmB,SAAShnD,IAAIiyC,GAC/BygG,GACAnoI,EAAM40B,SAASuzG,EAAMr1H,KAAK,MAC9B9S,EAAMo4B,SAAQ,KACV,IAAI3e,EAAOwuH,EAAQjoI,EAAM20B,iBACZ39B,IAATyiB,GACAzkB,KAAKsmD,KAAKmB,SAAS/mD,IAAIgyC,EAAMjuB,EAAK,GAE9C,CACA,IAAK,IAAI3U,EAAI,EAAGA,EAAI9P,KAAK+gI,SAASniI,OAAQkR,IAAK,CAC3C6N,IACA,IAAIu1H,EAAW,GAAI,UAAUj0G,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,WAAc,aAAc,QAAS,gBAAiB,UAC/G,GAAL7N,GACAojI,EAASt2G,QAAQ,SACrB,GAAI,WAAWqC,SAASi0G,GAAUpwH,IAAI,CAAE,MAAS,YAAa8Z,QAAQu1G,GAAiBriI,EAAI,IAC3F,GAAI,UAAUmvB,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,aAAgBif,QAAQ,WAC3E,IAAIw2G,EAAY,GAAI,sBAAsBn0G,SAAS,GAAI,UAAUA,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,WAAc,MAAS,UAC7H,GAAI,UAAUshB,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,aAAgBif,QAAQ,WAC3E,IAAIy2G,EAAY,GAAI,sBAAsBp0G,SAAS,GAAI,UAAUA,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,WAAc,MAAS,UACzHmsC,EAAO9pD,KAAKyyI,SAAS3iI,GACrBwjI,EAAQtzI,KAAKsmD,KAAKoB,SAASjnD,IAAIqpD,GAAOypF,EAAQvzI,KAAKsmD,KAAKqB,SAASlnD,IAAIqpD,GACrEwpF,GACAF,EAAUxzG,SAAS0zG,EAAMx1H,KAAK,MAC9By1H,GACAF,EAAUzzG,SAAS2zG,EAAMz1H,KAAK,MAClCs1H,EAAUhwG,SAAQ,KACd,IAAI3e,EAAOwuH,EAAQG,EAAUzzG,iBAChB39B,IAATyiB,GACAzkB,KAAKsmD,KAAKoB,SAAShnD,IAAIopD,EAAMrlC,EAAK,IAE1C4uH,EAAUjwG,SAAQ,KACd,IAAI3e,EAAOwuH,EAAQI,EAAU1zG,iBAChB39B,IAATyiB,GACAzkB,KAAKsmD,KAAKqB,SAASjnD,IAAIopD,EAAMrlC,EAAK,GAE9C,CACA9G,IACA3d,KAAKwzI,cAAc,GAAI,UAAUv0G,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,yBAA4B,aAAc,YAChHA,IACA3d,KAAKyzI,WAAa,GAAI,UAAUx0G,SAAS+nG,GAAMlkH,IAAI,CAAE,YAAa,GAAGnF,yBAA4B,aAAc,WAC/G3d,KAAK0zI,aACL,IAAIpF,EAAY/oG,EAAKtH,QAAQ,kBACzBqwG,EAAU1vI,OAAS,GACnB0vI,EAAU,GAAGxsG,WAAU,GAC3B,IAAK,IAAInf,KAAO2rH,EACZ3rH,EAAIG,IAAI,CAAE,KAAQ,YAClBH,EAAIyf,WAAW96B,IACX,IAAIqsI,EAAUrsI,EAAMqsI,SAAWrsI,EAAM4iI,MACtB,IAAXyJ,GACA3zI,KAAK+tI,eACM,IAAX4F,GACA3zI,KAAKsjI,OAAO,GAG5B,CACA,KAAAA,GACItjI,KAAK+4H,UAAUkM,aACfv6H,MAAM44H,OACV,CACA,eAAA0P,CAAgBrtG,GACZ,MAAMpqB,EAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAC/F,IAAIq4H,EAAkB,CAAC,MACnBC,EAAa,CAAC,QACdjO,EAAS,EACb,IAAK,IAAIle,KAAQnsG,EAAO,CACpB,IAAIkuC,EAAQ,EAAIpxC,OAAOrY,KAAKyyI,SAAU/qB,GAClC,EAAIpxG,OAAOmzC,EAAOzpD,KAAKsmD,KAAKkB,YAC5Bo+E,EAASiO,EAAWj1I,QACxBg1I,EAAgBp3I,KAAKitD,GACrBoqF,EAAWr3I,KAAK,GAAGkrH,EAAK,GAAK,KAAKA,EAAK,GAAK,KAAKA,EAAK,GAAK,KAAKA,EAAK,GAAK,IAC9E,CACA1nH,KAAKsyI,eAAiB,IAAI5M,GAAWmO,GACrC7zI,KAAKsyI,eAAe7L,iBAAiBb,GACrC5lI,KAAKsyI,eAAerrG,OAAOtB,GAC3B3lC,KAAKsyI,eAAelM,UAAUvwH,IAC1B7V,KAAKsmD,KAAKkB,SAAWosF,EAAgB/9H,GACrC7V,KAAK0zI,YAAY,GAEzB,CACA,aAAAF,CAAc7tG,GACV,IAAImuG,EAAa,GACjB3kE,EAAM,IAAK,IAAIx1D,KAAK3Z,KAAK+gI,SACrB,GAAgC,GAA5B/gI,KAAKusC,IAAIsQ,aAAaljC,IAAsC,KAA3B3Z,KAAKusC,IAAI2Q,YAAYvjC,GAAW,CACjE,IAAK,IAAI2sC,KAAQtmD,KAAKw2H,QAAQruE,WAC1B,GAAI7B,EAAK3U,MAAMzwC,SAASyY,GACpB,SAASw1D,EACjB2kE,EAAWt3I,KAAKmd,EACpB,CACJ,GAAyB,GAArBm6H,EAAWl1I,OACX,OACJ,IAAIm1I,EAAW,GAAI,yEAAyE90G,SAAS0G,GACrGouG,EAASrxG,SAAQ,KACbqxG,EAAS32G,QAAQ+xG,UAAW,EAC5B,IAAK,IAAIx1H,KAAKm6H,EACV9zI,KAAKusC,IAAI0pB,eAAet8C,EAAG,IAAI,GAE3C,CACA,YAAAo0H,GACI,GAAI/tI,KAAKqyI,cAAe,CACpB,IAAI9rB,EAAMvmH,KAAKqyI,cAAcpM,mBAClB,GAAP1f,EACAvmH,KAAKsmD,KAAKiB,QAAU,KACR,GAAPg/D,EACLvmH,KAAKsmD,KAAKiB,QAAUL,GAAyB+B,WACjC,GAAPs9D,EACLvmH,KAAKsmD,KAAKiB,QAAUL,GAAyBgC,WACjC,GAAPq9D,IACLvmH,KAAKsmD,KAAKiB,QAAUL,GAAyBiC,OACrD,CACInpD,KAAKuyI,WACLvyI,KAAKw2H,QAAQjuE,WAAWvoD,KAAKuyI,WACjCvyI,KAAKuyI,UAAYvyI,KAAKw2H,QAAQ7tE,WAAW3oD,KAAKsmD,KAAK1qC,SACnD5b,KAAKw2H,QAAQnkF,kBACbryC,KAAKqtI,cAAcrtI,KACvB,CACA,WAAA6yI,GACQ7yI,KAAKuyI,WACLvyI,KAAKw2H,QAAQjuE,WAAWvoD,KAAKuyI,WACjCvyI,KAAKqtI,cAAcrtI,KACvB,CACA,UAAA0zI,GACI,IAAIhB,EAAO1yI,KAAK0yI,KAAK92H,QACjB0uB,EAASV,GAAaY,qBAAqB,IAC3C4yC,EAAU,IAAIonD,GAAmB,EAAG,EAAGl6F,EAAO5gC,KAAKmgC,YACnDwzC,EAAU,IAAI1yC,GAClB0yC,EAAQjyC,aAAe,EAAIr0B,YAAY,EAAG27H,EAAKlmG,UAC/C6wC,EAAQhyC,cAAgB,EAAIt0B,YAAY,EAAG27H,EAAKlmG,UAChD6wC,EAAQ/xC,aAAe,EAAIt0B,YAAY,KAAM07H,EAAKlmG,UAClD6wC,EAAQ9xC,YAAc,EAAIx0B,YAAY,KAAM27H,EAAKlmG,UACjD6wC,EAAQ7xC,aAAe,EAAIz0B,YAAY,KAAM27H,EAAKlmG,UAClD,IAAIgmG,EAAcxyI,KAAKwyI,YAAYn0I,KAAKq0C,GAAS1yC,KAAK2yI,KAAKjgG,EAAO,GAAK,IACnEquF,EAAW/gI,KAAK+gI,SAAS1iI,KAAKq0C,GAAS1yC,KAAK2yI,KAAKjgG,EAAO,GAAK,IACjE,IAAK,IAAI5iC,EAAI,EAAGA,GAAK4iI,EAAKlmG,SAAU18B,IAAK,CACrC,IAAIwtC,EAAOk1F,EAAYh4H,QAAQ1K,GAAI01G,EAAOub,EAASvmH,QAAQ1K,GACvDwtC,GAAQ,IACR+/B,EAAQ/xC,aAAax7B,EAAI,GAAKoiI,GAAiB50F,EAAO,GACtD+/B,EAAQ9xC,YAAYz7B,EAAI,GAAK,MAC7ButE,EAAQ7xC,aAAa17B,EAAI,GAAK,IAE9B01G,GAAQ,IACRktB,EAAKnlF,cAAcz9C,EAAG,GACtB4iI,EAAKplF,gBAAgBx9C,EAAG,GACxB4iI,EAAKv9E,eAAerlD,EAAG,GACvButE,EAAQjyC,aAAat7B,EAAI,GAAK,GAC9ButE,EAAQhyC,cAAcv7B,EAAI,GAAK,SAC/ButE,EAAQ/xC,aAAax7B,EAAI,GAAKqiI,GAAiB3sB,EAAO,GACtDnoC,EAAQ9xC,YAAYz7B,EAAI,GAAK,QAC7ButE,EAAQ7xC,aAAa17B,EAAI,GAAK,GAC9B4iI,EAAKz8E,eAAenmD,EAAG,KAE/B,CACA,IAAI0iF,EAAS,IAAI3V,GAAgB61D,EAAMt1D,EAAS9yC,EAAQ+yC,GACxDmV,EAAOpU,UACPoU,EAAOjP,YAAY,EAAG,EAAG,IAAK,KAC9B,IAAI2lD,EAAM,IAAIlvC,GACd,GAAIh6F,KAAKsmD,KAAKkB,SAAU,CACpB,MAAMwsF,EAAQ,CACV,CAAC,EAAG,EAAG,SAAU,GAAG,GAAQ,CAAC,EAAG,EAAG,SAAU,GAAG,GAChD,CAAC,EAAG,EAAG,WAAY,GAAG,GAAO,CAAC,EAAG,EAAG,WAAY,GAAG,IAEvD,IAAK,IAAKtrH,EAAIC,EAAIlH,EAAK/K,EAAIu9H,KAAWD,EAAO,CACzC,IAAIj2F,EAAK/9C,KAAK+gI,SAAS/gI,KAAKyyI,SAASj4H,QAAQxa,KAAKsmD,KAAKkB,SAAS9+B,KAC5Ds1B,EAAKh+C,KAAK+gI,SAAS/gI,KAAKyyI,SAASj4H,QAAQxa,KAAKsmD,KAAKkB,SAAS7+B,KAC5DwD,EAAKqmE,EAAOrQ,SAASpkC,EAAK,GAAIJ,EAAK60C,EAAOrQ,SAASnkC,EAAK,GAE5D,GADAkrF,EAAI7jH,SAAS8G,EAAGmM,KAAKpL,GAAIf,EAAGmM,KAAKnL,GAAIwwB,EAAGrlB,KAAKpL,GAAIywB,EAAGrlB,KAAKnL,GAAI1L,EAAK/K,GAC9Du9H,EACA,IAAK,IAAIpkI,IAAK,CAAC,GAAK,GAAK,GAAK,IAAM,CAChC,IAAIm8C,EAAK7/B,EAAGmM,KAAKpL,GAAKrd,GAAK8tC,EAAGrlB,KAAKpL,GAAKf,EAAGmM,KAAKpL,IAAKi/B,EAAKhgC,EAAGmM,KAAKnL,GAAKtd,GAAK8tC,EAAGrlB,KAAKnL,GAAKhB,EAAGmM,KAAKnL,IACjG+7G,EAAI1tC,SAASxvC,EAAIG,EAAI,EAAG,EAAG1qC,EAAK/K,EAAI,KACxC,CAER,CACJ,CACA,IAAI0qF,GAAa5O,EAAQ02C,GAAKxnC,OAC9BwnC,EAAI/2G,YACJnyB,KAAKyzI,WAAWp0G,QAChB,GAAI6pG,EAAI/pC,aAAalgE,SAASj/B,KAAKyzI,YAAY3wH,IAAI,CAAE,iBAAkB,QAC3E,ECnTJ,ICCWoxH,GDDP,GAAwC,SAAUl0H,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAInd,WAAU,SAAU3F,EAASD,GAC/C,SAASijB,EAAUxkB,GAAS,IAAMykB,EAAKF,EAAU7W,KAAK1N,GAAS,CAAE,MAAOiQ,GAAK1O,EAAO0O,EAAI,CAAE,CAC1F,SAASyU,EAAS1kB,GAAS,IAAMykB,EAAKF,EAAiB,MAAEvkB,GAAS,CAAE,MAAOiQ,GAAK1O,EAAO0O,EAAI,CAAE,CAC7F,SAASwU,EAAKlX,GAJlB,IAAevN,EAIauN,EAAOQ,KAAOvM,EAAQ+L,EAAOvN,QAJ1CA,EAIyDuN,EAAOvN,MAJhDA,aAAiBskB,EAAItkB,EAAQ,IAAIskB,GAAE,SAAU9iB,GAAWA,EAAQxB,EAAQ,KAIjBoB,KAAKojB,EAAWE,EAAW,CAC7GD,GAAMF,EAAYA,EAAU9e,MAAM2e,EAASC,GAAc,KAAK3W,OAClE,GACJ,EAaA,MAAM6qI,WAAqB3nC,GACvB,WAAAtvG,CAAY4rH,EAAOsrB,GACf1pI,QACA1K,KAAK8oH,MAAQA,EACb9oH,KAAKo0I,MAAQA,EACbp0I,KAAKq0I,UAAY,KACjBr0I,KAAKs0I,UAAY,IACrB,CACA,IAAAzjD,GACI,IAAIvmD,EAASV,GAAaQ,sBAC1BE,EAAO5gC,KAAKmgC,WAAa,GACzBS,EAAO5gC,KAAKsgC,UAAY,IACxBM,EAAO5gC,KAAKugC,SAAW,IACvB,MAAO,GAAUjqC,UAAM,OAAQ,GAAQ,YACK,GAApCm0I,GAAaI,aAAa31I,eACpBoB,KAAKw0I,oBACG,MAAdx0I,KAAKo0I,MACLp0I,KAAKy0I,mBAELz0I,KAAK00I,kBACb,GAAE,EAPF,EAQJ,CACA,MAAA5sH,GAC0B,MAAlB9nB,KAAKq0I,WAAuC,MAAlBr0I,KAAKs0I,YAEnCt0I,KAAK4pG,QAAU,GACG,MAAd5pG,KAAKo0I,MACLp0I,KAAK20I,iBAEL30I,KAAK40I,oBACb,CACA,cAAAD,GACI,IAAIhjF,EAAS3xD,KAAKq0I,UAAU1iF,OAAQkjF,EAAS70I,KAAKq0I,UAAUQ,OAAQC,EAAU90I,KAAKq0I,UAAUS,QAC7F,IAAK,IAAIhlI,EAAI,EAAGA,EAAI6hD,EAAO/yD,OAAQkR,IAC/B9P,KAAK4pG,QAAQptG,KAAK,CAAEgE,GAAImxD,EAAO7hD,GAAIw7F,QAASwpC,EAAQhlI,GAAIo7F,SAAU2pC,EAAO/kI,IAEjF,CACA,iBAAA8kI,GACI,IAAIhrF,EAAQ5pD,KAAKs0I,UAAU1qF,MAA2EkrF,GAA3D90I,KAAKs0I,UAAUz2B,OAAmB79G,KAAKs0I,UAAUnpC,SAAoBnrG,KAAKs0I,UAAUQ,SAC/H,IAAK,IAAIhlI,EAAI,EAAGA,EAAI85C,EAAMhrD,OAAQkR,IAC9B9P,KAAK4pG,QAAQptG,KAAK,CAAEgE,GAAIsP,EAAE4D,WAAY43F,QAASwpC,EAAQhlI,GAAIo7F,SAAUthD,EAAM95C,IAEnF,CACA,SAAAu8F,CAAU7rG,GACN,GAAkB,MAAdR,KAAKo0I,MACLp0I,KAAKsoG,WAAWF,SAAS,IAAI+rC,GAAan0I,KAAK8oH,MAAOtoH,QAErD,CACD,IAAIqV,EAAM7D,SAASxR,GACfqoH,EAAQ,CAAEuG,WAAYpvH,KAAKs0I,UAAUS,UAAUl/H,IACnD,IAAI8yG,GAAiB3oH,KAAK8oH,MAAM4P,WAAYhQ,GAAarG,eAAgBwG,EAAO7oH,KAAK8oH,OAAOW,SAChG,CACJ,CACA,gBAAA+qB,GACI,OAAO,GAAUx0I,UAAM,OAAQ,GAAQ,YACnC,IAAK,IAAI6I,KAAM2zG,GAAgB,CAC3B,IAAIp2F,EAAMqd,GAAME,aAAe,mBAAqB96B,EAAK,MACrDi0G,QAAc32F,EAAYC,GAC9B+tH,GAAaa,aAAax4I,KAAKqM,GAC/BsrI,GAAaI,aAAa/3I,KAAKg8F,GAAgBC,QAAQqkB,GAC3D,CACJ,GACJ,CACA,gBAAA23B,GACIz0I,KAAKq0I,UAAY,CAAE1iF,OAAQwiF,GAAaa,aAAcH,OAAQ,GAAIC,QAAS,IAC3E,IAAIp+H,EAAK1W,KAAKsoG,WAAWxC,UAAWmvC,EAAM,IAAOv+H,EAAK,GAClD4zB,EAASV,GAAaQ,sBAC1BE,EAAO5gC,KAAKmgC,WAAa,GACzB,IAAIwzC,EAAU,IAAI1yC,GACdyyC,EAAU,IAAIonD,GAAmB,EAAG,EAAGl6F,EAAO5gC,KAAKmgC,YACvD,IAAK,IAAIqgC,KAAMiqE,GAAaI,aAAc,CACtCv0I,KAAKq0I,UAAUQ,OAAOr4I,KAAK0tE,EAAG9rB,OAC9B,IAAIsyB,EAASxG,EAAG1mB,eAAe,YAC3B8nD,EAAU,IAAItR,GAClB,IAAK,IAAIlqF,EAAI,EAAG+F,EAAM,EAAGA,EAAM,GAAK/F,EAAIo6D,EAAGruD,QAAS/L,IAAK,CACrD,IAAIy8B,EAAM29B,EAAG5pB,YAAYxwC,EAAG4gE,GAC5B,GAAIzkB,GAAQ73C,QAAQm4B,GAChB,SACJ,IAAIimD,EAAS,IAAI3V,GAAgBtwC,EAAK6wC,EAAS9yC,EAAQ+yC,GACvDmV,EAAOpU,UACP,IAAI38D,EAAO5L,EAAM,EAAI8H,EAAMhH,KAAK0S,MAAMxT,EAAM,GAC5C28E,EAAOjP,YAAY,EAAI9hE,EAAMwzH,EAAK,EAAIt3H,EAAMs3H,EAAKA,EAAKA,EAAK,GAC3D,IAAI7zC,GAAa5O,EAAQ8Y,GAAS5J,OAClC7rF,GACJ,CACAy1F,EAAQ5rG,MAAQgX,EAChB40F,EAAQ3rG,OAAS+W,EACjB1W,KAAKq0I,UAAUS,QAAQt4I,KAAK8uG,EAChC,CACAtrG,KAAKsoG,WAAWK,aACpB,CACA,gBAAA+rC,GACI,IAAI7+H,EAAMs+H,GAAaa,aAAax6H,QAAQxa,KAAKo0I,OAC7ClqE,EAAKiqE,GAAaI,aAAa1+H,GACnC7V,KAAKs0I,UAAY,CAAES,UAAW,GAAInrF,MAAO,GAAIi0D,OAAQ,GAAI1S,SAAU,GAAI2pC,QAAS,IAChF,IAAIp+H,EAAK1W,KAAKsoG,WAAWxC,UACrBx7D,EAASV,GAAaQ,sBAC1BE,EAAO5gC,KAAKmgC,WAAa,GACzB,IAAIwzC,EAAU,IAAI1yC,GACdyyC,EAAU,IAAIonD,GAAmB,EAAG,EAAGl6F,EAAO5gC,KAAKmgC,YACnD6mC,EAASxG,EAAG/pB,cAAc,YAC1BL,EAAUoqB,EAAG/pB,cAAc,QAC3B48D,EAAY7yC,EAAG/pB,cAAc,UAC7B+0F,EAAchrE,EAAG/pB,cAAc,YACnC,IAAK,IAAIrwC,EAAI,EAAGA,EAAIo6D,EAAGruD,QAAS/L,IAAK,CACjC,IAAIy8B,EAAM29B,EAAG5pB,YAAYxwC,EAAG4gE,GAC5B1wE,KAAKs0I,UAAUS,UAAUv4I,KAAK+vC,EAAI74B,YAClC1T,KAAKs0I,UAAU1qF,MAAMptD,KAAK0tE,EAAG3pB,UAAUzwC,EAAGgwC,IAC1C9/C,KAAKs0I,UAAUz2B,OAAOrhH,KAAK0tE,EAAG3pB,UAAUzwC,EAAGitG,IAC3C/8G,KAAKs0I,UAAUnpC,SAAS3uG,KAAK0tE,EAAG3pB,UAAUzwC,EAAGolI,IAC7C,IAAI1iD,EAAS,IAAI3V,GAAgBtwC,EAAK6wC,EAAS9yC,EAAQ+yC,GACvDmV,EAAOpU,UACPoU,EAAOjP,YAAY,EAAG,EAAG7sE,EAAIA,EAAI,GACjC,IAAI40F,EAAU,IAAItR,GAClB,IAAIoH,GAAa5O,EAAQ8Y,GAAS5J,OAClC4J,EAAQ5rG,MAAQgX,EAChB40F,EAAQ3rG,OAAS+W,EACjB1W,KAAKs0I,UAAUQ,QAAQt4I,KAAK8uG,EAChC,CACAtrG,KAAKsoG,WAAWK,aACpB,EAEJwrC,GAAaa,aAAe,GAC5Bb,GAAaI,aAAe,GAErB,MAAMY,WAAmB3oC,GAC5B,WAAAtvG,CAAY4rH,GACRp+G,QACA1K,KAAK8oH,MAAQA,CACjB,CACA,MAAAhhG,GACI9nB,KAAK4pG,QAAU,GACf5pG,KAAK4pG,QAAQptG,KAAK,CAAEgE,GAAI,SAAU6qG,QAAS,gBAAiBH,SAAU,yBACtElrG,KAAK4pG,QAAQptG,KAAK,CAAEgE,GAAI,OAAQ6qG,QAAS,eAAgBH,SAAU,iCACnElrG,KAAK4pG,QAAQptG,KAAK,CAAEgE,GAAI,OAAQ6qG,QAAS,eAAgBH,SAAU,4BACvE,CACA,SAAAmB,CAAU7rG,GACI,UAANA,EACAR,KAAK8oH,MAAMssB,iBACA,QAAN50I,EACLR,KAAK8oH,MAAMusB,gBAAgB,GAChB,QAAN70I,GACLR,KAAK8oH,MAAMusB,eAAe,EAClC,CACA,UAAA3sC,GACI1oG,KAAK8oH,MAAMwsB,mBACf,GCrKJ,SAAWpB,GACPA,EAAoB,MAAI,QACxBA,EAAqB,OAAI,SACzBA,EAAkB,IAAI,MACtBA,EAAmB,KAAI,OACvBA,EAAqB,OAAI,SACzBA,EAAyB,WAAI,cAC7BA,EAAyB,WAAI,cAC7BA,EAAyB,WAAI,cAC7BA,EAAyB,WAAI,cAC7BA,EAA0B,YAAI,eAC9BA,EAA2B,aAAI,gBAC/BA,EAA2B,aAAI,gBAC/BA,EAAwB,UAAI,YAC5BA,EAAuB,SAAI,WAC3BA,EAAuB,SAAI,WAC3BA,EAAwB,UAAI,YAC5BA,EAAsB,QAAI,QAC1BA,EAAyB,WAAI,UAChC,CAnBD,CAmBGA,KAAiBA,GAAe,CAAC,IACpC,MAAMqB,GAAa,CACf,CAAE/0I,GAAI0zI,GAAasB,MAAOnqC,QAAS,aAAcH,SAAU,kBAAmBC,SAAU,UACxF,CAAE3qG,GAAI0zI,GAAalmB,OAAQ3iB,QAAS,aAAcH,SAAU,wBAAyBC,SAAU,IAC/F,CAAE3qG,GAAI0zI,GAAauB,IAAKpqC,QAAS,UAAWH,SAAU,sCAAuCC,SAAU,IACvG,CAAE3qG,GAAI0zI,GAAawB,KAAMrqC,QAAS,WAAYH,SAAU,wCAAyCC,SAAU,IAC3G,CAAE3qG,GAAI0zI,GAAa7U,OAAQh0B,QAAS,aAAcH,SAAU,sCAAuCC,SAAU,UAC7G,CAAE3qG,GAAI0zI,GAAayB,WAAYtqC,QAAS,WAAYH,SAAU,yCAA0CC,SAAU,UAAW,IAAO,KACpI,CAAE3qG,GAAI0zI,GAAa0B,WAAYvqC,QAAS,UAAWH,SAAU,qCAAsCC,SAAU,UAAW,IAAO,KAC/H,CAAE3qG,GAAI0zI,GAAa2B,WAAYxqC,QAAS,UAAWH,SAAU,qCAAsCC,SAAU,UAAW,IAAO,KAC/H,CAAE3qG,GAAI0zI,GAAa4B,WAAYzqC,QAAS,YAAaH,SAAU,qCAAsCC,SAAU,UAAW,IAAO,KACjI,CAAE3qG,GAAI0zI,GAAa6B,YAAa1qC,QAAS,YAAaH,SAAU,sDAAuDC,SAAU,UAAW,IAAO,KACnJ,CAAE3qG,GAAI0zI,GAAa8B,aAAc3qC,QAAS,SAAUH,SAAU,uCAAwCC,SAAU,UAAW,IAAO,KAClI,CAAE3qG,GAAI0zI,GAAa+B,aAAc5qC,QAAS,WAAYH,SAAU,yCAA0CC,SAAU,UAAW,IAAO,KACtI,CAAE3qG,GAAI0zI,GAAagC,UAAW7qC,QAAS,WAAYH,SAAU,qBAAsBC,SAAU,UAAW,IAAO,KAC/G,CAAE3qG,GAAI0zI,GAAaiC,SAAU9qC,QAAS,WAAYH,SAAU,wBAAyBC,SAAU,UAAW,IAAO,KACjH,CAAE3qG,GAAI0zI,GAAakC,SAAU/qC,QAAS,WAAYH,SAAU,2BAA4BC,SAAU,IAClG,CAAE3qG,GAAI0zI,GAAamC,UAAWhrC,QAAS,YAAaH,SAAU,2BAA4BC,SAAU,IACpG,CAAE3qG,GAAI0zI,GAAaoC,WAAa,IAAK,KAAQ,IAAKprC,SAAU,6BAA8BC,SAAU,IACpG,CAAE3qG,GAAI0zI,GAAaoC,WAAa,IAAK,KAAQ,IAAKprC,SAAU,+BAAgCC,SAAU,IACtG,CAAE3qG,GAAI0zI,GAAaoC,WAAa,IAAK,KAAQ,IAAKprC,SAAU,6BAA8BC,SAAU,IACpG,CAAE3qG,GAAI0zI,GAAaoC,WAAa,IAAK,KAAQ,IAAKprC,SAAU,6BAA8BC,SAAU,IACpG,CAAE3qG,GAAI0zI,GAAaoC,WAAa,IAAK,KAAQ,IAAKprC,SAAU,iCAAkCC,SAAU,IACxG,CAAE3qG,GAAI0zI,GAAaoC,WAAa,IAAK,KAAQ,IAAKprC,SAAU,+BAAgCC,SAAU,IACtG,CAAE3qG,GAAI0zI,GAAaoC,WAAa,IAAK,KAAQ,IAAKprC,SAAU,+BAAgCC,SAAU,IACtG,CAAE3qG,GAAI0zI,GAAaoC,WAAa,KAAM,KAAQ,KAAMprC,SAAU,+BAAgCC,SAAU,IACxG,CAAE3qG,GAAI0zI,GAAaoC,WAAa,KAAM,KAAQ,KAAMprC,SAAU,8BAA+BC,SAAU,IACvG,CAAE3qG,GAAI0zI,GAAaoC,WAAa,IAAK,KAAQ,IAAKprC,SAAU,sBAAuBC,SAAU,KAE1F,MAAMorC,WAAiB/pC,GAC1B,WAAAtvG,CAAY4rH,GACRp+G,QACA1K,KAAK8oH,MAAQA,CACjB,CACA,MAAAhhG,GACI,IAAK,IAAI0vG,KAAO+d,GACZv1I,KAAK4pG,QAAQptG,KAAKg7H,GACtBx3H,KAAKsoG,WAAWO,kBAAkB,QACtC,CACA,SAAAwD,CAAU7rG,GACNR,KAAKsoG,WAAWO,kBAAkBroG,EACtC,CACA,QAAAisG,CAASnlG,GACL,IAAK,IAAIkO,KAAQ+/H,GACb,GAAI/oC,GAAWE,SAASplG,EAAOkO,EAAK21F,SAAU31F,EAAKlX,KAE/C,OADA0B,KAAKqsG,UAAU72F,EAAKhV,KACb,EAGf,OAAO,CACX,ECvEJ,ICqBYg2I,GDrBR,GAAwC,SAAUx2H,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAInd,WAAU,SAAU3F,EAASD,GAC/C,SAASijB,EAAUxkB,GAAS,IAAMykB,EAAKF,EAAU7W,KAAK1N,GAAS,CAAE,MAAOiQ,GAAK1O,EAAO0O,EAAI,CAAE,CAC1F,SAASyU,EAAS1kB,GAAS,IAAMykB,EAAKF,EAAiB,MAAEvkB,GAAS,CAAE,MAAOiQ,GAAK1O,EAAO0O,EAAI,CAAE,CAC7F,SAASwU,EAAKlX,GAJlB,IAAevN,EAIauN,EAAOQ,KAAOvM,EAAQ+L,EAAOvN,QAJ1CA,EAIyDuN,EAAOvN,MAJhDA,aAAiBskB,EAAItkB,EAAQ,IAAIskB,GAAE,SAAU9iB,GAAWA,EAAQxB,EAAQ,KAIjBoB,KAAKojB,EAAWE,EAAW,CAC7GD,GAAMF,EAAYA,EAAU9e,MAAM2e,EAASC,GAAc,KAAK3W,OAClE,GACJ,EAwBA,MAAMmtI,WAAiBvc,GACnB,WAAAh9H,GACIwN,QACA1K,KAAK02I,qBAAuB,KAC5B12I,KAAK22I,UAAW,EAChB32I,KAAK42I,cAAe,EACpB52I,KAAK62I,aAAc,EACnB72I,KAAK82I,eAAgB,EACrB92I,KAAK+2I,gBAAiB,EACtB/2I,KAAKg3I,kBAAmB,EACxBh3I,KAAKi3I,iBAAkB,EACvBj3I,KAAKk3I,mBAAoB,EACzBl3I,KAAKm3I,iBAAcn1I,EACnBhC,KAAKo3I,WAAY,EACjBp3I,KAAKq3I,UAAY,GACjBr3I,KAAKs3I,UAAY,GACjBt3I,KAAKu3I,cAAgB,EACrBv3I,KAAKw3I,SAAW,KAChBx3I,KAAKy3I,YAAc,KACnBz3I,KAAK03I,aAAe,KACpB13I,KAAK+4H,UAAY,KACjB/4H,KAAK23I,UAAY,IACrB,CACA,OAAAl/G,CAAQ/4B,EAAOC,GACXK,KAAKN,MAAQA,EACbM,KAAKL,OAASA,CAClB,CACA,cAAAi4I,CAAerrG,EAAKsrG,GAAgB,EAAMC,GAAgB,EAAOC,GAAa,GAC1E,GAA+B,GAA3BxrG,EAAI91B,UAAUzW,KAAKusC,KAAvB,CAEIurG,GACA93I,KAAKg4I,YACTh4I,KAAKi4I,qBACLj4I,KAAKusC,IAAMA,EAAI3wB,QACX5b,KAAKk4I,wBACLl4I,KAAKk4I,uBAAuBl4I,KAAKusC,KACrCvsC,KAAK66H,WAAa,GAClB,IAAK,IAAI/qH,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IACpC,IAAK,IAAIukD,KAAUlK,GAAW+J,iBAAiBl0D,KAAKusC,IAAKz8B,GACrD9P,KAAK66H,WAAWr+H,KAAK63D,GAExBr0D,KAAKo3I,YAELW,IACD/3I,KAAKgpH,YAAchpH,KAAKipH,YAAc,EACtCjpH,KAAKkpH,aAAe,MAExBlpH,KAAKwkE,OAAS,KACdxkE,KAAKi7H,UAAY,EACjBj7H,KAAKk7H,UAAY,EACZ2c,EAGD73I,KAAKu4H,YAFLv4H,KAAKm4I,iBAtBC,CAyBd,CACA,eAAAC,CAAgBxT,GACZ5kI,KAAK+4H,UAAY6L,CACrB,CACA,aAAAyT,CAAczT,GACV5kI,KAAK23I,UAAY/S,CACrB,CACA,oBAAA0T,CAAqBC,EAAOV,EAAeC,GACvC93I,KAAK43I,eAAe56F,GAAS2D,WAAW43F,GAAQV,EAAeC,EACnE,CACA,kBAAAU,CAAmBluG,GACftqC,KAAKsqC,OAASA,EACdtqC,KAAK6pC,WAAaS,EAAO5gC,KAAKmgC,UAClC,CACA,gBAAA4uG,CAAiBzY,EAAW0Y,EAAWC,GAClB,MAAb3Y,IACAhgI,KAAKmmG,OAAS65B,GACD,MAAb0Y,IACA14I,KAAKw6H,aAAeke,GACX,MAATC,IACA34I,KAAK6jC,WAAa80G,EAC1B,CACA,aAAAC,GAAkB54I,KAAK43I,eAAe,IAAI56F,IAAY,GAAM,EAAO,CACnE,WAAAsD,GAAgB,OAAOtgD,KAAKusC,IAAI3wB,OAAS,CACzC,KAAAi9H,CAAMt4I,GACFP,KAAKo3I,WAAY,EACD,MAAZp3I,KAAKusC,MACLvsC,KAAKusC,IAAM,IAAIyQ,IACA,MAAfh9C,KAAKsqC,SACLtqC,KAAKsqC,OAASV,GAAaY,uBAC3BxqC,KAAK6pC,WAAa7pC,KAAKsqC,OAAO5gC,KAAKmgC,YAEvC7pC,KAAKu9H,iBACLv9H,KAAK84I,kBACL94I,KAAKy9H,mBACDl9H,GACAA,GACR,CACA,UAAAw4I,GACI,OAAO,GAAU/4I,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI+C,SAAS3F,GAAY4C,KAAK64I,OAAM,IAAMz7I,OACrD,GACJ,CACA,MAAA6pC,CAAOnmB,GACHpW,MAAMu8B,OAAOnmB,GACb9gB,KAAK84I,kBACL94I,KAAKunG,SACL,IAAIyxC,EAAgB,EAChBh5I,KAAK+2I,iBACL/2I,KAAKy3I,YAAc,IAAIhyC,GAAWzT,GAAmByK,OAAQ,EAAG,EAAGz8F,KAAKN,MAAOM,KAAKL,QAChFK,KAAKg3I,kBACLh3I,KAAKy3I,YAAYzuC,YACrBhpG,KAAKy3I,YAAYvuC,kBAAiB,GAClClpG,KAAKy3I,YAAYrvC,SAAS,IAAIivB,GAAYr3H,OAC1CA,KAAKy3I,YAAYxwG,OAAOjnC,KAAKqiB,WAC7B22H,EAAgBh5I,KAAKy3I,YAAY93I,QAEjCK,KAAK62I,cACL72I,KAAKw3I,SAAW,IAAI/xC,GAAWzT,GAAmBoK,KAAM,EAAG,EAAGp8F,KAAKN,MAAOM,KAAKL,OAASq5I,GACpFh5I,KAAK82I,eACL92I,KAAKw3I,SAASxuC,YAClBhpG,KAAKw3I,SAAStuC,kBAAiB,GAC/BlpG,KAAKw3I,SAASpvC,SAAS,IAAImuC,GAASv2I,OACpCA,KAAKw3I,SAASvwG,OAAOjnC,KAAKqiB,YAE1BriB,KAAKi3I,kBACLj3I,KAAK03I,aAAe,IAAIjyC,GAAWzT,GAAmBsK,MAAO,EAAG,EAAGt8F,KAAKN,MAAOM,KAAKL,OAASq5I,GACzFh5I,KAAKk3I,mBACLl3I,KAAK03I,aAAa1uC,YACtBhpG,KAAK03I,aAAaxuC,kBAAiB,GACnClpG,KAAK03I,aAAatvC,SAAS,IAAI+rC,GAAan0I,KAAM,OAClDA,KAAK03I,aAAazwG,OAAOjnC,KAAKqiB,YAElCriB,KAAKqiB,UAAUqgB,SAASp7B,GAAUtH,KAAK4nG,WAAWtgG,KAClDtH,KAAKqiB,UAAUugB,YAAYt7B,GAAUtH,KAAK6nG,iBAAiBvgG,KAC3DtH,KAAKqiB,UAAUwgB,aAAav7B,GAAUtH,KAAK+nG,UAAUzgG,KACrDtH,KAAKqiB,UAAUygB,WAAWx7B,GAAUtH,KAAKgoG,QAAQ1gG,KACjDtH,KAAKqiB,UAAU6gB,aAAa57B,GAAUtH,KAAKioG,UAAU3gG,KACrDtH,KAAKqiB,UAAU2gB,cAAc17B,GAAUtH,KAAKkoG,SAAS5gG,KACrDtH,KAAKqiB,UAAU4gB,aAAa37B,GAAUtH,KAAKmoG,UAAU7gG,KACrDtH,KAAKqiB,UAAUkgB,YAAYj7B,GAAUtH,KAAKi5I,WAAW3xI,KACrDtH,KAAKqiB,UAAU+f,WAAW96B,GAAUtH,KAAKk5I,QAAQ5xI,KACjDtH,KAAKqiB,UAAUigB,SAASh7B,GAAUtH,KAAKm5I,MAAM7xI,KAC7CtH,KAAKqiB,UAAUghB,cAAc/7B,GAAUtH,KAAKo5I,WAAW9xI,KACvDtH,KAAKqiB,UAAUihB,aAAah8B,GAAUtH,KAAKq5I,UAAU/xI,KACrDtH,KAAKqiB,UAAUkhB,eAAej8B,GAAUtH,KAAKs5I,YAAYhyI,KACzDtH,KAAKqiB,UAAUmhB,YAAYl8B,GAAUtH,KAAKu5I,SAASjyI,KACnDtH,KAAK8mC,WAAWnE,eAAer7B,GAAUtH,KAAKw5I,YAAYlyI,KAC1DtH,KAAKqiB,UAAUlB,GAAGkhB,iBAAiB,YAAa/6B,IAC5CA,EAAMilG,kBACNjlG,EAAMwgG,iBACNxgG,EAAMmyI,aAAaC,WAAa,MAAM,IAE1C15I,KAAKqiB,UAAUlB,GAAGkhB,iBAAiB,QAAS/6B,IACxCA,EAAMilG,kBACNjlG,EAAMwgG,iBACN9nG,KAAK25I,SAASryI,EAAMmyI,aAAa,IAEjCz5I,KAAK42I,cACL52I,KAAK8hC,WACb,CACA,cAAIs4F,GAAe,OAAOp6H,KAAKm6H,QAAQC,UAAY,CACnD,cAAIA,CAAWA,GAAkBp6H,KAAKm6H,QAAQC,YAAcA,IACxDp6H,KAAKm6H,QAAQC,WAAaA,EAC1Bp6H,KAAKm4I,iBACP,CACF,eAAI9d,GAAgB,OAAOr6H,KAAKm6H,QAAQE,WAAa,CACrD,eAAIA,CAAYA,GAAmBr6H,KAAKm6H,QAAQE,aAAeA,IAC3Dr6H,KAAKm6H,QAAQE,YAAcA,EAC3Br6H,KAAKm4I,iBACP,CACF,aAAI7d,GAAc,OAAOt6H,KAAKm6H,QAAQG,SAAW,CACjD,aAAIA,CAAUA,GAAiBt6H,KAAKm6H,QAAQG,WAAaA,IACrDt6H,KAAKm6H,QAAQG,UAAYA,EACzBt6H,KAAKm4I,iBACP,CACF,iBAAI5d,GAAkB,OAAOv6H,KAAKm6H,QAAQI,aAAe,CACzD,iBAAIA,CAAcA,GAAqBv6H,KAAKm6H,QAAQI,eAAiBA,IACjEv6H,KAAKm6H,QAAQI,cAAgBA,EAC7Bv6H,KAAKm4I,iBACP,CACF,UAAAyB,CAAWl6I,EAAOC,GACd,GAAID,GAASM,KAAKN,OAASC,GAAUK,KAAKL,OAA1C,CAEAK,KAAKN,MAAQA,EACbM,KAAKL,OAASA,EACd,IAAK,IAAIilC,IAAU,CAAC5kC,KAAKqiB,UAAWriB,KAAKy6H,YAAaz6H,KAAK06H,eAAgB16H,KAAK26H,YAC5E/1F,EAAO9hB,IAAI,CAAE,MAAS,GAAGpjB,MAAW,OAAU,GAAGC,QAErD,IAAK,IAAIk6I,IAAQ,CAAC75I,KAAKy3I,YAAaz3I,KAAKw3I,SAAUx3I,KAAK03I,cAChDmC,IACAA,EAAKxyC,cAAc3nG,EAAOC,GAC1Bk6I,EAAKlxC,eAEb3oG,KAAKu4H,WAXK,CAYd,CACA,WAAA3G,CAAYkoB,EAAKC,GAAU,GACvB,IAAI70G,IAAcllC,KAAKu3I,cACvBv3I,KAAK46H,WAAW93G,IAAI,CAAE,MAASi3H,EAAU,UAAY,YACrD/5I,KAAK46H,WAAWh+F,QAAQk9G,GACxB,IAAIE,GAA2B,MAAjBh6I,KAAKw3I,SAAmB,EAAIx3I,KAAKw3I,SAAS93I,OAAS,EAC7Du6I,GAAgC,MAArBj6I,KAAK03I,aAAuB,EAAI13I,KAAK03I,aAAah4I,OAAS,EACtEw6I,GAAgC,MAApBl6I,KAAKy3I,YAAsB,EAAIz3I,KAAKy3I,YAAY93I,QAAU,EAC1EK,KAAK46H,WAAW93G,IAAI,CAAE,KAAQk3H,EAAS,OACvCh6I,KAAK46H,WAAW93G,IAAI,CAAE,MAAU9iB,KAAKN,MAAQs6I,EAASC,EAAW,OACjEj6I,KAAK46H,WAAW93G,IAAI,CAAE,OAAW9iB,KAAKL,OAASu6I,EAAY,OAC3Dt0H,OAAOoc,YAAW,KACVkD,GAAallC,KAAKu3I,eAClBv3I,KAAK46H,WAAWh+F,QAAQ,GAAG,GAChC,IACP,CACA,YAAAu9G,GACqC,IAA7Bn6I,KAAK46H,WAAWl7F,YAEpB1/B,KAAKu3I,gBACLv3I,KAAK46H,WAAWh+F,QAAQ,IAC5B,CACA,SAAA27F,GACIv4H,KAAK6pC,WAAa7pC,KAAKsqC,OAAO5gC,KAAKmgC,WACnC7pC,KAAKu9H,iBACLv9H,KAAK84I,kBACL94I,KAAKy9H,mBACLz9H,KAAKo6I,qBACLp6I,KAAK2rG,eACT,CACA,WAAA0uC,GACI,GAAyB,MAArBr6I,KAAKkpH,aACL,OAAO,EACX,IAAK,IAAIp5G,EAAI,EAAGA,EAAI9P,KAAKkpH,aAAatqH,OAAQkR,IAC1C,GAAI9P,KAAKkpH,aAAap5G,GAClB,OAAO,EACf,OAAO,CACX,CACA,WAAAwqI,CAAY5nG,EAAM6zE,GACd,GAAyB,MAArBvmH,KAAKkpH,aAAsB,CAC3BlpH,KAAKkpH,aAAe,IAAI5pH,MAAMU,KAAKusC,IAAIC,UACvC,IAAK,IAAI18B,EAAI9P,KAAKkpH,aAAatqH,OAAS,EAAGkR,GAAK,EAAGA,IAC/C9P,KAAKkpH,aAAap5G,IAAK,CAC/B,CACA,KAAO9P,KAAKkpH,aAAatqH,OAASoB,KAAKusC,IAAIC,UACvCxsC,KAAKkpH,aAAa1sH,MAAK,GAE3BwD,KAAKkpH,aAAax2E,EAAO,GAAK6zE,EAC9BvmH,KAAK2rG,eACT,CACA,iBAAA4uC,CAAkB7nG,GACV1yC,KAAKgpH,aAAet2E,IAExB1yC,KAAKgpH,YAAct2E,EACnB1yC,KAAKipH,YAAc,EACnBjpH,KAAK2rG,gBACT,CACA,iBAAA6uC,CAAkB1wF,GACV9pD,KAAKipH,aAAen/D,IAExB9pD,KAAKipH,YAAcn/D,EACnB9pD,KAAKgpH,YAAc,EACnBhpH,KAAK2rG,gBACT,CACA,YAAA8uC,GAC4B,GAApBz6I,KAAKgpH,aAAwC,GAApBhpH,KAAKipH,aAAoB,EAAIn0G,SAAS9U,KAAKkpH,gBAExElpH,KAAKgpH,YAAc,EACnBhpH,KAAKipH,YAAc,EACnBjpH,KAAKkpH,aAAe,EAAIryG,cAAa,EAAO7W,KAAKusC,IAAIC,UACrDxsC,KAAK2rG,gBACT,CACA,QAAA+lB,CAASmH,EAAOif,GAAgB,GAC5B93I,KAAKi4I,qBACY,MAAbpf,EAAMtsF,KACNvsC,KAAK43I,eAAe/e,EAAMtsF,IAAI3wB,SAAS,EAAOk8H,GAAe,GAC7Djf,EAAM7P,aAAe,IACrBhpH,KAAKgpH,YAAc6P,EAAM7P,aACzB6P,EAAM5P,aAAe,IACrBjpH,KAAKipH,YAAc4P,EAAM5P,aACH,MAAtB4P,EAAM3P,eACNlpH,KAAKkpH,aAAqC,MAAtB2P,EAAM3P,aAAuB,KAAO2P,EAAM3P,aAAaj6G,MAAM,IACrFjP,KAAK2rG,eACT,CACA,SAAAqsC,GACI,IAAInf,EAAQ74H,KAAK04H,WAEjB,IADA14H,KAAKq3I,UAAU76I,KAAKq8H,GACb74H,KAAKq3I,UAAUz4I,OAAS63I,GAASiE,WACpC16I,KAAKq3I,UAAU/pI,OAAO,EAAG,GAE7BtN,KAAKs3I,UAAY,EACrB,CACA,eAAAjoB,CAAgB9zG,GACZvb,KAAKi8H,cAAgB1gH,EACrBvb,KAAK26I,wBAAwB,GAC7B36I,KAAKm8H,WAAa,IAAIgZ,GAAWn1I,MACjCA,KAAK03I,aAAatvC,SAASpoG,KAAKm8H,YACP,GAArBn8H,KAAKusC,IAAIC,UACTxsC,KAAK84I,iBACb,CACA,kBAAAb,GAC2B,MAAnBj4I,KAAKm8H,YACLn8H,KAAK03I,aAAajvC,SAC1B,CACA,iBAAA6sC,GAC8B,MAAtBt1I,KAAKi8H,gBAETj8H,KAAKi8H,cAAgB,KACrBj8H,KAAK2rG,gBACL3rG,KAAKm8H,WAAa,KACtB,CACA,cAAAiZ,GACI,IAAI7oG,EAAMyQ,GAAS2D,WAAW3gD,KAAKi8H,cAAcj8H,KAAKk8H,aAAa3vF,KACnEvsC,KAAK03I,aAAajvC,UAClBzoG,KAAK43I,eAAerrG,GAAK,GAAO,GAAM,EAC1C,CACA,cAAA8oG,CAAe5sE,GACX,IAAI5yD,GAAO7V,KAAKk8H,YAAczzD,GAAOzoE,KAAKi8H,cAAcr9H,OACpDiX,EAAM,IACNA,GAAO7V,KAAKi8H,cAAcr9H,QAC9BoB,KAAK26I,wBAAwB9kI,EACjC,CACA,OAAAqiH,GAAY,OAAOl4H,KAAKq3I,UAAUz4I,OAAS,CAAG,CAC9C,OAAAw5H,GAAY,OAAOp4H,KAAKs3I,UAAU14I,OAAS,CAAG,CAC9C,WAAAu5H,GACI,GAA6B,GAAzBn4H,KAAKq3I,UAAUz4I,OACf,OACJ,IAAIi6H,EAAQ74H,KAAK04H,WACjB14H,KAAKs3I,UAAU96I,KAAKq8H,GACpB74H,KAAK0xH,SAAS1xH,KAAKq3I,UAAUvpI,OAAO,EACxC,CACA,WAAAuqH,GACI,GAA6B,GAAzBr4H,KAAKs3I,UAAU14I,OACf,OACJ,IAAIi6H,EAAQ74H,KAAK04H,WACjB14H,KAAKq3I,UAAU76I,KAAKq8H,GACpB74H,KAAK0xH,SAAS1xH,KAAKs3I,UAAUxpI,OAAO,EACxC,CACA,WAAAkkH,CAAYzlF,GACHA,IACDA,EAAMvsC,KAAKsgD,eACXtgD,KAAK+4H,WACL/4H,KAAK+4H,UAAU33E,UAAU7U,EAAI74B,WACrC,CACA,oBAAAknI,CAAqBjW,GACjB,IAAIhc,GAAiB3oH,KAAK04H,WAAYiM,EAASjc,GAAasB,IAAMtB,GAAaoB,KAAM,CAAC,EAAG9pH,MAAMypH,SACnG,CACA,YAAA6O,GACI,GAAIt4H,KAAK+4H,WAAa/4H,KAAK+4H,UAAUO,eAAgB,CACjD,IAAIlpD,EAAMpwE,KAAK+4H,UAAUx4E,YACzBvgD,KAAK66I,UAAUzqE,EACnB,CACJ,CACA,eAAA0qE,CAAgBlyB,EAAUC,EAAQ,CAAC,GAC/B,IAAIF,GAAiB3oH,KAAK04H,WAAY9P,EAAUC,EAAO7oH,MAAMypH,SACjE,CACA,IAAA+O,CAAK/gG,GACD,IAAIvK,EAAK,GAAMltB,KAAKN,MAAOytB,EAAK,GAAMntB,KAAKL,OACvCo7I,EAAWpkI,KAAKW,IAAI,GAAKtX,KAAKsqC,OAAO5gC,KAAKmgC,WAAYlzB,KAAKC,IAAI,GAAM5W,KAAKsqC,OAAO5gC,KAAKmgC,WAAY7pC,KAAK6pC,WAAapS,IACpHsjH,GAAY/6I,KAAK6pC,aAErB7pC,KAAKm6F,QAAUjtE,EAAM6tH,EAAW/6I,KAAK6pC,YAAe3c,EAAKltB,KAAKm6F,SAC9Dn6F,KAAKo6F,QAAUjtE,EAAM4tH,EAAW/6I,KAAK6pC,YAAe1c,EAAKntB,KAAKo6F,SAC9Dp6F,KAAK6pC,WAAakxG,EAClB/6I,KAAKu9H,iBACLv9H,KAAKy9H,mBACLz9H,KAAKo6I,qBACLp6I,KAAK2rG,gBACT,CACA,WAAAytB,GACQp5H,KAAKipH,YAAc,EACnBjpH,KAAKg7I,SAASh7I,KAAKipH,aAEnBjpH,KAAKi7I,SAASj7I,KAAKgpH,YAC3B,CACA,SAAA6xB,CAAUr6H,GACN,MAAM06H,EAAa,KACf,IAAI3uG,EAAMqkC,GAAeC,YAAYrwD,GACrC,IAAK+rB,EAAK,CACN,IAAI29B,EAAKsuB,GAAgBC,QAAQj4E,GACjC,GAAI0pD,EACA43C,EAAO,IAAK,IAAI/xG,EAAI,EAAGA,EAAIm6D,EAAGruD,QAAS9L,IACnC,IAAK,IAAIwI,EAAI,EAAGA,EAAI2xD,EAAGpuD,QAASvD,IAC5B,GAAqB,YAAjB2xD,EAAGnqB,QAAQxnC,IAAoB2xD,EAAG9pB,QAAQrwC,EAAGwI,GAAI,CACjDg0B,EAAM29B,EAAG5pB,YAAYvwC,EAAGwI,GACxB,MAAMupG,CACV,CAEhB,CACW,MAAPv1E,EACAvsC,KAAKm7I,cAAc5uG,GAEnBksF,MAAM,+CAA+C,EAEzDz4H,KAAK02I,qBACL,MAAO,GAAU12I,UAAM,OAAQ,GAAQ,YACnC,IAAIusC,QAAYvsC,KAAK02I,qBAAqBl2H,GACtC+rB,EACAvsC,KAAKm7I,cAAc5uG,GAEnB2uG,GACR,GAAE,EANF,GASAA,GACR,CACA,aAAAC,CAAc5uG,GACV,GAAyB,GAArBvsC,KAAKusC,IAAIC,SAET,YADAxsC,KAAK43I,eAAerrG,GAAK,GAAM,GAAM,GAGzC,IAAIstF,EAAS,IAAIlR,GAAiB3oH,KAAK04H,WAAYhQ,GAAaqI,WAAY,CAAEyE,KAAMjpF,IAEpF,GADAstF,EAAOpQ,UACHoQ,EAAO5uH,OAAOshC,IAEd,YADAvsC,KAAK43I,eAAe/d,EAAO5uH,OAAOshC,KAAK,GAAO,GAAM,GAGxD,IAAIs8E,EAAQ,CAAEuG,WAAY7iF,EAAI74B,YAC9B,IAAIi1G,GAAiB3oH,KAAK04H,WAAYhQ,GAAarG,eAAgBwG,EAAO7oH,MAAMypH,SACpF,CACA,uBAAAkxB,CAAwB9kI,GACT7V,KAAKi8H,cAAcpmH,GAC9B7V,KAAKk8H,YAAcrmH,EACnB7V,KAAKo6I,qBACLp6I,KAAK2rG,eACT,CACA,mBAAA2pB,CAAoB3jF,GAChB,IAAIypG,EAAM,IAAIhJ,GAAYpyI,KAAKusC,IAAKoF,EAAO3xC,KAAK+4H,WAAW,KACpB,GAA/B/4H,KAAKusC,IAAI91B,UAAU2kI,EAAI7uG,MACvBvsC,KAAK43I,eAAewD,EAAI7uG,KAAK,GAAO,GAAM,GAC9C6uG,EAAI9X,OAAO,IAEf8X,EAAIpY,cAAgB,KAChBhjI,KAAK22I,UAAW,EAChB32I,KAAK8hC,WAAW,EAEpB9hC,KAAK22I,UAAW,EAChByE,EAAI70H,MACR,CACA,SAAAub,GACI9hC,KAAKqiB,UAAUyf,WACnB,CACA,QAAAF,GACI,OAAO5hC,KAAKqiB,UAAUuf,UAC1B,CACA,eAAAk3G,GACI,GAAyB,GAArB94I,KAAKusC,IAAIC,UAAgC,MAAfxsC,KAAKwyF,OAI/B,OAHAxyF,KAAKm6F,QAAU,GAAMn6F,KAAKN,MAC1BM,KAAKo6F,QAAU,GAAMp6F,KAAKL,YAC1BK,KAAK6pC,WAAa7pC,KAAKsqC,OAAO5gC,KAAKmgC,YAGvC,IAAIs5C,EAASnjF,KAAKwyF,OAAOpP,kBAAkB,GACvCi4D,EAAOr7I,KAAKN,MAAQ,EAAG47I,EAAOt7I,KAAKL,OAAS,EAC5C47I,EAAOp4D,EAAO,GAAKA,EAAO,GAAIq4D,EAAOr4D,EAAO,GAAKA,EAAO,GACxDpkE,EAAQ,EACZ,GAAIw8H,EAAOF,EAAM,CACb,IAAII,EAAOJ,EAAOE,EAClBx8H,GAAS08H,EACTF,GAAQE,EACRD,GAAQC,CACZ,CACA,GAAID,EAAOF,EAAM,CACb,IAAIG,EAAOH,EAAOE,EAClBz8H,GAAS08H,EACTF,GAAQE,EACRD,GAAQC,CACZ,CACI18H,EAAQ,IACR/e,KAAK6pC,YAAc9qB,EACnB/e,KAAKwyF,OAAOvP,iBAAiBjjF,KAAKm6F,QAAUp7E,EAAO/e,KAAKo6F,QAAUr7E,GAClE/e,KAAKwyF,OAAOnP,gBAAgBtkE,GAC5BokE,EAASnjF,KAAKwyF,OAAOpP,kBAAkB,IAE3C,IAAIpgE,EAAK,IAAOq4H,EAAOE,GAAQp4D,EAAO,GAAIlgE,EAAK,IAAOq4H,EAAOE,GAAQr4D,EAAO,GAC5EnjF,KAAKm6F,SAAWn3E,EAChBhjB,KAAKo6F,SAAWn3E,EAChBjjB,KAAKwyF,OAAOvP,iBAAiBjgE,EAAIC,EACrC,CACA,kBAAAm3H,GACI,GAAIp6I,KAAKk8H,YAAc,GAA2B,MAAtBl8H,KAAKi8H,cAC7B,OACJ,IAAIvU,EAAO1nH,KAAKi8H,cAAcj8H,KAAKk8H,aAC/Bwf,EAAU,IAAI9xG,GAAa5pC,KAAKsqC,OAAO5gC,MAC3CgyI,EAAQhyI,KAAKk6B,WAAa,QAC1B83G,EAAQhyI,KAAKygC,SAAWuxG,EAAQhyI,KAAKygC,SAASl7B,MAAM,GACpD,IAAK,IAAIa,KAAK4rI,EAAQhyI,KAAKygC,SACvBuxG,EAAQhyI,KAAKygC,SAASr6B,GAAK,QAC/B,IAAIutE,EAAU,IAAI1yC,GACd6nD,EAAS,IAAI3V,GAAgB7/B,GAAS2D,WAAW+mE,EAAKhhB,SAAU1mG,KAAM07I,EAASr+D,GACnFmV,EAAOpU,UACPspC,EAAKpc,QAAU,IAAItR,GACnB,IAAIoH,GAAa5O,EAAQk1B,EAAKpc,SAAS5J,MAC3C,CACA,cAAAy2C,GACIn4I,KAAKu9H,iBACLv9H,KAAKy9H,mBACLz9H,KAAK2rG,eACT,CACA,gBAAAm2B,CAAiBt/G,EAAGE,GAChB,GAAmB,MAAf1iB,KAAKwyF,OACL,OAAO,EACX,GAAqB,MAAjBxyF,KAAKw3I,SAAkB,CACvB,IAAIx9G,EAAOh6B,KAAKqiB,UAAUC,SAAU2X,EAAOj6B,KAAKw3I,SAAS1wG,WAAWxkB,SACpE,GAAItiB,KAAKw3I,SAASruC,cAAc3mF,EAAIwX,EAAKxX,EAAIyX,EAAKzX,EAAGE,EAAIsX,EAAKtX,EAAIuX,EAAKvX,GACnE,OAAO,IACf,CACA,GAAwB,MAApB1iB,KAAKy3I,YAAqB,CAC1B,IAAIz9G,EAAOh6B,KAAKqiB,UAAUC,SAAU2X,EAAOj6B,KAAKy3I,YAAY3wG,WAAWxkB,SACvE,GAAItiB,KAAKy3I,YAAYtuC,cAAc3mF,EAAIwX,EAAKxX,EAAIyX,EAAKzX,EAAGE,EAAIsX,EAAKtX,EAAIuX,EAAKvX,GACtE,OAAO,IACf,CACA,GAAyB,MAArB1iB,KAAK03I,aAAsB,CAC3B,IAAI19G,EAAOh6B,KAAKqiB,UAAUC,SAAU2X,EAAOj6B,KAAK03I,aAAa5wG,WAAWxkB,SACxE,GAAItiB,KAAK03I,aAAavuC,cAAc3mF,EAAIwX,EAAKxX,EAAIyX,EAAKzX,EAAGE,EAAIsX,EAAKtX,EAAIuX,EAAKvX,GACvE,OAAO,IACf,CACA,OAAOhY,MAAMo3H,iBAAiBt/G,EAAGE,EACrC,CACA,iBAAAi5H,CAAkBn5H,EAAGE,GACjB,IAAIk5H,EAAO57I,KAAKw3I,SAAWx3I,KAAKw3I,SAASzxC,eAAiB,GACtD81C,EAAcD,GAAQA,GAAQ1H,GAAauB,KAAOmG,GAAQ1H,GAAalmB,OACvE8tB,EAAW,EACX97I,KAAK+6H,UAAYjB,GAAakB,MAAQ6gB,IACtCC,EAAW97I,KAAK4hI,WAAWp/G,EAAGE,IAElC,IAAIq5H,EAAYD,EAAW,EAAIA,EAAW,EAAGE,EAAYF,EAAW,GAAKA,EAAW,EAChFG,EAAaj8I,KAAKi7H,UAAY,GAAKhvE,GAAQc,UAAU/sD,KAAKusC,IAAKvsC,KAAKi7H,WAAaj7H,KAAKi7H,UAAY,EAClGihB,EAAYH,EAAY,GAAK9vF,GAAQc,UAAU/sD,KAAKusC,IAAKwvG,GAAaA,EAAY,EAClFA,GAAa/7I,KAAKi7H,WAAa+gB,GAAah8I,KAAKk7H,YACjDl7H,KAAKi7H,UAAY8gB,EACjB/7I,KAAKk7H,UAAY8gB,EACbC,GAAcC,IACdl8I,KAAKu9H,iBACLv9H,KAAKy9H,oBAETz9H,KAAK2rG,gBAEb,CACA,kBAAAwwC,CAAmB15F,GACf,GAAmB,GAAfziD,KAAKm7H,QAAqD,GAAtCn7H,KAAKusC,IAAIsQ,aAAa78C,KAAKm7H,QAAc,CAC7D,IAAI57G,EAAI,CACJmzB,KAAM1yC,KAAKm7H,OACX7mE,OAAQ,CAAC7R,GACTjgC,EAAG,GACHE,EAAG,GACHq8G,QAAwB,GAAf/+H,KAAKm7H,OAAcn7H,KAAK47H,OAAS57H,KAAK6+E,OAAO7+E,KAAKusC,IAAI6e,MAAMprD,KAAKm7H,SAC1E6D,QAAwB,GAAfh/H,KAAKm7H,OAAcn7H,KAAK67H,OAAS77H,KAAK8+E,OAAO9+E,KAAKusC,IAAI8e,MAAMrrD,KAAKm7H,SAC1E8D,MAAO,GACPC,MAAO,IAEPlzE,EAAoB,GAAfhsD,KAAKm7H,OAAcn7H,KAAKm9H,OAAOn9H,KAAK47H,QAAU57H,KAAKusC,IAAI6e,MAAMprD,KAAKm7H,QACvEhvE,EAAoB,GAAfnsD,KAAKm7H,OAAcn7H,KAAKo9H,OAAOp9H,KAAK67H,QAAU77H,KAAKusC,IAAI8e,MAAMrrD,KAAKm7H,QAC3E,IAAK,IAAIrrH,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIqU,EAAQV,EAAQ3T,EAAI,GACpBkT,EAAKg6B,GAASsN,UAAY3zC,KAAK2a,IAAInN,GAAQlB,EAAK+5B,GAASsN,UAAY3zC,KAAK4a,IAAIpN,GAClF5E,EAAEiD,EAAEhmB,KAAKwvD,EAAKhpC,GACdzD,EAAEmD,EAAElmB,KAAK2vD,EAAKlpC,GACd1D,EAAE0/G,MAAMziI,KAAK+iB,EAAEw/G,QAAU/7G,EAAKhjB,KAAK6pC,YACnCtqB,EAAE2/G,MAAM1iI,KAAK+iB,EAAEy/G,QAAU/7G,EAAKjjB,KAAK6pC,WACvC,CACA,MAAO,CAACtqB,EACZ,CACA,GAAuB,MAAnBvf,KAAK66H,WACL,OAAO,KACX,IAAI7mF,EAAO,KAAMooG,EAAS,KAC1B,IAAK,IAAItsI,EAAI,EAAGA,EAAI9P,KAAK66H,WAAWj8H,OAAQkR,IAAK,CAC7C,IAAIyP,EAAIvf,KAAK66H,WAAW/qH,GACxB,GAAIyP,EAAEmzB,MAAQ1yC,KAAKm7H,OAAnB,CAEA,GAAI57G,EAAE+0C,OAAO95C,QAAQioC,IAAU,EAAG,CAC9BzO,EAAOz0B,EACP,KACJ,CACIA,EAAE+0C,OAAO95C,QAAQ,IAAM,IACvB4hI,EAAS78H,EAND,CAOhB,CAGA,GAFY,MAARy0B,IACAA,EAAOooG,GACC,MAARpoG,EACA,MAAO,GACX,IAAIz0B,EAAI3D,EAAMo4B,GACdz0B,EAAEw/G,QAAU/+H,KAAK6+E,OAAO7+E,KAAKusC,IAAI6e,MAAM7rC,EAAEmzB,OACzCnzB,EAAEy/G,QAAUh/H,KAAK8+E,OAAO9+E,KAAKusC,IAAI8e,MAAM9rC,EAAEmzB,OACzCnzB,EAAE0/G,MAAQ,GACV1/G,EAAE2/G,MAAQ,GACV,IAAK,IAAIpvH,EAAI,EAAGA,EAAIyP,EAAEiD,EAAE5jB,OAAQkR,IAC5ByP,EAAE0/G,MAAMziI,KAAKwD,KAAK6+E,OAAOt/D,EAAEiD,EAAE1S,KAC7ByP,EAAE2/G,MAAM1iI,KAAKwD,KAAK8+E,OAAOv/D,EAAEmD,EAAE5S,KAEjC,MAAO,CAACyP,EACZ,CACA,kBAAA88H,GACI,IAAIznB,EAAO50H,KAAKw/H,cAAa,GAAO,GACpC,GAAmB,GAAf5K,EAAKh2H,QAAeg2H,EAAKh2H,QAAUoB,KAAKusC,IAAIC,SAC5C,OAAO,KACX,IAAI8vG,EAAS,GACb,IAAK,IAAIxsI,EAAI,EAAGA,EAAI9P,KAAK66H,WAAWj8H,OAAQkR,IAAK,CAC7C,IAAIyP,EAAIvf,KAAK66H,WAAW/qH,GACxB,KAAIyP,EAAE+0C,OAAO95C,QAAQ,GAAK,GAAKo6G,EAAKp6G,QAAQ+E,EAAEmzB,OAAS,GAAvD,CAEAnzB,EAAI3D,EAAM2D,GACVA,EAAEw/G,QAAU/+H,KAAK6+E,OAAO7+E,KAAKusC,IAAI6e,MAAM7rC,EAAEmzB,OACzCnzB,EAAEy/G,QAAUh/H,KAAK8+E,OAAO9+E,KAAKusC,IAAI8e,MAAM9rC,EAAEmzB,OACzCnzB,EAAE0/G,MAAQ,GACV1/G,EAAE2/G,MAAQ,GACV,IAAK,IAAIn1H,EAAI,EAAGA,EAAIwV,EAAEiD,EAAE5jB,OAAQmL,IAC5BwV,EAAE0/G,MAAMziI,KAAKwD,KAAK6+E,OAAOt/D,EAAEiD,EAAEzY,KAC7BwV,EAAE2/G,MAAM1iI,KAAKwD,KAAK8+E,OAAOv/D,EAAEmD,EAAE3Y,KAEjCuyI,EAAO9/I,KAAK+iB,EAVA,CAWhB,CACA,OAAO+8H,CACX,CACA,QAAArB,CAASvoG,GACL,IAAI0oG,EAAM,IAAIhO,GAASptI,KAAKusC,IAAKmG,EAAM1yC,KAAK+4H,WAAW,KAChB,GAA/B/4H,KAAKusC,IAAI91B,UAAU2kI,EAAI7uG,MACvBvsC,KAAK43I,eAAewD,EAAI7uG,KAAK,GAAO,GAAM,GAC9C6uG,EAAI9X,OAAO,IAMf,GAJA8X,EAAIpY,cAAgB,KAChBhjI,KAAK22I,UAAW,EAChB32I,KAAK8hC,WAAW,EAER,GAAR4Q,GAAa1yC,KAAKusC,IAAIC,SAAW,EAAG,CACpC,IAAI7S,EAAM35B,KAAKusC,IAAI8d,WACnB+wF,EAAI9N,KAAO3zG,EAAI9P,OAASmzB,GAASsN,UACjC8wF,EAAI7N,KAAO5zG,EAAIhB,MACnB,CACA34B,KAAK22I,UAAW,EAChByE,EAAI70H,MACR,CACA,QAAAy0H,CAASlxF,GACL,GAAY,GAARA,EACA,OACJ,IAAIsxF,EAAM,IAAI5J,GAASxxI,KAAKusC,IAAKud,EAAM9pD,KAAK+4H,WAAW,KAChB,GAA/B/4H,KAAKusC,IAAI91B,UAAU2kI,EAAI7uG,MACvBvsC,KAAK43I,eAAewD,EAAI7uG,KAAK,GAAO,GAAM,GAC9C6uG,EAAI9X,OAAO,IAEf8X,EAAIpY,cAAgB,KAChBhjI,KAAK22I,UAAW,EAChB32I,KAAK8hC,WAAW,EAEpB9hC,KAAK22I,UAAW,EAChByE,EAAI70H,MACR,CACA,WAAAg2H,CAAYv5H,EAAIC,GACZ,IAAIiiB,IAAcllC,KAAKo8H,gBACvBp8H,KAAKq8H,UAAYr5G,EACjBhjB,KAAKs8H,UAAYr5G,EACjB+e,YAAW,KACHkD,GAAallC,KAAKo8H,iBAClBp8H,KAAKw8I,qBAAqB,GAC/B,IACP,CACA,mBAAAA,GACI,IAAIr4H,EAAQxN,KAAKue,MAAMl1B,KAAKs8H,SAAUt8H,KAAKq8H,UACvCr8H,KAAKgpH,YAAc,EACnBhpH,KAAKy8I,oBAAoBt4H,GACpBnkB,KAAKipH,YAAc,EACxBjpH,KAAK08I,oBAAoBv4H,GAEzBnkB,KAAK28I,gBAAgBx4H,GACzBnkB,KAAKq8H,SAAW,EAChBr8H,KAAKs8H,SAAW,EAChBt8H,KAAKo8H,gBAAkB,CAC3B,CACA,mBAAAqgB,CAAoBt4H,GAChB,IAAIqsB,EAAMxwC,KAAKusC,IAAI8c,YAAYrpD,KAAKgpH,aAChCzqF,EAAU,EAAGq+G,EAAer/I,OAAOga,UACvC,IAAK,IAAIoC,KAAK62B,EAAK,CACf,IAAIxtB,EAAKhjB,KAAKusC,IAAI6e,MAAMzxC,GAAK3Z,KAAKusC,IAAI6e,MAAMprD,KAAKgpH,aAAc/lG,EAAKjjB,KAAKusC,IAAI8e,MAAM1xC,GAAK3Z,KAAKusC,IAAI8e,MAAMrrD,KAAKgpH,aACxG6zB,EAAWlmI,KAAKue,MAAMjS,EAAID,GAAK2N,EAAQha,KAAKuF,IAAI8H,EAAU64H,EAAU14H,IACpEwM,EAAQ,GAAO/M,GAAU+M,EAAQisH,KAChCr+G,EAASq+G,GAAgB,CAACjjI,EAAGgX,GACtC,CACA,GAAI4N,EAAU,EAEV,YADAv+B,KAAKw6I,kBAAkBx6I,KAAKusC,IAAI4H,SAASn0C,KAAKgpH,YAAazqF,IAG/D,IAAIyV,EAAO,EAAGzf,EAAYh3B,OAAOia,UACjC,IAAK,IAAI1H,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IACpC,GAAIA,GAAK9P,KAAKgpH,aAAex4E,EAAIh2B,QAAQ1K,GAAK,EAAG,CAC7C,IAAIkT,EAAKhjB,KAAKusC,IAAI6e,MAAMt7C,GAAK9P,KAAKusC,IAAI6e,MAAMprD,KAAKgpH,aAAc/lG,EAAKjjB,KAAKusC,IAAI8e,MAAMv7C,GAAK9P,KAAKusC,IAAI8e,MAAMrrD,KAAKgpH,aACxG6zB,EAAWlmI,KAAKue,MAAMjS,EAAID,GAAK2N,EAAQha,KAAKuF,IAAI8H,EAAU64H,EAAU14H,IACxE,GAAIwM,EAAQ,GAAO/M,EACf,SACJ,IAAIk5H,EAAWnmI,KAAK2a,IAAIX,GACpBi6B,EAAQj0C,KAAK8H,IAAIq+H,EAAU,IAAM,EAAS95H,EAAIC,GAAM,MACpD2nC,EAAQr2B,KACPyf,EAAMzf,GAAa,CAACzkB,EAAG86C,GAChC,CACA5W,EAAO,GACPh0C,KAAKu6I,kBAAkBvmG,EAC/B,CACA,mBAAA0oG,CAAoBv4H,GAChB,IAAKuoB,EAAKE,GAAO5sC,KAAKusC,IAAI0mC,WAAWjzE,KAAKipH,aACtC8zB,EAAYpmI,KAAKue,MAAMl1B,KAAKusC,IAAI8e,MAAMze,GAAO5sC,KAAKusC,IAAI8e,MAAM3e,GAAM1sC,KAAKusC,IAAI6e,MAAMxe,GAAO5sC,KAAKusC,IAAI6e,MAAM1e,IACvG/1B,KAAKuF,IAAI8H,EAAUG,EAAO44H,IAAc,GAAOn5H,GAC/C5jB,KAAKu6I,kBAAkB3tG,GACvBj2B,KAAKuF,IAAI8H,EAAUG,EAAO44H,EAAYpmI,KAAK+M,KAAO,GAAOE,GACzD5jB,KAAKu6I,kBAAkB7tG,EAC/B,CACA,eAAAiwG,CAAgBx4H,GACZ,GAAyB,GAArBnkB,KAAKusC,IAAIC,SACT,OACJ,GAAyB,GAArBxsC,KAAKusC,IAAIC,SAET,YADAxsC,KAAKu6I,kBAAkB,GAG3B,IAAIrtH,EAAK,EAAGC,EAAK,EACjB,IAAK,IAAIrd,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IACpCod,GAAMltB,KAAKusC,IAAI6e,MAAMt7C,GACrBqd,GAAMntB,KAAKusC,IAAI8e,MAAMv7C,GAEzB,IAAIuiB,EAAM,EAAMryB,KAAKusC,IAAIC,SACzBtf,GAAMmF,EACNlF,GAAMkF,EACN,IAAI2hB,EAAO,EAAGzf,EAAYh3B,OAAOia,UACjC,IAAK,IAAI1H,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IAAK,CACzC,IAAIkT,EAAKhjB,KAAKusC,IAAI6e,MAAMt7C,GAAKod,EAAIjK,EAAKjjB,KAAKusC,IAAI8e,MAAMv7C,GAAKqd,EAAI6vH,EAASrmI,KAAKue,MAAMjS,EAAID,GAElF4nC,EADWj0C,KAAK2a,IAAI3a,KAAKuF,IAAI8H,EAAUG,EAAQxN,KAAK+M,GAAIs5H,KACrCj6H,EAAQC,EAAIC,GAC/B2nC,EAAQr2B,KACPyf,EAAMzf,GAAa,CAACzkB,EAAG86C,GAChC,CACI5W,EAAO,GACPh0C,KAAKu6I,kBAAkBvmG,EAC/B,CACA,UAAAX,CAAWmgB,EAAK07D,GACZ,MAAM,IAAE3iF,GAAQvsC,KAChB,IAAIysB,EAAK,KAAMC,EAAK,KACpB,GAAI1sB,KAAKgpH,YAAc,EAAG,CACtB,IAAIhmG,EAAK,EAAGC,EAAK,EAAGutB,EAAMjE,EAAI8c,YAAYrpD,KAAKgpH,aAC3Ch2D,EAAKzmB,EAAI6e,MAAMprD,KAAKgpH,aAAc/1D,EAAK1mB,EAAI8e,MAAMrrD,KAAKgpH,aAC1D,IAAK,IAAIrvG,KAAK62B,EACVxtB,GAAMupB,EAAI6e,MAAMzxC,GAAKq5C,EACrB/vC,GAAMspB,EAAI8e,MAAM1xC,GAAKs5C,EAEzB,GAAIt8C,KAAKuF,IAAI8G,GAAM,MAASrM,KAAKuF,IAAI+G,GAAM,KACvC,GAAIutB,EAAI5xC,QAAU,EAAG,CACjB,IAAIulB,EAAQqsB,EAAInyC,KAAKsb,GAAMhD,KAAKue,MAAMqX,EAAI8e,MAAM1xC,GAAKq5C,EAAIzmB,EAAI6e,MAAMzxC,GAAKs5C,KACxE,EAAIv5C,KAAKyK,GACT,IAAI6vB,EAAOz2C,OAAO4sB,kBAClB,IAAK,IAAIra,EAAI,EAAGA,EAAIqU,EAAMvlB,OAAQkR,IAAK,CACnC,IAAIgU,EAAKE,EAAUG,GAAOrU,EAAI,GAAKqU,EAAMvlB,QAASulB,EAAMrU,IACpDgwG,EAAKnpG,KAAK2a,IAAIxN,GAAKi8F,EAAKppG,KAAK4a,IAAIzN,GAAK8mC,EAAQiB,GAAU2F,gBAAgBjlB,EAAKymB,EAAK8sD,EAAI7sD,EAAK8sD,GAC3Fn1D,EAAQ5W,KACPA,EAAMhxB,EAAIC,GAAM,CAAC2nC,EAAOk1D,EAAIC,GACrC,CACJ,MAEK/8F,EAAIC,GAAM,CAAC,EAAG,IAEtBwJ,EAAIC,GAAMy9B,GAAWwJ,gBAAgB3zD,KAAKusC,IAAKinB,EAAKxzD,KAAKgpH,YAAahmG,EAAIC,EAC/E,MACK,GAAIjjB,KAAKipH,YAAc,EAAG,CAC3B,IAAIlrE,EAAKxR,EAAII,SAAS3sC,KAAKipH,aAAcjrE,EAAKzR,EAAIM,OAAO7sC,KAAKipH,aAC1DtkG,EAAK4nB,EAAI6e,MAAMrN,GAAKn5B,EAAK2nB,EAAI8e,MAAMtN,GAAKl5B,EAAK0nB,EAAI6e,MAAMpN,GAAKl5B,EAAKynB,EAAI8e,MAAMrN,GAC3E9wB,EAAK,IAAOvI,EAAKE,GAAKsI,EAAK,IAAOvI,EAAKE,GAAKwmC,EAAK1mC,EAAKE,EAAIymC,EAAK1mC,EAAKF,GACnE3B,EAAIC,GAAM4oC,GAAU2F,gBAAgBjlB,EAAKrf,EAAKo+B,EAAIn+B,EAAKo+B,GAAMM,GAAU2F,gBAAgBjlB,EAAKrf,EAAKo+B,EAAIn+B,EAAKo+B,GAAM,EAAED,GAAKC,GAAM,CAACD,EAAIC,IACtI9+B,EAAIC,GAAMy9B,GAAW4J,gBAAgB/zD,KAAKusC,IAAKinB,EAAKxzD,KAAKipH,YAAajmG,EAAIC,EAC/E,KACK,CACD,IAAIT,EAAI,EAAGE,EAAI,EACf,GAAI6pB,EAAIC,SAAW,EAAG,CAClB,IAAIsrD,EAAQvrD,EAAI8d,YACf7nC,EAAGE,GAAK,CAACo1E,EAAMjuE,OAASmzB,GAASsN,UAAWwtC,EAAMn/D,OACvD,EACClM,EAAIC,GAAMy9B,GAAWoJ,eAAevzD,KAAKusC,IAAKinB,EAAKhxC,EAAGE,EAAG,GAAI,GAAG,EACrE,CACA,IAAK+J,EACD,OACJ,IAAIo8F,EAAQ,CACRmG,MAAOviG,EACPwiG,MAAOviG,EACPwiG,SAAUA,GAED,IAAIvG,GAAiB3oH,KAAK04H,WAAYhQ,GAAaoG,KAAMjG,EAAO7oH,MACtEypH,SACX,CACA,YAAAwzB,CAAaj6H,EAAIC,GACb,IAAIiiB,IAAcllC,KAAKo8H,gBACvBp8H,KAAKq8H,UAAYr5G,EACjBhjB,KAAKs8H,UAAYr5G,EACjB+e,YAAW,KACHkD,GAAallC,KAAKo8H,kBAClBp8H,KAAKk9I,gBAAgBl9I,KAAKq8H,SAAUr8H,KAAKs8H,UACzCt8H,KAAKq8H,SAAWr8H,KAAKs8H,SAAW,EACpC,GACD,IACP,CACA,eAAA4gB,CAAgB/mE,EAAQC,GACpB,IAAIuyC,GAAiB3oH,KAAK04H,WAAYhQ,GAAa6I,gBAAiB,CAAEp7C,SAAQC,UAAUp2E,MAAMypH,SAClG,CACA,UAAA7hB,CAAWtgG,GAGP,OAFAA,EAAMilG,kBACNvsG,KAAK8hC,aACE,CACX,CACA,gBAAA+lE,CAAiBvgG,GAGb,GAFAA,EAAMilG,kBACNjlG,EAAMwgG,iBACF9nG,KAAKw3I,SAASzxC,gBAAkBmuC,GAAasB,MAC7C,OACJ,IAAI5vD,EAAK,EAAYt+E,EAAOtH,KAAKqiB,WAC7B86H,EAAWn9I,KAAK4hI,WAAWh8C,EAAG,GAAIA,EAAG,IACzC,GAAIu3D,EAAW,EAAG,CACd,IAAIzqG,EAAOyqG,EACXn9I,KAAKi7I,SAASvoG,EAClB,KACK,CACD,IAAIoX,GAAQqzF,EACZn9I,KAAKg7I,SAASlxF,EAClB,CACA,OAAO,CACX,CACA,SAAAi+C,CAAUzgG,GAIN,GAHAA,EAAMilG,kBACNjlG,EAAMwgG,iBACN9nG,KAAKm6I,eACD7yI,EAAM2lG,UAAY3lG,EAAM0lG,WAAa1lG,EAAM4lG,OAE3C,YADAltG,KAAKw5I,YAAYlyI,GAGrB,IAAKkb,EAAGE,GAAK,EAAYpb,EAAOtH,KAAKqiB,WAErC,OADAriB,KAAKo9I,cAAc56H,EAAGE,EAAGpb,EAAM0lG,SAAU1lG,EAAM2lG,QAAS3lG,EAAM4lG,SACvD,CACX,CACA,OAAAlF,CAAQ1gG,GACJA,EAAMilG,kBACN,IAAK/pF,EAAGE,GAAK,EAAYpb,EAAOtH,KAAKqiB,WAErC,OADAriB,KAAKq9I,YAAY76H,EAAGE,IACb,CACX,CACA,SAAAulF,CAAU3gG,GACNA,EAAMilG,kBACN,IAAK/pF,EAAGE,GAAK,EAAYpb,EAAOtH,KAAKqiB,WAGrC,OAFAriB,KAAK27I,kBAAkBn5H,EAAGE,GAC1B1iB,KAAK8/H,YAAYt9G,EAAGE,IACb,CACX,CACA,QAAAwlF,CAAS5gG,GACLA,EAAMilG,kBACN,IAAK/pF,EAAGE,GAAK,EAAYpb,EAAOtH,KAAKqiB,WAGrC,OAFAriB,KAAK27I,kBAAkBn5H,EAAGE,GAC1B1iB,KAAK8/H,YAAYt9G,EAAGE,IACb,CACX,CACA,SAAAylF,CAAU7gG,GACNA,EAAMilG,kBACN,IAAK/pF,EAAGE,GAAK,EAAYpb,EAAOtH,KAAKqiB,WAErC,GADAriB,KAAK27I,kBAAkBn5H,EAAGE,GACtB1iB,KAAK+6H,UAAYjB,GAAakB,KAGlC,OADAh7H,KAAKs9I,aAAa96H,EAAGE,IACd,CACX,CACA,UAAAu2H,CAAW3xI,GACX,CACA,OAAA4xI,CAAQ5xI,GACJ,IAAIhJ,EAAMgJ,EAAMhJ,IAChB,GAAW,UAAPA,EACA,IAAK,IAAIi/I,IAAQ,CAACv9I,KAAK03I,aAAc13I,KAAKy3I,YAAaz3I,KAAKw3I,UACxD,GAAY,MAAR+F,GAAgBA,EAAK91C,UAAY,EAIjC,OAHA81C,EAAK90C,UACLnhG,EAAMwgG,sBACNxgG,EAAMilG,kBAIlB,IAAIljC,GAAO/hE,EAAM0lG,SAAW,IAAM,KAAO1lG,EAAM2lG,SAAW3lG,EAAM6lG,QAAU,IAAM,KAAO7lG,EAAM4lG,OAAS,IAAM,IACxGswC,IAASl2I,EAAM0lG,UAAa1lG,EAAM2lG,SAAY3lG,EAAM4lG,QAAW5lG,EAAM6lG,SACzE,GAAW,SAAP7uG,EACA0B,KAAKo5H,mBACJ,GAAW,aAAP96H,GAAsBk/I,EAC3Bx9I,KAAKu8I,aAAa,EAAG,QACpB,GAAW,cAAPj+I,GAAuBk/I,EAC5Bx9I,KAAKu8I,YAAY,EAAG,QACnB,GAAW,WAAPj+I,GAAoBk/I,EACzBx9I,KAAKu8I,YAAY,EAAG,QACnB,GAAW,aAAPj+I,GAAsBk/I,EAC3Bx9I,KAAKu8I,YAAY,GAAI,QACpB,GAAW,KAAPj+I,GAAqB,KAAP+qE,EACnBrpE,KAAKm4H,mBACJ,GAAW,KAAP75H,GAAqB,MAAP+qE,EACnBrpE,KAAKq4H,mBACJ,GAAW,KAAP/5H,GAAck/I,EACnBx9I,KAAKw3I,SAAS1uC,eAAe,QAC5B,GAAW,KAAPxqG,GAAck/I,EACnBx9I,KAAKw3I,SAAS1uC,cAAc,QAC3B,GAAqB,MAAjB9oG,KAAKw3I,UAAoBx3I,KAAKw3I,SAAShwC,QAAQiF,SAASnlG,SAC5D,GAAwB,MAApBtH,KAAKy3I,aAAuBz3I,KAAKy3I,YAAYjwC,QAAQiF,SAASnlG,SAClE,GAAyB,MAArBtH,KAAK03I,cAAwB13I,KAAK03I,aAAalwC,QAAQiF,SAASnlG,SACpE,GAAW,KAAPhJ,GAAqB,MAAP+qE,EACnBrpE,KAAKqzC,WAAW,GAAG,QAClB,GAAW,KAAP/0C,GAAqB,MAAP+qE,EACnBrpE,KAAKqzC,WAAW,GAAG,QAClB,GAAW,KAAP/0C,GAAqB,MAAP+qE,EACnBrpE,KAAKqzC,WAAW,GAAG,QAClB,GAAW,KAAP/0C,GAAqB,MAAP+qE,EACnBrpE,KAAKqzC,WAAW,GAAG,QAClB,GAAW,KAAP/0C,GAAqB,MAAP+qE,EACnBrpE,KAAKqzC,WAAW,GAAG,QAClB,GAAW,KAAP/0C,GAAqB,MAAP+qE,EACnBrpE,KAAKqzC,WAAW,GAAG,QAClB,GAAW,KAAP/0C,GAAqB,MAAP+qE,EACnBrpE,KAAKqzC,WAAW,GAAG,QAClB,GAAW,KAAP/0C,GAAqB,MAAP+qE,EACnBrpE,KAAKqzC,WAAW,GAAG,QAClB,GAAW,KAAP/0C,GAAqB,MAAP+qE,EACnBrpE,KAAKqzC,WAAW,GAAG,QAClB,GAAW,KAAP/0C,GAAqB,MAAP+qE,EACnBrpE,KAAKqzC,WAAW,GAAG,QAClB,GAAW,KAAP/0C,GAAqB,KAAP+qE,GAAcrpE,KAAK+4H,UACtC/4H,KAAK+4H,UAAUoM,aAAY,QAC1B,GAAW,KAAP7mI,GAAqB,KAAP+qE,GAAcrpE,KAAK+4H,UACtC/4H,KAAK+4H,UAAUoM,aAAY,QAC1B,GAAW,KAAP7mI,GAAqB,KAAP+qE,GAAcrpE,KAAK+4H,WAAa/4H,KAAK+4H,UAAUO,eAClEt5H,KAAK+4H,UAAUsM,oBACd,GAAW,aAAP/mI,GAA6B,KAAP+qE,EAC3BrpE,KAAKi9I,cAAc,EAAG,QACrB,GAAW,cAAP3+I,GAA8B,KAAP+qE,EAC5BrpE,KAAKi9I,aAAa,EAAG,QACpB,GAAW,WAAP3+I,GAA2B,KAAP+qE,EACzBrpE,KAAKi9I,aAAa,EAAG,QACpB,GAAW,aAAP3+I,GAA6B,KAAP+qE,EAC3BrpE,KAAKi9I,aAAa,GAAI,QACrB,GAAW,KAAP3+I,GAAqB,KAAP+qE,EACnBrpE,KAAKk9I,iBAAiB,GAAI,QACzB,GAAW,KAAP5+I,GAAqB,KAAP+qE,EACnBrpE,KAAKk9I,gBAAgB,GAAI,QACxB,GAAW,KAAP5+I,GAAqB,KAAP+qE,EACnBrpE,KAAKk9I,gBAAgB,GAAI,QACxB,GAAW,KAAP5+I,GAAqB,KAAP+qE,EACnBrpE,KAAKk9I,iBAAiB,EAAG,QACxB,GAAW,KAAP5+I,GAAqB,KAAP+qE,EACnBrpE,KAAKk9I,gBAAgB,EAAG,QACvB,GAAW,KAAP5+I,GAAqB,KAAP+qE,EACnBrpE,KAAKk9I,iBAAiB,EAAG,QACxB,GAAW,KAAP5+I,GAAqB,KAAP+qE,EACnBrpE,KAAKk9I,gBAAgB,EAAG,OACvB,IAAW,KAAP5+I,GAAqB,KAAP+qE,EAGnB,OAFArpE,KAAKk9I,gBAAgB,EAAG,EAElB,CACV51I,EAAMwgG,iBACNxgG,EAAMilG,iBACV,CACA,KAAA4sC,CAAM7xI,GACN,CACA,UAAA8xI,CAAW9xI,GACP,IAAKkb,EAAGE,GAAK,EAAYpb,EAAMm2I,QAAQ,GAAIz9I,KAAKqiB,WACb,MAA/BriB,KAAK8hI,iBAAiBt/G,EAAGE,KAE7B1iB,KAAKo9I,cAAc56H,EAAGE,EAAGpb,EAAM0lG,SAAU1lG,EAAM2lG,QAAS3lG,EAAM4lG,QAC9D5lG,EAAMwgG,iBACV,CACA,SAAAuxC,CAAU/xI,GACN,GAAItH,KAAK+6H,UAAYjB,GAAakB,KAAM,CACpC,IAAKx4G,EAAGE,GAAK,EAAYpb,EAAMm2I,QAAQ,GAAIz9I,KAAKqiB,WAChDriB,KAAKs9I,aAAa96H,EAAGE,EACzB,CACApb,EAAMwgG,gBACV,CACA,WAAAwxC,CAAYhyI,GACZ,CACA,QAAAiyI,CAASjyI,GACL,GAAItH,KAAK+6H,UAAYjB,GAAakB,KAAM,CACpC,IAAKx4G,EAAGE,GAAK,CAAC1iB,KAAK87H,OAAQ97H,KAAK+7H,QAChC/7H,KAAKq9I,YAAY76H,EAAGE,GACpBpb,EAAMwgG,gBACV,CACJ,CACA,UAAA41C,CAAWp2I,GACX,CACA,WAAAkyI,CAAYlyI,GAIR,GAHAA,EAAMwgG,iBACNxgG,EAAMilG,kBACNvsG,KAAK+6H,SAAWjB,GAAakB,MACxBh7H,KAAK23I,UACN,OACJ,IAAKn1H,EAAGE,GAAK,EAAYpb,EAAOtH,KAAKqiB,WACjC86H,EAAWn9I,KAAK4hI,WAAWp/G,EAAGE,GAC9By6H,EAAW,EACXn9I,KAAKu6I,kBAAkB4C,GAClBA,EAAW,GAChBn9I,KAAKw6I,mBAAmB2C,GAC5B,IAAItkB,EAAQ74H,KAAK04H,WAEbO,EADM,IAAIL,GAAcC,EAAO74H,KAAMA,KAAK+4H,WAC/BC,WACfh5H,KAAK23I,UAAUgG,gBAAgB1kB,EAAM3xH,EACzC,CACA,aAAA81I,CAAc56H,EAAGE,EAAGsqF,EAAUC,EAASC,GACnCltG,KAAK+6H,SAAWjB,GAAa8jB,MAC7B59I,KAAKq7H,UAAW,EAChBr7H,KAAKg8H,WAAa,KAClBh8H,KAAK87H,OAASt5G,EACdxiB,KAAK+7H,OAASr5G,EACd1iB,KAAK47H,OAASp5G,EACdxiB,KAAK67H,OAASn5G,EACd,IAAIy6H,EAAWn9I,KAAK4hI,WAAWp/G,EAAGE,GAClC1iB,KAAKm7H,OAASgiB,EAAW,EAAIA,EAAW,EACxCn9I,KAAKo7H,OAAS+hB,EAAW,GAAKA,EAAW,EACzCn9I,KAAKs7H,QAAUtuB,EACfhtG,KAAKu7H,OAAStuB,EACdjtG,KAAKw7H,MAAQtuB,EACb,IAAI0uC,EAAO,GAGX,GAFqB,MAAjB57I,KAAKw3I,WACLoE,EAAO57I,KAAKw3I,SAASzxC,gBACrB61C,GAAQ1H,GAAasB,MAChBx1I,KAAKs7H,SAAYt7H,KAAKu7H,QAAWv7H,KAAKw7H,MAGjCx7H,KAAKs7H,SAAYt7H,KAAKu7H,SAAUv7H,KAAKw7H,OAGrCx7H,KAAKs7H,SAAWt7H,KAAKu7H,QAAUv7H,KAAKw7H,QAC1Cx7H,KAAK+6H,SAAWjB,GAAa+jB,MAH7B79I,KAAK+6H,SAAWjB,GAAa2b,IAH7Bz1I,KAAK+6H,SAAWjB,GAAa8jB,WAShC,GAAIhC,GAAQ1H,GAAalmB,OAC1BhuH,KAAK+6H,SAAWjB,GAAa9L,OAC7BhuH,KAAK68H,eAAiB78H,KAAKs7H,QAAU,EAAI,GAAK13G,OAE7C,GAAIg4H,GAAQ1H,GAAauB,IAC1Bz1I,KAAK+6H,SAAWjB,GAAa2b,SAE5B,GAAImG,GAAQ1H,GAAawB,KAC1B11I,KAAK+6H,SAAWjB,GAAanL,KACzB3uH,KAAKm7H,OAAS,IACdn7H,KAAKg8H,WAAah8H,KAAKq8I,sBAC3Br8I,KAAK2rG,qBAEJ,GAAIiwC,GAAQ1H,GAAa7U,OAC1Br/H,KAAK+6H,SAAWjB,GAAauF,OAC7Br/H,KAAKy7H,OAAS,CAACj5G,GACfxiB,KAAK07H,OAAS,CAACh5G,GACf1iB,KAAK27H,UAAY,QAEhB,GAAIigB,GAAQ1H,GAAagC,UAC1Bl2I,KAAK+6H,SAAWjB,GAAahL,KAC7B9uH,KAAK28H,cAAe,EACpB38H,KAAK48H,iBAAmB58H,KAAKs7H,aAE5B,GAAIsgB,GAAQ1H,GAAaiC,SAC1Bn2I,KAAK+6H,SAAWjB,GAAahL,KAC7B9uH,KAAK28H,cAAe,EACpB38H,KAAK48H,iBAAmB58H,KAAKs7H,aAE5B,GAAIsgB,GAAQ1H,GAAakC,SAC1Bp2I,KAAK+6H,SAAWjB,GAAahO,OAC7B9rH,KAAK08H,gBAAkB,OAEtB,GAAIkf,GAAQ1H,GAAamC,UAC1Br2I,KAAK+6H,SAAWjB,GAAahO,OAC7B9rH,KAAK08H,iBAAmB,OAEvB,GAAIkf,EAAKl7H,WAAWwzH,GAAa4J,SAAU,CAgB5C,GAfA99I,KAAK+6H,SAAWjB,GAAatyD,KAC7BxnE,KAAKw8H,cAAgB,EACrBx8H,KAAKy8H,aAAez/E,GAAS+Y,gBACzB6lF,GAAQ1H,GAAayB,WACrB31I,KAAKw8H,cAAgB,EAChBof,GAAQ1H,GAAa2B,WAC1B71I,KAAKw8H,cAAgB,EAChBof,GAAQ1H,GAAa4B,WAC1B91I,KAAKw8H,cAAgB,EAChBof,GAAQ1H,GAAa6B,YAC1B/1I,KAAKy8H,aAAez/E,GAAS2lB,iBACxBi5E,GAAQ1H,GAAa8B,aAC1Bh2I,KAAKy8H,aAAez/E,GAAS6Z,kBACxB+kF,GAAQ1H,GAAa+B,eAC1Bj2I,KAAKy8H,aAAez/E,GAAS8Z,mBAC7B92D,KAAKo7H,OAAS,EAAG,CACjB,IAAK1uF,EAAKE,GAAO5sC,KAAKusC,IAAI0mC,WAAWjzE,KAAKo7H,QAAS2iB,GAAS,EAC5D,IAAK,IAAIv0E,KAAQ,IAAI3hB,GAAa7nD,KAAKusC,KAAK4b,WAAY,CACpD,IAAIoB,EAAMigB,EAAK73B,MAAMzwC,SAASwrC,GAAM8c,EAAMggB,EAAK73B,MAAMzwC,SAAS0rC,GAC9D,GAAK2c,IAAQC,GAASA,IAAQD,EAAM,CAChCw0F,GAAS,EACT,KACJ,CACJ,CACIA,IACA/9I,KAAKw8H,cAAgB,EACrBx8H,KAAKy8H,aAAez/E,GAAS+Y,gBAErC,CACmB,GAAf/1D,KAAKo7H,SACLp7H,KAAKg8H,WAAah8H,KAAKm8I,mBAAmBn8I,KAAKw8H,eACvD,MACSof,EAAKl7H,WAAWwzH,GAAaoC,cAClCt2I,KAAK+6H,SAAWjB,GAAavyD,KAC7BvnE,KAAKu8H,eAAiBqf,EAAKj7H,UAAUuzH,GAAaoC,WAAW13I,QAC7DoB,KAAKg8H,WAAah8H,KAAKm8I,mBAAmB,GAElD,CACA,YAAAmB,CAAa96H,EAAGE,GACZ,IAAK1iB,KAAKq7H,SAAU,CAChB,IAAIr4G,EAAKR,EAAIxiB,KAAK47H,OAAQ34G,EAAKP,EAAI1iB,KAAK67H,OACpC74G,EAAKA,EAAKC,EAAKA,EAAK,IACpBjjB,KAAKq7H,UAAW,EACxB,CAOA,GANIr7H,KAAK+6H,UAAYjB,GAAa8jB,OAAwB,GAAf59I,KAAKm7H,QAA8B,GAAfn7H,KAAKo7H,QAAep7H,KAAKq7H,WACpFr7H,KAAK+6H,SAAWjB,GAAasF,MAC7Bp/H,KAAKy7H,OAAS,CAACj5G,GACfxiB,KAAK07H,OAAS,CAACh5G,GACf1iB,KAAK27H,UAAY,IAEjB37H,KAAK+6H,UAAYjB,GAAasF,OAASp/H,KAAK+6H,UAAYjB,GAAauF,OACrEr/H,KAAK8/H,YAAYt9G,EAAGE,QAEnB,GAAI1iB,KAAK+6H,UAAYjB,GAAa2b,IAAK,CACxC,IAAIzyH,EAAKR,EAAIxiB,KAAK87H,OAAQ74G,EAAKP,EAAI1iB,KAAK+7H,OAC9B,GAAN/4G,GAAiB,GAANC,IACXjjB,KAAKm6F,SAAWn3E,EAChBhjB,KAAKo6F,SAAWn3E,EAChBjjB,KAAKwyF,OAAOvP,iBAAiBjgE,EAAIC,GACjCjjB,KAAKsrG,QAAQ/N,oBAAoBv6E,EAAIC,EAAI,EAAG,GACxCjjB,KAAKk8H,aAAe,GAA2B,MAAtBl8H,KAAKi8H,eACnBj8H,KAAKi8H,cAAcj8H,KAAKk8H,aAC9B5wB,QAAQ/N,oBAAoBv6E,EAAIC,EAAI,EAAG,GAEhDjjB,KAAK2rG,iBAET3rG,KAAK87H,OAASt5G,EACdxiB,KAAK+7H,OAASr5G,CAClB,MACK,GAAI1iB,KAAK+6H,UAAYjB,GAAa+jB,KAAM,CACzC,IAAI56H,EAAKP,EAAI1iB,KAAK+7H,OAClB,GAAU,GAAN94G,EAAS,CACTA,EAAKtM,KAAKW,IAAI,GAAIX,KAAKC,KAAK,GAAIqM,IAChC,IAAI83H,EAAW/6I,KAAK6pC,YAAc,EAAS,IAAL5mB,GACtC83H,EAAWpkI,KAAKW,IAAI,GAAIX,KAAKC,IAAI,GAAKmkI,IACtC,IAAIiD,EAAQh+I,KAAK47H,OAAUmf,EAAW/6I,KAAK6pC,YAAe7pC,KAAK47H,OAAS57H,KAAKm6F,SACzE8jD,EAAQj+I,KAAK67H,OAAUkf,EAAW/6I,KAAK6pC,YAAe7pC,KAAK67H,OAAS77H,KAAKo6F,SAC7Ep6F,KAAK6pC,WAAakxG,EAClB/6I,KAAKm6F,QAAU6jD,EACfh+I,KAAKo6F,QAAU6jD,EACfj+I,KAAK2rG,eACT,CACA3rG,KAAK87H,OAASt5G,EACdxiB,KAAK+7H,OAASr5G,CAClB,MACS1iB,KAAK+6H,UAAYjB,GAAa9L,QACnChuH,KAAK+6H,UAAYjB,GAAanL,MAC9B3uH,KAAK+6H,UAAYjB,GAAavyD,MAC9BvnE,KAAK+6H,UAAYjB,GAAatyD,MAC9BxnE,KAAK+6H,UAAYjB,GAAahL,OAC9B9uH,KAAK87H,OAASt5G,EACdxiB,KAAK+7H,OAASr5G,EACd1iB,KAAK2rG,gBAEb,CACA,WAAA0xC,CAAY76H,EAAGE,GACP1iB,KAAKq7H,SACLr7H,KAAKk+I,gBAAgB17H,EAAGE,GAExB1iB,KAAKm+I,iBAAiB37H,EAAGE,GAC7B1iB,KAAK+6H,SAAWjB,GAAakB,KAC7Bh7H,KAAKy7H,OAAS,KACdz7H,KAAK07H,OAAS,KACd17H,KAAK27H,UAAY,KACjB37H,KAAKg8H,WAAa,KAClBh8H,KAAK2rG,eACT,CACA,gBAAAwyC,CAAiB37H,EAAGE,GAChB,IAAIy6H,EAAWn9I,KAAK4hI,WAAWp/G,EAAGE,GAC9B07H,EAAYjB,EAAW,EAAIA,EAAW,EAAGkB,EAAYlB,EAAW,GAAKA,EAAW,EACpF,GAAIn9I,KAAK+6H,UAAYjB,GAAa8jB,MACzB59I,KAAKs7H,SAAYt7H,KAAKu7H,QAAWv7H,KAAKw7H,OAiBlCx7H,KAAKs7H,SAAYt7H,KAAKu7H,QAAWv7H,KAAKw7H,OACvC4iB,EAAY,GACZp+I,KAAKs6I,YAAY8D,GAAYp+I,KAAKi9H,YAAYmhB,IAlBjC,GAAbA,GAA+B,GAAbC,EACd,EAAI3pI,QAAQ1U,KAAKkpH,cACjBlpH,KAAKkpH,aAAe,KACflpH,KAAKgpH,YAAc,EACxBhpH,KAAKgpH,YAAc,EACdhpH,KAAKipH,YAAc,IACxBjpH,KAAKipH,YAAc,GAElBm1B,GAAap+I,KAAKgpH,aAAeq1B,GAAar+I,KAAKipH,aACxDjpH,KAAKgpH,YAAco1B,EACnBp+I,KAAKipH,YAAco1B,GAED,GAAbD,GAA+B,GAAbC,GAAkBr+I,KAAKq6I,gBAC9Cr6I,KAAKkpH,aAAe,WAQ3B,GAAIlpH,KAAK+6H,UAAYjB,GAAanL,KACnB,GAAZwuB,IACI,EAAIzoI,QAAQ1U,KAAKkpH,cACjBlpH,KAAKkpH,aAAe,KACflpH,KAAKgpH,YAAc,EACxBhpH,KAAKgpH,YAAc,EACdhpH,KAAKipH,YAAc,IACxBjpH,KAAKipH,YAAc,SAG1B,GAAIjpH,KAAK+6H,UAAYjB,GAAauF,QACnC,GAAIr/H,KAAKm7H,OAAS,GAAKn7H,KAAKo7H,OAAS,EAAG,CACpC,IAAIvC,EAAQp9H,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAGlQ,KAAK04H,YAAa,CAAE,YAAe14H,KAAKm7H,OAAQ,YAAen7H,KAAKo7H,OAAQ,aAAgB,KAC3H,IAAIzS,GAAiBkQ,EAAOnQ,GAAagB,OAAQ,CAAC,EAAG1pH,MAC3DypH,SACX,OAEC,GAAIzpH,KAAK+6H,UAAYjB,GAAavyD,KAAM,CACzC,IAAIoL,EAAU3yE,KAAKu8H,eACnB,GAAe,KAAX5pD,EAAgB,CAChB,IAAIyoE,EAAM,IAAIhO,GAASptI,KAAKusC,IAAKvsC,KAAKm7H,OAAQn7H,KAAK+4H,WAAW,KAC1D,IAAIulB,EAAiC,GAArBt+I,KAAKusC,IAAIC,SACU,GAA/BxsC,KAAKusC,IAAI91B,UAAU2kI,EAAI7uG,MACvBvsC,KAAK43I,eAAewD,EAAI7uG,IAAK+xG,GAAW,GAC5ClD,EAAI9X,OAAO,IAEI,GAAftjI,KAAKm7H,SACLigB,EAAI9N,KAAOttI,KAAKm9H,OAAOn9H,KAAK47H,QAC5Bwf,EAAI7N,KAAOvtI,KAAKo9H,OAAOp9H,KAAK67H,SAEhCuf,EAAIpY,cAAgB,KAChBhjI,KAAK22I,UAAW,EAChB32I,KAAK8hC,WAAW,EAEpB9hC,KAAK22I,UAAW,EAChByE,EAAI70H,MACR,MACK,GAAIosD,EAAS,CACd,IAAIk2C,EAAQ,CAAEl2C,UAASk5C,YAAY,GACnC,GAAmB,GAAf7rH,KAAKm7H,OAAa,CAClB,IAAI34G,EAAIxiB,KAAKm9H,OAAOn9H,KAAK47H,QAASl5G,EAAI1iB,KAAKo9H,OAAOp9H,KAAK67H,QAC9B,GAArB77H,KAAKusC,IAAIC,WACTxsC,KAAKm6F,QAAUn6F,KAAK47H,OACpB57H,KAAKo6F,QAAUp6F,KAAK67H,OACpBr5G,EAAI,EACJE,EAAI,GAERmmG,EAAM8C,UAAYnpG,EAClBqmG,EAAM+C,UAAYlpG,CACtB,CACA,IAAIm2G,EAAQp9H,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAGlQ,KAAK04H,YAAa,CAAE1P,YAAahpH,KAAKm7H,OAAQlS,YAAa,EAAGC,aAAc,OAC3G,IAAIP,GAAiBkQ,EAAOnQ,GAAa+C,QAAS5C,EAAO7oH,MAC/DypH,SACX,CACJ,MACK,GAAIzpH,KAAK+6H,UAAYjB,GAAahO,QACnC,GAAI9rH,KAAKm7H,OAAS,GAAKn7H,KAAKo7H,OAAS,EAAG,CACpC,IAAIvC,EAAQp9H,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAGlQ,KAAK04H,YAAa,CAAE1P,YAAahpH,KAAKm7H,OAAQlS,YAAajpH,KAAKo7H,OAAQlS,aAAc,OACrH,IAAIP,GAAiBkQ,EAAOnQ,GAAaoD,OAAQ,CAAEn7F,MAAO3wB,KAAK08H,iBAAmB18H,MACxFypH,SACX,OAEC,GAAIzpH,KAAK+6H,UAAYjB,GAAatyD,KAAM,CACzC,IACIqyD,EADAhB,EAAQp9H,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAGlQ,KAAK04H,YAAa,CAAE1P,YAAahpH,KAAKm7H,OAAQlS,YAAajpH,KAAKo7H,OAAQlS,aAAc,OAG9H2Q,EADA75H,KAAKy8H,cAAgBz/E,GAAS+Y,gBACrB,IAAI4yD,GAAiBkQ,EAAOnQ,GAAa2D,UAAW,CAAE5pE,MAAOziD,KAAKw8H,eAAiBx8H,MAEnF,IAAI2oH,GAAiBkQ,EAAOnQ,GAAa6D,SAAU,CAAExuH,KAAMiC,KAAKy8H,cAAgBz8H,MAC7F65H,EAAOpQ,SACX,CACJ,CACA,eAAAy0B,CAAgB17H,EAAGE,GACf,GAAI1iB,KAAK+6H,UAAYjB,GAAasF,MAAO,CACrC,GAAIp/H,KAAKy7H,OAAO78H,QAAU,EAAG,CACzBoB,KAAK+/H,qBACL,IAAK,IAAIjwH,EAAI,EAAGA,GAAK9P,KAAKusC,IAAIC,SAAU18B,IAChC9P,KAAKk9H,WAAWptH,KAAO9P,KAAKi9H,YAAYntH,IACxC9P,KAAKs6I,YAAYxqI,GAAG,EAChC,CACA9P,KAAKy7H,OAAS,KACdz7H,KAAK07H,OAAS,KACd17H,KAAK27H,UAAY,KACjB37H,KAAK2rG,eACT,MACK,GAAI3rG,KAAK+6H,UAAYjB,GAAauF,OAAQ,CAC3C,IAAI9M,GAAM,EACV,IAAK,IAAIziH,EAAI,EAAGA,EAAI9P,KAAK27H,UAAU/8H,OAAQkR,IACvC,GAAI9P,KAAK27H,UAAU7rH,GAAI,CACnByiH,GAAM,EACN,KACJ,CACJ,GAAIA,EAAK,CACL,IAAIsG,EAAQp9H,OAAOyU,OAAOzU,OAAOyU,OAAO,CAAC,EAAGlQ,KAAK04H,YAAa,CAAE1P,YAAa,EAAGC,YAAa,EAAGC,aAAclpH,KAAK27H,YACtG,IAAIhT,GAAiBkQ,EAAOnQ,GAAagB,OAAQ,CAAC,EAAG1pH,MAC3DypH,SACX,CACJ,MACK,GAAIzpH,KAAK+6H,UAAYjB,GAAa9L,OAAQ,CAC3C,IAAKh7D,EAAIC,EAAI9uC,EAAO6N,GAAahyB,KAAKu/H,qBAClCgf,GAAWp6H,EAAQN,EACnBmoC,EAAKhsD,KAAKm9H,OAAOnqE,GAAK7G,EAAKnsD,KAAKo9H,OAAOnqE,GAC9B,IAAI01D,GAAiB3oH,KAAK04H,WAAYhQ,GAAasF,OAAQ,CAAE7pG,MAAOo6H,EAASx0H,QAASiiC,EAAIhiC,QAASmiC,GAAMnsD,MAC/GypH,SACX,MACK,GAAIzpH,KAAK+6H,UAAYjB,GAAanL,KAAM,CACzC,IAAK3rG,EAAIC,GAAMjjB,KAAKy/H,qBAChB1gH,EAAQ/e,KAAK6pC,WACJ,IAAI8+E,GAAiB3oH,KAAK04H,WAAYhQ,GAAaiG,KAAM,CAAEE,QAAS7uH,KAAKm7H,OAAQhlD,OAAQnzD,EAAKjE,EAAOq3D,QAASnzD,EAAKlE,GAAS/e,MAClIypH,SACX,MACK,GAAIzpH,KAAK+6H,UAAYjB,GAAahL,KAAM,CACzC,IAAKE,EAAOC,GAASjvH,KAAKm/H,oBAC1B,GAAa,MAATnQ,EAAe,CACf,IAAInG,EAAQ,CACRmG,MAAOA,EACPC,MAAOA,EACPC,SAAUlvH,KAAK28H,cAEN,IAAIhU,GAAiB3oH,KAAK04H,WAAYhQ,GAAaoG,KAAMjG,EAAO7oH,MACtEypH,SACX,CACJ,MACK,GAAIzpH,KAAK+6H,UAAYjB,GAAavyD,MAAQvnE,KAAKm7H,OAAS,EAAG,CAC5D,IAAIt2G,EAAK7kB,KAAK87H,OAAQh3G,EAAK9kB,KAAK+7H,OAC5BsE,EAASrgI,KAAKymH,YAAY5hG,EAAIC,GACpB,MAAVu7G,KACCx7G,EAAIC,GAAMu7G,GACf,IAAIxX,EAAQ,CACRpmE,MAAO,EACP1kD,KAAMi/C,GAAS+Y,gBACf4c,QAAS3yE,KAAKu8H,eACd53G,GAAI3kB,KAAKusC,IAAI6e,MAAMprD,KAAKm7H,QACxBv2G,GAAI5kB,KAAKusC,IAAI8e,MAAMrrD,KAAKm7H,QACxBt2G,GAAI7kB,KAAKm9H,OAAOt4G,GAChBC,GAAI9kB,KAAKo9H,OAAOt4G,IAEO,KAAvB9kB,KAAKu8H,iBACL1T,EAAMl2C,QAAU/sD,OAAO44H,OAAO,wBAAyB,KACtC,IAAjB31B,EAAMl2C,SACO,IAAIg2C,GAAiB3oH,KAAK04H,WAAYhQ,GAAagE,SAAU7D,EAAO7oH,MAC1EypH,SAEf,MACK,GAAIzpH,KAAK+6H,UAAYjB,GAAatyD,KAAM,CACzC,IAAI3iD,EAAK7kB,KAAK87H,OAAQh3G,EAAK9kB,KAAK+7H,OAC5BsE,EAASrgI,KAAKymH,YAAY5hG,EAAIC,GAClC,GAAc,MAAVu7G,KACCx7G,EAAIC,GAAMu7G,EACPrgI,KAAKo7H,OAAS,GAAG,CACjB,IAAIqjB,EAAQz+I,KAAK4hI,WAAW/8G,EAAIC,EAAI,CAAEm9G,SAAS,IAC/C,GAAIwc,EAAQ,EAER,YADAz+I,KAAK0+I,oBAAoB1+I,KAAKo7H,QAASqjB,EAG/C,CAEJ,IAAI51B,EAAQ,CACRpmE,MAAOziD,KAAKw8H,cACZz+H,KAAMiC,KAAKy8H,aACX9pD,QAAS,IACThuD,GAAmB,GAAf3kB,KAAKm7H,OAAcn7H,KAAKm9H,OAAOn9H,KAAK47H,QAAU57H,KAAKusC,IAAI6e,MAAMprD,KAAKm7H,QACtEv2G,GAAmB,GAAf5kB,KAAKm7H,OAAcn7H,KAAKo9H,OAAOp9H,KAAK67H,QAAU77H,KAAKusC,IAAI8e,MAAMrrD,KAAKm7H,QACtEt2G,GAAI7kB,KAAKm9H,OAAOt4G,GAChBC,GAAI9kB,KAAKo9H,OAAOt4G,IAEP,IAAI6jG,GAAiB3oH,KAAK04H,WAAYhQ,GAAagE,SAAU7D,EAAO7oH,MAC1EypH,SACX,CACJ,CACA,QAAAkwB,CAASgF,GACL,IAAIC,EAAQD,EAASC,MAAOC,EAAQF,EAASE,MAC7C,MAAMC,EAAW,CAAC,MAAO,QACnBC,EAAQ,CAAC,aAAc,sBAAuB,iBACpD,IAAK,IAAIjvI,EAAI,EAAGA,EAAI8uI,EAAMhgJ,OAAQkR,IAC9B,GAAqB,UAAjB8uI,EAAM9uI,GAAGgqG,MAAoBilC,EAAMvkI,QAAQokI,EAAM9uI,GAAG/R,OAAS,EAS7D,YARA6gJ,EAAM9uI,GAAGkvI,aAAax+H,IAClB,IAAI+rB,EAAMyQ,GAAS2D,WAAWngC,GACnB,MAAP+rB,EACAvsC,KAAK43I,eAAerrG,GAAK,GAAM,GAAM,GAGrC9kC,QAAQw3I,IAAI,4CAA8Cz+H,EAAI,IAK9E,IAAK,IAAI1Q,EAAI,EAAGA,EAAI+uI,EAAMjgJ,OAAQkR,IAC9B,IAAK,IAAIovI,KAAOJ,EACZ,GAAID,EAAM/uI,GAAGhU,KAAKylB,SAAS29H,GAAM,CAC7B,IAAIC,EAAS,IAAIC,WAWjB,OAVAD,EAAO14H,OAAUnf,IACb,IAAIkZ,EAAM2+H,EAAOh2I,OACbojC,EAAMqkC,GAAeC,YAAYrwD,EAAI9M,YAC9B,MAAP64B,EACAvsC,KAAK43I,eAAerrG,GAAK,GAAM,GAG/B9kC,QAAQw3I,IAAI,8CAAgDz+H,EAAI,OAExE2+H,EAAOE,WAAWR,EAAM/uI,GAE5B,CAEZ,CACA,mBAAA4uI,CAAoBY,EAAOC,GACvB,IAAKC,EAASC,GAAYz/I,KAAKusC,IAAI0mC,WAAWqsE,IAASI,EAASC,GAAY3/I,KAAKusC,IAAI0mC,WAAWssE,GAC5F1mB,EAAQ74H,KAAK04H,WACblC,EAAU,IAAI3uE,GAAagxE,EAAMtsF,KACjCw2E,EAAQ,KAAMC,EAAQ,KACtB48B,EAAW,EACf,IAAK,IAAIp2E,KAAQgtD,EAAQruE,WAAY,CACjC,IAAK46D,GAASv5C,EAAK73B,MAAM/yC,OAASmkH,EAAMpxE,MAAM/yC,OAAQ,CAClD,IAAIihJ,EAAMr2E,EAAK73B,MAAMzwC,SAASs+I,GAAUM,EAAMt2E,EAAK73B,MAAMzwC,SAASu+I,GAC9DI,IAAQC,EACR/8B,EAAQv5C,EACHs2E,IAAQD,KACZ98B,EAAOy8B,EAASC,GAAY,CAACj2E,EAAMi2E,EAAUD,GACtD,CACA,IAAKx8B,GAASx5C,EAAK73B,MAAM/yC,OAASokH,EAAMrxE,MAAM/yC,OAAQ,CAClD,IAAIihJ,EAAMr2E,EAAK73B,MAAMzwC,SAASw+I,GAAUI,EAAMt2E,EAAK73B,MAAMzwC,SAASy+I,GAC9DE,IAAQC,EACR98B,EAAQx5C,EACHs2E,IAAQD,KACZ78B,EAAO08B,EAASC,GAAY,CAACn2E,EAAMm2E,EAAUD,GACtD,CACA,IAAK,IAAIK,KAAYv2E,EAAK/hB,SAASt7C,SAC/ByzI,EAAWjpI,KAAKC,IAAIgpI,EAAU,EAAIhpI,IAAImpI,GAC9C,CACA,IAAKh9B,IAAUC,EACX,OAAO,EACX,IAAIg9B,EAAQ,EAAI5oI,MAAM2rG,EAAMt7D,SAAShnD,IAAI++I,IACpCQ,IACDA,IAAUJ,EACV78B,EAAMt7D,SAAS/mD,IAAI8+I,EAAS,CAACQ,KAEjC,IAAIC,EAAQ,EAAI7oI,MAAM4rG,EAAMv7D,SAAShnD,IAAIi/I,IACpCO,IACDA,IAAUL,EACV58B,EAAMv7D,SAAS/mD,IAAIg/I,EAAS,CAACO,KAEjCl9B,EAAMr7D,SAAShnD,IAAI4+I,EAAO,EAAI/pI,OAAOwtG,EAAMr7D,SAASjnD,IAAI6+I,GAAQW,IAChEj9B,EAAMt7D,SAAShnD,IAAI6+I,EAAO,EAAIhqI,OAAOytG,EAAMt7D,SAASjnD,IAAI8+I,GAAQS,IAChExpB,EAAQnkF,kBACRryC,KAAK0xH,SAASmH,EAClB,EAEJ4d,GAASiE,UAAY,GEj7Cd,MAAMwF,WAAqB3d,GAC9B,WAAArlI,CAAYqvC,EAAKzrB,EAAS,MACtBpW,MAAMoW,GACN9gB,KAAKusC,IAAMA,EACXvsC,KAAK84H,SAAW,IAAI2d,GACpBz2I,KAAK+4H,UAAY,KACjB/4H,KAAK23I,UAAY,KACjB33I,KAAKmgJ,aAAe,KACpBngJ,KAAKo+C,MAAQ,gBACbp+C,KAAKwiI,gBAAkB,GACvBxiI,KAAKyiI,gBAAkB,EAC3B,CACA,MAAA2d,CAAO7/I,GACHP,KAAKmgJ,aAAe5/I,CACxB,CACA,WAAA+/C,GAAgB,OAAOtgD,KAAK84H,SAASx4E,aAAe,CACpD,WAAA+/F,GAAgB,OAAOrgJ,KAAK84H,QAAU,CACtC,eAAAsf,CAAgBxT,GACZ5kI,KAAK+4H,UAAY6L,EACjB,IAAIv9H,EAAU,IAAIo9H,GAClBp9H,EAAQq9H,UAAY,CAACC,EAAQC,KACzB5kI,KAAK84H,SAAS8hB,qBAAqBjW,IAC5B,GAEXt9H,EAAQw9H,WAAcD,IAClB5kI,KAAK84H,SAAS+hB,UAAUjW,EAAMrkF,cACvB,GAEXqkF,EAAMI,YAAY39H,GAClBrH,KAAK84H,SAASsf,gBAAgBxT,EAClC,CACA,aAAAyT,CAAczT,GACV5kI,KAAK23I,UAAY/S,EACjB5kI,KAAK84H,SAASuf,cAAcr4I,KAAK23I,UACrC,CACA,KAAArU,GACQtjI,KAAK+4H,WACL/4H,KAAK+4H,UAAUkM,aACnBv6H,MAAM44H,OACV,CACA,QAAAtK,GACI,IAAIpvB,EAAU5pG,KAAKqkI,aAAc9+F,EAAOvlC,KAAKokI,UAC7CpkI,KAAKsgJ,SAAW,GAAI,gEAAgErhH,SAAS2qE,GAAS9mF,IAAI,CAAE,cAAe,UAC3H9iB,KAAKsgJ,SAAS59G,SAAQ,IAAM1iC,KAAK84H,SAAS8f,kBAC1C54I,KAAKugJ,QAAU,GAAI,+DAA+DthH,SAAS2qE,GAAS9mF,IAAI,CAAE,cAAe,UACzH9iB,KAAKugJ,QAAQ79G,SAAQ,IAAM1iC,KAAKwgJ,eAChC52C,EAAQr0F,OAAOvV,KAAKkkI,UACpBlkI,KAAKkkI,SAASphH,IAAI,CAAE,cAAe,UACnC9iB,KAAKygJ,QAAU,GAAI,+DAA+DxhH,SAAS2qE,GAAS9mF,IAAI,CAAE,cAAe,UACzH9iB,KAAKygJ,QAAQ/9G,SAAQ,KAAY1iC,KAAKmgJ,cAClCngJ,KAAKmgJ,aAAangJ,KAAK,IAC3B,IACI0gJ,EAAQ,GAAI,UAAUzhH,SAASsG,GAAMziB,IAAI,CAAE,MAAS,QAAY,OAAU,UAC9E9iB,KAAK84H,SAASrgG,QAFJ,IAAW,KAGrBz4B,KAAK84H,SAAS8e,eAAe53I,KAAKusC,KAClCvsC,KAAK84H,SAAS+f,OAAM,IAAM74I,KAAK84H,SAAS7xF,OAAOy5G,IACnD,CACA,UAAAF,GACIxgJ,KAAK84H,SAAS8hB,sBAAqB,EACvC,CACA,SAAA+F,GACI3gJ,KAAK84H,SAAS8hB,sBAAqB,EACvC,CACA,WAAAgG,GACI5gJ,KAAK84H,SAASR,cAClB,CACA,UAAAuoB,GACI7gJ,KAAK84H,SAASX,aAClB,CACA,UAAA2oB,GACI9gJ,KAAK84H,SAAST,aAClB,EChDG,MAAM0oB,WAAuBl6G,GAQnC,WAAA3pC,CAAYgjC,EAAgD8gH,GAE3Dt2I,QAF2D,KAAAs2I,eAAAA,EANpD,KAAAtjI,MAA6B,GAUpC,IAAK,IAAIpf,KAAO4hC,EAChB,CACC,IAAItkC,EAAQskC,EAAK5hC,GACjB,GAAoB,iBAAT1C,EAAmBoE,KAAK0d,MAAMlhB,KAAK,CAAC8B,MAAK1C,eAC/C,GAAI0D,MAAMC,QAAQ3D,GAAQ,IAAK,IAAI+Y,KAAK/Y,EAAOoE,KAAK0d,MAAMlhB,KAAK,CAAC8B,MAAK,MAASqW,GACpF,CACD,CAEO,MAAAsyB,CAAOnmB,GAEbpW,MAAMu8B,OAAOnmB,GAEb9gB,KAAKihJ,QAAU,GAAI,UAAUhiH,SAASj/B,KAAK8mC,YAAYhkB,IAAI,CAAC,QAAW,OAAQ,MAAS,OAAQ,OAAU,MAC1G9iB,KAAKihJ,QAAQn+H,IAAI,CAAC,cAAe,WAAY,kBAAmB,UAChE9iB,KAAKihJ,QAAQn+H,IAAI,CAAC,eAAgB,QAAS,kBAAmB,UAC9D9iB,KAAKihJ,QAAQn+H,IAAI,CAAC,wBAAyB,oDAE3C9iB,KAAKkhJ,aACN,CAIQ,WAAAA,GAEPlhJ,KAAKihJ,QAAQ5hH,QAEb,IAAI1hB,EAAM,EAEV,IAAK,IAAI7N,EAAI,EAAGA,EAAI9P,KAAK0d,MAAM9e,OAAQkR,IACvC,CACC,IAAIo0D,EAAOlkE,KAAK0d,MAAM5N,GAEtB6N,IACA,IAAIwjI,EAAS,GAAI,UAAUliH,SAASj/B,KAAKihJ,SAASn+H,IAAI,CAAC,YAAa,GAAGnF,YACnEyjI,EAAW,GAAI,UAAUniH,SAASj/B,KAAKihJ,SAASn+H,IAAI,CAAC,YAAa,GAAGnF,cACrE0jI,EAAY,GAAI,UAAUpiH,SAASj/B,KAAKihJ,SAASn+H,IAAI,CAAC,YAAa,GAAGnF,eAE1EumD,EAAKo9E,SAAW,GAAI,YAAYriH,SAASkiH,GAAQr+H,IAAI,CAAC,MAAS,OAAQ,QAAW,IAAK,KAAQ,YAC/FohD,EAAKo9E,SAAS1hH,SAASskC,EAAK5lE,KAC5B4lE,EAAKo9E,SAASl+G,SAAQ,IAAMpjC,KAAKuhJ,eAEjCr9E,EAAKs9E,WAAa,GAAI,YAAYviH,SAASmiH,GAAUt+H,IAAI,CAAC,MAAS,OAAQ,QAAW,IAAK,KAAQ,YACnGohD,EAAKs9E,WAAW5hH,SAASskC,EAAKtoE,OAC9BsoE,EAAKs9E,WAAWp+G,SAAQ,IAAMpjC,KAAKuhJ,eAEnC,IAAIE,EAAY,GAAI,oEAAoExiH,SAASoiH,GACjGI,EAAU7kH,QAAQ,KAClB6kH,EAAU/+G,SAAQ,KAEjB1iC,KAAK0d,MAAMpQ,OAAOwC,EAAG,GACrB9P,KAAKkhJ,cACLlhJ,KAAKuhJ,YAAY,GAEnB,CAEA5jI,IACA,IAAI+jI,EAAS,GAAI,UAAUziH,SAASj/B,KAAKihJ,SAASn+H,IAAI,CAAC,YAAa,GAAGnF,eAAiBA,UAAa,aAAc3d,KAAK0d,MAAM9e,OAAS,EAAI,SAAW,SAClJ+iJ,EAAS,GAAI,oEAAoE1iH,SAASyiH,GAC9FC,EAAO/kH,QAAQ,KACf+kH,EAAOj/G,SAAQ,KAEd1iC,KAAK0d,MAAMlhB,KAAK,CAAC8B,IAAK,GAAI1C,MAAO,KACjCoE,KAAKkhJ,cACLlhJ,KAAKuhJ,YAAY,GAEnB,CAEQ,UAAAA,GAEP,IAAIrhH,EAAyC,CAAC,EAC9C,IAAK,IAAIgkC,KAAQlkE,KAAK0d,MACtB,CAGC,GAFAwmD,EAAK5lE,IAAM4lE,EAAKo9E,SAAS3hH,WACzBukC,EAAKtoE,MAAQsoE,EAAKs9E,WAAW7hH,YACxBukC,EAAK5lE,MAAQ4lE,EAAKtoE,MAAO,SAE9B,IAAIgmJ,EAAO1hH,EAAKgkC,EAAK5lE,KAChBsjJ,EACmB,iBAARA,EAAkB1hH,EAAKgkC,EAAK5lE,KAAO,CAACsjJ,EAAM19E,EAAKtoE,OACtD0D,MAAMC,QAAQqiJ,IAAOA,EAAKplJ,KAAK0nE,EAAKtoE,OAFlCskC,EAAKgkC,EAAK5lE,KAAO4lE,EAAKtoE,KAGlC,CAEAoE,KAAKghJ,eAAe9gH,EACrB,EChHM,MAAM,GACT,WAAAhjC,CAAY4jB,GACR9gB,KAAK6hJ,gBAAkB,QACvB7hJ,KAAK8hJ,eAAiB,GACtB9hJ,KAAKylC,OAAS,KACdzlC,KAAKgjI,cAAgB,KACrBhjI,KAAK+hJ,iBAAmB,KACxB/hJ,KAAK8gB,OAASI,GAAUJ,GACxB,GAAiB,QAdP,yEAed,CACA,OAAAoiH,CAAQ3iI,GACJP,KAAKgjI,cAAgBziI,CACzB,CACA,IAAAgmB,GACIye,KACA,IAAIO,EAAO,GAAI5H,SAAS4H,MACpB69F,EAAKpjI,KAAKqjI,qBAAuB,GAAI,UAAUpkG,SAASsG,GAC5D69F,EAAGtgH,IAAI,CAAE,SAAY,UACrBsgH,EAAGtgH,IAAI,CAAE,KAAQ,IAAK,MAAS,IAAK,IAAO,IAAK,OAAU,MAC1DsgH,EAAGtgH,IAAI,CAAE,mBAAoB,QAAS,QAAW9iB,KAAK8hJ,iBACtD,IAAI/+C,EAAK/iG,KAAKujI,qBAAuB,GAAI,UAAUtkG,SAASsG,GAC5Dw9D,EAAGjgF,IAAI,CAAE,SAAY,UACrBigF,EAAGjgF,IAAI,CAAE,KAAQ,IAAK,MAAS,IAAK,IAAO,IAAK,OAAU,MAC1DigF,EAAGrgE,SAAQ,IAAM1iC,KAAKsjI,UAClBtjI,KAAKylC,OAAS,IACd29F,EAAGpjG,OAAO,UAAWhgC,KAAKylC,QAC1Bs9D,EAAG/iE,OAAO,UAAWhgC,KAAKylC,OAAS,IAEvC,IAAI8mD,EAAKvsF,KAAKwjI,iBAAmB,GAAI,4BAA4BvkG,SAAS8jE,GAAIjgF,IAAI,CAAE,WAAc,WAClGypE,EAAG7pD,SAASp7B,GAAUA,EAAMilG,oBAC5BhgB,EAAGzpE,IAAI,CAAE,mBAAoB9iB,KAAK6hJ,gBAAiB,OAAU,oBAC7Dt1D,EAAGzpE,IAAI,CAAE,SAAY,WAAY,SAAY,SAC7C9iB,KAAK6jI,QAAU,GAAI,UAAU5kG,SAASstD,GAAIzpE,IAAI,CAAE,QAAW,QAC3D9iB,KAAKg5H,WACLh5H,KAAKgiJ,iBACT,CACA,KAAA1e,GACIt+F,KACAhlC,KAAKwjI,iBAAiBhiI,SACtBxB,KAAKqjI,qBAAqB7hI,SAC1BxB,KAAKujI,qBAAqB/hI,SACtBxB,KAAKgjI,eACLhjI,KAAKgjI,cAAchjI,MACvBglC,IACJ,CACA,IAAAwgD,GACIxlF,KAAKgiJ,iBACT,CACA,OAAA5d,GAAY,OAAOpkI,KAAK6jI,OAAS,CACjC,QAAA7K,GACQh5H,KAAK+hJ,iBACL/hJ,KAAK+hJ,iBAAiB/hJ,MAEtBA,KAAKokI,UAAUxnG,QAAQ,eAC/B,CACA,eAAAolH,GACIh9G,KACA,IAAIc,EAAOlgB,OAAOmgB,WAAYC,EAAOpgB,OAAOqgB,YAExCg8G,EAASjiJ,KAAK8gB,OAAOK,GAAGigB,wBACxB+E,EAAM87G,EAAOt0H,KAAMyY,EAAM67G,EAAOzgH,IAAK6E,EAAM47G,EAAOr0H,MAAO0Y,EAAM27G,EAAOxxH,OACtE87D,EAAKvsF,KAAKwjI,iBACVxrG,EAAOrhB,KAAKC,IAAIuvB,EAAKL,EAAOO,GAAO,EACvCkmD,EAAGzpE,IAAI,CAAE,YAAakV,EAAO,OAC7B,IAAIkqH,EnE0ZL,WACH,GAAIt7H,EACA,OAAOA,EACX,IAAIk7F,EAAQ,GAAI,UAAUh/F,IAAI,CAAE,WAAc,SAAU,MAAS,QAAS,OAAU,QAAS,SAAY,WAAYmc,SAAS,GAAItB,SAAS4H,OACvI48G,EAAQ,GAAI,UAAUr/H,IAAI,CAAE,MAAS,OAAQ,OAAU,SAAUmc,SAAS6iF,GAG9E,OAFAl7F,EAAqB,IAAIiR,EAAK,IAAMsqH,EAAMhlH,OAAO2B,YAAa,IAAMqjH,EAAMhlH,OAAO4B,cACjF+iF,EAAMtgH,SACColB,CACX,CmElayBw7H,GACbz7G,EAAc,KACd,IAAIJ,EAAOvmC,KAAK6jI,QAAQnkI,QAAS8mC,EAAOxmC,KAAK6jI,QAAQlkI,SACjD8mC,EAAO,EAAGC,EAAO,EACjBJ,EAVI,EAUQE,EAAOR,EACnBU,EAAOJ,EAXH,EAYCF,EAZD,EAYaI,EAAO,EACxBE,EAAON,EAbH,EAaeI,EACdR,EAAOM,EAAMF,GAClBM,EAAOJ,EAfH,EAgBJE,EAAOR,EAAOU,EAhBV,IAmBJA,EAnBI,EAoBJF,EAAOJ,EAAMM,EApBT,GAsBJ6lD,EAAG5sF,SAAW6mC,IACdD,GAAQ27G,EAAWt/H,EAAI,IACvBujB,EAAMI,EAAOT,EACbW,EAAON,EACFI,EAAOF,IACZI,EAAOJ,EAAME,GACjB,EAAkBgmD,EAAI9lD,EAAMC,EAAMH,EAAMC,GACxC+lD,EAAGzpE,IAAI,CAAE,WAAc,WAAY,EAEvCkf,YAAW,IAAM2E,KACrB,EC7DG,MAAM07G,WAAuBx7G,GAQnC,WAAA3pC,CAAYi6F,EAAqC6pD,GAIhD,GAFAt2I,QAFgD,KAAAs2I,eAAAA,EANzC,KAAAtjI,MAA6B,GAUhCy5E,EAAU,IAAK,IAAIz2C,KAASy2C,EAAUn3F,KAAK0d,MAAMlhB,KAAK,CAAC,MAASkkD,IAEpE,GAAiB,iBA3BQ,iGA4B1B,CAEO,MAAAzZ,CAAOnmB,GAEbpW,MAAMu8B,OAAOnmB,GAEb9gB,KAAKihJ,QAAU,GAAI,UAAUhiH,SAASj/B,KAAK8mC,YAAYhkB,IAAI,CAAC,QAAW,OAAQ,MAAS,OAAQ,OAAU,MAC1G9iB,KAAKihJ,QAAQn+H,IAAI,CAAC,cAAe,WAAY,kBAAmB,UAChE9iB,KAAKihJ,QAAQn+H,IAAI,CAAC,eAAgB,QAAS,kBAAmB,UAC9D9iB,KAAKihJ,QAAQn+H,IAAI,CAAC,wBAAyB,4CAE3C9iB,KAAKkhJ,aACN,CAIQ,WAAAA,GAEPlhJ,KAAKihJ,QAAQ5hH,QAEb,IAAIijH,EAAa,CAACxhI,EAAYtL,EAAsB0uD,EAAyBruD,KAE5E,IAAI8vB,EAAM,GAAI,UAAU1G,SAASne,GAEjC,GADA6kB,EAAI7iB,IAAI,CAAC,QAAW,QAAS,eAAgB,UAC1B,iBAARtN,EACX,CACCmwB,EAAI7iB,IAAI,CAAC,mBAA2B,GAAPjN,EAAW,UAAY,UAAW,gBAAiB,QAChF,IAAIy7E,EAASb,GAAa9+E,KAAKu/E,UAAU17E,GACrC,EAAIlB,SAASg9E,IAEhB3rD,EAAI/I,QAAQ00D,EAAO,GAAGpoB,OACtBzkC,GAAWkB,EAAK5f,EAAWurE,EAAO,GAAGL,KAAM,KAAM,MAE7CtrD,EAAI/I,QAAQpnB,EAClB,KAEA,CACC,IAAIxK,EAAQ,GAAI,0BAA0Bi0B,SAAS0G,GAAK7iB,IAAI,CAAC,MAAS,MAAO,QAAW,IAAK,KAAQ,YACzF,MAARtN,IAEHxK,EAAM8X,IAAI,CAAC,MAASnM,KAAKC,IAAI,EAAGpB,EAAK9B,WAAW9U,QAAU,OAC1DoM,EAAM40B,SAASpqB,EAAK9B,aAErB1I,EAAMo4B,SAAQ,KAEb,IAAIuM,EAAMliC,WAAWzC,EAAM20B,YACtB/e,MAAM+uB,KAAOu0B,EAAKxjB,MAAmB7qC,GAAO85B,EAAG,GAEtD,GAGGhyB,EAAM,EAEV,IAAK,IAAI7N,EAAI,EAAGA,EAAI9P,KAAK0d,MAAM9e,OAAQkR,IACvC,CACC,IAAIo0D,EAAOlkE,KAAK0d,MAAM5N,GAEtB6N,IACA,IAAI4kI,EAAa,GAAI,UAAUtjH,SAASj/B,KAAKihJ,SAASn+H,IAAI,CAAC,YAAa,GAAGnF,gBACvE0jI,EAAY,GAAI,UAAUpiH,SAASj/B,KAAKihJ,SAASn+H,IAAI,CAAC,YAAa,GAAGnF,eAG1E,GADA4kI,EAAWz/H,IAAI,CAAC,QAAW,OAAQ,YAAa,OAAQ,kBAAmB,aAAc,cAAe,aACpGxjB,MAAMC,QAAQ2kE,EAAKxjB,OACvB,CACC,IAAK,IAAI32C,EAAI,EAAGA,EAAIm6D,EAAKxjB,MAAM9hD,OAAQmL,IAGtCu4I,EAAWC,EADAr+E,EAAKxjB,MAAM32C,GACOm6D,EAAMn6D,GAGpC,GAAIm6D,EAAKxjB,MAAM9hD,OAAS,EACxB,CACC,IAAI4jJ,EAAU,GAAI,oEAAoEvjH,SAASsjH,GAC/FC,EAAQ5lH,QAAQ,KAChB4lH,EAAQ1/H,IAAI,CAAC,eAAgB,UAC7B0/H,EAAQ9/G,SAAQ,KAEf,IAAIje,EAAOy/C,EAAKxjB,MAChBj8B,EAAKnX,OAAOmX,EAAK7lB,OAAS,EAAG,GACA,iBAAlB,EAAIyY,KAAKoN,IAAmBA,EAAKnX,OAAOmX,EAAK7lB,OAAS,EAAG,GACpEoB,KAAKkhJ,cACLlhJ,KAAKyiJ,iBAAiB,GAExB,CACD,MACKH,EAAWC,EAAYr+E,EAAKxjB,MAAOwjB,EAAM,GAE9C,IAAIw+E,EAAY,GAAI,oEAAoEzjH,SAASsjH,GACjGG,EAAU9lH,QAAQ,KAClB8lH,EAAU5/H,IAAI,CAAC,eAAgB,UAC/B4/H,EAAUhgH,SAAQ,IAAM1iC,KAAK2iJ,cAAcD,EAAWx+E,GAAM,KAC5D,IAAI0+E,EAAU,GAAI,oEAAoE3jH,SAASsjH,GAC/FK,EAAQhmH,QAAQ,KAChBgmH,EAAQ9/H,IAAI,CAAC,eAAgB,UAC7B8/H,EAAQlgH,SAAQ,IAAM1iC,KAAK2iJ,cAAcC,EAAS1+E,GAAM,KAExD,IAAIu9E,EAAY,GAAI,oEAAoExiH,SAASoiH,GACjGI,EAAU7kH,QAAQ,KAClB6kH,EAAU/+G,SAAQ,KAEjB1iC,KAAK0d,MAAMpQ,OAAOwC,EAAG,GACrB9P,KAAKkhJ,cACLlhJ,KAAKyiJ,iBAAiB,GAExB,CAEA9kI,IACA,IAAI+jI,EAAS,GAAI,UAAUziH,SAASj/B,KAAKihJ,SAASn+H,IAAI,CAAC,YAAa,GAAGnF,eAAiBA,UAAa,aAAc3d,KAAK0d,MAAM9e,OAAS,EAAI,SAAW,SAClJ+iJ,EAAS,GAAI,oEAAoE1iH,SAASyiH,GAC9FC,EAAO/kH,QAAQ,KACf+kH,EAAOj/G,SAAQ,IAAM1iC,KAAK6iJ,YAAYlB,IACvC,CAEQ,eAAAc,GAEP,IAAItrD,EAAWn3F,KAAK0d,MAAMrf,KAAK6lE,GAASA,EAAKxjB,QAC7C1gD,KAAKghJ,eAAe7pD,EACrB,CAEQ,WAAA0rD,CAAYC,GAEnB,IAAIC,EAAgC,GACpC,MAAMC,EAAQ,CAAC,0CACf,IAAK,IAAIC,KAAWD,EAAOD,EAAWvmJ,QAAQi0F,GAAa9+E,KAAKw/E,cAAc8xD,IAC9E,IAAIC,EAAQ,IAAI,GAAMJ,GACtBI,EAAMnB,iBAAmB,KAExB/hJ,KAAKmjJ,eAAeD,EAAOH,GAAatxD,IAEvCzxF,KAAK0d,MAAMlhB,KAAK,CAACkkD,MAAO+wC,EAAKR,MAC7BjxF,KAAKkhJ,cACLlhJ,KAAKyiJ,iBAAiB,GACrB,EAEHS,EAAM38H,MACP,CAEQ,aAAAo8H,CAAcG,EAAe5+E,EAAyBk/E,GAE7D,IAAIL,EAAgC,GACpC,MAAMM,EAAe,CAAC,0CAChBC,EAAa,CAAC,6CACpB,IAAK,IAAIL,KAAYG,EAAaE,EAAaD,EAAeN,EAAWvmJ,QAAQi0F,GAAa9+E,KAAKw/E,cAAc8xD,IACjH,IAAIC,EAAQ,IAAI,GAAMJ,GACtBI,EAAMnB,iBAAmB,KAExB/hJ,KAAKmjJ,eAAeD,EAAOH,GAAatxD,IAEd,iBAAdvtB,EAAKxjB,QAAmBwjB,EAAKxjB,MAAQ,CAACwjB,EAAKxjB,QAClD0iG,GAAYl/E,EAAKxjB,MAAMlkD,KAAK,MAChC0nE,EAAKxjB,MAAMlkD,KAAKi1F,EAAKR,KACrBjxF,KAAKkhJ,cACLlhJ,KAAKyiJ,iBAAiB,GACrB,EAEHS,EAAM38H,MACP,CAGQ,cAAA48H,CAAeD,EAAaH,EAA+BQ,GAElE,IAAIh+G,EAAO29G,EAAM9e,UAEjB,IAAK,IAAI3yC,KAAQsxD,EACjB,CACC,IAAIp9G,EAAM,GAAI,UAAU1G,SAASsG,GAC7BksD,EAAKvkF,MAAQ,IAEhBy4B,EAAI7iB,IAAI,CAAC,cAAgB2uE,EAAKvkF,MAAQ,GAAO,OAC7C,GAAI,kBAAyB+xB,SAAS0G,GAAK7iB,IAAI,CAAC,MAAS,UAAW,eAAgB,WAErF,IAAI0gI,EAAO,GAAI,WAAWvkH,SAAS0G,GAAKL,MAAM,oBAC9Ck+G,EAAK5mH,QAAQ60D,EAAKvoB,OAClBzkC,GAAW++G,EAAMz9H,EAAW0rE,EAAKR,KAAM,KAAM,KAC7CuyD,EAAK9gH,SAAQ,KAEZsC,KACAk+G,EAAM5f,QACNigB,EAAgB9xD,EAAK,GAEvB,CACD,GJtND,SAAY+kD,GAGX,iDACA,mDACA,mDACA,mDACA,mDACA,oDACA,oDACA,qDACA,qDACA,qDACA,qDAIA,kDACA,mDACA,mDACA,qDAGA,iDACA,gDACA,iDACA,iDACA,iDACA,gDACA,iDACA,iDACA,iDACA,kDACA,mDACA,mDACA,mDAGA,qBACA,oBACA,CAxCD,CAAYA,KAAAA,GAAa,KA0CzB,MAAMiN,GACN,CAGC,CAACjN,GAAckN,GAAI,KACnB,CAAClN,GAAcmN,KAAM,QACrB,CAACnN,GAAcoN,KAAM,QACrB,CAACpN,GAAcqN,KAAM,QACrB,CAACrN,GAAcsN,KAAM,YACrB,CAACtN,GAAc3uG,MAAO,SACtB,CAAC2uG,GAAcuN,MAAO,QAAS,KAC/B,CAACvN,GAAcwN,OAAQ,SAAU,MACjC,CAACxN,GAAcyN,OAAQ,SAAiB,SAAU,MAClD,CAACzN,GAAc0N,OAAQ,SAAU,MACjC,CAAC1N,GAAc2N,OAAQ,SAAU,MAGjC,CAAC3N,GAAc4N,IAAK,OACpB,CAAC5N,GAAc6N,KAAM,QACrB,CAAC7N,GAAc8N,KAAM,OAAe,QACpC,CAAC9N,GAAc+N,OAAQ,UAEvB,CAAC/N,GAAcgO,GAAI,MACnB,CAAChO,GAAcj3H,EAAG,KAClB,CAACi3H,GAAciO,GAAI,MACnB,CAACjO,GAAckO,GAAI,KAAa,MAChC,CAAClO,GAAcmO,GAAI,MACnB,CAACnO,GAAcoO,EAAG,KAClB,CAACpO,GAAcqO,GAAI,MACnB,CAACrO,GAAcsO,GAAI,KAAa,MAChC,CAACtO,GAAcuO,GAAI,MACnB,CAACvO,GAAcjqG,IAAK,OACpB,CAACiqG,GAAcwO,KAAM,QACrB,CAACxO,GAAc9D,KAAM,OAAe,QACpC,CAAC8D,GAAcyO,KAAM,QAErB,CAACzO,GAAc0O,IAAK,OACpB,CAAC1O,GAAc2O,IAAK,QAGfC,GACN,CAEC,CAAC5O,GAAckN,GAAI,KAAM,GACzB,CAAClN,GAAcmN,KAAM,KAAM,KAC3B,CAACnN,GAAcoN,KAAM,KAAM,KAC3B,CAACpN,GAAcqN,KAAM,KAAM,KAC3B,CAACrN,GAAcsN,KAAM,KAAM,KAC3B,CAACtN,GAAc3uG,MAAO,KAAM,GAC5B,CAAC2uG,GAAcuN,MAAO,KAAM,GAC5B,CAACvN,GAAcwN,OAAQ,KAAM,MAC7B,CAACxN,GAAcyN,OAAQ,KAAM,MAC7B,CAACzN,GAAc0N,OAAQ,KAAM,MAC7B,CAAC1N,GAAc2N,OAAQ,KAAM,OAG7B,CAAC3N,GAAc4N,IAAK,KAAM,MAC1B,CAAC5N,GAAc6N,KAAM,KAAM,MAC3B,CAAC7N,GAAc8N,KAAM,KAAM,MAC3B,CAAC9N,GAAc+N,OAAQ,KAAM,GAC7B,CAAC/N,GAAc0O,IAAK,KAAM,MAC1B,CAAC1O,GAAc2O,IAAK,KAAM,OAGpB,MAAME,GAQL,YAAOxM,GAEb,IAAK,IAAInX,KAAQ+hB,GACjB,CACC,IAAIxyD,EAAaywC,EAAK,GAAI5lI,EAAc4lI,EAAK,GAC7C1hI,KAAKslJ,cAAc9oJ,KAAKy0F,GACxBjxF,KAAKulJ,aAAa/oJ,KAAKV,GACvBkE,KAAKwlJ,YAAYv0D,GAAOn1F,EAGxB,IAAK,IAAIgU,EAAI,EAAGA,GAAK4xH,EAAK9iI,OAAQkR,IAAK9P,KAAKylJ,YAAY/jB,EAAK5xH,IAAMmhF,CACpE,CACA,IAAK,IAAIywC,KAAQ0jB,GACjB,CACC,IAAIn0D,EAAaywC,EAAK,GAAI5lI,EAAc4lI,EAAK,GAAI3iH,EAAe2iH,EAAK,GACrE1hI,KAAK0lJ,cAAcz0D,GAAO,CAACn1F,EAAMijB,EAClC,CACA/e,KAAK64I,MAAQ,MACd,CAEO,mBAAO8M,GAGb,OADA3lJ,KAAK64I,QACE74I,KAAKslJ,aACb,CACO,kBAAOM,GAGb,OADA5lJ,KAAK64I,QACE74I,KAAKulJ,YACb,CACO,gBAAOM,CAAU50D,GAGvB,OADAjxF,KAAK64I,QACE74I,KAAKwlJ,YAAYv0D,EACzB,CACO,gBAAO60D,CAAUhqJ,GAGvB,OADAkE,KAAK64I,QACE74I,KAAKylJ,YAAY3pJ,EACzB,CAIO,sBAAOiqJ,CAAgB90D,EAAY9kF,GAEzC,IAAKg/F,EAAUpsF,GAAS/e,KAAK0lJ,cAAcz0D,IAAQ,CAAC,KAAM,MAC1D,OAAKka,EACE,CAACA,EAAU,EAAInyF,IAAI7M,EAAQ4S,IADZ,CAAC,KAAM,KAE9B,EAtDc,GAAAumI,cAAyB,GACzB,GAAAC,aAAwB,GACxB,GAAAC,YAAqC,CAAC,EACtC,GAAAC,YAAqC,CAAC,EACtC,GAAAC,cAAiD,CAAC,E,IK9E5DM,IAAL,SAAKA,GAEJ,gBACA,gBACA,eACA,CALD,CAAKA,KAAAA,GAAY,KAMjB,MAAMC,GAA2B,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,MACtDC,GAA2B,CAAC,IAAK,IAAK,OAAQ,OAAQ,OAAQ,QAE7D,MAAMC,WAAsB5jB,GA4BlC,WAAArlI,CAAYkpJ,EAAoCC,EAA6BvlI,EAAa,MAEzFpW,MAAMoW,GAFyC,KAAAulI,WAAAA,EA1BzC,KAAAttB,UAA2B,KAc1B,KAAAutB,UAAgB,KAChB,KAAAC,QAAc,KAMd,KAAApG,aAA+C,KAC/C,KAAAqG,eAAiD,KAQxDxmJ,KAAKomJ,UAAYtgI,EAAUsgI,GAE3BpmJ,KAAKo+C,MAAQ,iBACbp+C,KAAKwiI,gBAAkB,GACvBxiI,KAAKyiI,gBAAkB,GAIvB,GAAiB,gBArEO,0SAsEzB,CAEO,MAAA2d,CAAO7/I,GAEbP,KAAKmgJ,aAAe5/I,CACrB,CACO,QAAAkmJ,CAASlmJ,GAEfP,KAAKwmJ,eAAiBjmJ,CACvB,CAEO,YAAA4nC,GAAiC,OAAOnoC,KAAKomJ,SAAU,CAGpD,QAAAptB,GAELh5H,KAAK+4H,WAAW/4H,KAAK+4H,UAAUiM,YAAY,IAAIP,IAEnD,IAAI76B,EAAU5pG,KAAKqkI,aAAc9+F,EAAOvlC,KAAKokI,UAIzCpkI,KAAKwmJ,iBAERxmJ,KAAK0mJ,UAAY,GAAI,iEAAiEznH,SAAS2qE,GAC/F5pG,KAAK0mJ,UAAUhkH,SAAQ,IAAM1iC,KAAK2mJ,oBAGnC/8C,EAAQttE,WAAW,KACnBstE,EAAQr0F,OAAOvV,KAAKkkI,UAEpBt6B,EAAQttE,WAAW,KACnBt8B,KAAKygJ,QAAU,GAAI,+DAA+DxhH,SAAS2qE,GAC3F5pG,KAAKygJ,QAAQ/9G,SAAQ,IAAM1iC,KAAK4mJ,iBAIhCrhH,EAAKziB,IAAI,CAAC,QAAW,cACrB,IAAI+jI,EAAW,GAAI,UAAU5nH,SAASsG,GACtCshH,EAAS/jI,IAAI,CAAC,aAAc,SAAU,OAAU,SAChD+jI,EAAS/jI,IAAI,CAAC,aAAc9iB,KAAKqmJ,WAAW,GAAK,OACjDQ,EAAS/jI,IAAI,CAAC,gBAAiB,OAAQ,iBAAkB,SAIzD,IAAIgkI,EAAQ9mJ,KAAK+mJ,YAAY9nH,SAAS4nH,GAEtC7mJ,KAAKgnJ,gBAAgBF,EAAO,EAAG,QAAQ,GACvC9mJ,KAAKinJ,SAAWjnJ,KAAKknJ,gBAAgBJ,EAAO,GAC5C9mJ,KAAKinJ,SAASrnH,SAAS5/B,KAAKomJ,UAAUtqJ,MAEtCkE,KAAKgnJ,gBAAgBF,EAAO,EAAG,YAAY,GAC3C,IAAIK,EAAW,GAAI,UAAUloH,SAAS6nH,GACtCK,EAASrkI,IAAI,CAAC,cAAe,QAAS,WAAY,MAClD9iB,KAAKonJ,eAAeD,GAEpBnnJ,KAAKgnJ,gBAAgBF,EAAO,EAAG,eAAe,GAC9C9mJ,KAAKsmJ,UAAYtmJ,KAAKqnJ,qBAAqBP,EAAO,GAElD9mJ,KAAKgnJ,gBAAgBF,EAAO,EAAG,YAAY,GAC3C9mJ,KAAKumJ,QAAUvmJ,KAAKqnJ,qBAAqBP,EAAO,GAEhD9mJ,KAAKsmJ,UAAU1mH,SAAS5/B,KAAKomJ,UAAU/nG,aACnCr+C,KAAKomJ,UAAUkB,UAAUtnJ,KAAKumJ,QAAQ3mH,SAAS5/B,KAAKomJ,UAAUkB,SAASxpI,KAAK,OAIhF,IAAIypI,EAAQvnJ,KAAK+mJ,YAAY9nH,SAAS4nH,GAClClpI,EAAM,EAGVA,IACA3d,KAAKgnJ,gBAAgBO,IAAS5pI,EAAK,WAAW,GAC9C,IAAI6pI,EAAaxnJ,KAAKynJ,UAAUF,EAAO5pI,GAAKmF,IAAI,CAAC,QAAW,OAAQ,cAAe,WAYnF,GAXA9iB,KAAK0nJ,YAAc,GAAI,YAAYzoH,SAASuoH,GAAY1kI,IAAI,CAAC,YAAa,IAAK,KAAQ,YACvF9iB,KAAK0nJ,YAAY9nH,SAAS5/B,KAAKomJ,UAAU/sF,SACzCr5D,KAAK0nJ,YAAYtqH,QAAQuqH,YAAc3nJ,KAAK4nJ,mBAC5C5nJ,KAAK0nJ,YAAYtkH,SAAQ,IAAMpjC,KAAK6nJ,oBACpC7nJ,KAAK8nJ,UAAY,GAAI,UAAU7oH,SAASuoH,GAAY1kI,IAAI,CAAC,YAAa,MACtE9iB,KAAK6nJ,kBAEL7nJ,KAAKgnJ,gBAAgBO,IAAS5pI,EAAK,SAAS,GAC5C3d,KAAK+nJ,UAAY/nJ,KAAKknJ,gBAAgBK,EAAO5pI,GAC7C3d,KAAK+nJ,UAAUnoH,SAAS5/B,KAAKomJ,UAAU4B,OAEnCC,GAAMC,eAAiBloJ,KAAKomJ,UAAU71E,QAC1C,CACC,IAAI5qC,EAAM3lC,KAAKynJ,UAAUF,IAAS5pI,GACxB,GAAI,mFAAmFshB,SAAS0G,GACtGjD,SAAQ,KAAO1iC,KAAKmoJ,iBAAiBnrJ,MAAM,GAChD,CAEAgD,KAAKgnJ,gBAAgBO,IAAS5pI,EAAK,UAAU,GAC7C3d,KAAKooJ,WAAapoJ,KAAKknJ,gBAAgBK,EAAO5pI,GAC9C3d,KAAKooJ,WAAWxoH,SAAS5/B,KAAKomJ,UAAUiC,QAExCroJ,KAAKgnJ,gBAAgBO,IAAS5pI,EAAK,eAAe,GAC5B,IAAIojI,GAAe/gJ,KAAKomJ,UAAUpvD,aAAc92D,IAErElgC,KAAKomJ,UAAUpvD,YAAc92D,CAAI,IAElB+G,OAAO,GAAI,UAAUhI,SAASsoH,GAAOzkI,IAAI,CAAC,YAAa,GAAGnF,eAE1E3d,KAAKgnJ,gBAAgBO,IAAS5pI,EAAK,SAAS,GAC5B,IAAIojI,GAAe/gJ,KAAKomJ,UAAUkC,OAAQpoH,IAEzDlgC,KAAKomJ,UAAUkC,MAAQpoH,CAAI,IAElB+G,OAAO,GAAI,UAAUhI,SAASsoH,GAAOzkI,IAAI,CAAC,YAAa,GAAGnF,eAEhE8yE,GAAa9+E,MAAQ8+E,GAAa9+E,KAAKo/E,WAAWnyF,OAAS,IAE9DoB,KAAKgnJ,gBAAgBO,IAAS5pI,EAAK,YAAY,GAC5B,IAAI0kI,GAAeriJ,KAAKomJ,UAAUjvD,UAAWA,IAE/Dn3F,KAAKomJ,UAAUjvD,SAAW,EAAI7iF,SAAS6iF,GAAYA,OAAWn1F,CAAS,IAE3DilC,OAAO,GAAI,UAAUhI,SAASsoH,GAAOzkI,IAAI,CAAC,YAAa,GAAGnF,gBAGxE3d,KAAKinJ,SAASnlH,YAEd,IAAK,IAAInf,KAAO4iB,EAAKtH,QAAQ,SAAUtb,EAAIyf,WAAW96B,GAAUtH,KAAKuoJ,WAAWjhJ,GAAO,KACvF,IAAK,IAAIqb,KAAO4iB,EAAKtH,QAAQ,YAAatb,EAAIyf,WAAW96B,GAAUtH,KAAKuoJ,WAAWjhJ,GAAO,KAC1F,IAAK,IAAIqb,KAAO4iB,EAAKtH,QAAQ,kBAAmBtb,EAAIya,QAAQorH,YAAa,CAC1E,CAEO,KAAAllB,GAEFtjI,KAAK+4H,WAAW/4H,KAAK+4H,UAAUkM,aACnCv6H,MAAM44H,OACP,CAKQ,YAAAsjB,GAEP,IAAI6B,EAAgBjoI,GAA8B,KAARA,EAAa,KAAOA,EAmB9DxgB,KAAKomJ,UAAUtqJ,KAAO2sJ,EAAazoJ,KAAKinJ,SAAStnH,YAEjD,IAAI+oH,EAAQ1oJ,KAAK2oJ,aAAaziB,oBAC7BlmI,KAAKomJ,UAAUv+G,MAAO7nC,KAAKomJ,UAAUx+G,SAAU5nC,KAAKomJ,UAAU1+I,OAAS,CAAC,KAAM,KAAM,MACrF,IAAIkhJ,EAAY5oJ,KAAK6oJ,cAAclpH,WAAW0kC,OAAQykF,EAAY9oJ,KAAK+oJ,cAAcppH,WAAW0kC,OAC5FqkF,GAAS1C,GAAagD,OAErBJ,IAAW5oJ,KAAKomJ,UAAUx+G,SAAWn6B,WAAWm7I,IAChDE,IAAW9oJ,KAAKomJ,UAAU1+I,MAAQ+F,WAAWq7I,IACjD9oJ,KAAKomJ,UAAUt+F,MAAQ9nD,KAAKipJ,eAAetpH,WAAW0kC,QAE9CqkF,GAAS1C,GAAakD,OAE9BlpJ,KAAKomJ,UAAUx+G,SAAW,CAACn6B,WAAWm7I,GAAYn7I,WAAWq7I,IAC7D9oJ,KAAKomJ,UAAUtwD,SAAW,KAC1B91F,KAAKomJ,UAAUt+F,MAAQ9nD,KAAKipJ,eAAetpH,WAAW0kC,QAE9CqkF,GAAS1C,GAAamD,QAE9BnpJ,KAAKomJ,UAAUv+G,MAAQ,CAACp6B,WAAWm7I,GAAYn7I,WAAWq7I,IAC1D9oJ,KAAKomJ,UAAUtwD,SAAW,KAC1B91F,KAAKomJ,UAAUt+F,MAAQ,MAGnB5gB,GAAQS,YAAY3nC,KAAKomJ,aAE7BpmJ,KAAKomJ,UAAUx+G,SAAW,KAC1B5nC,KAAKomJ,UAAU1+I,MAAQ,KACvB1H,KAAKomJ,UAAUv+G,MAAQ,KACvB7nC,KAAKomJ,UAAUt+F,MAAQ,KACvB9nD,KAAKomJ,UAAUtwD,SAAW,MAGvB91F,KAAKsmJ,YAAWtmJ,KAAKomJ,UAAU/nG,YAAcoqG,EAAazoJ,KAAKsmJ,UAAU3mH,aAE7E3/B,KAAKomJ,UAAUkB,SArDE,MAEhB,IAAI5pI,EAmDgC1d,KAAKumJ,QAAQ5mH,WAnDjCgB,MAAM,MAAM/1B,QAAQs5D,GAASA,EAAKtlE,OAAS,IAC3D,OAAO8e,EAAM9e,OAAS,EAAI8e,EAAQ,IAAI,EAkDb0rI,GAE1BppJ,KAAKomJ,UAAU/sF,QAAUovF,EAAazoJ,KAAK0nJ,YAAY/nH,YACvD3/B,KAAKomJ,UAAU4B,MAAQS,EAAazoJ,KAAK+nJ,UAAUpoH,YACnD3/B,KAAKomJ,UAAUiC,OAASI,EAAazoJ,KAAKooJ,WAAWzoH,YAMrD3/B,KAAKmgJ,aAAangJ,KACnB,CAGQ,cAAA2mJ,GAEP3mJ,KAAK4mJ,eACL5mJ,KAAKwmJ,eAAexmJ,KACrB,CAGQ,SAAA+mJ,GAEP,IAAIphH,EAAM,GAAI,UAAU7iB,IAAI,CAAC,QAAW,OAAQ,MAAS,OAAQ,OAAU,gBAI3E,OAHA6iB,EAAI7iB,IAAI,CAAC,cAAe,WACxB6iB,EAAI7iB,IAAI,CAAC,kBAAmB,QAAS,eAAgB,UACrD6iB,EAAI7iB,IAAI,CAAC,wBAAyB,gDAC3B6iB,CACR,CAGQ,eAAAqhH,CAAgBlmI,EAAYnD,EAAYqI,EAAaqjI,GAE5D,IAAI1jH,EAAM,GAAI,UAAU1G,SAASne,GAKjC,OAJA6kB,EAAI7iB,IAAI,CAAC,cAAe,QAAS,WAAYnF,EAAIjK,WAAY,aAAc21I,EAAW,WAAa,WAC/FA,GAAU1jH,EAAI7iB,IAAI,CAAC,cAAe,UACtC6iB,EAAI7iB,IAAI,CAAC,gBAAiB,QAAS,cAAe,SAClD6iB,EAAI/I,QAAQ5W,GACL2f,CACR,CAGQ,eAAAuhH,CAAgBpmI,EAAYnD,GAEnC,IAAIgoB,EAAM,GAAI,UAAU1G,SAASne,GAAQgC,IAAI,CAAC,YAAa,GAAGnF,cAC1D3S,EAAQ,GAAI,YAAYi0B,SAAS0G,GAErC,OADA36B,EAAM8X,IAAI,CAAC,MAAS,mBAAoB,QAAW,IAAK,KAAQ,YACzD9X,CACR,CACQ,oBAAAq8I,CAAqBvmI,EAAYnD,GAExC,IAAIgoB,EAAM,GAAI,UAAU1G,SAASne,GAAQgC,IAAI,CAAC,YAAa,GAAGnF,cAC1Dib,EAAO,GAAI,eAAeqG,SAAS0G,GAGvC,OAFA/M,EAAK5X,KAAK,CAAC,KAAQ,MACnB4X,EAAK9V,IAAI,CAAC,MAAS,mBAAoB,QAAW,IAAK,KAAQ,YACxD8V,CACR,CAEQ,SAAA6uH,CAAU3mI,EAAYnD,GAE7B,IAAIgoB,EAAM,GAAI,UAAU1G,SAASne,GAEjC,OADA6kB,EAAI7iB,IAAI,CAAC,cAAe,QAAS,WAAYnF,EAAIjK,aAC1CiyB,CACR,CAGQ,UAAA4iH,CAAWjhJ,EAAqBgiJ,GAEvC,GAAqB,IAAjBhiJ,EAAMqsI,QAETrsI,EAAMwgG,iBACNxgG,EAAMilG,kBACNvsG,KAAKsjI,aAED,GAAIgmB,GAA6B,IAAjBhiJ,EAAMqsI,QAC3B,CACC,GAAI3zI,KAAKupJ,uBAAwB,OACjCjiJ,EAAMwgG,iBACNxgG,EAAMilG,kBACNvsG,KAAK4mJ,cACN,CACD,CAGQ,cAAAQ,CAAetmI,GAEtB,IAAI0oI,EAAO,GAAI,UAAUvqH,SAASne,GAClC0oI,EAAK1mI,IAAI,CAAC,QAAW,OAAQ,cAAe,WAC5C,IAAI6W,EAAM,IAAU,GAAI,uCAAuCsF,SAASuqH,GAExExpJ,KAAK2oJ,aAAe,IAAIjjB,GAAW,CAACsgB,GAAagD,MAAOhD,GAAakD,MAAOlD,GAAamD,QACzFnpJ,KAAK2oJ,aAAa1hH,OAAOuiH,GAEzBxpJ,KAAKypJ,aAAezpJ,KAAK0pJ,kBAAkB/vH,IAAO35B,KAAKomJ,UAAUtwD,SAAUmwD,GAAiBC,IACrF,CAACtqJ,EAAcstE,KAAkBlpE,KAAKomJ,UAAUtwD,SAAWl6F,CAAK,IAEvEoE,KAAK6oJ,cAAgB,GAAI,YAAY5pH,SAAStF,KAAO2L,MAAM,2BAC3DtlC,KAAK6oJ,cAAc7nI,KAAK,CAAC,KAAQ,OACjChhB,KAAK6oJ,cAAc1lH,UAAS,IAAMnjC,KAAKupJ,yBAEvC,IAAII,EAAU,GAAI,WAAW1qH,SAASuqH,GAAM1mI,IAAI,CAAC,QAAW,oBAE5D9iB,KAAK+oJ,cAAgB,GAAI,YAAY9pH,SAAStF,KAAO2L,MAAM,2BAC3DtlC,KAAK+oJ,cAAc/nI,KAAK,CAAC,KAAQ,OAEjC,IAAI4oI,EAAQjwH,IACZ35B,KAAKipJ,eAAiB,GAAI,YAAYhqH,SAAS2qH,GAAOtkH,MAAM,2BAC5DtlC,KAAKipJ,eAAejoI,KAAK,CAAC,KAAQ,KAAM,YAAe,UACvDhhB,KAAK6pJ,cAAgB,GAAI,oEAAoE5qH,SAAS2qH,GAAO9mI,IAAI,CAAC,cAAe,UACjI9iB,KAAK6pJ,cAAcjtH,QAAQ,KAC3B58B,KAAK6pJ,cAAcnnH,SAAQ,IAAM1iC,KAAK8pJ,oBAEtC,IAAIC,EAAgB,KAEnB/pJ,KAAKypJ,aAAazpH,OAAO,UAAW,SACpC2pH,EAAQpqH,QAAQ,YAChBv/B,KAAKipJ,eAAejpH,OAAO,UAAW,gBACtChgC,KAAK6pJ,cAAc7pH,OAAO,UAAW,eAAe,EAEjDgqH,EAAgB,KAEnBhqJ,KAAKypJ,aAAazpH,OAAO,UAAW,QACpC2pH,EAAQpqH,QAAQ,MAChBv/B,KAAKipJ,eAAejpH,OAAO,UAAW,gBACtChgC,KAAK6pJ,cAAc7pH,OAAO,UAAW,eAAe,EAEjDiqH,EAAgB,KAEnBjqJ,KAAKypJ,aAAazpH,OAAO,UAAW,QACpC2pH,EAAQpqH,QAAQ,KAChBv/B,KAAKipJ,eAAejpH,OAAO,UAAW,QACtChgC,KAAK6pJ,cAAc7pH,OAAO,UAAW,OAAO,EAG7C,GAA4B,MAAxBhgC,KAAKomJ,UAAUv+G,MACnB,CAEC,GADA7nC,KAAK2oJ,aAAajiB,iBAAiBsf,GAAamD,OAC5CnpJ,KAAKomJ,UAAUv+G,MACnB,CACC,IAAK0lE,EAAOC,GAASxtG,KAAKomJ,UAAUv+G,MACpC7nC,KAAK6oJ,cAAcjpH,SAAS2tE,EAAM75F,YAClC1T,KAAK+oJ,cAAcnpH,SAAS4tE,EAAM95F,WACnC,CACAu2I,GACD,MACK,GAAI3qJ,MAAMC,QAAQS,KAAKomJ,UAAUx+G,UACtC,CACC5nC,KAAK2oJ,aAAajiB,iBAAiBsf,GAAakD,OAChD,IAAKgB,EAAKn7G,GAAQ/uC,KAAKomJ,UAAUx+G,SACtB,MAAPsiH,GAAalqJ,KAAK6oJ,cAAcjpH,SAASsqH,EAAIx2I,YACrC,MAARq7B,GAAc/uC,KAAK+oJ,cAAcnpH,SAASmP,EAAKr7B,YACnD1T,KAAKipJ,eAAerpH,SAAS5/B,KAAKomJ,UAAUt+F,OAC5CkiG,GACD,MAGChqJ,KAAK2oJ,aAAajiB,iBAAiBsf,GAAagD,OACjB,MAA3BhpJ,KAAKomJ,UAAUx+G,UAAkB5nC,KAAK6oJ,cAAcjpH,SAAS5/B,KAAKomJ,UAAUx+G,SAASl0B,YAC7D,MAAxB1T,KAAKomJ,UAAU1+I,OAAe1H,KAAK+oJ,cAAcnpH,SAAS5/B,KAAKomJ,UAAU1+I,MAAMgM,YACnF1T,KAAKipJ,eAAerpH,SAAS5/B,KAAKomJ,UAAUt+F,OAC5CiiG,IAGD/pJ,KAAK2oJ,aAAa5iB,eAAkBlwH,IAExB,GAAPA,EAAUk0I,IACE,GAAPl0I,EAAUm0I,IACH,GAAPn0I,GAAUo0I,GAAe,CAEpC,CAGQ,iBAAAP,CAAkB5oI,EAAYrU,EAAgBN,EAAiBggC,EAAiBg+G,GAEvF,IAAIC,EAAO,GAAI,aAAanrH,SAASne,GACrCspI,EAAKtnI,IAAI,CAAC,OAAU,UACpB,IAAK,IAAIhT,EAAI,EAAGA,EAAI3D,EAAOvN,OAAQkR,IACnC,CACC,IAAIusE,EAAM,GAAI,aAAap9C,SAASmrH,GACpC/tE,EAAI/7C,QAAQ,QAASxwB,EAAE4D,YACvB2oE,EAAI98C,QAAQ4M,EAAOr8B,IACfrD,GAAWN,EAAO2D,IAAMrD,GAAW0/B,EAAOr8B,IAAIusE,EAAI/7C,QAAQ,WAAY,OAC3E,CAEA,OADA8pH,EAAKjnH,UAAS,KAAO,IAAIttB,EAAM7D,SAASo4I,EAAKzqH,YAAawqH,EAAWh+I,EAAO0J,GAAMs2B,EAAOt2B,GAAK,IACvFu0I,CACR,CAEQ,eAAAN,GAEP,IAAI5G,EAAQ,IAAI,GAAMljJ,KAAK6pJ,eAC3B3G,EAAMnB,iBAAmB,KAExB,IAAIx8G,EAAO29G,EAAM9e,UACjB,IAAK,IAAIl7D,KAASm8E,GAAMO,cACxB,CACC,IAAIjgH,EAAM,GAAI,UAAU1G,SAASsG,GAAMD,MAAM,2BAC7CK,EAAI/I,QAAQssC,GACZvjC,EAAIjD,SAAQ,KAEX1iC,KAAKipJ,eAAerpH,SAASspC,GAC7Bg6E,EAAM5f,OAAO,GAEf,GAED4f,EAAM38H,MACP,CAIQ,oBAAAgjI,GAEP,IAAIc,EAAOrqJ,KAAK6oJ,cAAclpH,WAAW0kC,OAGrC0xB,EAAM,GACV,IAAK,IAAIvtC,KAAOy9F,GAAqBoE,EAAK3pI,WAAW8nC,IAAQA,EAAI5pD,OAASm3F,EAAIn3F,SAAQm3F,EAAMvtC,GACxFutC,EAAKs0D,EAAOA,EAAK1pI,UAAUo1E,EAAIn3F,QAC1ByrJ,EAAK3pI,WAAW,MAAcq1E,EAAKs0D,GAAQ,CAAC,KAAMA,EAAK1pI,UAAU,IACjE0pI,EAAK3pI,WAAW,QAAcq1E,EAAKs0D,GAAQ,CAAC,KAAMA,EAAK1pI,UAAU,KAG1E,IAAImnC,EAAQ,GACZ,IAAK,IAAKhsD,EAAMm1F,KAAQx1F,OAAO2C,QAAQinJ,GAAMI,aAC7C,CACC,IAAI6E,EAAUxuJ,EAAKmqB,QAAQ,sBAAuB,QAE9CllB,EADQ,IAAIpD,OAAO,kBAAmB2sJ,OACxBtpJ,KAAKqpJ,GACvB,GAAKtpJ,EAAL,CACAspJ,EAAOtpJ,EAAM,GACb+mD,EAAQu9F,GAAMG,YAAYv0D,GAC1B,KAHoB,CAIrB,CAEA,IAAIs5D,EAAS/pI,IAERA,EAAIE,WAAW,OAAMF,EAAM,IAAMA,KAChC,wBAAwBgqI,KAAKhqI,KAC1BI,MAAMnT,WAAW+S,KAG1B6pI,EAAOA,EAAKhmF,OACZ,IAAIqkF,EAAqB,KACrB+B,EAAQ,GAAIC,EAAQ,GACpB3pJ,EAAQ,kCAAkCC,KAAKqpJ,GACnD,GAAItpJ,GAGH,IADC2nJ,EAAO+B,EAAOC,GAAS,CAAC1E,GAAakD,MAAOnoJ,EAAM,GAAIA,EAAM,KACxDwpJ,EAAME,KAAWF,EAAMG,KAAW5iG,EAAO,OAAO,OAEjD,GAAI/mD,EAAQ,qCAAqCC,KAAKqpJ,IAG1D,IADC3B,EAAO+B,EAAOC,GAAS,CAAC1E,GAAakD,MAAOnoJ,EAAM,GAAIA,EAAM,KACxDwpJ,EAAME,KAAWF,EAAMG,KAAW5iG,EAAO,OAAO,OAEjD,GAAI/mD,EAAQ,qCAAqCC,KAAKqpJ,IAG1D,IADC3B,EAAO+B,EAAOC,GAAS,CAAC1E,GAAagD,MAAOjoJ,EAAM,GAAIA,EAAM,KACxDwpJ,EAAME,KAAWF,EAAMG,KAAW5iG,EAAO,OAAO,OAEjD,GAAI/mD,EAAQ,mCAAmCC,KAAKqpJ,IAGxD,IADC3B,EAAO+B,EAAOC,GAAS,CAAC1E,GAAamD,MAAOpoJ,EAAM,GAAIA,EAAM,KACxDwpJ,EAAME,KAAWF,EAAMG,GAAQ,OAAO,OAEvC,GAAI3pJ,EAAQ,mCAAmCC,KAAKqpJ,IAGxD,IADC3B,EAAO+B,EAAOC,GAAS,CAAC1E,GAAamD,MAAOpoJ,EAAM,GAAIA,EAAM,KACxDwpJ,EAAME,KAAWF,EAAMG,GAAQ,OAAO,MAG5C,CACC,IAAKH,EAAMF,KAAUviG,EAAO,OAAO,GAClC4gG,EAAO+B,GAAS,CAACzE,GAAagD,MAAOqB,EACvC,CAQA,OANArqJ,KAAK2oJ,aAAajiB,iBAAiBgiB,GACnC1oJ,KAAKypJ,aAAa7pH,SAASjpB,KAAKC,IAAI,EAAGqvI,GAAgBzrI,QAAQu7E,IAAMriF,YACrE1T,KAAK6oJ,cAAcjpH,SAAS6qH,GAC5BzqJ,KAAK+oJ,cAAcnpH,SAAS8qH,GAC5B1qJ,KAAKipJ,eAAerpH,SAASkoB,GAC7B9nD,KAAKomJ,UAAUt+F,MAAQA,GAChB,CACR,CAGc,cAAAqgG,G,qCAEb,IAAKF,GAAMC,cAAe,OAE1B,IAAI37G,EAAMqkC,GAAeC,YAAY7wE,KAAKomJ,UAAU71E,SACpD,IAAItkB,GAAQ73C,QAAQm4B,GAMpB,IAEC,IAAIy7G,EAAQ,EAAI5wI,YAAY6wI,GAAM0C,UAAUp+G,IAC5CvsC,KAAK+nJ,UAAUnoH,SAASooH,EACzB,CACA,MAAO56H,GAAKqrG,MAAM,4BAA8BrrG,EAAI,CACrD,E,+RAGQ,gBAAAw6H,GAEP,IAAK5nJ,KAAKomJ,UAAU71E,QAAS,MAAO,GACpC,IAAIhkC,EAAMqkC,GAAeC,YAAY7wE,KAAKomJ,UAAU71E,SACpD,GAAItkB,GAAQ73C,QAAQm4B,GAAM,MAAO,GACjC,IAAK,IAAIz8B,EAAIy8B,EAAIC,SAAU18B,GAAK,EAAGA,IAAgC,GAAvBy8B,EAAIoQ,aAAa7sC,IAASy8B,EAAI2gB,mBAAmBp9C,GAC7F,OAAOm8C,GAAQ0M,iBAAiBpsB,EACjC,CAGQ,eAAAs7G,GAEP,IAAItuF,EAAK,EAEL23E,EAAKlxI,KAAK0nJ,YAAY/nH,WAG1B,IAFKuxG,IAAIA,EAAKlxI,KAAK0nJ,YAAYtqH,QAAQuqH,aAEhCzW,GACP,CACC,IAAInwI,EAAQmwI,EAAGnwI,MAAM,6BACrB,IAAKA,EAAO,CAACw4D,EAAK,EAAG,KAAM,CAC3B,IAAI7c,EAAOrI,GAAUC,SAAS95B,QAAQzZ,EAAM,IAC5C,GAAI27C,GAAQ,EAAG,CAAC6c,EAAK,EAAG,KAAM,CAC9B,IAAI5pB,EAAM,EACV,GAAI5uC,EAAM,KAET4uC,EAAM39B,SAASjR,EAAM,IACjB4uC,GAAO,GAAG,CAAC4pB,EAAK,EAAG,KAAM,CAE9BA,GAAMllB,GAAUQ,uBAAuB6H,GAAQ/M,EAC/CuhG,EAAKnwI,EAAM,EACZ,CAEIw4D,EAAK,GAERv5D,KAAK8nJ,UAAUhlI,IAAI,CAAC,eAAgB,UACpC9iB,KAAK8nJ,UAAUlrH,QAAQ28B,EAAGkU,QAAQ,GAAK,YAIvCztE,KAAK8nJ,UAAUhlI,IAAI,CAAC,eAAgB,MACpC9iB,KAAK8nJ,UAAUlrH,QAAQ,IAEzB,EC/mBD,MAAMguH,GAAgB,qDAWf,MAAMC,GAOL,WAAa/sH,CAAKgtH,G,qCAExB,OAAO,IAAI/nJ,SAA+B,CAAC3F,EAASD,KAEnD,IAAI4tJ,EAAgC,GASpC,IAAIF,GAAcC,GARI3hJ,IAErB4hJ,EAAQvuJ,KAAK2M,EAAO,IAEG6hJ,IAEnBA,EAAK7tJ,EAAO6tJ,GAAW5tJ,EAAQ2tJ,EAAQ,IAEoB7yI,OAAO,GAEzE,E,+RAEA,WAAAhb,CAAoB4tJ,EAA2BG,EAA6DC,GAAxF,KAAAJ,WAAAA,EAA2B,KAAAG,eAAAA,EAA6D,KAAAC,iBAAAA,EAtBpG,KAAAC,SAAU,EACV,KAAAC,QAAmB,EAuB3B,CAGO,KAAAlzI,GAEN,IAAIkO,EAAMwkI,GAAgB,SAAWS,mBAAmBrrJ,KAAK8qJ,YAAc,aAE7D,EAAQ,KAChBrqJ,IAAI2lB,GAAMklI,IAEf,IAAI5hJ,EAAO,GACX4hJ,EAAKvnJ,GAAG,QAASkF,GAAiBS,GAAQT,IAC1CqiJ,EAAKvnJ,GAAG,OAAO,IAAM/D,KAAKurJ,aAAa7hJ,IAAM,IAC3C3F,GAAG,SAAUinJ,IAAkBhrJ,KAAKmrJ,SAASnrJ,KAAKkrJ,iBAAiBF,EAAIt3I,WAAW,GACtF,CAGO,IAAAqxB,GAEN/kC,KAAKmrJ,SAAU,CAChB,CAKQ,YAAAI,CAAa7hJ,GAEpB,GAAI1J,KAAKmrJ,QAAS,OAElB,IAAIjkJ,EAAM,KACV,IAECA,EAAM0W,KAAKqf,MAAMvzB,EAClB,CACA,MAAO0jB,GAEN3lB,QAAQw3I,IAAI,gCAAkCv1I,GAC9C1J,KAAKkrJ,iBAAiB,uCAAyC99H,EAAG1Z,WACnE,CAEKxM,EAAIskJ,gBAOTxrJ,KAAKorJ,QAAUlkJ,EAAIskJ,eAAeC,IAClCzrJ,KAAK0rJ,aALJ1rJ,KAAKkrJ,kBAMP,CAEQ,SAAAQ,GAEP,GAAI1rJ,KAAKmrJ,QAAS,OAClB,GAA2B,GAAvBnrJ,KAAKorJ,QAAQxsJ,OAGhB,YADAoB,KAAKkrJ,mBAIN,IAAIS,EAAM3rJ,KAAKorJ,QAAQ/rI,QACnB+G,EAAMwkI,GAAgB,QAAUe,EAAM,OAE5B,EAAQ,KAChBlrJ,IAAI2lB,GAAMklI,IAEf,IAAI5hJ,EAAO,GACX4hJ,EAAKvnJ,GAAG,QAASkF,GAAiBS,GAAQT,IAC1CqiJ,EAAKvnJ,GAAG,OAAO,IAAM/D,KAAK4rJ,iBAAiBliJ,IAAM,IAC/C3F,GAAG,SAAUinJ,IAAkBhrJ,KAAKmrJ,SAASnrJ,KAAKkrJ,iBAAiBF,EAAIt3I,WAAW,GACtF,CAEQ,gBAAAk4I,CAAiBliJ,GAExB,GAAI1J,KAAKmrJ,QAAS,OAElB,IAAIjhF,EAAK,IAAID,GAAavgE,GAAMuzB,QAChC,IAAK,IAAIntB,EAAI,EAAGA,EAAIo6D,EAAGruD,QAAS/L,IAAK9P,KAAK6rJ,eAAe3hF,EAAIp6D,GAE7D9P,KAAK0rJ,WACN,CAEQ,cAAAG,CAAe3hF,EAAcvsD,GAEpC,IAAIxU,EACJ,CACC,IAAO+gE,EAAG5pB,YAAY3iC,EAAK,YAC3B,MAAS,GACT,QAAWusD,EAAG3pB,UAAU5iC,EAAK,6BAC7B,MAASusD,EAAG3pB,UAAU5iC,EAAK,uBAC3B,SAAYusD,EAAG3pB,UAAU5iC,EAAK,2BAG3BxU,EAAOojC,MAEV0f,GAAQ2O,eAAezxD,EAAOojC,KAC9Bsf,GAAU0a,uBAAuBp9D,EAAOojC,MAGzC,MAAMu/G,EAAW,CAAC,iCAAkC,gCAC9C,6BAA8B,yBAA0B,sBAC9D,IAAK,IAAIhsG,KAAWgsG,EACpB,CACC,IAAIliG,EAAQsgB,EAAG3pB,UAAU5iC,EAAKmiC,GAC9B,GAAK8J,GAAyB,iBAATA,EACrB,IAAK,IAAI9tD,KAAQ8tD,EAAMjpB,MAAM,MAAW7kC,GAAQqN,EAAOygD,MAAMpvC,QAAQ1e,GAAQ,GAAGqN,EAAOygD,MAAMptD,KAAKV,EACnG,CAEAkE,KAAKirJ,eAAe9hJ,EACrB,EC7IM,MAAM4iJ,WAA6BxpB,GAuBzC,WAAArlI,CAAoB4tJ,EAA2BzE,GAE9C37I,QAFmB,KAAAogJ,WAAAA,EAA2B,KAAAzE,WAAAA,EAdvC,KAAA2F,QAAwB,KACxB,KAAAC,WAAmC,GAEnC,KAAAC,cAAgB,EAChB,KAAAnM,SAAoB,GACpB,KAAAoM,QAAgB,GAChB,KAAAC,aAAe,EACf,KAAAC,QAAqB,GACrB,KAAAC,OAAe,GAEf,KAAAvmB,eAAwD,KAQ1D1hG,GAAa,4BAA4B,GAAiB,0BAA2BrkC,KAAKgmI,cAE/FhmI,KAAKo+C,MAAQ,kBACbp+C,KAAKwiI,gBAAkB,GACvBxiI,KAAKyiI,gBAAkB,GACvBziI,KAAK2iI,cAAgB0jB,EAAW,EACjC,CAEO,QAAAjgB,CAAS7lI,GAEfP,KAAK+lI,eAAiBxlI,CACvB,CAGU,QAAAy4H,GAET,IAAIpvB,EAAU5pG,KAAKqkI,aAAc9+F,EAAOvlC,KAAKokI,UAI7CpkI,KAAKusJ,WAAa,GAAI,WAAWttH,SAAS2qE,GAC1CA,EAAQttE,WAAW,KAEnBstE,EAAQr0F,OAAOvV,KAAKkkI,UAEpBt6B,EAAQttE,WAAW,KAEnBt8B,KAAKwsJ,UAAY,GAAI,iEAAiEvtH,SAAS2qE,GAC/F5pG,KAAKwsJ,UAAU9pH,SAAQ,IAAM1iC,KAAKysJ,cAElC7iD,EAAQttE,WAAW,KAEnBt8B,KAAK8tI,SAAW,GAAI,gEAAgE7uG,SAAS2qE,GAC7F5pG,KAAK8tI,SAASprG,SAAQ,IAAM1iC,KAAK0sJ,gBACjC1sJ,KAAK8tI,SAAS1wG,QAAQ+xG,UAAW,EAIjC5pG,EAAKziB,IAAI,CAAC,QAAW,gBACrB9iB,KAAK6mJ,SAAW,GAAI,UAAU5nH,SAASsG,GACvCvlC,KAAK6mJ,SAAS/jI,IAAI,CAAC,aAAc,SAAU,OAAU,SACrD9iB,KAAK6mJ,SAAS/jI,IAAI,CAAC,aAAe9iB,KAAKqmJ,WAAW,GAAK,IAAO,OAC9DrmJ,KAAK6mJ,SAAS/jI,IAAI,CAAC,gBAAiB,OAAQ,iBAAkB,SAE9D9iB,KAAK2sJ,sBAEL3sJ,KAAK4sJ,WAAa,GAAI,UAAU3tH,SAASj/B,KAAK6mJ,UAE1C7mJ,KAAK8qJ,YAAY9qJ,KAAKysJ,WAC3B,CAEO,KAAAnpB,GAEFtjI,KAAKgsJ,SAAShsJ,KAAKgsJ,QAAQjnH,OAC/Br6B,MAAM44H,OACP,CAGO,OAAAupB,GAEN,OAAO7sJ,KAAKksJ,aAAe,EAAI,KAAOlsJ,KAAK+/I,SAAS//I,KAAKksJ,aAC1D,CACO,WAAA5rG,GAEN,OAAOtgD,KAAKosJ,YAAc,EAAI,KAAOpsJ,KAAKqsJ,QAAQrsJ,KAAKosJ,YACxD,CAIQ,mBAAAO,GAEP,IAAI3lB,EAAO,GAAI,UAAU/nG,SAASj/B,KAAK6mJ,UAAU/jI,IAAI,CAAC,QAAW,SACjEkkH,EAAKlkH,IAAI,CAAC,MAAS,OAAQ,OAAU,oBACrCkkH,EAAKlkH,IAAI,CAAC,cAAe,SAAU,kBAAmB,QAAS,eAAgB,UAC/EkkH,EAAKlkH,IAAI,CAAC,wBAAyB,gDAEpB,GAAI,UAAUmc,SAAS+nG,GAAMlkH,IAAI,CAAC,cAAe,QAAS,WAAY,IAAK,gBAAiB,UAClG8Z,QAAQ,SAEjB,IAAIkwH,EAAW,GAAI,UAAU7tH,SAAS+nG,GAAMlkH,IAAI,CAAC,cAAe,QAAS,WAAY,MACrF9iB,KAAK+sJ,YAAc,GAAI,YAAY9tH,SAAS6tH,GAAUhqI,IAAI,CAAC,MAAS,OAAQ,KAAQ,YACpF9iB,KAAK+sJ,YAAYntH,SAAS5/B,KAAK8qJ,YAC/B9qJ,KAAK+sJ,YAAY3qH,WAAW96B,GAAUtH,KAAKgtJ,SAAS1lJ,KAEpDtH,KAAK+sJ,YAAYjrH,WAClB,CAEQ,SAAA2qH,GAEHzsJ,KAAKgsJ,SAAShsJ,KAAKgsJ,QAAQjnH,OAC/B/kC,KAAK4sJ,WAAWvtH,QAChBr/B,KAAKisJ,WAAa,GAElBjsJ,KAAKusJ,WAAW3vH,QAAQ,gBAExB,IAAI5W,EAAOhmB,KAAK+sJ,YAAYptH,WACvB3Z,IACLhmB,KAAKgsJ,QAAU,IAAInB,GAAc7kI,GAC/B7c,GAAoCnJ,KAAKitJ,UAAU9jJ,KACnD6hJ,GAAoBhrJ,KAAKktJ,eAAelC,KAC1ChrJ,KAAKgsJ,QAAQ9zI,QACd,CAEQ,WAAAw0I,GAEP1sJ,KAAK+lI,eAAe/lI,MACpBA,KAAKsjI,OACN,CAEQ,SAAA2pB,CAAU9jJ,GAEjBnJ,KAAKisJ,WAAWzvJ,KAAK2M,GAErB,IAAI69H,EAAO,GAAI,UAAU/nG,SAASj/B,KAAK4sJ,YAAY9pI,IAAI,CAAC,QAAW,SACnEkkH,EAAKlkH,IAAI,CAAC,MAAS,OAAQ,OAAU,kBAAmB,cAAe,MAAO,kBAAmB,UACjGkkH,EAAKlkH,IAAI,CAAC,eAAgB,UAC1BkkH,EAAKlkH,IAAI,CAAC,wBAAyB,mDAEnC,IAAIqqI,EAAS,GAAI,UAAUluH,SAAS+nG,GAAMlkH,IAAI,CAAC,cAAe,WAAY,WAAY,IAAK,gBAAiB,UAE5G,GAAI3Z,EAAOojC,IACX,CACC,IAAIjC,EAASV,GAAaY,uBACtB4yC,EAAU,IAAIonD,GAAmB,EAAG,EAAGl6F,EAAO5gC,KAAKmgC,YACnD2oD,EAAS,IAAI3V,GAAgB1zE,EAAOojC,IAAK6wC,EAAS9yC,GACtDkoD,EAAOpU,UACPoU,EAAOjP,YAAY,EAAG,EAAG,IAAK,KAC9B,IAAI2lD,EAAM,IAAIlvC,GACd,IAAIoH,GAAa5O,EAAQ02C,GAAKxnC,OAC9BwnC,EAAI/2G,YAEJ,IAAIktE,EAAM,GAAI6pC,EAAI/pC,aAAalgE,SAASkuH,GAAQrqI,IAAI,CAAC,QAAW,iBAChEu8E,EAAI7+D,SAAS,sCAEb,MAAM3qB,EAAM7V,KAAKqsJ,QAAQztJ,OACzBygG,EAAI38D,SAAQ,IAAM1iC,KAAKotJ,eAAev3I,KAEtC7V,KAAKqsJ,QAAQ7vJ,KAAK2M,EAAOojC,KACzBvsC,KAAKssJ,OAAO9vJ,KAAK6iG,EAClB,MACK8tD,EAAOvwH,QAAQ,kBAEpB,IAAIywH,EAAU,GAAI,UAAUpuH,SAAS+nG,GAAMlkH,IAAI,CAAC,cAAe,QAAS,WAAY,IAAK,gBAAiB,UAE1G,GAA2B,GAAvB3Z,EAAOygD,MAAMhrD,OAAayuJ,EAAQzwH,QAAQ,mBACzC,IAAK,IAAI9gC,KAAQqN,EAAOygD,MAC7B,CACC,IAAIjkB,EAAM,GAAI,UAAU1G,SAASouH,GAC7B7J,EAAO,GAAI,WAAWvkH,SAAS0G,GACnC69G,EAAKhjH,SAAS,sCACdgjH,EAAK5mH,QAAQ9gC,GAEb,MAAM+Z,EAAM7V,KAAK+/I,SAASnhJ,OAC1B+mC,EAAIjD,SAAQ,IAAM1iC,KAAKstJ,WAAWz3I,KAElC7V,KAAK+/I,SAASvjJ,KAAKV,GACnBkE,KAAKmsJ,QAAQ3vJ,KAAKgnJ,EACnB,CACD,CAEQ,cAAA0J,CAAelC,GAEtBhrJ,KAAKusJ,WAAW3vH,QAAQ,IAEpBouH,EAAKvyB,MAAM,kBAAoBuyB,GACA,GAA1BhrJ,KAAKisJ,WAAWrtJ,SAExBoB,KAAK4sJ,WAAWvtH,QAChBr/B,KAAK4sJ,WAAWhwH,QAAQ,kBAE1B,CAEQ,QAAAowH,CAAS1lJ,GAEK,IAAjBA,EAAMqsI,SAETrsI,EAAMwgG,iBACN9nG,KAAKsjI,SAEoB,IAAjBh8H,EAAMqsI,UAEdrsI,EAAMwgG,iBACN9nG,KAAKysJ,YAEP,CAEQ,UAAAa,CAAWz3I,GAElB,IAAI03I,EAAOvtJ,KAAKksJ,aACZqB,GAAQ13I,IAAKA,GAAO,GAEpB03I,GAAQ,GAAGvtJ,KAAKmsJ,QAAQoB,GAAM1sH,YAAY,oCAC1ChrB,GAAO,GAAG7V,KAAKmsJ,QAAQt2I,GAAK2qB,SAAS,oCACzCxgC,KAAKksJ,aAAer2I,EAEpB7V,KAAK8tI,SAAS1wG,QAAQ+xG,SAAWnvI,KAAKksJ,aAAe,GAAKlsJ,KAAKosJ,YAAc,CAC9E,CAEQ,cAAAgB,CAAev3I,GAEtB,IAAI03I,EAAOvtJ,KAAKosJ,YACZmB,GAAQ13I,IAAKA,GAAO,GAEpB03I,GAAQ,GAAGvtJ,KAAKssJ,OAAOiB,GAAM1sH,YAAY,oCACzChrB,GAAO,GAAG7V,KAAKssJ,OAAOz2I,GAAK2qB,SAAS,oCACxCxgC,KAAKosJ,YAAcv2I,EAEnB7V,KAAK8tI,SAAS1wG,QAAQ+xG,SAAWnvI,KAAKksJ,aAAe,GAAKlsJ,KAAKosJ,YAAc,CAC9E,CAGQ,UAAApmB,GAEP,MAAO,gYAgBR,ECvPM,MAAMwnB,GAIZ,WAAAtwJ,CAAoB8oB,GAAA,KAAAA,KAAAA,CAEpB,CAIO,OAAAynI,GAEN,IAAIC,EAAO,IAAI7qF,GAAa7iE,KAAKgmB,MACjC,IAAK0nI,EAAKzwH,OAAQ,CAClB,MAAO7P,GAAK,OAAO,IAAK,CAExB,IAAKsgI,EAAKnhH,IAAK,OAAO,KAEtB,IAAIohH,EAA8B,CAACphH,IAAKmhH,EAAKnhH,KAO7C,GANImhH,EAAKlqF,eAAe1kE,KAAO,IAAG6uJ,EAAKC,UAAYF,EAAKlqF,gBACpDkqF,EAAK/pF,mBAAmB/kE,OAAS,IAAG+uJ,EAAKE,cAAgBH,EAAK/pF,oBAC9D+pF,EAAK9pF,oBAAoBhlE,OAAS,IAAG+uJ,EAAKG,eAAiBJ,EAAK9pF,qBAChE8pF,EAAK7pF,eAAejlE,OAAS,IAAG+uJ,EAAKI,UAAYL,EAAK7pF,gBACtD6pF,EAAK5pF,cAAcllE,OAAS,IAAG+uJ,EAAK1oF,SAAWyoF,EAAK5pF,iBAEnD6pF,EAAKC,WAAcD,EAAKE,eAAkBF,EAAKG,gBAClDH,EAAKI,WAAcJ,EAAK1oF,UAAU,OAAO,KAI3C,IAAI+oF,EAA6B,CAACL,GAClC,IAAK,IAAI79I,EAAI,EAAGA,EAAIk+I,EAAWpvJ,QAC/B,CACC,IAAI+G,EAAQqoJ,EAAWl+I,GACnB2U,EAAuBzkB,KAAKiuJ,mBAAmBtoJ,GAMnD,GALK8e,IAAMA,EAAOzkB,KAAKkuJ,uBAAuBvoJ,IACzC8e,IAAMA,EAAOzkB,KAAKmuJ,wBAAwBxoJ,IAC1C8e,IAAMA,EAAOzkB,KAAKouJ,mBAAmBzoJ,IACrC8e,IAAMA,EAAOzkB,KAAKquJ,kBAAkB1oJ,IAErC8e,EACJ,CACCupI,EAAWl+I,GAAK2U,EAAK,GACrB,IAAK,IAAI1a,EAAI,EAAGA,EAAI0a,EAAK7lB,OAAQmL,IAAKikJ,EAAW1gJ,OAAOwC,EAAI/F,EAAG,EAAG0a,EAAK1a,GACxE,MACK+F,IAEL,GAAIk+I,EAAWpvJ,OAnBD,IAmBkB,KACjC,CAEA,GAAyB,GAArBovJ,EAAWpvJ,OAAa,OAAO,KACnC,GAAyB,GAArBovJ,EAAWpvJ,QAAe,EAAIwV,QAAQ45I,EAAW,GAAGxvH,UAAW,OAAO,KAE1E,IAAI5yB,EAAO,CAAC07B,EAAuB3hC,KAElC,IAAI2oJ,EAA2B,CAAC,EAGhC,GAFI3oJ,EAAM4mC,MAAK+hH,EAAQ/9E,QAAU,IAAItF,GAAatlE,EAAM4mC,KAAK/hC,SAC7D88B,EAAKI,SAASlrC,KAAK8xJ,GACf3oJ,EAAM64B,SACV,CACC8vH,EAAQ5mH,SAAW,GACnB,IAAK,IAAIlM,KAAS71B,EAAM64B,SAAU5yB,EAAK0iJ,EAAS9yH,EACjD,GAGG8L,EAAwB,CAACI,SAAU,IACnCgmH,EAAKpqF,UAASh8B,EAAKxrC,KAAO4xJ,EAAKpqF,SACnC,IAAK,IAAI39D,KAASqoJ,EAAYpiJ,EAAK07B,EAAM3hC,GAEzC,OAAO2hC,CACR,CAIQ,kBAAA2mH,CAAmBtoJ,GAE1B,IAAKA,EAAMioJ,UAAW,OAAO,KAC7B,IAAI9jG,EAAc,KAClB,IAAK,IAAIzhB,KAAQ1iC,EAAMioJ,UAAU7+I,OAAQ,CAAC+6C,EAAOzhB,EAAM,KAAM,CAC7D,GAAY,MAARyhB,EAAc,OAAO,KACzB,IAAInY,EAAQhsC,EAAMioJ,UAAUntJ,IAAIqpD,GAEhC,GADAnkD,EAAMioJ,UAAUnsJ,OAAOqoD,GACnB,EAAI11C,QAAQu9B,GAAQ,OAAO,KAE/B,IAAIpF,EAAM5mC,EAAM4mC,IACZgiH,EAAWhiH,EAAII,SAASmd,GAAO0kG,EAAWjiH,EAAIM,OAAOid,GACxB,KAA7Bvd,EAAI2Q,YAAYsxG,KACkB,KAA7BjiH,EAAI2Q,YAAYqxG,IAChBhiH,EAAIsQ,aAAa0xG,GAAYhiH,EAAIsQ,aAAa2xG,OADXD,EAAUC,GAAY,CAACA,EAAUD,IAI7E,IAAK,IAAIlmH,KAAQ1iC,EAAMioJ,UAAU7+I,OAAQ/O,KAAKyuJ,WAAW9oJ,EAAMioJ,UAAUntJ,IAAI4nC,GAAOmmH,GACpF,GAAI7oJ,EAAMmoJ,eAAgB,IAAK,IAAIzlH,KAAQ1iC,EAAMmoJ,eAAgB9tJ,KAAKyuJ,WAAWpmH,EAAMmmH,GACvF,GAAI7oJ,EAAMkoJ,cAAe,IAAK,IAAIxlH,KAAQ1iC,EAAMkoJ,cAAe7tJ,KAAKyuJ,WAAWpmH,EAAMmmH,GACrF,GAAI7oJ,EAAMooJ,UAAW,IAAK,IAAIj+I,EAAInK,EAAMooJ,UAAUnvJ,OAAS,EAAGkR,GAAK,EAAGA,IAEjEnK,EAAMooJ,UAAUj+I,GAAG4iC,MAAQ87G,GAC3B7oJ,EAAMooJ,UAAUj+I,GAAG4iC,KAAO87G,GAAU7oJ,EAAMooJ,UAAUj+I,GAAG4iC,OAC3D1yC,KAAKyuJ,WAAW9oJ,EAAMooJ,UAAUj+I,GAAGm8B,KAAMuiH,IAFC7oJ,EAAMooJ,UAAUzgJ,OAAOwC,EAAG,GAIrE,GAAInK,EAAMs/D,SAAU,IAAK,IAAI58B,KAAQ1iC,EAAMs/D,SAAUjlE,KAAKyuJ,WAAWpmH,EAAKsJ,MAAO68G,GAEjF,IAAI/pI,EAAuB,GAC3B,IAAK,IAAIiqI,KAAY/8G,EACrB,CACC,IAAIg9G,EAAOpiH,EAAI3wB,QACX4yI,GAAYG,EAAKhiH,SAASmd,GAAO6kG,EAAK3hG,YAAYlD,EAAM4kG,GAAgBC,EAAK1hG,UAAUnD,EAAM4kG,GACjGC,EAAKzhG,mBAAmBshG,GAGxB/pI,EAAKjoB,KAAKwD,KAAK4uJ,WAAWjpJ,EAAOgpJ,GAClC,CAEA,OAAOlqI,CACR,CAGQ,sBAAAypI,CAAuBvoJ,GAE9B,GAAI,EAAIyO,QAAQzO,EAAMkoJ,eAAgB,OAAO,KAE7C,IAAIp8G,EAAM9rC,EAAMkoJ,cAAcxuI,QAC1BktB,EAAM5mC,EAAM4mC,IAEZsiH,EAAW,IAAIzqJ,IACnB,IAAK,IAAIsuC,KAAQjB,EAAKo9G,EAASvuJ,IAAIoyC,GACnC,IAAI+W,EAAiB,GACrB,IAAK,IAAI35C,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,GAAI++I,EAASvqJ,IAAIioC,EAAII,SAAS78B,KAAO++I,EAASvqJ,IAAIioC,EAAIM,OAAO/8B,IACrG,CACC,IAAI0oD,EAAKjsB,EAAIupB,SAAShmD,GAClB0oD,GAAMxb,GAAS6Z,mBAAqB2B,GAAMxb,GAAS8Z,mBAAmBrN,EAAMjtD,KAAKsT,EACtF,CAEA,IAAIg/I,EAAQn4I,KAAKW,IAAI,IAAK,GAAKmyC,EAAM7qD,QACjC6lB,EAAO,CAACzkB,KAAK4uJ,WAAWjpJ,EAAO4mC,IACnC,IAAK,IAAIz8B,EAAI,EAAGA,EAAIg/I,EAAOh/I,IAC3B,CACC,IAAIi/I,EAAOxiH,EAAI3wB,QACf,IAAK,IAAI7R,EAAI,EAAGilJ,EAAS,EAAGjlJ,EAAI0/C,EAAM7qD,OAAQmL,IAC9C,CACC,GAAI+F,EAAIk/I,EACR,CACC,IAAIx2F,EAAKu2F,EAAKj5F,SAASrM,EAAM1/C,IAC7ByuD,EAAKA,GAAMxb,GAAS6Z,kBAAoB7Z,GAAS8Z,kBAAoB9Z,GAAS6Z,kBAC9Ek4F,EAAK13F,YAAY5N,EAAM1/C,GAAIyuD,EAC5B,CACAw2F,IAAmB,CACpB,CACAvqI,EAAKjoB,KAAKwD,KAAK4uJ,WAAWjpJ,EAAOopJ,GAClC,CAEA,OAAOtqI,CACR,CAGQ,uBAAA0pI,CAAwBxoJ,GAE/B,GAAI,EAAIyO,QAAQzO,EAAMmoJ,gBAAiB,OAAO,KAE9C,IAAIr8G,EAAM9rC,EAAMmoJ,eAAezuI,QAC3BwvI,EAAW,IAAIzqJ,IACnB,IAAK,IAAIsuC,KAAQjB,EAAKo9G,EAASvuJ,IAAIoyC,GAEnC,IAAIu8G,EAAStpJ,EAAM4mC,IAAI3wB,QACvB,IAAK,IAAI9L,EAAI,EAAGA,GAAKm/I,EAAOxiH,SAAU38B,IAAK,GAAI++I,EAASvqJ,IAAI2qJ,EAAOtiH,SAAS78B,KAAO++I,EAASvqJ,IAAI2qJ,EAAOpiH,OAAO/8B,IAC9G,CACC,IAAI0oD,EAAKy2F,EAAOn5F,SAAShmD,GACrB0oD,GAAMxb,GAAS6Z,kBAAmBo4F,EAAO53F,YAAYvnD,EAAGktC,GAAS8Z,mBAC5D0B,GAAMxb,GAAS8Z,mBAAmBm4F,EAAO53F,YAAYvnD,EAAGktC,GAAS6Z,kBAC3E,CAEA,MAAO,CAAClxD,EAAO3F,KAAK4uJ,WAAWjpJ,EAAOspJ,GACvC,CACQ,kBAAAb,CAAmBzoJ,GAE1B,GAAI,EAAIyO,QAAQzO,EAAMooJ,WAAY,OAAO,KAEzC,IAAIzhI,EAAO3mB,EAAMooJ,UAAU1uI,QAEvBktB,EAAM5mC,EAAM4mC,IAAKwR,EAAKzxB,EAAKomB,KAC3BgzB,EAAOp5C,EAAK2f,KAAKrtC,QAAU,EAAI0tB,EAAK2f,KAAK,GAAK,EAE9CxnB,EAAuB,GAC3B,IAAK,IAAI3U,EAAIwc,EAAKk5C,OAAQ11D,GAAKwc,EAAKm5C,OAAQ31D,IAC5C,CACC,GAAS,GAALA,EACJ,CACC2U,EAAKjoB,KAAKwD,KAAK4uJ,WAAWjpJ,EAAO4mC,IACjC,QACD,CAEA,IAAIwiH,EAAOxiH,EAAI3wB,QACXszI,EAAsB,GAC1B,IAAK,IAAInlJ,EAAI,EAAGA,GAAK+F,EAAG/F,IACxB,CACC,IAAIi0C,EAAK+wG,EAAKxkG,QAAQwkG,EAAK7xG,YAAYa,GAAKgxG,EAAK3jG,MAAMrN,GAAKgxG,EAAK1jG,MAAMtN,IAIvE,GAHAgxG,EAAKxhG,cAAcvP,EAAI+wG,EAAKnyG,WAAWmB,IACvCgxG,EAAKzhG,gBAAgBtP,EAAI+wG,EAAKniG,aAAa5O,IAC3C+wG,EAAK37F,QAAQrV,EAAIC,EAAI,GACjB0nB,EAAO,EACX,CACC,IAAI+uD,EAAK,EACT,IAAK,IAAIjkF,KAAOu+G,EAAK1lG,YAAYtL,GAAK,GAAIvN,GAAOwN,GAAMxN,GAAOk1B,EAAM,CAAC+uD,EAAKjkF,EAAK,KAAM,CACrF,GAAIikF,EAAK,EACT,CACC,IAAI7kH,EAAIm/I,EAAK56G,SAAS4J,EAAI02E,GACtBs6B,EAAKpiH,SAAS/8B,IAAMmuC,EAAIgxG,EAAK/hG,YAAYp9C,EAAGouC,GAAU+wG,EAAK9hG,UAAUr9C,EAAGouC,EAC7E,CACD,CACAkxG,EAAW1yJ,KAAKuhD,EACjB,CAGA,IAAIoxG,EAASnvJ,KAAK4uJ,WAAWjpJ,EAAOopJ,GACpC,GAAII,EAAOlqF,SAAU,IAAK,IAAII,KAAO8pF,EAAOlqF,SAEvCI,EAAI1zB,MAAMzwC,SAAS68C,IAAKsnB,EAAI1zB,MAAMn1C,QAAQ0yJ,GAE/CzqI,EAAKjoB,KAAK2yJ,EACX,CAEA,OAAO1qI,CACR,CACQ,iBAAA4pI,CAAkB1oJ,GAEzB,GAAI,EAAIyO,QAAQzO,EAAMs/D,UAAW,OAAO,KAKxC,IAAI14B,EAAM5mC,EAAM4mC,IAAK04B,EAAWt/D,EAAMs/D,SAElCxnD,EAAWwnD,EAAS5mE,KAAKgnE,GAAQA,EAAIx6D,QACrCukJ,EAAW,EAAIv4I,cAAa,EAAMouD,EAASrmE,QAC/C,IAAK,IAAIymE,KAAOJ,EAAU,GAAII,EAAIvkD,OAAS,EAC3C,CACC,IAAI/W,EAAI0T,EAASjD,QAAQ6qD,EAAIvkD,QACzB/W,GAAK,IAAGqlJ,EAASrlJ,IAAK,EAC3B,CAEA,IAAIqnF,EAAO,CAAC5yD,SAAU,IAClB6wH,EAAU,IAAInsJ,IAElB,IADAmsJ,EAAQ3uJ,IAAI,EAAG0wF,KAEf,CACC,IAAIr8D,GAAW,EACf,IAAK,IAAIjlB,EAAI,EAAGA,EAAIm1D,EAASrmE,OAAQkR,IAAK,IAAKs/I,EAASt/I,KAAOu/I,EAAQ/qJ,IAAI2gE,EAASn1D,GAAGjF,OACvF,CACC,IAAIiW,EAASuuI,EAAQ5uJ,IAAIwkE,EAASn1D,GAAGgR,QACrC,IAAKA,EAAQ,SACb,IAAIkB,EAAO,CAACwc,SAAU,IACtB1d,EAAO0d,SAAShiC,KAAKwlB,GACrBqtI,EAAQ3uJ,IAAIukE,EAASn1D,GAAGjF,MAAOmX,GAC/B+S,GAAW,CACZ,CACA,IAAKA,EAAU,KAChB,CAEA,IAAIu6H,EAAW,EAAIz4I,cAAa,EAAM01B,EAAIC,UAC1C,IAAK,IAAI64B,KAAOJ,EAAU,IAAK,IAAItrD,KAAK0rD,EAAI1zB,MAAO29G,EAAS31I,EAAI,IAAK,EAErE,IAAK,IAAI7J,EAAI,EAAGA,EAAIm1D,EAASrmE,OAAQkR,IAAK,GAAIs/I,EAASt/I,GACvD,CACC,IAAIy/I,EAAWD,EAASrgJ,MAAM,GAC9B,IAAK,IAAI0K,KAAKsrD,EAASn1D,GAAG6hC,MAAO49G,EAAS51I,EAAI,IAAK,EAEnD,IACIqI,EAAO,CAACuqB,IADC0f,GAAQrd,aAAarC,EAAKgjH,IAEvCF,EAAQ5uJ,IAAIwkE,EAASn1D,GAAGgR,QAAQ0d,SAAShiC,KAAKwlB,EAC/C,CAGA,OAD4B,GAAxBovE,EAAK5yD,SAAS5/B,SAAawyF,EAAOA,EAAK5yD,SAAS,IAC7C4yD,EAAK5yD,QACb,CAGQ,UAAAowH,CAAWjpJ,EAAqB4mC,GAYvC,MATA,CACC,IAAOA,EACP,SAAY,GACZ,UAAa5mC,EAAMioJ,UAAY,IAAI1qJ,IAAIyC,EAAMioJ,WAAa,KAC1D,cAAiB9nI,EAAUngB,EAAMkoJ,eACjC,eAAkB/nI,EAAUngB,EAAMmoJ,gBAClC,UAAahoI,EAAUngB,EAAMooJ,WAC7B,SAAYjoI,EAAUngB,EAAMs/D,UAG9B,CAGQ,UAAAwpF,CAAWhqI,EAAeiuB,GAEjC,IAAK,IAAI5iC,EAAI2U,EAAK7lB,OAAS,EAAGkR,GAAK,EAAGA,IAEjC2U,EAAK3U,IAAM4iC,EAAMjuB,EAAKnX,OAAOwC,EAAG,GAC3B2U,EAAK3U,GAAK4iC,GAAMjuB,EAAK3U,IAEhC,ECzSD,IAAK0/I,IAAL,SAAKA,GAEJ,mBACA,mBACA,uBACA,oBACA,CAND,CAAKA,KAAAA,GAAO,KAQL,MAAMC,GAMZ,WAAAvyJ,CAAoBm3F,GAAA,KAAAA,QAAAA,EAJb,KAAAq7D,MAA0B,EAMjC,CAEO,OAAAC,GAEN,IAAIlnH,EAAUzoC,KAAKq0F,QAAQ7rD,aACvBonH,EAAWnnH,EAAQpqC,KAAK+pC,GAAWpoC,KAAKq0F,QAAQlsD,aAAaC,KAEjE,IAAK,IAAIt4B,EAAI,EAAGA,EAAI24B,EAAQ7pC,OAAQkR,IACpC,CACC,IAAImmF,EAAuB,CAAC7tD,OAAQK,EAAQ34B,IAGxCw3B,EAAOsoH,EAAS9/I,GACpB,GAAIw3B,EAAKipC,SAAW,EAAIn8D,QAAQkzB,EAAKI,UACrC,CACC,IAAI6E,EAAMqkC,GAAeC,YAAYvpC,EAAKipC,SAC1C,IAAKhkC,EAAK,SACV,IAAIi4B,EAASxkE,KAAK6vJ,gBAAgBtjH,GAC9B,EAAIj4B,SAASkwD,KAASyxB,EAAK65D,WAAatrF,EAAOnmE,KAAKkuC,GAAQqkC,GAAec,YAAYnlC,KAC5F,CAEAvsC,KAAK0vJ,MAAMlzJ,KAAKy5F,EACjB,CAEA,IAAI85D,EAA0B,GAC9B,IAAK,IAAIjgJ,EAAI,EAAGA,EAAI24B,EAAQ7pC,OAAQkR,IACpC,CACCigJ,EAAajgJ,GAAK,GAClB,IAAIlO,EAAI6mC,EAAQ34B,GAChB,IAAK,IAAI/F,EAAI+F,EAAI,EAAG/F,EAAI0+B,EAAQ7pC,OAAQmL,IACnC0+B,EAAQ1+B,GAAGnL,QAAUgD,EAAEhD,OAAS,GAAK,EAAI0X,OAAO1U,EAAG6mC,EAAQ1+B,GAAGkF,MAAM,EAAGrN,EAAEhD,UAAUmxJ,EAAajgJ,GAAGtT,KAAKuN,EAC9G,CAGA,IAAIimJ,EAAU,IAAI1wJ,MAAMmpC,EAAQ7pC,QAAQkY,KAAK04I,GAAQx0B,MACjDi1B,EAAa,EAAIl5I,YAAY,KAAM0xB,EAAQ7pC,QAC3CsxJ,EAAa,EAAIn5I,YAAY,KAAM0xB,EAAQ7pC,QAC3CuxJ,EAAW,EAAIp5I,YAAY,KAAM0xB,EAAQ7pC,QAC7C,OACA,CACC,IAAIgqC,GAAW,EAEf,IAAK,IAAI94B,EAAI,EAAGA,EAAI24B,EAAQ7pC,OAAQkR,IACpC,CACC,IAAIw3B,EAAOsoH,EAAS9/I,GAQpB,GAR+B9P,KAAK0vJ,MAAM5/I,GAEtCkgJ,EAAQlgJ,IAAM0/I,GAAQx0B,QAExBg1B,EAAQlgJ,GAAImgJ,EAAWngJ,GAAIogJ,EAAWpgJ,GAAIqgJ,EAASrgJ,IAAM9P,KAAKowJ,gBAAgB9oH,GAC3E0oH,EAAQlgJ,IAAM0/I,GAAQx0B,OAAMpyF,GAAW,KAGxC,EAAIx0B,QAAQkzB,EAAKI,UAArB,CAGA,GAAIsoH,EAAQlgJ,IAAM0/I,GAAQx0B,KAC1B,CACC,IAAIq1B,EAAS,EAAGC,EAAYd,GAAQx0B,KACpC,IAAK,IAAIjxH,KAAKgmJ,EAAajgJ,GAC3B,CACC,GAAIkgJ,EAAQjmJ,IAAMylJ,GAAQx0B,MAAyB,MAAjBk1B,EAAWnmJ,IAC3CumJ,GAAad,GAAQx0B,MAAQg1B,EAAQjmJ,IAAMumJ,EAC7C,CACCA,EAAYd,GAAQx0B,KACpB,KACD,CACAs1B,EAAYN,EAAQjmJ,GACpBsmJ,GAAUJ,EAAWlmJ,EACtB,CAEIumJ,GAAad,GAAQx0B,OAExBg1B,EAAQlgJ,GAAKwgJ,EACbL,EAAWngJ,GAAKugJ,EAChBznH,GAAW,EAEb,CAGA,GAAIonH,EAAQlgJ,IAAM0/I,GAAQx0B,MAAQ+0B,EAAajgJ,GAAGlR,QAAU,EAC5D,CACC,IAAI2xJ,GAAU,EAAGz3I,EAAM,EACvB,IAAK,IAAI/O,KAAKgmJ,EAAajgJ,GAE1B,GAAIkgJ,EAAQjmJ,IAAMylJ,GAAQx0B,KAC1B,CACC,GAAIu1B,GAAU,EAAG,CAACA,GAAU,EAAG,KAAM,CACrCA,EAASxmJ,CACV,KACK,IAAIimJ,EAAQjmJ,IAAMimJ,EAAQlgJ,GAAI,CAACygJ,GAAU,EAAG,KAAM,CAClD,GAAqB,MAAjBL,EAAWnmJ,GAAY,CAACwmJ,GAAU,EAAG,KAAM,CAC/Cz3I,GAAOm3I,EAAWlmJ,EAAE,CAGtBwmJ,GAAU,IAEbP,EAAQO,GAAUP,EAAQlgJ,GAC1BmgJ,EAAWM,GAAUN,EAAWngJ,GAAKgJ,EACrC8vB,GAAW,EAEb,CAhDwC,CAiDzC,CAEA,IAAKA,EAAU,KAChB,CAGA,IAAK,IAAI94B,EAAI,EAAGA,EAAI24B,EAAQ7pC,OAAQkR,IAAK,GAAIkgJ,EAAQlgJ,IAAM0/I,GAAQx0B,KAElE,IAAK,IAAIjxH,KAAKgmJ,EAAajgJ,GAAI,GAAIkgJ,EAAQjmJ,IAAMylJ,GAAQx0B,KACzD,CACC,IAAIj8G,EAAQ,EAAGyuF,EAAQyiD,EAAWngJ,GAAImhF,EAAa,KAC/C++D,EAAQjmJ,IAAMylJ,GAAQgB,KAErBR,EAAQlgJ,IAAM0/I,GAAQgB,MAAOzxI,EAAOkyE,GAAO,CAAC,IAAMuc,EAAOgpC,GAAcoN,MAClEoM,EAAQlgJ,IAAM0/I,GAAQiB,QAAS1xI,EAAOkyE,GAAO,CAAC,IAAMuc,EAAOgpC,GAAcmN,OACzEqM,EAAQlgJ,GAAM0/I,GAAQkB,OAEvBV,EAAQjmJ,IAAMylJ,GAAQiB,OAE1BT,EAAQlgJ,IAAM0/I,GAAQgB,OACjBR,EAAQlgJ,IAAM0/I,GAAQiB,QAAS1xI,EAAOkyE,GAAO,CAAC,IAAMuc,EAAOgpC,GAAcqN,OACzEmM,EAAQlgJ,GAAM0/I,GAAQkB,QAEvBV,EAAQjmJ,IAAMylJ,GAAQkB,QAE1BV,EAAQlgJ,IAAM0/I,GAAQgB,OACjBR,EAAQlgJ,IAAM0/I,GAAQiB,QAAS1xI,EAAOkyE,GAAO,CAAC,EAAMuc,EAAOgpC,GAAcuN,OACzEiM,EAAQlgJ,IAAM0/I,GAAQkB,SAAQ3xI,EAAOkyE,GAAO,CAAC,IAAMuc,EAAOgpC,GAAcsN,SAGvE,MAAP7yD,IAEkB,MAAjBi/D,EAAWnmJ,IAEd/J,KAAK0vJ,MAAM3lJ,GAAGosF,aAAe85D,EAAWlmJ,GAAKgV,EAC7C/e,KAAK0vJ,MAAM3lJ,GAAGqsF,UAA2B,MAAf+5D,EAASpmJ,GAAa,KAAOomJ,EAASpmJ,GAAKgV,GAIrE/e,KAAK0vJ,MAAM3lJ,GAAGosF,aAAe,CAAC85D,EAAWlmJ,GAAKgV,EAAOmxI,EAAWnmJ,GAAKgV,GAEtE/e,KAAK0vJ,MAAM3lJ,GAAGssF,UAAYgvD,GAAMQ,UAAU50D,GAC1CjxF,KAAK0vJ,MAAM3lJ,GAAGusF,aAAes5D,EAAS9/I,GAAGgmF,SAE3C,CAEF,CAEO,QAAAI,CAAS9tD,GAEf,IAAK,IAAI6tD,KAAQj2F,KAAK0vJ,MAAO,GAAI,EAAIp5I,OAAO8xB,EAAQ6tD,EAAK7tD,QAAS,OAAO6tD,EACzE,OAAO,IACR,CAKQ,eAAA45D,CAAgBtjH,GAEvB,IAAIokH,EAAiBpkH,IAEpB,IAAK,IAAIz8B,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,IAAK,GAAIy8B,EAAIupB,SAAShmD,IAAMktC,GAAS2lB,iBACxE,CACC,IAAI+R,EAAOnoC,EAAI3wB,QAAS+4D,EAAOpoC,EAAI3wB,QACnC,GAAwB,GAApB2wB,EAAI2H,UAAUpkC,GAKjB,OAFA4kE,EAAKrd,YAAYvnD,EAAGktC,GAAS8Z,mBAC7B6d,EAAKtd,YAAYvnD,EAAGktC,GAAS6Z,mBACtB,CAAC6d,EAAMC,GAEV,GAAwB,GAApBpoC,EAAI2H,UAAUpkC,GACvB,CAGC,IAAI4kE,EAAOnoC,EAAI3wB,QACf84D,EAAKrd,YAAYvnD,EAAGktC,GAAS+Y,iBAE7B,IAAI4e,EAAgB,KACpB,IAAKpoC,EAAIujB,WAAWhgD,GACpB,CACC,IACI8pH,EAAQ,IAAIjR,GADQ,CAACp8E,IAAKmoC,EAAMs0C,YAAa,EAAGC,YAAan5G,EAAGo5G,aAAc,MAC1CR,GAAaoE,WAAY,CAAC,GAClE8M,EAAMnQ,WACDmQ,EAAMjI,QAAUiI,EAAM3uH,OAAOshC,MAAKooC,EAAOilD,EAAM3uH,OAAOshC,IAC5D,CACA,OAAOooC,EAAO,CAACD,EAAMC,GAAQ,CAACD,EAC/B,CACD,CACA,OAAO,IAAI,EAGRjwD,EAAkB,CAAC8nB,GACvB,IAAK,IAAIz8B,EAAI,EAAGA,EAAI2U,EAAK7lB,OAAQkR,IACjC,CACC,IAAI8gJ,EAAQD,EAAclsI,EAAK3U,IAC/B,GAAK8gJ,EAAL,CAEAnsI,EAAK3U,GAAK8gJ,EAAM,GAChB,IAAK,IAAI7mJ,EAAI6mJ,EAAMhyJ,OAAS,EAAGmL,GAAK,EAAGA,IAAK0a,EAAKnX,OAAOwC,EAAI,EAAG,EAAG8gJ,EAAM7mJ,IACxE+F,GAJoB,CAKrB,CAEA,OAAO2U,EAAK7lB,OAAS,EAAI6lB,EAAO,IACjC,CAIQ,eAAA2rI,CAAgB9oH,GAEvB,IAAKA,EAAKwgB,OAA0B,MAAjBxgB,EAAKM,SAA0D,MAAO,CAAC4nH,GAAQx0B,KAAM,KAAM,KAAM,MACpH,IAAI/pC,EAAMo0D,GAAMS,UAAUx+G,EAAKwgB,OAC/B,IAAKmpC,EAAK,MAAO,CAACu+D,GAAQx0B,KAAM,KAAM,KAAM,MAE5C,IAAIj8G,EAAQ,EAAGhhB,EAAOyxJ,GAAQx0B,KAE9B,GAAI/pC,GAAOulD,GAAcgO,IAAKzlI,EAAOhhB,GAAQ,CAAC,IAAKyxJ,GAAQgB,WACtD,GAAIv/D,GAAOulD,GAAcj3H,GAAIR,EAAOhhB,GAAQ,CAAC,EAAGyxJ,GAAQgB,WACxD,GAAIv/D,GAAOulD,GAAciO,IAAK1lI,EAAOhhB,GAAQ,CAAC,KAAMyxJ,GAAQgB,WAC5D,GAAIv/D,GAAOulD,GAAckO,IAAK3lI,EAAOhhB,GAAQ,CAAC,KAAMyxJ,GAAQgB,WAC5D,GAAIv/D,GAAOulD,GAAcmO,IAAK5lI,EAAOhhB,GAAQ,CAAC,KAAMyxJ,GAAQgB,WAC5D,GAAIv/D,GAAOulD,GAAcoO,GAAI7lI,EAAOhhB,GAAQ,CAAC,EAAGyxJ,GAAQiB,aACxD,GAAIx/D,GAAOulD,GAAcqO,IAAK9lI,EAAOhhB,GAAQ,CAAC,KAAMyxJ,GAAQiB,aAC5D,GAAIx/D,GAAOulD,GAAcsO,IAAK/lI,EAAOhhB,GAAQ,CAAC,KAAMyxJ,GAAQiB,aAC5D,GAAIx/D,GAAOulD,GAAcuO,IAAKhmI,EAAOhhB,GAAQ,CAAC,KAAMyxJ,GAAQiB,aAC5D,GAAIx/D,GAAOulD,GAAcjqG,KAAMxtB,EAAOhhB,GAAQ,CAAC,EAAGyxJ,GAAQkB,YAC1D,GAAIz/D,GAAOulD,GAAcwO,MAAOjmI,EAAOhhB,GAAQ,CAAC,KAAMyxJ,GAAQkB,YAC9D,GAAIz/D,GAAOulD,GAAc9D,MAAO3zH,EAAOhhB,GAAQ,CAAC,KAAMyxJ,GAAQkB,WAC9D,IAAIz/D,GAAOulD,GAAcyO,KACzB,MAAO,CAACuK,GAAQx0B,KAAM,KAAM,KAAM,OADFj8G,EAAOhhB,GAAQ,CAAC,KAAMyxJ,GAAQkB,MACvB,CAE5C,GAA4B,iBAAjBppH,EAAKM,SAChB,CACC,IAAIlgC,EAAsB,MAAd4/B,EAAK5/B,MAAgB,KAAO4/B,EAAK5/B,MAAQqX,EACrD,MAAO,CAAChhB,EAAOupC,EAAKM,SAAsB7oB,EAAO,KAAMrX,EACxD,CAEA,CACC,IAAKkQ,EAAIC,GAAMyvB,EAAKM,SACpB,MAAO,CAAC7pC,EAAM6Z,EAAKmH,EAAOlH,EAAKkH,EAAO,KACvC,CACD,ECjRM,MAAM8xI,GAgBZ,WAAA3zJ,CAAoBs1F,EAA+B6O,GAA/B,KAAA7O,OAAAA,EAA+B,KAAA6O,GAAAA,EAd5C,KAAAyvD,YAAc,EACd,KAAAC,aAAe,EACf,KAAAC,eAAiB,EAEjB,KAAAC,qBAAmH,KAYzHjxJ,KAAKo9E,QAAUoV,EAAOpV,QACtBp9E,KAAKsqC,OAASkoD,EAAOloD,OACrBtqC,KAAK+e,MAAQyzE,EAAOzzE,MACpB/e,KAAKuhG,SAAW,EAAMvhG,KAAK+e,KAC5B,CAGO,IAAA2iF,GAEN,IAAK,IAAIp6D,KAAQtnC,KAAKwyF,OAAO8B,WAAgBhtD,EAAKkvD,WAAa,GAC9Dx2F,KAAKkxJ,eAAelxJ,KAAKwyF,OAAO8B,WAAWhtD,EAAKkvD,WAAYlvD,GAE7D,IAAK,IAAIx3B,EAAI,EAAGA,EAAI9P,KAAKwyF,OAAO8B,WAAW11F,OAAQkR,IAAK9P,KAAKmxJ,cAAcrhJ,EAC5E,CAIQ,cAAAohJ,CAAepwI,EAAgC0a,GAEtD,IAAI7W,EAAK7D,EAAOupC,SAASxgC,OAAQhF,EAAK2W,EAAM6uB,SAAS1gC,OACjD/E,EAAK9D,EAAOupC,SAAS1xB,OAAQ7T,EAAK0W,EAAM6uB,SAAS1xB,OAEjDy4H,EAAKzsI,EAAK,IAAO3kB,KAAK+e,MAEPsyI,EAAKzsI,EAAKE,EAAK,GAA1B,EAAmCF,EAAKE,EAAK,EAA7C,EAAqD,EAEzDiC,EAAK,CAACpC,EAAIysI,EAFN,EAEeA,EAAIA,EAAIA,EAAIA,EAAIA,EAF/B,EAEwCvsI,GAC5CmC,EAAK,CAACpC,EAAIA,EAAIA,EAAIA,EAAKysI,EAAIvsI,EAAKusI,EAAIvsI,EAAIA,EAAIA,GAC5CorB,EAAmB,GAAblwC,KAAK+e,MACf/e,KAAKqhG,GAAG5F,SAAS10E,EAAIC,EAAI,EAAC,GAAO,GAAO,GAAM,GAAO,GAAO,GAAM,GAAO,IAAQ,EAAO,EAAUkpB,EAAK8pD,GAAWsB,UAAU,EAC7H,CAEQ,aAAA61D,CAAct7I,GAErB,IAAIyxB,EAAOtnC,KAAKwyF,OAAO8B,WAAWz+E,GAE9B8jB,EAAM2N,EAAK+rD,QAAQz3E,QACvB+d,EAAIjC,SAAS4P,EAAK+iB,SAAS7nC,EAAG8kB,EAAK+iB,SAAS3nC,GAC5C,IAAI0gH,EAAK,SAST,GARIvtH,GAAO7V,KAAK+wJ,YAAa3tB,EAAK,QACzBvtH,GAAO7V,KAAKgxJ,cAAe5tB,EAAK,SAChCvtH,GAAO7V,KAAK8wJ,aAAY1tB,EAAK,UAEtCpjI,KAAKqhG,GAAGlG,SAASxhE,EAAInX,EAAGmX,EAAIjX,EAAGiX,EAAI/W,EAAG+W,EAAI9W,EAAG,QAAU,EAAGugH,GAEtD97F,EAAK8tD,WAAW,IAAIgM,GAAa95D,EAAK8tD,UAAWp1F,KAAKqhG,IAAIK,OAE1Dp6D,EAAKqvD,UAAU/3F,OAAS,EAC5B,CACC,IAAI4jB,EAAImX,EAAInX,EAAG0K,EAAK1K,EAAI8kB,EAAKkuD,QAAQ98D,OAAQhW,EAAIiX,EAAIjX,EAAI4kB,EAAKkuD,QAAQ9yE,EACtE,IAAK,IAAIwhD,KAAQ58B,EAAKqvD,UACtB,CACC,IAAI3X,EAAMh/E,KAAKo9E,QAAQ9B,YAAYpX,EAAKl+C,KAAMshB,EAAKyC,UAAWlnB,EAAIm8D,EAAI,GAAK,EAAIA,EAAI,GACpEh/E,KAAKixJ,sBAAwBjxJ,KAAKixJ,qBAAqB3pH,EAAM48B,EAAMlkE,KAAKqhG,GAAI,IAAInpE,EAAI1V,EAAGE,EAAGiX,EAAI/W,EAAGC,KACjG7iB,KAAKqhG,GAAGpR,SAAS/iE,EAAIxK,EAAGwhD,EAAKl+C,KAAMshB,EAAKyC,SAAUm6B,EAAKziD,IAAKqwE,GAAUmR,OAASnR,GAAU0K,KACxG95E,GAAKG,CACN,CACD,CAEA,GAAIykB,EAAKmuD,YACT,CACC,IAAIsC,EAAOzwD,EAAKmuD,YAAY75E,QAC5Bm8E,EAAKrgE,SAAS4P,EAAK+iB,SAAS7nC,EAAG8kB,EAAK+iB,SAAS3nC,GAC7C1iB,KAAKqhG,GAAGlG,SAASpD,EAAKv1E,EAAGu1E,EAAKr1E,EAAGq1E,EAAKn1E,EAAGm1E,EAAKl1E,EAAG,QAAU,EAAG,UAC9D,IAAIqK,EAAK6qE,EAAKr/D,OAAQvL,EAAK4qE,EAAKp/D,OAAQ1kB,EAA+B,GAA3B0C,KAAKW,IAAIygF,EAAKn1E,EAAGm1E,EAAKl1E,GAAUnM,EAAS,GAAJzC,EACjFjU,KAAKqhG,GAAGh8E,SAAS6H,EAAKjZ,EAAGkZ,EAAID,EAAKjZ,EAAGkZ,EAAI,EAAUzW,GAC/C4wB,EAAKmvD,aAAaz2F,KAAKqhG,GAAGh8E,SAAS6H,EAAIC,EAAKlZ,EAAGiZ,EAAIC,EAAKlZ,EAAG,EAAUyC,EAC1E,CACD,E,ICjEI46I,GCtBOC,G,WDsBZ,SAAKD,GAEJ,mBACA,iBACA,gBACA,CALD,CAAKA,KAAAA,GAAU,KAOR,MAAME,WAAoB3qH,GAsChC,WAAA3pC,CAAsB67H,EAAoC4e,GAEzDjtI,QAFqB,KAAAquH,UAAAA,EAAoC,KAAA4e,UAAAA,EApCnD,KAAA8Z,oBAAiC,KACjC,KAAAC,oBAAiC,KAEjC,KAAAC,YAAa,EAEV,KAAAt9D,QAAU,IAAIntD,GACd,KAAAoD,OAAsB,KAItB,KAAA+sG,UAAsB,GACtB,KAAAC,UAAsB,GAEtB,KAAAn9C,QAAU,EACV,KAAAC,QAAU,EACV,KAAAvwD,WA3BW,GA4BX,KAAAixF,QAAS,EACT,KAAA82B,OAAQ,EACR,KAAAp/D,OAAwB,KACxB,KAAAiC,kBAA+B,GAC/B,KAAAq8D,YAAc,EACd,KAAAC,aAAe,EACf,KAAAC,cAAgB,EAChB,KAAAa,cAAyB,KAEzB,KAAAC,WAAaR,GAAWt2B,KACxB,KAAA+2B,WAAa,EACb,KAAAC,MAAQ,EACR,KAAAC,MAAQ,EACR,KAAAC,WAAY,EACZ,KAAAC,YAA2B,KAE3B,KAAAC,mBAA4C,CAAC,CAOvD,CAEO,MAAAnrH,CAAOnmB,GAEbpW,MAAMu8B,OAAOnmB,GAEb,IAAI+c,EAAU79B,KAAK8mC,WAEnBjJ,EAAQ/a,IAAI,CAAC,MAAS,OAAQ,OAAU,SACxC+a,EAAQ/a,IAAI,CAAC,mBAAoB,YACjC+a,EAAQ/a,IAAI,CAAC,SAAY,WAAY,gBAAiB,MAEtD,IAAI6kF,EAAc,6DAClB3nG,KAAKqyJ,cAAgBxxI,EAAWgd,EAAS,SAAU,CAACiC,MAAO6nE,IAC3D3nG,KAAK26H,WAAa95G,EAAWgd,EAAS,SAAU,CAACiC,MAAO6nE,IAKxD9pE,EAAQ6E,SAASp7B,GAAUtH,KAAK4nG,WAAWtgG,KAC3Cu2B,EAAQ+E,YAAYt7B,GAAUtH,KAAK6nG,iBAAiBvgG,KACpDu2B,EAAQgF,aAAav7B,GAAUtH,KAAK+nG,UAAUzgG,KAC9Cu2B,EAAQiF,WAAWx7B,GAAUtH,KAAKgoG,QAAQ1gG,KAC1Cu2B,EAAQqF,aAAa57B,GAAUtH,KAAKioG,UAAU3gG,KAC9Cu2B,EAAQmF,cAAc17B,GAAUtH,KAAKkoG,SAAS5gG,KAC9Cu2B,EAAQoF,aAAa37B,GAAUtH,KAAKmoG,UAAU7gG,KAI9Cu2B,EAAQ0E,YAAYj7B,GAAUtH,KAAKi5I,WAAW3xI,KAC9Cu2B,EAAQuE,WAAW96B,GAAUtH,KAAKk5I,QAAQ5xI,KAC1Cu2B,EAAQyE,SAASh7B,GAAUtH,KAAKm5I,MAAM7xI,KACtCu2B,EAAQ8E,eAAer7B,GAAUtH,KAAKw5I,YAAYlyI,KAElDu2B,EAAQ7c,KAAK,CAAC,GAAM,qBAAsB,SAAY,MACtDhhB,KAAKsyJ,UACLtyJ,KAAKunG,QAAO,GAAM,EACnB,CAGO,mBAAAgrD,GAA+B,OAAQvyJ,KAAKkyJ,SAAU,CACtD,UAAAM,CAAWN,GAAyBlyJ,KAAKkyJ,UAAYA,CAAU,CAC/D,cAAAO,GAA+B,OAAOzyJ,KAAKmyJ,WAAY,CAGvD,wBAAAO,CAAyBp0J,EAAY+/C,GAE3Cr+C,KAAKoyJ,mBAAmB9zJ,GAAO+/C,CAChC,CAGO,UAAAs0G,GAAsB,OAAO3yJ,KAAKq0F,OAAQ,CAC1C,UAAAu+D,CAAWv+D,EAAiBwjD,GAAwB,EAAOC,GAAwB,GAK/D,MAAtB93I,KAAK6xJ,eAAyB7xJ,KAAKgxJ,eAAiB,GAAoB,MAAfhxJ,KAAKwyF,SAAgBxyF,KAAK6xJ,cAAgB7xJ,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,QAE9I0vG,GAAe93I,KAAKg4I,YACxBh4I,KAAKq0F,QAAUA,EAEfr0F,KAAKm6F,QAAU,EACfn6F,KAAKo6F,QAAU,EACfp6F,KAAK6pC,WAAa7pC,KAAKsqC,OAAO5gC,KAAKmgC,WACnC7pC,KAAK86H,QAAS,EACd96H,KAAKwyF,OAAS,KACdxyF,KAAK8wJ,YAAc,EACnB9wJ,KAAK+wJ,aAAe,EACpB/wJ,KAAKgxJ,eAAiB,EACtBhxJ,KAAKunG,QAfW,GAiBhBvnG,KAAK4xJ,OAAQ,EACT5xJ,KAAKyxJ,qBAAqBzxJ,KAAKyxJ,qBACpC,CAGO,WAAAx0B,GAEN,GAAIj9H,KAAKgxJ,cAAgB,GAAoB,MAAfhxJ,KAAKwyF,OAAgB,MAAO,CAAC,KAAM,MACjE,IAAIlrD,EAAOtnC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eACvC,MAAO,CAAC1pH,EAAKc,OAAQd,EAAKzJ,QAC3B,CAEO,oBAAAg1H,GAAmC,OAAO7yJ,KAAKy0F,iBAAkB,CAGjE,YAAAq+D,GAEN9yJ,KAAKq3I,UAAY,GACjBr3I,KAAKs3I,UAAY,EAClB,CAGO,SAAAU,GAIN,IADAh4I,KAAKq3I,UAAU76I,KAAKwD,KAAKq0F,QAAQz4E,SAC1B5b,KAAKq3I,UAAUz4I,OApJN,IAoJ0BoB,KAAKq3I,UAAU/pI,OAAO,EAAG,GACnEtN,KAAKs3I,UAAY,EAClB,CAGO,OAAApf,GAAmB,OAAOl4H,KAAKq3I,UAAUz4I,OAAS,CAAE,CACpD,OAAAw5H,GAAmB,OAAOp4H,KAAKs3I,UAAU14I,OAAS,CAAE,CAGpD,WAAAu5H,GAEuB,GAAzBn4H,KAAKq3I,UAAUz4I,SACnBoB,KAAKs3I,UAAU96I,KAAKwD,KAAKq0F,QAAQz4E,SACjC5b,KAAK4yJ,WAAW5yJ,KAAKq3I,UAAUvpI,OAAO,GAAO,GAC9C,CACO,WAAAuqH,GAEuB,GAAzBr4H,KAAKs3I,UAAU14I,SACnBoB,KAAKq3I,UAAU76I,KAAKwD,KAAKq0F,QAAQz4E,SACjC5b,KAAK4yJ,WAAW5yJ,KAAKs3I,UAAUxpI,OAAO,GAAO,GAC9C,CAGO,OAAAilJ,GAAmB,OAAO/yJ,KAAK4xJ,KAAM,CACrC,QAAAoB,CAASpB,GAAqB5xJ,KAAK4xJ,MAAQA,CAAM,CAGjD,OAAAx9I,GAAmB,OAAOpU,KAAKq0F,QAAQ96D,SAAU,CAGjD,aAAAoyE,GAEN3rG,KAAK86H,QAAS,EACdl1G,OAAOoc,YAAW,KAAWhiC,KAAK86H,QAAQ96H,KAAKunG,QAAQ,GAAI,GAC5D,CAGO,IAAAixB,CAAKz5G,GAEX/e,KAAK6pC,YAAc9qB,EACnB/e,KAAKwyF,OAAS,KACdxyF,KAAKunG,QACN,CAGO,QAAA0rD,GAENjzJ,KAAKwyF,OAAS,KACdxyF,KAAK6pC,WArMe,GAsMpB7pC,KAAKunG,QAAO,GAAM,EACnB,CAGO,UAAA2rD,GAENlzJ,KAAKwyF,OAAS,KACdxyF,KAAK6pC,WA7Me,GA8MpB7pC,KAAKunG,QAAO,GAAM,EACnB,CAGO,eAAA4rD,CAAgBt9I,GAElB7V,KAAKgxJ,eAAiBn7I,IAC1B7V,KAAKgxJ,cAAgBn7I,EACrB7V,KAAK+wJ,aAAe,EACpB/wJ,KAAK2rG,gBACN,CAGO,YAAAynD,CAAahrH,GAEnB,IAAIirH,EAAWrzJ,KAAKwyF,OAAO8B,WAC3B,IAAK,IAAIxkF,EAAI,EAAGA,EAAIujJ,EAASz0J,OAAQkR,IAAK,GAAI,EAAIwG,OAAO+8I,EAASvjJ,GAAGs4B,OAAQA,GAG5E,YADApoC,KAAKmzJ,gBAAgBrjJ,EAGvB,CAGO,aAAAwjJ,GAEN,GAAItzJ,KAAKgxJ,cAAgB,EAAG,OAC5B,IAAI5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OACpDd,EAAOtnC,KAAKq0F,QAAQlsD,aAAaC,GAEjCmE,EAAMjF,EAAKipC,QAAUK,GAAeC,YAAYvpC,EAAKipC,SAAW,KAEpEvwE,KAAKmyJ,YAAc,IAAIjS,GAAa3zG,GAAY,IAAIyQ,GAAYh9C,KAAK8mC,YACrE9mC,KAAKmyJ,YAAY/R,QAAO,KAEvB,IAAI7zG,EAAMvsC,KAAKmyJ,YAAY7xG,cAC3BhZ,EAAOxhB,EAAUwhB,GACjBtnC,KAAKuzJ,wBAAwBjsH,EAAMiF,GAEnC,IAAIgkC,EAAUK,GAAec,YAAYnlC,GACpCgkC,IAASA,EAAU,MAExBjpC,EAAKipC,QAAUA,EACf,IAAIijF,EAASxzJ,KAAKq0F,QAAQz4E,QACtB43I,EAAO7qH,aAAaP,EAAQd,KAE/BtnC,KAAK4yJ,WAAWY,GAChBxzJ,KAAKozJ,aAAahrH,IAGnBpoC,KAAKmyJ,YAAY7uB,OAAO,IAEzBtjI,KAAKmyJ,YAAYjvB,SAAQ,KAExBljI,KAAKkyJ,WAAY,EACjBlyJ,KAAKmyJ,YAAc,KACnBnyJ,KAAKsyJ,SAAS,IAEftyJ,KAAKmyJ,YAAY/Z,gBAAgBp4I,KAAK+4H,WACtC/4H,KAAKmyJ,YAAY9Z,cAAcr4I,KAAK23I,WACpC33I,KAAKkyJ,WAAY,EACjBlyJ,KAAKmyJ,YAAY5rI,MAClB,CAGO,WAAAktI,GAEN,GAAIzzJ,KAAKgxJ,cAAgB,EAAG,OAC5B,IAAI5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OACpDd,EAAOtnC,KAAKq0F,QAAQlsD,aAAaC,GAEjCxlB,EAAwB,GAApBgD,OAAOmgB,WAAkBljB,EAAyB,GAArB+C,OAAOqgB,YAExCm1G,EAAM,IAAI+K,GAAcrgI,EAAUwhB,GAAO,CAAC1kB,EAAGC,GAAI7iB,KAAK8mC,YAC1Ds0G,EAAIriB,UAAY/4H,KAAK+4H,UACrBqiB,EAAIgF,QAAO,KAEV,IAAIoT,EAASxzJ,KAAKq0F,QAAQz4E,QACtB43I,EAAO7qH,aAAaP,EAAQgzG,EAAIjzG,kBAEnCnoC,KAAK4yJ,WAAWY,GAChBxzJ,KAAKozJ,aAAahrH,IAEnBgzG,EAAI9X,OAAO,IAEZ8X,EAAIqL,UAAS,KAEZzmJ,KAAKozJ,aAAahrH,GAClBpoC,KAAKszJ,eAAe,IAErBlY,EAAIlY,SAAQ,KAEXljI,KAAKkyJ,WAAY,EACjBlyJ,KAAKsyJ,SAAS,IAEftyJ,KAAKkyJ,WAAY,EACjB9W,EAAI70H,MACL,CAGO,aAAAmtI,GAEN,GAAI1zJ,KAAKgxJ,cAAgB,EAAG,OAE5B,IAAI5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OACpDd,EAAOtnC,KAAKq0F,QAAQlsD,aAAaC,GACjCurH,EAAO3zJ,KAAK8mC,WAAWpnC,QAASk0J,EAAO5zJ,KAAK8mC,WAAWnnC,SACvDy7I,EAAM,IAAI2Q,GAAqBzkH,EAAKxrC,KAAM,CAAC63J,EAAMC,IACrDxY,EAAIhV,UAAS,KAEZ,IAAIotB,EAASxzJ,KAAKq0F,QAAQz4E,QAC1B0rB,EAAOxhB,EAAU0tI,EAAOrrH,aAAaC,IACrC,IAAItsC,EAAOs/I,EAAIyR,UAAWtgH,EAAM6uG,EAAI96F,cACxB,MAARxkD,IAAcwrC,EAAKxrC,KAAOA,GACnB,MAAPywC,IAAajF,EAAKipC,QAAU,IAAItF,GAAa1+B,GAAK/hC,SAClDgpJ,EAAO7qH,aAAaP,EAAQd,KAE/BtnC,KAAK4yJ,WAAWY,GAChBxzJ,KAAKozJ,aAAahrH,IAEnBgzG,EAAI9X,OAAO,IAEZ8X,EAAIlY,SAAQ,KAEXljI,KAAKkyJ,WAAY,EACjBlyJ,KAAKsyJ,SAAS,IAEflX,EAAI70H,MACL,CAGO,aAAAstI,GAEN,GAAI7zJ,KAAKgxJ,cAAgB,EAAG,OAC5B,IAAI5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OACxD,GAAqB,GAAjBA,EAAOxpC,OAAa,OAExB,IAAI40J,EAASxzJ,KAAKq0F,QAAQz4E,QAC1B43I,EAAO3qH,gBAAgBT,GACvBpoC,KAAK6xJ,cAAgB,KACrB7xJ,KAAK4yJ,WAAWY,GAEhBprH,EAASA,EAAOn5B,MAAM,GAClBukJ,EAAOrrH,aAAaC,KACf,EAAI/wB,KAAK+wB,GAAU,EAAGA,EAAOA,EAAOxpC,OAAS,KACjDwpC,EAAOt6B,OACZ9N,KAAKozJ,aAAahrH,EACnB,CAGO,eAAA0rH,GAEN,GAAI9zJ,KAAKgxJ,cAAgB,EAAG,OAE5B,IAAI5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OACpDorH,EAASxzJ,KAAKq0F,QAAQz4E,QACtB0rB,EAAOksH,EAAOrrH,aAAaC,GAC1Bd,EAAKI,WAAUJ,EAAKI,SAAW,IACpCJ,EAAKI,SAASlrC,KAAK,CAAC,GACpBwD,KAAK6xJ,cAAgB,EAAIx1J,OAAO+rC,EAAQ,CAACd,EAAKI,SAAS9oC,OAAS,IAChEoB,KAAK4yJ,WAAWY,EACjB,CAGO,oBAAAO,GAEN,GAAI/zJ,KAAKgxJ,cAAgB,EAAG,OAC5B,IAAI5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OACpDorH,EAASxzJ,KAAKq0F,QAAQz4E,QAC1B43I,EAAO1qH,cAAcV,EAAQ,CAAC,GAC9BpoC,KAAK6xJ,cAAgBzpH,EACrBpoC,KAAK4yJ,WAAWY,EACjB,CAGO,mBAAAQ,GAEN,GAAIh0J,KAAKgxJ,cAAgB,EAAG,OAC5B,IAAI5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OACxD,GAAI,EAAIh0B,QAAQg0B,GAAS,OACzB,IAAIorH,EAASxzJ,KAAKq0F,QAAQz4E,QACtBjD,EAAMyvB,EAAOt6B,MACJ0lJ,EAAOrrH,aAAaC,GAC1BV,SAASp6B,OAAOqL,EAAK,EAAG,CAAC,GAChCyvB,EAAO5rC,KAAKmc,GACZ3Y,KAAK6xJ,cAAgBzpH,EACrBpoC,KAAK4yJ,WAAWY,EACjB,CACO,kBAAAS,GAEN,GAAIj0J,KAAKgxJ,cAAgB,EAAG,OAC5B,IAAI5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OACxD,GAAI,EAAIh0B,QAAQg0B,GAAS,OACzB,IAAIorH,EAASxzJ,KAAKq0F,QAAQz4E,QACtBjD,EAAMyvB,EAAOt6B,MACJ0lJ,EAAOrrH,aAAaC,GAC1BV,SAASp6B,OAAOqL,EAAM,EAAG,EAAG,CAAC,GACpCyvB,EAAO5rC,KAAKmc,EAAM,GAClB3Y,KAAK6xJ,cAAgBzpH,EACrBpoC,KAAK4yJ,WAAWY,EACjB,CAGO,cAAAU,CAAezrF,GAErB,GAAIzoE,KAAKgxJ,cAAgB,EAAG,OAC5B,IAAI5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OACxD,GAAqB,GAAjBA,EAAOxpC,OAAa,OAExB,IAAI40J,EAASxzJ,KAAKq0F,QAAQz4E,SACrBkF,EAAQjL,GAAOqxB,GAAQ+B,YAAYb,GACpCd,EAAOksH,EAAOrrH,aAAarnB,GAC3BjL,EAAM4yD,EAAM,GAAK5yD,EAAM4yD,GAAOnhC,EAAKI,SAAS9oC,SAChD,EAAIuW,KAAKmyB,EAAKI,SAAU7xB,EAAKA,EAAM4yD,GACnCzoE,KAAK6xJ,cAAgB,EAAIx1J,OAAOykB,EAAQ,CAACjL,EAAM4yD,IAC/CzoE,KAAK4yJ,WAAWY,GACjB,CAGO,aAAAW,CAAcxvB,EAAgBltC,GAAsB,GAE1D,GAAIz3F,KAAKgxJ,cAAgB,EAAG,OAC5B,IAAI5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OAEpDd,EAAOxhB,EAAU9lB,KAAKq0F,QAAQlsD,aAAaC,WACvCd,EAAaF,eAChBqwD,IAAanwD,EAAKI,SAAW,IAClC,IAAIlnB,EAAM0mB,GAAQgB,mBAAmBZ,GAIrCtnC,KAAK+4H,UAAU33E,UAAU5gC,GAErB4nB,EAAOxpC,OAAS,GAAK+lI,GAAQ3kI,KAAK6zJ,eACvC,CAGO,cAAAO,GAIN,IAAI5zI,EAAMxgB,KAAK+4H,UAAUx4E,YAErBrX,EAAW,KACf,IAAKA,EAAOtrB,KAAKqf,MAAMzc,EAAK,CAC5B,MAAO3U,GAAI,CAEX,IAAIu8B,EAAkB,GAOtB,GANIpoC,KAAKgxJ,eAAiB,IAAG5oH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,QAG5Ec,IAAMA,EAAO,IAAIskH,GAAqBhtI,GAAKitI,YAG3CvkH,EACL,CACC,IAAIqD,EAAMqkC,GAAeC,YAAYrwD,GACrC,GAAIyrC,GAAQ33C,SAASi4B,GACrB,CACC,IAAIinH,EAASxzJ,KAAKq0F,QAAQz4E,QACtB0rB,EAAOksH,EAAOrrH,aAAaC,GAC3Bd,IAEHA,EAAKipC,QAAU,IAAItF,GAAa1+B,GAAK/hC,QACrCxK,KAAK4yJ,WAAWY,GAElB,MACK/6B,MAAM,mDACX,MACD,CAEA,IAAKvvF,EAAKptC,OAASotC,EAAKqnC,UAAYrnC,EAAKtB,UAAY,EAAIxzB,QAAQ80B,EAAKxB,UAGrE,YADA+wF,MAAM,+EAKP,GAAIz4H,KAAKgxJ,cAAgB,GAAKhxJ,KAAKq0F,QAAQ96D,UAC3C,CACC,IAAIi6H,EAAS,IAAItsH,GAAQgC,GAGzB,OAFAlpC,KAAK6xJ,cAAgB,QACrB7xJ,KAAK4yJ,WAAWY,EAEjB,CAGA,IAAIA,EAASxzJ,KAAKq0F,QAAQz4E,QACtB0rB,EAAOksH,EAAOrrH,aAAaC,GAC3BlB,GAAQK,iBAAiBD,IAE5B7rC,OAAOsT,KAAKu4B,GAAMn/B,SAAS7J,UAAuBgpC,EAAahpC,KAC/D7C,OAAOsT,KAAKm6B,GAAM/gC,SAAS7J,GAAgBgpC,EAAahpC,GAAO4qC,EAAK5qC,KACpE0B,KAAK6xJ,cAAgBzpH,IAIhBd,EAAKI,WAAUJ,EAAKI,SAAW,IACpCJ,EAAKI,SAASlrC,KAAK0sC,GACnBlpC,KAAK6xJ,cAAgB,EAAIx1J,OAAO+rC,EAAQ,CAACd,EAAKI,SAAS9oC,OAAS,KAEjEoB,KAAK4yJ,WAAWY,EACjB,CAGO,OAAAlB,GAENtyJ,KAAK8mC,WAAWhF,WACjB,CAGO,oBAAAuyH,CAAqBjsH,GAE3B,IAAK,IAAId,KAAQtnC,KAAKwyF,OAAO8B,WAAY,GAAI,EAAIh+E,OAAO8xB,EAAQd,EAAKc,QACrE,CACC,IAAIzO,EAAM2N,EAAK+iB,SAASzuC,QAGxB,OAFA+d,EAAInX,GAAKxiB,KAAKm6F,QACdxgE,EAAIjX,GAAK1iB,KAAKo6F,QACPzgE,CACR,CACA,OAAO,IACR,CAIU,MAAA4tE,CAAO+sD,GAAU,EAAO7nE,GAAM,GAEvCzsF,KAAK86H,QAAS,EAEd,IAAIp7H,EAAQM,KAAK8mC,WAAWpnC,QAASC,EAASK,KAAK8mC,WAAWnnC,SAC1D06F,EAAU10E,IAEd,IAAK,IAAIq2D,IAAU,CAACh8E,KAAKqyJ,cAAeryJ,KAAK26H,YAE5C3+C,EAAOt8E,MAAQA,EAAQ26F,EACvBre,EAAOr8E,OAASA,EAAS06F,EACzBre,EAAOl8C,MAAMpgC,MAAQA,EAAQ,KAC7Bs8E,EAAOl8C,MAAMngC,OAASA,EAAS,KAGhC,IAAKK,KAAKwyF,OACV,CACC,IAAIpV,EAAU,IAAIonD,GAAmB,EAAG,EAAGxkI,KAAK6pC,YAChD7pC,KAAKsqC,OAAStqC,KAAK2xJ,WAAa/nH,GAAaQ,oBAAoBpqC,KAAK6pC,YAAcD,GAAaY,qBAAqBxqC,KAAK6pC,YAC3H7pC,KAAKwyF,OAAS,IAAI4B,GAAep0F,KAAKq0F,QAASjX,EAASp9E,KAAKsqC,QAC7DtqC,KAAKwyF,OAAOgC,gBAAiB,EAC7Bx0F,KAAKwyF,OAAOiC,kBAAoBz0F,KAAKy0F,kBACrCz0F,KAAKwyF,OAAOkC,aAAe,IAAI78D,EAAK,GAAM73B,KAAK8mC,WAAWpnC,QAAS,GAAMM,KAAK8mC,WAAWnnC,UACzFK,KAAKwyF,OAAOlI,KAAO,IAAImlE,GAAYzvJ,KAAKq0F,SACxCr0F,KAAKwyF,OAAOlI,KAAKqlE,UACjB3vJ,KAAKwyF,OAAOpU,UACRk2E,GAASt0J,KAAKu0J,WAAW9nE,EAC9B,CAEA,GAAIzsF,KAAK6xJ,cACT,CACC,IAAK,IAAI/hJ,EAAI,EAAGA,EAAI9P,KAAKwyF,OAAO8B,WAAW11F,OAAQkR,IAAK,GAAI,EAAIwG,OAAOtW,KAAK6xJ,cAAe7xJ,KAAKwyF,OAAO8B,WAAWxkF,GAAGs4B,QACrH,CACCpoC,KAAKgxJ,cAAgBlhJ,EACrB9P,KAAKw0J,uBAAuB1kJ,GAC5B,KACD,CACA9P,KAAK6xJ,cAAgB,IACtB,CAEA,IAAI3oB,EAAM,IAAIlvC,GACV0H,EAAO,IAAImvD,GAAY7wJ,KAAKwyF,OAAQ02C,GACxCxnC,EAAKovD,WAAa9wJ,KAAK8wJ,WACvBpvD,EAAKqvD,YAAc/wJ,KAAK+wJ,YACxBrvD,EAAKsvD,cAAgBhxJ,KAAKgxJ,cAC1BtvD,EAAKA,OAELwnC,EAAI/uC,QAAUn6F,KAAKm6F,QACnB+uC,EAAI9uC,QAAUp6F,KAAKo6F,QACnB8uC,EAAIzwG,QAAQ/4B,EAAOC,GACnBupI,EAAIhrC,aAAal+F,KAAKqyJ,eAAe,EAEtC,CAGU,UAAAkC,CAAWE,GAEpB,IAAI/0J,EAAQM,KAAK8mC,WAAWpnC,QAASC,EAASK,KAAK8mC,WAAWnnC,SAC9D,GAAI80J,EACJ,CACC,GAAIz0J,KAAKwyF,OAAO9yF,MAAQA,EAHqD,GAGtCM,KAAKwyF,OAAO7yF,OAASA,EAHiB,EAI7E,CACC,IAAIof,EAAQpI,KAAKW,KAAK5X,EALsD,GAKvCM,KAAKwyF,OAAO9yF,OAAQC,EALmB,GAKHK,KAAKwyF,OAAO7yF,QACrFK,KAAK6pC,YAAc9qB,EACnB/e,KAAKwyF,OAAO8C,gBAAgBv2E,EAC7B,CACA/e,KAAKm6F,QAAU,IAAOz6F,EAAQM,KAAKwyF,OAAO9yF,OAC1CM,KAAKo6F,QAAU,IAAOz6F,EAASK,KAAKwyF,OAAO7yF,OAC5C,MAGCK,KAAKm6F,QAAUxjF,KAAKC,IAdyD,EAchD,IAAOlX,EAAQM,KAAKwyF,OAAO9yF,QACxDM,KAAKo6F,QAAU,IAAOz6F,EAASK,KAAKwyF,OAAO7yF,OAE7C,CAGQ,sBAAA60J,CAAuB3+I,GAE9B,IAAInW,EAAQM,KAAK8mC,WAAWpnC,QAASC,EAASK,KAAK8mC,WAAWnnC,SAE1Dg6B,EADO35B,KAAKwyF,OAAO8B,WAAWz+E,GACnBw0C,SAASzyB,aAAa53B,KAAKm6F,QAASn6F,KAAKo6F,SAEpDzgE,EAAIhQ,OAJsE,EAIxD3pB,KAAKm6F,SAAWxgE,EAAIhQ,OAJoC,EAKrEgQ,EAAI9P,OAASnqB,EALwD,IAK3CM,KAAKm6F,SAAWz6F,EAL2B,EAKbi6B,EAAI9P,QAEjE8P,EAAI/P,OAPsE,EAOxD5pB,KAAKo6F,SAAWzgE,EAAI/P,OAPoC,EAQrE+P,EAAI7P,OAASnqB,EARwD,IAQ1CK,KAAKo6F,SAAWz6F,EAR0B,EAQXg6B,EAAI7P,OACxE,CAGU,iBAAA6xH,CAAkBr0I,GAE3B,IAAKkb,EAAGE,GAAK,EAAYpb,EAAOtH,KAAK8mC,YACjCjxB,EAAM7V,KAAK+wJ,aAAe,GAAK,EAAI/wJ,KAAK00J,cAAclyI,EAAGE,GACzD7M,GAAO7V,KAAK8wJ,aAEf9wJ,KAAK8wJ,WAAaj7I,EAClB7V,KAAK2rG,gBAEP,CAGU,aAAA+oD,CAAclyI,EAAUE,GAEjC,IAAIgxB,EAAO1zC,KAAK20J,qBAAqBnyI,EAAGE,GACxC,OAAe,MAARgxB,GAAgBA,EAAK,IAAM,EAAIA,EAAK,EAC5C,CAGU,oBAAAihH,CAAqBnyI,EAAUE,GAExC,IAAK1iB,KAAKwyF,OAAQ,OAAO,KACzB,IAAK,IAAI1iF,EAAI,EAAGA,EAAI9P,KAAKwyF,OAAO8B,WAAW11F,OAAQkR,IACnD,CACC,IAAIw3B,EAAOtnC,KAAKwyF,OAAO8B,WAAWxkF,GAC9BmnB,EAAKzU,EAAIxiB,KAAKm6F,QAAU7yD,EAAK+iB,SAAS7nC,EAAG0U,EAAKxU,EAAI1iB,KAAKo6F,QAAU9yD,EAAK+iB,SAAS3nC,EACnF,GAAI4kB,EAAK+rD,QAAQh6D,SAASpC,EAAIC,GAAK,MAAO,CAACpnB,GAAG,GAC9C,GAAIw3B,EAAKmuD,aAAenuD,EAAKmuD,YAAYp8D,SAASpC,EAAIC,GAAK,MAAO,CAACpnB,GAAG,EACvE,CACA,OAAO,IACR,CAGU,iBAAA8kJ,CAAkBnsF,GAE3B,IAAIosF,GAAY,EAChB,GAAI70J,KAAKgxJ,cAAgB,EAAG6D,EAAW,MAEvC,CACC,IAAIzsH,EAASpoC,KAAKwyF,OAAO8B,WAAWt0F,KAAKgxJ,eAAe5oH,OAAOn5B,MAAM,GAErE,GAAW,OAAPw5D,EAEH,GAAI,EAAIr0D,QAAQg0B,GAChB,CACC,IAAId,EAAOtnC,KAAKq0F,QAAQlsD,aAAaC,GACrC,GAAI,EAAIh0B,QAAQkzB,EAAKI,UAIpB,OAFA1nC,KAAK6xJ,cAAgB,CAAC,QACtB7xJ,KAAK8zJ,kBAGNrrF,EAAM,OACP,KAEA,CACC,IAAI3nD,EAAS9gB,KAAKq0F,QAAQlsD,aAAaC,EAAOn5B,MAAM,EAAGm5B,EAAOxpC,OAAS,IACvE,GADkF,EAAIyY,KAAK+wB,IAChFtnB,EAAO4mB,SAAS9oC,OAAS,EAGnC,YADAoB,KAAKi0J,qBAGNxrF,EAAM,MACP,CAGD,GAAW,QAAPA,EACJ,CACC,GAAqB,GAAjBrgC,EAAOxpC,OAAa,OACxBwpC,EAAOt6B,MACP+mJ,EAAW70J,KAAKwyF,OAAOkD,cAActtD,EACtC,MACK,GAAW,SAAPqgC,EAERrgC,EAAO5rC,KAAK,GACZq4J,EAAW70J,KAAKwyF,OAAOkD,cAActtD,QAEjC,GAAW,MAAPqgC,EACT,CACC,GAAqB,GAAjBrgC,EAAOxpC,QAA4C,GAA7BwpC,EAAOA,EAAOxpC,OAAS,GAAS,OAC1DwpC,EAAOA,EAAOxpC,OAAS,KACvBi2J,EAAW70J,KAAKwyF,OAAOkD,cAActtD,EACtC,MACK,GAAW,QAAPqgC,EACT,CACC,GAAqB,GAAjBrgC,EAAOxpC,OAAa,OACxBwpC,EAAOA,EAAOxpC,OAAS,KACvBi2J,EAAW70J,KAAKwyF,OAAOkD,cAActtD,EACtC,CACD,CAEIysH,GAAY,GAAKA,EAAW70J,KAAKwyF,OAAO8B,WAAW11F,SAEtDoB,KAAK6xJ,cAAgB7xJ,KAAKwyF,OAAO8B,WAAWugE,GAAUzsH,OACtDpoC,KAAK2rG,gBAEP,CAGU,eAAAmpD,CAAgBj/I,GAEzB,IAAIuyB,EAASpoC,KAAKwyF,OAAO8B,WAAWz+E,GAAKuyB,OACrC0lB,GAAM,EACV,IAAK,IAAIh+C,EAAI,EAAGA,EAAI9P,KAAKy0F,kBAAkB71F,OAAQkR,IAAK,GAAI,EAAIwG,OAAO8xB,EAAQpoC,KAAKy0F,kBAAkB3kF,IACtG,CACC9P,KAAKy0F,kBAAkBnnF,OAAOwC,EAAG,GACjCg+C,GAAM,EACN,KACD,CACKA,GAAK9tD,KAAKy0F,kBAAkBj4F,KAAK4rC,GACtCpoC,KAAKwyF,OAAS,KACdxyF,KAAKunG,QACN,CAGU,UAAAK,CAAWtgG,GAEpB,GAAItH,KAAKkyJ,UAAW,OAEpB,GAAI5qJ,EAAM2lG,QAGT,YADA3lG,EAAMwgG,iBAIP,IAAKtlF,EAAGE,GAAK,EAAYpb,EAAOtH,KAAK8mC,YACjCiuH,EAAS/0J,KAAK20J,qBAAqBnyI,EAAGE,GACtCqyI,GAAUA,EAAO,IAAI/0J,KAAK80J,gBAAgBC,EAAO,GACtD,CACU,gBAAAltD,CAAiBvgG,GAE1B,GAAItH,KAAKkyJ,UAAW,OAEpB5qJ,EAAMglG,2BAEN,IAAK9pF,EAAGE,GAAK,EAAYpb,EAAOtH,KAAK8mC,YACjCjxB,EAAM7V,KAAK00J,cAAclyI,EAAGE,GAC5B7M,GAAO,IAEV7V,KAAK8wJ,YAAc,EACnB9wJ,KAAK+wJ,aAAe,EACpB/wJ,KAAKgxJ,cAAgBn7I,EACrB7V,KAAK2rG,gBACL3rG,KAAKyzJ,cAEP,CACU,SAAA1rD,CAAUzgG,GAEnB,GAAItH,KAAKkyJ,UAAW,OAKpB,GAHIlyJ,KAAK0xJ,qBAAqB1xJ,KAAK0xJ,sBAGhB,GAAfpqJ,EAAM4iI,MAAY,OACtB,GAAI5iI,EAAM2lG,QAIT,YADA3lG,EAAMwgG,iBAIP,IAAKtlF,EAAGE,GAAK,EAAYpb,EAAOtH,KAAK8mC,YACjCjxB,EAAM7V,KAAK00J,cAAclyI,EAAGE,GAEhC1iB,KAAK8xJ,WAAaR,GAAW0D,IAC7Bh1J,KAAK+xJ,UAAYl8I,EACjB7V,KAAKgyJ,MAAQxvI,EACbxiB,KAAKiyJ,MAAQvvI,EAET7M,GAAO7V,KAAK+wJ,cAEf/wJ,KAAK+wJ,YAAcl7I,EACnB7V,KAAK2rG,gBAEP,CACU,OAAA3D,CAAQ1gG,GAEjB,IAAItH,KAAKkyJ,UAET,GAAI5qJ,EAAM2lG,QAET3lG,EAAMwgG,qBAFP,CAMA,GAAI9nG,KAAK8xJ,YAAcR,GAAW7b,IAClC,CACC,IAAKjzH,EAAGE,GAAK,EAAYpb,EAAOtH,KAAK8mC,YACjCjxB,EAAM7V,KAAK00J,cAAclyI,EAAGE,GAC5B7M,GAAO7V,KAAK+wJ,cAAa/wJ,KAAKgxJ,cAAgBn7I,GAClD7V,KAAK+wJ,aAAe,EACpB/wJ,KAAK2rG,eACN,CAEA3rG,KAAK8xJ,WAAaR,GAAWt2B,IAX7B,CAYD,CACU,SAAA/yB,CAAU3gG,GAEftH,KAAKkyJ,WAETlyJ,KAAK27I,kBAAkBr0I,EACxB,CACU,QAAA4gG,CAAS5gG,GAEdtH,KAAKkyJ,YAETlyJ,KAAK27I,kBAAkBr0I,GACvBtH,KAAK8xJ,WAAaR,GAAWt2B,KAC9B,CACU,SAAA7yB,CAAU7gG,GAEnB,IAAItH,KAAKkyJ,YAETlyJ,KAAK27I,kBAAkBr0I,GAEnBtH,KAAK8xJ,YAAcR,GAAW0D,KAAOh1J,KAAK+xJ,UAAY,IAEzD/xJ,KAAK8xJ,WAAaR,GAAW7b,KAG1Bz1I,KAAK8xJ,YAAcR,GAAW7b,KAClC,CACC,IAAKjzH,EAAGE,GAAK,EAAYpb,EAAOtH,KAAK8mC,YACjC9jB,EAAKR,EAAIxiB,KAAKgyJ,MAAO/uI,EAAKP,EAAI1iB,KAAKiyJ,MAC7B,GAANjvI,GAAiB,GAANC,IAEdjjB,KAAKm6F,SAAWn3E,EAChBhjB,KAAKo6F,SAAWn3E,EAChBjjB,KAAK2rG,iBACJ3rG,KAAKgyJ,MAAOhyJ,KAAKiyJ,OAAS,CAACzvI,EAAGE,GAEjC,CACD,CACU,UAAAu2H,CAAW3xI,GAIrB,CACU,OAAA4xI,CAAQ5xI,GAEjB,GAAItH,KAAKkyJ,UAAW,OAIpB,GAFIlyJ,KAAK0xJ,qBAAqB1xJ,KAAK0xJ,uBAE9B1xJ,KAAKuyJ,sBAAuB,OAEjC,IAAIj0J,EAAMgJ,EAAMhJ,IAGhB,KAAKgJ,EAAM0lG,UAAa1lG,EAAM2lG,SAAY3lG,EAAM4lG,QAAW5lG,EAAM6lG,SACjE,CACC,GAAW,SAAP7uG,EAEC0B,KAAKgxJ,eAAiB,GAAGhxJ,KAAKyzJ,mBAE9B,GAAW,UAAPn1J,QACJ,GAAW,aAAPA,EAAoB0B,KAAK40J,kBAAkB,aAC/C,GAAW,cAAPt2J,EAAqB0B,KAAK40J,kBAAkB,cAChD,GAAW,WAAPt2J,EAAkB0B,KAAK40J,kBAAkB,WAC7C,GAAW,aAAPt2J,EAAoB0B,KAAK40J,kBAAkB,YAC/C,IAAW,OAAPt2J,EACJ,OADkB0B,KAAK40J,kBAAkB,MACnC,CAEXttJ,EAAMwgG,iBACNxgG,EAAMilG,iBACP,CACD,CACU,KAAA4sC,CAAM7xI,GAGhB,CACU,UAAAo2I,CAAWp2I,GAEhBtH,KAAK0xJ,qBAAqB1xJ,KAAK0xJ,sBAEnC,IAAKlvI,EAAGE,GAAK,EAAYpb,EAAOtH,KAAK8mC,YACjCnW,EAAQha,KAAKuF,IAAI5U,EAAM6uE,QAAUx/D,KAAKuF,IAAI5U,EAAM8uE,QAAU9uE,EAAM6uE,OAAS7uE,EAAM8uE,OAC/Er3D,EAAQ,EAAsB,IAAlBpI,KAAKuF,IAAIyU,GACrBA,EAAQ,IAAG5R,EAAQ,EAAMA,GAE7B,IAAIg8H,EAAW/6I,KAAK6pC,WAAa9qB,EACjC/e,KAAKm6F,QAAU33E,EAAKu4H,EAAW/6I,KAAK6pC,YAAernB,EAAIxiB,KAAKm6F,SAC5Dn6F,KAAKo6F,QAAU13E,EAAKq4H,EAAW/6I,KAAK6pC,YAAennB,EAAI1iB,KAAKo6F,SAE5Dp6F,KAAK6pC,WAAakxG,EAElB/6I,KAAKwyF,OAAS,KACdxyF,KAAK2rG,gBACLrkG,EAAMwgG,gBACP,CACU,WAAA0xC,CAAYlyI,GAKrB,GAHItH,KAAK0xJ,qBAAqB1xJ,KAAK0xJ,sBAEnCpqJ,EAAMwgG,kBACD9nG,KAAKuyJ,sBAAuB,OAEjC,IAAK/vI,EAAGE,GAAK,EAAYpb,EAAOtH,KAAK8mC,YACjCjxB,EAAM7V,KAAK00J,cAAclyI,EAAGE,GAEhC1iB,KAAKgxJ,cAAgBn7I,EACrB7V,KAAK+wJ,aAAe,EACpB/wJ,KAAK2rG,gBAEL,IAAIstB,EAAO,IAAI,QACf,GAAIpjH,GAAO,EACX,CACC,IAAIyxB,EAAOtnC,KAAKwyF,OAAO8B,WAAWz+E,GAAKgoB,QAASuK,EAASpoC,KAAKwyF,OAAO8B,WAAWz+E,GAAKuyB,OACjFm+E,EAAM,IAAWvmH,KAAKmzJ,gBAAgBt9I,GAyB1C,GAxBAojH,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,iBAAkBiwD,MAAO,KAAO5S,IAAOvmH,KAAKszJ,eAAe,KACpGr6B,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,eAAgBiwD,MAAO,KAAO5S,IAAOvmH,KAAKyzJ,aAAa,KAChGx6B,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,cAAeiwD,MAAO,KAAO5S,IAAOvmH,KAAK0zJ,eAAe,KACjGz6B,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,SAAUiwD,MAAO,KAAO5S,IAAOvmH,KAAK8zJ,iBAAiB,KAC9F76B,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,UAAWiwD,MAAO,KAAO5S,IAAOvmH,KAAK+zJ,sBAAsB,KAChG3rH,EAAOxpC,OAAS,IAEnBq6H,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,gBAAiBiwD,MAAO,KAAO5S,IAAOvmH,KAAKg0J,qBAAqB,KACzG/6B,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,eAAgBiwD,MAAO,KAAO5S,IAAOvmH,KAAKi0J,oBAAoB,KACvGh7B,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,SAAUiwD,MAAO,KAAOn5H,KAAKmzJ,gBAAgBt9I,GAAM7V,KAAK6zJ,eAAe,KAE5GzrH,EAAOA,EAAOxpC,OAAS,GAAK,GAC/Bq6H,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,UAAWiwD,MAAO,KAAO5S,IAAOvmH,KAAKk0J,gBAAgB,EAAE,KAC7F9rH,EAAOA,EAAOxpC,OAAS,GAAK,EAAI6V,YAAYzU,KAAKq0F,QAAQ/rD,mBAAmBF,GAAQV,UAAY,GACnGuxF,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,YAAaiwD,MAAO,KAAO5S,IAAOvmH,KAAKk0J,eAAe,EAAE,MAGnGj7B,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,OAAQiwD,MAAO,KAAO5S,IAAOvmH,KAAKm0J,eAAc,EAAM,KAC3F,EAAI1/I,YAAY6yB,EAAKI,UAAY,GACpCuxF,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,cAAeiwD,MAAO,KAAO5S,IAAOvmH,KAAKm0J,eAAc,GAAO,EAAK,KACzG/rH,EAAOxpC,OAAS,GACnBq6H,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,MAAOiwD,MAAO,KAAO5S,IAAOvmH,KAAKm0J,eAAc,EAAK,KAC9Fl7B,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,QAASiwD,MAAO,KAAO5S,IAAOvmH,KAAKo0J,gBAAgB,KAExF,EAAI9/I,SAASgzB,EAAKI,UACtB,CACC,IAAIwhC,EAAQlpE,KAAKwyF,OAAO8B,WAAWz+E,GAAK4gF,YAAc,gBAAkB,kBACxEwiC,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAOA,EAAOiwD,MAAO,IAAMn5H,KAAK80J,gBAAgBj/I,KACnF,CACD,MAGCojH,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,UAAWiwD,MAAO,IAAMn5H,KAAKw4H,KAAK,SAC3ES,EAAK1jH,OAAO,IAAI,YAAiB,CAAC2zD,MAAO,WAAYiwD,MAAO,IAAMn5H,KAAKw4H,KAAK,OAG7ES,EAAKiqB,MAAM,CAACt9H,QAAQ,KAAAljB,qBACrB,CAIU,uBAAA6wJ,CAAwBjsH,EAAuB2tH,GAExD,IAAIC,EAAYz5J,OAAOsT,KAAK/O,KAAKoyJ,oBAAoBxnJ,QAAQtM,GAASgpC,EAAK0vD,aAAe1vD,EAAK0vD,YAAY14F,IAAUgpC,EAAKghH,OAAShhH,EAAKghH,MAAMhqJ,KAC9I,GAAwB,GAApB42J,EAAUt2J,OAAa,OAE3B,IAAIu2J,EAAS7tH,EAAKipC,QAAUK,GAAeC,YAAYvpC,EAAKipC,SAAW,KACvE,GAAItkB,GAAQ73C,QAAQ+gJ,IAAWlpG,GAAQ73C,QAAQ6gJ,GAAS,OACxD,GAAIE,GAAUF,GAAUppG,GAAUypB,eAAe6/E,EAAQF,GAAS,OAElE,IAAInb,EAAM7tF,GAAQ73C,QAAQ6gJ,GAAU,8BAAgC,yBACpEnb,GAAO,4BAAgD,GAApBob,EAAUt2J,OAAc,GAAK,6BAChE,IAAK,IAAIN,KAAO42J,EAAWpb,GAAO,SAAW95I,KAAKoyJ,mBAAmB9zJ,GAErE,GADAw7I,GAA2B,GAApBob,EAAUt2J,OAAc,2BAA6B,6BACvDw2J,QAAQtb,GAEb,IAAK,IAAIx7I,KAAO42J,EAEX5tH,EAAK0vD,oBAAoB1vD,EAAK0vD,YAAY14F,GAC1CgpC,EAAKghH,cAAchhH,EAAKghH,MAAMhqJ,EAEpC,GCn/BD,SAAYizJ,GAEX,0BACA,gCACA,cACA,cACA,kBACA,4BACA,gCACA,kBACA,wBACA,wBACA,8BACA,kBACA,oBACA,8BACA,4BACA,kBACA,kBACA,sBACA,cACA,cACA,cACA,0BACA,YACA,gBACA,sBACA,0BACA,kBACA,oBACA,0BACA,sBACA,aACA,CAjCD,CAAYA,KAAAA,GAAiB,KAqDtB,MAAM8D,GAYZ,WAAAn4J,CAAoBo4J,EAAuCC,GAAvC,KAAAD,SAAAA,EAAuC,KAAAC,eAAAA,EAVpD,KAAAC,gBAA6B,KAG5B,KAAAC,OAA6B,CAAC,EAC9B,KAAAC,OAA6B,CAAC,EAC9B,KAAAC,UAAoC,CAAC,EACrC,KAAAltB,SAAW,IAAIrkI,IAMtB,GAAiB,sBAxBI,sKAyBtB,CAEO,MAAA6iC,CAAO2uH,GAEbA,EAAUv2H,QACVr/B,KAAKyvI,QAAU,GAAI,UAAUxwG,SAAS22H,GAAW9yI,IAAI,CAAC,QAAW,OAAQ,MAAS,OAAQ,OAAU,SACpG9iB,KAAKyvI,QAAQ3sH,IAAI,CAAC,iBAAkB,MAAO,YAAa,SAAU,kBAAmB,eAAgB,cAAe,WAEpH9iB,KAAKyvI,QAAQ3sH,IAAI,CAAC,WAAc,iDAChC9iB,KAAKyvI,QAAQ3sH,IAAI,CAAC,cAAe,SAIjC,IAAK,IAAI2uB,KAAOzxC,KAAKs1J,SACrB,CACC,IAAIO,EAAS,GAAI,UAAU52H,SAASj/B,KAAKyvI,SACzC,IAAK,IAAIjY,KAAO/lF,EAChB,CACC,IAAK9L,EAAK05D,GAAOr/F,KAAK81J,cAAct+B,GACpCq+B,EAAOtgJ,OAAOowB,GACd3lC,KAAKy1J,OAAOj+B,EAAIu+B,KAAOpwH,EACvB3lC,KAAK01J,OAAOl+B,EAAIu+B,KAAO12D,EACvBr/F,KAAK21J,UAAUn+B,EAAIu+B,MAAO,CAC3B,CACD,CACD,CAGO,eAAAC,CAAgB33J,GAEtB,IAAK,IAAI03J,KAAO13J,EAChB,CACC,IAAIsnF,EAAS3lF,KAAK21J,UAAUI,GAAO13J,EAAI03J,GACvC/1J,KAAK01J,OAAOK,GAAKjzI,IAAI,CAAC,QAAW6iE,EAAS,EAAI,IAC/C,CACD,CAGO,WAAAswE,CAAYF,GAEd/1J,KAAKyoI,SAASnkI,IAAIyxJ,KACtB/1J,KAAKyoI,SAASnoI,IAAIy1J,GAClB/1J,KAAKy1J,OAAOM,GAAKjzI,IAAI,CAAC,mBAAoB,YAC3C,CACO,cAAAozI,CAAeH,GAEhB/1J,KAAKyoI,SAASnkI,IAAIyxJ,KACvB/1J,KAAKyoI,SAAShnI,OAAOs0J,GACrB/1J,KAAKy1J,OAAOM,GAAKjzI,IAAI,CAAC,mBAAoB,gBAC3C,CAGO,YAAAqzI,CAAaJ,GAEnB,IAAIpwH,EAAM3lC,KAAKy1J,OAAOM,GACtB,OAAKpwH,EACE,IAAIzN,EAAIyN,EAAIxI,OAAOi5H,WAAYzwH,EAAIxI,OAAOk5H,UAAW1wH,EAAIjmC,QAASimC,EAAIhmC,UAD5D,IAElB,CAIQ,aAAAm2J,CAAct+B,GAErB,IAAI7xF,EAAM,GAAI,UAAU7iB,IAAI,CAAC,QAAW,iBACxC6iB,EAAIrF,QAAQ,KAAM,qBAAuBk3F,EAAI8+B,KAAK31I,UAAU,EAAG62G,EAAI8+B,KAAKC,YAAY,OACpF,IAAI72J,EAAQ83H,EAAI93H,MAAQ83H,EAAI93H,MAAQ,GACpCimC,EAAI7iB,IAAI,CAAC,MAAS,GAAGpjB,MAAW,OAAU,OAAQ,OAAU,MAAO,QAAW,QAC9EimC,EAAI7iB,IAAI,CAAC,gBAAiB,QACtB9iB,KAAKyoI,SAASnkI,IAAIkzH,EAAIu+B,MAAMpwH,EAAI7iB,IAAI,CAAC,mBAAoB,YAE7D,IAAI0zI,EAAS/yH,GAAME,aAAe,cAAgB6zF,EAAI8+B,KAClDj3D,EAAM,GAAI,UAAUpgE,SAAS0G,GAAK3kB,KAAK,CAAC,IAAOw1I,IAsBnD,OApBA7wH,EAAInF,SAAS,8BAYbmF,EAAIjD,SAAQ,KAEP1iC,KAAKw1J,iBAAiBx1J,KAAKw1J,kBAC1Bx1J,KAAK21J,UAAUn+B,EAAIu+B,MACxB/1J,KAAKu1J,eAAe/9B,EAAIu+B,IAAI,IAEzBv+B,EAAIi/B,KAAKhyH,GAAWkB,EAAK5f,EAAWyxG,EAAIi/B,MAErC,CAAC9wH,EAAK05D,EACd,ECpKM,MAAeq3D,GAIrB,WAAAx5J,CAAmBk0F,GAAA,KAAAA,KAAAA,EAElB,GAAI,QAAQtuE,IAAI,CAAC,SAAY,WAE7BsuE,EAAKtuE,IAAI,CAAC,MAAS,OAAQ,OAAU6a,SAAS7C,gBAAgB67H,aAAe,OAC7E/wI,OAAOyc,iBAAiB,UAAU,IAAMriC,KAAK42J,aAC7CxlE,EAAKtuE,IAAI,CAAC,cAAe,SAExB9iB,KAAKoxF,KAAKjwE,GAAWkhB,iBAAiB,cAAc,CAAC/6B,EAAWyuJ,IAAe/1J,KAAK62J,WAAWd,IACjG,CAGO,QAAAe,CAASC,GAEhB,CAGU,QAAAH,GAET52J,KAAKoxF,KAAKtuE,IAAI,CAAC,OAAU6a,SAAS7C,gBAAgB67H,aAAe,MAClE,CAGO,UAAAE,CAAWd,GAEbA,GAAOxE,GAAkByF,WAAYC,GAAc,gBAC9ClB,GAAOxE,GAAkB2F,cAAeD,GAAc,mBACtDlB,GAAOxE,GAAkB4F,KAAMn3J,KAAKo3J,iBACpCrB,GAAOxE,GAAkB8F,KAAMr3J,KAAKs3J,iBACpCvB,GAAOxE,GAAkBgG,OAAQv3J,KAAKw3J,mBAC1Cx3J,KAAKy3J,iBAAiB1B,EAC5B,CAGO,gBAAA0B,CAAiB1B,GAEvBtuJ,QAAQw3I,IAAI,QAAU8W,EACvB,ECrCD,IAAI,GAAqB,GAWzB,MAAM,GAAW,WAOjB,SAAS,GAAQr8C,GAAoB,OAAOA,EAAM,EAAS,CAU3D,IAAYg+C,IAAZ,SAAYA,GAEX,mBACA,uBACA,6BACA,6BACA,oCACA,CAPD,CAAYA,KAAAA,GAAa,KAuBlB,MAAMC,GASZ,WAAAz6J,CAAYiqC,GALJ,KAAAywH,OAAS,IACT,KAAAC,QAA0B,KAMjC73J,KAAKq0F,QAAU,IAAIntD,GAAQphB,EAAUqhB,IACrCnnC,KAAKsqF,KAAO,IAAImlE,GAAYzvJ,KAAKq0F,SACjCr0F,KAAKsqF,KAAKqlE,SACX,CAKa,SAAAmI,G,qCAEZ,IAAK7P,GAAMC,cAAe,OAAO,EAEjC,IAAIt/G,GAAW,EACf,IAAK,IAAItB,KAAQtnC,KAAKq0F,QAAQ9rD,gBAC9B,CACC,IAAKjB,EAAKipC,SAAWjpC,EAAK0gH,MAAO,SACjC,IAAIz7G,EAAe,KACnB,IAAKA,EAAMqkC,GAAeC,YAAYvpC,EAAKipC,QAAS,CACpD,MAAO1kE,GAAI,QAAS,CACpB,GAAIogD,GAAQ73C,QAAQm4B,GAAM,SAC1B,IAAKy7G,EAAO+P,SAAkB9P,GAAM0C,UAAUp+G,GAC9CjF,EAAK0gH,MAAQA,EACb1gH,EAAKywH,SAAWA,EAChBnvH,GAAW,CACZ,CACA,OAAOA,CACR,E,+RAGO,SAAAovH,GAEN,IAAIxE,EAASxzJ,KAAKq0F,QAAQz4E,QAG1B,IAAK,IAAIwsB,KAAUorH,EAAOhrH,aAC1B,CACC,IAAIytD,EAAOj2F,KAAKsqF,KAAK4L,SAAS9tD,GAC1B6tD,IAAOu9D,EAAOrrH,aAAaC,GAA4B6tD,KAAOA,EACnE,CAIA9mB,EAAM,IAAK,IAAI7nC,KAAQksH,EAAOjrH,gBAAiB,GAAI,EAAI/zB,IAAI8yB,EAAKI,WAAa,EAC7E,CACC,GAAuC,GAAnC,EAAIlzB,IAAI8yB,EAAKI,SAAS,GAAGG,OAAa,SAC1C,IAAK0lE,EAAOC,GAASlmE,EAAKI,SAAS,GAAGG,MACtC,IAAK,IAAI/3B,EAAI,EAAGA,EAAIw3B,EAAKI,SAAS9oC,OAAQkR,IAC1C,CACC,IAAI+3B,EAAQP,EAAKI,SAAS53B,GAAG+3B,MAC7B,GAAsB,GAAlB,EAAIrzB,IAAIqzB,IAAeA,EAAM,IAAM2lE,EAAO,SAASr+B,EACvDo+B,GAAS1lE,EAAM,EAChB,CACA,GAAI0lE,GAASC,EAAO,SACpB,IAAK,IAAIz0F,KAAOuuB,EAAKI,SAAW3uB,EAAwBk/I,SAAWl/I,EAAI8uB,MAAM,EAC9E,CAIA,IAAIqwH,EAAqB,GAEzB,IAAK,IAAI9vH,KAAUorH,EAAOhrH,aAC1B,CACC,IAAI2vH,EAAQ3E,EAAOrrH,aAAaC,GAC5B,EAAI5zB,IAAI2jJ,EAAMzwH,UAAY,IAE9BywH,EAAMC,UAAYD,EAAMnQ,OAAS,GAC7BmQ,EAAMC,UAAU13I,WAPT,eAO0By3I,EAAMC,UAAYD,EAAMC,UAAUz3I,UAAU03I,IAC5EH,EAAUh3J,SAASi3J,EAAMC,YAAYF,EAAU17J,KAAK27J,EAAMC,WAChE,CACAF,EAAUx+I,OAEV,IAAI03E,EAAOoiE,EAAOrsH,QACdmxH,EAAUt4J,KAAKu4J,iBAAiBnnE,EAAM8mE,GAE1Cl4J,KAAK43J,OAAS,GACd53J,KAAK63J,QAAU,GAEf,IAAIW,EAAgB,CAACh4I,EAAYziB,KAEhCiC,KAAK43J,QAAUp3I,EACf,IAAK,IAAI1Q,EAAI,EAAGA,EAAI0Q,EAAI5hB,OAAQkR,IAAK9P,KAAK63J,QAAQr7J,KAAKuB,EAAK,EAG7Dy6J,EApGqB,iBAoGSd,GAAce,QAC5CD,EAAc,IAAKd,GAAc18B,MACjC,IAAK,IAAIlrH,EAAI,EAAGA,EAAIooJ,EAAUt5J,OAAQkR,IAEjCA,EAAI,GAAG0oJ,EAAc,IAAKd,GAAc18B,MAC5Cw9B,EAAcN,EAAUpoJ,GAAI4nJ,GAAcgB,WAE3CF,EAAc,IAAKd,GAAc18B,MACjCw9B,EAAc,IAAMF,EAAQK,OAAQjB,GAAckB,WAClDJ,EAAc,IAAKd,GAAc18B,MACjCw9B,EAAc,IAAMF,EAAQO,OAAQnB,GAAcoB,cACnD,CAGO,SAAA/sF,GAEN,OAAO/rE,KAAK43J,MACb,CAGO,UAAAmB,GAEN,OAAO/4J,KAAK63J,OACb,CAIO,eAAAmB,GAEN,IAAInlH,EAAgB,GACpB,IAAK,IAAIvM,KAAQtnC,KAAKq0F,QAAQ9rD,gBAE7B,GAAKjB,EAAKipC,QAAV,CACA,IAAKjpC,EAAKywH,SAAU,KAAM,kCAC1B,IAAKzwH,EAAKywH,SAASr3I,WAAW,aAAc,KAAM,sBAAwB4mB,EAAKywH,SAC/ElkH,EAAKr3C,KAAK8qC,EAAKywH,SAASp3I,UAAU,GAHP,CAM5B,OADAkzB,EAAO,EAAI95B,aAAa85B,GACjB,kBAAoBA,EAAK/1B,KAAK,IACtC,CAGO,gBAAAm7I,IA1LR,WAEC,KAAI,GAAUr6J,OAAS,GACvB,IAAK,IAAIkR,EAAI,EAAGA,EAAI,IAAKA,IACzB,CACC,IAAIyI,EAAIzI,EACR,IAAK,IAAI/F,EAAI,EAAGA,EAAI,EAAGA,IAAc,EAAJwO,EAAaA,EAAI,WAAcA,IAAM,EAASA,KAAW,EAC1F,GAAU/b,KAAK+b,EAChB,CACD,CAmLE,GACA,MAAM2gJ,EAAU,6BAEhB,IAAIC,EAAmB,GAAIxgJ,EAAM,EACjC,IAAK,IAAI7I,EAAI,EAAGA,EAFH,EAEaA,IAAKqpJ,EAAQ38J,KArLL,IAuLlC,IAAI48J,EAAiBC,IAEpB,IAAIxjJ,EAAMqjJ,EAAQ1+I,QAAQ6+I,GAxL7B,IAAkB3/C,EAyLX7jG,EAAM,IACVsjJ,EAAQxgJ,IA1LO+gG,EA0LSy/C,EAAQxgJ,GAvL3B,GADkB,KAAd+gG,EAwL6B7jG,IAvLf6jG,IAAQ,GAwL/B/gG,EAAMA,EAAM2gJ,EAAW3gJ,EAAM,EAAI,EAAC,EAG/Bk7B,EAAgB,GACpB,IAAK,IAAIvM,KAAQtnC,KAAKq0F,QAAQ9rD,gBAE7B,GAAKjB,EAAKipC,QAAV,CACA,IAAKjpC,EAAKywH,SAAU,KAAM,kCAC1B,IAAKzwH,EAAKywH,SAASr3I,WAAW,aAAc,KAAM,sBAAwB4mB,EAAKywH,SAC/ElkH,EAAKr3C,KAAK8qC,EAAKywH,SAASp3I,UAAU,GAHP,CAK5B,IAAK,IAAI8mB,KAAO,EAAI1tB,aAAa85B,GAAO,IAAK,IAAIwlH,KAAU5xH,EAE1D2xH,EAAcC,GAGf,IAAI/6J,EAAM,mBAEV,IAAK,IAAIo7G,KAAOy/C,EAChB,CACCz/C,EAAM,GAAQA,KAAS,EACvB,IAAK,IAAI5pG,EAAI,EAAGA,EAAI,EAAGA,IAGtBxR,GAAO46J,EADGx/C,EAAM,IAEhBA,EAAM/iG,KAAK4iJ,MAAM7/C,EAAM,GAEzB,CAEA,OAAOp7G,CACR,CAGO,0BAAOk7J,CAAoB5xH,EAA4BlgC,EAAcuwJ,EAAiBnwG,EAAcguC,GAE1G,IAAI2jE,EAAW,CAAC79J,EAAc89J,IAAsB/iJ,KAAK0tC,MAAMzoD,EAAQ+a,KAAK8H,IAAI,IAAKi7I,IAAMhmJ,WAK3F,GAAgB,MAAZukJ,EACJ,CACC,IAAIyB,EAAM15J,KAAK25J,kBAAkB,CAAC1B,GAAW,GAC7C,OAAOwB,EAASxB,EAAUyB,GAAO,KAAOA,CACzC,CAUA,GAAgB,MAAZ9xH,GAA6B,MAATkgB,EAAe,OAAO,KAG9C,IAAI8xG,EAAU9xG,EAEd,GADK8xG,EAAQl5I,WAAW,aAAYk5I,EAAUvU,GAAMS,UAAU8T,KACzDA,EAAS,OAKd,IAAI/lH,EAAgB,GAEJ,MAAZiiD,GAAkBjiD,EAAKr3C,KAAKs5F,GAEhC,IAAI3pF,EAAqC,iBAAZy7B,EAAuB,CAACA,GAAsBA,EAC9D,MAATlgC,GAAeyE,EAAO3P,KAAKkL,GAE/B,IAAKyjG,EAAU0uD,GAAUxU,GAAMU,gBAAgB6T,EAASztJ,GACxD,IAAKg/F,EAAU,OAEf,IAAIuuD,EAAM15J,KAAK25J,kBAAkBE,EAAQ,GAWzC,OATAhmH,EAAKr3C,KAAKi9J,EAASI,EAAO,GAAIH,IAC1BG,EAAOj7J,OAAS,IAEfU,MAAMC,QAAQqoC,GAAWiM,EAAKr3C,KAAK,KAAWq3C,EAAKr3C,KAAK,KAC5Dq3C,EAAKr3C,KAAKi9J,EAASI,EAAO,GAAIH,KAE/B7lH,EAAKr3C,KAAK2uG,GACVt3D,EAAKr3C,KAAKk9J,EAAIhmJ,YAEPmgC,EAAK/1B,KAAK,GAClB,CAIQ,gBAAAy6I,CAAiBJ,EAAuBD,GAE/C,IAAI4B,EAAqB,CAACnB,OAAQ,GAAIE,OAAQ,IAC1CP,EAAwB,CAACK,OAAQ,GAAIE,OAAQ,IAGjD,GAAI,EAAIrkJ,IAAI2jJ,EAAMzwH,UAAY,GAEP,MAAlBywH,EAAMzwH,SAAkB,IAAK,IAAI4mH,KAAW6J,EAAMzwH,SACtD,CACC,IAAIqyH,EAAU/5J,KAAKu4J,iBAAiBjK,EAA4B4J,IAE5D4B,EAAKnB,OAAO/5J,OAAS,GAAKk7J,EAAKjB,OAAOj6J,OAAS,KAElDk7J,EAAKnB,QAAU,IACfmB,EAAKjB,QAAU,KAEhBiB,EAAKnB,QAAUoB,EAAQpB,OACvBmB,EAAKjB,QAAUkB,EAAQlB,MACxB,CAID,IAAIhjJ,EAAyB,MAAnBsiJ,EAAMC,UAAoBF,EAAU19I,QAAQ29I,EAAMC,WAAa,EAAI,EACzEviJ,EAAM,IAAGyiJ,EAAQK,QAAU9iJ,EAAInC,YAEnC,IAAIsmJ,EAAOrC,GAAa6B,oBAAoBrB,EAAMvwH,SAAUuwH,EAAMzwJ,MAAOywJ,EAAMF,SAAUE,EAAMrwG,MAAOqwG,EAAMriE,UAC5G,IAAKkkE,GAAQ7B,EAAMliE,KACnB,CACC,IAAI,aAACE,EAAY,UAAEC,EAAS,UAAEC,EAAS,aAAEC,GAAgB6hE,EAAMliE,KAC/D+jE,EAAOrC,GAAa6B,oBAAoBrjE,EAAcC,EAAW,KAAMC,EAAWC,EACnF,CAUA,OATI0jE,IAAM1B,EAAQO,QAAUmB,IAExBF,EAAKnB,OAAO/5J,OAAS,GAAKk7J,EAAKjB,OAAOj6J,OAAS,KAElD05J,EAAQK,OAAS,IAAMmB,EAAKnB,OAAS,IAAML,EAAQK,OACnDL,EAAQO,OAAS,IAAMiB,EAAKjB,OAAS,IAAMP,EAAQO,OACnD74J,KAAKi6J,WAAW3B,IAGVA,CACR,CAGQ,UAAA2B,CAAW3B,GAElB,KAAOA,EAAQK,OAAOj4I,WAAW,OAAS43I,EAAQK,OAAOp3I,SAAS,OAC9D+2I,EAAQO,OAAOn4I,WAAW,OAAS43I,EAAQO,OAAOt3I,SAAS,OAE9D+2I,EAAQK,OAASL,EAAQK,OAAOh4I,UAAU,EAAG23I,EAAQK,OAAO/5J,OAAS,GACrE05J,EAAQO,OAASP,EAAQO,OAAOl4I,UAAU,EAAG23I,EAAQO,OAAOj6J,OAAS,EAEvE,CAIQ,wBAAO+6J,CAAkBxtJ,EAAiBkV,GAEjD,IAAI64I,EAAS38J,OAAO4sB,kBACpB,IAAK,IAAIxV,KAAKxI,EAAQ+tJ,EAASvjJ,KAAKW,IAAI4iJ,EAAQvjJ,KAAKuF,IAAIvH,IAEzD,IAAKpX,OAAOqtB,SAASsvI,IAAW38J,OAAOqjB,MAAMs5I,IAAWA,GAAU,EAAG,OAAO,EAE5E,IAAIR,EAAM/iJ,KAAK0tC,MAAM1tC,KAAKwjJ,MAAMD,IAAW74I,EAGvCb,EAAe,GACnB,IAAK,IAAI7L,KAAKxI,EAAQqU,EAAIhkB,KAAKma,KAAK0tC,MAAM1vC,EAAIgC,KAAK8H,IAAI,IAAKi7I,IAAMhmJ,YAElEouG,EAAO,OACP,CACC,IAAK,IAAIhyG,EAAI,EAAGA,EAAI0Q,EAAI5hB,OAAQkR,IAChC,CACC,IAAK0Q,EAAI1Q,GAAGyR,SAAS,KAAM,MAAMugG,EACjCthG,EAAI1Q,GAAK0Q,EAAI1Q,GAAG6Q,UAAU,EAAGH,EAAI1Q,GAAGlR,OAAS,EAC9C,CACA86J,GACD,CAEA,OAAOA,CACR,EClXM,MAAMU,GAUZ,WAAAl9J,GARQ,KAAAgtE,GAAK,IAAI/rB,GAUhBn+C,KAAK0wE,OAAS1wE,KAAKkqE,GAAGpoB,aAAa,WAAY,WAA0B,IACzE9hD,KAAK8/C,QAAU9/C,KAAKkqE,GAAGpoB,aAAa,OAAQ,SAAwB,IACpE9hD,KAAKq6J,QAAUr6J,KAAKkqE,GAAGpoB,aAAa,WAAY,SAAwB,IACxE9hD,KAAKs6J,QAAUt6J,KAAKkqE,GAAGpoB,aAAa,WAAY,SAAwB,GACzE,CAGO,MAAAvsC,CAAO4xB,GAGb,GAAIA,EAAQrrC,MAAQqrC,EAAQopC,SAAWppC,EAAQ6gH,MAE9ChoJ,KAAKu6J,gBAAgBpzH,EAAS,CAAC,SAKhC,GAAKA,EAAQO,SACb,IAAK,IAAI53B,EAAI,EAAGA,EAAIq3B,EAAQO,SAAS9oC,OAAQkR,IAAK9P,KAAKu6J,gBAAgBpzH,EAAQO,SAAS53B,GAAI,CAACA,EAAI,GAClG,CAGO,KAAAtF,GAEN,OAAO,IAAIimE,GAAazwE,KAAKkqE,IAAI1/D,OAClC,CAKQ,eAAA+vJ,CAAgBjzH,EAAuBiW,GAE9C,IAAI5/B,EAAM3d,KAAKkqE,GAAGxnB,YAEdnW,EAAe,KACnB,GAAIjF,EAAKipC,UAERhkC,EAAMyQ,GAAS2D,WAAWrZ,EAAKipC,UAC1BhkC,GAEJ,IAECA,EAAM,IAAIs2B,GAAav7B,EAAKipC,SAAStzC,OACtC,CACA,MAAOpxB,GAAI,CAUb,GAPK0gC,IAAKA,EAAM,IAAIyQ,IAEpBh9C,KAAKkqE,GAAG/oB,YAAYxjC,EAAK3d,KAAK0wE,OAAQnkC,GAClCjF,EAAKxrC,MAAMkE,KAAKkqE,GAAG9oB,UAAUzjC,EAAK3d,KAAK8/C,QAASxY,EAAKxrC,MACzDkE,KAAKkqE,GAAG9oB,UAAUzjC,EAAK3d,KAAKq6J,QAAS98G,EAAIz/B,KAAK,MAC9C9d,KAAKkqE,GAAG9oB,UAAUzjC,EAAK3d,KAAKs6J,QAASt6J,KAAKw5J,oBAAoBlyH,IAE1DA,EAAKI,SAAU,IAAK,IAAI53B,EAAI,EAAGA,EAAIw3B,EAAKI,SAAS9oC,OAAQkR,IAC7D,CACC,IAAI0qJ,EAASj9G,EAAItuC,MAAM,GACvBurJ,EAAOh+J,KAAKsT,EAAI,GAChB9P,KAAKu6J,gBAAgBjzH,EAAKI,SAAS53B,GAAI0qJ,EACxC,CACD,CAGQ,mBAAAhB,CAAoBlyH,GAoC3B,IAAI2wH,EAAkB,KAGtB,OAF2B,GAAvB,EAAIzjJ,IAAI8yB,EAAKO,SAAaowH,EAAW3wH,EAAKO,MAAM,IAE7C8vH,GAAa6B,oBAAoBlyH,EAAKM,SAAUN,EAAK5/B,MAAOuwJ,EAAU3wH,EAAKwgB,MAAOxgB,EAAKwuD,SAC/F,EC5ID,MAAM,GAA+B/tF,QAAQ,MCAvC,GAA+BA,QAAQ,Q,2SCyC7C,MAAM0yJ,GACN,CACC,CACC,CAACnE,KAAM,kBAAmBG,IAAK,OAAQV,IAAKxE,GAAkB8F,OAE/D,CACC,CAACf,KAAM,kBAAmBG,IAAK,iBAAkBV,IAAKxE,GAAkBmJ,aACxE,CAACpE,KAAM,uBAAwBG,IAAK,iBAAkBV,IAAKxE,GAAkBoJ,eAC7E,CAACrE,KAAM,oBAAqBG,IAAK,kBAAmBV,IAAKxE,GAAkBqJ,QAC3E,CAACtE,KAAM,qBAAsBG,IAAK,kBAAmBV,IAAKxE,GAAkBsJ,YAE7E,CACC,CAACvE,KAAM,oBAAqBG,IAAK,gCAAiCV,IAAKxE,GAAkBuJ,QACzF,CAACxE,KAAM,qBAAsBG,IAAK,gCAAiCV,IAAKxE,GAAkBwJ,SAC1F,CAACzE,KAAM,0BAA2BG,IAAK,yBAA0BV,IAAKxE,GAAkByJ,cACxF,CAAC1E,KAAM,yBAA0BG,IAAK,yBAA0BV,IAAKxE,GAAkB0J,aACvF,CAAC3E,KAAM,oBAAqBG,IAAK,SAAUV,IAAKxE,GAAkB7nC,QAClE,CAAC4sC,KAAM,oBAAqBG,IAAK,UAAWV,IAAKxE,GAAkB2J,QACnE,CAAC5E,KAAM,sBAAuBG,IAAK,YAAaV,IAAKxE,GAAkB4J,WAExE,CACC,CAAC7E,KAAM,kBAAmBG,IAAK,OAAQV,IAAKxE,GAAkB6J,MAC9D,CAAC9E,KAAM,kBAAmBG,IAAK,OAAQV,IAAKxE,GAAkB8J,OAE/D,CACC,CAAC/E,KAAM,kBAAmBG,IAAK,OAAQV,IAAKxE,GAAkBznC,MAC9D,CAACwsC,KAAM,iBAAkBG,IAAK,MAAOV,IAAKxE,GAAkBvnC,KAC5D,CAACssC,KAAM,mBAAoBG,IAAK,QAASV,IAAKxE,GAAkB+J,QAEjE,CACC,CAAChF,KAAM,wBAAyBG,IAAK,YAAaV,IAAKxE,GAAkBgK,UACzE,CAACjF,KAAM,oBAAqBG,IAAK,UAAWV,IAAKxE,GAAkBiK,QACnE,CAAClF,KAAM,qBAAsBG,IAAK,WAAYV,IAAKxE,GAAkBkK,WAIhE,MAAMC,WAAqBhF,GAQjC,WAAAx5J,CAAYk0F,EAAkB2nC,EAAkC4e,GAE/DjtI,MAAM0mF,GAFuB,KAAA2nC,UAAAA,EAAkC,KAAA4e,UAAAA,EANxD,KAAAof,SAAkB,KAElB,KAAA4E,OAAS,IAAInK,GAAYxxJ,KAAK+4H,UAAW/4H,KAAK23I,WAQrD33I,KAAK47J,OAAS,IAAIvG,GAAWoF,IAAS1E,GAA0B/1J,KAAK62J,WAAWd,KAEhF/1J,KAAK27J,OAAOlK,oBAAsB,IAAMzxJ,KAAK67J,cAE7C,IAAIpsB,EAAU,GAAI,UAAUxwG,SAASmyD,GAAMtuE,IAAI,CAAC,QAAW,SAC3D2sH,EAAQ3sH,IAAI,CAAC,iBAAkB,SAAU,MAAS,OAAQ,OAAU,SACpE,IAAIg5I,EAAY,GAAI,UAAU78H,SAASwwG,GAAS3sH,IAAI,CAAC,YAAa,MAC9Di5I,EAAY,GAAI,UAAU98H,SAASwwG,GAAS3sH,IAAI,CAAC,YAAa,MAElE9iB,KAAK47J,OAAO30H,OAAO60H,GACnB97J,KAAK27J,OAAO10H,OAAO80H,GAEnB/7J,KAAK47J,OAAOpG,gBAAkB,IAAMx1J,KAAK27J,OAAOrJ,SACjD,CAEO,UAAAM,CAAWv+D,GAEjBr0F,KAAK27J,OAAO7I,eACZ9yJ,KAAK27J,OAAO/I,WAAWv+D,GAAS,GAAM,GACtCr0F,KAAK27J,OAAO3I,UAAS,EACtB,CAEO,QAAA8D,CAASC,GAEf,IAAKA,EAMJ,OAJA/2J,KAAK27J,OAAO7I,eACZ9yJ,KAAK27J,OAAO/I,WAAW,IAAI1rH,IAAW,GAAM,GAC5ClnC,KAAK67J,mBACL77J,KAAK+2J,SAAW,MAIjB,YAAYA,EAAU,SAAS,CAAC/L,EAASthJ,KAExC,GAAIshJ,EAAK,MAAMA,EAEf,IAAI32D,EACJ,IAAKA,EAAUntD,GAAQa,YAAYr+B,EAAM,CACzC,MAAOmC,GAIN,OAFApE,QAAQw3I,IAAI,yBAA2BpzI,EAAI,KAAOnC,QAClD+uH,MAAM,4BAEP,CAEApkC,EAAQltD,QAAQC,ezEtHY,EyEwH5BpnC,KAAK27J,OAAO7I,eACZ9yJ,KAAK27J,OAAO/I,WAAWv+D,GAAS,GAAM,GACtCr0F,KAAK27J,OAAO3I,UAAS,GACrBhzJ,KAAK+2J,SAAWA,EAChB/2J,KAAK67J,aAAa,GAEpB,CAEO,QAAAG,CAASjF,GAEf,IACIl5H,EADU79B,KAAK27J,OAAOhJ,aACJ3qH,YAEtB,aAAa+uH,EAAUl5H,GAAUmtH,IAE5BA,GAAKvyB,MAAM,mBAAqBuyB,EAAI,GAE1C,CAEU,QAAA4L,GAETlsJ,MAAMksJ,WACN52J,KAAK27J,OAAOhwD,eAIb,CAEO,UAAAkrD,CAAWd,GAEjB,IAAI3a,EAAMp7I,KAAK27J,OAAOlJ,iBAClBrX,EAEC2a,GAAOxE,GAAkBvnC,IAAKoxB,EAAIuF,YAC7BoV,GAAOxE,GAAkBznC,KAAMsxB,EAAIoF,aACnCuV,GAAOxE,GAAkB+J,MAAOlgB,EAAIwF,cACpCmV,GAAOxE,GAAkB6J,KAAMhgB,EAAIyF,aACnCkV,GAAOxE,GAAkB8J,MAAMjgB,EAAI0F,aAGxC9gJ,KAAK27J,OAAOpJ,sBAQjB7nJ,MAAMmsJ,WAAWd,GALZ,CAACxE,GAAkBvnC,IAAKunC,GAAkBznC,KAAMynC,GAAkB+J,MACpE/J,GAAkB6J,KAAM7J,GAAkB8J,MAAM7gJ,QAAQu7I,IAAQ,GAAGp4H,SAASynG,YAAY2wB,EAK5F,CAEO,gBAAA0B,CAAiB1B,GAEnBA,GAAOxE,GAAkB0K,UAAWj8J,KAAKk8J,kBACpCnG,GAAOxE,GAAkBsJ,UAAW76J,KAAKm8J,sBACzCpG,GAAOxE,GAAkB6K,aAAcp8J,KAAKq8J,yBAC5CtG,GAAOxE,GAAkB6J,KAAMp7J,KAAK27J,OAAOxjC,cAC3C49B,GAAOxE,GAAkB8J,KAAMr7J,KAAK27J,OAAOtjC,cAC3C09B,GAAOxE,GAAkBvnC,IAAKhqH,KAAK27J,OAAOxH,eAAc,GACxD4B,GAAOxE,GAAkBznC,KAAM9pH,KAAK27J,OAAOxH,eAAc,GACzD4B,GAAOxE,GAAkB+K,WAAYt8J,KAAK27J,OAAOxH,eAAc,GAAO,GACtE4B,GAAOxE,GAAkB+J,MAAOt7J,KAAK27J,OAAOvH,iBAC5C2B,GAAOxE,GAAkBoJ,cAAe36J,KAAK27J,OAAOrI,gBACpDyC,GAAOxE,GAAkBmJ,YAAa16J,KAAK27J,OAAOlI,cAClDsC,GAAOxE,GAAkBqJ,OAAQ56J,KAAK27J,OAAOjI,gBAC7CqC,GAAOxE,GAAkB7nC,OAAQ1pH,KAAK27J,OAAO9H,gBAC7CkC,GAAOxE,GAAkBuJ,OAAQ96J,KAAK27J,OAAO7H,kBAC7CiC,GAAOxE,GAAkBwJ,QAAS/6J,KAAK27J,OAAO5H,uBAC9CgC,GAAOxE,GAAkByJ,aAAch7J,KAAK27J,OAAO3H,sBACnD+B,GAAOxE,GAAkB0J,YAAaj7J,KAAK27J,OAAO1H,qBAClD8B,GAAOxE,GAAkB2J,OAAQl7J,KAAK27J,OAAOzH,gBAAgB,GAC7D6B,GAAOxE,GAAkB4J,SAAUn7J,KAAK27J,OAAOzH,eAAe,GAC9D6B,GAAOxE,GAAkBgK,SAAUv7J,KAAK27J,OAAO1I,WAC/C8C,GAAOxE,GAAkBgL,WAAYv8J,KAAK27J,OAAOzI,aACjD6C,GAAOxE,GAAkBiK,OAAQx7J,KAAK27J,OAAOnjC,KAAK,MAClDu9B,GAAOxE,GAAkBkK,QAASz7J,KAAK27J,OAAOnjC,KAAK,IACvD9tH,MAAM+sJ,iBAAiB1B,EAC7B,CAIU,cAAAqB,GAET,IACIoF,EACJ,CACCp+G,MAAO,eACPq+G,WAAY,CAAC,YACbC,YALa18J,KAAK+2J,UAAY/2J,KAAK+2J,SAASv8I,QAAQ,QAAYxa,KAAK+2J,SAASp2I,UAAU,EAAG3gB,KAAK+2J,SAASR,YAAY,cAAav0J,EAMlI26J,QACA,CACC,CAAC7gK,KAAM,UAAW8gK,WAAY,CAAC,YAC/B,CAAC9gK,KAAM,qBAAsB8gK,WAAY,CAAC,WAG5C,UAAeC,eAAeL,GAAQx/J,MAAMpB,IAE3C,GAAIA,EAAMkhK,SAAU,OACpB,IAAIC,EAAU/8J,KAAK27J,OAAOhJ,aAAap5H,UACvC,IAAK,IAAI1wB,KAAMjN,EAAMohK,UAEhBD,GAAWl0J,EAAG0Y,SAAS,aAE1BvhB,KAAK82J,SAASjuJ,GACdk0J,GAAU,GAEFl0J,EAAG0Y,SAAS,SACpB01I,GAAc,kBAAmBpuJ,GAEjCouJ,GAAc,eAAgBpuJ,EAChC,GAEF,CAEU,cAAAyuJ,GAELt3J,KAAK27J,OAAOvnJ,YACXpU,KAAK+2J,UAEV/2J,KAAKg8J,SAASh8J,KAAK+2J,UACnB/2J,KAAK27J,OAAO3I,UAAS,GACrBhzJ,KAAK67J,eAJgB77J,KAAKw3J,mBAK3B,CAEU,gBAAAA,GAELx3J,KAAK27J,OAAOvnJ,WAWhB,UAAe6oJ,eARf,CACC7+G,MAAO,eAEPu+G,QACA,CACC,CAAC7gK,KAAM,UAAW8gK,WAAY,CAAC,eAGK5/J,MAAMpB,IAEvCA,EAAMkhK,WACV98J,KAAKg8J,SAASpgK,EAAMshK,UACpBl9J,KAAK+2J,SAAWn7J,EAAMshK,SACtBl9J,KAAK27J,OAAO3I,UAAS,GACrBhzJ,KAAK67J,cAAa,GAEpB,CAEQ,eAAAK,GAEP,IAAI7nE,EAAUr0F,KAAK27J,OAAOhJ,aAC1B,GAAIt+D,EAAQ96D,UAAW,OAEvB,IAAI4jI,EAAY,IAAI/C,GACpB+C,EAAU5nJ,OAAO8+E,EAAQltD,SACzB,IAAIi2H,EAASD,EAAU3yJ,QAEnB6yJ,EAAUr9J,KAAK+2J,SACnB,GAAIsG,EACJ,CACC,IAAIC,EAAUD,EAAQ9G,YAAY,KAC9B+G,EAAU,GAAKA,EAAUD,EAAQ9G,YAAY,MAAQ+G,EAAUD,EAAQ9G,YAAY,QAAO8G,EAAUA,EAAQ18I,UAAU,EAAG28I,IAC7HD,GAAW,MACZ,MACKA,OAAUr7J,EAEf,IAAIw6J,EACJ,CACCp+G,MAAO,mBACPs+G,YAAaW,EACbV,QACA,CACC,CAAC7gK,KAAM,SAAU8gK,WAAY,CAAC,UAG5B58J,KAAK+2J,UAAY/2J,KAAK+2J,SAASx1I,SAAS,cAC3Ci7I,EAAOE,aAAe18J,KAAK+2J,SAASp2I,UAAU,EAAG3gB,KAAK+2J,SAASn4J,OAAS,GAAK,QAAQ+hC,MAAM,UAAU7yB,OAEtG,UAAemvJ,eAAeT,GAAQx/J,MAAMpB,IAEvCA,EAAMkhK,UACV,aAAalhK,EAAMshK,SAAUE,GAASpS,IAEjCA,GAAKvyB,MAAM,mBAAqBuyB,EAAI,GACvC,GAEJ,CAEQ,mBAAAmR,GAEP,IAAIkB,EAAUr9J,KAAK+2J,SACnB,GAAIsG,EACJ,CACC,IAAIC,EAAUD,EAAQ9G,YAAY,KAC9B+G,EAAU,GAAKA,EAAUD,EAAQ9G,YAAY,MAAQ+G,EAAUD,EAAQ9G,YAAY,QAAO8G,EAAUA,EAAQ18I,UAAU,EAAG28I,IAC7HD,GAAW,MACZ,MACKA,OAAUr7J,EAEf,IAAIw6J,EACJ,CACC,MAAS,mBACT,YAAea,EACf,QACA,CACC,CAAC,KAAQ,2BAA4B,WAAc,CAAC,UAGtD,UAAeJ,eAAeT,GAAQx/J,MAAMpB,IAE3C,GAAIA,EAAMkhK,SAAU,OACpB,IAAIxyH,EAASV,GAAaY,uBACtB4yC,EAAU,IAAIonD,GAAmB,EAAG,EAAGl6F,EAAO5gC,KAAKmgC,YACnD2oD,EAAS,IAAI4B,GAAep0F,KAAK27J,OAAOhJ,aAAcv1E,EAAS9yC,GACnEkoD,EAAOiC,kBAAoBz0F,KAAK27J,OAAO9I,uBAEvCrgE,EAAOkC,aAAe,IAAI78D,EAAK,GAAM73B,KAAK27J,OAAO70H,WAAWpnC,QAAS,GAAMM,KAAK27J,OAAO70H,WAAWnnC,UAClG6yF,EAAOpU,UAEP,IAAI8qD,EAAM,IAAIlvC,GACd,IAAI62D,GAAYr+D,EAAQ02C,GAAKxnC,OAC7BwnC,EAAI/2G,YACJ,IAAIktE,EAAM6pC,EAAI/pC,WAAU,GAAM,GAE9B,aAAavjG,EAAMshK,SAAU79D,GAAM2rD,IAE9BA,GAAKvyB,MAAM,mBAAqBuyB,EAAI,GACvC,GAEJ,CAEQ,sBAAAqR,GAEP,IAAKpU,GAAMC,cAGV,YADAzvB,MAAM,6EAIP,IAAI8kC,EAAQ,IAAI5F,GAAa33J,KAAK27J,OAAOhJ,aAAaxrH,SAClDq2H,EAAOx9J,MA8CX,IA7CA,cAA2BuiI,GAE1B,WAAArlI,GAECwN,QACA1K,KAAKo+C,MAAQ,QACd,CACU,QAAA46E,GAETwkC,EAAKzkC,UAAUiM,YAAY,IAAIP,IAC/BzkI,KAAKokI,UAAUxnG,QAAQ,kBACvB,MAAa,gDAAM58B,KAAKy9J,cAAc,KAAtC,EACD,CACO,KAAAn6B,GAENk6B,EAAKzkC,UAAUkM,aACfv6H,MAAM44H,OACP,CACc,YAAAm6B,G,gDlF8EV,WACH,OAAO19I,EAAU/f,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAI+C,SAAS3F,GAAY4kC,YAAW,IAAM5kC,OACrD,GACJ,CkFhFUsgK,SACAH,EAAMzF,YACZyF,EAAMvF,YAEN,IAAIzyH,EAAOvlC,KAAKokI,UAChB7+F,EAAKlG,QAEL,IAAIokG,EAAW,GAAI,UAAUxkG,SAASsG,GAClC84E,EAAM,GAAI,WAAWp/E,SAASwkG,GAAU3gH,IAAI,CAAC,cAAe,YAAa,cAAe,QAAS,aAAc,cAC/G80I,EAAS2F,EAAMxxF,YAAa8rF,EAAU0F,EAAMxE,aAChD,IAAK,IAAIjpJ,EAAI,EAAGA,EAAI8nJ,EAAOh5J,OAAQkR,IACnC,CACC,IAAI0zI,EAAO,GAAI,WAAWvkH,SAASo/E,GACnCmlC,EAAK5mH,QAAQg7H,EAAO9nJ,IAChB+nJ,EAAQ/nJ,IAAM4nJ,GAAce,OAAQjV,EAAKxjH,OAAO,mBAAoB,WAC/D63H,EAAQ/nJ,IAAM4nJ,GAAcgB,UAAWlV,EAAKxjH,OAAO,mBAAoB,WACvE63H,EAAQ/nJ,IAAM4nJ,GAAckB,UAAWpV,EAAKxjH,OAAO,mBAAoB,WACvE63H,EAAQ/nJ,IAAM4nJ,GAAcoB,eAAetV,EAAKxjH,OAAO,mBAAoB,WACpFq+E,EAAI7+E,WAAW,SAChB,CAEc,GAAI,gFAAgFP,SAASwkG,GAAU3gH,IAAI,CAAC,cAAe,UACjI4f,SAAQ,IAAM86H,EAAKzkC,UAAU33E,UAAUw2G,IAChD,G,IAEkBrxI,MACpB,CAEQ,WAAAs1I,GAEP,GAAqB,MAAjB77J,KAAK+2J,SAAgD,YAA7Bp5H,SAASygB,MAAQ,YAE7C,IAAIu/G,EAAQhnJ,KAAKC,IAAI5W,KAAK+2J,SAASR,YAAY,KAAMv2J,KAAK+2J,SAASR,YAAY,OAC3En4G,EAAQ,cAAgBp+C,KAAK+2J,SAASp2I,UAAUg9I,EAAQ,GACxD39J,KAAK27J,OAAO5I,YAAc/yJ,KAAK27J,OAAOvnJ,YAAWgqC,GAAS,KAC9DzgB,SAASygB,MAAQA,CAClB,EC9aM,MAAMw/G,GACT,cAAAC,GAAmB,OAAO,CAAO,CACjC,eAAAlgB,CAAgBmgB,EAAWx2J,EAAO+0E,GAAO,E,+TCmBtC,IAAI0hF,IAAa,EAEjB,SAASC,GAAaC,GAAyBF,GAAaE,CAAU,CAMtE,SAAeC,GAAiBC,EAAeC,G,0CAErD,IAAIhtE,EAAOp0D,GAAIc,KAAK,IAAMsgI,GAE1BL,IAAa,E/ErBP,SAAuBM,GAC1B56H,GAAME,aAAe06H,EACrB,IACY1gI,QACZ,CACA,MAAO9xB,GACH,MACJ,CACI8xB,UACA,GAAiB,OAazB,WACI,IAAImG,EAAWtiB,EAAWiiB,GAAMK,UAEhC,MAAO,g0HAFoDtiB,EAAWiiB,GAAMM,mBAAgCviB,EAAWiiB,GAAMO,4KA2J1GF,s0BA1JHtiB,EAAWiiB,GAAMQ,yEAA6BziB,EAAWiiB,GAAMS,oBAAkC1iB,EAAWiiB,GAAMU,+xBAmNtI,CAlOiCm6H,GACjC,C+EYCC,CAAcJ,SACR1tE,GAAaI,aACbJ,GAAa9+E,KAAKm/E,YAAYqtE,EAAS,oCAE7C,OAAgD,mCAAI,OAEpD,IAAI/3I,EAAMR,OAAO3kB,SAASu9J,KAAK79I,UAAU,EAAGiF,OAAO3kB,SAASu9J,KAAKjI,YAAY,MAC7E9yH,GAAME,aAAe,aAAevd,EAAM,QAGzC,IAAIo2I,EAAS52I,OAAO3kB,SAAS+8G,OAAOr9F,UAAU,GAAGggB,MAAM,KACpD89H,EAAoB,KACpB1H,EAAkB,KACtB,IAAK,IAAI50J,KAAKq6J,EACd,CACC,IAAIv2G,EAAK9jD,EAAEqY,QAAQ,KACnB,GAAIyrC,EAAK,EAAG,SACZ,IAAI3nD,EAAM6D,EAAEwe,UAAU,EAAGslC,GAAKlpD,EAAM2hK,mBAAmBv8J,EAAEwe,UAAUslC,EAAK,IAC7D,SAAP3nD,EAAgBmgK,EAAa1hK,EACjB,MAAPuB,IAAay4J,EAAWh6J,EAClC,EAEK0hK,GAAc1H,GAAYA,EAASx1I,SAAS,WAAUk9I,EAAa,mBAExE,IAAI1lC,EAAY,IAAI+L,GACpB/L,EAAUx4E,UAAY,IAAa,aAAkBo+G,WACrD5lC,EAAU33E,UAAa5gC,GAAoB,aAAkBo+I,UAAUp+I,GACvEu4G,EAAUx5F,QAAW/B,GAAqB,aAAkBqhI,UAAUrhI,GACtEu7F,EAAUyM,WAAa,KAAc,EACrCzM,EAAUO,aAAe,KAAc,EAEvC,IAyBI3nH,EAzBAgmI,EAAY,IAAIimB,GACpBjmB,EAAUkmB,eAAiB,KAAM,EACjClmB,EAAUgG,gBAAkB,CAACmgB,EAA8Bx2J,KAE1D,IAAI0xH,EAAW,CAAC8lC,EAAqBC,KAEpC,IAAK,IAAIvpJ,KAAQupJ,EAEhB,GAAKvpJ,GAASA,EAAK0zD,OACd,GAAI1zD,EAAK2jH,MAAO2lC,EAAMvpJ,OAAO,IAAI,YAAiBC,SAClD,GAAIA,EAAKikH,QACd,CACC,IAAIA,EAAU,IAAI,QAClBT,EAASS,EAASjkH,EAAKikH,SACvBqlC,EAAMvpJ,OAAO,IAAI,YAAiB,CAAC2zD,MAAO1zD,EAAK0zD,MAAO81F,QAASvlC,IAChE,OAP0BqlC,EAAMvpJ,OAAO,IAAI,YAAiB,CAACxX,KAAM,cAQpE,EAGGk7H,EAAO,IAAI,QACfD,EAASC,EAAM6kC,GAEf7kC,EAAKiqB,MAAM,CAACt9H,QAAQ,KAAAljB,qBAAoB,EAIpC+7J,IAEK9sJ,EAAO,IAAI+pJ,GAAatqE,EAAM2nC,EAAW4e,IAUnDhmI,EAAKmlJ,SAASC,GAEd,GAAAzzJ,YAAYS,GAAG,cAAc,CAACuD,EAAOhG,IAASqQ,EAAKklJ,WAAWv1J,IAC/D,G,CAeO,SAAS21J,GAAcwH,EAAmB1H,EAAkBtsJ,EAAiC,CAAC,GAEpG,IAAInJ,EAAI,iBAA8BmJ,GAClCg0J,IAAYn9J,EAAiB,WAAIm9J,GACjC1H,IAAUz1J,EAAe,SAAIy1J,GACjC,GAAAzzJ,YAAYC,KAAK,aAAcjC,EAChC,CCzGA,IAAI29J,GAAsB,KACtBjX,GAAc,KAEX,MAAMC,GASZ,WAAA/qJ,GAEC,GALO,KAAAgiK,WAAY,EACZ,KAAAC,UAAYF,GAIdlB,KAEA/9J,KAAKm/J,YAETn/J,KAAKm/J,WAAY,KAAA38J,WAAU,eAGxBxC,KAAKm/J,WAER,IAEC,cAAcn/J,KAAKm/J,UAAW,aAAaC,MAC3Cp/J,KAAKk/J,WAAY,CAClB,CACA,MAAO9xI,GAAK,CAEd,CAGO,oBAAOiyI,GAEb,QAASJ,EACV,CACO,oBAAOK,CAAct+J,GAE3Bi+J,GAAej+J,CAChB,CAGO,kBAAOknJ,GAEb,OAAiC,MAA7BloJ,KAAKu/J,uBACJvX,KAAOA,GAAQ,IAAIC,IACjBD,GAAMkX,UACd,CAKO,gBAAavU,CAAUp+G,G,qCAE7BA,EAAMA,EAAI3wB,QACVqwC,GAAQoK,cAAc9pB,GAAK,GAC3B,IAAK,IAAIz8B,EAAI,EAAGA,GAAKy8B,EAAIE,SAAU38B,KAASy8B,EAAI2H,UAAUpkC,GAAK,GAAKy8B,EAAI2H,UAAUpkC,GAAK,IAAGy8B,EAAIyoB,aAAallD,EAAG,GAE9G,IAAI0vJ,EAAS,IAAIv0F,GAAa1+B,GAC9BizH,EAAOn0F,gBAAiB,EACxB,IAAIo0F,EAASD,EAAOh1J,QAEpB,GAAiC,MAA7BxK,KAAKu/J,qBAGR,MAAO,OADWv/J,KAAKu/J,qBAAqBE,EAAQ,sBACrC,MAIhB,GADKzX,KAAOA,GAAQ,IAAIC,KACnBD,GAAMkX,UAAW,KAAM,qCAE5B,MAAMQ,EAAO,EAAQ,KAErB,IAAI3J,EAAM/N,GAAMmX,UAAUl5I,QAAQ,KAAM,OAEpC05I,EADSD,EAAKE,UAAU7J,EAAK,CAAC,SAAU,WAAY,YAAa,QAAS,CAAC/qJ,MAAOy0J,IACrEI,OAAOnsJ,WAAYmgC,EAAO8rH,EAAIh/H,MAAM,MAErD,GAAIkT,EAAKj1C,OAAS,IAAMi1C,EAAK,GAAGnzB,WAAW,UAK1C,MAHAjZ,QAAQw3I,IAAI,mCAAqC0gB,GACjDl4J,QAAQw3I,IAAI,cAAgB1yG,GAC5B9kC,QAAQw3I,IAAI,iBAAmBwgB,GACzB,wCAA0CE,EAEjD,OAAO9rH,CACR,E,gSA/Ec,GAAA0rH,qBAA0E,KCTlF,MAAMO,GAMZ,WAAA5iK,CAAY+nE,GAJJ,KAAAA,SAAqB,GAMxBA,IAAUjlE,KAAKilE,SAAWA,EAASh2D,MAAM,GAC9C,CAEA,SAAWsL,GAEV,OAAOva,KAAKilE,SAASrmE,MACtB,CACO,UAAA+zJ,CAAW98I,GAEjB,OAAO7V,KAAKilE,SAASpvD,GAAK+F,OAC3B,CACO,gBAAAmkJ,CAAiBlqJ,GAEvB,OAAO7V,KAAKilE,SAASpvD,EACtB,CACO,UAAA+8I,CAAW/8I,EAAYw+E,GAE7Br0F,KAAKilE,SAASpvD,GAAOw+E,EAAQz4E,OAC9B,CACO,gBAAAokJ,CAAiBnqJ,EAAYw+E,GAEnCr0F,KAAKilE,SAASpvD,GAAOw+E,CACtB,CACO,aAAA4rE,CAAcpqJ,GAEpB7V,KAAKilE,SAAS33D,OAAOuI,EAAK,EAC3B,CACO,aAAAqqJ,CAAc7rE,GAGpB,OADAr0F,KAAKilE,SAASzoE,KAAK63F,EAAQz4E,SACpB5b,KAAKilE,SAASrmE,OAAS,CAC/B,CACO,mBAAAuhK,CAAoB9rE,GAG1B,OADAr0F,KAAKilE,SAASzoE,KAAK63F,GACZr0F,KAAKilE,SAASrmE,OAAS,CAC/B,CACO,gBAAAwhK,CAAiBC,GAEvBrgK,KAAKilE,SAAWjlE,KAAKilE,SAAS5oE,OAAOgkK,EAAWp7F,SACjD,CACO,aAAAq7F,CAAczqJ,EAAYw+E,GAEhCr0F,KAAKilE,SAAS33D,OAAOuI,EAAK,EAAGw+E,EAAQz4E,QACtC,CACO,YAAA2kJ,CAAanrJ,EAAaC,GAEhC,IAAKmrJ,EAAIC,GAAM,CAACzgK,KAAKilE,SAAS7vD,GAAOpV,KAAKilE,SAAS5vD,IACnDrV,KAAKilE,SAAS7vD,GAAQqrJ,EACtBzgK,KAAKilE,SAAS5vD,GAAQmrJ,CACvB,CAGO,kBAAOz4H,CAAYr+B,GAEzB,IAAI+a,EAAO7G,KAAKqf,MAAMvzB,GACtB,IAAKpK,MAAMC,QAAQklB,GAAO,KAAM,qCAChC,IAAIwgD,EAAqB,GACzB,IAAK,IAAI99B,KAAW1iB,EAAMwgD,EAASzoE,KAAK,IAAI0qC,GAAQC,IACpD,OAAO,IAAI24H,GAAkB76F,EAC9B,CAIO,SAAAj9B,CAAUC,GAEhB,IAAIxjB,EAAiB,GACrB,IAAK,IAAI4vE,KAAWr0F,KAAKilE,SAAUxgD,EAAKjoB,KAAK63F,EAAQltD,SAErD,OAAIc,GAAYxjB,EAAK7lB,QAAU,IAAYsoC,GAAQe,SAASxjB,GAGrD,UADKA,EAAKpmB,KAAK8oC,GAAYvpB,KAAKC,UAAUspB,KACxBrpB,KAAK,WAAa,OAC5C,EC7EM,MAAM4iJ,GAEZ,WAAAxjK,CAAoByjK,EAAyBC,GAAzB,KAAAD,SAAAA,EAAyB,KAAAC,WAAAA,CAE7C,CAEa,IAAA5/J,G,qCAEZ,IAAI68B,EACJ,IAAKA,EAAU,gBAAgB79B,KAAK2gK,UAAUjtJ,UAAW,CACzD,MAAO0Z,GAAK,KAAM,uBAAyBptB,KAAK2gK,SAAW,KAAOvzI,CAAG,CAErE,IAAIyzI,EAAUf,GAAkB/3H,YAAYlK,GAC5C,GAAqB,GAAjBgjI,EAAQtmJ,MAAY,KAAM,oBAE9B,IAAIumJ,EAAU58F,GAAqBz8D,QAAQw3I,IAAI/6E,GAC3Ct4D,EAAQwkE,IAAqBr0E,QAAQ8jK,OAAOr1J,MAAM4lE,EAAI,EAE1D0wF,EAAO,UACPA,EAAO,WACPA,EAAO,sCACPA,EAAO,iDACPA,EAAO,wCACPA,EAAO,2CACPA,EAAO,2CACPA,EAAO,+CACPA,EAAO,YAEPA,EAAO,iBAEP,IAAIx2H,EAASV,GAAaY,qBAAqB,IAC3C4yC,EAAU,IAAIonD,GAAmB,EAAG,EAAGl6F,EAAO5gC,KAAKmgC,YAEvD,IAAK,IAAI/5B,EAAI,EAAGA,EAAI+wJ,EAAQtmJ,MAAOzK,IACnC,CACC,IAAIukF,EAAUwsE,EAAQd,iBAAiBjwJ,GAEvCgxJ,EAAO,QACPA,EAAO,OAAOhxJ,EAAI,UAElB,IAAI0iF,EAAS,IAAI4B,GAAeC,EAASjX,EAAS9yC,GAClDkoD,EAAOpU,UAEP,IAAI8qD,EAAM,IAAIlvC,GASd,GARW,IAAI62D,GAAYr+D,EAAQ02C,GAC9BxnC,OACLwnC,EAAI/2G,YAEJ2uI,EAAO,QACPA,EAAO53B,EAAI/pC,aACX2hE,EAAO,SAEH9gK,KAAK4gK,WACT,CACC,IAAIrD,EAAQ,IAAI5F,GAAatjE,EAAQltD,eAC/Bo2H,EAAMzF,YACZyF,EAAMvF,YAINpsJ,EAAK,aACL,IAAIgsJ,EAAS2F,EAAMxxF,YAAa8rF,EAAU0F,EAAMxE,aAChD,IAAK,IAAIjpJ,EAAI,EAAGA,EAAI8nJ,EAAOh5J,OAAQkR,IAElClE,EAAK,SACDisJ,EAAQ/nJ,IAAM4nJ,GAAce,OAAQ7sJ,EAAK,mBACpCisJ,EAAQ/nJ,IAAM4nJ,GAAcgB,UAAW9sJ,EAAK,sBAC5CisJ,EAAQ/nJ,IAAM4nJ,GAAckB,UAAWhtJ,EAAK,sBAC5CisJ,EAAQ/nJ,IAAM4nJ,GAAcoB,eAAeltJ,EAAK,0BACzDA,EAAK,IAAMma,EAAW6xI,EAAO9nJ,IAAM,WAEpCgxJ,EAAO,cACR,CAEAA,EAAO,QACR,CAEAA,EAAO,yBACR,E,gSCvGD,MAAMC,GACF,WAAA7jK,CAAYy0E,EAAMzH,EAAI82F,GAClBhhK,KAAK2xE,KAAOA,EACZ3xE,KAAKghK,aAAc,EACnBhhK,KAAKkqE,GAAKA,GAAU,IAAI/rB,GACL,MAAf6iH,IACAhhK,KAAKghK,YAAcA,EAC3B,CACA,gBAAAC,CAAiBnhH,GAAW,OAAO,CAAO,CAC1C,kBAAAohH,CAAmBC,GACf,IAAIC,EAAU,EAAIvqJ,cAAa,EAAOsqJ,EAASviK,QAC/C,IAAK,IAAIkR,EAAI,EAAGA,EAAIqxJ,EAASviK,OAAQkR,IACjCsxJ,EAAQtxJ,GAAK9P,KAAKihK,iBAAiBE,EAASrxJ,IAChD,OAAOsxJ,CACX,CACA,aAAAC,CAAc1jJ,GAAO,OAAO,CAAM,CAClC,aAAA2jJ,CAAc3jJ,GAAO,OAAO,CAAG,CAC/B,WAAA4jJ,CAAYhqI,GAAS,CACrB,cAAAiqI,CAAe7jJ,GAAO,CACtB,sBAAA8jJ,CAAuB9jJ,GAAO,MAAO,EAAI,CACzC,iBAAA+jJ,CAAkB/jJ,GAAO,OAAO,CAAG,CACnC,oBAAAgkJ,CAAqBhkJ,EAAK9H,GAAO,OAAO,IAAM,CAC9C,oBAAA+rJ,CAAqBjkJ,GAAO,OAAO,CAAG,CACtC,uBAAAkkJ,CAAwBlkJ,EAAK9H,EAAKy0B,GAAU,OAAO,IAAM,CACzD,mBAAAw3H,GAAwB,OAAO,CAAG,CAClC,sBAAAC,CAAuBlsJ,GAAO,OAAO,IAAM,EAE/CkrJ,GAAOiB,WAAa,EACpBjB,GAAOkB,UAAY,EACnBlB,GAAOmB,UAAY,EC/BnB,IAAIC,GAAmB,CAAC,EACjB,SAASC,GAAeC,GAC3B,IAAI1wF,EAAO0wF,EAASC,KAAMxmK,EAAOumK,EAASE,KAC1CJ,GAAiBxwF,GAAQ,CAAEA,OAAM71E,OAAMumK,WAC3C,CCDO,MAAMG,GACT,WAAAtlK,GACI8C,KAAKyiK,SAAW,CAAC,EACjBziK,KAAK0iK,WAAa,GAClB1iK,KAAK2iK,UAAY,GACjB3iK,KAAK4iK,aAAe,GACpB5iK,KAAK6iK,YAAc,GACnB7iK,KAAK8iK,eAAiB,GACtB9iK,KAAK+iK,cAAgB,GACrB/iK,KAAKgjK,SAAW,GAChBhjK,KAAKijK,QAAU,GACfjjK,KAAKkjK,cAAgB,GACrBljK,KAAKmjK,aAAe,GACpBnjK,KAAKojK,iBAAmB,GACxBpjK,KAAKqjK,WAAa,GAClBrjK,KAAKsjK,UAAY,GACjBtjK,KAAKujK,cAAgB,GACrBvjK,KAAKwjK,aAAe,GACpBxjK,KAAKyjK,YAAc,GACnBzjK,KAAK0jK,gBAAkB,GACvB1jK,KAAK2jK,eAAiB,GACtB3jK,KAAK4jK,UAAY,GACjB5jK,KAAK6jK,SAAW,EACpB,EAEJ,MAAMC,WAAwB/C,GAC1B,wBAAOgD,CAAkB75F,GACrB,IAAK,IAAIp6D,EAAI,EAAGA,EAAIo6D,EAAG9qB,cAAetvC,IAClC,GAAIo6D,EAAG5qB,WAAWxvC,IAAMg0J,GAAgBxB,KACpC,OAAO,EACf,OAAO,CACX,CACA,WAAAplK,CAAYgtE,EAAI82F,GACZt2J,MAAMo5J,GAAgBxB,KAAMp4F,EAAI82F,GAChChhK,KAAK64I,OACT,CACA,SAAAmrB,GACI,IAAK,IAAIl0J,EAAI,EAAGA,EAAI9P,KAAKkqE,GAAG9qB,cAAetvC,IACvC,GAAI9P,KAAKkqE,GAAG5qB,WAAWxvC,IAAMg0J,GAAgBxB,KACzC,OAAOtiK,KAAKikK,cAAcjkK,KAAKkqE,GAAG3qB,WAAWzvC,IACrD,OAAO,IACX,CACA,SAAAo0J,CAAUv6F,GACN,IAAI9rC,EAAU79B,KAAKmkK,eAAex6F,GAClC,IAAK,IAAI75D,EAAI,EAAGA,EAAI9P,KAAKkqE,GAAG9qB,cAAetvC,IACvC,GAAI9P,KAAKkqE,GAAG5qB,WAAWxvC,IAAMg0J,GAAgBxB,KAEzC,YADAtiK,KAAKkqE,GAAGxqB,WAAW5vC,EAAG+tB,GAG9B79B,KAAKkqE,GAAGvqB,gBAAgBmkH,GAAgBvB,KAAMuB,GAAgBxB,KAAMzkI,EACxE,CACA,WAAAyiB,CAAY3iC,GACR,IAAI8D,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBM,kBAChD,OAAO3iJ,EAAM,EAAI,KAAOzhB,KAAKkqE,GAAG5pB,YAAY3iC,EAAK8D,EACrD,CACA,OAAAorI,CAAQlvI,GACJ,IAAI8D,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBO,cAChD,OAAO5iJ,EAAM,EAAI,KAAOzhB,KAAKkqE,GAAG3pB,UAAU5iC,EAAK8D,EACnD,CACA,QAAAke,CAAShiB,GACL,IAAI8D,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBQ,eAChD,OAAO7iJ,EAAM,EAAI,KAAOzhB,KAAKkqE,GAAGhqB,OAAOviC,EAAK8D,GAAOlkB,OAAO8uF,IAAMrsF,KAAKkqE,GAAGnpB,QAAQpjC,EAAK8D,EACzF,CACA,QAAA8iJ,CAAS5mJ,GACL,IAAI8D,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBU,eAChD,GAAI/iJ,EAAM,EACN,OAAO,KACX,GAAIzhB,KAAKkqE,GAAGhqB,OAAOviC,EAAK8D,GACpB,OAAOlkB,OAAO8uF,IAClB,IAAI2+D,EAAMhrJ,KAAKkqE,GAAGnpB,QAAQpjC,EAAK8D,GAC/B,OAAIupI,GAAO,EACAztJ,OAAO8uF,IACX2+D,CACX,CACA,QAAA7iG,CAASxqC,GACL,IAAI8D,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBW,eAChD,OAAOhjJ,EAAM,EAAI,KAAOzhB,KAAKkqE,GAAG3pB,UAAU5iC,EAAK8D,EACnD,CACA,WAAAijJ,CAAY/mJ,GACR,IAAI8D,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBa,kBAChD,OAAOljJ,EAAM,EAAI,KAAOzhB,KAAKkqE,GAAG3pB,UAAU5iC,EAAK8D,EACnD,CACA,YAAAmjJ,CAAajnJ,GACT,IAAI8D,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBe,mBAChD,OAAOpjJ,EAAM,EAAI,KAAOzhB,KAAKkqE,GAAG3pB,UAAU5iC,EAAK8D,EACnD,CACA,WAAA0/B,CAAYxjC,EAAKhJ,GACb,IAAI8M,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBM,kBAC5C3iJ,GAAO,GACPzhB,KAAKkqE,GAAG/oB,YAAYxjC,EAAK8D,EAAK9M,EACtC,CACA,OAAAmwJ,CAAQnnJ,EAAKhJ,GACT,IAAI8M,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBO,cAC5C5iJ,GAAO,GACPzhB,KAAKkqE,GAAG9oB,UAAUzjC,EAAK8D,EAAK9M,EACpC,CACA,QAAAirB,CAASjiB,EAAKhJ,GACV,IAAI8M,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBQ,eAC5C7iJ,EAAM,IACDlkB,OAAOqjB,MAAMjM,GAClB3U,KAAKkqE,GAAGjpB,UAAUtjC,EAAK8D,GAEvBzhB,KAAKkqE,GAAG5oB,QAAQ3jC,EAAK8D,EAAK9M,GAClC,CACA,QAAAowJ,CAASpnJ,EAAKhJ,GACV,IAAI8M,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBU,eAC5C/iJ,EAAM,IACDlkB,OAAOqjB,MAAMjM,GAClB3U,KAAKkqE,GAAGjpB,UAAUtjC,EAAK8D,GAEvBzhB,KAAKkqE,GAAG5oB,QAAQ3jC,EAAK8D,EAAK9M,GAClC,CACA,QAAAqwJ,CAASrnJ,EAAKhJ,GACV,IAAI8M,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBW,eAC5ChjJ,GAAO,GACPzhB,KAAKkqE,GAAG9oB,UAAUzjC,EAAK8D,EAAK9M,EACpC,CACA,WAAAswJ,CAAYtnJ,EAAKhJ,GACb,IAAI8M,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBa,kBAC5CljJ,GAAO,GACPzhB,KAAKkqE,GAAG9oB,UAAUzjC,EAAK8D,EAAK9M,EACpC,CACA,YAAAuwJ,CAAavnJ,EAAKhJ,GACd,IAAI8M,EAAMzhB,KAAKkqE,GAAG/pB,cAAc2jH,GAAgBe,mBAC5CpjJ,GAAO,GACPzhB,KAAKkqE,GAAG9oB,UAAUzjC,EAAK8D,EAAK9M,EACpC,CACA,KAAAkkI,GACI74I,KAAKmlK,iBACT,CACA,eAAAA,GACI,IAAIx7F,EAAS,IAAI64F,GACb10G,GAAM,EACV,IAAK,IAAIh+C,EAAI,EAAGA,EAAI9P,KAAKkqE,GAAG9qB,cAAetvC,IACvC,GAAI9P,KAAKkqE,GAAG5qB,WAAWxvC,IAAMg0J,GAAgBxB,KAAM,CAC/C34F,EAAS3pE,KAAKikK,cAAcjkK,KAAKkqE,GAAG3qB,WAAWzvC,IAC/Cg+C,GAAM,EACN,KACJ,CAUJ,GATI9tD,KAAKghK,cACLhhK,KAAKkqE,GAAG3nB,aAAauhH,GAAgBM,iBAAkB,WAAY,kDACnEpkK,KAAKkqE,GAAG3nB,aAAauhH,GAAgBO,aAAc,SAAU,oBAC7DrkK,KAAKkqE,GAAG3nB,aAAauhH,GAAgBQ,cAAe,OAAQ,kBAC5DtkK,KAAKkqE,GAAG3nB,aAAauhH,GAAgBU,cAAe,OAAQ,qCAC5DxkK,KAAKkqE,GAAG3nB,aAAauhH,GAAgBW,cAAe,SAAU,wBAC9DzkK,KAAKkqE,GAAG3nB,aAAauhH,GAAgBa,iBAAkB,SAAU,oCACjE3kK,KAAKkqE,GAAG3nB,aAAauhH,GAAgBe,kBAAmB,SAAU,gDAEjE/2G,GAAO9tD,KAAKghK,YAAa,CAC1B,IAAInjI,EAAU79B,KAAKmkK,eAAex6F,GAClC3pE,KAAKkqE,GAAGvqB,gBAAgBmkH,GAAgBvB,KAAMuB,GAAgBxB,KAAMzkI,EACxE,CACJ,CACA,aAAAomI,CAAcpmI,GACV,IAAI8rC,EAAS,IAAI64F,GACjB,IAAK,IAAIt+F,KAAQrmC,EAAQ8C,MAAM,SAAU,CACrC,IAAIslB,EAAKie,EAAK1pD,QAAQ,KAClByrC,EAAK,IAELie,EAAKxjD,WAAW,QAChBipD,EAAO84F,SAAS7xF,GAAeM,WAAWhN,EAAKvjD,UAAU,EAAGslC,KAAQ2qB,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC7Gie,EAAKxjD,WAAW,eACrBipD,EAAO+4F,WAAa9xF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC7Die,EAAKxjD,WAAW,cACrBipD,EAAOg5F,UAAY/xF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC5Die,EAAKxjD,WAAW,iBACrBipD,EAAOi5F,aAAehyF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC/Die,EAAKxjD,WAAW,gBACrBipD,EAAOk5F,YAAcjyF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC9Die,EAAKxjD,WAAW,mBACrBipD,EAAOm5F,eAAiBlyF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IACjEie,EAAKxjD,WAAW,kBACrBipD,EAAOo5F,cAAgBnyF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAChEie,EAAKxjD,WAAW,aACrBipD,EAAOq5F,SAAWpyF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC3Die,EAAKxjD,WAAW,YACrBipD,EAAOs5F,QAAUryF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC1Die,EAAKxjD,WAAW,kBACrBipD,EAAOu5F,cAAgBtyF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAChEie,EAAKxjD,WAAW,iBACrBipD,EAAOw5F,aAAevyF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC/Die,EAAKxjD,WAAW,qBACrBipD,EAAOy5F,iBAAmBxyF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IACnEie,EAAKxjD,WAAW,eACrBipD,EAAO05F,WAAazyF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC7Die,EAAKxjD,WAAW,cACrBipD,EAAO25F,UAAY1yF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC5Die,EAAKxjD,WAAW,kBACrBipD,EAAO45F,cAAgB3yF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAChEie,EAAKxjD,WAAW,iBACrBipD,EAAO65F,aAAe5yF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC/Die,EAAKxjD,WAAW,gBACrBipD,EAAO85F,YAAc7yF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAC9Die,EAAKxjD,WAAW,oBACrBipD,EAAO+5F,gBAAkB9yF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IAClEie,EAAKxjD,WAAW,mBACrBipD,EAAOg6F,eAAiB/yF,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,IACjEie,EAAKxjD,WAAW,WACrBipD,EAAOi6F,UAAUpnK,KAAKo0E,GAAeM,WAAWhN,EAAKvjD,UAAU,EAAGslC,KAClE0jB,EAAOk6F,SAASrnK,KAAKo0E,GAAeM,WAAWhN,EAAKvjD,UAAUslC,EAAK,MAE3E,CACA,OAAO0jB,CACX,CACA,cAAAw6F,CAAex6F,GACX,IAAI9rC,EAAU,GACd,IAAK,IAAI2qB,KAAOmhB,EAAO84F,SACnB5kI,GAAW,OAAS+yC,GAAeY,SAAShpB,GAAO,IAAMooB,GAAeY,SAAS7H,EAAO84F,SAASj6G,IAAQ,KAC7G3qB,GAAW,cAAgB+yC,GAAeY,SAAS7H,EAAO+4F,YAAc,KACxE7kI,GAAW,aAAe+yC,GAAeY,SAAS7H,EAAOg5F,WAAa,KACtE9kI,GAAW,gBAAkB+yC,GAAeY,SAAS7H,EAAOi5F,cAAgB,KAC5E/kI,GAAW,eAAiB+yC,GAAeY,SAAS7H,EAAOk5F,aAAe,KAC1EhlI,GAAW,kBAAoB+yC,GAAeY,SAAS7H,EAAOm5F,gBAAkB,KAChFjlI,GAAW,iBAAmB+yC,GAAeY,SAAS7H,EAAOo5F,eAAiB,KAC9EllI,GAAW,YAAc+yC,GAAeY,SAAS7H,EAAOq5F,UAAY,KACpEnlI,GAAW,WAAa+yC,GAAeY,SAAS7H,EAAOs5F,SAAW,KAClEplI,GAAW,iBAAmB+yC,GAAeY,SAAS7H,EAAOu5F,eAAiB,KAC9ErlI,GAAW,gBAAkB+yC,GAAeY,SAAS7H,EAAOw5F,cAAgB,KAC5EtlI,GAAW,oBAAsB+yC,GAAeY,SAAS7H,EAAOy5F,kBAAoB,KACpFvlI,GAAW,cAAgB+yC,GAAeY,SAAS7H,EAAO05F,YAAc,KACxExlI,GAAW,aAAe+yC,GAAeY,SAAS7H,EAAO25F,WAAa,KACtEzlI,GAAW,iBAAmB+yC,GAAeY,SAAS7H,EAAO45F,eAAiB,KAC9E1lI,GAAW,gBAAkB+yC,GAAeY,SAAS7H,EAAO65F,cAAgB,KAC5E3lI,GAAW,eAAiB+yC,GAAeY,SAAS7H,EAAO85F,aAAe,KAC1E5lI,GAAW,mBAAqB+yC,GAAeY,SAAS7H,EAAO+5F,iBAAmB,KAClF7lI,GAAW,kBAAoB+yC,GAAeY,SAAS7H,EAAOg6F,gBAAkB,KAChF,IAAK,IAAI7zJ,EAAI,EAAG6/B,EAAMh5B,KAAKW,IAAIqyD,EAAOi6F,UAAUhlK,OAAQ+qE,EAAOk6F,SAASjlK,QAASkR,EAAI6/B,EAAK7/B,IACtF+tB,GAAW,QAAU+yC,GAAeY,SAAS7H,EAAOi6F,UAAU9zJ,IAAM,IAAM8gE,GAAeY,SAAS7H,EAAOk6F,SAAS/zJ,IAAM,KAC5H,OAAO+tB,CACX,CACA,YAAAunI,GAAiB,OAAOtB,GAAgBvB,IAAM,CAC9C,gBAAAtB,CAAiBnhH,GACb,OAAOA,GAAWgkH,GAAgBQ,eAAiBxkH,GAAWgkH,GAAgBU,eAC1E1kH,GAAWgkH,GAAgBW,eAAiB3kH,GAAWgkH,GAAgBa,kBACvE7kH,GAAWgkH,GAAgBe,iBACnC,CACA,iBAAAnD,CAAkB/jJ,GAAO,OAAO,CAAG,CACnC,oBAAAgkJ,CAAqBhkJ,EAAK9H,GACtB,IAAI8zD,EAAS3pE,KAAKgkK,YAClB,GAAW,GAAPnuJ,EAAU,CACV,IAAIyvC,EAAK,CACLxpD,KAAM,WACNmkD,MAAO,+CACPj6B,KAAM,GACNjoB,KAAMgjK,GAAOiB,YAEbjlK,EAAMiD,KAAK2/B,SAAShiB,GAAMjW,EAAQ1H,KAAKukK,SAAS5mJ,GAChDmqC,EAAQ9nD,KAAKmoD,SAASxqC,GAAMo4E,EAAM/1F,KAAK0kK,YAAY/mJ,GAWvD,OAVA2nC,EAAGt/B,KAAO,GACLzoB,OAAOqjB,MAAM7jB,KACVg5F,IACAzwC,EAAGt/B,MAAQ+vE,EAAM,KACrBzwC,EAAGt/B,MAAQjpB,EACNQ,OAAOqjB,MAAMlZ,KACd49C,EAAGt/B,MAAQ,MAAete,GAC1BogD,IACAxC,EAAGt/B,MAAQ,IAAM8hC,IAElBxC,CACX,CACK,GAAW,GAAPzvC,EAAU,CACf,IAAIyvC,EAAK,CACLxpD,KAAM,SACNmkD,MAAO,mDACPj6B,KAAM,GACNjoB,KAAMgjK,GAAOkB,WAEb77I,EAAMpmB,KAAK4kK,aAAajnJ,GAC5B,IAAK,IAAI6qC,KAAOmhB,EAAO84F,SACnB,GAAIr8I,EAAI1F,WAAW8nC,EAAM,KAAM,CAC3BpiC,EAAMujD,EAAO84F,SAASj6G,GAAOpiC,EAAIzF,UAAU6nC,EAAI5pD,OAAS,GACxD,KACJ,CAEJ,OADA0mD,EAAGt/B,KAAOI,EACHk/B,CACX,CACA,OAAO,IACX,EAEJw+G,GAAgBxB,KAAO,iCACvBwB,GAAgBvB,KAAO,mBACvBuB,GAAgBM,iBAAmB,WACnCN,GAAgBO,aAAe,OAC/BP,GAAgBQ,cAAgB,QAChCR,GAAgBU,cAAgB,QAChCV,GAAgBW,cAAgB,QAChCX,GAAgBa,iBAAmB,WACnCb,GAAgBe,kBAAoB,YACpCf,GAAgBuB,WAAa,4CAC7BvB,GAAgBwB,YAAc,4CAC9BxB,GAAgByB,YAAc,4CAC9BzB,GAAgB0B,YAAc,4CAC9B1B,GAAgB2B,YAAc,4CAC9B3B,GAAgB4B,cAAgB,kDAChC5B,GAAgB6B,cAAgB,kDAChC7B,GAAgB8B,YAAc,4CAC9B9B,GAAgB+B,aAAe,4CAC/B/B,GAAgBgC,aAAe,4CAC/BhC,GAAgBiC,gBAAkB,kDAElC3D,GAAe0B,IC3Sf,MAAMkC,WAAwBjF,GAC1B,wBAAOkF,CAAkB/7F,GACrB,IAAK,IAAIp6D,EAAI,EAAGA,EAAIo6D,EAAG9qB,cAAetvC,IAClC,GAAIo6D,EAAG5qB,WAAWxvC,IAAMk2J,GAAgB1D,KACpC,OAAO,EACf,OAAO,CACX,CACA,WAAAplK,CAAYgtE,EAAI82F,GACZt2J,MAAMs7J,GAAgB1D,KAAMp4F,EAAI82F,GAChChhK,KAAK2pE,OAAS,CAAE7hB,MAAO,GAAIw/E,OAAQ,IACnCtnI,KAAK64I,OACT,CACA,SAAAmrB,GACI,OAAOhkK,KAAK2pE,MAChB,CACA,SAAAu6F,CAAUv6F,GACN3pE,KAAK2pE,OAASA,EACd,IAAI9rC,EAAU79B,KAAKmkK,eAAex6F,GAClC,IAAK,IAAI75D,EAAI,EAAGA,EAAI9P,KAAKkqE,GAAG9qB,cAAetvC,IACvC,GAAI9P,KAAKkqE,GAAG5qB,WAAWxvC,IAAMk2J,GAAgB1D,KAEzC,YADAtiK,KAAKkqE,GAAGxqB,WAAW5vC,EAAG+tB,GAG9B79B,KAAKkqE,GAAGvqB,gBAAgBqmH,GAAgBzD,KAAMyD,GAAgB1D,KAAMzkI,EACxE,CACA,YAAAqoI,CAAav8F,GACT3pE,KAAKkkK,UAAUv6F,GACf3pE,KAAKmmK,cACT,CACA,MAAAC,CAAOC,EAAQC,GACX,IAAIC,EAAUvmK,KAAK2pE,OAAO29D,OAAO++B,GAAQvqK,KACzC,GAAIyqK,GAAWD,EAAf,CAEAtmK,KAAK2pE,OAAO29D,OAAO++B,GAAQvqK,KAAOwqK,EAClCtmK,KAAKkkK,UAAUlkK,KAAK2pE,QACpB,IAAK,IAAIu1E,IAAO,CAAC8mB,GAAgBQ,aAAcR,GAAgBS,aAAcT,GAAgBU,aAAcV,GAAgBW,YAAa,CACpI,IAAIllJ,EAAMzhB,KAAKkqE,GAAG/pB,cAAcomH,EAAUrnB,GACtCz9H,GAAO,GACPzhB,KAAKkqE,GAAGjoB,iBAAiBxgC,EAAK6kJ,EAAUpnB,EAAKl/I,KAAKkqE,GAAGlqB,SAASv+B,GACtE,CAPU,CAQd,CACA,eAAAmlJ,CAAgBP,GACZ,IAAIQ,EAAY7mK,KAAK2pE,OAAO29D,OAAO++B,GAAQvqK,KAC3C,MAAO,CAAC+qK,EAAYb,GAAgBQ,aAAcK,EAAYb,GAAgBS,aAC1EI,EAAYb,GAAgBU,aAAcG,EAAYb,GAAgBW,WAC9E,CACA,QAAAhnI,CAAShiB,EAAK0oJ,GACV,OAAOrmK,KAAK8mK,cAAcnpJ,EAAK3d,KAAK2pE,OAAO29D,OAAO++B,GACtD,CACA,aAAAS,CAAcnpJ,EAAKgqH,GACf,IAAI/rI,EAAQ,CAAEA,MAAO2B,OAAO8uF,IAAK3kF,MAAOnK,OAAO8uF,IAAKvkC,MAAO,GAAIuhB,IAAK,IAChE09F,EAAW/mK,KAAKkqE,GAAG/pB,cAAcwnF,EAAM7rI,KAAOkqK,GAAgBQ,aAAc,QAC5EQ,EAAWhnK,KAAKkqE,GAAG/pB,cAAcwnF,EAAM7rI,KAAOkqK,GAAgBS,aAAc,QAC5EQ,EAAWjnK,KAAKkqE,GAAG/pB,cAAcwnF,EAAM7rI,KAAOkqK,GAAgBU,aAAc,UAC5EQ,EAASlnK,KAAKkqE,GAAG/pB,cAAcwnF,EAAM7rI,KAAOkqK,GAAgBW,WAAY,UAS5E,OARII,GAAY,GAAK/mK,KAAKkqE,GAAG9pB,QAAQziC,EAAKopJ,KACtCnrK,EAAMA,MAAQoE,KAAKkqE,GAAGnpB,QAAQpjC,EAAKopJ,IACnCC,GAAY,GAAKhnK,KAAKkqE,GAAG9pB,QAAQziC,EAAKqpJ,KACtCprK,EAAM8L,MAAQ1H,KAAKkqE,GAAGnpB,QAAQpjC,EAAKqpJ,IACnCC,GAAY,IACZrrK,EAAMksD,MAAQ9nD,KAAKkqE,GAAG3pB,UAAU5iC,EAAKspJ,IACrCC,GAAU,IACVtrK,EAAMytE,IAAMrpE,KAAKkqE,GAAG3pB,UAAU5iC,EAAKupJ,IAChCtrK,CACX,CACA,QAAAgkC,CAASjiB,EAAK0oJ,EAAQzqK,GAClB,IAAIirK,EAAY7mK,KAAK2pE,OAAO29D,OAAO++B,GAAQvqK,KACvCirK,EAAW/mK,KAAKkqE,GAAG/pB,cAAc0mH,EAAYb,GAAgBQ,aAAc,QAC3EQ,EAAWhnK,KAAKkqE,GAAG/pB,cAAc0mH,EAAYb,GAAgBS,aAAc,QAC3EQ,EAAWjnK,KAAKkqE,GAAG/pB,cAAc0mH,EAAYb,GAAgBU,aAAc,UAC3EQ,EAASlnK,KAAKkqE,GAAG/pB,cAAc0mH,EAAYb,GAAgBW,WAAY,UACvEI,GAAY,IACRnmJ,MAAMhlB,EAAMA,OACZoE,KAAKkqE,GAAGjpB,UAAUtjC,EAAKopJ,GAEvB/mK,KAAKkqE,GAAG5oB,QAAQ3jC,EAAKopJ,EAAUnrK,EAAMA,QACzCorK,GAAY,IACRpmJ,MAAMhlB,EAAM8L,OACZ1H,KAAKkqE,GAAGjpB,UAAUtjC,EAAKqpJ,GAEvBhnK,KAAKkqE,GAAG5oB,QAAQ3jC,EAAKqpJ,EAAUprK,EAAM8L,QACzCu/J,GAAY,GACZjnK,KAAKkqE,GAAG9oB,UAAUzjC,EAAKspJ,EAAUrrK,EAAMksD,OACvCo/G,GAAU,GACVlnK,KAAKkqE,GAAG9oB,UAAUzjC,EAAKupJ,EAAQtrK,EAAMytE,IAC7C,CACA,UAAA89F,CAAWxpJ,EAAK0oJ,GACZ,IAAIQ,EAAY7mK,KAAK2pE,OAAO29D,OAAO++B,GAAQvqK,KACvCirK,EAAW/mK,KAAKkqE,GAAG/pB,cAAc0mH,EAAYb,GAAgBQ,aAAc,QAC3EQ,EAAWhnK,KAAKkqE,GAAG/pB,cAAc0mH,EAAYb,GAAgBS,aAAc,QAC3EQ,EAAWjnK,KAAKkqE,GAAG/pB,cAAc0mH,EAAYb,GAAgBU,aAAc,UAC3EQ,EAASlnK,KAAKkqE,GAAG/pB,cAAc0mH,EAAYb,GAAgBW,WAAY,UACvEI,GAAY,GACZ/mK,KAAKkqE,GAAGjpB,UAAUtjC,EAAKopJ,GACvBC,GAAY,GACZhnK,KAAKkqE,GAAGjpB,UAAUtjC,EAAKqpJ,GACvBC,GAAY,GACZjnK,KAAKkqE,GAAGjpB,UAAUtjC,EAAKspJ,GACvBC,GAAU,GACVlnK,KAAKkqE,GAAGjpB,UAAUtjC,EAAKupJ,EAC/B,CACA,QAAAE,CAASzpJ,EAAK0oJ,GACV,IAAI5kJ,EAAMzhB,KAAKkqE,GAAG/pB,cAAcngD,KAAK2pE,OAAO29D,OAAO++B,GAAQvqK,MAC3D,OAAO2lB,EAAM,EAAI,GAAKzhB,KAAKkqE,GAAGlqB,SAASv+B,EAC3C,CACA,QAAA4lJ,CAAS1pJ,EAAK0oJ,EAAQpmH,GAClB,IAAIx+B,EAAMzhB,KAAKkqE,GAAG/pB,cAAcngD,KAAK2pE,OAAO29D,OAAO++B,GAAQvqK,MACvD2lB,GAAO,GACPzhB,KAAKkqE,GAAGjoB,iBAAiBxgC,EAAKzhB,KAAKkqE,GAAGpqB,QAAQr+B,GAAMw+B,EAC5D,CACA,KAAA44F,GACI74I,KAAKmlK,iBACT,CACA,eAAAA,GACInlK,KAAK2pE,OAAS,CAAE7hB,MAAO,GAAIw/E,OAAQ,IACnC,IAAIx5E,GAAM,EACV,IAAK,IAAIh+C,EAAI,EAAGA,EAAI9P,KAAKkqE,GAAG9qB,cAAetvC,IACvC,GAAI9P,KAAKkqE,GAAG5qB,WAAWxvC,IAAMk2J,GAAgB1D,KAAM,CAC/CtiK,KAAK2pE,OAAS3pE,KAAKikK,cAAcjkK,KAAKkqE,GAAG3qB,WAAWzvC,IACpDg+C,GAAM,EACN,KACJ,CAEJ,GADA9tD,KAAKmmK,gBACAr4G,GAAO9tD,KAAKghK,YAAa,CAC1B,IAAInjI,EAAU79B,KAAKmkK,eAAenkK,KAAK2pE,QACvC3pE,KAAKkqE,GAAGvqB,gBAAgBqmH,GAAgBzD,KAAMyD,GAAgB1D,KAAMzkI,EACxE,CACJ,CACA,YAAAsoI,GACI,IAAK,IAAIt2J,KAAK7P,KAAK2pE,OAAO29D,OAAQ,CAC9B,IAAIrnF,EAAQ,cACR84C,EAAS/4F,KAAKkqE,GAAG/pB,cAActwC,EAAE/T,MACjCi9F,GAAU,IACV94C,EAAQjgD,KAAKkqE,GAAGlqB,SAAS+4C,IACzB/4F,KAAKghK,cACLhhK,KAAKkqE,GAAG3nB,aAAa1yC,EAAE/T,KAAOkqK,GAAgBQ,aAAc,OAAQvmH,GACpEjgD,KAAKkqE,GAAG3nB,aAAa1yC,EAAE/T,KAAOkqK,GAAgBS,aAAc,OAAQ,SACpEzmK,KAAKkqE,GAAG3nB,aAAa1yC,EAAE/T,KAAOkqK,GAAgBU,aAAc,SAAU,SACtE1mK,KAAKkqE,GAAG3nB,aAAa1yC,EAAE/T,KAAOkqK,GAAgBW,WAAY,SAAU,YAE5E,CACJ,CACA,aAAA1C,CAAcpmI,GACV,IAAI8rC,EAAS,CAAE7hB,MAAO,GAAIw/E,OAAQ,IAClC,IAAK,IAAIpjE,KAAQrmC,EAAQ8C,MAAM,SAAU,CACrC,IAAIslB,EAAKie,EAAK1pD,QAAQ,KACtB,KAAIyrC,EAAK,GAET,GAAIie,EAAKxjD,WAAW,SAAU,CAC1B,IAAImzB,EAAOqwB,EAAKvjD,UAAUslC,EAAK,GAAGtlB,MAAM,KACpCkT,EAAKj1C,QAAU,GACf+qE,EAAO7hB,MAAMtrD,KAAK,CAAEV,KAAM80E,GAAeM,WAAWr9B,EAAK,IAAKo9C,IAAKrgB,GAAeM,WAAWr9B,EAAK,KAC1G,MACK,GAAIqwB,EAAKxjD,WAAW,UAAW,CAChC,IAAImzB,EAAOqwB,EAAKvjD,UAAUslC,EAAK,GAAGtlB,MAAM,KACpC9wB,EAAI,CAAE/T,KAAM80E,GAAeM,WAAWr9B,EAAK,IAAKiU,MAAO,GAAIw/G,QAAS,IACxE,IAAK,IAAIx3J,EAAI,EAAGA,EAAI+jC,EAAKj1C,OAAQkR,IAC7BD,EAAEi4C,MAAMtrD,KAAKo0E,GAAeM,WAAWr9B,EAAK/jC,KAChD65D,EAAO29D,OAAO9qI,KAAKqT,EACvB,MACK,GAAIq0D,EAAKxjD,WAAW,eAAgB,CACrC,IAAImzB,EAAOqwB,EAAKvjD,UAAUslC,EAAK,GAAGtlB,MAAM,KACxC,GAAIkT,EAAKj1C,QAAU,EAAG,CAClB,IAAIiR,EAAI85D,EAAO29D,OAAOxpG,MAAMjuB,GAAMA,EAAE/T,MAAQ+3C,EAAK,KACjD,IAAKhkC,EACD,SACJ,IAAK,IAAIC,EAAI,EAAGA,EAAI+jC,EAAKj1C,OAAQkR,IAC7BD,EAAEy3J,QAAQ9qK,KAAKo0E,GAAeM,WAAWr9B,EAAK/jC,IACtD,CACJ,CACJ,CACA,OAAO65D,CACX,CACA,cAAAw6F,CAAex6F,GACX,IAAIjsD,EAAQ,GACZ,IAAK,IAAIqR,KAAK46C,EAAO7hB,MACjBpqC,EAAMlhB,KAAK,QAAUo0E,GAAeY,SAASziD,EAAEjzB,MAAQ,IAAM80E,GAAeY,SAASziD,EAAEkiE,MAE3F,IAAK,IAAIphF,KAAK85D,EAAO29D,OAAQ,CACzB,IAAIpjE,EAAO,SAAW0M,GAAeY,SAAS3hE,EAAE/T,MAChD,IAAK,IAAIizB,KAAKlf,EAAEi4C,MACZoc,GAAQ,IAAM0M,GAAeY,SAASziD,GAE1C,GADArR,EAAMlhB,KAAK0nE,GACP,EAAI5vD,SAASzE,EAAEy3J,SAAU,CACzBpjG,EAAO,cAAgB0M,GAAeY,SAAS3hE,EAAE/T,MACjD,IAAK,IAAImY,KAAKpE,EAAEy3J,QACZpjG,GAAQ,IAAM0M,GAAeY,SAASv9D,GAC1CyJ,EAAMlhB,KAAK0nE,EACf,CACJ,CACA,OAAOxmD,EAAMI,KAAK,KACtB,CACA,YAAAsnJ,GAAiB,OAAOY,GAAgBzD,IAAM,CAC9C,gBAAAtB,CAAiBnhH,GACb,OAAO9/C,KAAKkhK,mBAAmB,CAACphH,IAAU,EAC9C,CACA,kBAAAohH,CAAmBC,GACf,IAAIv3G,EAAQ,IAAIxlD,IAChB,IAAK,IAAIyL,KAAK7P,KAAK2pE,OAAO29D,OACtB19E,EAAMtpD,IAAIuP,EAAE/T,KAAOkqK,GAAgBQ,cACnC58G,EAAMtpD,IAAIuP,EAAE/T,KAAOkqK,GAAgBS,cACnC78G,EAAMtpD,IAAIuP,EAAE/T,KAAOkqK,GAAgBU,cACnC98G,EAAMtpD,IAAIuP,EAAE/T,KAAOkqK,GAAgBW,YAEvC,IAAIY,EAAO,GACX,IAAK,IAAI9lJ,KAAO0/I,EACZoG,EAAK/qK,KAAKotD,EAAMtlD,IAAImd,IACxB,OAAO8lJ,CACX,CACA,iBAAA7F,CAAkB/jJ,GAAO,OAAO3d,KAAK2pE,OAAO29D,OAAO1oI,MAAQ,CAC3D,oBAAA+iK,CAAqBhkJ,EAAK9H,GACtB,IAAI8xH,EAAQ3nI,KAAK2pE,OAAO29D,OAAOzxH,GAC3B2xJ,EAAWxnK,KAAKkqE,GAAG/pB,cAAcwnF,EAAM7rI,MACvCwpD,EAAK,CACLxpD,KAAM6rI,EAAM7rI,KACZmkD,MAAOunH,EAAW,EAAI,GAAKxnK,KAAKkqE,GAAGlqB,SAASwnH,GAC5CxhJ,KAAM,GACNjoB,KAAMgjK,GAAOiB,YAEbthH,EAAQ1gD,KAAK2/B,SAAShiB,EAAK9H,GAU/B,OATKtY,OAAOqjB,MAAM8/B,EAAM9kD,SAChB8kD,EAAM2oB,MACN/jB,EAAGt/B,MAAQ06B,EAAM2oB,IAAM,KAC3B/jB,EAAGt/B,MAAQ06B,EAAM9kD,MACZ2B,OAAOqjB,MAAM8/B,EAAMh5C,SACpB49C,EAAGt/B,MAAQ,MAAe06B,EAAMh5C,OAChCg5C,EAAMoH,QACNxC,EAAGt/B,MAAQ,IAAM06B,EAAMoH,QAExBxC,CACX,ECrOG,IAAImiH,GDuOXzB,GAAgB1D,KAAO,iCACvB0D,GAAgBzD,KAAO,mBACvByD,GAAgBQ,aAAe,GAC/BR,GAAgBS,aAAe,SAC/BT,GAAgBU,aAAe,SAC/BV,GAAgBW,WAAa,OAE7BvE,GAAe4D,IC7Of,SAAWyB,GACPA,EAAgC,UAAI,YACpCA,EAA2B,KAAI,OAC/BA,EAA+B,SAAI,WACnCA,EAA4B,MAAI,QAChCA,EAA4B,MAAI,QAChCA,EAA4B,MAAI,QAChCA,EAA4B,MAAI,QAChCA,EAA+B,SAAI,WACnCA,EAAiC,WAAI,aACrCA,EAA2B,KAAI,OAC/BA,EAA+B,SAAI,UACtC,CAZD,CAYGA,KAAyBA,GAAuB,CAAC,IACpD,MAAM,WAAgB1G,GAClB,gBAAO2G,CAAUx9F,GACb,IAAK,IAAIp6D,EAAI,EAAGA,EAAIo6D,EAAG9qB,cAAetvC,IAClC,GAAIo6D,EAAG5qB,WAAWxvC,IAAM,GAAQwyJ,KAC5B,OAAO,EACf,OAAO,CACX,CACA,WAAAplK,CAAYgtE,EAAI82F,GACZt2J,MAAM,GAAQ43J,KAAMp4F,EAAI82F,GACxBhhK,KAAK2pE,OAAS,CAAEg+F,WAAY,IAC5B3nK,KAAK64I,OACT,CACA,SAAAmrB,GACI,OAAOhkK,KAAK2pE,MAChB,CACA,SAAAu6F,CAAUv6F,GACN3pE,KAAK2pE,OAASA,EACd,IAAI9rC,EAAU79B,KAAKmkK,eAAex6F,GAClC,IAAK,IAAI75D,EAAI,EAAGA,EAAI9P,KAAKkqE,GAAG9qB,cAAetvC,IACvC,GAAI9P,KAAKkqE,GAAG5qB,WAAWxvC,IAAM,GAAQwyJ,KAEjC,YADAtiK,KAAKkqE,GAAGxqB,WAAW5vC,EAAG+tB,GAG9B79B,KAAKkqE,GAAGvqB,gBAAgB,GAAQ4iH,KAAM,GAAQD,KAAMzkI,EACxD,CACA,KAAAg7G,GACI74I,KAAKmlK,iBACT,CACA,eAAAA,GACInlK,KAAK2pE,OAAS,CAAEg+F,WAAY,IAC5B,IAAI75G,GAAM,EACV,IAAK,IAAIh+C,EAAI,EAAGA,EAAI9P,KAAKkqE,GAAG9qB,cAAetvC,IACvC,GAAI9P,KAAKkqE,GAAG5qB,WAAWxvC,IAAM,GAAQwyJ,KAAM,CACvCtiK,KAAK2pE,OAAS3pE,KAAKikK,cAAcjkK,KAAKkqE,GAAG3qB,WAAWzvC,IACpDg+C,GAAM,EACN,KACJ,CACJ,IAAKA,GAAO9tD,KAAKghK,YAAa,CAC1B,IAAInjI,EAAU79B,KAAKmkK,eAAenkK,KAAK2pE,QACvC3pE,KAAKkqE,GAAGvqB,gBAAgB,GAAQ4iH,KAAM,GAAQD,KAAMzkI,EACxD,CACJ,CACA,aAAAomI,CAAcpmI,GACV,IAAI8rC,EAAS,CAAEg+F,WAAY,IAC3B,IAAK,IAAIzjG,KAAQrmC,EAAQ8C,MAAM,SAAU,CACrC,IAAIslB,EAAKie,EAAK1pD,QAAQ,KACtB,KAAIyrC,EAAK,IAELie,EAAKxjD,WAAW,SAAU,CAC1B,IAAImzB,EAAOqwB,EAAKvjD,UAAUslC,EAAK,GAAGtlB,MAAM,KACxC,GAAIkT,EAAKj1C,OAAS,EACd,SACJ,IAAIu6F,EAASvoB,GAAeM,WAAWr9B,EAAK,IACxConB,EAAW,GACA,KAAXpnB,EAAK,KACLonB,EAAWpnB,EAAK,GAAGlT,MAAM,KAAKtiC,KAAKmiB,GAAQxO,SAASwO,MACxD,IAAIziB,EAAO81C,EAAK,GACZ+zH,EAAO,GACX,IAAK,IAAI93J,EAAI,EAAGA,EAAI+jC,EAAKj1C,OAAQkR,IAC7B83J,EAAKprK,KAAKo0E,GAAeM,WAAWr9B,EAAK/jC,KAC7C65D,EAAOg+F,WAAWnrK,KAAK,CAAE28F,SAAQl+B,WAAUl9D,OAAM6pK,QACrD,CACJ,CACA,OAAOj+F,CACX,CACA,cAAAw6F,CAAex6F,GACX,IAAIjsD,EAAQ,GACZ,IAAK,IAAI/D,KAAKgwD,EAAOg+F,WAAY,CAC7B,IAAI9zH,EAAO,CAAC+8B,GAAeY,SAAS73D,EAAEw/E,SAMtC,GALI,EAAI/kF,QAAQuF,EAAEshD,UACdpnB,EAAKr3C,KAAK,KAEVq3C,EAAKr3C,KAAKmd,EAAEshD,SAASn9C,KAAK,MAC9B+1B,EAAKr3C,KAAKmd,EAAE5b,MACR4b,EAAEiuJ,KACF,IAAK,IAAIpnJ,KAAO7G,EAAEiuJ,KACd/zH,EAAKr3C,KAAKo0E,GAAeY,SAAShxD,IAC1C9C,EAAMlhB,KAAK,QAAUq3C,EAAK/1B,KAAK,KACnC,CACA,OAAOJ,EAAMI,KAAK,KACtB,CACA,YAAAsnJ,GAAiB,OAAOY,GAAgBzD,IAAM,CAC9C,gBAAAtB,CAAiBnhH,GACb,OAAO9/C,KAAKkhK,mBAAmB,CAACphH,IAAU,EAC9C,CACA,kBAAAohH,CAAmBC,GACf,IAAIv3G,EAAQ,IAAIxlD,IAChB,IAAK,IAAIuV,KAAK3Z,KAAK2pE,OAAOg+F,WACtB/9G,EAAMtpD,IAAIqZ,EAAEw/E,QAChB,IAAIouE,EAAO,GACX,IAAK,IAAI9lJ,KAAO0/I,EACZoG,EAAK/qK,KAAKotD,EAAMtlD,IAAImd,IACxB,OAAO8lJ,CACX,EAEJ,GAAQjF,KAAO,yBACf,GAAQC,KAAO,UACf,GAAQiE,aAAe,GAEvBpE,GAAe,I,ICtFHyF,IAAZ,SAAYA,GAEX,wBACA,cACA,sBACA,gBACA,gBACA,gBACA,gBACA,sBACA,0BACA,cACA,qBACA,CAbD,CAAYA,KAAAA,GAAgB,KAuBrB,MAAMC,GASZ,WAAA5qK,CAAoB6qK,EAA0BC,EAA2BC,EAA4BC,GAAjF,KAAAH,UAAAA,EAA0B,KAAAC,WAAAA,EAA2B,KAAAC,YAAAA,EAA4B,KAAAC,QAAAA,EAP7F,KAAA7hC,MAAkB,KAClB,KAAA8hC,MAAwB,KACxB,KAAAC,MAAwB,KAExB,KAAAC,OAA+B,KAC/B,KAAAC,SAAiC,EAIzC,CAEa,IAAAtnK,G,qCAEZ,IAAI68B,EACJ,IAAKA,EAAU,gBAAgB79B,KAAK+nK,WAAWr0J,UAAW,CAC1D,MAAO0Z,GAAK,KAAM,uBAAyBptB,KAAK+nK,UAAY,KAAO36I,CAAG,CAMtE,GAJIptB,KAAK+nK,UAAUxmJ,SAAS,OAAQvhB,KAAKqmI,MAAQ7tC,GAAgBC,QAAQ56D,GAChE79B,KAAK+nK,UAAUxmJ,SAAS,QAASvhB,KAAKqmI,MAAQ,IAAIp8D,GAAapsC,GAASZ,QACxEj9B,KAAK+nK,UAAUxmJ,SAAS,QAASvhB,KAAKqmI,MAAQrmI,KAAKuoK,WAAW,KAAK,IACnEvoK,KAAK+nK,UAAUxmJ,SAAS,SAAWvhB,KAAK+nK,UAAUxmJ,SAAS,WAASvhB,KAAKqmI,MAAQrmI,KAAKuoK,WAAW,MAAM,KAC3GvoK,KAAKqmI,MAAO,KAAM,oBAAsBrmI,KAAK+nK,UAiBlD,GAfIjE,GAAgBC,kBAAkB/jK,KAAKqmI,SAAQrmI,KAAKmoK,MAAQ,IAAIrE,GAAgB9jK,KAAKqmI,OAAO,IAC5F2/B,GAAgBC,kBAAkBjmK,KAAKqmI,SAAQrmI,KAAKooK,MAAQ,IAAIpC,GAAgBhmK,KAAKqmI,OAAO,IAE5FrmI,KAAKgoK,WAKThoK,KAAKwoK,iBACDxoK,KAAKioK,cAERpqI,EAAU,gBAAgB79B,KAAKioK,aAAav0J,WAC5C1T,KAAKyoK,cAAc7qJ,KAAKqf,MAAMY,KAGH,GAAxB79B,KAAKsoK,SAAS1pK,OAAa,KAAM,2CAErC,IAAIqmE,EAAW,IAAI66F,GACnB,IAAK,IAAIhwJ,EAAI,EAAGA,EAAI9P,KAAKqmI,MAAMxqH,QAAS/L,IACxC,CACC,IAAIukF,EAAUr0F,KAAK0oK,eAAe54J,GAC9BukF,GAASpvB,EAASk7F,oBAAoB9rE,EAC3C,CAEA5sF,QAAQw3I,IAAIh6E,EAASj9B,WAAU,GAChC,E,+RAKQ,UAAAugI,CAAWI,EAAYC,GAO9B,OALS,IAAIzqH,EAMd,CAGQ,cAAAqqH,GAEP,IAAK,GAAcd,UAAU1nK,KAAKqmI,OAAQ,OAE1C,IAAIwiC,EAAS,IAAI,GAAc7oK,KAAKqmI,OAAO,GAC3C,IAAK,IAAIrlH,KAAQ6nJ,EAAO7E,YAAY2D,WACpC,CACC,IAAItpK,EACJ,CACC,OAAU2iB,EAAKm4E,OACf,OAAU,EAAI74F,IAAI0gB,EAAKi6C,UAAW,GAClC,KAAQj6C,EAAKjjB,KACb,KAAQijB,EAAK4mJ,MAEd5nK,KAAKsoK,SAAS9rK,KAAK6B,EACpB,CACD,CAGQ,aAAAoqK,CAAcK,GAErB,IAAK,IAAIzqK,KAAOyqK,EAChB,CACC,IAAIjzJ,EAAM7V,KAAKsoK,SAASS,WAAW1gI,GAASA,EAAK8wD,QAAU96F,EAAI86F,SAC3DtjF,GAAO,EAAG7V,KAAKsoK,SAASzyJ,GAAOxX,EAAU2B,KAAKsoK,SAAS9rK,KAAK6B,EACjE,CACD,CAGQ,cAAAqqK,CAAe/qJ,GAEtB,IAAI02E,EAAU,IAAIntD,GAElB,IAAK,IAAI7oC,KAAO2B,KAAKsoK,SACrB,CACC,IAAIhhI,EAAO+sD,EAAQltD,QACnB,IAAK,IAAItxB,KAAOxX,EAAI+pC,OACpB,CAEC,IADqB,MAAjBd,EAAKI,WAAkBJ,EAAKI,SAAW,IACpC7xB,GAAOyxB,EAAKI,SAAS9oC,QAAQ0oC,EAAKI,SAASlrC,KAAK,CAAC,GACxD8qC,EAAOA,EAAKI,SAAS7xB,EACtB,CACD,CAEA,IAAImzJ,EAAc,CAACphI,EAA4B7qC,IAE1C6jB,MAAM7jB,GAAa6qC,EACP,MAAZA,EAAyB7qC,EACD,iBAAZ6qC,GAAwBA,GAAY7qC,EAAY,CAAC4Z,KAAKW,IAAIswB,EAAU7qC,GAAM4Z,KAAKC,IAAIgxB,EAAU7qC,IACjG6qC,EAGTqhI,EAAa,IAAI/lK,IACjBokI,EAAStnI,KAAKooK,MAAQpoK,KAAKooK,MAAMpE,YAAY18B,OAAS,GAE1D,IAAK,IAAIjpI,KAAO2B,KAAKsoK,SACrB,CACC,IAAI7mJ,EAAMzhB,KAAKqmI,MAAMlmF,cAAc9hD,EAAI86F,QACvC,GAAI13E,EAAM,GAAKzhB,KAAKqmI,MAAMnmF,OAAOviC,EAAK8D,GAAM,SAE5C,IAAI6lB,EAAO+sD,EAAQlsD,aAAa9pC,EAAI+pC,QAEpC,GAAI/pC,EAAIN,MAAQ8pK,GAAiBqB,UACjC,CACC,IAAI38H,EAAMvsC,KAAKqmI,MAAM/lF,YAAY3iC,EAAK8D,GACtC6lB,EAAKipC,QAAU,IAAItF,GAAa1+B,GAAK/hC,OACtC,MACK,GAAInM,EAAIN,MAAQ8pK,GAAiBhxE,KAErCvvD,EAAKxrC,KAAOkE,KAAKqmI,MAAM3yH,SAASiK,EAAK8D,QAEjC,GAAIpjB,EAAIN,MAAQ8pK,GAAiB9wE,SACtC,CAEC,GAAI/2F,KAAKmoK,OAAS9pK,EAAI86F,QAAU2qE,GAAgBQ,cAChD,CACCh9H,EAAKM,SAAW5nC,KAAKmoK,MAAMxoI,SAAShiB,GACpC,IAAIjW,EAAQ1H,KAAKmoK,MAAM5D,SAAS5mJ,GAC3BiD,MAAMlZ,KAAQ4/B,EAAK5/B,MAAQA,GAChC4/B,EAAKwgB,MAAQ9nD,KAAKmoK,MAAMhgH,SAASxqC,GACjC,IAAIm4E,EAAW91F,KAAKmoK,MAAMzD,YAAY/mJ,GAClCm4E,GAAwB,KAAZA,IAAiBxuD,EAAKwuD,SAAWA,GACjD,QACD,CACA,IAAI6xC,EAAQL,EAAOxpG,MAAMjuB,GAAMA,EAAE/T,MAAQuC,EAAI86F,SAC7C,GAAIwuC,EACJ,CACC,IAAI/rI,EAAQoE,KAAKooK,MAAMtB,cAAcnpJ,EAAKgqH,GAC1CrgG,EAAKM,SAAWhsC,EAAMA,MACjBglB,MAAMhlB,EAAM8L,SAAQ4/B,EAAK5/B,MAAQ9L,EAAM8L,OAC5C4/B,EAAKwgB,MAAQlsD,EAAMksD,MACflsD,EAAMytE,KAAoB,KAAbztE,EAAMytE,MAAY/hC,EAAKwuD,SAAWl6F,EAAMytE,KACzD,QACD,CAEA,IAAItsE,EAAM0Q,WAAWzN,KAAKqmI,MAAM3yH,SAASiK,EAAK8D,IAC9C6lB,EAAKM,SAAWohI,EAAY1hI,EAAKM,SAAU7qC,EAC5C,MACK,GAAIsB,EAAIN,MAAQ8pK,GAAiBsB,MACtC,CACC,IAAIpsK,EAAM0Q,WAAWzN,KAAKqmI,MAAM3yH,SAASiK,EAAK8D,IAC9C6lB,EAAKM,SAAWohI,EAAY1hI,EAAKM,SAAU7qC,EAC5C,MACK,GAAIsB,EAAIN,MAAQ8pK,GAAiBnqK,MACtC,CACC,IAAIX,EAAM0Q,WAAWzN,KAAKqmI,MAAM3yH,SAASiK,EAAK8D,IACzCb,MAAM7jB,KAAMuqC,EAAK5/B,MAAQ3K,EAC/B,MACK,GAAIsB,EAAIN,MAAQ8pK,GAAiB1e,MACtC,CACC,IAAIpsJ,EAAM0Q,WAAWzN,KAAKqmI,MAAM3yH,SAASiK,EAAK8D,IACzCb,MAAM7jB,IAAMksK,EAAWvoK,IAAIkd,KAAKC,UAAUxf,EAAI+pC,QAASrrC,EAC7D,MACK,GAAIsB,EAAIN,MAAQ8pK,GAAiBxiB,MACtC,CACC,IAAIv9F,EAAQ9nD,KAAKqmI,MAAM3yH,SAASiK,EAAK8D,GAErC6lB,EAAKwgB,MAAQA,CACd,MACK,GAAIzpD,EAAIN,MAAQ8pK,GAAiBuB,SACtC,CACC,IAAItzE,EAAW91F,KAAKqmI,MAAM3yH,SAASiK,EAAK8D,GAExC6lB,EAAKwuD,SAAWA,CACjB,MACSz3F,EAAIN,MAAQ8pK,GAAiB3wE,YAEb,MAApB5vD,EAAK0vD,cAAqB1vD,EAAK0vD,YAAc,CAAC,GAClD1vD,EAAK0vD,YAAY34F,EAAI86F,QAAUn5F,KAAKqmI,MAAM3yH,SAASiK,EAAK8D,IAEhDpjB,EAAIN,MAAQ8pK,GAAiBl/B,MAEnB,MAAdrhG,EAAKghH,QAAehhH,EAAKghH,MAAQ,CAAC,GACtChhH,EAAKghH,MAAMjqJ,EAAI86F,QAAUn5F,KAAKqmI,MAAM3yH,SAASiK,EAAK8D,IAE1CpjB,EAAIN,MAAQ8pK,GAAiBwB,UAErC5hK,QAAQw3I,IAAI,iBAEd,CAGA,IAAK,IAAI72G,KAAUisD,EAAQ7rD,aAC3B,CACC,IAAIlB,EAAO+sD,EAAQlsD,aAAaC,GAChC,GAAI,EAAIh0B,QAAQkzB,EAAKI,UAAW,SAChC,IAAIiI,EAAM,EAAGo+D,EAAQ,EACrB,IAAK,IAAIj+F,EAAI,EAAGA,EAAIw3B,EAAKI,SAAS9oC,OAAQkR,IAAK,IAAKo3B,GAAQK,iBAAiBD,EAAKI,SAAS53B,IAC3F,CACC,IAAI+3B,EAAQohI,EAAWxoK,IAAImd,KAAKC,UAAU,IAAIuqB,EAAQt4B,KACtD,IAAK+3B,EAAO,CAAC8H,EAAM,EAAG,KAAM,CAC5BA,IACAo+D,GAASlmE,CACV,CACA,GAAI8H,EAAM,EAAG,IAAK,IAAI7/B,EAAI,EAAGA,EAAIw3B,EAAKI,SAAS9oC,OAAQkR,IAAK,IAAKo3B,GAAQK,iBAAiBD,EAAKI,SAAS53B,IACxG,CACC,IAAI+3B,EAAQohI,EAAWxoK,IAAImd,KAAKC,UAAU,IAAIuqB,EAAQt4B,KACtDw3B,EAAKI,SAAS53B,GAAG+3B,MAAQ,CAACA,EAAOkmE,EAClC,CACD,CAGA5+B,EAAM,IAAK,IAAI/mC,KAAU,EAAItwB,QAAQu8E,EAAQ7rD,cAC7C,CACC,IAAIlB,EAAO+sD,EAAQlsD,aAAaC,GAChC,GAAIlB,GAAQK,iBAAiBD,GAC7B,CACC+sD,EAAQxrD,gBAAgBT,GACxB,QACD,CAGA,GAAsC,GAAlC,EAAI3zB,YAAY6yB,EAAKI,UAAgB,SACzC,IAAK,IAAIppC,KAAOgpC,EAAM,GAAW,YAAPhpC,GAAsBgpC,EAAahpC,GAAM,SAAS6wE,EAC5E,IAAIp2D,EAAMuuB,EAAKI,SAAS,GACxBJ,EAAKI,SAAW,KAChB2sD,EAAQ1rD,aAAaP,EAAQrvB,EAC9B,CAEA,OAAOs7E,CACR,EC5QM,MAAMi1E,GAQZ,WAAApsK,GANQ,KAAA8B,OAAS,GACT,KAAAs1F,WAA+B,GAC/B,KAAAi1E,SAAqB,EAM7B,CAIO,IAAAC,CAAKvgK,GAGX,IADAjJ,KAAKhB,QAAUiK,IAEf,CACC,IAAI0/J,EAAM3oK,KAAKhB,OAAOwb,QAAQ,UAC9B,GAAImuJ,EAAM,EAAG,MACbA,GAAO,EACP3oK,KAAKypK,aAAazpK,KAAKhB,OAAO2hB,UAAU,EAAGgoJ,IAC3C3oK,KAAKhB,OAASgB,KAAKhB,OAAO2hB,UAAUgoJ,EACrC,CACD,CAIO,IAAAe,CAAKz9J,GAAQ,GAEnB,OAAI,EAAIqI,SAAStU,KAAKupK,UAAkBvpK,KAAKupK,SAASlqJ,QAClDpT,GAAS,EAAIqI,SAAStU,KAAKs0F,aAE9Bt0F,KAAK2pK,qBACE3pK,KAAKupK,SAAS,IAEf,IACR,CAKQ,YAAAE,CAAarM,GAEpB,IAAIje,EAAS,IAAIl1E,GAAamzF,GAC9Bje,EAAOh1E,eAAgB,EACvB,IAAID,EAAKi1E,EAAOliH,QAChB,IAAKitC,GAAoB,GAAdA,EAAGruD,QAAc,OAC5B,IAAI60D,EAASxG,EAAG1mB,eAAe,YAC3B1D,EAAUoqB,EAAG/pB,cAAc,QAC3Bk6G,EAAUnwF,EAAG/pB,cAAc,YAC3Bm6G,EAAUpwF,EAAG/pB,cAAc,YAC/B,GAAIk6G,EAAU,EAAG,OAEjB,IAAI9tH,EAAMmkC,EAAS,EAAI,KAAOxG,EAAG5pB,YAAY,EAAGowB,GAC5C50E,EAAOgkD,EAAU,EAAI,KAAOoqB,EAAG3pB,UAAU,EAAGT,GAC5C8pH,EAAO1/F,EAAG3pB,UAAU,EAAG85G,GACvBL,EAAOM,EAAU,EAAI,KAAOpwF,EAAG3pB,UAAU,EAAG+5G,GAC5C,EAAIhmJ,SAAStU,KAAKs0F,aAAuB,KAARs1E,GAAa5pK,KAAK2pK,qBAEvD3pK,KAAKs0F,WAAW93F,KAAK,CAAC+vC,MAAKzwC,OAAM8tK,OAAM5P,QACxC,CAGQ,kBAAA2P,GAEP,IAAIt1E,EAAU,IAAIntD,GAElB,IAAK,IAAI2iI,KAAU7pK,KAAKs0F,WACxB,CACC,IAAI/jB,EAAUs5F,EAAOt9H,IAAM,IAAI0+B,GAAa4+F,EAAOt9H,KAAK/hC,aAAUxI,EAC9DomC,EAASyhI,EAAOD,KAAKjpI,MAAM,KAAKtiC,KAAKmiB,GAAQxO,SAASwO,GAAO,IAC7D3K,EAAMuyB,EAAOt6B,MACbgT,EAASuzE,EAAQlsD,aAAaC,GAC7BtnB,EAAO4mB,WAAU5mB,EAAO4mB,SAAW,IACxC,IAAIJ,EAAwB,CAACxrC,KAAM+tK,EAAO/tK,KAAMy0E,QAASA,EAAS7oC,SAAU,IACxEmiI,EAAO7P,MAAMh6J,KAAK8pK,oBAAoBD,EAAO7P,KAAM1yH,GACvDxmB,EAAO4mB,SAAS7xB,GAAOyxB,CACxB,CAEuC,GAAnC+sD,EAAQltD,QAAQO,SAAS9oC,SAAay1F,EAAU,IAAIntD,GAAQmtD,EAAQltD,QAAQO,SAAS,KAGzF,IAAIqiI,EAAeziI,IAElB,GAAI,EAAIlzB,QAAQkzB,EAAKI,UAAW,OAChC,IAAI8lE,EAAQ,EACZ,IAAK,IAAIhyE,KAAS8L,EAAKI,SACvB,CACE,IAAKlM,EAAMqM,OAAiC,GAAxB,EAAIrzB,IAAIgnB,EAAMqM,OAClC,CACC2lE,EAAQ,EACT,KACA,CACAA,GAAShyE,EAAMqM,MAAM,EACvB,CACA,IAAK,IAAIrM,KAAS8L,EAAKI,SAGrBlM,EAAMqM,MADH2lE,EAAQ,EACG,CAAChyE,EAAMqM,MAAM,GAAI2lE,QAEjBxrG,EAEhB,IAAK,IAAIw5B,KAAS8L,EAAKI,SAAUqiI,EAAYvuI,EAAM,EAEpDuuI,EAAY11E,EAAQltD,SAEpBnnC,KAAKs0F,WAAa,GAClBt0F,KAAKupK,SAAS/sK,KAAK63F,EAAQltD,QAC5B,CAGQ,mBAAA2iI,CAAoB9P,EAAa1yH,GAExC,IAAIvmC,EAAQi5J,EAAKj5J,MAAM,4CACvB,IAAKA,EAAO,OAEZ,IAAI+0F,EAAW/0F,EAAM,GAAIspJ,EAAOtpJ,EAAM,GAAIoqG,EAAWpqG,EAAM,GAAI04J,EAAWznJ,SAASjR,EAAM,KAAO,EAE5FipK,EAAgB,KAAMC,EAAgB59E,IAC1C,GAAKtrF,EAAQspJ,EAAKtpJ,MAAM,4BAIvB,GAFAipK,EAASv8J,WAAW1M,EAAM,IAC1BkpK,EAASx8J,WAAW1M,EAAM,IACtB6f,MAAMopJ,IAAWppJ,MAAMqpJ,GAAS,YAKpC,GADAD,EAASv8J,WAAW48I,GAChBzpI,MAAMopJ,GAAS,OAGpB,IAAIliH,EAAQ,GAAI/oC,EAAQ,EAAGmrJ,GAAU,EACrC,GAAgB,MAAZ/+D,EAAkBrjD,EAAQ0uF,GAAckN,QACvC,GAAgB,MAAZv4C,GAAmBrjD,EAAO/oC,GAAS,CAACy3H,GAAcmN,KAAM,UAC5D,GAAgB,MAAZx4C,GAAmBrjD,EAAO/oC,GAAS,CAACy3H,GAAcoN,KAAM,UAC5D,GAAgB,MAAZz4C,GAAmBrjD,EAAO/oC,GAAS,CAACy3H,GAAcqN,KAAM,UAC5D,GAAgB,MAAZ14C,GAAmBrjD,EAAO/oC,GAAS,CAACy3H,GAAcsN,KAAM,UAC5D,GAAgB,MAAZ34C,EAAkB++D,GAAU,OAChC,GAAgB,MAAZ/+D,GAAmBrjD,EAAO/oC,GAAS,CAACy3H,GAAcuN,MAAO,QAC7D,GAAgB,MAAZ54C,GAAmBrjD,EAAO/oC,GAAS,CAACy3H,GAAc4N,IAAK,SAC3D,IAAgB,MAAZj5C,EACJ,OADsBrjD,EAAQ0uF,GAAc+N,MACtC,CAEXj9G,EAAKwuD,SAAWA,QAAY9zF,EAExBkoK,EAAS5iI,EAAKO,MAAQ,CAACmiI,EAAQ,GAC1BppJ,MAAMqpJ,IAEd3iI,EAAKM,SAAWoiI,EAASrzJ,KAAK8H,IAAI,GAAIg7I,GAAY16I,EAClDuoB,EAAKwgB,MAAQu9F,GAAMQ,UAAU/9F,KAI7BxgB,EAAKM,SAAW,CAACoiI,EAASrzJ,KAAK8H,IAAI,GAAIg7I,GAAY16I,EAAOkrJ,EAAStzJ,KAAK8H,IAAI,GAAIg7I,GAAY16I,GAC5FuoB,EAAKwgB,MAAQu9F,GAAMQ,UAAU/9F,GAE/B,E,ICjKWqiH,G,wSAAZ,SAAYA,GAEX,oBACA,cACA,YACA,kBACA,gCACA,kCACA,WACA,CATD,CAAYA,KAAAA,GAAsB,KAU3B,MAAMC,GAA+B3uK,OAAO0Q,OAAOg+J,IAEnD,MAAME,GAeZ,WAAAntK,CAAoBotK,EAAkBC,EAA4BC,EAAmBC,GAEpF,GAFmB,KAAAH,UAAAA,EAA8C,KAAAE,WAAAA,EAb1D,KAAAzuK,QAAU,EAAQ,KAElB,KAAAwuK,YAAqC,KACrC,KAAAE,aAAsC,KAEtC,KAAAC,SAAe,KACf,KAAAC,UAAgB,KAEhB,KAAApwJ,MAAQ,EAER,KAAAqwJ,UAAY,EACZ,KAAAC,OAAsC,GAIzCN,EACJ,CACC,IAAKH,GAA6BlpK,SAASqpK,GAAwC,KAAM,yBAA2BA,EACpHvqK,KAAKuqK,YAAcA,CACpB,CACA,GAAIE,EACJ,CACC,IAAKL,GAA6BlpK,SAASupK,GAAyC,KAAM,0BAA4BA,EACtHzqK,KAAKyqK,aAAeA,CACrB,CACD,CAEa,IAAAzpK,G,0CAEZ,GAAIhB,KAAKsqK,YAActqK,KAAKuqK,YAE3B,IAAK,IAAIO,KAAOV,GAA8B,GAAIpqK,KAAKsqK,UAAU/oJ,SAAS,IAAMupJ,GAChF,CACC9qK,KAAKuqK,YAAcO,EACnB,KACD,CAED,IAAK9qK,KAAKuqK,YAAa,KAAM,uBAC7B,GAAIvqK,KAAKuqK,aAAeJ,GAAuBY,QAAU/qK,KAAKuqK,aAAeJ,GAAuBa,KACnGhrK,KAAKuqK,aAAeJ,GAAuBc,eAAiBjrK,KAAKuqK,aAAeJ,GAAuBe,eAAgB,KAAM,0BAA4BlrK,KAAKuqK,YAE/J,GAAIvqK,KAAKwqK,aAAexqK,KAAKyqK,aAE5B,IAAK,IAAIK,KAAOV,GAA8B,GAAIpqK,KAAKwqK,WAAWjpJ,SAAS,IAAMupJ,GACjF,CACC9qK,KAAKyqK,aAAeK,EACpB,KACD,CAED,IAAK9qK,KAAKyqK,aAAc,KAAM,wBAC9B,IAAKzqK,KAAKyqK,cAAgBN,GAAuBY,QAAU/qK,KAAKyqK,cAAgBN,GAAuBc,eACtGjrK,KAAKyqK,cAAgBN,GAAuBe,kBAAoBjjB,GAAMoX,gBAAiB,KAAM,uEAE9Fr/J,KAAK0qK,SAAW1qK,KAAKsqK,UAAY,oBAAoBtqK,KAAKsqK,WAAatqK,KAAKjE,QAAQovK,MACpFnrK,KAAK2qK,UAAY3qK,KAAKwqK,WAAa,qBAAqBxqK,KAAKwqK,YAAcxqK,KAAKjE,QAAQ8jK,OAEpF7/J,KAAKyqK,cAAgBN,GAAuBvsJ,MAAM5d,KAAK2qK,UAAUngK,MAAM,OAEvExK,KAAKuqK,aAAeJ,GAAuBiB,cAAeprK,KAAKqrK,cAC1DrrK,KAAKuqK,aAAeJ,GAAuBvsJ,WAAY5d,KAAKsrK,WAC5DtrK,KAAKuqK,aAAeJ,GAAuBoB,YAAWvrK,KAAKwrK,WAEpExrK,KAAKyrK,cAEDzrK,KAAKyqK,cAAgBN,GAAuBvsJ,MAAM5d,KAAK2qK,UAAUngK,MAAM,OAE3ExK,KAAK2qK,UAAUp/J,KAChB,G,CAIc,WAAA8/J,G,0CAEb,OAAO,IAAItoK,SAAQ,CAAC3F,EAASD,KAE5B,IAAI+rC,EAAO,GACXlpC,KAAK0qK,SAAS3mK,GAAG,QAASkF,GAAiBigC,GAAQjgC,IACnDjJ,KAAK0qK,SAAS3mK,GAAG,OAAO,KAGvB,MAAY,mCAEX,IAEC,IAAIojC,EAAUvpB,KAAKqf,MAAMiM,SACnBlpC,KAAK0rK,eAAe1rK,KAAKua,QAAS4sB,GACxC/pC,GACD,CACA,MAAOgwB,GAAKjwB,EAAOiwB,EAAI,CACxB,GAAE,EATF,EASI,GACH,GAEJ,G,CAEc,QAAAk+I,G,0CAEb,MAAMl5J,EAAc,EAAQ,IAC5B,OAAO,IAAIrP,SAAQ,CAAC3F,EAASD,KAE5B,IAAIuS,EAAQ0C,EAAYD,aACxBnS,KAAK0qK,SAASvgK,KAAKuF,EAAM1E,OAEzB0E,EAAM3L,GAAG,QAAS4hD,IAEjB,IAAIxe,EAAUwe,EAAc,MAE5B,MAAY,mCAEX,UAEO3lD,KAAK0rK,eAAe1rK,KAAKua,QAAS4sB,EACzC,CACA,MAAO/Z,GAAKjwB,EAAOiwB,EAAI,CACxB,GAAE,EAPF,EAOI,IAEL1d,EAAM3L,GAAG,OAAO,IAAM3G,KAAU,GAElC,G,CAEc,OAAAouK,G,0CAEb,IAAIpO,EAAS,IAAIkM,GAEjB,OAAO,IAAIvmK,SAAQ,CAAC3F,EAASD,KAE5B6C,KAAK0qK,SAAS3mK,GAAG,QAASkF,IAEzBm0J,EAAOoM,KAAKvgK,GACZ,IAAK,IAAIk+B,EAAUi2H,EAAOsM,OAAQviI,EAASA,EAAUi2H,EAAOsM,OAAQ1pK,KAAK0rK,eAAe1rK,KAAKua,QAAS4sB,EAAQ,IAE/GnnC,KAAK0qK,SAAS3mK,GAAG,OAAO,KAGvB,MAAY,mCAEX,IAEC,IAAIojC,EAAUi2H,EAAOsM,MAAK,GACtBviI,UAAennC,KAAK0rK,eAAe1rK,KAAKua,QAAS4sB,IACrD/pC,GACD,CACA,MAAOgwB,GAAKjwB,EAAOiwB,EAAI,CACxB,GAAE,EATF,EASI,GACH,GAEJ,G,CAIc,cAAAs+I,CAAe71J,EAAYsxB,G,0CAExC,GAA8B,MAA1BA,EAAQC,eAAwB,KAAM,kBAE1C,IAAIn+B,EAAe,KAEnB,GAAIjJ,KAAKyqK,cAAgBN,GAAuBiB,QAG/CniK,EADW,IAAIi+B,GAAQC,GAASa,YACjB,UAEX,GAAIhoC,KAAKyqK,cAAgBN,GAAuBvsJ,KAEpD5d,KAAK2qK,UAAUngK,MAAa,GAAPqL,EAAW,IAAM,KAEtC5M,EADW2U,KAAKC,UAAUspB,GACX,UAEX,GAAInnC,KAAKyqK,cAAgBN,GAAuBoB,IACrD,CACC,IAAInO,EAAS,IAAIhD,GACjBgD,EAAO7nJ,OAAO4xB,GAEdl+B,EADam0J,EAAO5yJ,QACH,IAClB,MACK,GAAIxK,KAAKyqK,cAAgBN,GAAuBY,OACrD,CACC,IAAK9iB,GAAMC,cAAe,KAAM,gEAChC,IAAI0P,EAAS,IAAID,GAAaxwH,SACxBywH,EAAOE,YACbF,EAAOI,YACP/uJ,EAAQ2uJ,EAAO7rF,YAAc,IAC9B,MACK,GAAI/rE,KAAKyqK,cAAgBN,GAAuBc,cACrD,CACC,IAAKhjB,GAAMC,cAAe,KAAM,gEAChC,IAAI0P,EAAS,IAAID,GAAaxwH,SACxBywH,EAAOE,YAEb7uJ,EADc2uJ,EAAOoB,kBACH,IACnB,MACK,GAAIh5J,KAAKyqK,cAAgBN,GAAuBe,eACrD,CACC,IAAKjjB,GAAMC,cAAe,KAAM,gEAChC,IAAI0P,EAAS,IAAID,GAAaxwH,SACxBywH,EAAOE,YAEb7uJ,EADc2uJ,EAAOqB,mBACH,IACnB,MACK,GAAIj5J,KAAKyqK,cAAgBN,GAAuBa,IACrD,CACC,IAAI1gI,EAASV,GAAaY,qBAAqB,IAC3C4yC,EAAU,IAAIonD,GAAmB,EAAG,EAAGl6F,EAAO5gC,KAAKmgC,YACnD2oD,EAAS,IAAI4B,GAAe,IAAIltD,GAAQC,GAAUi2C,EAAS9yC,GAC/DkoD,EAAOpU,UAEP,IAAI8qD,EAAM,IAAIlvC,GACd,IAAI62D,GAAYr+D,EAAQ02C,GAAKxnC,OAC7BwnC,EAAI/2G,YAGJlpB,EAFUigI,EAAI/pC,WAAU,GAEV,IACf,CAEAn/F,KAAK6qK,OAAOruK,KAAK,CAACqZ,MAAK5M,UACvBjJ,KAAKyrK,aACN,G,CAIQ,WAAAA,GAIP,IAFIzrK,KAAK6qK,OAAOjsK,OAAS,GAAGoB,KAAK6qK,OAAOnxJ,MAAK,CAACk6D,EAAIC,IAAOD,EAAG/9D,IAAMg+D,EAAGh+D,MAE9D7V,KAAK6qK,OAAOjsK,OAAS,GAAK,EAAIwY,MAAMpX,KAAK6qK,QAAQh1J,KAAO7V,KAAK4qK,WACpE,CACC,IAAI,MAAC3hK,GAASjJ,KAAK6qK,OAAOxrJ,QACtBpW,GAAOjJ,KAAK2qK,UAAUngK,MAAMvB,GAChCjJ,KAAK4qK,WACN,CACD,ECzPM,MAAMe,GAcZ,WAAAzuK,CAAYoE,GAZJ,KAAAgpK,UAAmB,KACnB,KAAAC,YAAqB,KACrB,KAAAC,WAAoB,KACpB,KAAAC,aAAsB,KACtB,KAAA1C,UAAmB,KACnB,KAAAC,WAAoB,KACpB,KAAAC,YAAqB,KACrB,KAAAtH,SAAkB,KAClB,KAAAC,YAAa,EACb,KAAAgL,UAAW,EACX,KAAA1D,SAAU,EAIjBlK,IAAa,GAMb,IAAK,IAAIluJ,EAAI,EAAGA,EAAIxO,EAAK1C,OAAQkR,IAEjB,MAAXxO,EAAKwO,IAAcA,EAAI,EAAIxO,EAAK1C,OAAQoB,KAAKsqK,UAAYhpK,IAAOwO,GAChD,OAAXxO,EAAKwO,IAAeA,EAAI,EAAIxO,EAAK1C,OAAQoB,KAAKuqK,YAAcjpK,IAAOwO,GACxD,MAAXxO,EAAKwO,IAAcA,EAAI,EAAIxO,EAAK1C,OAAQoB,KAAKwqK,WAAalpK,IAAOwO,GACtD,OAAXxO,EAAKwO,IAAeA,EAAI,EAAIxO,EAAK1C,OAAQoB,KAAKyqK,aAAenpK,IAAOwO,GACzD,WAAXxO,EAAKwO,IAAmBA,EAAI,EAAIxO,EAAK1C,OAAQoB,KAAK+nK,UAAYzmK,IAAOwO,GAC1D,YAAXxO,EAAKwO,IAAoBA,EAAI,EAAIxO,EAAK1C,OAAQoB,KAAKgoK,WAAa1mK,IAAOwO,GAC5D,aAAXxO,EAAKwO,IAAqBA,EAAI,EAAIxO,EAAK1C,OAAQoB,KAAKioK,YAAc3mK,IAAOwO,GAC9D,UAAXxO,EAAKwO,IAAkBA,EAAI,EAAIxO,EAAK1C,OAAQoB,KAAK2gK,SAAWr/J,IAAOwO,GACxD,YAAXxO,EAAKwO,GAAkB9P,KAAK4gK,YAAa,EAC9B,WAAXt/J,EAAKwO,IAAmBA,EAAIxO,EAAK1C,OAAS,EAAGqpJ,GAAMqX,cAAch+J,IAAOwO,IAC7D,MAAXxO,EAAKwO,IAAyB,SAAXxO,EAAKwO,IAA4B,UAAXxO,EAAKwO,GAAgB9P,KAAK4rK,UAAW,EACnE,aAAXtqK,EAAKwO,KAAmB9P,KAAKkoK,SAAU,EAElD,CAEa,GAAA2D,G,qCAER7rK,KAAK+nK,gBAAiB,IAAID,GAAa9nK,KAAK+nK,UAAW/nK,KAAKgoK,WAAYhoK,KAAKioK,YAAajoK,KAAKkoK,SAASlnK,OACnGhB,KAAK2gK,eAAgB,IAAID,GAAW1gK,KAAK2gK,SAAU3gK,KAAK4gK,YAAY5/J,OACpEhB,KAAKsqK,WAAatqK,KAAKuqK,aAAevqK,KAAKwqK,YAAcxqK,KAAKyqK,mBAAoB,IAAIJ,GAAkBrqK,KAAKsqK,UAAWtqK,KAAKuqK,YAAavqK,KAAKwqK,WAAYxqK,KAAKyqK,cAAczpK,QAC9KhB,KAAK4rK,UAGb5rK,KAAKi/I,IAAI,kBAHcj/I,KAAK8rK,YAM9B,E,+RAIQ,SAAAA,GAEPrkK,QAAQw3I,IAAI,0CACZx3I,QAAQw3I,IAAI,mEACZx3I,QAAQw3I,IAAI,6DACZx3I,QAAQw3I,IAAI,qEACZx3I,QAAQw3I,IAAI,8DACZx3I,QAAQw3I,IAAI,yEACZx3I,QAAQw3I,IAAI,qEACZx3I,QAAQw3I,IAAI,2EACZx3I,QAAQw3I,IAAI,mEACZx3I,QAAQw3I,IAAI,2DACZx3I,QAAQw3I,IAAI,qEACZx3I,QAAQw3I,IAAI,oBACZ,IAAK,IAAI6rB,KAAOV,GAA8B3iK,QAAQw3I,IAAI,OAAS6rB,EACpE,CAEQ,GAAA7rB,CAAIz+H,GAEPxgB,KAAKkoK,SAASzgK,QAAQw3I,IAAIz+H,EAC/B,E","sources":["webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/get-electron-binding.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/module-names.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/type-utils.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/callbacks-registry.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/index.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/remote.js","webpack://Mixtures/./node_modules/@electron/remote/renderer/index.js","webpack://Mixtures/./node_modules/stream-chain/index.js","webpack://Mixtures/./node_modules/stream-json/Assembler.js","webpack://Mixtures/./node_modules/stream-json/Parser.js","webpack://Mixtures/./node_modules/stream-json/streamers/StreamArray.js","webpack://Mixtures/./node_modules/stream-json/streamers/StreamBase.js","webpack://Mixtures/./node_modules/stream-json/utils/Utf8Stream.js","webpack://Mixtures/./node_modules/stream-json/utils/withParser.js","webpack://Mixtures/external node-commonjs \"child_process\"","webpack://Mixtures/external node-commonjs \"electron\"","webpack://Mixtures/external node-commonjs \"events\"","webpack://Mixtures/external node-commonjs \"https\"","webpack://Mixtures/external node-commonjs \"process\"","webpack://Mixtures/external node-commonjs \"stream\"","webpack://Mixtures/external node-commonjs \"string_decoder\"","webpack://Mixtures/webpack/bootstrap","webpack://Mixtures/webpack/runtime/define property getters","webpack://Mixtures/webpack/runtime/hasOwnProperty shorthand","webpack://Mixtures/webpack/runtime/make namespace object","webpack://Mixtures/./node_modules/webmolkit/util/Vec.js","webpack://Mixtures/./node_modules/webmolkit/util/Matrix.js","webpack://Mixtures/./node_modules/webmolkit/util/util.js","webpack://Mixtures/./node_modules/webmolkit/util/Triangulation2D.js","webpack://Mixtures/./node_modules/webmolkit/util/Geom.js","webpack://Mixtures/./node_modules/webmolkit/util/XML.js","webpack://Mixtures/./node_modules/webmolkit/util/dom.js","webpack://Mixtures/./node_modules/webmolkit/util/Theme.js","webpack://Mixtures/./node_modules/webmolkit/ui/Tooltip.js","webpack://Mixtures/./node_modules/webmolkit/ui/Widget.js","webpack://Mixtures/./src/data/Mixture.ts","webpack://Mixtures/./src/data/Mixfile.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/Rendering.js","webpack://Mixtures/./node_modules/webmolkit/data/Graph.js","webpack://Mixtures/./node_modules/webmolkit/data/BondArtifact.js","webpack://Mixtures/./node_modules/webmolkit/data/Chemistry.js","webpack://Mixtures/./node_modules/webmolkit/calc/ResonanceRemover.js","webpack://Mixtures/./node_modules/webmolkit/data/DataSheet.js","webpack://Mixtures/./node_modules/webmolkit/data/ForeignMolecule.js","webpack://Mixtures/./node_modules/webmolkit/data/PolymerBlock.js","webpack://Mixtures/./node_modules/webmolkit/data/SketchUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/QueryUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/MolUtil.js","webpack://Mixtures/./node_modules/webmolkit/data/StereoGroup.js","webpack://Mixtures/./node_modules/webmolkit/data/MDLReader.js","webpack://Mixtures/./node_modules/webmolkit/data/MDLWriter.js","webpack://Mixtures/./node_modules/webmolkit/data/MoleculeStream.js","webpack://Mixtures/./node_modules/webmolkit/data/Molecule.js","webpack://Mixtures/./node_modules/webmolkit/data/CoordUtil.js","webpack://Mixtures/./node_modules/webmolkit/util/FitRotatedEllipse.js","webpack://Mixtures/./node_modules/webmolkit/gfx/FontData.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMolecule.js","webpack://Mixtures/./node_modules/webmolkit/data/OntologyTree.js","webpack://Mixtures/./src/mixture/SquarePacking.ts","webpack://Mixtures/./src/mixture/ArrangeMixture.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/MetaVector.js","webpack://Mixtures/./node_modules/webmolkit/ui/ButtonView.js","webpack://Mixtures/./node_modules/webmolkit/data/DotPath.js","webpack://Mixtures/./node_modules/webmolkit/data/DataSheetStream.js","webpack://Mixtures/./node_modules/webmolkit/gfx/DrawMolecule.js","webpack://Mixtures/./node_modules/webmolkit/ui/ButtonBank.js","webpack://Mixtures/./node_modules/webmolkit/data/Stereochemistry.js","webpack://Mixtures/./node_modules/webmolkit/data/MetaMolecule.js","webpack://Mixtures/./node_modules/webmolkit/calc/CircularFingerprints.js","webpack://Mixtures/./node_modules/webmolkit/data/AbbrevContainer.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MetalLigate.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateFusion.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MoleculeActivity.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/CommandBank.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/ContextSketch.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/DrawCanvas.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/GeomWidget.js","webpack://Mixtures/./node_modules/webmolkit/dialog/Dialog.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMeasurement.js","webpack://Mixtures/./node_modules/webmolkit/ui/ClipboardProxy.js","webpack://Mixtures/./node_modules/webmolkit/ui/OptionList.js","webpack://Mixtures/./node_modules/webmolkit/ui/TabBar.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/ExtraFieldsWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/PeriodicTableWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/QueryFieldsWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditAtom.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditBond.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditPolymer.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateBank.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/ToolBank.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/Sketcher.js","webpack://Mixtures/./src/data/Units.ts","webpack://Mixtures/./node_modules/webmolkit/dialog/EditCompound.js","webpack://Mixtures/./src/mixture/KeyValueWidget.ts","webpack://Mixtures/./node_modules/webmolkit/ui/Popup.js","webpack://Mixtures/./src/mixture/MetadataWidget.ts","webpack://Mixtures/./src/mixture/EditComponent.ts","webpack://Mixtures/./src/lookup/PubChemSearch.ts","webpack://Mixtures/./src/lookup/LookupCompoundDialog.ts","webpack://Mixtures/./src/lookup/ExtractCTABComponent.ts","webpack://Mixtures/./src/data/NormMixture.ts","webpack://Mixtures/./src/mixture/DrawMixture.ts","webpack://Mixtures/./src/mixture/EditMixture.ts","webpack://Mixtures/./src/main/MenuBanner.ts","webpack://Mixtures/./src/main/MainPanel.ts","webpack://Mixtures/./src/mixture/ExportMInChI.ts","webpack://Mixtures/./src/mixture/ExportSDFile.ts","webpack://Mixtures/external node-commonjs \"fs\"","webpack://Mixtures/external node-commonjs \"path\"","webpack://Mixtures/./src/main/MixturePanel.ts","webpack://Mixtures/./node_modules/webmolkit/ui/MenuProxy.js","webpack://Mixtures/./src/startup.ts","webpack://Mixtures/./src/data/InChI.ts","webpack://Mixtures/./src/data/MixtureCollection.ts","webpack://Mixtures/./src/cmdline/RenderHTML.ts","webpack://Mixtures/./node_modules/webmolkit/aspect/Aspect.js","webpack://Mixtures/./node_modules/webmolkit/aspect/AspectList.js","webpack://Mixtures/./node_modules/webmolkit/aspect/AssayProvenance.js","webpack://Mixtures/./node_modules/webmolkit/aspect/MeasurementData.js","webpack://Mixtures/./node_modules/webmolkit/aspect/Mixture.js","webpack://Mixtures/./src/cmdline/TableExtract.ts","webpack://Mixtures/./src/mixture/ImportSDFile.ts","webpack://Mixtures/./src/cmdline/TransformMixtures.ts","webpack://Mixtures/./src/cmdline/Console.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElectronBinding = void 0;\nconst getElectronBinding = (name) => {\n    if (process._linkedBinding) {\n        return process._linkedBinding('electron_common_' + name);\n    }\n    else if (process.electronBinding) {\n        return process.electronBinding(name);\n    }\n    else {\n        return null;\n    }\n};\nexports.getElectronBinding = getElectronBinding;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.browserModuleNames = exports.commonModuleNames = void 0;\nconst get_electron_binding_1 = require(\"./get-electron-binding\");\nexports.commonModuleNames = [\n    'clipboard',\n    'nativeImage',\n    'shell',\n];\nexports.browserModuleNames = [\n    'app',\n    'autoUpdater',\n    'BaseWindow',\n    'BrowserView',\n    'BrowserWindow',\n    'contentTracing',\n    'crashReporter',\n    'dialog',\n    'globalShortcut',\n    'ipcMain',\n    'inAppPurchase',\n    'Menu',\n    'MenuItem',\n    'nativeTheme',\n    'net',\n    'netLog',\n    'MessageChannelMain',\n    'Notification',\n    'powerMonitor',\n    'powerSaveBlocker',\n    'protocol',\n    'pushNotifications',\n    'safeStorage',\n    'screen',\n    'session',\n    'ShareMenu',\n    'systemPreferences',\n    'TopLevelWindow',\n    'TouchBar',\n    'Tray',\n    'utilityProcess',\n    'View',\n    'webContents',\n    'WebContentsView',\n    'webFrameMain',\n].concat(exports.commonModuleNames);\nconst features = get_electron_binding_1.getElectronBinding('features');\nif (!features || !features.isDesktopCapturerEnabled || features.isDesktopCapturerEnabled()) {\n    exports.browserModuleNames.push('desktopCapturer');\n}\nif (!features || features.isViewApiEnabled()) {\n    exports.browserModuleNames.push('ImageView');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = exports.serialize = exports.isSerializableObject = exports.isPromise = void 0;\nconst electron_1 = require(\"electron\");\nfunction isPromise(val) {\n    return (val &&\n        val.then &&\n        val.then instanceof Function &&\n        val.constructor &&\n        val.constructor.reject &&\n        val.constructor.reject instanceof Function &&\n        val.constructor.resolve &&\n        val.constructor.resolve instanceof Function);\n}\nexports.isPromise = isPromise;\nconst serializableTypes = [\n    Boolean,\n    Number,\n    String,\n    Date,\n    Error,\n    RegExp,\n    ArrayBuffer\n];\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm#Supported_types\nfunction isSerializableObject(value) {\n    return value === null || ArrayBuffer.isView(value) || serializableTypes.some(type => value instanceof type);\n}\nexports.isSerializableObject = isSerializableObject;\nconst objectMap = function (source, mapper) {\n    const sourceEntries = Object.entries(source);\n    const targetEntries = sourceEntries.map(([key, val]) => [key, mapper(val)]);\n    return Object.fromEntries(targetEntries);\n};\nfunction serializeNativeImage(image) {\n    const representations = [];\n    const scaleFactors = image.getScaleFactors();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (scaleFactors.length === 1) {\n        const scaleFactor = scaleFactors[0];\n        const size = image.getSize(scaleFactor);\n        const buffer = image.toBitmap({ scaleFactor });\n        representations.push({ scaleFactor, size, buffer });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const scaleFactor of scaleFactors) {\n            const size = image.getSize(scaleFactor);\n            const dataURL = image.toDataURL({ scaleFactor });\n            representations.push({ scaleFactor, size, dataURL });\n        }\n    }\n    return { __ELECTRON_SERIALIZED_NativeImage__: true, representations };\n}\nfunction deserializeNativeImage(value) {\n    const image = electron_1.nativeImage.createEmpty();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (value.representations.length === 1) {\n        const { buffer, size, scaleFactor } = value.representations[0];\n        const { width, height } = size;\n        image.addRepresentation({ buffer, scaleFactor, width, height });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const rep of value.representations) {\n            const { dataURL, size, scaleFactor } = rep;\n            const { width, height } = size;\n            image.addRepresentation({ dataURL, scaleFactor, width, height });\n        }\n    }\n    return image;\n}\nfunction serialize(value) {\n    if (value && value.constructor && value.constructor.name === 'NativeImage') {\n        return serializeNativeImage(value);\n    }\n    if (Array.isArray(value)) {\n        return value.map(serialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, serialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.serialize = serialize;\nfunction deserialize(value) {\n    if (value && value.__ELECTRON_SERIALIZED_NativeImage__) {\n        return deserializeNativeImage(value);\n    }\n    else if (Array.isArray(value)) {\n        return value.map(deserialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, deserialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.deserialize = deserialize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallbacksRegistry = void 0;\nclass CallbacksRegistry {\n    constructor() {\n        this.nextId = 0;\n        this.callbacks = {};\n        this.callbackIds = new WeakMap();\n        this.locationInfo = new WeakMap();\n    }\n    add(callback) {\n        // The callback is already added.\n        let id = this.callbackIds.get(callback);\n        if (id != null)\n            return id;\n        id = this.nextId += 1;\n        this.callbacks[id] = callback;\n        this.callbackIds.set(callback, id);\n        // Capture the location of the function and put it in the ID string,\n        // so that release errors can be tracked down easily.\n        const regexp = /at (.*)/gi;\n        const stackString = (new Error()).stack;\n        if (!stackString)\n            return id;\n        let filenameAndLine;\n        let match;\n        while ((match = regexp.exec(stackString)) !== null) {\n            const location = match[1];\n            if (location.includes('(native)'))\n                continue;\n            if (location.includes('(<anonymous>)'))\n                continue;\n            if (location.includes('callbacks-registry.js'))\n                continue;\n            if (location.includes('remote.js'))\n                continue;\n            if (location.includes('@electron/remote/dist'))\n                continue;\n            const ref = /([^/^)]*)\\)?$/gi.exec(location);\n            if (ref)\n                filenameAndLine = ref[1];\n            break;\n        }\n        this.locationInfo.set(callback, filenameAndLine);\n        return id;\n    }\n    get(id) {\n        return this.callbacks[id] || function () { };\n    }\n    getLocation(callback) {\n        return this.locationInfo.get(callback);\n    }\n    apply(id, ...args) {\n        return this.get(id).apply(global, ...args);\n    }\n    remove(id) {\n        const callback = this.callbacks[id];\n        if (callback) {\n            this.callbackIds.delete(callback);\n            delete this.callbacks[id];\n        }\n    }\n}\nexports.CallbacksRegistry = CallbacksRegistry;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nif (process.type === 'browser')\n    throw new Error(`\"@electron/remote\" cannot be required in the browser process. Instead require(\"@electron/remote/main\").`);\n__exportStar(require(\"./remote\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFunctionWithReturnValue = exports.getGlobal = exports.getCurrentWebContents = exports.getCurrentWindow = exports.getBuiltin = void 0;\nconst callbacks_registry_1 = require(\"./callbacks-registry\");\nconst type_utils_1 = require(\"../common/type-utils\");\nconst electron_1 = require(\"electron\");\nconst module_names_1 = require(\"../common/module-names\");\nconst get_electron_binding_1 = require(\"../common/get-electron-binding\");\nconst { Promise } = global;\nconst callbacksRegistry = new callbacks_registry_1.CallbacksRegistry();\nconst remoteObjectCache = new Map();\nconst finalizationRegistry = new FinalizationRegistry((id) => {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined && ref.deref() === undefined) {\n        remoteObjectCache.delete(id);\n        electron_1.ipcRenderer.send(\"REMOTE_BROWSER_DEREFERENCE\" /* BROWSER_DEREFERENCE */, contextId, id, 0);\n    }\n});\nconst electronIds = new WeakMap();\nconst isReturnValue = new WeakSet();\nfunction getCachedRemoteObject(id) {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined) {\n        const deref = ref.deref();\n        if (deref !== undefined)\n            return deref;\n    }\n}\nfunction setCachedRemoteObject(id, value) {\n    const wr = new WeakRef(value);\n    remoteObjectCache.set(id, wr);\n    finalizationRegistry.register(value, id);\n    return value;\n}\nfunction getContextId() {\n    const v8Util = get_electron_binding_1.getElectronBinding('v8_util');\n    if (v8Util) {\n        return v8Util.getHiddenValue(global, 'contextId');\n    }\n    else {\n        throw new Error('Electron >=v13.0.0-beta.6 required to support sandboxed renderers');\n    }\n}\n// An unique ID that can represent current context.\nconst contextId = process.contextId || getContextId();\n// Notify the main process when current context is going to be released.\n// Note that when the renderer process is destroyed, the message may not be\n// sent, we also listen to the \"render-view-deleted\" event in the main process\n// to guard that situation.\nprocess.on('exit', () => {\n    const command = \"REMOTE_BROWSER_CONTEXT_RELEASE\" /* BROWSER_CONTEXT_RELEASE */;\n    electron_1.ipcRenderer.send(command, contextId);\n});\nconst IS_REMOTE_PROXY = Symbol('is-remote-proxy');\n// Convert the arguments object into an array of meta data.\nfunction wrapArgs(args, visited = new Set()) {\n    const valueToMeta = (value) => {\n        // Check for circular reference.\n        if (visited.has(value)) {\n            return {\n                type: 'value',\n                value: null\n            };\n        }\n        if (value && value.constructor && value.constructor.name === 'NativeImage') {\n            return { type: 'nativeimage', value: type_utils_1.serialize(value) };\n        }\n        else if (Array.isArray(value)) {\n            visited.add(value);\n            const meta = {\n                type: 'array',\n                value: wrapArgs(value, visited)\n            };\n            visited.delete(value);\n            return meta;\n        }\n        else if (value instanceof Buffer) {\n            return {\n                type: 'buffer',\n                value\n            };\n        }\n        else if (type_utils_1.isSerializableObject(value)) {\n            return {\n                type: 'value',\n                value\n            };\n        }\n        else if (typeof value === 'object') {\n            if (type_utils_1.isPromise(value)) {\n                return {\n                    type: 'promise',\n                    then: valueToMeta(function (onFulfilled, onRejected) {\n                        value.then(onFulfilled, onRejected);\n                    })\n                };\n            }\n            else if (electronIds.has(value)) {\n                return {\n                    type: 'remote-object',\n                    id: electronIds.get(value)\n                };\n            }\n            const meta = {\n                type: 'object',\n                name: value.constructor ? value.constructor.name : '',\n                members: []\n            };\n            visited.add(value);\n            for (const prop in value) { // eslint-disable-line guard-for-in\n                meta.members.push({\n                    name: prop,\n                    value: valueToMeta(value[prop])\n                });\n            }\n            visited.delete(value);\n            return meta;\n        }\n        else if (typeof value === 'function' && isReturnValue.has(value)) {\n            return {\n                type: 'function-with-return-value',\n                value: valueToMeta(value())\n            };\n        }\n        else if (typeof value === 'function') {\n            return {\n                type: 'function',\n                id: callbacksRegistry.add(value),\n                location: callbacksRegistry.getLocation(value),\n                length: value.length\n            };\n        }\n        else {\n            return {\n                type: 'value',\n                value\n            };\n        }\n    };\n    return args.map(valueToMeta);\n}\n// Populate object's members from descriptors.\n// The |ref| will be kept referenced by |members|.\n// This matches |getObjectMemebers| in rpc-server.\nfunction setObjectMembers(ref, object, metaId, members) {\n    if (!Array.isArray(members))\n        return;\n    for (const member of members) {\n        if (Object.prototype.hasOwnProperty.call(object, member.name))\n            continue;\n        const descriptor = { enumerable: member.enumerable };\n        if (member.type === 'method') {\n            const remoteMemberFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteMemberFunction) {\n                    command = \"REMOTE_BROWSER_MEMBER_CONSTRUCTOR\" /* BROWSER_MEMBER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_MEMBER_CALL\" /* BROWSER_MEMBER_CALL */;\n                }\n                const ret = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, wrapArgs(args));\n                return metaToValue(ret);\n            };\n            let descriptorFunction = proxyFunctionProperties(remoteMemberFunction, metaId, member.name);\n            descriptor.get = () => {\n                descriptorFunction.ref = ref; // The member should reference its object.\n                return descriptorFunction;\n            };\n            // Enable monkey-patch the method\n            descriptor.set = (value) => {\n                descriptorFunction = value;\n                return value;\n            };\n            descriptor.configurable = true;\n        }\n        else if (member.type === 'get') {\n            descriptor.get = () => {\n                const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n                const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name);\n                return metaToValue(meta);\n            };\n            if (member.writable) {\n                descriptor.set = (value) => {\n                    const args = wrapArgs([value]);\n                    const command = \"REMOTE_BROWSER_MEMBER_SET\" /* BROWSER_MEMBER_SET */;\n                    const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, args);\n                    if (meta != null)\n                        metaToValue(meta);\n                    return value;\n                };\n            }\n        }\n        Object.defineProperty(object, member.name, descriptor);\n    }\n}\n// Populate object's prototype from descriptor.\n// This matches |getObjectPrototype| in rpc-server.\nfunction setObjectPrototype(ref, object, metaId, descriptor) {\n    if (descriptor === null)\n        return;\n    const proto = {};\n    setObjectMembers(ref, proto, metaId, descriptor.members);\n    setObjectPrototype(ref, proto, metaId, descriptor.proto);\n    Object.setPrototypeOf(object, proto);\n}\n// Wrap function in Proxy for accessing remote properties\nfunction proxyFunctionProperties(remoteMemberFunction, metaId, name) {\n    let loaded = false;\n    // Lazily load function properties\n    const loadRemoteProperties = () => {\n        if (loaded)\n            return;\n        loaded = true;\n        const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n        const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, name);\n        setObjectMembers(remoteMemberFunction, remoteMemberFunction, meta.id, meta.members);\n    };\n    return new Proxy(remoteMemberFunction, {\n        set: (target, property, value) => {\n            if (property !== 'ref')\n                loadRemoteProperties();\n            target[property] = value;\n            return true;\n        },\n        get: (target, property) => {\n            if (property === IS_REMOTE_PROXY)\n                return true;\n            if (!Object.prototype.hasOwnProperty.call(target, property))\n                loadRemoteProperties();\n            const value = target[property];\n            if (property === 'toString' && typeof value === 'function') {\n                return value.bind(target);\n            }\n            return value;\n        },\n        ownKeys: (target) => {\n            loadRemoteProperties();\n            return Object.getOwnPropertyNames(target);\n        },\n        getOwnPropertyDescriptor: (target, property) => {\n            const descriptor = Object.getOwnPropertyDescriptor(target, property);\n            if (descriptor)\n                return descriptor;\n            loadRemoteProperties();\n            return Object.getOwnPropertyDescriptor(target, property);\n        }\n    });\n}\n// Convert meta data from browser into real value.\nfunction metaToValue(meta) {\n    if (meta.type === 'value') {\n        return meta.value;\n    }\n    else if (meta.type === 'array') {\n        return meta.members.map((member) => metaToValue(member));\n    }\n    else if (meta.type === 'nativeimage') {\n        return type_utils_1.deserialize(meta.value);\n    }\n    else if (meta.type === 'buffer') {\n        return Buffer.from(meta.value.buffer, meta.value.byteOffset, meta.value.byteLength);\n    }\n    else if (meta.type === 'promise') {\n        return Promise.resolve({ then: metaToValue(meta.then) });\n    }\n    else if (meta.type === 'error') {\n        return metaToError(meta);\n    }\n    else if (meta.type === 'exception') {\n        if (meta.value.type === 'error') {\n            throw metaToError(meta.value);\n        }\n        else {\n            throw new Error(`Unexpected value type in exception: ${meta.value.type}`);\n        }\n    }\n    else {\n        let ret;\n        if ('id' in meta) {\n            const cached = getCachedRemoteObject(meta.id);\n            if (cached !== undefined) {\n                return cached;\n            }\n        }\n        // A shadow class to represent the remote function object.\n        if (meta.type === 'function') {\n            const remoteFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteFunction) {\n                    command = \"REMOTE_BROWSER_CONSTRUCTOR\" /* BROWSER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_FUNCTION_CALL\" /* BROWSER_FUNCTION_CALL */;\n                }\n                const obj = electron_1.ipcRenderer.sendSync(command, contextId, meta.id, wrapArgs(args));\n                return metaToValue(obj);\n            };\n            ret = remoteFunction;\n        }\n        else {\n            ret = {};\n        }\n        setObjectMembers(ret, ret, meta.id, meta.members);\n        setObjectPrototype(ret, ret, meta.id, meta.proto);\n        if (ret.constructor && ret.constructor[IS_REMOTE_PROXY]) {\n            Object.defineProperty(ret.constructor, 'name', { value: meta.name });\n        }\n        // Track delegate obj's lifetime & tell browser to clean up when object is GCed.\n        electronIds.set(ret, meta.id);\n        setCachedRemoteObject(meta.id, ret);\n        return ret;\n    }\n}\nfunction metaToError(meta) {\n    const obj = meta.value;\n    for (const { name, value } of meta.members) {\n        obj[name] = metaToValue(value);\n    }\n    return obj;\n}\nfunction handleMessage(channel, handler) {\n    electron_1.ipcRenderer.on(channel, (event, passedContextId, id, ...args) => {\n        if (event.senderId !== 0) {\n            console.error(`Message ${channel} sent by unexpected WebContents (${event.senderId})`);\n            return;\n        }\n        if (passedContextId === contextId) {\n            handler(id, ...args);\n        }\n        else {\n            // Message sent to an un-exist context, notify the error to main process.\n            electron_1.ipcRenderer.send(\"REMOTE_BROWSER_WRONG_CONTEXT_ERROR\" /* BROWSER_WRONG_CONTEXT_ERROR */, contextId, passedContextId, id);\n        }\n    });\n}\nconst enableStacks = process.argv.includes('--enable-api-filtering-logging');\nfunction getCurrentStack() {\n    const target = { stack: undefined };\n    if (enableStacks) {\n        Error.captureStackTrace(target, getCurrentStack);\n    }\n    return target.stack;\n}\n// Browser calls a callback in renderer.\nhandleMessage(\"REMOTE_RENDERER_CALLBACK\" /* RENDERER_CALLBACK */, (id, args) => {\n    callbacksRegistry.apply(id, metaToValue(args));\n});\n// A callback in browser is released.\nhandleMessage(\"REMOTE_RENDERER_RELEASE_CALLBACK\" /* RENDERER_RELEASE_CALLBACK */, (id) => {\n    callbacksRegistry.remove(id);\n});\nexports.require = (module) => {\n    const command = \"REMOTE_BROWSER_REQUIRE\" /* BROWSER_REQUIRE */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n};\n// Alias to remote.require('electron').xxx.\nfunction getBuiltin(module) {\n    const command = \"REMOTE_BROWSER_GET_BUILTIN\" /* BROWSER_GET_BUILTIN */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getBuiltin = getBuiltin;\nfunction getCurrentWindow() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WINDOW\" /* BROWSER_GET_CURRENT_WINDOW */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWindow = getCurrentWindow;\n// Get current WebContents object.\nfunction getCurrentWebContents() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WEB_CONTENTS\" /* BROWSER_GET_CURRENT_WEB_CONTENTS */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWebContents = getCurrentWebContents;\n// Get a global object in browser.\nfunction getGlobal(name) {\n    const command = \"REMOTE_BROWSER_GET_GLOBAL\" /* BROWSER_GET_GLOBAL */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, name, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getGlobal = getGlobal;\n// Get the process object in browser.\nObject.defineProperty(exports, 'process', {\n    enumerable: true,\n    get: () => exports.getGlobal('process')\n});\n// Create a function that will return the specified value when called in browser.\nfunction createFunctionWithReturnValue(returnValue) {\n    const func = () => returnValue;\n    isReturnValue.add(func);\n    return func;\n}\nexports.createFunctionWithReturnValue = createFunctionWithReturnValue;\nconst addBuiltinProperty = (name) => {\n    Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: () => exports.getBuiltin(name)\n    });\n};\nmodule_names_1.browserModuleNames\n    .forEach(addBuiltinProperty);\n","module.exports = require('../dist/src/renderer')\n","'use strict';\n\nconst {Readable, Writable, Duplex, Transform} = require('stream');\n\nconst none = Symbol.for('object-stream.none');\nconst finalSymbol = Symbol.for('object-stream.final');\nconst manySymbol = Symbol.for('object-stream.many');\n\nconst final = value => ({[finalSymbol]: value});\nconst many = values => ({[manySymbol]: values});\n\nconst isFinal = o => o && typeof o == 'object' && finalSymbol in o;\nconst isMany = o => o && typeof o == 'object' && manySymbol in o;\n\nconst getFinalValue = o => o[finalSymbol];\nconst getManyValues = o => o[manySymbol];\n\nconst runAsyncGenerator = async (gen, stream) => {\n  for (;;) {\n    let data = gen.next();\n    if (data && typeof data.then == 'function') {\n      data = await data;\n    }\n    if (data.done) break;\n    let value = data.value;\n    if (value && typeof value.then == 'function') {\n      value = await value;\n    }\n    Chain.sanitize(value, stream);\n  }\n};\n\nconst wrapFunction = fn =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        const result = fn.call(this, chunk, encoding);\n        if (result && typeof result.then == 'function') {\n          // thenable\n          result.then(\n            result => (Chain.sanitize(result, this), callback(null)),\n            error => callback(error)\n          );\n          return;\n        }\n        if (result && typeof result.next == 'function') {\n          // generator\n          runAsyncGenerator(result, this).then(\n            () => callback(null),\n            error => callback(error)\n          );\n          return;\n        }\n        Chain.sanitize(result, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\nconst wrapArray = fns =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        let value = chunk;\n        for (let i = 0; i < fns.length; ++i) {\n          const result = fns[i].call(this, value, encoding);\n          if (result === Chain.none) {\n            callback(null);\n            return;\n          }\n          if (Chain.isFinal(result)) {\n            value = Chain.getFinalValue(result);\n            break;\n          }\n          value = result;\n        }\n        Chain.sanitize(value, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\n// is*NodeStream functions taken from https://github.com/nodejs/node/blob/master/lib/internal/streams/utils.js\nconst isReadableNodeStream = obj =>\n  obj &&\n  typeof obj.pipe === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._writableState || (typeof obj._readableState === 'object' ? obj._readableState.readable : null) !== false) && // Duplex\n  (!obj._writableState || obj._readableState); // Writable has .pipe.\n\nconst isWritableNodeStream = obj =>\n  obj &&\n  typeof obj.write === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._readableState || (typeof obj._writableState === 'object' ? obj._writableState.writable : null) !== false); // Duplex\n\nconst isDuplexNodeStream = obj =>\n  obj && typeof obj.pipe === 'function' && obj._readableState && typeof obj.on === 'function' && typeof obj.write === 'function';\n\nclass Chain extends Duplex {\n  constructor(fns, options) {\n    super(options || {writableObjectMode: true, readableObjectMode: true});\n\n    if (!(fns instanceof Array) || !fns.length) {\n      throw Error(\"Chain's argument should be a non-empty array.\");\n    }\n\n    this.streams = fns\n      .filter(fn => fn)\n      .map((fn, index, fns) => {\n        if (typeof fn === 'function' || fn instanceof Array) return Chain.convertToTransform(fn);\n        if (isDuplexNodeStream(fn) || (!index && isReadableNodeStream(fn)) || (index === fns.length - 1 && isWritableNodeStream(fn))) {\n          return fn;\n        }\n        throw Error('Arguments should be functions, arrays or streams.');\n      })\n      .filter(s => s);\n    this.input = this.streams[0];\n    this.output = this.streams.reduce((output, stream) => (output && output.pipe(stream)) || stream);\n\n    if (!isWritableNodeStream(this.input)) {\n      this._write = (_1, _2, callback) => callback(null);\n      this._final = callback => callback(null); // unavailable in Node 6\n      this.input.on('end', () => this.end());\n    }\n\n    if (isReadableNodeStream(this.output)) {\n      this.output.on('data', chunk => !this.push(chunk) && this.output.pause());\n      this.output.on('end', () => this.push(null));\n    } else {\n      this._read = () => {}; // nop\n      this.resume();\n      this.output.on('finish', () => this.push(null));\n    }\n\n    // connect events\n    if (!options || !options.skipEvents) {\n      this.streams.forEach(stream => stream.on('error', error => this.emit('error', error)));\n    }\n  }\n  _write(chunk, encoding, callback) {\n    let error = null;\n    try {\n      this.input.write(chunk, encoding, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _final(callback) {\n    let error = null;\n    try {\n      this.input.end(null, null, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _read() {\n    this.output.resume();\n  }\n  static make(fns, options) {\n    return new Chain(fns, options);\n  }\n  static sanitize(result, stream) {\n    if (Chain.isFinal(result)) {\n      result = Chain.getFinalValue(result);\n    } else if (Chain.isMany(result)) {\n      result = Chain.getManyValues(result);\n    }\n    if (result !== undefined && result !== null && result !== Chain.none) {\n      if (result instanceof Array) {\n        result.forEach(value => value !== undefined && value !== null && stream.push(value));\n      } else {\n        stream.push(result);\n      }\n    }\n  }\n  static convertToTransform(fn) {\n    if (typeof fn === 'function') return wrapFunction(fn);\n    if (fn instanceof Array) return fn.length ? wrapArray(fn) : null;\n    return null;\n  }\n}\n\nChain.none = none;\nChain.final = final;\nChain.isFinal = isFinal;\nChain.getFinalValue = getFinalValue;\nChain.many = many;\nChain.isMany = isMany;\nChain.getManyValues = getManyValues;\n\nChain.chain = Chain.make;\nChain.make.Constructor = Chain;\n\nmodule.exports = Chain;\n","'use strict';\n\nconst EventEmitter = require('events');\n\nconst startObject = Ctr =>\n  function () {\n    if (this.done) {\n      this.done = false;\n    } else {\n      this.stack.push(this.current, this.key);\n    }\n    this.current = new Ctr();\n    this.key = null;\n  };\n\nclass Assembler extends EventEmitter {\n  static connectTo(stream, options) {\n    return new Assembler(options).connectTo(stream);\n  }\n\n  constructor(options) {\n    super();\n    this.stack = [];\n    this.current = this.key = null;\n    this.done = true;\n    if (options) {\n      this.reviver = typeof options.reviver == 'function' && options.reviver;\n      if (this.reviver) {\n        this.stringValue = this._saveValue = this._saveValueWithReviver;\n      }\n      if (options.numberAsString) {\n        this.numberValue = this.stringValue;\n      }\n    }\n  }\n\n  connectTo(stream) {\n    stream.on('data', chunk => {\n      if (this[chunk.name]) {\n        this[chunk.name](chunk.value);\n        if (this.done) this.emit('done', this);\n      }\n    });\n    return this;\n  }\n\n  get depth() {\n    return (this.stack.length >> 1) + (this.done ? 0 : 1);\n  }\n\n  get path() {\n    const path = [];\n    for (let i = 0; i < this.stack.length; i += 2) {\n      const key = this.stack[i + 1];\n      path.push(key === null ? this.stack[i].length : key);\n    }\n    return path;\n  }\n\n  dropToLevel(level) {\n    if (level < this.depth) {\n      if (level) {\n        const index = (level - 1) << 1;\n        this.current = this.stack[index];\n        this.key = this.stack[index + 1];\n        this.stack.splice(index);\n      } else {\n        this.stack = [];\n        this.current = this.key = null;\n        this.done = true;\n      }\n    }\n    return this;\n  }\n\n  consume(chunk) {\n    this[chunk.name] && this[chunk.name](chunk.value);\n    return this;\n  }\n\n  keyValue(value) {\n    this.key = value;\n  }\n\n  //stringValue() - aliased below to _saveValue()\n\n  numberValue(value) {\n    this._saveValue(parseFloat(value));\n  }\n  nullValue() {\n    this._saveValue(null);\n  }\n  trueValue() {\n    this._saveValue(true);\n  }\n  falseValue() {\n    this._saveValue(false);\n  }\n\n  //startObject() - assigned below\n\n  endObject() {\n    if (this.stack.length) {\n      const value = this.current;\n      this.key = this.stack.pop();\n      this.current = this.stack.pop();\n      this._saveValue(value);\n    } else {\n      this.done = true;\n    }\n  }\n\n  //startArray() - assigned below\n  //endArray() - aliased below to endObject()\n\n  _saveValue(value) {\n    if (this.done) {\n      this.current = value;\n    } else {\n      if (this.current instanceof Array) {\n        this.current.push(value);\n      } else {\n        this.current[this.key] = value;\n        this.key = null;\n      }\n    }\n  }\n  _saveValueWithReviver(value) {\n    if (this.done) {\n      this.current = this.reviver('', value);\n    } else {\n      if (this.current instanceof Array) {\n        value = this.reviver('' + this.current.length, value);\n        this.current.push(value);\n        if (value === undefined) {\n          delete this.current[this.current.length - 1];\n        }\n      } else {\n        value = this.reviver(this.key, value);\n        if (value !== undefined) {\n          this.current[this.key] = value;\n        }\n        this.key = null;\n      }\n    }\n  }\n}\n\nAssembler.prototype.stringValue = Assembler.prototype._saveValue;\nAssembler.prototype.startObject = startObject(Object);\nAssembler.prototype.startArray = startObject(Array);\nAssembler.prototype.endArray = Assembler.prototype.endObject;\n\nmodule.exports = Assembler;\n","'use strict';\n\nconst Utf8Stream = require('./utils/Utf8Stream');\n\nconst patterns = {\n  value1: /^(?:[\\\"\\{\\[\\]\\-\\d]|true\\b|false\\b|null\\b|\\s{1,256})/,\n  string: /^(?:[^\\\"\\\\]{1,256}|\\\\[bfnrt\\\"\\\\\\/]|\\\\u[\\da-fA-F]{4}|\\\")/,\n  key1: /^(?:[\\\"\\}]|\\s{1,256})/,\n  colon: /^(?:\\:|\\s{1,256})/,\n  comma: /^(?:[\\,\\]\\}]|\\s{1,256})/,\n  ws: /^\\s{1,256}/,\n  numberStart: /^\\d/,\n  numberDigit: /^\\d{0,256}/,\n  numberFraction: /^[\\.eE]/,\n  numberExponent: /^[eE]/,\n  numberExpSign: /^[-+]/\n};\nconst MAX_PATTERN_SIZE = 16;\n\nlet noSticky = true;\ntry {\n  new RegExp('.', 'y');\n  noSticky = false;\n} catch (e) {\n  // suppress\n}\n\n!noSticky &&\n  Object.keys(patterns).forEach(key => {\n    let src = patterns[key].source.slice(1); // lop off ^\n    if (src.slice(0, 3) === '(?:' && src.slice(-1) === ')') {\n      src = src.slice(3, -1);\n    }\n    patterns[key] = new RegExp(src, 'y');\n  });\n\npatterns.numberFracStart = patterns.numberExpStart = patterns.numberStart;\npatterns.numberFracDigit = patterns.numberExpDigit = patterns.numberDigit;\n\nconst values = {true: true, false: false, null: null},\n  expected = {object: 'objectStop', array: 'arrayStop', '': 'done'};\n\n// long hexadecimal codes: \\uXXXX\nconst fromHex = s => String.fromCharCode(parseInt(s.slice(2), 16));\n\n// short codes: \\b \\f \\n \\r \\t \\\" \\\\ \\/\nconst codes = {b: '\\b', f: '\\f', n: '\\n', r: '\\r', t: '\\t', '\"': '\"', '\\\\': '\\\\', '/': '/'};\n\nclass Parser extends Utf8Stream {\n  static make(options) {\n    return new Parser(options);\n  }\n\n  constructor(options) {\n    super(Object.assign({}, options, {readableObjectMode: true}));\n\n    this._packKeys = this._packStrings = this._packNumbers = this._streamKeys = this._streamStrings = this._streamNumbers = true;\n    if (options) {\n      'packValues' in options && (this._packKeys = this._packStrings = this._packNumbers = options.packValues);\n      'packKeys' in options && (this._packKeys = options.packKeys);\n      'packStrings' in options && (this._packStrings = options.packStrings);\n      'packNumbers' in options && (this._packNumbers = options.packNumbers);\n      'streamValues' in options && (this._streamKeys = this._streamStrings = this._streamNumbers = options.streamValues);\n      'streamKeys' in options && (this._streamKeys = options.streamKeys);\n      'streamStrings' in options && (this._streamStrings = options.streamStrings);\n      'streamNumbers' in options && (this._streamNumbers = options.streamNumbers);\n      this._jsonStreaming = options.jsonStreaming;\n    }\n    !this._packKeys && (this._streamKeys = true);\n    !this._packStrings && (this._streamStrings = true);\n    !this._packNumbers && (this._streamNumbers = true);\n\n    this._done = false;\n    this._expect = this._jsonStreaming ? 'done' : 'value';\n    this._stack = [];\n    this._parent = '';\n    this._open_number = false;\n    this._accumulator = '';\n  }\n\n  _flush(callback) {\n    this._done = true;\n    super._flush(error => {\n      if (error) return callback(error);\n      if (this._open_number) {\n        if (this._streamNumbers) {\n          this.push({name: 'endNumber'});\n        }\n        this._open_number = false;\n        if (this._packNumbers) {\n          this.push({name: 'numberValue', value: this._accumulator});\n          this._accumulator = '';\n        }\n      }\n      callback(null);\n    });\n  }\n\n  _processBuffer(callback) {\n    let match,\n      value,\n      index = 0;\n    main: for (;;) {\n      switch (this._expect) {\n        case 'value1':\n        case 'value':\n          patterns.value1.lastIndex = index;\n          match = patterns.value1.exec(this._buffer);\n          if (!match) {\n            if (this._done || index + MAX_PATTERN_SIZE < this._buffer.length) {\n              if (index < this._buffer.length) return callback(new Error('Parser cannot parse input: expected a value'));\n              return callback(new Error('Parser has expected a value'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          switch (value) {\n            case '\"':\n              this._streamStrings && this.push({name: 'startString'});\n              this._expect = 'string';\n              break;\n            case '{':\n              this.push({name: 'startObject'});\n              this._stack.push(this._parent);\n              this._parent = 'object';\n              this._expect = 'key1';\n              break;\n            case '[':\n              this.push({name: 'startArray'});\n              this._stack.push(this._parent);\n              this._parent = 'array';\n              this._expect = 'value1';\n              break;\n            case ']':\n              if (this._expect !== 'value1') return callback(new Error(\"Parser cannot parse input: unexpected token ']'\"));\n              if (this._open_number) {\n                this._streamNumbers && this.push({name: 'endNumber'});\n                this._open_number = false;\n                if (this._packNumbers) {\n                  this.push({name: 'numberValue', value: this._accumulator});\n                  this._accumulator = '';\n                }\n              }\n              this.push({name: 'endArray'});\n              this._parent = this._stack.pop();\n              this._expect = expected[this._parent];\n              break;\n            case '-':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '-'});\n              }\n              this._packNumbers && (this._accumulator = '-');\n              this._expect = 'numberStart';\n              break;\n            case '0':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '0'});\n              }\n              this._packNumbers && (this._accumulator = '0');\n              this._expect = 'numberFraction';\n              break;\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: value});\n              }\n              this._packNumbers && (this._accumulator = value);\n              this._expect = 'numberDigit';\n              break;\n            case 'true':\n            case 'false':\n            case 'null':\n              if (this._buffer.length - index === value.length && !this._done) break main; // wait for more input\n              this.push({name: value + 'Value', value: values[value]});\n              this._expect = expected[this._parent];\n              break;\n            // default: // ws\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'keyVal':\n        case 'string':\n          patterns.string.lastIndex = index;\n          match = patterns.string.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length && (this._done || this._buffer.length - index >= 6))\n              return callback(new Error('Parser cannot parse input: escaped characters'));\n            if (this._done) return callback(new Error('Parser has expected a string value'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            if (this._expect === 'keyVal') {\n              this._streamKeys && this.push({name: 'endKey'});\n              if (this._packKeys) {\n                this.push({name: 'keyValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = 'colon';\n            } else {\n              this._streamStrings && this.push({name: 'endString'});\n              if (this._packStrings) {\n                this.push({name: 'stringValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = expected[this._parent];\n            }\n          } else if (value.length > 1 && value.charAt(0) === '\\\\') {\n            const t = value.length == 2 ? codes[value.charAt(1)] : fromHex(value);\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: t});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += t;\n            }\n          } else {\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: value});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += value;\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'key1':\n        case 'key':\n          patterns.key1.lastIndex = index;\n          match = patterns.key1.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an object key'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            this._streamKeys && this.push({name: 'startKey'});\n            this._expect = 'keyVal';\n          } else if (value === '}') {\n            if (this._expect !== 'key1') return callback(new Error(\"Parser cannot parse input: unexpected token '}'\"));\n            this.push({name: 'endObject'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'colon':\n          patterns.colon.lastIndex = index;\n          match = patterns.colon.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ':'\"));\n            break main; // wait for more input\n          }\n          value = match[0];\n          value === ':' && (this._expect = 'value');\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'arrayStop':\n        case 'objectStop':\n          patterns.comma.lastIndex = index;\n          match = patterns.comma.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ','\"));\n            break main; // wait for more input\n          }\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          value = match[0];\n          if (value === ',') {\n            this._expect = this._expect === 'arrayStop' ? 'value' : 'key';\n          } else if (value === '}' || value === ']') {\n            if (value === '}' ? this._expect === 'arrayStop' : this._expect !== 'arrayStop') {\n              return callback(new Error(\"Parser cannot parse input: expected '\" + (this._expect === 'arrayStop' ? ']' : '}') + \"'\"));\n            }\n            this.push({name: value === '}' ? 'endObject' : 'endArray'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        // number chunks\n        case 'numberStart': // [0-9]\n          patterns.numberStart.lastIndex = index;\n          match = patterns.numberStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a starting digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '0' ? 'numberFraction' : 'numberDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberDigit': // [0-9]*\n          patterns.numberDigit.lastIndex = index;\n          match = patterns.numberDigit.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberFraction';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberFraction': // [\\.eE]?\n          patterns.numberFraction.lastIndex = index;\n          match = patterns.numberFraction.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '.' ? 'numberFracStart' : 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracStart': // [0-9]\n          patterns.numberFracStart.lastIndex = index;\n          match = patterns.numberFracStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a fractional part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberFracDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracDigit': // [0-9]*\n          patterns.numberFracDigit.lastIndex = index;\n          match = patterns.numberFracDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExponent';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberExponent': // [eE]?\n          patterns.numberExponent.lastIndex = index;\n          match = patterns.numberExponent.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            if (this._done) {\n              this._expect = 'done';\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpSign': // [-+]?\n          patterns.numberExpSign.lastIndex = index;\n          match = patterns.numberExpSign.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExpStart';\n              break;\n            }\n            if (this._done) return callback(new Error('Parser has expected an exponent value of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpStart';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpStart': // [0-9]\n          patterns.numberExpStart.lastIndex = index;\n          match = patterns.numberExpStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an exponent part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpDigit': // [0-9]*\n          patterns.numberExpDigit.lastIndex = index;\n          match = patterns.numberExpDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'done':\n          patterns.ws.lastIndex = index;\n          match = patterns.ws.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              if (this._jsonStreaming) {\n                this._expect = 'value';\n                break;\n              }\n              return callback(new Error('Parser cannot parse input: unexpected characters'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n      }\n    }\n    !noSticky && (this._buffer = this._buffer.slice(index));\n    callback(null);\n  }\n}\nParser.parser = Parser.make;\nParser.make.Constructor = Parser;\n\nmodule.exports = Parser;\n","'use strict';\n\nconst StreamBase = require('./StreamBase');\nconst withParser = require('../utils/withParser');\n\nclass StreamArray extends StreamBase {\n  static make(options) {\n    return new StreamArray(options);\n  }\n\n  static withParser(options) {\n    return withParser(StreamArray.make, options);\n  }\n\n  constructor(options) {\n    super(options);\n    this._level = 1;\n    this._counter = 0;\n  }\n\n  _wait(chunk, _, callback) {\n    // first chunk should open an array\n    if (chunk.name !== 'startArray') {\n      return callback(new Error('Top-level object should be an array.'));\n    }\n    this._transform = this._filter;\n    return this._transform(chunk, _, callback);\n  }\n\n  _push(discard) {\n    if (this._assembler.current.length) {\n      if (discard) {\n        ++this._counter;\n        this._assembler.current.pop();\n      } else {\n        this.push({key: this._counter++, value: this._assembler.current.pop()});\n      }\n    }\n  }\n}\nStreamArray.streamArray = StreamArray.make;\nStreamArray.make.Constructor = StreamArray;\n\nmodule.exports = StreamArray;\n","'use strict';\n\nconst {Transform} = require('stream');\nconst Assembler = require('../Assembler');\n\nclass Counter {\n  constructor(initialDepth) {\n    this.depth = initialDepth;\n  }\n  startObject() {\n    ++this.depth;\n  }\n  endObject() {\n    --this.depth;\n  }\n  startArray() {\n    ++this.depth;\n  }\n  endArray() {\n    --this.depth;\n  }\n}\n\nclass StreamBase extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: true, readableObjectMode: true}));\n    if (options) {\n      this.objectFilter = options.objectFilter;\n      this.includeUndecided = options.includeUndecided;\n    }\n    if (typeof this.objectFilter != 'function') {\n      this._filter = this._transform;\n    }\n    this._transform = this._wait || this._filter;\n    this._assembler = new Assembler(options);\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n      }\n    }\n    callback(null);\n  }\n\n  _filter(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      const result = this.objectFilter(this._assembler);\n      if (result) {\n        if (this._assembler.depth === this._level) {\n          this._push();\n          this._transform = this._filter;\n        }\n        this._transform = this._accept;\n        return callback(null);\n      }\n      if (result === false) {\n        this._saved_assembler = this._assembler;\n        this._assembler = new Counter(this._saved_assembler.depth);\n        this._saved_assembler.dropToLevel(this._level);\n        if (this._assembler.depth === this._level) {\n          this._assembler = this._saved_assembler;\n          this._transform = this._filter;\n        }\n        this._transform = this._reject;\n        return callback(null);\n      }\n      if (this._assembler.depth === this._level) {\n        this._push(!this.includeUndecided);\n      }\n    }\n    callback(null);\n  }\n\n  _accept(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n\n  _reject(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._assembler = this._saved_assembler;\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n}\n\nmodule.exports = StreamBase;\n","'use strict';\n\nconst {Transform} = require('stream');\nconst {StringDecoder} = require('string_decoder');\n\nclass Utf8Stream extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: false}));\n    this._buffer = '';\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (typeof chunk == 'string') {\n      this._transform = this._transformString;\n    } else {\n      this._stringDecoder = new StringDecoder();\n      this._transform = this._transformBuffer;\n    }\n    this._transform(chunk, encoding, callback);\n  }\n\n  _transformBuffer(chunk, _, callback) {\n    this._buffer += this._stringDecoder.write(chunk);\n    this._processBuffer(callback);\n  }\n\n  _transformString(chunk, _, callback) {\n    this._buffer += chunk.toString();\n    this._processBuffer(callback);\n  }\n\n  _processBuffer(callback) {\n    if (this._buffer) {\n      this.push(this._buffer, 'utf8');\n      this._buffer = '';\n    }\n    callback(null);\n  }\n\n  _flushInput() {\n    // meant to be called from _flush()\n    if (this._stringDecoder) {\n      this._buffer += this._stringDecoder.end();\n    }\n  }\n\n  _flush(callback) {\n    this._flushInput();\n    this._processBuffer(callback);\n  }\n}\n\nmodule.exports = Utf8Stream;\n","'use strict';\n\nconst Chain = require('stream-chain');\n\nconst Parser = require('../Parser');\n\nconst withParser = (fn, options) =>\n  new Chain([new Parser(options), fn(options)], Object.assign({}, options, {writableObjectMode: false, readableObjectMode: true}));\n\nmodule.exports = withParser;\n","module.exports = require(\"child_process\");","module.exports = require(\"electron\");","module.exports = require(\"events\");","module.exports = require(\"https\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Vec {\n    static isBlank(arr) { return arr == null || arr.length == 0; }\n    static notBlank(arr) { return arr != null && arr.length > 0; }\n    static safeArray(arr) { return arr == null ? [] : arr; }\n    static len(arr) { return arr == null ? 0 : arr.length; }\n    static arrayLength(arr) { return arr == null ? 0 : arr.length; }\n    static anyTrue(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (v)\n                return true;\n        return false;\n    }\n    static allTrue(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (!v)\n                return false;\n        return true;\n    }\n    static anyFalse(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (!v)\n                return true;\n        return false;\n    }\n    static allFalse(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (v)\n                return false;\n        return true;\n    }\n    static iterAnyTrue(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return true;\n        return false;\n    }\n    static iterAllTrue(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return false;\n        return true;\n    }\n    static iterAnyFalse(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return true;\n        return false;\n    }\n    static iterAllFalse(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return false;\n        return true;\n    }\n    static swap(arr, idx1, idx2) {\n        let v = arr[idx1];\n        arr[idx1] = arr[idx2];\n        arr[idx2] = v;\n    }\n    static duplicate(arr) {\n        return arr == null ? [] : arr.slice(0);\n    }\n    static append(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.push(item);\n        return arr;\n    }\n    static prepend(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.unshift(item);\n        return arr;\n    }\n    static concat(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return [];\n        if (arr1 == null)\n            return arr2.slice(0);\n        if (arr2 == null)\n            return arr1.slice(0);\n        return arr1.concat(arr2);\n    }\n    static remove(arr, idx) {\n        arr = arr.slice(0);\n        arr.splice(idx, 1);\n        return arr;\n    }\n    static flatten(mtx) {\n        let ret = [];\n        for (let vec of mtx)\n            ret.push(...vec);\n        return ret;\n    }\n    static transpose(mtx) {\n        let sz1 = mtx.length, sz2 = mtx[0].length;\n        let ret = Vec.anyArray(null, sz2);\n        for (let j = 0; j < sz2; j++) {\n            ret[j] = Vec.anyArray(null, sz1);\n            for (let i = 0; i < sz1; i++)\n                ret[j][i] = mtx[i][j];\n        }\n        return ret;\n    }\n    static equals(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return true;\n        if (arr1 == null || arr2 == null)\n            return false;\n        if (arr1.length != arr2.length)\n            return false;\n        for (let n = 0; n < arr1.length; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static equivalent(arr1, arr2) {\n        const len1 = arr1 == null ? 0 : arr1.length, len2 = arr2 == null ? 0 : arr2.length;\n        if (len1 != len2)\n            return false;\n        for (let n = 0; n < len1; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static compareTo(arr1, arr2) {\n        const sz = Math.max(arr1.length, arr2.length);\n        for (let n = 0; n < sz; n++) {\n            if (arr1[n] < arr2[n])\n                return -1;\n            if (arr1[n] > arr2[n])\n                return 1;\n        }\n        return 0;\n    }\n    static booleanArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static numberArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static stringArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static anyArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericBlankArrays(sz) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = [];\n        return arr;\n    }\n    static funcArray(sz, func) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = func(n);\n        return arr;\n    }\n    static first(arr) { return arr == null || arr.length == 0 ? null : arr[0]; }\n    static last(arr) { return arr == null || arr.length == 0 ? null : arr[arr.length - 1]; }\n    static min(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MAX_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.min(v, arr[n]);\n        return v;\n    }\n    static max(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MIN_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.max(v, arr[n]);\n        return v;\n    }\n    static idxMin(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] < arr[idx])\n                idx = n;\n        return idx;\n    }\n    static idxMax(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] > arr[idx])\n                idx = n;\n        return idx;\n    }\n    static range(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let lo = arr[0], hi = arr[0];\n        for (let n = 1; n < arr.length; n++) {\n            if (arr[n] < lo)\n                lo = arr[n];\n            if (arr[n] > hi)\n                hi = arr[n];\n        }\n        return hi - lo;\n    }\n    static reverse(arr) {\n        let ret = [];\n        for (let n = arr.length - 1; n >= 0; n--)\n            ret.push(arr[n]);\n        return ret;\n    }\n    static identity0(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n;\n        return ret;\n    }\n    static identity1(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + 1;\n        return ret;\n    }\n    static identityN(start, sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + start;\n        return ret;\n    }\n    static notMask(mask) {\n        let ret = new Array(mask.length);\n        for (let n = mask.length - 1; n >= 0; n--)\n            ret[n] = !mask[n];\n        return ret;\n    }\n    static idxGet(arr, idx) {\n        let ret = [];\n        for (let n = 0; n < idx.length; n++)\n            ret.push(arr[idx[n]]);\n        return ret;\n    }\n    static maskCount(mask) {\n        if (!mask)\n            return 0;\n        let c = 0;\n        for (let n = mask.length - 1; n >= 0; n--)\n            if (mask[n])\n                c++;\n        return c;\n    }\n    static maskIdx(mask) {\n        let idx = [];\n        for (let n = 0; n < mask.length; n++)\n            if (mask[n])\n                idx.push(n);\n        return idx;\n    }\n    static idxMask(idx, sz) {\n        let mask = Vec.booleanArray(false, sz);\n        for (let n of idx)\n            mask[n] = true;\n        return mask;\n    }\n    static maskMap(mask) {\n        let ret = [];\n        for (let n = 0, pos = 0; n < mask.length; n++)\n            ret.push(mask[n] ? pos++ : -1);\n        return ret;\n    }\n    static maskGet(arr, mask) {\n        let ret = [];\n        for (let n = 0, p = 0; n < arr.length; n++)\n            if (mask[n])\n                ret.push(arr[n]);\n        return ret;\n    }\n    static maskEqual(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == val);\n        }\n        return ret;\n    }\n    static sum(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let t = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            t += arr[n];\n        return t;\n    }\n    static add(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + val);\n        }\n        return ret;\n    }\n    static sub(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - val);\n        }\n        return ret;\n    }\n    static mul(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * val);\n        }\n        return ret;\n    }\n    static neg(arr) {\n        let ret = arr.slice(0);\n        for (let n = ret.length - 1; n >= 0; n--)\n            ret[n] *= -1;\n        return ret;\n    }\n    static setTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] = val; }\n    static addTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val; }\n    static mulBy(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val; }\n    static addToArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val[n]; }\n    static subFromArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] -= val[n]; }\n    static mulByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val[n]; }\n    static divByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] /= val[n]; }\n    static idxSort(arr) {\n        let idx = new Array(arr.length);\n        for (let n = 0; n < arr.length; n++)\n            idx[n] = n;\n        idx.sort((a, b) => arr[a] < arr[b] ? -1 : arr[a] > arr[b] ? 1 : 0);\n        return idx;\n    }\n    static sort(arr) {\n        arr.sort((v1, v2) => v1 - v2);\n    }\n    static sorted(arr) {\n        arr = arr.slice(0);\n        this.sort(arr);\n        return arr;\n    }\n    static sortedUnique(arr) {\n        if (arr == null || arr.length == 0)\n            return [];\n        let unique = Vec.uniqueUnstable(arr);\n        if (typeof arr[0] == 'number')\n            this.sort(unique);\n        else\n            unique.sort();\n        return unique;\n    }\n    static uniqueUnstable(arr) {\n        return Array.from(new Set(arr));\n    }\n    static uniqueStable(arr) {\n        let set = new Set(arr), ret = [];\n        for (let v of arr)\n            if (set.has(v)) {\n                ret.push(v);\n                set.delete(v);\n            }\n        return ret;\n    }\n    static maskUnique(arr) {\n        let set = new Set(arr), ret = this.booleanArray(false, arr.length);\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret[n] = true;\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static idxUnique(arr) {\n        let set = new Set(arr), ret = [];\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret.push(n);\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static exclude(arr, excl) {\n        const sz = Vec.len(arr);\n        if (sz == 0)\n            return [];\n        let mask = new Array(sz);\n        let count = 0;\n        for (let n = 0; n < arr.length; n++) {\n            mask[n] = excl.indexOf(arr[n]) < 0;\n            if (mask[n])\n                count++;\n        }\n        if (count == sz)\n            return arr;\n        return Vec.maskGet(arr, mask);\n    }\n}\nclass Permutation {\n    static parityPerms(idx) {\n        let v = Vec.booleanArray(false, idx.length);\n        let p = 0;\n        for (let i = idx.length - 1; i >= 0; i--) {\n            if (v[i])\n                p++;\n            else {\n                let j = i;\n                do {\n                    j = idx[j];\n                    v[j] = true;\n                } while (j != i);\n            }\n        }\n        return p;\n    }\n    static parityIdentity(idx) {\n        return this.parityPerms(idx) & 1;\n    }\n    static parityOrder(src) {\n        if (src.length <= 1)\n            return 0;\n        else if (src.length == 2)\n            return src[0] < src[1] ? 0 : 1;\n        else if (src.length == 3) {\n            let p = 1;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            return p & 1;\n        }\n        else if (src.length == 4) {\n            let p = 0;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[0] < src[3])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            if (src[1] < src[3])\n                p++;\n            if (src[2] < src[3])\n                p++;\n            return p & 1;\n        }\n        let idx = [], sorted = src.slice(0);\n        sorted.sort();\n        for (let n = 0; n < src.length; n++)\n            idx.push(sorted.indexOf(src[n]));\n        return this.parityIdentity(idx);\n    }\n    static smallPermutation(sz) {\n        if (sz == 1)\n            return this.PERM1;\n        else if (sz == 2)\n            return this.PERM2;\n        else if (sz == 3)\n            return this.PERM3;\n        else if (sz == 4)\n            return this.PERM4;\n        else\n            return null;\n    }\n    static allPermutations(sz) {\n        if (sz <= this.SMALL_PERMS)\n            return this.smallPermutation(sz);\n        while (this.PERM_CACHE.length < this.MAX_CACHE - this.SMALL_PERMS)\n            this.PERM_CACHE.push(null);\n        if (sz < this.MAX_CACHE && this.PERM_CACHE[sz - this.SMALL_PERMS] != null)\n            return this.PERM_CACHE[sz - this.SMALL_PERMS];\n        let nperms = 1;\n        for (let n = 2; n <= sz; n++)\n            nperms *= n;\n        let perms = [];\n        let idx = Vec.identity0(sz);\n        perms.push(idx.slice(0));\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n < nperms; n++) {\n            nonunique: while (idx[0] < sz) {\n                idx[sz - 1]++;\n                for (let i = sz - 1; i > 0; i--) {\n                    if (idx[i] < sz)\n                        break;\n                    idx[i] = 0;\n                    idx[i - 1]++;\n                }\n                Vec.setTo(mask, false);\n                for (let i of idx) {\n                    if (mask[i])\n                        continue nonunique;\n                    mask[i] = true;\n                }\n                perms[n] = idx.slice(0);\n                break;\n            }\n        }\n        if (sz < this.MAX_CACHE)\n            this.PERM_CACHE[sz - this.SMALL_PERMS] = perms;\n        return perms;\n    }\n}\nPermutation.PERM1 = [[0]];\nPermutation.PERM2 = [[0, 1], [1, 0]];\nPermutation.PERM3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]];\nPermutation.PERM4 = [\n    [0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1],\n    [1, 0, 2, 3], [1, 0, 3, 2], [1, 2, 0, 3], [1, 2, 3, 0], [1, 3, 0, 2], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 0, 3, 1], [2, 1, 0, 3], [2, 1, 3, 0], [2, 3, 0, 1], [2, 3, 1, 0],\n    [3, 0, 1, 2], [3, 0, 2, 1], [3, 1, 0, 2], [3, 1, 2, 0], [3, 2, 0, 1], [3, 2, 1, 0]\n];\nPermutation.SMALL_PERMS = 4;\nPermutation.MAX_CACHE = 8;\nPermutation.PERM_CACHE = [];\nexport { Permutation };\n//# sourceMappingURL=Vec.js.map","import { Vec } from './Vec';\nexport class Matrix {\n    constructor(m, n, s = 0) {\n        this.m = m;\n        this.n = n;\n        if (m == 0)\n            return;\n        this.A = new Array(m);\n        for (let i = 0; i < m; i++)\n            this.A[i] = Vec.numberArray(s, n);\n    }\n    static fromArray(A) {\n        let mtx = new Matrix(0, 0);\n        mtx.A = A;\n        mtx.m = A.length;\n        mtx.n = A[0].length;\n        return mtx;\n    }\n    clone() {\n        const { A, m, n } = this;\n        let mtx = new Matrix(m, n);\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                mtx.A[i][j] = A[i][j];\n        return mtx;\n    }\n    get numRows() { return this.m; }\n    get numCols() { return this.n; }\n    get(i, j) { return this.A[i][j]; }\n    set(i, j, v) { this.A[i][j] = v; }\n    transpose() {\n        const { A, m, n } = this;\n        let X = new Matrix(n, m);\n        const C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[j][i] = A[i][j];\n        return X;\n    }\n    norm1() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let j = 0; j < n; j++) {\n            let s = 0;\n            for (let i = 0; i < m; i++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    normInf() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let i = 0; i < m; i++) {\n            let s = 0;\n            for (let j = 0; j < n; j++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    uminus() {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = -A[i][j];\n        return X;\n    }\n    plus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] + B.A[i][j];\n        return X;\n    }\n    plusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] + B.A[i][j];\n        return this;\n    }\n    minus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] - B.A[i][j];\n        return X;\n    }\n    minusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] - B.A[i][j];\n        return this;\n    }\n    arrayTimes(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] * B.A[i][j];\n        return X;\n    }\n    arrayTimesEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] * B.A[i][j];\n        return this;\n    }\n    arrayRightDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] / B.A[i][j];\n        return X;\n    }\n    arrayRightDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] / B.A[i][j];\n        return this;\n    }\n    arrayLeftDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = B.A[i][j] / A[i][j];\n        return X;\n    }\n    arrayLeftDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = B.A[i][j] / A[i][j];\n        return this;\n    }\n    scalarTimes(s) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = s * A[i][j];\n        return X;\n    }\n    scalarTimesEquals(s) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = s * A[i][j];\n        return this;\n    }\n    times(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, B.n);\n        let C = X.A, Bcolj = new Array(n);\n        for (let j = 0; j < B.n; j++) {\n            for (let k = 0; k < n; k++)\n                Bcolj[k] = B.A[k][j];\n            for (let i = 0; i < m; i++) {\n                let Arowi = A[i];\n                let s = 0;\n                for (let k = 0; k < n; k++)\n                    s += Arowi[k] * Bcolj[k];\n                C[i][j] = s;\n            }\n        }\n        return X;\n    }\n    rank() {\n        return new SingularValueDecomposition(this).rank();\n    }\n    cond() {\n        return new SingularValueDecomposition(this).cond();\n    }\n    trace() {\n        const { A, m, n } = this;\n        let t = 0;\n        for (let i = 0; i < Math.min(m, n); i++) {\n            t += A[i][i];\n        }\n        return t;\n    }\n    static identity(m, n) {\n        let mtx = new Matrix(m, n);\n        let A = mtx.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = (i == j ? 1.0 : 0.0);\n        return mtx;\n    }\n    toString() {\n        let lines = ['['];\n        for (let row of this.A)\n            lines.push(JSON.stringify(row));\n        lines.push(']');\n        return lines.join('\\n');\n    }\n}\nexport class SingularValueDecomposition {\n    constructor(mtx) {\n        let A = mtx.A;\n        let m = this.m = mtx.m;\n        let n = this.n = mtx.n;\n        let nu = Math.min(m, n);\n        let s = this.s = new Array(Math.min(m + 1, n));\n        let U = this.U = new Array(m);\n        let V = this.V = new Array(n);\n        for (let i = 0; i < m; i++)\n            U[i] = Vec.numberArray(0, nu);\n        for (let j = 0; j < n; j++)\n            V[j] = Vec.numberArray(0, n);\n        let e = new Array(n);\n        let work = new Array(m);\n        let wantu = true, wantv = true;\n        let nct = Math.min(m - 1, n);\n        let nrt = Math.max(0, Math.min(n - 2, m));\n        for (let k = 0; k < Math.max(nct, nrt); k++) {\n            if (k < nct) {\n                s[k] = 0;\n                for (let i = k; i < m; i++)\n                    s[k] = SingularValueDecomposition.hypot(s[k], A[i][k]);\n                if (s[k] != 0.0) {\n                    if (A[k][k] < 0.0)\n                        s[k] = -s[k];\n                    for (let i = k; i < m; i++)\n                        A[i][k] /= s[k];\n                    A[k][k] += 1.0;\n                }\n                s[k] = -s[k];\n            }\n            for (let j = k + 1; j < n; j++) {\n                if ((k < nct) && (s[k] != 0.0)) {\n                    let t = 0;\n                    for (let i = k; i < m; i++)\n                        t += A[i][k] * A[i][j];\n                    t = -t / A[k][k];\n                    for (let i = k; i < m; i++)\n                        A[i][j] += t * A[i][k];\n                }\n                e[j] = A[k][j];\n            }\n            if (wantu && (k < nct)) {\n                for (let i = k; i < m; i++)\n                    U[i][k] = A[i][k];\n            }\n            if (k < nrt) {\n                e[k] = 0;\n                for (let i = k + 1; i < n; i++)\n                    e[k] = SingularValueDecomposition.hypot(e[k], e[i]);\n                if (e[k] != 0.0) {\n                    if (e[k + 1] < 0.0)\n                        e[k] = -e[k];\n                    for (let i = k + 1; i < n; i++)\n                        e[i] /= e[k];\n                    e[k + 1] += 1.0;\n                }\n                e[k] = -e[k];\n                if ((k + 1 < m) && (e[k] != 0.0)) {\n                    for (let i = k + 1; i < m; i++)\n                        work[i] = 0.0;\n                    for (let j = k + 1; j < n; j++)\n                        for (let i = k + 1; i < m; i++)\n                            work[i] += e[j] * A[i][j];\n                    for (let j = k + 1; j < n; j++) {\n                        let t = -e[j] / e[k + 1];\n                        for (let i = k + 1; i < m; i++)\n                            A[i][j] += t * work[i];\n                    }\n                }\n                if (wantv) {\n                    for (let i = k + 1; i < n; i++)\n                        V[i][k] = e[i];\n                }\n            }\n        }\n        let p = Math.min(n, m + 1);\n        if (nct < n)\n            s[nct] = A[nct][nct];\n        if (m < p)\n            s[p - 1] = 0.0;\n        if (nrt + 1 < p)\n            e[nrt] = A[nrt][p - 1];\n        e[p - 1] = 0.0;\n        if (wantu) {\n            for (let j = nct; j < nu; j++) {\n                for (let i = 0; i < m; i++)\n                    U[i][j] = 0.0;\n                U[j][j] = 1.0;\n            }\n            for (let k = nct - 1; k >= 0; k--) {\n                if (s[k] != 0.0) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k; i < m; i++)\n                            t += U[i][k] * U[i][j];\n                        t = -t / U[k][k];\n                        for (let i = k; i < m; i++)\n                            U[i][j] += t * U[i][k];\n                    }\n                    for (let i = k; i < m; i++)\n                        U[i][k] = -U[i][k];\n                    U[k][k] = 1.0 + U[k][k];\n                    for (let i = 0; i < k - 1; i++)\n                        U[i][k] = 0.0;\n                }\n                else {\n                    for (let i = 0; i < m; i++)\n                        U[i][k] = 0.0;\n                    U[k][k] = 1.0;\n                }\n            }\n        }\n        if (wantv) {\n            for (let k = n - 1; k >= 0; k--) {\n                if ((k < nrt) && (e[k] != 0.0)) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k + 1; i < n; i++)\n                            t += V[i][k] * V[i][j];\n                        t = -t / V[k + 1][k];\n                        for (let i = k + 1; i < n; i++)\n                            V[i][j] += t * V[i][k];\n                    }\n                }\n                for (let i = 0; i < n; i++)\n                    V[i][k] = 0.0;\n                V[k][k] = 1.0;\n            }\n        }\n        let pp = p - 1;\n        let iter = 0;\n        let eps = Math.pow(2.0, -52.0);\n        let tiny = Math.pow(2.0, -966.0);\n        while (p > 0) {\n            let k, kase;\n            for (k = p - 2; k >= -1; k--) {\n                if (k == -1)\n                    break;\n                if (Math.abs(e[k]) <= tiny + eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                    e[k] = 0.0;\n                    break;\n                }\n            }\n            if (k == p - 2) {\n                kase = 4;\n            }\n            else {\n                let ks;\n                for (ks = p - 1; ks >= k; ks--) {\n                    if (ks == k)\n                        break;\n                    let t = (ks != p ? Math.abs(e[ks]) : 0.) + (ks != k + 1 ? Math.abs(e[ks - 1]) : 0.);\n                    if (Math.abs(s[ks]) <= tiny + eps * t) {\n                        s[ks] = 0.0;\n                        break;\n                    }\n                }\n                if (ks == k)\n                    kase = 3;\n                else if (ks == p - 1)\n                    kase = 1;\n                else {\n                    kase = 2;\n                    k = ks;\n                }\n            }\n            k++;\n            if (kase == 1) {\n                let f = e[p - 2];\n                e[p - 2] = 0.0;\n                for (let j = p - 2; j >= k; j--) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    if (j != k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 2) {\n                let f = e[k - 1];\n                e[k - 1] = 0.0;\n                for (let j = k; j < p; j++) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 3) {\n                let scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                let sp = s[p - 1] / scale;\n                let spm1 = s[p - 2] / scale;\n                let epm1 = e[p - 2] / scale;\n                let sk = s[k] / scale;\n                let ek = e[k] / scale;\n                let b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n                let c = (sp * epm1) * (sp * epm1);\n                let shift = 0.0;\n                if ((b != 0.0) || (c != 0.0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0.0)\n                        shift = -shift;\n                    shift = c / (b + shift);\n                }\n                let f = (sk + sp) * (sk - sp) + shift;\n                let g = sk * ek;\n                for (let j = k; j < p - 1; j++) {\n                    let t = SingularValueDecomposition.hypot(f, g);\n                    let cs = f / t;\n                    let sn = g / t;\n                    if (j != k)\n                        e[j - 1] = t;\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = SingularValueDecomposition.hypot(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n            }\n            else if (kase == 4) {\n                if (s[k] <= 0.0) {\n                    s[k] = (s[k] < 0.0 ? -s[k] : 0.0);\n                    if (wantv) {\n                        for (let i = 0; i <= pp; i++)\n                            V[i][k] = -V[i][k];\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1])\n                        break;\n                    let t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (let i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n            }\n        }\n    }\n    getU() {\n        return Matrix.fromArray(this.U);\n    }\n    getV() {\n        return Matrix.fromArray(this.V);\n    }\n    getSingularValues() {\n        return this.s;\n    }\n    getS() {\n        const { n } = this;\n        let X = new Matrix(n, n, 0);\n        let S = X.A;\n        for (let i = 0; i < n; i++)\n            S[i][i] = this.s[i];\n        return X;\n    }\n    norm2() {\n        return this.s[0];\n    }\n    cond() {\n        const { m, n, s } = this;\n        return s[0] / s[Math.min(m, n) - 1];\n    }\n    rank() {\n        const { m, n, s } = this;\n        let eps = Math.pow(2.0, -52.0);\n        let tol = Math.max(m, n) * s[0] * eps;\n        let r = 0;\n        for (let i = 0; i < s.length; i++)\n            if (s[i] > tol)\n                r++;\n        return r;\n    }\n    static hypot(a, b) {\n        let r;\n        if (Math.abs(a) > Math.abs(b)) {\n            r = b / a;\n            r = Math.abs(a) * Math.sqrt(1 + r * r);\n        }\n        else if (b != 0) {\n            r = a / b;\n            r = Math.abs(b) * Math.sqrt(1 + r * r);\n        }\n        else {\n            r = 0.0;\n        }\n        return r;\n    }\n}\n//# sourceMappingURL=Matrix.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom, domLegacy } from './dom';\nimport { Size } from './Geom';\nimport { Vec } from './Vec';\nexport function safeInt(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = str.startsWith('0x') ? parseInt(str.substring(2), 16) :\n        str.startsWith('#') ? parseInt(str.substring(1), 16) : parseInt(str);\n    return isNaN(val) ? def : val;\n}\nexport function safeFloat(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = parseFloat(str);\n    return isNaN(val) ? def : val;\n}\nexport function newElement(parent, tag, attr) {\n    let domNew = dom(`<${tag}/>`);\n    if (attr)\n        domNew.attr(attr);\n    domLegacy(parent).append(domNew);\n    return domNew.el;\n}\nexport function addText(parent, text) {\n    let el = dom(parent).el;\n    el.appendChild(document.createTextNode(text));\n}\nexport function plural(count) {\n    return count == 1 ? '' : 's';\n}\nexport function formatDouble(value, sigfig) {\n    if (value == null)\n        return '';\n    let str = value.toPrecision(sigfig);\n    if (str.indexOf('.') > 0) {\n        while (str.endsWith('0'))\n            str = str.substring(0, str.length - 1);\n        if (str.endsWith('.'))\n            str = str.substring(0, str.length - 1);\n    }\n    return str;\n}\nexport function htmlToRGB(col) {\n    if (col == null || col.charAt(0) != '#' || col.length != 7)\n        return null;\n    return parseInt(col.substring(1), 16);\n}\nexport function colourCode(col) {\n    let hex = (col & 0xFFFFFF).toString(16);\n    while (hex.length < 6)\n        hex = '0' + hex;\n    return '#' + hex;\n}\nexport function colourAlpha(col) {\n    let transp = (col >>> 24) & 0xFF;\n    return transp == 0 ? 1 : transp == 0xFF ? 0 : 1 - (transp * (1.0 / 255));\n}\nconst ONE_OVER_255 = 1.0 / 255;\nexport function colourCanvas(col) {\n    if (col == 0xFFFFFF)\n        return 'white';\n    if (col == 0x000000)\n        return 'black';\n    if (col == -1)\n        return null;\n    if (col >= 0 && col <= 0xFFFFFF)\n        return colourCode(col);\n    const t = ((col >> 24) & 0xFF) * ONE_OVER_255;\n    const r = ((col >> 16) & 0xFF);\n    const g = ((col >> 8) & 0xFF);\n    const b = (col & 0xFF);\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + (1 - t) + ')';\n}\nexport function blendRGB(fract, rgb1, rgb2, rgb3) {\n    fract = Math.max(0, Math.min(1, fract));\n    let r1 = ((rgb1 >> 16) & 0xFF) * ONE_OVER_255, g1 = ((rgb1 >> 8) & 0xFF) * ONE_OVER_255, b1 = (rgb1 & 0xFF) * ONE_OVER_255;\n    let r2 = ((rgb2 >> 16) & 0xFF) * ONE_OVER_255, g2 = ((rgb2 >> 8) & 0xFF) * ONE_OVER_255, b2 = (rgb2 & 0xFF) * ONE_OVER_255;\n    let R, G, B;\n    if (rgb3 == null) {\n        let f1 = 1 - fract, f2 = fract;\n        R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n        G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n        B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n    }\n    else {\n        let r3 = ((rgb3 >> 16) & 0xFF) * ONE_OVER_255, g3 = ((rgb3 >> 8) & 0xFF) * ONE_OVER_255, b3 = (rgb3 & 0xFF) * ONE_OVER_255;\n        if (fract < 0.5) {\n            let f2 = fract * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n            G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n            B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n        }\n        else {\n            let f2 = (fract - 0.5) * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r2 + f2 * r3));\n            G = Math.round(0xFF * (f1 * g2 + f2 * g3));\n            B = Math.round(0xFF * (f1 * b2 + f2 * b3));\n        }\n    }\n    return (R << 16) | (G << 8) | B;\n}\nexport function formatDate(date) {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let day = date.getDate(), mon = date.getMonth(), year = date.getFullYear();\n    return day + '-' + MONTHS[mon] + '-' + year;\n}\nexport function nodeText(node) {\n    let ret = '';\n    if (!node)\n        return '';\n    node = node.firstChild;\n    while (node) {\n        if (node.nodeType == 3 || node.nodeType == 4)\n            ret += node.nodeValue;\n        node = node.nextSibling;\n    }\n    return ret;\n}\nexport function isDef(v) {\n    return !(v === null || typeof v === 'undefined');\n}\nexport function notDef(v) {\n    return v === null || typeof v === 'undefined';\n}\nexport function eventCoords(event, container) {\n    let pos = domLegacy(container).offset();\n    let relX = event.pageX - pos.x;\n    let relY = event.pageY - pos.y;\n    return [relX, relY];\n}\nexport function setBoundaryPixels(dom, x, y, w, h) {\n    dom.css({ 'left': x + 'px', 'top': y + 'px', 'width': w + 'px', 'height': h + 'px' });\n}\nexport function getBoundaryPixelsDOM(dom) {\n    let offset = dom.offset();\n    return [offset.x, offset.y, dom.width(), dom.height()];\n}\nexport function getOffsetPixelsDOM(dom) {\n    return [dom.elHTML.offsetLeft, dom.elHTML.offsetTop, dom.elHTML.offsetWidth, dom.elHTML.offsetHeight];\n}\nexport function norm_xy(dx, dy) {\n    return Math.hypot(dx, dy);\n}\nexport function norm_xyz(dx, dy, dz) {\n    return Math.hypot(dx, dy, dz);\n}\nexport function norm2_xy(dx, dy) {\n    return dx * dx + dy * dy;\n}\nexport function norm2_xyz(dx, dy, dz) {\n    return dx * dx + dy * dy + dz * dz;\n}\nexport function signum(v) {\n    return v < 0 ? -1 : v > 0 ? 1 : 0;\n}\nexport function sqr(v) {\n    return v * v;\n}\nexport function invZ(v) { return v == 0 ? 0 : 1.0 / v; }\nexport function fltEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-7 * Math.max(v1, v2); }\nexport function realEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-14 * Math.max(v1, v2); }\nexport function randomInt(size) {\n    if (size <= 1)\n        return 0;\n    return Math.floor(Math.random() * size);\n}\nexport const TWOPI = 2 * Math.PI;\nexport const INV_TWOPI = 1.0 / TWOPI;\nexport const DEGRAD = Math.PI / 180;\nexport const RADDEG = 180 / Math.PI;\nexport function angleNorm(th) {\n    if (th == -Math.PI)\n        return Math.PI;\n    if (th < -Math.PI) {\n        let mod = Math.ceil((-th - Math.PI) * INV_TWOPI);\n        return th + mod * TWOPI;\n    }\n    if (th > Math.PI) {\n        let mod = Math.ceil((th - Math.PI) * INV_TWOPI);\n        return th - mod * TWOPI;\n    }\n    return th;\n}\nexport function angleDiff(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta - (theta > Math.PI ? TWOPI : 0) + (theta <= -Math.PI ? TWOPI : 0);\n}\nexport function angleDiffPos(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta + (theta < 0 ? TWOPI : 0);\n}\nexport function sortAngles(theta) {\n    if (theta == null || theta.length < 2)\n        return theta;\n    theta = theta.slice(0);\n    for (let n = 0; n < theta.length; n++)\n        theta[n] = angleNorm(theta[n]);\n    Vec.sort(theta);\n    while (true) {\n        let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n        if (angleDiff(b, a) <= angleDiff(c, b))\n            break;\n        for (let n = theta.length - 1; n > 0; n--)\n            theta[n] = theta[n - 1];\n        theta[0] = a;\n    }\n    return theta;\n}\nexport function uniqueAngles(theta, threshold) {\n    theta = sortAngles(theta);\n    for (let n = 1; n < theta.length; n++) {\n        if (Math.abs(angleDiff(theta[n], theta[n - 1])) <= threshold) {\n            theta.splice(n, 1);\n            n--;\n        }\n    }\n    return theta;\n}\nexport function minArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.min(v, a[n]);\n    return v;\n}\nexport function maxArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.max(v, a[n]);\n    return v;\n}\nexport function findNode(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    while (node) {\n        if (node.nodeName == name)\n            return node;\n        node = node.nextSibling;\n    }\n    return null;\n}\nexport function findNodes(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    let list = [];\n    while (node) {\n        if (node.nodeName == name)\n            list.push(node);\n        node = node.nextSibling;\n    }\n    return list;\n}\nexport function pathRoundedRect(x1, y1, x2, y2, rad) {\n    let path = new Path2D();\n    path.moveTo(x2 - rad, y1);\n    path.quadraticCurveTo(x2, y1, x2, y1 + rad);\n    path.lineTo(x2, y2 - rad);\n    path.quadraticCurveTo(x2, y2, x2 - rad, y2);\n    path.lineTo(x1 + rad, y2);\n    path.quadraticCurveTo(x1, y2, x1, y2 - rad);\n    path.lineTo(x1, y1 + rad);\n    path.quadraticCurveTo(x1, y1, x1 + rad, y1);\n    path.closePath();\n    return path;\n}\nexport function coordsRoundedRect(x1, y1, x2, y2, rad) {\n    let px = [x2 - rad, x2, x2, x2, x2, x2 - rad, x1 + rad, x1, x1, x1, x1, x1 + rad];\n    let py = [y1, y1, y1 + rad, y2 - rad, y2, y2, y2, y2, y2 - rad, y1 + rad, y1, y1];\n    let ctrl = [false, true, false, false, true, false, false, true, false, false, true, false];\n    return [px, py, ctrl];\n}\nexport function drawLine(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\nexport const ASCENT_FUDGE = 1.4;\nexport function fontSansSerif(ascent) { return `${ascent * ASCENT_FUDGE}px sans-serif`; }\nexport function pixelDensity() {\n    if ('devicePixelRatio' in window && window.devicePixelRatio > 1)\n        return window.devicePixelRatio;\n    return 1;\n}\nexport function clone(data) {\n    if (data == null)\n        return null;\n    if (Array.isArray(data))\n        return data.slice(0);\n    if (typeof data != 'object')\n        return data;\n    let result = {};\n    for (let key in data)\n        result[key] = data[key];\n    return result;\n}\nexport function deepClone(data) {\n    if (data == null)\n        return null;\n    if (typeof data == 'function')\n        return null;\n    if (typeof data != 'object')\n        return data;\n    let result = Array.isArray(data) ? [] : {};\n    for (let key in data) {\n        let val = data[key];\n        result[key] = typeof val === 'object' ? deepClone(val) : val;\n    }\n    return result;\n}\nexport function escapeHTML(text) {\n    if (!text)\n        return '';\n    const map = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' };\n    return text.replace(/[&<>\"']/g, (m) => map[m]);\n}\nexport function orBlank(str) { return str == null ? '' : str; }\nexport function dictValues(dict) {\n    let list = [];\n    for (let key in dict)\n        list.push(dict[key]);\n    return list;\n}\nexport function zip(u, v) {\n    return u.map((a, i) => [a, v[i]]);\n}\nexport function toUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let charcode = str.charCodeAt(n);\n        if (charcode < 0x80)\n            stripe += str.charAt(n);\n        else if (charcode < 0x800) {\n            stripe += String.fromCharCode(0xc0 | (charcode >> 6));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            stripe += String.fromCharCode(0xe0 | (charcode >> 12));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else {\n            n++;\n            charcode = 0x10000 + (((charcode & 0x3FF) << 10) | (str.charCodeAt(n) & 0x3FF));\n            stripe += String.fromCharCode(0xf0 | (charcode >> 18));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3F));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function fromUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let value = str.charCodeAt(n);\n        if (value < 0x80)\n            stripe += str.charAt(n);\n        else if (value > 0xBF && value < 0xE0) {\n            stripe += String.fromCharCode((value & 0x1F) << 6 | str.charCodeAt(n + 1) & 0x3F);\n            n++;\n        }\n        else if (value > 0xDF && value < 0xF0) {\n            str += String.fromCharCode((value & 0x0F) << 12 | (str.charCodeAt(n + 1) & 0x3F) << 6 | str.charCodeAt(n + 2) & 0x3F);\n            n += 2;\n        }\n        else {\n            let charCode = ((value & 0x07) << 18 | (str.charCodeAt(n + 1) & 0x3F) << 12 | (str.charCodeAt(n + 2) & 0x3F) << 6 | str.charCodeAt(n + 3) & 0x3F) - 0x010000;\n            stripe += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n            n += 3;\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function jsonPrettyPrint(json) {\n    let lines = JSON.stringify(json, null, 1).split(/\\n/);\n    for (let n = 0; n < lines.length; n++) {\n        lines[n] = lines[n].trim();\n        if (lines[n].length > 1 && (lines[n].endsWith('{') || lines[n].endsWith('['))) {\n            let ch = lines[n].charAt(lines[n].length - 1);\n            lines[n] = lines[n].substring(0, lines[n].length - 1);\n            lines.splice(n + 1, 0, ch);\n            n--;\n        }\n    }\n    let indent = 0;\n    for (let n = 0; n < lines.length; n++) {\n        let orig = lines[n];\n        if (orig == ']' || orig == '}' || orig == '],' || orig == '},')\n            indent--;\n        lines[n] = '\\t'.repeat(indent) + orig;\n        if (orig == '[' || orig == '{')\n            indent++;\n    }\n    return lines.join('\\n');\n}\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[\"Backspace\"] = \"Backspace\";\n    KeyCode[\"Tab\"] = \"Tab\";\n    KeyCode[\"Enter\"] = \"Enter\";\n    KeyCode[\"Escape\"] = \"Escape\";\n    KeyCode[\"Space\"] = \" \";\n    KeyCode[\"PageUp\"] = \"PageUp\";\n    KeyCode[\"PageDown\"] = \"PageDown\";\n    KeyCode[\"End\"] = \"End\";\n    KeyCode[\"Home\"] = \"Home\";\n    KeyCode[\"Left\"] = \"ArrowLeft\";\n    KeyCode[\"Right\"] = \"ArrowRight\";\n    KeyCode[\"Up\"] = \"ArrowUp\";\n    KeyCode[\"Down\"] = \"ArrowDown\";\n    KeyCode[\"Delete\"] = \"Delete\";\n    KeyCode[\"Insert\"] = \"Insert\";\n})(KeyCode || (KeyCode = {}));\nexport function readTextURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('GET', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => resolve(request.response.toString());\n            request.onerror = () => resolve(null);\n            request.send();\n        });\n    });\n}\nexport function postJSONURL(url, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('POST', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => {\n                let txt = request.response.toString();\n                try {\n                    resolve(JSON.parse(txt));\n                }\n                catch (ex) {\n                    let snippet = txt.substring(0, Math.min(200, txt.length)) + (txt.length > 200 ? '...etc...' : '');\n                    reject('JSON parsing error on result:' + ex + ' for text: ' + snippet);\n                }\n            };\n            request.onerror = () => reject('Failed to request URL: ' + url);\n            request.send(JSON.stringify(params));\n        });\n    });\n}\nexport function yieldDOM() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve()));\n    });\n}\nexport function pause(seconds) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve(), seconds * 1000));\n    });\n}\nlet staticScrollerSize = null;\nexport function empiricalScrollerSize() {\n    if (staticScrollerSize)\n        return staticScrollerSize;\n    let outer = dom('<div/>').css({ 'visibility': 'hidden', 'width': '100px', 'height': '100px', 'overflow': 'scroll' }).appendTo(dom(document.body));\n    let inner = dom('<div/>').css({ 'width': '100%', 'height': '100%' }).appendTo(outer);\n    staticScrollerSize = new Size(100 - inner.elHTML.offsetWidth, 100 - inner.elHTML.offsetHeight);\n    outer.remove();\n    return staticScrollerSize;\n}\nexport function stringSimilarityPermutations(str1, str2) {\n    if (!str1 || !str2)\n        return 0;\n    const ch1 = Array.from(str1), len1 = ch1.length;\n    const ch2 = Array.from(str2), len2 = ch2.length;\n    let levenshteinDistance = (sz1, sz2) => {\n        let dist = [];\n        for (let i = 0; i <= sz1; i++) {\n            dist.push(Vec.numberArray(0, sz2 + 1));\n            dist[i][0] = i;\n        }\n        for (let j = 1; j <= sz2; j++)\n            dist[0][j] = j;\n        for (let j = 1; j <= sz2; j++)\n            for (let i = 1; i <= sz1; i++) {\n                let cost = ch1[i - 1] == ch2[j - 1] ? 0 : 1;\n                dist[i][j] = Math.min(Math.min(dist[i - 1][j] + 1, dist[i][j - 1] + 1), dist[i - 1][j - 1] + cost);\n            }\n        return dist[sz1][sz2];\n    };\n    let cost = ch1[len1 - 1] == ch2[len2 - 1] ? 0 : 1;\n    let lev1 = levenshteinDistance(len1 - 1, len2) + 1;\n    let lev2 = levenshteinDistance(len1, len2 - 1) + 1;\n    let lev3 = levenshteinDistance(len1 - 1, len2 - 1) + cost;\n    return Math.min(Math.min(lev1, lev2), lev3);\n}\n//# sourceMappingURL=util.js.map","import { norm2_xy, norm_xy, sqr } from './util';\nimport { Vec } from './Vec';\nconst EPSILON = Math.pow(2, -52);\nexport class Triangulation2D {\n    constructor(px, py) {\n        this.px = px;\n        this.py = py;\n        this.numTriangles = 0;\n        this.edgeStack = Vec.numberArray(0, 512);\n        this.hull = null;\n        this.px = px;\n        this.py = py;\n        this.sz = px.length;\n        let maxTriangles = Math.max(2 * this.sz - 5, 0);\n        this.triangles = new Array(maxTriangles * 3);\n        this.halfedges = new Array(maxTriangles * 3);\n        this.hashSize = Math.ceil(Math.sqrt(this.sz));\n        this.hullPrev = new Array(this.sz);\n        this.hullNext = new Array(this.sz);\n        this.hullTri = new Array(this.sz);\n        this.hullHash = Vec.numberArray(-1, this.hashSize);\n        this.ids = new Array(this.sz);\n        this.dists = new Array(this.sz);\n        this.update();\n    }\n    trimConcave(threshold) {\n        const threshSq = sqr(threshold);\n        const { sz, px, py } = this;\n        let tri = this.triangles.slice(0);\n        let edge = [];\n        for (let n = 0, i = 0; i < tri.length; n++, i += 3) {\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]));\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]));\n            edge.push(sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]));\n        }\n        let uniqueEdges = Vec.uniqueUnstable(edge);\n        for (let n = 0; n < edge.length; n++)\n            edge[n] = uniqueEdges.indexOf(edge[n]);\n        let edgeCount = new Array(edge.length);\n        while (true) {\n            const ntri = tri.length / 3;\n            edgeCount.fill(0);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                edgeCount[edge[i + 0]]++;\n                edgeCount[edge[i + 1]]++;\n                edgeCount[edge[i + 2]]++;\n            }\n            let mask = Vec.booleanArray(true, ntri);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                const c1 = edgeCount[edge[i + 0]];\n                const c2 = edgeCount[edge[i + 1]];\n                const c3 = edgeCount[edge[i + 2]];\n                const i1 = tri[i], i2 = tri[i + 1], i3 = tri[i + 2];\n                if (c1 == 1 && c2 != 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i2], py[i1] - py[i2]) < threshSq;\n                else if (c1 != 1 && c2 == 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i3], py[i1] - py[i3]) < threshSq;\n                else if (c1 != 1 && c2 != 1 && c3 == 1)\n                    mask[n] = norm2_xy(px[i2] - px[i3], py[i2] - py[i3]) < threshSq;\n            }\n            if (Vec.allTrue(mask))\n                break;\n            let repTri = new Array(Vec.maskCount(mask) * 3);\n            let repEdge = new Array(Vec.maskCount(mask) * 3);\n            for (let n = 0, i = 0, j = 0, k = 0; n < ntri; n++, i += 3)\n                if (mask[n]) {\n                    repTri[j++] = tri[i];\n                    repTri[j++] = tri[i + 1];\n                    repTri[j++] = tri[i + 2];\n                    repEdge[k++] = edge[i];\n                    repEdge[k++] = edge[i + 1];\n                    repEdge[k++] = edge[i + 2];\n                }\n            tri = repTri;\n            edge = repEdge;\n        }\n        return tri;\n    }\n    traceOutline(tri) {\n        const npt = tri.length, ntri = npt / 3;\n        const { sz, px, py } = this;\n        let edgeCount = new Map();\n        for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n            const e1 = sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]);\n            const e2 = sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]);\n            const e3 = sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]);\n            edgeCount.set(e1, (edgeCount.get(e1) || 0) + 1);\n            edgeCount.set(e2, (edgeCount.get(e2) || 0) + 1);\n            edgeCount.set(e3, (edgeCount.get(e3) || 0) + 1);\n        }\n        let edgePairs = [];\n        for (let entry of edgeCount.entries())\n            if (entry[1] == 1) {\n                const e = entry[0];\n                const i1 = Math.floor(e / sz), i2 = e % sz;\n                edgePairs.push(i1);\n                edgePairs.push(i2);\n            }\n        const idx = Vec.uniqueUnstable(edgePairs);\n        const isz = idx.length;\n        const idxMap = new Map();\n        for (let n = 0; n < isz; n++)\n            idxMap.set(idx[n], n);\n        let g1 = Vec.numberArray(-1, isz), g2 = Vec.numberArray(-1, isz);\n        for (let n = 0; n < edgePairs.length; n += 2) {\n            const i1 = idxMap.get(edgePairs[n]), i2 = idxMap.get(edgePairs[n + 1]);\n            if (g1[i1] < 0)\n                g1[i1] = i2;\n            else\n                g2[i1] = i2;\n            if (g1[i2] < 0)\n                g1[i2] = i1;\n            else\n                g2[i2] = i1;\n        }\n        let mask = Vec.booleanArray(false, isz);\n        let sequence = new Array(isz);\n        sequence[0] = 0;\n        mask[0] = true;\n        for (let n = 1; n < isz; n++) {\n            const i = sequence[n - 1];\n            if (!mask[g1[i]])\n                sequence[n] = g1[i];\n            else\n                sequence[n] = g2[i];\n            mask[sequence[n]] = true;\n        }\n        return Vec.idxGet(idx, sequence);\n    }\n    update() {\n        const sz = this.sz;\n        let { px, py, ids, dists, triangles, halfedges } = this;\n        const minX = Vec.min(px), minY = Vec.min(py);\n        const maxX = Vec.max(px), maxY = Vec.max(py);\n        for (let n = 0; n < sz; n++)\n            ids[n] = n;\n        this.centreX = 0.5 * (minX + maxX);\n        this.centreY = 0.5 * (minY + maxY);\n        let i0 = 0, i1 = 0, i2 = 0;\n        let minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            const d = norm_xy(this.centreX - px[n], this.centreY - py[n]);\n            if (d < minDist) {\n                i0 = n;\n                minDist = d;\n            }\n        }\n        const i0x = px[i0], i0y = py[i0];\n        minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0)\n                continue;\n            const d = norm_xy(i0x - px[n], i0y - py[n]);\n            if (d < minDist && d > 0) {\n                i1 = n;\n                minDist = d;\n            }\n        }\n        let i1x = px[i1], i1y = py[i1];\n        let minRadius = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0 || n == i1)\n                continue;\n            let r = this.circumRadius(i0x, i0y, i1x, i1y, px[n], py[n]);\n            if (r < minRadius) {\n                i2 = n;\n                minRadius = r;\n            }\n        }\n        let i2x = px[i2], i2y = py[i2];\n        if (!Number.isFinite(minRadius)) {\n            for (let n = 0; n < sz; n++) {\n                dists[n] = px[n] - px[0];\n                if (dists[n] == 0)\n                    dists[n] = py[n] - py[0];\n            }\n            this.quicksort(0, sz - 1);\n            let hull = new Array(sz);\n            let j = 0;\n            let d0 = Number.NEGATIVE_INFINITY;\n            for (let n = 0; n < sz; n++) {\n                let id = ids[n];\n                if (dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = dists[id];\n                }\n            }\n            this.hull = hull.slice(0, j);\n            triangles = [];\n            halfedges = [];\n            return;\n        }\n        if (this.orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            let i = i1;\n            let x = i1x, y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n        this.pickCircumCentre(i0x, i0y, i1x, i1y, i2x, i2y);\n        for (let n = 0; n < sz; n++)\n            dists[n] = norm_xy(px[n] - this.centreX, py[n] - this.centreY);\n        this.quicksort(0, sz - 1);\n        this.hullStart = i0;\n        let hullSize = 3;\n        const { hullNext, hullPrev, hullTri, hullHash, hashSize } = this;\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n        hullHash.fill(-1);\n        hullHash[this.hashKey(i0x, i0y)] = i0;\n        hullHash[this.hashKey(i1x, i1y)] = i1;\n        hullHash[this.hashKey(i2x, i2y)] = i2;\n        this.numTriangles = 0;\n        this.addTriangle(i0, i1, i2, -1, -1, -1);\n        let xp = 0, yp = 0;\n        for (let k = 0; k < ids.length; k++) {\n            let i = ids[k];\n            let x = px[i], y = py[i];\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON)\n                continue;\n            xp = x;\n            yp = y;\n            if (i == i0 || i == i1 || i == i2)\n                continue;\n            let start = 0;\n            for (let j = 0, key = this.hashKey(x, y); j < hashSize; j++) {\n                start = hullHash[(key + j) % hashSize];\n                if (start >= 0 && start != hullNext[start])\n                    break;\n            }\n            start = hullPrev[start];\n            let e = start, q = hullNext[e];\n            while (!this.orient(x, y, px[e], py[e], px[q], py[q])) {\n                e = q;\n                if (e == start) {\n                    e = -1;\n                    break;\n                }\n                q = hullNext[e];\n            }\n            if (e < 0)\n                continue;\n            let t = this.addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n            hullTri[i] = this.legalise(t + 2);\n            hullTri[e] = t;\n            hullSize++;\n            let n = hullNext[e];\n            q = hullNext[n];\n            while (this.orient(x, y, px[n], py[n], px[q], py[q])) {\n                t = this.addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this.legalise(t + 2);\n                hullNext[n] = n;\n                hullSize--;\n                n = q;\n                q = hullNext[n];\n            }\n            if (e == start) {\n                q = hullPrev[e];\n                while (this.orient(x, y, px[q], py[q], px[e], py[e])) {\n                    t = this.addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this.legalise(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e;\n                    hullSize--;\n                    e = q;\n                    q = hullPrev[e];\n                }\n            }\n            this.hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n            hullHash[this.hashKey(x, y)] = i;\n            hullHash[this.hashKey(px[e], py[e])] = e;\n        }\n        this.hull = new Array(hullSize);\n        for (let n = 0, e = this.hullStart; n < hullSize; n++) {\n            this.hull[n] = e;\n            e = hullNext[e];\n        }\n        this.triangles = triangles.slice(0, this.numTriangles);\n        this.halfedges = halfedges.slice(0, this.numTriangles);\n    }\n    hashKey(x, y) {\n        return Math.floor(this.pseudoAngle(x - this.centreX, y - this.centreY) * this.hashSize) % this.hashSize;\n    }\n    legalise(a) {\n        let i = 0;\n        let ar = 0;\n        while (true) {\n            let b = this.halfedges[a];\n            let a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n            if (b < 0) {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n                continue;\n            }\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n            const { px, py, triangles, halfedges } = this;\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n            let illegal = this.inCircle(px[p0], py[p0], px[pr], py[pr], px[pl], py[pl], px[p1], py[p1]);\n            if (illegal) {\n                this.triangles[a] = p1;\n                this.triangles[b] = p0;\n                const hbl = halfedges[bl];\n                if (hbl < 0) {\n                    let e = this.hullStart;\n                    do {\n                        if (this.hullTri[e] == bl) {\n                            this.hullTri[e] = a;\n                            break;\n                        }\n                        e = this.hullPrev[e];\n                    } while (e != this.hullStart);\n                }\n                this.link(a, hbl);\n                this.link(b, halfedges[ar]);\n                this.link(ar, bl);\n                const br = b0 + (b + 1) % 3;\n                if (i < this.edgeStack.length)\n                    this.edgeStack[i++] = br;\n            }\n            else {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n            }\n        }\n        return ar;\n    }\n    link(a, b) {\n        this.halfedges[a] = b;\n        if (b >= 0)\n            this.halfedges[b] = a;\n    }\n    addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.numTriangles;\n        this.triangles[t] = i0;\n        this.triangles[t + 1] = i1;\n        this.triangles[t + 2] = i2;\n        this.link(t, a);\n        this.link(t + 1, b);\n        this.link(t + 2, c);\n        this.numTriangles += 3;\n        return t;\n    }\n    pseudoAngle(dx, dy) {\n        const p = dx / (Math.abs(dx) + Math.abs(dy));\n        return (dy > 0 ? 3 - p : 1 + p) / 4;\n    }\n    orientIfSure(px, py, rx, ry, qx, qy) {\n        const l = (ry - py) * (qx - px);\n        const r = (rx - px) * (qy - py);\n        return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n    }\n    orient(rx, ry, qx, qy, px, py) {\n        let o = this.orientIfSure(px, py, rx, ry, qx, qy);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(rx, ry, qx, qy, px, py);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(qx, qy, px, py, rx, ry);\n        return o < 0;\n    }\n    inCircle(ax, ay, bx, by, cx, cy, px, py) {\n        const dx = ax - px;\n        const dy = ay - py;\n        const ex = bx - px;\n        const ey = by - py;\n        const fx = cx - px;\n        const fy = cy - py;\n        const ap = dx * dx + dy * dy;\n        const bp = ex * ex + ey * ey;\n        const cp = fx * fx + fy * fy;\n        return dx * (ey * cp - bp * fy) -\n            dy * (ex * cp - bp * fx) +\n            ap * (ex * fy - ey * fx) < 0;\n    }\n    circumRadius(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        const x = (ey * bl - dy * cl) * d;\n        const y = (dx * cl - ex * bl) * d;\n        return x * x + y * y;\n    }\n    pickCircumCentre(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        this.centreX = ax + (ey * bl - dy * cl) * d;\n        this.centreY = ay + (dx * cl - ex * bl) * d;\n    }\n    quicksort(left, right) {\n        const { ids, dists } = this;\n        if (right - left <= 20) {\n            for (let i = left + 1; i <= right; i++) {\n                const temp = ids[i];\n                const tempDist = dists[temp];\n                let j = i - 1;\n                while (j >= left && dists[ids[j]] > tempDist)\n                    ids[j + 1] = ids[j--];\n                ids[j + 1] = temp;\n            }\n        }\n        else {\n            let median = (left + right) >> 1;\n            let i = left + 1;\n            let j = right;\n            Vec.swap(ids, median, i);\n            if (dists[ids[left]] > dists[ids[right]])\n                Vec.swap(ids, left, right);\n            if (dists[ids[i]] > dists[ids[right]])\n                Vec.swap(ids, i, right);\n            if (dists[ids[left]] > dists[ids[i]])\n                Vec.swap(ids, left, i);\n            let temp = ids[i];\n            const tempDist = dists[temp];\n            while (true) {\n                do\n                    i++;\n                while (dists[ids[i]] < tempDist);\n                do\n                    j--;\n                while (dists[ids[j]] > tempDist);\n                if (j < i)\n                    break;\n                Vec.swap(ids, i, j);\n            }\n            ids[left + 1] = ids[j];\n            ids[j] = temp;\n            if (right - i + 1 >= j - left) {\n                this.quicksort(i, right);\n                this.quicksort(left, j - 1);\n            }\n            else {\n                this.quicksort(left, j - 1);\n                this.quicksort(i, right);\n            }\n        }\n    }\n}\n//# sourceMappingURL=Triangulation2D.js.map","import { Matrix, SingularValueDecomposition } from './Matrix';\nimport { Triangulation2D } from './Triangulation2D';\nimport { angleDiff, angleDiffPos, angleNorm, maxArray, minArray, norm2_xy, norm_xy, realEqual, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nexport class GeomUtil {\n    static pointInPolygon(x, y, px, py) {\n        if (x < minArray(px) || x > maxArray(px) || y < minArray(py) || y > maxArray(py))\n            return false;\n        let sz = px.length;\n        for (let n = 0; n < sz; n++)\n            if (px[n] == x && py[n] == y)\n                return true;\n        let phase = false;\n        for (let n = 0; n < sz; n++) {\n            let x1 = px[n], y1 = py[n], x2 = px[n + 1 < sz ? n + 1 : 0], y2 = py[n + 1 < sz ? n + 1 : 0];\n            if (y > Math.min(y1, y2) && y <= Math.max(y1, y2) && x <= Math.max(x1, x2) && y1 != y2) {\n                let intr = (y - y1) * (x2 - x1) / (y2 - y1) + x1;\n                if (x1 == x2 || x <= intr)\n                    phase = !phase;\n            }\n        }\n        return phase;\n    }\n    static areLinesParallel(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let dxa = x2 - x1, dya = y2 - y1, dxb = x4 - x3, dyb = y4 - y3;\n        let xmajorA = Math.abs(dxa) > Math.abs(dya), xmajorB = Math.abs(dxb) > Math.abs(dyb);\n        if (xmajorA != xmajorB)\n            return false;\n        const EPS = 1E-6;\n        if (xmajorA)\n            return Math.abs(dya / dxa - dyb / dxb) < EPS;\n        else\n            return Math.abs(dxa / dya - dxb / dyb) < EPS;\n    }\n    static lineIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let u = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n        return [x1 + u * (x2 - x1), y1 + u * (y2 - y1)];\n    }\n    static isPointOnLineSeg(px, py, x1, y1, x2, y2) {\n        if (px < Math.min(x1, x2) || px > Math.max(x1, x2) || py < Math.min(y1, y2) || py > Math.max(y1, y2))\n            return false;\n        if ((px == x1 && py == y1) || (px == x2 && py == y2))\n            return true;\n        let dx = x2 - x1, dy = y2 - y1;\n        if (Math.abs(dx) > Math.abs(dy))\n            return realEqual(py, (dy / dx) * (px - x1) + y1);\n        else\n            return realEqual(px, (dx / dy) * (py - y1) + x1);\n    }\n    static pointLineDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        return Math.abs(dy * px - dx * py + x2 * y1 - y2 * x1) / norm_xy(dx, dy);\n    }\n    static pointLineSegDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        let t = ((px - x1) * dx + (py - y1) * dy) / norm2_xy(dx, dy);\n        t = Math.max(0, Math.min(1, t));\n        let tx = x1 + t * dx, ty = y1 + t * dy;\n        return norm_xy(px - tx, py - ty);\n    }\n    static doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (Math.max(x1, x2) < Math.min(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4))\n            return false;\n        if (Math.min(x1, x2) > Math.max(x3, x4) || Math.min(y1, y2) > Math.max(y3, y4))\n            return false;\n        if ((x1 == x3 && y1 == y3) || (x1 == x4 && y1 == y4) || (x2 == x3 && y2 == y3) || (x2 == x4 && y2 == y4))\n            return true;\n        if ((x1 == x2 || x3 == x4) && (x1 == x3 || x1 == x4 || x2 == x3 || x2 == x4))\n            return true;\n        if ((y1 == y2 || y3 == y4) && (y1 == y3 || y1 == y4 || y2 == y3 || y2 == y4))\n            return true;\n        let x4_x3 = x4 - x3, y4_y3 = y4 - y3, x2_x1 = x2 - x1, y2_y1 = y2 - y1, x1_x3 = x1 - x3, y1_y3 = y1 - y3;\n        let nx = x4_x3 * y1_y3 - y4_y3 * x1_x3;\n        let ny = x2_x1 * y1_y3 - y2_y1 * x1_x3;\n        let dn = y4_y3 * x2_x1 - x4_x3 * y2_y1;\n        if (dn == 0)\n            return false;\n        if (dn < 0) {\n            dn = -dn;\n            nx = -nx;\n            ny = -ny;\n        }\n        return nx >= 0 && nx <= dn && ny >= 0 && ny <= dn;\n    }\n    static rectsIntersect(x1, y1, w1, h1, x2, y2, w2, h2) {\n        if (x1 <= x2 && x1 + w1 >= x2 + w2 && y1 <= y2 && y1 + h1 >= y2 + h2)\n            return true;\n        if (x2 <= x1 && x2 + w2 >= x1 + w1 && y2 <= y1 && y2 + h2 >= y1 + h1)\n            return true;\n        if (x1 + w1 < x2 || x2 + w2 < x1 || y1 + h1 < y2 || y2 + h2 < y1)\n            return false;\n        return true;\n    }\n    static sortAngles(theta) {\n        if (theta == null || theta.length < 2)\n            return theta;\n        theta = theta.slice(0);\n        for (let n = 0; n < theta.length; n++)\n            theta[n] = angleNorm(theta[n]);\n        if (theta.length == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [theta[1], theta[0]];\n            return theta;\n        }\n        Vec.sort(theta);\n        while (true) {\n            let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            for (let n = theta.length - 1; n > 0; n--)\n                theta[n] = theta[n - 1];\n            theta[0] = a;\n        }\n        return theta;\n    }\n    static idxSortAngles(theta) {\n        const sz = Vec.len(theta);\n        if (theta == null || sz < 2)\n            return Vec.identity0(sz);\n        if (sz == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [1, 0];\n            else\n                return [0, 1];\n        }\n        theta = Vec.duplicate(theta);\n        for (let n = 0; n < sz; n++)\n            theta[n] = angleNorm(theta[n]);\n        let idx = Vec.idxSort(theta);\n        while (true) {\n            let a = theta[idx[sz - 1]], b = theta[idx[0]], c = theta[idx[1]];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            let last = idx.pop();\n            idx.unshift(last);\n        }\n        return idx;\n    }\n    static uniqueAngles(theta, threshold) {\n        let ang = GeomUtil.sortAngles(theta), ret = [];\n        ret.push(ang[0]);\n        for (let n = 1; n < ang.length; n++) {\n            if (Math.abs(angleDiff(ang[n], ang[n - 1])) > threshold)\n                ret.push(ang[n]);\n        }\n        return ret;\n    }\n    static thetaObtuse(th1, th2) {\n        let dth = th2 - th1;\n        while (dth < -Math.PI)\n            dth += 2 * Math.PI;\n        while (dth > Math.PI)\n            dth -= 2 * Math.PI;\n        return dth > 0 ? th1 - 0.5 * (2 * Math.PI - dth) : th1 + 0.5 * (2 * Math.PI + dth);\n    }\n    static emergentAngle(theta) {\n        let len = theta.length;\n        if (len == 1)\n            return theta[0];\n        if (len == 2)\n            return 0.5 * (theta[0] + theta[1]);\n        Vec.sort(theta);\n        let bottom = 0;\n        let behind = angleDiffPos(theta[0], theta[len - 1]);\n        for (let n = 1; n < len; n++) {\n            let delta = angleDiffPos(theta[n], theta[n - 1]);\n            if (delta > behind) {\n                bottom = n;\n                behind = delta;\n            }\n        }\n        let sum = 0;\n        for (let n = 0; n < len; n++) {\n            let delta = theta[n] - theta[bottom];\n            if (delta < 0)\n                delta += TWOPI;\n            sum += delta;\n        }\n        return sum / len + theta[bottom];\n    }\n    static dotProduct(v1, v2) {\n        return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n    }\n    static crossProduct(v1, v2) {\n        const x = v1[1] * v2[2] - v1[2] * v2[1];\n        const y = v1[2] * v2[0] - v1[0] * v2[2];\n        const z = v1[0] * v2[1] - v1[1] * v2[0];\n        return [x, y, z];\n    }\n    static affineTranslate(dx, dy) {\n        return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n    }\n    static affineMirror(xaxis, yaxis) {\n        return [[xaxis ? -1 : 1, 0, 0], [0, yaxis ? -1 : 1, 0], [0, 0, 1]];\n    }\n    static affineScale(sx, sy) {\n        return [[sx, 0, 0], [0, sy, 0], [0, 0, 1]];\n    }\n    static affineRotate(theta) {\n        let cos = Math.cos(theta), sin = Math.sin(theta);\n        return [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n    }\n    static affineCompose(A, B) {\n        let tfm = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        let Acol = [0, 0, 0];\n        for (let j = 0; j < 3; j++) {\n            for (let k = 0; k < 3; k++)\n                Acol[k] = A[k][j];\n            for (let i = 0; i < 3; i++) {\n                let Brow = B[i];\n                let s = 0;\n                for (let k = 0; k < 3; k++)\n                    s += Acol[k] * Brow[k];\n                tfm[i][j] = s;\n            }\n        }\n        return tfm;\n    }\n    static applyAffine(x, y, tfm) {\n        return [x * tfm[0][0] + y * tfm[0][1] + tfm[0][2], x * tfm[1][0] + y * tfm[1][1] + tfm[1][2]];\n    }\n    static applyAffineArray(x, y, tfm) {\n        for (let n = 0; n < x.length; n++)\n            [x[n], y[n]] = this.applyAffine(x[n], y[n], tfm);\n    }\n    static isAffineMirror(tfm) {\n        let a = tfm[0][0], b = tfm[0][1], c = tfm[0][2];\n        let d = tfm[1][0], e = tfm[1][1], f = tfm[1][2];\n        let g = tfm[2][0], h = tfm[2][1], i = tfm[2][2];\n        return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h < 0;\n    }\n    static magnitude2(v) {\n        return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n    }\n    static magnitude(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    }\n    static dist2(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return dx * dx + dy * dy + dz * dz;\n    }\n    static dist(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n    static normalise(v) {\n        const dsq = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n        if (dsq == 0)\n            return;\n        const inv = 1.0 / Math.sqrt(dsq);\n        v[0] *= inv;\n        v[1] *= inv;\n        v[2] *= inv;\n    }\n    static normalised(v) {\n        let ret = v.slice(0);\n        this.normalise(ret);\n        return ret;\n    }\n    static acuteAngle(v1, v2) {\n        let mag1 = this.magnitude(v1), mag2 = this.magnitude(v2);\n        if (mag1 == 0 || mag2 == 0)\n            return 0;\n        let dot = this.dotProduct(v1, v2);\n        let cosTheta = dot / (mag1 * mag2);\n        cosTheta = Math.max(-1, Math.min(1, cosTheta));\n        return Math.acos(cosTheta);\n    }\n    static arcControlPoints(rad, x1, y1, x2, y2) {\n        let t1x = -y1, t1y = x1;\n        let t2x = y2, t2y = -x2;\n        let dx = 0.5 * (x1 + x2);\n        let dy = 0.5 * (y1 + y2);\n        let tx = 3 / 8 * (t1x + t2x);\n        let ty = 3 / 8 * (t1y + t2y);\n        let a = tx * tx + ty * ty;\n        let b = dx * tx + dy * ty;\n        let c = dx * dx + dy * dy - rad * rad;\n        let D = b * b - a * c;\n        let k = (Math.sqrt(D) - b) / a;\n        return [x1 + k * t1x, y1 + k * t1y, x2 + k * t2x, y2 + k * t2y];\n    }\n    static createBezierEllipse(cx, cy, rw, rh, theta) {\n        let nseg = 24, npt = 2 * nseg + 1;\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        let incrAlpha = TWOPI / nseg;\n        let px = new Array(npt), py = new Array(npt);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            px[n * 2] = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta + cx;\n            py[n * 2] = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta + cy;\n        }\n        px[npt - 1] = px[0];\n        py[npt - 1] = py[0];\n        let smooth = 0.3;\n        for (let n = 0; n < nseg; n++) {\n            let n1 = (n - 1 + nseg) % nseg;\n            let n2 = n;\n            let n3 = (n + 1) % nseg;\n            let n4 = (n + 2) % nseg;\n            let x1 = px[n1 * 2], x2 = px[n2 * 2], x3 = px[n3 * 2], x4 = px[n4 * 2];\n            let y1 = py[n1 * 2], y2 = py[n2 * 2], y3 = py[n3 * 2], y4 = py[n4 * 2];\n            px[n * 2 + 1] = 0.5 * (x2 + x3 + smooth * (x2 - x1 + x3 - x4));\n            py[n * 2 + 1] = 0.5 * (y2 + y3 + smooth * (y2 - y1 + y3 - y4));\n        }\n        let ctrl = new Array(npt);\n        for (let n = 0; n < npt; n++)\n            ctrl[n] = (n & 1) == 1;\n        return { px, py, ctrl };\n    }\n    static fitCircle(x, y) {\n        let dsq = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < x.length; n++)\n            dsq = Math.min(dsq, norm2_xy(x[n], y[n]));\n        return Math.sqrt(dsq);\n    }\n    static fitEllipse(px, py, minX, minY, maxX, maxY) {\n        let bestW = 0.5 * this.fitCircle(px, py), bestH = bestW, bestScore = bestW * bestH;\n        let x = Vec.concat(px, [minX, maxX, 0, 0]);\n        let y = Vec.concat(py, [0, 0, minY, maxY]);\n        const sz = x.length;\n        let shrinkToFit = (whs) => {\n            let dmin = Number.POSITIVE_INFINITY;\n            let invW2 = 1.0 / (whs[0] * whs[0]), invH2 = 1.0 / (whs[1] * whs[1]);\n            for (let n = 0; n < sz; n++)\n                dmin = Math.min(dmin, Math.sqrt(x[n] * x[n] * invW2 + y[n] * y[n] * invH2));\n            if (dmin < 1) {\n                whs[0] *= dmin;\n                whs[1] *= dmin;\n            }\n            whs[2] = whs[0] * whs[1];\n        };\n        let mul = 1;\n        let whsX = [0, 0, 0], whsY = [0, 0, 0];\n        while (mul > 0.001) {\n            whsX[0] = bestW * (1 + mul);\n            whsX[1] = bestH;\n            shrinkToFit(whsX);\n            whsY[0] = bestW;\n            whsY[1] = bestH * (1 + mul);\n            shrinkToFit(whsY);\n            let anything = false;\n            if (whsX[2] > bestScore) {\n                bestW = whsX[0];\n                bestH = whsX[1];\n                bestScore = whsX[2];\n                anything = true;\n            }\n            if (whsY[2] > bestScore) {\n                bestW = whsY[0];\n                bestH = whsY[1];\n                bestScore = whsY[2];\n                anything = true;\n            }\n            if (!anything)\n                mul *= 0.6;\n        }\n        return [bestW, bestH];\n    }\n    static superimpose(ax, ay, bx, by) {\n        let sz = ax.length;\n        if (sz == 1) {\n            let dx = bx[0] - ax[0], dy = by[0] - ay[0];\n            return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n        }\n        if (sz == 2) {\n            let thetaA = Math.atan2(ay[1] - ay[0], ax[1] - ax[0]), thetaB = Math.atan2(by[1] - by[0], bx[1] - bx[0]);\n            let delta = angleDiff(thetaB, thetaA), cos = Math.cos(delta), sin = Math.sin(delta);\n            let rot00 = cos, rot01 = -sin;\n            let rot10 = sin, rot11 = cos;\n            let acx = 0.5 * (ax[0] + ax[1]), acy = 0.5 * (ay[0] + ay[1]);\n            let bcx = 0.5 * (bx[0] + bx[1]), bcy = 0.5 * (by[0] + by[1]);\n            let rax = rot00 * acx + rot01 * acy;\n            let ray = rot10 * acx + rot11 * acy;\n            return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n        }\n        let invsz = 1.0 / sz;\n        let acx = Vec.sum(ax) * invsz, acy = Vec.sum(ay) * invsz;\n        let bcx = Vec.sum(bx) * invsz, bcy = Vec.sum(by) * invsz;\n        let mtxA = new Matrix(3, sz), mtxB = new Matrix(3, sz);\n        for (let n = 0; n < sz; n++) {\n            mtxA.set(0, n, ax[n] - acx);\n            mtxA.set(1, n, ay[n] - acy);\n            mtxA.set(2, n, 0);\n            mtxB.set(0, n, bx[n] - bcx);\n            mtxB.set(1, n, by[n] - bcy);\n            mtxB.set(2, n, 0);\n        }\n        let cov = mtxA.times(mtxB.transpose());\n        let svd = new SingularValueDecomposition(cov);\n        let rotate = svd.getV().times(svd.getU().transpose());\n        let rot00 = rotate.get(0, 0), rot01 = rotate.get(0, 1);\n        let rot10 = rotate.get(1, 0), rot11 = rotate.get(1, 1);\n        let rax = rot00 * acx + rot01 * acy;\n        let ray = rot10 * acx + rot11 * acy;\n        return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n    }\n    static convexHull(x, y, flatness) {\n        let algo = new QuickHull(x, y, sqr(flatness * 0.1));\n        return [algo.hullX, algo.hullY];\n    }\n    static outlinePolygon(x, y, diameter) {\n        let del = new Triangulation2D(x, y);\n        let concave = del.trimConcave(diameter);\n        let idx = del.traceOutline(concave);\n        return [Vec.idxGet(x, idx), Vec.idxGet(y, idx)];\n    }\n}\nexport class QuickHull {\n    constructor(x, y, threshSq) {\n        this.x = x;\n        this.y = y;\n        this.threshSq = threshSq;\n        this.hsz = 0;\n        this.hullX = [];\n        this.hullY = [];\n        const sz = x.length;\n        let l = 0, r = 0;\n        for (let n = 0; n < sz; n++) {\n            if (x[r] > x[n] || (x[r] == x[n] && y[r] > y[n]))\n                r = n;\n            if (x[l] < x[n] || (x[l] == x[n] && y[l] < y[n]))\n                l = n;\n        }\n        let al1 = [], al2 = [];\n        for (let n = 0; n < sz; n++) {\n            if (n != l && n != r) {\n                if (this.right(r, l, n) > 0)\n                    al1.push(n);\n                else\n                    al2.push(n);\n            }\n        }\n        this.hullX.push(x[r]);\n        this.hullY.push(y[r]);\n        this.quickHull(r, l, al1);\n        this.hullX.push(x[l]);\n        this.hullY.push(y[l]);\n        this.quickHull(l, r, al2);\n        for (let n = 0; n < this.hullX.length - 1;) {\n            if (norm2_xy(this.hullX[n] - this.hullY[n + 1], this.hullY[n] - this.hullY[n + 1]) < threshSq) {\n                this.hullX.splice(n + 1, 1);\n                this.hullY.splice(n + 1, 1);\n            }\n            else\n                n++;\n        }\n    }\n    quickHull(a, b, al) {\n        if (al.length == 0)\n            return;\n        let c = this.furthestPoint(a, b, al);\n        let al1 = [], al2 = [];\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            if (this.right(a, c, p) > 0)\n                al1.push(p);\n            else if (this.right(c, b, p) > 0)\n                al2.push(p);\n        }\n        this.quickHull(a, c, al1);\n        this.hullX.push(this.x[c]);\n        this.hullY.push(this.y[c]);\n        this.quickHull(c, b, al2);\n    }\n    right(a, b, p) {\n        const x = this.x, y = this.y;\n        return (x[a] - x[b]) * (y[p] - y[b]) - (x[p] - x[b]) * (y[a] - y[b]);\n    }\n    distance(a, b, p) {\n        const x = this.x, y = this.y;\n        let u = ((x[p] - x[a]) * (x[b] - x[a]) + (y[p] - y[a]) * (y[b] - y[a])) / ((x[b] - x[a]) * (x[b] - x[a]) + (y[b] - y[a]) * (y[b] - y[a]));\n        let ux = x[a] + u * (x[b] - x[a]);\n        let uy = y[a] + u * (y[b] - y[a]);\n        return ((ux - x[p]) * (ux - x[p]) + (uy - y[p]) * (uy - y[p]));\n    }\n    furthestPoint(a, b, al) {\n        let maxDist = -1;\n        let maxPos = -1;\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            let dist = this.distance(a, b, p);\n            if (dist > maxDist) {\n                maxDist = dist;\n                maxPos = p;\n            }\n        }\n        return maxPos;\n    }\n}\nexport class RollingBall {\n    constructor(x, y, diameter) {\n        this.x = x;\n        this.y = y;\n        this.sequence = [];\n        const sz = x.length;\n        const threshSq = diameter * diameter;\n        let first = Vec.idxMax(x), latest = first;\n        let direction = 0.0;\n        let visited = Vec.booleanArray(false, sz);\n        this.sequence.push(first);\n        let roll = () => {\n            let bestIdx = -1;\n            let bestDelta = 0, bestTheta = 0;\n            for (let n = 0; n < sz; n++)\n                if (n != latest && !visited[n]) {\n                    let dx = x[n] - x[latest], dy = y[n] - y[latest];\n                    let dsq = norm2_xy(dx, dy);\n                    if (dsq == 0 || dsq > threshSq)\n                        continue;\n                    let theta = Math.atan2(dy, dx), delta = angleDiffPos(theta, direction);\n                    if (bestIdx < 0 || delta < bestDelta) {\n                        bestIdx = n;\n                        bestDelta = delta;\n                        bestTheta = theta;\n                    }\n                }\n            if (bestIdx < 0)\n                return -1;\n            direction = angleNorm(bestTheta - 0.5 * Math.PI);\n            visited[bestIdx] = true;\n            return bestIdx;\n        };\n        while (true) {\n            let next = roll();\n            if (next < 0) {\n                this.sequence = null;\n                return;\n            }\n            if (next == first)\n                break;\n            this.sequence.push(next);\n            latest = next;\n        }\n    }\n    sequencePos() {\n        if (!this.sequence)\n            return null;\n        let posList = [];\n        for (let n of this.sequence)\n            posList.push(new Pos(this.x[n], this.y[n]));\n        return posList;\n    }\n    sequenceXY() {\n        if (!this.sequence)\n            return [null, null];\n        let px = [], py = [];\n        for (let n of this.sequence) {\n            px.push(this.x[n]);\n            py.push(this.y[n]);\n        }\n        return [px, py];\n    }\n}\nexport class Pos {\n    static zero() { return new Pos(); }\n    static fromArray(src) { return new Pos(src[0], src[1]); }\n    constructor(x, y) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n    }\n    clone() { return new Pos(this.x, this.y); }\n    equals(other) { return this.x == other.x && this.y == other.y; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    withScaleBy(mag) {\n        return new Pos(this.x * mag, this.y * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Pos(this.x + dx, this.y + dy);\n    }\n    toString() { return '[' + this.x + ',' + this.y + ']'; }\n}\nexport class Size {\n    static zero() { return new Size(); }\n    static fromArray(src) { return new Size(src[0], src[1]); }\n    constructor(w, h) {\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Size(this.w, this.h); }\n    equals(other) { return this.w == other.w && this.h == other.h; }\n    isZero() { return this.w == 0 && this.h == 0; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    fitInto(maxW, maxH) {\n        let scale = 1;\n        if (this.w > maxW)\n            scale = maxW / this.w;\n        if (this.h > maxH)\n            scale = Math.min(scale, maxH / this.h);\n        if (scale < 1)\n            this.scaleBy(scale);\n    }\n    withScaleBy(mag) {\n        return new Size(this.w * mag, this.h * mag);\n    }\n    toString() { return '[' + this.w + ',' + this.h + ']'; }\n}\nexport class Box {\n    static zero() { return new Box(); }\n    static fromBounds(x1, y1, x2, y2) { return new Box(x1, y1, x2 - x1, y2 - y1); }\n    static fromSize(sz) { return new Box(0, 0, sz.w, sz.h); }\n    static fromOval(oval) { return new Box(oval.cx - oval.rw, oval.cy - oval.rh, 2 * oval.rw, 2 * oval.rh); }\n    static fromArray(src) { return new Box(src[0], src[1], src[2], src[3]); }\n    constructor(x, y, w, h) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Box(this.x, this.y, this.w, this.h); }\n    equals(other) { return this.x == other.x && this.y == other.y && this.w == other.w && this.h == other.h; }\n    getPos() { return new Pos(this.x, this.y); }\n    setPos(pos) {\n        this.x = pos.x;\n        this.y = pos.y;\n    }\n    getSize() { return new Size(this.w, this.h); }\n    setSize(sz) {\n        this.w = sz.w;\n        this.h = sz.h;\n    }\n    minX() { return this.x; }\n    minY() { return this.y; }\n    midX() { return this.x + 0.5 * this.w; }\n    midY() { return this.y + 0.5 * this.h; }\n    maxX() { return this.x + this.w; }\n    maxY() { return this.y + this.h; }\n    area() { return this.w * this.h; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    grow(bx, by) {\n        this.x -= bx;\n        this.y -= by;\n        this.w += 2 * bx;\n        this.h += 2 * by;\n    }\n    withScaleBy(mag) {\n        return new Box(this.x * mag, this.y * mag, this.w * mag, this.h * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Box(this.x + dx, this.y + dy, this.w, this.h);\n    }\n    withGrow(bx, by) {\n        return new Box(this.x - bx, this.y - by, this.w + 2 * bx, this.h + 2 * by);\n    }\n    intersects(other) {\n        return GeomUtil.rectsIntersect(this.x, this.y, this.w, this.h, other.x, other.y, other.w, other.h);\n    }\n    intersection(other) {\n        let x1 = this.x, x2 = x1 + this.w, y1 = this.y, y2 = y1 + this.h;\n        let x3 = other.x, x4 = x3 + other.w, y3 = other.y, y4 = y3 + other.h;\n        let x5 = Math.max(x1, x3), y5 = Math.max(y1, y3), x6 = Math.min(x2, x4), y6 = Math.min(y2, y4);\n        return new Box(x5, y5, x6 - x5, y6 - y5);\n    }\n    contains(x, y) {\n        return x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n    }\n    union(other) {\n        let x1 = Math.min(this.x, other.x), x2 = Math.max(this.x + this.w, other.x + other.w);\n        let y1 = Math.min(this.y, other.y), y2 = Math.max(this.y + this.h, other.y + other.h);\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    isZero() { return this.w == 0 && this.h == 0; }\n    isEmpty() { return this.w == 0 && this.h == 0; }\n    notEmpty() { return this.w > 0 || this.h > 0; }\n    toString() { return '[' + this.x + ',' + this.y + ';' + this.w + ',' + this.h + ']'; }\n}\nexport class Oval {\n    static zero() { return new Oval(); }\n    static fromBox(box) { return new Oval(box.x + 0.5 * box.w, box.y + 0.5 * box.h, 0.5 * box.w, 0.5 * box.h); }\n    static fromArray(src) { return new Oval(src[0], src[1], src[2], src[3]); }\n    constructor(cx, cy, rw, rh) {\n        this.cx = cx == null ? 0 : cx;\n        this.cy = cy == null ? 0 : cy;\n        this.rw = rw == null ? 0 : rw;\n        this.rh = rh == null ? 0 : rh;\n    }\n    clone() { return new Oval(this.cx, this.cy, this.rw, this.rh); }\n    setCentre(pos) {\n        this.cx = pos.x;\n        this.cy = pos.y;\n    }\n    setRadius(sz) {\n        this.rw = sz.w;\n        this.rh = sz.h;\n    }\n    minX() { return this.cx - this.rw; }\n    minY() { return this.cy - this.rh; }\n    maxX() { return this.cx + this.rw; }\n    maxY() { return this.cy + this.rh; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.cx *= mag;\n        this.cy *= mag;\n        this.rw *= mag;\n        this.rh *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.cx += dx;\n        this.cy += dy;\n    }\n    withScaleBy(mag) {\n        return new Oval(this.cx * mag, this.cy * mag, this.rw * mag, this.rh * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Oval(this.cx + dx, this.cy + dy, this.rw, this.rh);\n    }\n    contains(x, y) {\n        let dx = x - this.cx, dy = y - this.cy;\n        let a = dx / this.rw, b = dy / this.rh;\n        return a * a + b * b <= 1;\n    }\n    toString() { return '[' + this.cx + ',' + this.cy + ';' + this.rw + ',' + this.rh + ']'; }\n}\nexport class Line {\n    static zero() { return new Line(); }\n    static fromPos(pos1, pos2) { return new Line(pos1.x, pos1.y, pos2.x, pos2.y); }\n    constructor(x1, y1, x2, y2) {\n        this.x1 = x1 == null ? 0 : x1;\n        this.y1 = y1 == null ? 0 : y1;\n        this.x2 = x2 == null ? 0 : x2;\n        this.y2 = y2 == null ? 0 : y2;\n    }\n    clone() { return new Line(this.x1, this.y1, this.x2, this.y2); }\n    setPos1(pos) {\n        this.x1 = pos.x;\n        this.y1 = pos.y;\n    }\n    setPos2(pos) {\n        this.x2 = pos.x;\n        this.y2 = pos.y;\n    }\n    minX() { return Math.min(this.x1, this.x2); }\n    minY() { return Math.min(this.y1, this.y2); }\n    maxX() { return Math.max(this.x1, this.x2); }\n    maxY() { return Math.max(this.y1, this.y2); }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x1 *= mag;\n        this.y1 *= mag;\n        this.x2 *= mag;\n        this.y2 *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x1 += dx;\n        this.y1 += dy;\n        this.x2 += dx;\n        this.y2 += dy;\n    }\n    toString() { return '[' + this.x1 + ',' + this.y1 + ';' + this.x2 + ',' + this.y2 + ']'; }\n}\n//# sourceMappingURL=Geom.js.map","const ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\nclass XML {\n    static parseXML(strXML) {\n        let xmlDoc;\n        if (this.customParser)\n            xmlDoc = new this.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        return xmlDoc;\n    }\n    static toString(doc) {\n        if (this.customSerial)\n            return new this.customSerial().serializeToString(doc.documentElement);\n        else\n            return new XMLSerializer().serializeToString(doc.documentElement);\n    }\n    static toPrettyString(doc) {\n        let xslt = [\n            '<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n            '  <xsl:strip-space elements=\"*\"/>',\n            '  <xsl:template match=\"para[content-style][not(text())]\">',\n            '    <xsl:value-of select=\"normalize-space(.)\"/>',\n            '  </xsl:template>',\n            '  <xsl:template match=\"node()|@*\">',\n            '    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n            '  </xsl:template>',\n            '  <xsl:output indent=\"yes\"/>',\n            '</xsl:stylesheet>',\n        ].join('\\n');\n        let xsltDoc = this.parseXML(xslt);\n        let xsltProc = new XSLTProcessor();\n        xsltProc.importStylesheet(xsltDoc);\n        let resultDoc = xsltProc.transformToDocument(doc);\n        return new XMLSerializer().serializeToString(resultDoc);\n    }\n    static nodeText(el) {\n        let text = '';\n        for (let child of Array.from(el.childNodes)) {\n            if (child.nodeType == TEXT_NODE || child.nodeType == CDATA_SECTION_NODE)\n                text += child.nodeValue;\n        }\n        return text;\n    }\n    static childText(parent, tagName) {\n        if (parent == null)\n            return null;\n        let el = this.findElement(parent, tagName);\n        if (el == null)\n            return null;\n        return this.nodeText(el);\n    }\n    static appendElement(parent, name) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        return el;\n    }\n    static appendElementAfter(presib, name) {\n        let el = presib.ownerDocument.createElement(name);\n        let postsib = presib.nextSibling;\n        if (postsib == null)\n            presib.parentNode.appendChild(el);\n        else\n            presib.parentNode.insertBefore(el, postsib);\n        return el;\n    }\n    static appendText(parent, text, isCDATA = false) {\n        if (text == null || text.length == 0)\n            return;\n        if (!isCDATA)\n            parent.appendChild(parent.ownerDocument.createTextNode(text));\n        else\n            parent.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static createTextChild(parent, name, text, isCDATA = false) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        if (!isCDATA)\n            el.textContent = text;\n        else\n            el.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static setText(parent, text, isCDATA = false) {\n        while (parent.firstChild != null)\n            parent.removeChild(parent.firstChild);\n        this.appendText(parent, text, isCDATA);\n    }\n    static findElement(parent, tagName) {\n        if (parent == null)\n            return null;\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName == tagName)\n                return node;\n            node = node.nextSibling;\n        }\n        return null;\n    }\n    static findChildElements(parent, tagName) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName === tagName)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n    static childElements(parent) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n}\nXML.customParser = null;\nXML.customSerial = null;\nexport { XML };\n//# sourceMappingURL=XML.js.map","import { Box, Pos, Size } from './Geom';\nimport { XML } from './XML';\nexport function dom(obj) {\n    if (typeof obj == 'string')\n        return DOM.parse(obj);\n    if (obj instanceof DOM)\n        return obj;\n    return new DOM(obj);\n}\nexport function domLegacy(obj) {\n    if (obj == null)\n        return null;\n    if (obj.jquery)\n        return dom(obj[0]);\n    return dom(obj);\n}\nexport class DOM {\n    constructor(el) {\n        this.el = el;\n    }\n    get elHTML() { return this.el; }\n    get elInput() { return this.el; }\n    get elCanvas() { return this.el; }\n    static parse(xhtml) {\n        let xml = XML.parseXML(xhtml);\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.outerHTML;\n        let template = document.createElement('template');\n        template.innerHTML = html;\n        return new DOM(template.content.firstChild);\n    }\n    static find(selector) {\n        let el = document.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    static findAll(selector) {\n        let nodeList = document.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    parent() {\n        let parent = this.el.parentElement;\n        return parent ? new DOM(parent) : null;\n    }\n    ancestor(selector) {\n        let el = this.el.closest(selector);\n        return el ? new DOM(el) : null;\n    }\n    children(tag) {\n        let domList = [];\n        for (let child = this.el.firstElementChild; child; child = child.nextElementSibling) {\n            if (tag && child.tagName.toLocaleLowerCase() != tag.toLocaleLowerCase())\n                continue;\n            domList.push(new DOM(child));\n        }\n        return domList;\n    }\n    find(selector) {\n        let el = this.el.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    findAll(selector) {\n        let nodeList = this.el.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    exists() {\n        return document.documentElement.contains(this.el);\n    }\n    isVisible() {\n        return this.elHTML.offsetWidth > 0 || this.elHTML.offsetHeight > 0 || this.elHTML.getClientRects().length > 0;\n    }\n    append(child) {\n        this.el.append(child.el);\n    }\n    appendTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.append(this.el);\n        else\n            parent.appendChild(this.el);\n        return this;\n    }\n    prepend(child) {\n        this.el.prepend(child.el);\n    }\n    prependTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.prepend(this.el);\n        else\n            parent.append(this.el);\n        return this;\n    }\n    insertBefore(ref) {\n        ref.el.parentElement.insertBefore(this.el, ref.el);\n        return this;\n    }\n    insertAfter(ref) {\n        let before = ref.el.nextElementSibling;\n        if (before)\n            ref.el.parentElement.insertBefore(this.el, before);\n        else\n            ref.el.parentElement.append(this.el);\n        return this;\n    }\n    remove() {\n        this.el.remove();\n    }\n    empty() {\n        this.el.innerHTML = '';\n    }\n    getHTML() {\n        return this.el.innerHTML;\n    }\n    setHTML(html) {\n        this.el.innerHTML = html;\n    }\n    appendHTML(xhtml) {\n        let xml = XML.parseXML('<z>' + xhtml + '</z>');\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.innerHTML;\n        this.el.insertAdjacentHTML('beforeend', html);\n    }\n    getText() {\n        return this.el.textContent;\n    }\n    setText(text) {\n        this.el.textContent = text;\n    }\n    appendText(text) {\n        let content = document.createTextNode(text);\n        this.el.appendChild(content);\n    }\n    getValue() {\n        return this.el.value;\n    }\n    setValue(str) {\n        this.el.value = str || '';\n    }\n    getCSS(key) {\n        return this.elHTML.style.getPropertyValue(key);\n    }\n    setCSS(key, value) {\n        this.elHTML.style.setProperty(key, value === null || value === void 0 ? void 0 : value.toString());\n    }\n    css(dict) {\n        for (let key in dict)\n            this.setCSS(key, dict[key].toString());\n        return this;\n    }\n    getAttr(key) {\n        if (!this.el.hasAttribute(key))\n            return null;\n        return this.el.getAttribute(key);\n    }\n    setAttr(key, value) {\n        this.el.setAttribute(key, value);\n    }\n    attr(dict) {\n        for (let key in dict)\n            this.setAttr(key, dict[key].toString());\n        return this;\n    }\n    addClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.add(cls);\n    }\n    removeClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.remove(cls);\n    }\n    hasClass(clsname) {\n        return this.elHTML.classList.contains(clsname);\n    }\n    setClass(clsname, flag) {\n        if (flag)\n            this.addClass(clsname);\n        else\n            this.removeClass(clsname);\n    }\n    class(clsname) {\n        this.addClass(clsname);\n        return this;\n    }\n    toggleClass(dict) {\n        for (let key in dict) {\n            if (dict[key])\n                this.elHTML.classList.add(key);\n            else\n                this.elHTML.classList.remove(key);\n        }\n    }\n    width() {\n        return this.elHTML.offsetWidth;\n    }\n    height() {\n        return this.elHTML.offsetHeight;\n    }\n    offset() {\n        let rect = this.el.getBoundingClientRect();\n        let win = this.el.ownerDocument.defaultView;\n        return new Pos(rect.left + win.pageXOffset, rect.top + win.pageYOffset);\n    }\n    size() {\n        return new Size(this.width(), this.height());\n    }\n    area() {\n        let pos = this.offset();\n        return new Box(pos.x, pos.y, this.width(), this.height());\n    }\n    setBoundaryPixels(x, y, w, h) {\n        this.css({ 'left': `${x}px`, 'top': `${y}px`, 'width': `${w}px`, 'height': `${h}px` });\n    }\n    setSizePixels(w, h) {\n        this.css({ 'width': `${w}px`, 'height': `${h}px` });\n    }\n    hasFocus() {\n        return this.el === document.activeElement;\n    }\n    grabFocus(delay = false) {\n        if (delay)\n            setTimeout(() => this.grabFocus(), 10);\n        else\n            this.elHTML.focus();\n    }\n    removeEvent(id, callback) {\n        this.el.removeEventListener(id, callback);\n    }\n    onKeyDown(callback) {\n        this.el.addEventListener('keydown', callback);\n    }\n    onKeyUp(callback) {\n        this.el.addEventListener('keyup', callback);\n    }\n    onKeyPress(callback) {\n        this.el.addEventListener('keypress', callback);\n    }\n    onScroll(callback) {\n        this.el.addEventListener('scroll', callback);\n    }\n    onWheel(callback) {\n        this.el.addEventListener('wheel', callback);\n    }\n    onClick(callback) {\n        this.el.addEventListener('click', callback);\n    }\n    onContextMenu(callback) {\n        this.el.addEventListener('contextmenu', callback);\n    }\n    onDblClick(callback) {\n        this.el.addEventListener('dblclick', callback);\n    }\n    onMouseDown(callback) {\n        this.el.addEventListener('mousedown', callback);\n    }\n    onMouseUp(callback) {\n        this.el.addEventListener('mouseup', callback);\n    }\n    onMouseEnter(callback) {\n        this.el.addEventListener('mouseenter', callback);\n    }\n    onMouseLeave(callback) {\n        this.el.addEventListener('mouseleave', callback);\n    }\n    onMouseMove(callback) {\n        this.el.addEventListener('mousemove', callback);\n    }\n    onMouseOver(callback) {\n        this.el.addEventListener('mouseover', callback);\n    }\n    onChange(callback) {\n        this.el.addEventListener('change', callback);\n    }\n    onInput(callback) {\n        this.el.addEventListener('input', callback);\n    }\n    onTouchStart(callback) {\n        this.el.addEventListener('touchstart', callback);\n    }\n    onTouchMove(callback) {\n        this.el.addEventListener('touchmove', callback);\n    }\n    onTouchCancel(callback) {\n        this.el.addEventListener('touchcancel', callback);\n    }\n    onTouchEnd(callback) {\n        this.el.addEventListener('touchend', callback);\n    }\n}\n//# sourceMappingURL=dom.js.map","import { colourCode } from './util';\nclass Theme {\n}\nTheme.BASE_URL = null;\nTheme.RESOURCE_URL = null;\nTheme.foreground = 0x000000;\nTheme.background = 0xFFFFFF;\nTheme.lowlight = 0x24D0D0;\nTheme.lowlightEdge1 = 0x47D5D2;\nTheme.lowlightEdge2 = 0x008FD1;\nTheme.highlight = 0x00FF00;\nTheme.highlightEdge1 = 0x00CA59;\nTheme.highlightEdge2 = 0x008650;\nTheme.error = 0xFF0000;\nexport { Theme };\nexport function initWebMolKit(resourcePath) {\n    Theme.RESOURCE_URL = resourcePath;\n    try {\n        let _ = document;\n    }\n    catch (e) {\n        return;\n    }\n    if (document)\n        installInlineCSS('main', composeMainCSS());\n}\nlet cssTagsInstalled = new Set();\nexport function hasInlineCSS(tag) { return cssTagsInstalled.has(tag); }\nexport function installInlineCSS(tag, css) {\n    if (cssTagsInstalled.has(tag))\n        return false;\n    let el = document.createElement('style');\n    el.innerHTML = css;\n    document.head.appendChild(el);\n    cssTagsInstalled.add(tag);\n    return true;\n}\nfunction composeMainCSS() {\n    let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n    let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n    return `\n\t\t.wmk-button\n\t\t{\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 6px 12px;\n\t\t\tmargin-bottom: 0;\n\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\tfont-size: 14px;\n\t\t\tfont-weight: normal;\n\t\t\tline-height: 1.42857143;\n\t\t\ttext-align: center;\n\t\t\twhite-space: nowrap;\n\t\t\tvertical-align: middle;\n\t\t\tcursor: pointer;\n\t\t\tbackground-image: none;\n\t\t\tborder: 1px solid transparent;\n\t\t\tborder-radius: 4px;\n\t\t\t-ms-touch-action: manipulation; touch-action: manipulation;\n\t\t\t-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\n\t\t}\n\t\t.wmk-button:focus,\n\t\t.wmk-button:active:focus,\n\t\t.wmk-button.active:focus,\n\t\t.wmk-button.focus,\n\t\t.wmk-button:active.focus,\n\t\t.wmk-button.active.focus\n\t\t{\n\t\t\toutline: thin dotted;\n\t\t\toutline: 5px auto -webkit-focus-ring-color;\n\t\t\toutline-offset: -2px;\n\t\t}\n\t\t.wmk-button:hover,\n\t\t.wmk-button:focus,\n\t\t.wmk-button.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\t.wmk-button:active,\n\t\t.wmk-button.active\n\t\t{\n\t\t\tbackground-image: none;\n\t\t\toutline: 0;\n\t\t\t-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t\tbox-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t}\n\t\t.wmk-button.disabled,\n\t\t.wmk-button[disabled],\n\t\tfieldset[disabled] .wmk-button\n\t\t{\n\t\t\tcursor: not-allowed;\n\t\t\tfilter: alpha(opacity=65);\n\t\t\t-webkit-box-shadow: none;\n\t\t\tbox-shadow: none;\n\t\t\topacity: .65;\n\t\t}\n\t\ta.wmk-button.disabled,\n\t\tfieldset[disabled] a.wmk-button\n\t\t{\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t/* shrunken button */\n\n\t\t.wmk-button-small\n\t\t{\n\t\t\tpadding: 2px 4px;\n\t\t\tline-height: 1;\n\t\t\tfont-size: 12px;\n\t\t}\n\n\t\t/* default button */\n\n\t\t.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #fff;\n\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default:focus,\n\t\t.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:hover\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active:hover,\n\t\t.wmk-button-default.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-default:hover,\n\t\t.wmk-button-default:active:focus,\n\t\t.wmk-button-default.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-default:focus,\n\t\t.wmk-button-default:active.focus,\n\t\t.wmk-button-default.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #d4d4d4;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-default.disabled:hover,\n\t\t.wmk-button-default[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-default:hover,\n\t\t.wmk-button-default.disabled:focus,\n\t\t.wmk-button-default[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-default:focus,\n\t\t.wmk-button-default.disabled.focus,\n\t\t.wmk-button-default[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-default.focus\n\t\t{\n\t\t\tbackground-color: #fff;\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default .badge\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #333;\n\t\t}\n\n\t\t/* primary button */\n\n\t\t.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #008FD2;\n\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\tborder-color: #00C0C0;\n\t\t}\n\t\t.wmk-button-primary:focus,\n\t\t.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${lowlight};\n\t\t\tborder-color: #122b40;\n\t\t}\n\t\t.wmk-button-primary:hover\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #204d74;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #20744d;\n\t\t}\n\t\t.wmk-button-primary:active:hover,\n\t\t.wmk-button-primary.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-primary:hover,\n\t\t.wmk-button-primary:active:focus,\n\t\t.wmk-button-primary.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary:focus,\n\t\t.wmk-button-primary:active.focus,\n\t\t.wmk-button-primary.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${highlight};\n\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\tborder-color: #12802b;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-primary.disabled:hover,\n\t\t.wmk-button-primary[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-primary:hover,\n\t\t.wmk-button-primary.disabled:focus,\n\t\t.wmk-button-primary[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-primary:focus,\n\t\t.wmk-button-primary.disabled.focus,\n\t\t.wmk-button-primary[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-primary.focus\n\t\t{\n\t\t\tbackground-color: #337ab7;\n\t\t\tborder-color: #2ea46d;\n\t\t}\n\t\t.wmk-button-primary .badge\n\t\t{\n\t\t\tcolor: #337ab7;\n\t\t\tbackground-color: #fff;\n\t\t}\n\t`;\n}\n//# sourceMappingURL=Theme.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst CSS_TOOLTIP = `\n    *.wmk-tooltip-outer\n    {\n\t\tposition: absolute;\n\t\tborder-radius: 4px;\n\t\tborder: 1px solid black;\n\t\tbackground-color: white;\n\t\tpadding: 1px;\n\t\tpointer-events: none;\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 14px;\n    }\n\t*.wmk-tooltip-inner\n\t{\n\t\tcolor: white;\n\t\tborder-radius: 4px;\n\t\tbackground-color: black;\n\t\tpadding: 0.3em;\n\t\tmax-width: calc(min(40em, 50vw));\n\t}\n`;\nlet globalTooltip = null;\nlet globalPopWatermark = 0;\nexport function addTooltip(parent, bodyHTML, titleHTML, delay) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    let widget = dom(parent);\n    let tooltip = new Tooltip(widget, bodyHTML, titleHTML, delay == null ? 1000 : delay);\n    widget.onMouseEnter(() => tooltip.start());\n    widget.onMouseLeave(() => tooltip.stop());\n}\nexport function addTooltipPromise(parent, bodyCallback, titleHTML, delay) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    let widget = dom(parent);\n    let tooltip = new Tooltip(widget, null, titleHTML, delay == null ? 1000 : delay);\n    tooltip.bodyCallback = bodyCallback;\n    widget.onMouseEnter(() => tooltip.start());\n    widget.onMouseLeave(() => tooltip.stop());\n}\nexport function raiseToolTip(parent, avoid, bodyHTML, titleHTML) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    clearTooltip();\n    new Tooltip(dom(parent), bodyHTML, titleHTML, 0).raise(avoid);\n}\nexport function clearTooltip() {\n    if (globalTooltip == null)\n        return;\n    globalPopWatermark++;\n    globalTooltip.stop();\n}\nexport class Tooltip {\n    constructor(widget, bodyHTML, titleHTML, delay) {\n        this.widget = widget;\n        this.bodyHTML = bodyHTML;\n        this.titleHTML = titleHTML;\n        this.delay = delay;\n        this.domTooltip = null;\n    }\n    start() {\n        this.watermark = ++globalPopWatermark;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            if (this.bodyHTML == null && this.bodyCallback)\n                this.bodyHTML = yield this.bodyCallback();\n            window.setTimeout(() => {\n                if (this.watermark == globalPopWatermark)\n                    this.raise();\n            }, this.delay);\n        }))();\n    }\n    stop() {\n        if (this.domTooltip) {\n            this.domTooltip.remove();\n            this.domTooltip = null;\n        }\n        this.watermark = -1;\n    }\n    raise(avoid) {\n        if (!this.widget.exists())\n            return;\n        globalTooltip = this;\n        if (this.domTooltip)\n            return;\n        let pop = this.domTooltip = dom('<div/>').class('wmk-tooltip-outer').css({ 'visibility': 'hidden' }).appendTo(document.body);\n        let sanity = 50;\n        for (let ancestor = this.widget; ancestor; ancestor = ancestor.parent()) {\n            if (--sanity == 0)\n                break;\n            let zindex = parseInt(ancestor.elHTML.style.zIndex);\n            if (zindex > 0) {\n                pop.setCSS('z-index', (zindex + 1000).toString());\n                break;\n            }\n        }\n        let div = dom('<div/>').appendTo(pop).class('wmk-tooltip-inner');\n        let hasTitle = this.titleHTML != null && this.titleHTML.length > 0, hasBody = this.bodyHTML != null && this.bodyHTML.length > 0;\n        if (hasTitle)\n            dom('<div/>').appendTo(div).setHTML('<b>' + this.titleHTML + '</b>');\n        if (hasTitle && hasBody)\n            div.appendHTML('<hr/>');\n        if (hasBody)\n            dom('<div/>').appendTo(div).setHTML(this.bodyHTML);\n        let winW = window.innerWidth, winH = window.innerHeight;\n        const GAP = 2;\n        let boundDiv = this.widget.el.getBoundingClientRect();\n        let wx1 = boundDiv.left, wy1 = boundDiv.top;\n        let wx2 = wx1 + boundDiv.width, wy2 = wy1 + boundDiv.height;\n        if (avoid) {\n            wx1 += avoid.x;\n            wy1 += avoid.y;\n            wx2 = wx1 + avoid.w;\n            wy2 = wy1 + avoid.h;\n        }\n        let setPosition = () => {\n            let popW = pop.width(), popH = pop.height();\n            let posX = 0, posY = 0;\n            if (wx1 + popW < winW)\n                posX = wx1;\n            else if (popW < wx2)\n                posX = wx2 - popW;\n            if (wy2 + GAP + popH < winH)\n                posY = wy2 + GAP;\n            else if (wy1 - GAP - popH > 0)\n                posY = wy1 - GAP - popH;\n            else\n                posY = wy2 + GAP;\n            posX += window.pageXOffset;\n            posY += window.pageYOffset;\n            pop.css({ 'left': `${posX}px`, 'top': `${posY}px`, 'visibility': 'visible' });\n        };\n        pop.css({ 'left': '0px', 'top': '0px' });\n        setTimeout(() => setPosition(), 1);\n        let checkParent = () => {\n            if (this.watermark != globalPopWatermark || !this.widget.isVisible() || !this.widget.exists())\n                this.stop();\n            else\n                setTimeout(checkParent, 100);\n        };\n        setTimeout(checkParent, 100);\n    }\n}\n//# sourceMappingURL=Tooltip.js.map","import { dom } from '../util/dom';\nimport { addTooltip } from './Tooltip';\nexport class Widget {\n    get contentDOM() { return this.domContent; }\n    constructor() {\n        this.tagType = 'div';\n        this.domContent = null;\n    }\n    render(parent) {\n        let tag = this.tagType;\n        this.domContent = dom(`<${tag}/>`).appendTo(parent);\n    }\n    remove() {\n        if (this.domContent)\n            this.domContent.remove();\n        this.domContent = null;\n    }\n    addTooltip(bodyHTML, titleHTML) {\n        addTooltip(this.contentDOM, bodyHTML, titleHTML);\n    }\n    grabFocus() {\n        this.domContent.grabFocus();\n    }\n}\n//# sourceMappingURL=Widget.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Mixfile, MIXFILE_VERSION, MixfileComponent} from './Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tData container for mixtures: basically wraps the Mixfile interface, with additional functionality.\n\n\tNote that functionality should be assumed to be using shallow pointers to the underlying dictionary, unless\n\tspecified otherwise (e.g. clone).\n*/\n\nexport class Mixture\n{\n\t// ------------ public methods ------------\n\n\tconstructor(public mixfile?:Mixfile)\n\t{\n\t\tif (!mixfile) this.mixfile = {mixfileVersion: MIXFILE_VERSION};\n\t\telse if (!this.mixfile.mixfileVersion) this.mixfile.mixfileVersion = MIXFILE_VERSION;\n\t}\n\n\t// instantiates a new mixture object by casting a component into a root mixfile\n\tpublic static fromComponent(comp:MixfileComponent):Mixture\n\t{\n\t\tlet mixfile = deepClone(comp) as Mixfile;\n\t\tmixfile.mixfileVersion = MIXFILE_VERSION;\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// returns true if the mixture is blank\n\tpublic isEmpty():boolean\n\t{\n\t\treturn Mixture.isComponentEmpty(this.mixfile);\n\t}\n\tpublic static isComponentEmpty(comp:MixfileComponent):boolean\n\t{\n\t\tconst BITS = ['name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t\t\t\t\t  'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links'];\n\t\tfor (let bit of BITS) if ((comp as any)[bit] != null) return false;\n\t\tif (Vec.arrayLength(comp.contents) > 0) return false;\n\t\treturn true;\n\t}\n\n\t// returns true if there's something to put in the quantity section\n\tpublic static hasQuantity(comp:MixfileComponent):boolean\n\t{\n\t\treturn comp.quantity != null || comp.ratio != null;\n\t}\n\n\t// makes a deep copy of self\n\tpublic clone():Mixture\n\t{\n\t\treturn new Mixture(deepClone(this.mixfile));\n\t}\n\n\t// returns true if the two mixtures are identical at all parts of their branch structure\n\tpublic equals(other:Mixture):boolean\n\t{\n\t\tif (other == null) return false;\n\t\treturn this.recursiveEqual(this.mixfile, other.mixfile);\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):Mixture\n\t{\n\t\tlet mixfile = JSON.parse(data);\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string\n\tpublic serialise():string\n\t{\n\t\treturn Mixture.beautify(this.mixfile);\n\t}\n\n\t// likewise, for a sub-component\n\tpublic static serialiseComponent(comp:MixfileComponent):string\n\t{\n\t\treturn Mixture.beautify(comp);\n\t}\n\n\t// uses the \"origin vector\" to fetch a particular component; this is an array of indices, where [] indicates the root; its first\n\t// component is [0], the second child of its first component is [0,1], etc.\n\tpublic getComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return this.mixfile;\n\t\tlet find:MixfileComponent = null, look = this.mixfile.contents || [];\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tif (!find) return null;\n\t\t\tlook = find.contents || [];\n\t\t}\n\t\treturn find;\n\t}\n\tpublic getParentComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return null;\n\t\torigin = origin.slice();\n\t\torigin.pop();\n\t\treturn this.getComponent(origin);\n\t}\n\n\t// returns a flat list of all components, i.e. without any hierarchy; these are all pointers to the originals, so\n\t// modifications can be made directly\n\tpublic getComponents():MixfileComponent[]\n\t{\n\t\tlet list:MixfileComponent[] = [], stack:MixfileComponent[] = [this.mixfile];\n\t\twhile (stack.length > 0)\n\t\t{\n\t\t\tlet comp = stack.shift();\n\t\t\tlist.push(comp);\n\t\t\tif (comp.contents) for (let sub of comp.contents) stack.push(sub);\n\t\t}\n\t\treturn list;\n\t}\n\n\t// returns an array that is equal in size to the number of nodes; each entry contains origin of that node\n\tpublic getOrigins():number[][]\n\t{\n\t\tlet origins:number[][] = [];\n\n\t\tlet nodeEnum = (origin:number[], comp:MixfileComponent):void =>\n\t\t{\n\t\t\torigins.push(origin);\n\t\t\tfor (let n = 0; n < Vec.arrayLength(comp.contents); n++) nodeEnum(Vec.append(origin, n), comp.contents[n]);\n\t\t};\n\n\t\tnodeEnum([], this.mixfile);\n\t\treturn origins;\n\t}\n\n\t// replaces a component at a given position; returns true if the new component was different to the old one\n\tpublic setComponent(origin:number[], comp:MixfileComponent):boolean\n\t{\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\n\t\t// copy over the dictionary entries in 'comp', noting if anything changed\n\t\tlet modified = false;\n\t\tfor (let k in comp)\n\t\t{\n\t\t\tlet v = (comp as any)[k];\n\t\t\tif (v != (find as any)[k])\n\t\t\t{\n\t\t\t\t(find as any)[k] = v;\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t}\n\n\t\t// cleanup by removing explicit nulls\n\t\tObject.keys(find).forEach((key:string) => {if ((find as any)[key] == null) delete (find as any)[key];});\n\n\t\treturn modified;\n\t}\n\n\t// deletes the indicated component, and collapses any child nodes into its own position (as opposed to just deleting\n\t// them too)\n\tpublic deleteComponent(origin:number[]):void\n\t{\n\t\tif (origin.length == 0) return; // can't delete the whole thing\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent.splice(idx, 1);\n\t\tif (look) for (let c of look) parent.splice(idx++, 0, c);\n\t}\n\n\t// insert a new component \"above\" the existing one, and handle the reparenting\n\tpublic prependBefore(origin:number[], comp:MixfileComponent):void\n\t{\n\t\t// slightly different when prepending before the root element\n\t\tif (origin.length == 0)\n\t\t{\n\t\t\tlet mixfile = this.mixfile;\n\t\t\tlet subcomp:MixfileComponent = {};\n\t\t\tconst SKIP = ['mixfileVersion', 'contents'];\n\t\t\tfor (let key in (mixfile as any)) if (!SKIP.includes(key))\n\t\t\t{\n\t\t\t\t(subcomp as any)[key] = (mixfile as any)[key];\n\t\t\t\tdelete (mixfile as any)[key];\n\t\t\t}\n\t\t\tmixfile.contents = [subcomp];\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent[idx] = comp;\n\t\tcomp.contents = [find];\n\t}\n\n\t// takes an origin vector and splits it into {parent origin} and {child index}; returns null on both counts if this is the root node\n\tpublic static splitOrigin(origin:number[]):[number[], number]\n\t{\n\t\tif (origin.length == 0) return [null, null];\n\t\tlet parent = origin.slice(0);\n\t\tlet idx = parent.splice(origin.length - 1, 1)[0];\n\t\treturn [parent, idx];\n\t}\n\n\t// makes a JSON object into a nicely formatted string for human readability\n\tpublic static beautify(json:any):string\n\t{\n\t\tlet lines = JSON.stringify(json, null, 4).split('\\n');\n\t\tlet regex = /^(\\s*\\\"\\w+\\\": )([\\[\\{].*)$/, regpad = /^(\\s*)/;\n\t\tfor (let n = 0; n < lines.length; n++)\n\t\t{\n\t\t\tlet match = regex.exec(lines[n]);\n\t\t\tif (!match) continue;\n\t\t\tlet padding = regpad.exec(lines[n]);\n\t\t\tlines[n] = match[1] + '\\n' + padding[1] + match[2];\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------ private methods ------------\n\n\t// returns true if this component, and all sub-components, are equal\n\tprivate recursiveEqual(comp1:MixfileComponent, comp2:MixfileComponent):boolean\n\t{\n\t\tlet dict1:any = comp1, dict2:any = comp2;\n\t\t/*let keys1 = Object.keys(dict1), keys2 = Object.keys(dict2);\n\t\tlet i:number;\n\t\tif ((i = keys1.indexOf('contents')) >= 0) keys1.splice(i, 1);\n\t\tif ((i = keys2.indexOf('contents')) >= 0) keys2.splice(i, 1);*/\n\t\tlet keys1:string[] = [], keys2:string[] = [];\n\t\tfor (let k in dict1) if (k != 'contents' && dict1[k] != null) keys1.push(k);\n\t\tfor (let k in dict2) if (k != 'contents' && dict2[k] != null) keys2.push(k);\n\t\tkeys1.sort();\n\t\tkeys2.sort();\n\t\tif (!Vec.equals(keys1, keys2)) return false; // different keys (less contents) is a dealbreaker\n\t\tfor (let k of keys1)\n\t\t{\n\t\t\tlet v1 = dict1[k], v2 = dict2[k];\n\t\t\tif (Array.isArray(v1) && Array.isArray(v2))\n\t\t\t{\n\t\t\t\tif (!Vec.equals(v1, v2)) return false;\n\t\t\t}\n\t\t\telse // assume scalar\n\t\t\t{\n\t\t\t\tif (v1 != v2) return false;\n\t\t\t}\n\t\t}\n\n\t\tlet len = Vec.arrayLength(comp1.contents);\n\t\tif (len != Vec.arrayLength(comp2.contents)) return false;\n\t\tfor (let n = 0; n < len; n++) if (!this.recursiveEqual(comp1.contents[n], comp2.contents[n])) return false;\n\n\t\treturn true;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\n/*\n\tThe Mixfile is a raw definition of the contents of a mixture, which maps directly to the JSON datastructure\n\tthat holds the serialised content. For keeping an operable mixture instance, see the Mixture class.\n*/\n\nexport const MIXFILE_VERSION = 1.00; // version number to use for newly created instances\n\nexport type MixfileMetadatum = string | (string | number)[];\n\nexport interface Mixfile extends MixfileComponent\n{\n\tmixfileVersion:number;\n}\n\nexport interface MixfileComponent\n{\n\tname?:string;\n\tdescription?:string;\n\tsynonyms?:string[];\n\n\t// molecular specification: none of them are mandatory, but if more than one is specified, they must refer to the same species, \n\t// to the extent that the format allows; InChI strings are expected to be standard, while SMILES are not\n\tformula?:string;\n\tmolfile?:string;\n\tinchi?:string;\n\tinchiKey?:string;\n\tsmiles?:string;\n\n\t// if the concentration is known, then these fields should be filled out as appropriate; if the concentration is a ratio,\n\t// it is relative to all of the components within the same branch\n\tquantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\terror?:number; // optional standard error (applies to quantity when it's a scalar)\n\tratio?:number[]; // a ratio, specified as [numerator, denominator]\n\tunits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\trelation?:string; // optional modifier when applied to quantity (e.g. >, <, ~)\n\n\t// identifiers that map the substance to external databases (e.g. PubChem, ChemSpider, CAS, etc.); identifiers are ID numbers, and\n\t// the meaning is implied by the context; links should be resolvable URLs, which are an alternative way of locating external\n\t// resources; in some cases where there are multiple identifiers, the value should be specified as an array\n\tidentifiers?:Record<string, string | string[]>;\n\tlinks?:Record<string, string | string[]>;\n\n\t// metadata starts with an IRI that defines the core concept, and then may be followed by scalar data and/or other IRIs; this allows\n\t// discrete facts to be asserted about the component, as well as numeric values such as physical properties and their units\n\tmetadata?:MixfileMetadatum[];\n\n\t// subcomponents: if this is a discrete molecular entity, then there will be none; usually there are either 0 or 2-or-more; in cases\n\t// where there are any subcomponents, any of the properties above apply to all of these subcomponents collectively\n\tcontents?:MixfileComponent[];\n}\n\n// useful for cleaning up external JSON content\nexport const MIXFILE_COMPONENT_FIELDS =\n[\n\t'name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links', 'contents'\n];\nexport const MIXFILE_ROOT_FIELDS =\n[\n\t'mixfileVersion', ...MIXFILE_COMPONENT_FIELDS\n];\n\n/* orignal example of what the format might look like (1st draft):\n{\n\t\"mixture\": \"1.0 M lithium diisopropyl amide in THF/hexanes\",\n\t\"contents\":\n\t[\n\t\t{\n\t\t\t\"name\": \"lithium diisopropylamide\",\n\t\t\t\"synonyms\": [\"LDA\", \"(iPr)2N.Li\"],\n\t\t\t\"formula\": \"C6H14LiN\",\n\t\t\t\"pubchem\": \"2724682\",\n\t\t\t\"chemspider\": \"2006804\",\n\t\t\t\"inchi\": \"InChI=1S/C6H14N.Li/c1-5(2)7-6(3)4;/h5-6H,1-4H3;/q-1;+1\",\n\t\t\t\"smiles\": \"[Li+].CC(C)[N-]C(C)C\",\n\t\t\t\"molfile\": \"\\nOpenMolecule\\n\\n  8  7  0  0  0  0  0  0  0  0999 V2000\\n    0.0000    0.0000    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\\n    1.5000    0.0000    0.0000 Li  0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.0000    2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n    0.0000   -2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n  1  2  1  0  0  0  0\\n  1  3  1  0  0  0  0\\n  1  4  1  0  0  0  0\\n  3  5  1  0  0  0  0\\n  3  6  1  0  0  0  0\\n  4  7  1  0  0  0  0\\n  4  8  1  0  0  0  0\\nM  END\\n\",\n\t\t\t\"quantity\": 1.0,\n\t\t\t\"units\": \"mol/L\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"solvent\",\n\t\t\t\"contents\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"tetrahydrofuran\",\n\t\t\t\t\t\"synonyms\": [\"THF\"],\n\t\t\t\t\t\"formula\": \"C4H8O\",\n\t\t\t\t\t\"pubchem\": \"8028\",\n\t\t\t\t\t\"chemspider\": \"7737\",\n\t\t\t\t\t\"inchi\": \"InChI=1S/C4H8O/c1-2-4-5-3-1/h1-4H2\",\n\t\t\t\t\t\"smiles\": \"C1CCOC1\",\n\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\"fraction\": [1, 8]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"group\": \"hexanes\",\n\t\t\t\t\t\"fraction\": [7, 8],\n\t\t\t\t\t\"contents\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"n-hexane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"8058\",\n\t\t\t\t\t\t\t\"chemspider\": \"7767\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-3-5-6-4-2/h3-6H2,1-2H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCCCC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [50, 70]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"methylcyclopentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7296\",\n\t\t\t\t\t\t\t\"chemspider\": \"7024\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H12/c1-6-4-2-3-5-6/h6H,2-5H2,1H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CC1CCCC1\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [10, 20]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"2-methypentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7892\",\n\t\t\t\t\t\t\t\"chemspider\": \"7604\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-5-6(2)3/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCC(C)C\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"3-methylpentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7282\",\n\t\t\t\t\t\t\t\"chemspider\": \"7010\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-6(3)5-2/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCC(C)CC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other hexanes\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n\n","import { clone } from '../util/util';\nexport class RenderPolicy {\n    constructor(data) {\n        if (!data) {\n            data =\n                {\n                    name: 'default',\n                    pointScale: 20,\n                    resolutionDPI: 100,\n                    fontSize: 0.65,\n                    lineSize: 0.075,\n                    bondSep: 0.2,\n                    defaultPadding: 0.2,\n                    foreground: 0x000000,\n                    background: 0xFFFFFF,\n                    atomCols: new Array(112)\n                };\n            for (let n = 0; n <= 111; n++)\n                data.atomCols[n] = 0x000000;\n            this.data = data;\n        }\n        else {\n            this.data = clone(data);\n        }\n    }\n    clone() { return new RenderPolicy(this.data); }\n    static defaultBlackOnWhite(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        return policy;\n    }\n    static defaultWhiteOnBlack(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        policy.data.foreground = 0xFFFFFF;\n        policy.data.background = 0x000000;\n        for (let n = 0; n <= 111; n++)\n            policy.data.atomCols[n] = 0xFFFFFF;\n        return policy;\n    }\n    static defaultColourOnWhite(pixPerAng) {\n        let policy = RenderPolicy.defaultBlackOnWhite(pixPerAng);\n        policy.data.atomCols[0] = 0x404040;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0x000000;\n        policy.data.atomCols[7] = 0x0000FF;\n        policy.data.atomCols[8] = 0xFF0000;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0x808000;\n        policy.data.atomCols[17] = 0x00C000;\n        policy.data.atomCols[35] = 0xC04000;\n        return policy;\n    }\n    static defaultColourOnBlack(pixPerAng) {\n        let policy = RenderPolicy.defaultWhiteOnBlack(pixPerAng);\n        policy.data.atomCols[0] = 0xA0A0A0;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0xFFFFFF;\n        policy.data.atomCols[7] = 0x4040FF;\n        policy.data.atomCols[8] = 0xFF4040;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0xFFFF00;\n        policy.data.atomCols[17] = 0x40FF40;\n        policy.data.atomCols[35] = 0xFF8040;\n        return policy;\n    }\n    static defaultPrintedPublication() {\n        let policy = RenderPolicy.defaultBlackOnWhite(9.6);\n        policy.data.resolutionDPI = 600;\n        policy.data.fontSize = 0.80;\n        policy.data.bondSep = 0.27;\n        policy.data.lineSize = 0.0625;\n        return policy;\n    }\n}\nexport class RenderEffects {\n    constructor() {\n        this.colAtom = {};\n        this.colBond = {};\n        this.dottedRectOutline = {};\n        this.dottedBondCross = {};\n        this.hideAtoms = new Set();\n        this.hideBonds = new Set();\n        this.atomFrameDotSz = [];\n        this.atomFrameCol = [];\n        this.atomCircleSz = [];\n        this.atomCircleCol = [];\n        this.atomDecoText = [];\n        this.atomDecoCol = [];\n        this.atomDecoSize = [];\n        this.bondDecoText = [];\n        this.bondDecoCol = [];\n        this.bondDecoSize = [];\n        this.overlapAtoms = [];\n    }\n}\nexport var RenderMnemonicType;\n(function (RenderMnemonicType) {\n    RenderMnemonicType[\"Atom\"] = \"A\";\n    RenderMnemonicType[\"Bond\"] = \"B\";\n    RenderMnemonicType[\"Artifact\"] = \"R\";\n    RenderMnemonicType[\"Effect\"] = \"E\";\n})(RenderMnemonicType || (RenderMnemonicType = {}));\nexport class RenderMnemonics {\n    constructor(encoded) {\n        this.items = [];\n        let lines = (encoded || '').split('&');\n        for (let line of lines) {\n            let bits = line.split('|');\n            if (bits.length != 3)\n                continue;\n            let item = {\n                type: bits[0],\n                details: bits[1],\n                coords: bits[2].split(',').map((str) => parseFloat(str)),\n            };\n            this.items.push(item);\n        }\n    }\n    append(type, details, coords) {\n        for (let n = details.length - 1; n >= 0; n--)\n            if (details[n] == '|' || details[n] == '&')\n                details = details.substring(0, n) + details.substring(n + 1);\n        this.items.push({ type, details, coords });\n    }\n    serialise() {\n        var _a;\n        let lines = [];\n        for (let item of this.items) {\n            let coords = ((_a = item.coords) !== null && _a !== void 0 ? _a : []).map((coord) => coord.toFixed(1)).join(',');\n            lines.push(`${item.type}|${item.details}|${coords}`);\n        }\n        return lines.join('&');\n    }\n    packWithCoords() { return this.serialise(); }\n    packWithoutCoords() {\n        return this.items.map((item) => `${item.type}|${item.details}`).join('&');\n    }\n}\n//# sourceMappingURL=Rendering.js.map","import { Vec } from '../util/Vec';\nexport class Graph {\n    constructor(sz, edge1, edge2) {\n        this.nbrs = [];\n        this.indices = null;\n        this.labels = null;\n        this.props = null;\n        if (sz != null)\n            for (let n = 0; n < sz; n++)\n                this.nbrs.push([]);\n        if (edge1 != null && edge2 != null) {\n            for (let n = 0; n < edge1.length; n++) {\n                this.nbrs[edge1[n]].push(edge2[n]);\n                this.nbrs[edge2[n]].push(edge1[n]);\n            }\n        }\n    }\n    clone() {\n        let g = new Graph();\n        for (let nbr of this.nbrs)\n            g.nbrs.push(nbr.slice(0));\n        g.indices = this.indices == null ? null : this.indices.slice(0);\n        g.labels = this.labels == null ? null : this.labels.slice(0);\n        g.props = this.props == null ? null : this.props.slice(0);\n        return g;\n    }\n    static fromMolecule(mol) {\n        let g = new Graph();\n        g.indices = [];\n        for (let n = 0; n < mol.numAtoms; n++) {\n            g.nbrs.push([]);\n            g.indices.push(n + 1);\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            g.nbrs[bfr].push(bto);\n            g.nbrs[bto].push(bfr);\n        }\n        return g;\n    }\n    static fromNeighbours(nbrs) {\n        let g = new Graph();\n        g.nbrs = nbrs;\n        return g;\n    }\n    toString() {\n        let buff = '#nodes=' + this.nbrs.length;\n        for (let n = 0; n < this.nbrs.length; n++) {\n            buff += ' ' + n + ':{' + this.nbrs[n] + '}';\n            if (n < Vec.len(this.indices))\n                buff += '[i=' + this.indices[n] + ']';\n            if (n < Vec.len(this.labels))\n                buff += '[l=' + this.labels[n] + ']';\n        }\n        return buff;\n    }\n    get numNodes() { return this.nbrs.length; }\n    numEdges(node) { return this.nbrs[node].length; }\n    getEdge(node, edge) { return this.nbrs[node][edge]; }\n    getEdges(node) { return this.nbrs[node]; }\n    getIndex(node) { return this.indices == null ? 0 : this.indices[node]; }\n    setIndex(node, idx) {\n        if (this.indices == null)\n            this.indices = Vec.numberArray(0, this.nbrs.length);\n        this.indices[node] = idx;\n    }\n    getLabel(node) { return this.labels == null ? null : this.labels[node]; }\n    setLabel(node, lbl) {\n        if (this.labels == null)\n            this.labels = Vec.stringArray('', this.nbrs.length);\n        this.labels[node] = lbl;\n    }\n    getProperty(node) { return this.props == null ? null : this.props[node]; }\n    setProperty(node, prp) {\n        if (this.props == null)\n            this.props = new Array(this.nbrs.length);\n        this.props[node] = prp;\n    }\n    addNode() {\n        this.nbrs.push([]);\n        if (this.indices != null)\n            this.indices.push(0);\n        if (this.labels != null)\n            this.labels.push('');\n        if (this.props != null)\n            this.props.push(null);\n        return this.nbrs.length - 1;\n    }\n    hasEdge(node1, node2) {\n        if (this.nbrs[node1].length <= this.nbrs[node2].length)\n            return this.nbrs[node1].indexOf(node2) >= 0;\n        else\n            return this.nbrs[node2].indexOf(node1) >= 0;\n    }\n    addEdge(node1, node2) {\n        this.nbrs[node1].push(node2);\n        this.nbrs[node2].push(node1);\n    }\n    removeEdge(node1, node2) {\n        let i1 = this.nbrs[node1].indexOf(node2), i2 = this.nbrs[node2].indexOf(node1);\n        if (i1 >= 0)\n            this.nbrs[node1].splice(i1, 1);\n        if (i2 >= 0)\n            this.nbrs[node2].splice(i2, 1);\n    }\n    isolateNode(node) {\n        for (let o of this.nbrs[node]) {\n            let i = this.nbrs[o].indexOf(node);\n            if (i >= 0)\n                this.nbrs[o].splice(i, 1);\n        }\n        this.nbrs[node] = [];\n    }\n    keepNodesMask(mask) {\n        const oldsz = this.nbrs.length, newsz = Vec.maskCount(mask);\n        if (newsz == oldsz)\n            return;\n        if (newsz == 0) {\n            this.nbrs = [];\n            this.indices = null;\n            this.labels = null;\n            this.props = null;\n            return;\n        }\n        let newmap = Vec.maskMap(mask);\n        let newnbrs = [];\n        for (let n = 0; n < newsz; n++)\n            newnbrs.push([]);\n        for (let n = 0, pos = 0; n < oldsz; n++)\n            if (mask[n]) {\n                for (let i of this.nbrs[n])\n                    if (mask[i])\n                        newnbrs[pos].push(newmap[i]);\n                pos++;\n            }\n        this.nbrs = newnbrs;\n        if (this.indices != null)\n            this.indices = Vec.maskGet(this.indices, mask);\n        if (this.labels != null)\n            this.labels = Vec.maskGet(this.labels, mask);\n        if (this.props != null)\n            this.props = Vec.maskGet(this.props, mask);\n    }\n    keepNodesIndex(idx) { this.keepNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    removeNodesMask(mask) { this.keepNodesMask(Vec.notMask(mask)); }\n    removeNodesIndex(idx) { this.removeNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    subgraphIndex(idx) {\n        const nsz = idx.length;\n        let g = new Graph(nsz);\n        if (this.indices != null || this.labels != null || this.props != null)\n            for (let n = 0; n < nsz; n++) {\n                if (this.indices != null)\n                    g.setIndex(n, this.indices[idx[n]]);\n                if (this.labels != null)\n                    g.setLabel(n, this.labels[idx[n]]);\n                if (this.props != null)\n                    g.setProperty(n, this.props[idx[n]]);\n            }\n        for (let i = 0; i < nsz; i++) {\n            for (let n of this.nbrs[idx[i]]) {\n                let j = idx.indexOf(n);\n                if (j > i)\n                    g.addEdge(i, j);\n            }\n        }\n        return g;\n    }\n    subgraphMask(mask) {\n        let g = this.clone();\n        g.keepNodesMask(mask);\n        return g;\n    }\n    calculateComponents() {\n        const sz = this.nbrs.length;\n        if (sz == 0)\n            return [];\n        let cc = Vec.numberArray(0, sz);\n        cc[0] = 1;\n        let first = 1, high = 1;\n        while (true) {\n            while (first < sz && cc[first] > 0) {\n                first++;\n            }\n            if (first >= sz)\n                break;\n            let anything = false;\n            for (let i = first; i < sz; i++)\n                if (cc[i] == 0) {\n                    for (let j = 0; j < this.nbrs[i].length; j++) {\n                        if (cc[this.nbrs[i][j]] != 0) {\n                            cc[i] = cc[this.nbrs[i][j]];\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything)\n                cc[first] = ++high;\n        }\n        return cc;\n    }\n    calculateComponentGroups() {\n        if (this.nbrs.length == 0)\n            return [];\n        let cc = this.calculateComponents();\n        let sz = Vec.max(cc);\n        let grp = [];\n        for (let n = 0; n < sz; n++)\n            grp.push([]);\n        for (let n = 0; n < cc.length; n++)\n            grp[cc[n] - 1].push(n);\n        return grp;\n    }\n    calculateRingBlocks() {\n        let sz = this.numNodes, nbrs = this.nbrs;\n        if (sz == 0)\n            return [[], 0];\n        let rblk = new Array(this.numNodes);\n        let visited = Vec.booleanArray(false, sz);\n        Vec.setTo(rblk, 0);\n        let path = new Array(sz + 1);\n        let plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < nbrs[last].length; n++)\n                    if (!visited[nbrs[last][n]]) {\n                        current = nbrs[last][n];\n                        break;\n                    }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < nbrs[current].length; n++) {\n                    let join = nbrs[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = rblk[path[i]];\n                            if (id == 0)\n                                rblk[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < sz; j++)\n                                    if (rblk[j] == id)\n                                        rblk[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == sz)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < sz; i++)\n            if (rblk[i] > 0) {\n                nextID--;\n                for (let j = sz - 1; j >= i; j--)\n                    if (rblk[j] == rblk[i])\n                        rblk[j] = nextID;\n            }\n        for (let i = 0; i < sz; i++)\n            rblk[i] = -rblk[i];\n        return [rblk, -nextID];\n    }\n    calculateRingBlockGroups() {\n        let [rblk, sz] = this.calculateRingBlocks();\n        if (sz == 0)\n            return [];\n        let cap = Vec.numberArray(0, sz);\n        for (let n = 0; n < rblk.length; n++)\n            if (rblk[n] > 0)\n                cap[rblk[n] - 1]++;\n        let grp = new Array(sz);\n        for (let n = 0; n < sz; n++) {\n            grp[n] = new Array(cap[n]);\n            cap[n] = 0;\n        }\n        for (let n = 0; n < rblk.length; n++) {\n            let i = rblk[n] - 1;\n            if (i < 0)\n                continue;\n            grp[i][cap[i]++] = n;\n        }\n        return grp;\n    }\n    findRingsOfSize(size) {\n        let [rblk, num] = this.calculateRingBlocks();\n        if (num == 0)\n            return [];\n        let rings = [];\n        let mask = new Array(this.numNodes);\n        for (let r = 1; r <= num; r++) {\n            for (let n = 0; n < this.numNodes; n++)\n                mask[n] = rblk[n] == r;\n            let newRings = this.findRingsOfSizeMask(size, mask);\n            for (let n = 0; n < newRings.length; n++)\n                rings.push(newRings[n]);\n        }\n        return rings;\n    }\n    findRingsOfSizeMask(size, mask) {\n        let rings = [];\n        for (let n = 0; n < this.numNodes; n++)\n            if (mask[n]) {\n                let path = new Array(size);\n                path[0] = n;\n                this.recursiveRingFind(path, 1, size, mask, rings);\n            }\n        return rings;\n    }\n    calculateBFS(idx) {\n        let ret = Vec.numberArray(-1, this.numNodes);\n        ret[idx] = 0;\n        let curnum = 0, lsz = 1, watermark = 0;\n        let list = Vec.numberArray(0, this.numNodes);\n        list[0] = idx;\n        while (true) {\n            let newsz = lsz;\n            for (let n = watermark; n < lsz; n++) {\n                for (let i = 0; i < this.nbrs[list[n]].length; i++) {\n                    let j = this.nbrs[list[n]][i];\n                    if (ret[j] < 0) {\n                        ret[j] = curnum + 1;\n                        list[newsz++] = j;\n                    }\n                }\n            }\n            if (newsz == lsz)\n                break;\n            watermark = lsz;\n            lsz = newsz;\n            curnum++;\n        }\n        return ret;\n    }\n    calculateGravity() {\n        const sz = this.numNodes;\n        const { nbrs } = this;\n        let wght = Vec.numberArray(1, sz), wmod = Vec.numberArray(0, sz);\n        for (let n = 0; n < sz; n++) {\n            Vec.setTo(wmod, wght);\n            for (let i = 0; i < sz; i++)\n                for (let j = nbrs[i].length - 1; j >= 0; j--)\n                    wmod[i] += wght[nbrs[i][j]];\n            Vec.setTo(wght, wmod);\n        }\n        return wght;\n    }\n    recursiveRingFind(path, psize, capacity, mask, rings) {\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < this.nbrs[last].length; n++) {\n                let adj = this.nbrs[last][n];\n                if (!mask[adj])\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++)\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                if (!fnd) {\n                    let newPath = Vec.duplicate(path);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, mask, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < this.nbrs[last].length; n++)\n            if (this.nbrs[last][n] == path[0]) {\n                fnd = true;\n                break;\n            }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n];\n            for (let i = 0; i < this.nbrs[p].length; i++)\n                if (path.indexOf(this.nbrs[p][i]) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = new Array(psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++)\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\n//# sourceMappingURL=Graph.js.map","import { safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nexport const BONDARTIFACT_EXTRA_RESPATH = 'xRESPATH:';\nexport const BONDARTIFACT_EXTRA_RESRING = 'xRESRING:';\nexport const BONDARTIFACT_EXTRA_ARENE = 'xARENE:';\nexport class BondArtifact {\n    constructor(mol) {\n        this.mol = mol;\n        this.resPaths = new Map();\n        this.resRings = new Map();\n        this.arenes = new Map();\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let str of this.mol.atomExtra(n)) {\n                if (str.startsWith(BONDARTIFACT_EXTRA_RESPATH))\n                    this.appendResPath(n, str.substring(BONDARTIFACT_EXTRA_RESPATH.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_RESRING))\n                    this.appendResRing(n, str.substring(BONDARTIFACT_EXTRA_RESRING.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    this.appendArene(n, str.substring(BONDARTIFACT_EXTRA_ARENE.length).split(':'));\n            }\n        }\n        for (let [blk, res] of this.resPaths.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, false))\n                this.resPaths.delete(blk);\n        }\n        for (let [blk, res] of this.resRings.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, true))\n                this.resRings.delete(blk);\n        }\n        for (let [blk, res] of this.arenes.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (res.atoms.length > 1)\n                res.centre = res.atoms.shift();\n            if (!this.pathify(res.atoms, false))\n                this.arenes.delete(blk);\n        }\n    }\n    getPathBlocks() { return Array.from(this.resPaths.keys()); }\n    getRingBlocks() { return Array.from(this.resRings.keys()); }\n    getAreneBlocks() { return Array.from(this.arenes.keys()); }\n    getResPaths() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resPaths.keys())))\n            list.push(this.resPaths.get(key));\n        return list;\n    }\n    getResRings() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resRings.keys())))\n            list.push(this.resRings.get(key));\n        return list;\n    }\n    getArenes() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.arenes.keys())))\n            list.push(this.arenes.get(key));\n        return list;\n    }\n    rewriteMolecule() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n), modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) || extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) || extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE)) {\n                    extra.splice(i);\n                    modified = true;\n                }\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n        for (let [blk, path] of this.resPaths.entries()) {\n            for (let n = 0; n < path.atoms.length; n++) {\n                let extra = mol.atomExtra(path.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESPATH + blk + ':' + (n + 1));\n                mol.setAtomExtra(path.atoms[n], extra);\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let extra = mol.atomExtra(ring.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESRING + blk + ':' + (n + 1));\n                mol.setAtomExtra(ring.atoms[n], extra);\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            for (let n = -1; n < arene.atoms.length; n++) {\n                let atom = n < 0 ? arene.centre : arene.atoms[n];\n                let extra = mol.atomExtra(atom);\n                extra.push(BONDARTIFACT_EXTRA_ARENE + blk + ':' + (n + 2));\n                mol.setAtomExtra(atom, extra);\n            }\n        }\n    }\n    harmoniseNumbering(other) {\n        let blocks = other.getPathBlocks();\n        let stashPaths = this.getResPaths();\n        this.resPaths.clear();\n        for (let path of stashPaths) {\n            let blk = this.nextIdentifier(blocks);\n            this.resPaths.set(blk, path);\n            blocks.push(blk);\n        }\n        blocks = other.getRingBlocks();\n        let stashRings = this.getResRings();\n        this.resRings.clear();\n        for (let ring of stashRings) {\n            let blk = this.nextIdentifier(blocks);\n            this.resRings.set(blk, ring);\n            blocks.push(blk);\n        }\n        blocks = other.getAreneBlocks();\n        let stashArenes = this.getArenes();\n        this.arenes.clear();\n        for (let arene of stashArenes) {\n            let blk = this.nextIdentifier(blocks);\n            this.arenes.set(blk, arene);\n            blocks.push(blk);\n        }\n    }\n    createPath(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let path = this.atomsAsPath(atoms);\n        if (path) {\n            let id = this.nextIdentifier(Array.from(this.resPaths.keys()));\n            this.resPaths.set(id, path);\n            return true;\n        }\n        return false;\n    }\n    createRing(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let ring = this.atomsAsRing(atoms);\n        if (ring) {\n            let id = this.nextIdentifier(Array.from(this.resRings.keys()));\n            this.resRings.set(id, ring);\n            return true;\n        }\n        return false;\n    }\n    createArene(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let arene = this.atomsAsArene(atoms);\n        if (arene) {\n            let id = this.nextIdentifier(Array.from(this.arenes.keys()));\n            this.arenes.set(id, arene);\n            return true;\n        }\n        return false;\n    }\n    removeArtifact(atoms) {\n        let type = 0, pick = 0, overlap = 0;\n        for (let [blk, path] of this.resPaths.entries()) {\n            let count = 0;\n            for (let a of path.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 1;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            let count = 0;\n            for (let a of ring.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 2;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            let count = atoms.indexOf(arene.centre) >= 0 ? 1 : 0;\n            for (let a of arene.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 3;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        if (type == 0)\n            return false;\n        else if (type == 1)\n            this.resPaths.delete(pick);\n        else if (type == 2)\n            this.resRings.delete(pick);\n        else if (type == 3)\n            this.arenes.delete(pick);\n        return true;\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) && !extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) &&\n                    !extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    continue;\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    appendResPath(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resPaths.get(blk);\n        if (res == null)\n            this.resPaths.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendResRing(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resRings.get(blk);\n        if (res == null)\n            this.resRings.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendArene(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.arenes.get(blk);\n        if (res == null)\n            this.arenes.set(blk, res = { centre: 0, atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    pack(arr) {\n        let ret = [];\n        for (let v of arr)\n            if (v != 0)\n                ret.push(v);\n        return ret;\n    }\n    pathify(atoms, requireRing) {\n        let sz = atoms.length;\n        if (sz < 2)\n            return false;\n        let g = Graph.fromMolecule(this.mol);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            g.setIndex(n, n + 1);\n        g = g.subgraphIndex(Vec.add(atoms, -1));\n        let pos = 0;\n        for (let n = 1; n < sz; n++)\n            if (g.numEdges(n) < g.numEdges(pos))\n                pos = n;\n        Vec.setTo(atoms, -1);\n        for (let n = 0; n < sz; n++) {\n            atoms[n] = pos;\n            if (n == sz - 1) {\n                if (requireRing)\n                    if (g.getEdges(pos).indexOf(atoms[0]) < 0)\n                        return false;\n            }\n            else {\n                let next = sz;\n                for (let i of g.getEdges(pos))\n                    if (atoms.indexOf(i) < 0 && i < next)\n                        next = i;\n                if (next == sz)\n                    return false;\n                pos = next;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            atoms[n] = g.getIndex(atoms[n]);\n        return true;\n    }\n    alreadyExists(atoms) {\n        atoms = Vec.sorted(atoms);\n        for (let path of this.resPaths.values()) {\n            if (Vec.equals(atoms, Vec.sorted(path.atoms)))\n                return true;\n        }\n        for (let ring of this.resRings.values()) {\n            if (Vec.equals(atoms, Vec.sorted(ring.atoms)))\n                return true;\n        }\n        for (let arene of this.arenes.values()) {\n            let areneAtoms = Vec.append(arene.atoms, arene.centre);\n            if (Vec.equals(atoms, Vec.sorted(areneAtoms)))\n                return true;\n        }\n        return false;\n    }\n    atomsAsPath(atoms) {\n        if (atoms.length < 2)\n            return null;\n        let path = { atoms: atoms };\n        if (!this.pathify(path.atoms, false))\n            return null;\n        return path;\n    }\n    atomsAsRing(atoms) {\n        if (atoms.length < 3)\n            return null;\n        let ring = { atoms: atoms };\n        if (!this.pathify(ring.atoms, true))\n            return null;\n        return ring;\n    }\n    atomsAsArene(atoms) {\n        const sz = atoms.length;\n        if (sz < 3)\n            return null;\n        let g = Graph.fromMolecule(this.mol).subgraphIndex(Vec.add(atoms, -1));\n        let best = 0;\n        if (sz == 3) {\n            let bsum = [0, 0, 0];\n            for (let n = 0; n < sz; n++) {\n                if (g.numEdges(n) != 2)\n                    return null;\n                for (let e of g.getEdges(n))\n                    bsum[n] += this.mol.bondOrder(this.mol.findBond(atoms[n], atoms[e]));\n                best = Vec.idxMin(bsum);\n            }\n        }\n        else {\n            for (let n = 1; n < sz; n++)\n                if (g.numEdges(n) > g.numEdges(best))\n                    best = n;\n        }\n        let arene = { centre: atoms[best], atoms: Vec.remove(atoms, best) };\n        if (!this.pathify(arene.atoms, false))\n            return null;\n        return arene;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=BondArtifact.js.map","class Chemistry {\n}\nChemistry.ELEMENTS = [\n    null,\n    'H', 'He',\n    'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar',\n    'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr',\n    'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe',\n    'Cs', 'Ba',\n    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn',\n    'Fr', 'Ra',\n    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No',\n    'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn'\n];\nChemistry.ELEMENT_GROUPS = [\n    0,\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_ROWS = [\n    0,\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nChemistry.ELEMENT_BLOCKS = [\n    0,\n    1, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3\n];\nChemistry.ELEMENT_VALENCE = [\n    0,\n    1, 2,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_BONDING = [\n    0,\n    1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_SHELL = [\n    0,\n    2, 2,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18\n];\nChemistry.NATURAL_ATOMIC_WEIGHTS = [\n    0, 1.00794, 4.002602, 6.941, 9.012182, 10.811, 12.0107, 14.0067, 15.9994, 18.9984032, 20.1797,\n    22.989770, 24.3050, 26.981538, 28.0855, 30.973761, 32.065, 35.453, 39.948, 39.0983, 40.078,\n    44.955910, 47.867, 50.9415, 51.9961, 54.938049, 55.845, 58.933200, 58.6934, 63.546, 65.409,\n    69.723, 72.64, 74.92160, 78.96, 79.904, 83.798, 85.4678, 87.62, 88.90585, 91.224, 92.90638,\n    95.94, 98, 101.07, 102.90550, 106.42, 107.8682, 112.411, 114.818, 118.710, 121.760, 127.60,\n    126.90447, 131.293, 132.90545, 137.327, 138.9055, 140.116, 140.90765, 144.24, 145, 150.36,\n    151.964, 157.25, 158.92534, 162.500, 164.93032, 167.259, 168.93421, 173.04, 174.967, 178.49,\n    180.9479, 183.84, 186.207, 190.23, 192.217, 195.078, 196.96655, 200.59, 204.3833, 207.2, 208.98038,\n    209, 210, 222, 223, 226, 227, 230.0331266, 231.03588, 233.039628, 237, 244, 243, 247, 247, 251, 252, 257,\n    258, 259, 262, 261, 262, 266, 264, 277, 268, 271, 272, 285\n];\nChemistry.ELEMENT_H = 1;\nChemistry.ELEMENT_He = 2;\nChemistry.ELEMENT_Li = 3;\nChemistry.ELEMENT_Be = 4;\nChemistry.ELEMENT_B = 5;\nChemistry.ELEMENT_C = 6;\nChemistry.ELEMENT_N = 7;\nChemistry.ELEMENT_O = 8;\nChemistry.ELEMENT_F = 9;\nChemistry.ELEMENT_Ne = 10;\nChemistry.ELEMENT_Na = 11;\nChemistry.ELEMENT_Mg = 12;\nChemistry.ELEMENT_Al = 13;\nChemistry.ELEMENT_Si = 14;\nChemistry.ELEMENT_P = 15;\nChemistry.ELEMENT_S = 16;\nChemistry.ELEMENT_Cl = 17;\nChemistry.ELEMENT_Ar = 18;\nChemistry.ELEMENT_K = 19;\nChemistry.ELEMENT_Ca = 20;\nChemistry.ELEMENT_Sc = 21;\nChemistry.ELEMENT_Ti = 22;\nChemistry.ELEMENT_V = 23;\nChemistry.ELEMENT_Cr = 24;\nChemistry.ELEMENT_Mn = 25;\nChemistry.ELEMENT_Fe = 26;\nChemistry.ELEMENT_Co = 27;\nChemistry.ELEMENT_Ni = 28;\nChemistry.ELEMENT_Cu = 29;\nChemistry.ELEMENT_Zn = 30;\nChemistry.ELEMENT_Ga = 31;\nChemistry.ELEMENT_Ge = 32;\nChemistry.ELEMENT_As = 33;\nChemistry.ELEMENT_Se = 34;\nChemistry.ELEMENT_Br = 35;\nChemistry.ELEMENT_Kr = 36;\nChemistry.ELEMENT_Rb = 37;\nChemistry.ELEMENT_Sr = 38;\nChemistry.ELEMENT_Y = 39;\nChemistry.ELEMENT_Zr = 40;\nChemistry.ELEMENT_Nb = 41;\nChemistry.ELEMENT_Mo = 42;\nChemistry.ELEMENT_Tc = 43;\nChemistry.ELEMENT_Ru = 44;\nChemistry.ELEMENT_Rh = 45;\nChemistry.ELEMENT_Pd = 46;\nChemistry.ELEMENT_Ag = 47;\nChemistry.ELEMENT_Cd = 48;\nChemistry.ELEMENT_In = 49;\nChemistry.ELEMENT_Sn = 50;\nChemistry.ELEMENT_Sb = 51;\nChemistry.ELEMENT_Te = 52;\nChemistry.ELEMENT_I = 53;\nChemistry.ELEMENT_Xe = 54;\nChemistry.ELEMENT_Cs = 55;\nChemistry.ELEMENT_Ba = 56;\nChemistry.ELEMENT_La = 57;\nChemistry.ELEMENT_Ce = 58;\nChemistry.ELEMENT_Pr = 59;\nChemistry.ELEMENT_Nd = 60;\nChemistry.ELEMENT_Pm = 61;\nChemistry.ELEMENT_Sm = 62;\nChemistry.ELEMENT_Eu = 63;\nChemistry.ELEMENT_Gd = 64;\nChemistry.ELEMENT_Tb = 65;\nChemistry.ELEMENT_Dy = 66;\nChemistry.ELEMENT_Ho = 67;\nChemistry.ELEMENT_Er = 68;\nChemistry.ELEMENT_Tm = 69;\nChemistry.ELEMENT_Yb = 70;\nChemistry.ELEMENT_Lu = 71;\nChemistry.ELEMENT_Hf = 72;\nChemistry.ELEMENT_Ta = 73;\nChemistry.ELEMENT_W = 74;\nChemistry.ELEMENT_Re = 75;\nChemistry.ELEMENT_Os = 76;\nChemistry.ELEMENT_Ir = 77;\nChemistry.ELEMENT_Pt = 78;\nChemistry.ELEMENT_Au = 79;\nChemistry.ELEMENT_Hg = 80;\nChemistry.ELEMENT_Tl = 81;\nChemistry.ELEMENT_Pb = 82;\nChemistry.ELEMENT_Bi = 83;\nChemistry.ELEMENT_Po = 84;\nChemistry.ELEMENT_At = 85;\nChemistry.ELEMENT_Rn = 86;\nChemistry.ELEMENT_Fr = 87;\nChemistry.ELEMENT_Ra = 88;\nChemistry.ELEMENT_Ac = 89;\nChemistry.ELEMENT_Th = 90;\nChemistry.ELEMENT_Pa = 91;\nChemistry.ELEMENT_U = 92;\nChemistry.ELEMENT_Np = 93;\nChemistry.ELEMENT_Pu = 94;\nChemistry.ELEMENT_Am = 95;\nChemistry.ELEMENT_Cm = 96;\nChemistry.ELEMENT_Bk = 97;\nChemistry.ELEMENT_Cf = 98;\nChemistry.ELEMENT_Es = 99;\nChemistry.ELEMENT_Fm = 100;\nChemistry.ELEMENT_Md = 101;\nChemistry.ELEMENT_No = 102;\nChemistry.ELEMENT_Lr = 103;\nChemistry.ELEMENT_Rf = 104;\nChemistry.ELEMENT_Db = 105;\nChemistry.ELEMENT_Sg = 106;\nChemistry.ELEMENT_Bh = 107;\nChemistry.ELEMENT_Hs = 108;\nChemistry.ELEMENT_Mt = 109;\nChemistry.ELEMENT_Ds = 110;\nChemistry.ELEMENT_Rg = 111;\nChemistry.ELEMENT_Cn = 112;\nexport { Chemistry };\n//# sourceMappingURL=Chemistry.js.map","import { Chemistry } from '../data/Chemistry';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { Vec } from '../util/Vec';\nexport class ResonanceRemover {\n    constructor(mol, resBonds, atomHyd = []) {\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        this.maxIter = 1000;\n        this.bondOrders = [];\n        this.tolerant = false;\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        for (let n = 1; n <= mol.numBonds; n++)\n            this.bondOrders.push(mol.bondOrder(n));\n    }\n    perform() {\n        const { mol } = this;\n        if (this.atomHyd == null) {\n            this.atomHyd = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                this.atomHyd.push(mol.atomHExplicit(n));\n        }\n        this.correctInputMask();\n        let g = new Graph(mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.resBonds[n - 1])\n                g.addEdge(mol.bondFrom(n) - 1, mol.bondTo(n) - 1);\n        let cc = g.calculateComponentGroups();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n].length >= 2)\n                this.processComponent(cc[n]);\n    }\n    correctInputMask() {\n        const { mol, atomHyd } = this;\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let exclude = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            let val = atno == Chemistry.ELEMENT_C ? 4 :\n                atno == Chemistry.ELEMENT_N || atno == Chemistry.ELEMENT_P || atno == Chemistry.ELEMENT_B ? 3 :\n                    atno == Chemistry.ELEMENT_O || atno == Chemistry.ELEMENT_S ? 2 : -1;\n            if (val < 0) {\n                exclude[n - 1] = true;\n                continue;\n            }\n            val += mol.atomCharge(n);\n            if (atomHyd[n - 1] > 0)\n                val -= atomHyd[n - 1];\n            if (mol.atomAdjCount(n) >= val)\n                exclude[n - 1] = true;\n        }\n        for (let n = 1; n <= nb; n++)\n            if (!this.resBonds[n - 1] && mol.bondOrder(n) != 1) {\n                exclude[mol.bondFrom(n) - 1] = true;\n                exclude[mol.bondTo(n) - 1] = true;\n            }\n        this.resBonds = this.resBonds.slice(0);\n        for (let n = 0; n < nb; n++)\n            if (this.resBonds[n] && (exclude[mol.bondFrom(n + 1) - 1] || exclude[mol.bondTo(n + 1) - 1])) {\n                this.bondOrders[n] = 1;\n                this.resBonds[n] = false;\n            }\n    }\n    processComponent(nodes) {\n        const { mol, resBonds, bondOrders, atomHyd } = this;\n        let sz = nodes.length;\n        if (sz == 2) {\n            let b = mol.findBond(nodes[0] + 1, nodes[1] + 1);\n            bondOrders[b - 1] = 2;\n            return;\n        }\n        let optionalH = Vec.booleanArray(false, sz);\n        for (let n = 0; n < sz; n++) {\n            let i = nodes[n], a = i + 1;\n            optionalH[n] = atomHyd[i] == Molecule.HEXPLICIT_UNKNOWN && mol.atomElement(a) == 'N' && mol.atomAdjCount(a) - mol.atomCharge(a) <= 2;\n        }\n        let g = new Graph(sz);\n        let gravity = g.calculateGravity();\n        let mask = Vec.idxMask(nodes, mol.numAtoms);\n        let bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1])\n                bsz++;\n        let bfr = Vec.numberArray(0, bsz), bto = Vec.numberArray(0, bsz), bgrav = Vec.numberArray(0, bsz), bidx = Vec.numberArray(0, bsz);\n        bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1]) {\n                let f = nodes.indexOf(mol.bondFrom(n) - 1), t = nodes.indexOf(mol.bondTo(n) - 1);\n                bfr[bsz] = f;\n                bto[bsz] = t;\n                bgrav[bsz] = gravity[f] + gravity[t];\n                bidx[bsz] = n;\n                g.addEdge(f, t);\n                bsz++;\n            }\n        let seq = Vec.numberArray(0, bsz);\n        seq[0] = Vec.idxMax(bgrav);\n        let visited = Vec.booleanArray(false, bsz);\n        visited[seq[0]] = true;\n        for (let i = 1; i < bsz; i++) {\n            let b = -1;\n            for (let j = i - 1; j >= 0; j--) {\n                for (let n = 0; n < bsz; n++) {\n                    if (!visited[n])\n                        if (bfr[n] == bfr[seq[j]] || bfr[n] == bto[seq[j]] || bto[n] == bfr[seq[j]] || bto[n] == bto[seq[j]]) {\n                            if (b < 0 || bgrav[n] > bgrav[b])\n                                b = n;\n                        }\n                }\n                if (b >= 0)\n                    break;\n            }\n            if (b < 0)\n                throw 'Graph walk failed';\n            seq[i] = b;\n            visited[b] = true;\n        }\n        let paths = [];\n        paths.push([true]);\n        paths.push([false]);\n        let result = null;\n        let resultCount = 0;\n        let definiteMatch = Math.ceil(0.5 * bsz);\n        let iter = 0;\n        while (paths.length > 0) {\n            let p = paths[0];\n            let p1 = Vec.append(p, false), p2 = Vec.append(p, true);\n            if (!this.validPath(p1, seq, bfr, bto, g, optionalH))\n                p1 = null;\n            if (!this.validPath(p2, seq, bfr, bto, g, optionalH))\n                p2 = null;\n            if (Vec.len(p1) == bsz) {\n                let c = Vec.maskCount(p1);\n                if (c > resultCount) {\n                    result = p1;\n                    resultCount = c;\n                }\n                p1 = null;\n            }\n            if (Vec.len(p2) == bsz) {\n                let c = Vec.maskCount(p2);\n                if (c > resultCount) {\n                    result = p2;\n                    resultCount = c;\n                }\n                p2 = null;\n            }\n            if (resultCount >= definiteMatch)\n                break;\n            if (p1 == null && p2 == null)\n                paths.shift();\n            else if (p1 != null && p2 != null) {\n                paths[0] = p1;\n                paths.splice(1, 0, p2);\n            }\n            else if (p1 != null)\n                paths[0] = p1;\n            else\n                paths[0] = p2;\n            iter++;\n            if (iter > this.maxIter) {\n                if (result != null)\n                    break;\n                if (this.tolerant)\n                    return;\n                throw 'Resonance localisation exceeded maximum iteration count';\n            }\n        }\n        if (result == null) {\n            if (this.tolerant)\n                return;\n            throw 'Unable to find a solution to the resonance block.';\n        }\n        for (let n = 0; n < bsz; n++)\n            bondOrders[bidx[seq[n]] - 1] = result[n] ? 2 : 1;\n    }\n    validPath(path, seq, bfr, bto, g, optionalH) {\n        let sz = g.numNodes;\n        let count1 = Vec.numberArray(0, sz), count2 = Vec.numberArray(0, sz);\n        for (let n = 0; n < path.length; n++) {\n            let a1 = bfr[seq[n]], a2 = bto[seq[n]];\n            if (path[n]) {\n                count2[a1]++;\n                count2[a2]++;\n            }\n            else {\n                count1[a1]++;\n                count1[a2]++;\n            }\n        }\n        for (let n = 0; n < sz; n++) {\n            if (count2[n] > 1)\n                return false;\n            if (!optionalH[n] && g.numEdges(n) > 1 && count1[n] == g.numEdges(n))\n                return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=ResonanceRemover.js.map","import { deepClone, safeFloat, safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport var DataSheetColumn;\n(function (DataSheetColumn) {\n    DataSheetColumn[\"Molecule\"] = \"molecule\";\n    DataSheetColumn[\"String\"] = \"string\";\n    DataSheetColumn[\"Real\"] = \"real\";\n    DataSheetColumn[\"Integer\"] = \"integer\";\n    DataSheetColumn[\"Boolean\"] = \"boolean\";\n    DataSheetColumn[\"Extend\"] = \"extend\";\n})(DataSheetColumn || (DataSheetColumn = {}));\nexport class DataSheet {\n    constructor(data) {\n        if (!data)\n            data = {};\n        if (!data.title)\n            data.title = '';\n        if (!data.description)\n            data.description = '';\n        if (data.numCols == null)\n            data.numCols = Vec.len(data.colData);\n        if (data.numRows == null)\n            data.numRows = Vec.len(data.rowData);\n        if (data.numExtens == null)\n            data.numExtens = Vec.len(data.extData);\n        if (data.colData == null)\n            data.colData = [];\n        if (data.rowData == null)\n            data.rowData = [];\n        if (data.extData == null)\n            data.extData = [];\n        this.data = data;\n    }\n    clone(withRows = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: numCols,\n            numRows: withRows ? numRows : 0,\n            numExtens: this.data.numExtens,\n            colData: deepClone(colData),\n            rowData: withRows ? new Array(numRows) : [],\n            extData: deepClone(this.data.extData),\n        };\n        if (withRows)\n            for (let r = 0; r < numRows; r++) {\n                let inRow = rowData[r], outRow = new Array(numCols);\n                for (let c = 0; c < numCols; c++) {\n                    if (inRow[c] != null && colData[c].type == \"molecule\" && inRow[c] instanceof Molecule)\n                        outRow[c] = inRow[c].clone();\n                    else\n                        outRow[c] = inRow[c];\n                }\n                data.rowData[r] = outRow;\n            }\n        return new DataSheet(data);\n    }\n    cloneMask(colMask, rowMask = null, inclExtn = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: Vec.maskCount(colMask),\n            numRows: rowMask ? Vec.maskCount(rowMask) : 0,\n            numExtens: inclExtn ? this.data.numExtens : 0,\n            colData: deepClone(Vec.maskGet(colData, colMask)),\n            rowData: [],\n            extData: inclExtn ? deepClone(this.data.extData) : [],\n        };\n        if (rowMask)\n            for (let r = 0; r < numRows; r++)\n                if (rowMask[r]) {\n                    let inRow = rowData[r], outRow = Vec.maskGet(inRow, colMask);\n                    data.rowData.push(outRow);\n                }\n        const { colData: outCols, rowData: outRows } = data;\n        for (let c = outCols.length - 1; c >= 0; c--)\n            if (outCols[c].type == \"molecule\") {\n                for (let r = outRows.length - 1; r >= 0; r--)\n                    if (outRows[r][c] != null && outRows[r][c] instanceof Molecule)\n                        outRows[r][c] = outRows[r][c].clone();\n            }\n        return new DataSheet(data);\n    }\n    getData() {\n        return this.data;\n    }\n    get numCols() {\n        return this.data.numCols;\n    }\n    get numRows() {\n        return this.data.numRows;\n    }\n    get title() { return this.data.title; }\n    set title(title) { this.data.title = title; }\n    get description() { return this.data.description; }\n    set description(description) { this.data.description = description; }\n    get numExtensions() {\n        return this.data.numExtens;\n    }\n    getExtName(idx) {\n        return this.data.extData[idx].name;\n    }\n    getExtType(idx) {\n        return this.data.extData[idx].type;\n    }\n    getExtData(idx) {\n        return this.data.extData[idx].data;\n    }\n    setExtName(idx, val) {\n        this.data.extData[idx].name = val;\n    }\n    setExtType(idx, val) {\n        this.data.extData[idx].type = val;\n    }\n    setExtData(idx, val) {\n        this.data.extData[idx].data = val;\n    }\n    appendExtension(name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.push({ name, type, data });\n        return this.data.numExtens - 1;\n    }\n    insertExtension(idx, name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.splice(idx, 0, { name, type, data });\n    }\n    deleteExtension(idx) {\n        this.data.extData.splice(idx, 1);\n        this.data.numExtens--;\n    }\n    colName(col) {\n        return this.data.colData[col].name;\n    }\n    colType(col) {\n        return this.data.colData[col].type;\n    }\n    colDescr(col) {\n        return this.data.colData[col].descr;\n    }\n    isNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col] == null;\n    }\n    notNull(row, col) {\n        return !this.isNull(row, col);\n    }\n    isBlank(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col))\n            return true;\n        let ct = this.colType(col);\n        if (ct == \"molecule\")\n            return this.getMolecule(row, col).numAtoms == 0;\n        if (ct == \"string\")\n            return this.getString(row, col).length == 0;\n        if (ct == \"extend\")\n            return this.getExtend(row, col).length == 0;\n        return false;\n    }\n    notBlank(row, col) {\n        return !this.isBlank(row, col);\n    }\n    getObject(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        return this.data.rowData[row][col];\n    }\n    getMolecule(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let datum = this.data.rowData[row][col];\n        if (datum == null)\n            return null;\n        if (typeof datum === 'string') {\n            datum = Molecule.fromString(datum);\n            this.data.rowData[row][col] = datum;\n        }\n        return datum;\n    }\n    getMoleculeClone(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol == null ? null : mol.clone();\n    }\n    getMoleculeBlank(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol ? mol : new Molecule();\n    }\n    getString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let str = this.data.rowData[row][col];\n        return str == null ? '' : str;\n    }\n    getInteger(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getReal(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getBoolean(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getExtend(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    setToNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = null;\n    }\n    setObject(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = mol ? mol.clone() : null;\n    }\n    setString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setExtend(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    isEqualMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (mol == null))\n            return false;\n        if (mol == null)\n            return true;\n        return this.getMolecule(row, col).compareTo(mol) == 0;\n    }\n    isEqualString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null || val == ''))\n            return false;\n        if (val == null || val == '')\n            return true;\n        return this.getString(row, col) == val;\n    }\n    isEqualInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getInteger(row, col) == val;\n    }\n    isEqualReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getReal(row, col) == val;\n    }\n    isEqualBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getBoolean(row, col) == val;\n    }\n    appendColumn(name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.push({ name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].push(null);\n        return this.data.numCols - 1;\n    }\n    insertColumn(col, name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.splice(col, 0, { name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 0, null);\n    }\n    deleteColumn(col) {\n        this.data.numCols--;\n        this.data.colData.splice(col, 1);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 1);\n    }\n    changeColumnName(col, name, descr) {\n        this.data.colData[col].name = name;\n        this.data.colData[col].descr = descr;\n    }\n    changeColumnType(col, newType) {\n        let oldType = this.colType(col);\n        if (oldType == newType)\n            return;\n        let incompatible = oldType == \"molecule\" || newType == \"molecule\" ||\n            oldType == \"extend\" || newType == \"extend\";\n        for (let n = this.data.rowData.length - 1; n >= 0; n--) {\n            let row = this.data.rowData[n];\n            if (row[col] == null)\n                continue;\n            if (incompatible) {\n                row[col] = null;\n                continue;\n            }\n            let val = '';\n            if (oldType == \"string\")\n                val = row[col];\n            else if (oldType == \"integer\")\n                val = row[col].toString();\n            else if (oldType == \"real\")\n                val = row[col].toString();\n            else if (oldType == \"boolean\")\n                val = row[col] ? 'true' : 'false';\n            row[col] = null;\n            if (newType == \"string\")\n                row[col] = val;\n            else if (newType == \"integer\") {\n                let num = parseInt(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"real\") {\n                let num = parseFloat(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"boolean\")\n                row[col] = val.toLowerCase() == 'true' ? true : false;\n        }\n        this.data.colData[col].type = newType;\n    }\n    ensureColumn(name, type, descr) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (this.data.colData[n].type != type)\n                    this.changeColumnType(n, type);\n                this.data.colData[n].descr = descr;\n                return n;\n            }\n        return this.appendColumn(name, type, descr);\n    }\n    reorderColumns(order) {\n        let identity = true;\n        for (let n = 0; n < order.length - 1; n++)\n            if (order[n] != order[n + 1] - 1) {\n                identity = false;\n                break;\n            }\n        if (identity)\n            return;\n        this.data.colData = Vec.idxGet(this.data.colData, order);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n] = Vec.idxGet(this.data.rowData[n], order);\n    }\n    appendRow() {\n        this.data.numRows++;\n        let row = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            row.push(null);\n        this.data.rowData.push(row);\n        return this.data.numRows - 1;\n    }\n    appendRowFrom(srcDS, row) {\n        this.data.numRows++;\n        this.data.rowData.push(srcDS.data.rowData[row].slice(0));\n        return this.data.numRows - 1;\n    }\n    insertRow(row) {\n        this.data.numRows++;\n        let data = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            data.push(null);\n        this.data.rowData.splice(row, 0, data);\n    }\n    deleteRow(row) {\n        this.data.numRows--;\n        this.data.rowData.splice(row, 1);\n    }\n    deleteAllRows() {\n        this.data.numRows = 0;\n        this.data.rowData = new Array();\n    }\n    moveRowUp(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row - 1];\n        this.data.rowData[row - 1] = data;\n    }\n    moveRowDown(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row + 1];\n        this.data.rowData[row + 1] = data;\n    }\n    swapRows(row1, row2) {\n        Vec.swap(this.data.rowData, row1, row2);\n    }\n    exciseSingleRow(row) {\n        let newData = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: this.data.numCols,\n            numRows: 1,\n            numExtens: this.data.numExtens,\n            colData: this.data.colData.slice(0),\n            rowData: [this.data.rowData[row].slice(0)],\n            extData: this.data.extData.slice(0)\n        };\n        return new DataSheet(newData);\n    }\n    colIsPrimitive(col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let ct = this.data.colData[col].type;\n        return ct == 'string' || ct == 'real' || ct == 'integer' || ct == 'boolean';\n    }\n    findColByName(name, type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (type == null || this.data.colData[n].type == type)\n                    return n;\n            }\n        return -1;\n    }\n    firstColOfType(type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].type == type)\n                return n;\n        return -1;\n    }\n    copyCell(toRow, toCol, fromDS, fromRow, fromCol) {\n        this.setToNull(toRow, toCol);\n        if (fromDS.isNull(fromRow, fromCol))\n            return;\n        let obj = fromDS.getObject(fromRow, fromCol);\n        this.setObject(toRow, toCol, DataSheet.convertType(obj, fromDS.colType(fromCol), this.colType(toCol)));\n    }\n    static convertType(obj, fromType, toType) {\n        const ft = fromType, tt = toType;\n        if (obj == null || ft == tt || (typeof obj == 'string' && obj == ''))\n            return obj;\n        if (tt == \"string\") {\n            if (ft == \"integer\")\n                return obj.toString();\n            else if (ft == \"real\")\n                return obj.toString();\n            else if (ft == \"boolean\")\n                return obj ? 'true' : 'false';\n        }\n        else if (tt == \"real\") {\n            if (ft == \"string\")\n                return safeFloat(obj, null);\n            else if (ft == \"integer\")\n                return obj;\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"integer\") {\n            if (ft == \"string\")\n                return safeInt(obj, null);\n            else if (ft == \"real\")\n                return Math.round(obj);\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"boolean\") {\n            if (ft == \"string\")\n                return obj.toLowerCase() == 'true';\n            else if (ft == \"integer\")\n                return obj > 0;\n            else if (ft == \"real\")\n                return obj >= 0.5;\n        }\n        return null;\n    }\n    toString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : obj.toString();\n    }\n    toInt(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseInt(obj);\n    }\n    toReal(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseFloat(obj);\n    }\n}\n//# sourceMappingURL=DataSheet.js.map","import { Vec } from '../util/Vec';\nexport var ForeignMoleculeTransient;\n(function (ForeignMoleculeTransient) {\n    ForeignMoleculeTransient[\"AtomAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondZeroDative\"] = \"yZERO_DATIVE\";\n    ForeignMoleculeTransient[\"BondZeroHydrogen\"] = \"yZERO_HYDROGEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLOdd\"] = \"yCHIRAL_MDL_ODD\";\n    ForeignMoleculeTransient[\"AtomChiralMDLEven\"] = \"yCHIRAL_MDL_EVEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLRacemic\"] = \"yCHIRAL_MDL_RACEMIC\";\n    ForeignMoleculeTransient[\"AtomExplicitValence\"] = \"yMDL_EXPLICIT_VALENCE\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiAttach\"] = \"yMDL_SGROUP_MULTIATTACH\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiRepeat\"] = \"yMDL_SGROUP_MULTIREPEAT\";\n    ForeignMoleculeTransient[\"AtomSgroupData\"] = \"yMDL_SGROUP_DATA\";\n    ForeignMoleculeTransient[\"AtomSCSRClass\"] = \"yMDL_SCSR_CLASS\";\n    ForeignMoleculeTransient[\"AtomSCSRSeqID\"] = \"yMDL_SCSR_SEQID\";\n    ForeignMoleculeTransient[\"AtomSCSRAttchOrd\"] = \"yMDL_SCSR_ATTCHORD\";\n})(ForeignMoleculeTransient || (ForeignMoleculeTransient = {}));\nexport class ForeignMolecule {\n    static noteAromaticAtoms(mol) {\n        const sz = mol.numAtoms;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.atomTransient(n).indexOf(ForeignMoleculeTransient.AtomAromatic) >= 0;\n        return mask;\n    }\n    static noteAromaticBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0;\n        return mask;\n    }\n    static noteZeroDativeBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroDative);\n        return mask;\n    }\n    static noteZeroHydrogenBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroHydrogen);\n        return mask;\n    }\n    static markExplicitValence(mol, atom, valence) {\n        let trans = mol.atomTransient(atom).filter((tr) => !tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'));\n        trans.push(`${ForeignMoleculeTransient.AtomExplicitValence}:${valence}`);\n        mol.setAtomTransient(atom, trans);\n    }\n    static noteExplicitValence(mol, atom) {\n        let trans = mol.atomTransient(atom);\n        for (let tr of trans)\n            if (tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'))\n                return parseInt(tr.substring(ForeignMoleculeTransient.AtomExplicitValence.length + 1));\n        return null;\n    }\n    static markSgroupMultiAttach(mol, name, atoms, keyval = {}) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let comma = payload.indexOf(',');\n                    let bits = payload.split(',');\n                    let idx = parseInt(bits[0]);\n                    if (!(idx > 0))\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiAttach}:${idxHigh + 1},${name}`;\n        for (let [key, val] of Object.entries(keyval))\n            tag += ',' + key + '=' + val;\n        for (let a of atoms)\n            mol.setAtomTransient(a, Vec.append(mol.atomTransient(a), tag));\n    }\n    static hasAnySgroupMultiAttach(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiAttach(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 2)\n                        continue;\n                    let idx = parseInt(bits[0]), name = bits[1];\n                    if (!(idx > 0) || !name)\n                        continue;\n                    let keyval = {};\n                    for (let i = 2; i < bits.length; i++) {\n                        let eq = bits[i].indexOf('=');\n                        if (eq < 0)\n                            continue;\n                        keyval[bits[i].substring(0, eq)] = bits[i].substring(eq + 1);\n                    }\n                    let sgm = map[idx];\n                    if (sgm)\n                        sgm.atoms.push(n);\n                    else\n                        map[idx] = { name, atoms: [n], keyval };\n                }\n        return Object.values(map);\n    }\n    static markSgroupMultiRepeat(mol, mult, atoms) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let unit = atoms.length / mult;\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiRepeat}:${idxHigh + 1},${mult},${unit},`;\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag + (n + 1)));\n    }\n    static hasAnySgroupMultiRepeat(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiRepeat(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 4)\n                        continue;\n                    let idx = parseInt(bits[0]), mult = parseInt(bits[1]), unit = parseInt(bits[2]), pos = parseInt(bits[3]);\n                    if (!(idx > 0) || mult < 2 || unit < 1 || pos < 1 || pos > mult * unit)\n                        continue;\n                    let mr = map[idx];\n                    if (mr == null)\n                        map[idx] = mr = { mult, unit, atoms: Vec.numberArray(0, mult * unit) };\n                    else if (mr.mult != mult || mr.unit != unit)\n                        continue;\n                    mr.atoms[pos - 1] = n;\n                }\n        return Object.values(map);\n    }\n    static markSgroupData(mol, name, value, unit, query, atoms) {\n        var _a;\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let bits = [(idxHigh + 1).toString(), name, value, unit, query];\n        for (let n = 1; n < bits.length; n++)\n            bits[n] = ((_a = bits[n]) !== null && _a !== void 0 ? _a : '').replace(/\\,/g, '@@');\n        let tag = ForeignMoleculeTransient.AtomSgroupData + ':' + bits.join(',');\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag));\n    }\n    static hasAnySgroupData(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupData(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 5)\n                        continue;\n                    let idx = parseInt(bits[0]);\n                    for (let i = 1; i < 5; i++)\n                        bits[i] = bits[i].replace(/\\@\\@/g, ',');\n                    if (!(idx > 0))\n                        continue;\n                    let sd = map[idx];\n                    if (sd)\n                        sd.atoms.push(n);\n                    else\n                        map[idx] = { name: bits[1], value: bits[2], unit: bits[3], query: bits[4], atoms: [n] };\n                }\n        return Object.values(map);\n    }\n}\n//# sourceMappingURL=ForeignMolecule.js.map","import { Vec } from '../util/Vec';\nexport const POLYMERBLOCK_EXTRA_POLYMER = 'xPOLYMER:';\nexport const POLYMERBLOCK_SPECIAL_UNCAPPED = '*';\nexport var PolymerBlockConnectivity;\n(function (PolymerBlockConnectivity) {\n    PolymerBlockConnectivity[\"HeadToTail\"] = \"ht\";\n    PolymerBlockConnectivity[\"HeadToHead\"] = \"hh\";\n    PolymerBlockConnectivity[\"Random\"] = \"rnd\";\n})(PolymerBlockConnectivity || (PolymerBlockConnectivity = {}));\nexport class PolymerBlockUnit {\n    constructor(atoms) {\n        this.atoms = atoms;\n        this.connect = null;\n        this.bondConn = null;\n        this.atomName = new Map();\n        this.bondIncl = new Map();\n        this.bondExcl = new Map();\n    }\n    clone() {\n        let dup = new PolymerBlockUnit(this.atoms.slice(0));\n        dup.connect = this.connect;\n        if (this.bondConn)\n            dup.bondConn = this.bondConn.slice(0);\n        for (let [k, v] of this.atomName.entries())\n            dup.atomName.set(k, v.slice(0));\n        for (let [k, v] of this.bondIncl.entries())\n            dup.bondIncl.set(k, v.slice(0));\n        for (let [k, v] of this.bondExcl.entries())\n            dup.bondExcl.set(k, v.slice(0));\n        return dup;\n    }\n}\nexport class PolymerBlock {\n    constructor(mol) {\n        this.mol = mol;\n        this.units = new Map();\n        let blockAtoms = new Map();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            for (let str of extra)\n                if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = str.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    let id = parseInt(bits[0]);\n                    if (id > 0) {\n                        let atoms = blockAtoms.get(id);\n                        if (atoms)\n                            atoms.push(n);\n                        else\n                            atoms = [n];\n                        blockAtoms.set(id, atoms);\n                    }\n                }\n        }\n        for (let key of Vec.sorted(Array.from(blockAtoms.keys())))\n            this.appendBlock(key, blockAtoms.get(key));\n    }\n    getIDList() { return Vec.sorted(Array.from(this.units.keys())); }\n    getUnit(id) { return this.units.get(id); }\n    getUnits() { return Array.from(this.units.values()); }\n    rewriteMolecule() {\n        this.purgeExtraFields();\n        for (let key of Vec.sorted(Array.from(this.units.keys())))\n            this.writeUnit(key, this.units.get(key));\n    }\n    harmoniseNumbering(other) {\n        let allKeys = other.getIDList();\n        for (let key of this.getIDList())\n            if (allKeys.includes(key)) {\n                let unit = this.units.get(key);\n                this.units.delete(key);\n                key = this.nextIdentifier(allKeys);\n                this.units.set(key, unit);\n                allKeys.push(key);\n            }\n    }\n    removeUnit(id) {\n        let unit = this.units.get(id);\n        if (unit == null)\n            return;\n        this.units.delete(id);\n        let pfx = POLYMERBLOCK_EXTRA_POLYMER + id + ':';\n        for (let a of unit.atoms) {\n            let extra = this.mol.atomExtra(a);\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setAtomExtra(a, extra);\n        }\n        for (let b = 1; b <= this.mol.numBonds; b++) {\n            let extra = this.mol.bondExtra(b);\n            if (Vec.isBlank(extra))\n                continue;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setBondExtra(b, extra);\n        }\n    }\n    removeAll() {\n        this.units.clear();\n        this.purgeExtraFields();\n    }\n    createUnit(unit) {\n        let id = this.nextIdentifier();\n        this.units.set(id, unit.clone());\n        this.writeUnit(id, unit);\n        return id;\n    }\n    static hasPolymerExtensions(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                        return true;\n        }\n        return false;\n    }\n    static getPolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom), polext = null;\n        if (extra == null)\n            return null;\n        for (let str of extra)\n            if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                polext = Vec.append(polext, str);\n        return polext;\n    }\n    static removePolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        if (extra == null)\n            return;\n        let modified = false;\n        for (let i = extra.length - 1; i >= 0; i--)\n            if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    appendBlock(id, atoms) {\n        const { mol } = this;\n        let nattach = 0;\n        let unit = new PolymerBlockUnit(atoms);\n        for (let atom of atoms)\n            for (let extra of mol.atomExtra(atom))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    nattach = parseInt(bits[1]);\n                    for (let n = 2; n < bits.length; n++) {\n                        if (bits[n] == PolymerBlockConnectivity.HeadToTail)\n                            unit.connect = PolymerBlockConnectivity.HeadToTail;\n                        else if (bits[n] == PolymerBlockConnectivity.HeadToHead)\n                            unit.connect = PolymerBlockConnectivity.HeadToHead;\n                        else if (bits[n] == PolymerBlockConnectivity.Random)\n                            unit.connect = PolymerBlockConnectivity.Random;\n                        else if (bits[n].startsWith('n')) {\n                            let hasOuter = false;\n                            for (let adj of mol.atomAdjList(atom))\n                                if (!atoms.includes(adj)) {\n                                    hasOuter = true;\n                                    break;\n                                }\n                            if (hasOuter) {\n                                let subBits = bits[n].substring(1).split(',');\n                                unit.atomName.set(atom, subBits.map((str) => parseInt(str)));\n                            }\n                        }\n                    }\n                }\n        if (nattach < 0)\n            return;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let in1 = atoms.indexOf(mol.bondFrom(n)) >= 0, in2 = atoms.indexOf(mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nattach--;\n        }\n        if (nattach != 0)\n            return;\n        let bonds = null, order = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            for (let extra of mol.bondExtra(n))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    for (let i = 1; i < bits.length; i++) {\n                        if (bits[i].startsWith('i')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondIncl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else if (bits[i].startsWith('e')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondExcl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else {\n                            let o = parseInt(bits[i]);\n                            if (o > 0) {\n                                bonds = Vec.append(bonds, n);\n                                order = Vec.append(order, o);\n                            }\n                        }\n                    }\n                }\n        }\n        if (bonds != null) {\n            if (bonds.length % 2 == 1)\n                return;\n            unit.bondConn = Vec.idxGet(bonds, Vec.idxSort(order));\n        }\n        this.units.set(id, unit);\n    }\n    formatBlockAtom(id, unit, atom) {\n        let nbonds = 0;\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let in1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nbonds++;\n        }\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id + ':' + nbonds;\n        if (unit.connect != null)\n            str += ':' + unit.connect;\n        let names = unit.atomName.get(atom);\n        if (Vec.notBlank(names))\n            str += ':n' + names.join(',');\n        return str;\n    }\n    formatBlockBond(id, unit, bond) {\n        let in1 = unit.atoms.includes(this.mol.bondFrom(bond)), in2 = unit.atoms.includes(this.mol.bondTo(bond));\n        let isBoundary = (in1 && !in2) || (in2 && !in1);\n        if (!isBoundary)\n            return null;\n        let idxConn = unit.bondConn ? unit.bondConn.indexOf(bond) : -1;\n        let incl = unit.bondIncl.get(bond), excl = unit.bondExcl.get(bond);\n        if (idxConn < 0 && Vec.isBlank(incl) && Vec.isBlank(excl))\n            return null;\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id;\n        if (idxConn >= 0)\n            str += ':' + (idxConn + 1);\n        if (Vec.notBlank(incl))\n            str += ':i' + incl.join(',');\n        if (Vec.notBlank(excl))\n            str += ':e' + excl.join(',');\n        return str;\n    }\n    purgeExtraFields() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let extra = this.mol.bondExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setBondExtra(n, extra);\n        }\n    }\n    writeUnit(id, unit) {\n        const { mol } = this;\n        for (let a of unit.atoms) {\n            let codeAtom = this.formatBlockAtom(id, unit, a);\n            mol.setAtomExtra(a, Vec.append(mol.atomExtra(a), codeAtom));\n        }\n        for (let b = 1; b <= mol.numBonds; b++) {\n            let codeBond = this.formatBlockBond(id, unit, b);\n            if (codeBond)\n                mol.setBondExtra(b, Vec.append(mol.bondExtra(b), codeBond));\n        }\n    }\n    nextIdentifier(keys) {\n        if (!keys)\n            keys = this.getIDList();\n        if (keys.length == 0)\n            return 1;\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=PolymerBlock.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, angleNorm, DEGRAD, norm2_xy, norm_xy, sortAngles, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport var Geometry;\n(function (Geometry) {\n    Geometry[Geometry[\"Linear\"] = 0] = \"Linear\";\n    Geometry[Geometry[\"Bent\"] = 1] = \"Bent\";\n    Geometry[Geometry[\"Trigonal\"] = 2] = \"Trigonal\";\n    Geometry[Geometry[\"Tetra1\"] = 3] = \"Tetra1\";\n    Geometry[Geometry[\"Tetra2\"] = 4] = \"Tetra2\";\n    Geometry[Geometry[\"SqPlan\"] = 5] = \"SqPlan\";\n    Geometry[Geometry[\"BasePyram\"] = 6] = \"BasePyram\";\n    Geometry[Geometry[\"TrigBip\"] = 7] = \"TrigBip\";\n    Geometry[Geometry[\"Octa1\"] = 8] = \"Octa1\";\n    Geometry[Geometry[\"Octa2\"] = 9] = \"Octa2\";\n})(Geometry || (Geometry = {}));\nclass SketchUtil {\n    static placeNewAtom(mol, el) {\n        let box = mol.boundary();\n        let x = box.maxX() + Molecule.IDEALBOND, y = box.maxY();\n        return mol.addAtom(el, x, y);\n    }\n    static placeNewFragment(mol, frag) {\n        if (frag.numAtoms == 0)\n            return;\n        let dirX = [1, 0, -1, 1, -1, 1, 0, -1], dirY = [1, 1, 1, 0, 0, -1, -1, -1];\n        let dx = Vec.numberArray(0, 8), dy = Vec.numberArray(0, 8), score = Vec.numberArray(0, 8);\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        for (let n = 0; n < 8; n++) {\n            let vx = dirX[n], vy = dirY[n];\n            if (n == 0 || n == 3 || n == 5)\n                dx[n] = mbox.minX() - fbox.maxX();\n            else if (n == 2 || n == 4 || n == 7)\n                dx[n] = mbox.maxX() - fbox.minX();\n            else\n                dx[n] = 0.5 * (mbox.minX() + mbox.maxX() - fbox.minX() - fbox.maxX());\n            if (n == 5 || n == 6 || n == 7)\n                dy[n] = mbox.minY() - fbox.maxY();\n            else if (n == 0 || n == 1 || n == 2)\n                dy[n] = mbox.maxY() - fbox.minY();\n            else\n                dy[n] = 0.5 * (mbox.minY() + mbox.maxY() - fbox.minY() - fbox.maxY());\n            dx[n] -= vx;\n            dy[n] -= vy;\n            score[n] = SketchUtil.fragPosScore(mol, frag, dx[n], dy[n]);\n            vx *= 0.25;\n            vy *= 0.25;\n            for (let iter = 100; iter > 0; iter--) {\n                let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                if (iscore <= score[n])\n                    break;\n                score[n] = iscore;\n                dx[n] += vx;\n                dy[n] += vy;\n            }\n            for (let iter = 100; iter > 0; iter--)\n                for (let d = 0; d < 8; d++) {\n                    vx = dirX[d] * 0.1;\n                    vy = dirY[d] * 0.1;\n                    let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                    if (iscore <= score[n])\n                        break;\n                    score[n] = iscore;\n                    dx[n] += vx;\n                    dy[n] += vy;\n                }\n        }\n        let best = 0;\n        for (let n = 1; n < 8; n++)\n            if (score[n] > score[best])\n                best = n;\n        frag = frag.clone();\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomPos(n, frag.atomX(n) + dx[best], frag.atomY(n) + dy[best]);\n        mol.append(frag);\n    }\n    static fragPosScore(mol, frag, dx, dy) {\n        let score = 0;\n        for (let i = 1; i <= mol.numAtoms; i++)\n            for (let j = 1; j <= frag.numAtoms; j++) {\n                let ox = frag.atomX(j) + dx - mol.atomX(i), oy = frag.atomY(j) + dy - mol.atomY(i);\n                let dist2 = ox * ox + oy * oy;\n                if (dist2 < 1)\n                    return 0;\n                score += 1 / dist2;\n            }\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        let minX = Math.min(fbox.minX() + dx, mbox.minX()), maxX = Math.max(fbox.maxX() + dx, mbox.maxX());\n        let minY = Math.min(fbox.minY() + dy, mbox.minY()), maxY = Math.max(fbox.maxY() + dy, mbox.maxY());\n        let rangeX = Math.max(1, maxX - minX), rangeY = Math.max(1, maxY - minY);\n        let ratio = Math.max(rangeX / rangeY, rangeY / rangeX);\n        return score / ratio;\n    }\n    static mergeOverlappingAtoms(mol) {\n        return SketchUtil.mergeFragmentsDiv(mol, 0);\n    }\n    static mergeFragmentsDiv(mol, div) {\n        const na = mol.numAtoms;\n        let omask = CoordUtil.overlappingAtomMask(mol);\n        let chopmask = Vec.booleanArray(false, na);\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let remap = [];\n        for (let n = 0; n < na; n++)\n            remap.push(n + 1);\n        let div1 = div, div2 = div + 1;\n        if (div == 0)\n            div1 = na;\n        for (let i = 1; i <= div1; i++)\n            if (omask[i - 1] && !chopmask[i - 1]) {\n                if (div == 0)\n                    div2 = i + 1;\n                for (let j = div2; j <= na; j++)\n                    if (omask[j - 1] && !chopmask[j - 1]) {\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        let oldN = j, newN = i;\n                        let exotic = [0, 0];\n                        for (let k = 0; k < 2; k++) {\n                            let a = k == 0 ? i : j;\n                            exotic[k] = (mol.atomElement(a) == 'C' ? 0 : 1)\n                                + (mol.atomElement(a) == 'X' ? -100 : 0)\n                                + (mol.atomCharge(a) != 0 ? 1 : 0)\n                                + (mol.atomUnpaired(a) != 0 ? 1 : 0)\n                                + (mol.atomIsotope(a) != Molecule.ISOTOPE_NATURAL ? 1 : 0)\n                                + (mol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN ? 1 : 0)\n                                + (MolUtil.hasAbbrev(mol, a) ? 1000 : 0);\n                        }\n                        if (exotic[1] > exotic[0]) {\n                            oldN = i;\n                            newN = j;\n                        }\n                        for (let n = 1; n <= mol.numBonds; n++) {\n                            if (mol.bondFrom(n) == oldN)\n                                mol.setBondFrom(n, newN);\n                            if (mol.bondTo(n) == oldN)\n                                mol.setBondTo(n, newN);\n                        }\n                        chopmask[oldN - 1] = true;\n                        remap[oldN - 1] = newN;\n                    }\n            }\n        for (let n = na; n >= 1; n--)\n            if (chopmask[n - 1]) {\n                if (n <= div)\n                    div--;\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        for (let n = mol.numAtoms; n > div; n--)\n            if (mol.atomElement(n) == 'X') {\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        MolUtil.removeDuplicateBonds(mol);\n        return remap;\n    }\n    static mergeFragmentsMask(mol, mask) {\n        let chopmask = Vec.booleanArray(false, mol.numAtoms);\n        let na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 1; i <= na; i++)\n            if (mask[i - 1])\n                for (let j = 1; j <= na; j++)\n                    if (!mask[j - 1] && !chopmask[j - 1])\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                            let oldN = j, newN = i;\n                            if (mol.atomElement(i) == 'C' && mol.atomElement(j) != 'C' && mol.atomElement(j) != 'X')\n                                [oldN, newN] = [i, j];\n                            if (mol.atomHExplicit(newN) == Molecule.HEXPLICIT_UNKNOWN)\n                                mol.setAtomHExplicit(newN, mol.atomHExplicit(oldN));\n                            mol.setAtomUnpaired(newN, mol.atomUnpaired(newN) + mol.atomUnpaired(oldN));\n                            mol.setAtomCharge(newN, mol.atomCharge(newN) + mol.atomCharge(oldN));\n                            mol.setAtomExtra(newN, Vec.concat(mol.atomExtra(oldN), mol.atomExtra(newN)));\n                            for (let n = 1; n <= mol.numBonds; n++) {\n                                if (mol.bondFrom(n) == oldN)\n                                    mol.setBondFrom(n, newN);\n                                if (mol.bondTo(n) == oldN)\n                                    mol.setBondTo(n, newN);\n                            }\n                            chopmask[oldN - 1] = true;\n                        }\n        for (let n = chopmask.length; n >= 1; n--)\n            if (chopmask[n - 1])\n                mol.deleteAtomAndBonds(n);\n        MolUtil.removeDuplicateBonds(mol);\n    }\n    static matchAngleGeometry(geom, theta) {\n        if (theta.length <= 1)\n            return true;\n        let match = SketchUtil.GEOM_ANGLES[geom], mtheta = Vec.numberArray(0, theta.length);\n        let hit = Vec.booleanArray(false, match.length);\n        for (let n = 0; n < theta.length; n++)\n            for (let s = 1; s >= -1; s -= 2) {\n                for (let i = 0; i < theta.length; i++)\n                    mtheta[i] = (theta[i] - theta[0]) * s;\n                Vec.setTo(hit, false);\n                let gotall = true;\n                for (let i = 0; i < mtheta.length; i++) {\n                    let got = false;\n                    for (let j = 0; j < match.length; j++)\n                        if (!hit[j] && Math.abs(angleDiff(mtheta[i], match[j])) < 3 * DEGRAD) {\n                            hit[j] = true;\n                            got = true;\n                            break;\n                        }\n                    if (!got) {\n                        gotall = false;\n                        break;\n                    }\n                }\n                if (gotall)\n                    return true;\n            }\n        return false;\n    }\n    static primeDirections(mol, atom) {\n        let angles = SketchUtil.calculateNewBondAngles(mol, atom, 1);\n        let exits = SketchUtil.exitVectors(mol, atom);\n        return GeomUtil.uniqueAngles(angles.concat(exits), 2 * DEGRAD);\n    }\n    static exitVectors(mol, atom) {\n        let adj = mol.atomAdjList(atom), sz = adj.length;\n        if (sz == 0)\n            return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n        if (sz == 1)\n            return [];\n        let ret = [];\n        let ang = GeomUtil.sortAngles(CoordUtil.atomBondAngles(mol, atom, adj));\n        for (let n = 0; n < sz; n++) {\n            let nn = n < sz - 1 ? n + 1 : 0;\n            ret.push(angleNorm(ang[n] + 0.5 * angleDiffPos(ang[nn], ang[n])));\n        }\n        return ret;\n    }\n    static calculateNewBondAngles(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        const sz = adj.length;\n        if (sz == 0) {\n            let atno = mol.atomicNumber(atom), atblk = Chemistry.ELEMENT_BLOCKS[atno];\n            if (atblk <= 2)\n                return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n            else\n                return [90 * DEGRAD, -90 * DEGRAD, 30 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, -30 * DEGRAD, 180 * DEGRAD, 0 * DEGRAD];\n        }\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let n = 0; n < geom.length; n++) {\n            let ret = SketchUtil.mapAngleSubstituent(geom[n], ang);\n            if (ret != null)\n                return ret;\n        }\n        return [];\n    }\n    static guessAtomGeometry(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        let sz = adj.length, atno = mol.atomicNumber(atom);\n        let atblk = Chemistry.ELEMENT_BLOCKS[atno], elrow = Chemistry.ELEMENT_ROWS[atno];\n        let el = mol.atomElement(atom);\n        let adjBO = [], adjAN = [], pri = [];\n        let allSingle = true;\n        for (let n = 0; n < sz; n++) {\n            adjBO.push(mol.bondOrder(mol.findBond(atom, adj[n])));\n            adjAN.push(mol.atomicNumber(adj[n]));\n            pri.push(adjBO[n] * 200 + adjAN[n]);\n            if (adjBO[n] != 1)\n                allSingle = true;\n        }\n        for (let p = 0; p < sz - 1;) {\n            if (pri[p] > pri[p + 1]) {\n                Vec.swap(adj, p, p + 1);\n                Vec.swap(adjBO, p, p + 1);\n                Vec.swap(adjAN, p, p + 1);\n                Vec.swap(pri, p, p + 1);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        if (sz == 1) {\n            if (el == 'C' || el == 'N') {\n                if (adjBO[0] == 2 && order == 2)\n                    return [Geometry.Linear];\n                if ((adjBO[0] == 3 && order == 1) || (adjBO[0] == 1 && order == 3))\n                    return [Geometry.Linear];\n            }\n            if (atblk > 2)\n                return [Geometry.Octa1, Geometry.Octa2];\n            if (order != 0 && (el == 'C' || el == 'N' || el == 'O'))\n                return [Geometry.Trigonal];\n            return [Geometry.Trigonal, Geometry.Linear];\n        }\n        if (sz == 2 && Math.abs(angleDiff(ang[0], ang[1])) >= 175 * DEGRAD) {\n            if (atblk <= 2)\n                return [Geometry.SqPlan];\n            else\n                return [Geometry.Octa1, Geometry.Octa2];\n        }\n        let geom = [];\n        if (atblk == 0)\n            geom = [Geometry.Trigonal, Geometry.SqPlan];\n        else if (atblk == 1)\n            geom = [Geometry.Trigonal, Geometry.SqPlan, Geometry.Octa1, Geometry.Octa2];\n        else if (atblk == 2) {\n            geom.push(Geometry.Trigonal);\n            if (el == 'C' && allSingle) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else if (el == 'C' && !allSingle) {\n            }\n            else if (elrow <= 3) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n                geom.push(Geometry.Octa1);\n                geom.push(Geometry.Octa2);\n            }\n        }\n        else {\n            geom.push(Geometry.Octa1);\n            geom.push(Geometry.Octa2);\n        }\n        for (let n = geom.length - 1; n >= 0; n--) {\n            if (!SketchUtil.matchAngleGeometry(geom[n], ang))\n                geom.splice(n, 1);\n        }\n        return geom;\n    }\n    static mapAngleSubstituent(geom, ang) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        const asz = ang.length, gsz = gtheta.length;\n        if (asz >= gsz)\n            return null;\n        if (asz == 0)\n            return gtheta.slice(0);\n        let vac = [];\n        for (let n = 0; n < asz; n++)\n            for (let k = 0; k < gsz; k++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let gang = [];\n                    for (let i = 0; i < gsz; i++)\n                        gang.push(angleNorm(ang[n] + s * (gtheta[i] - gtheta[k])));\n                    let mask = Vec.booleanArray(false, gsz);\n                    let mcount = 0;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            for (let j = 0; j < asz; j++)\n                                if (Math.abs(angleDiff(gang[i], ang[j])) < 3 * DEGRAD) {\n                                    mask[i] = true;\n                                    mcount++;\n                                    break;\n                                }\n                    if (mcount != asz)\n                        continue;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            vac.push(gang[i]);\n                }\n        if (vac.length == 0)\n            return null;\n        vac = GeomUtil.sortAngles(vac);\n        for (let n = 0; n < vac.length - 1; n++) {\n            let th1 = vac[n], th2 = vac[n + 1], dth = angleDiff(th2, th1);\n            if (Math.abs(dth) < 5 * DEGRAD) {\n                vac[n] = th1 + 0.5 * dth;\n                vac.splice(n + 1, 1);\n                n--;\n            }\n        }\n        return vac;\n    }\n    static refitAtomGeometry(mol, atom, geom) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        let gsz = gtheta.length;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length;\n        if (asz <= 1 || asz > gsz)\n            return null;\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        let inRing = Vec.booleanArray(false, asz);\n        let allInRing = true;\n        for (let n = 0; n < asz; n++) {\n            inRing[n] = mol.bondInRing(mol.findBond(atom, adj[n]));\n            if (!inRing[n])\n                allInRing = false;\n        }\n        if (allInRing)\n            return null;\n        let bestAng = null;\n        let bestScore = 0;\n        let ww = MolUtil.calculateWalkWeight(mol, atom);\n        for (let i = 0; i < gsz; i++)\n            for (let j = 0; j < asz; j++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let newAng = Vec.numberArray(0, asz);\n                    let mask = Vec.booleanArray(false, gsz);\n                    for (let n1 = 0; n1 < asz; n1++) {\n                        let best = -1;\n                        let bdiff = 0;\n                        for (let n2 = 0; n2 < gsz; n2++)\n                            if (!mask[n2]) {\n                                let th = angleNorm(gtheta[n2] * s - gtheta[i] + ang[j]);\n                                let diff = Math.abs(angleDiff(th, ang[n1]));\n                                if (best < 0 || diff < bdiff) {\n                                    best = n2;\n                                    bdiff = diff;\n                                    newAng[n1] = th;\n                                }\n                            }\n                        mask[best] = true;\n                    }\n                    let ringClash = false;\n                    for (let n = 0; n < asz; n++)\n                        if (inRing[n] && Math.abs(angleDiff(newAng[n], ang[n])) > 2 * DEGRAD) {\n                            ringClash = true;\n                            break;\n                        }\n                    if (ringClash)\n                        continue;\n                    let score = 0;\n                    for (let n = 0; n < asz; n++)\n                        score += ww[adj[n] - 1] * Math.abs(angleDiff(newAng[n], ang[n]));\n                    if (bestAng == null || score < bestScore) {\n                        bestAng = newAng;\n                        bestScore = score;\n                    }\n                }\n        if (bestAng == null)\n            return null;\n        let same = true;\n        for (let n = 0; n < asz; n++)\n            if (Math.abs(angleDiff(bestAng[n], ang[n])) > 2 * DEGRAD) {\n                same = false;\n                break;\n            }\n        if (same)\n            return null;\n        mol = mol.clone();\n        for (let n = 0; n < asz; n++)\n            if (!inRing[n])\n                CoordUtil.rotateBond(mol, atom, adj[n], bestAng[n] - ang[n]);\n        return mol;\n    }\n    static switchAtomGeometry(mol, src, dst, geoms) {\n        let bestAtom = 0;\n        let bestAng = 0, bestX = 0, bestY = 0;\n        let adj = mol.atomAdjList(src);\n        let ang = CoordUtil.atomBondAngles(mol, src, adj), theta = Vec.numberArray(0, ang.length - 1);\n        let cx = mol.atomX(src), cy = mol.atomY(src);\n        for (let i = 0; i < dst.length; i++) {\n            let a = adj.indexOf(dst[i]);\n            let curth = ang[a];\n            for (let n = 0, p = 0; n < adj.length; n++)\n                if (n != a)\n                    theta[p++] = ang[n];\n            let r = norm_xy(mol.atomX(dst[i]) - cx, mol.atomY(dst[i]) - cy);\n            for (let j = 0; j < geoms.length; j++) {\n                if (adj.length >= SketchUtil.GEOM_ANGLES[geoms[j]].length)\n                    continue;\n                let newAng = SketchUtil.mapAngleSubstituent(geoms[j], theta);\n                if (newAng != null)\n                    for (let n = 0; n < newAng.length; n++) {\n                        let dth = angleDiff(newAng[n], curth);\n                        if (Math.abs(dth) < 3 * DEGRAD)\n                            continue;\n                        if (dth < 0)\n                            dth += TWOPI;\n                        if (bestAtom == 0 || dth < bestAng - 2 * DEGRAD || (dth < bestAng + 2 * DEGRAD && dst[i] < bestAtom)) {\n                            let x = cx + r * Math.cos(newAng[n]);\n                            let y = cy + r * Math.sin(newAng[n]);\n                            if (CoordUtil.atomAtPoint(mol, x, y) != 0)\n                                continue;\n                            bestAtom = dst[i];\n                            bestAng = dth;\n                            bestX = x;\n                            bestY = y;\n                        }\n                    }\n                break;\n            }\n        }\n        if (bestAtom == 0)\n            return null;\n        mol = mol.clone();\n        mol.setAtomPos(bestAtom, bestX, bestY);\n        return mol;\n    }\n    static pickAtomsToConnect(mol, aidx) {\n        if (aidx.length < 2)\n            return null;\n        if (aidx.length == 2) {\n            if (mol.findBond(aidx[0], aidx[1]) > 0)\n                return null;\n            return aidx;\n        }\n        const AUTO_DSQ = sqr(Molecule.IDEALBOND + 0.1);\n        let bestDSQ = Number.MAX_VALUE;\n        let bestA1 = 0, bestA2 = 0;\n        let conn = [];\n        for (let i = 0; i < aidx.length - 1; i++)\n            for (let j = i + 1; j < aidx.length; j++) {\n                if (mol.findBond(aidx[i], aidx[j]) > 0)\n                    continue;\n                let dsq = norm2_xy(mol.atomX(aidx[i]) - mol.atomX(aidx[j]), mol.atomY(aidx[i]) - mol.atomY(aidx[j]));\n                if (dsq < AUTO_DSQ) {\n                    conn.push(aidx[i]);\n                    conn.push(aidx[j]);\n                }\n                else if (dsq < bestDSQ) {\n                    bestDSQ = dsq;\n                    bestA1 = aidx[i];\n                    bestA2 = aidx[j];\n                }\n            }\n        if (conn.length == 0 && bestA1 != 0) {\n            conn.push(bestA1);\n            conn.push(bestA2);\n        }\n        return conn.length == 0 ? null : conn;\n    }\n    static pickNewAtomDirection(mol, atom, theta) {\n        if (theta.length == 1)\n            return theta[0];\n        let bestTheta = theta[0], bestScore = Number.MAX_VALUE;\n        for (let n = 0; n < theta.length; n++) {\n            let px = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta[n]);\n            let py = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta[n]);\n            let score = CoordUtil.congestionPoint(mol, px, py);\n            if (score > bestScore)\n                continue;\n            if (CoordUtil.overlapsAtom(mol, px, py, 0.2))\n                score += 1E5;\n            if (score < bestScore) {\n                bestTheta = theta[n];\n                bestScore = score;\n            }\n        }\n        return bestTheta;\n    }\n    static joinOverlappingAtoms(mol, mask) {\n        mol = mol.clone();\n        mask = mask.slice(0);\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let groups = [];\n        let groupX = [], groupY = [];\n        for (let i = 0; i < na - 1; i++)\n            if (mask[i]) {\n                let g = [i + 1];\n                let x = mx[i], y = my[i];\n                for (let j = i + 1; j < na; j++)\n                    if (mask[j]) {\n                        if (norm2_xy(mx[j] - mx[i], my[j] - my[i]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        g.push(j + 1);\n                        x += mx[j];\n                        y += my[j];\n                        let adjb = mol.atomAdjBonds(j + 1);\n                        for (let n = 0; n < adjb.length; n++) {\n                            if (mol.bondFrom(adjb[n]) == j + 1)\n                                mol.setBondFrom(adjb[n], i + 1);\n                            else if (mol.bondTo(adjb[n]) == j + 1)\n                                mol.setBondTo(adjb[n], i + 1);\n                        }\n                    }\n                if (g.length == 1)\n                    continue;\n                groups.push(g);\n                groupX.push(x / g.length);\n                groupY.push(y / g.length);\n            }\n        if (groups.length == 0)\n            return null;\n        let keepmask = Vec.booleanArray(true, na);\n        for (let n = 0; n < groups.length; n++) {\n            let g = groups[n];\n            mol.setAtomPos(g[0], groupX[n], groupY[n]);\n            for (let i = 1; i < g.length; i++)\n                keepmask[g[i] - 1] = false;\n        }\n        mol = MolUtil.subgraphMask(mol, keepmask);\n        MolUtil.removeDuplicateBonds(mol);\n        return mol;\n    }\n    static moveToEdge(mol, mask, dx, dy) {\n        let gotS = false, gotN = false;\n        let sx1 = 0, sy1 = 0, sx2 = 0, sy2 = 0;\n        let nx1 = 0, ny1 = 0, nx2 = 0, ny2 = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            if (mask[n - 1]) {\n                if (!gotS || x < sx1)\n                    sx1 = x;\n                if (!gotS || y < sy1)\n                    sy1 = y;\n                if (!gotS || x > sx2)\n                    sx2 = x;\n                if (!gotS || y > sy2)\n                    sy2 = y;\n                gotS = true;\n            }\n            else {\n                if (!gotN || x < nx1)\n                    nx1 = x;\n                if (!gotN || y < ny1)\n                    ny1 = y;\n                if (!gotN || x > nx2)\n                    nx2 = x;\n                if (!gotN || y > ny2)\n                    ny2 = y;\n                gotN = true;\n            }\n        }\n        const SEPARATE = 1.0, SEPTEST = 0.9;\n        if ((dx < 0 && dy == 0 && sx2 <= nx1 - SEPTEST) ||\n            (dx > 0 && dy == 0 && sx1 >= nx2 + SEPTEST) ||\n            (dx == 0 && dy < 0 && sy2 <= ny1 - SEPTEST) ||\n            (dx == 0 && dy > 0 && sy1 >= ny2 + SEPTEST)) {\n            return null;\n        }\n        mol = mol.clone();\n        let ox = 0, oy = 0;\n        if (dx < 0)\n            ox = nx1 - sx2 - SEPARATE;\n        if (dx > 0)\n            ox = nx2 - sx1 + SEPARATE;\n        if (dy < 0)\n            oy = ny1 - sy2 - SEPARATE;\n        if (dy > 0)\n            oy = ny2 - sy1 + SEPARATE;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1])\n                mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n        return mol;\n    }\n    static placeAdditionalHydrogens(mol, atom, numH) {\n        let base = mol.numAtoms;\n        const x0 = mol.atomX(atom), y0 = mol.atomY(atom);\n        let adj = mol.atomAdjList(atom);\n        if (adj.length == 2 && numH == 2) {\n            const th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            const th2 = Math.atan2(mol.atomY(adj[1]) - y0, mol.atomX(adj[1]) - x0);\n            if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                let theta = 0.5 * (th1 + th2) + Math.PI;\n                let th3 = theta - 30 * DEGRAD, th4 = theta + 30 * DEGRAD;\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n                mol.addBond(atom, base + 1, 1);\n                mol.addBond(atom, base + 2, 1);\n                return;\n            }\n        }\n        if (adj.length == 1 && numH == 3) {\n            let th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            let th2 = th1 + 90 * DEGRAD, th3 = th1 + 180 * DEGRAD, th4 = th1 + 270 * DEGRAD;\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th2), y0 + Molecule.IDEALBOND * Math.sin(th2));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n            mol.addBond(atom, base + 1, 1);\n            mol.addBond(atom, base + 2, 1);\n            mol.addBond(atom, base + 3, 1);\n            return;\n        }\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, SketchUtil.primeDirections(mol, atom));\n        mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(theta), y0 + Molecule.IDEALBOND * Math.sin(theta));\n        mol.addBond(atom, base + 1, 1);\n        if (numH > 1)\n            SketchUtil.placeAdditionalHydrogens(mol, atom, numH - 1);\n    }\n    static allViableDirections(mol, atom, order) {\n        if (mol.atomAdjCount(atom) == 0) {\n            let angles = [];\n            for (let n = 0; n < 12; n++)\n                angles.push(30 * DEGRAD);\n            return angles;\n        }\n        let adj = mol.atomAdjList(atom);\n        let angles = SketchUtil.exitVectors(mol, atom);\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        if (adj.length == 1 && geom.indexOf(Geometry.Linear) < 0)\n            geom.push(Geometry.Linear);\n        let bndang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let g of geom) {\n            let map = SketchUtil.mapAngleSubstituent(g, bndang);\n            if (map != null)\n                for (let th of map)\n                    angles.push(th);\n        }\n        return GeomUtil.uniqueAngles(angles, 2 * DEGRAD);\n    }\n    static proposeNewRing(mol, rsz, x, y, dx, dy, snap) {\n        let theta = dy == 0 && dx == 0 ? 0.5 * Math.PI : Math.atan2(dy, dx);\n        if (snap) {\n            const chunk = 30 * DEGRAD;\n            theta = Math.round(theta / chunk) * chunk;\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, x, y, theta);\n    }\n    static proposeAtomRing(mol, rsz, atom, dx, dy) {\n        let thsnap = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        if (mol.atomAdjCount(atom) == 0) {\n            for (let n = 0; n < 12; n++)\n                thsnap.push(TWOPI * n / 12);\n        }\n        else if (mol.atomAdjCount(atom) == 1) {\n            let nbr = mol.atomAdjList(atom)[0];\n            thsnap.push(angleNorm(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx) + Math.PI));\n        }\n        else {\n            let angs = [];\n            for (let nbr of mol.atomAdjList(atom))\n                angs.push(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx));\n            angs = sortAngles(angs);\n            for (let n = 0; n < angs.length; n++) {\n                let th1 = angs[n], th2 = angs[n < angs.length - 1 ? n + 1 : 0];\n                thsnap.push(th1 + 0.5 * angleDiffPos(th2, th1));\n            }\n        }\n        let theta = Math.atan2(dy, dx);\n        let bestTheta = 0, bestDelta = Number.MAX_VALUE;\n        for (let th of thsnap) {\n            let delta = Math.abs(angleDiff(th, theta));\n            if (delta < bestDelta) {\n                bestTheta = th;\n                bestDelta = delta;\n            }\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, mol.atomX(atom), mol.atomY(atom), bestTheta);\n    }\n    static proposeBondRing(mol, rsz, bond, dx, dy) {\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let bx = mol.atomX(bto) - mol.atomX(bfr), by = mol.atomY(bto) - mol.atomY(bfr);\n        let sign = dx * by - dy * bx;\n        let delta = sign > 0 ? -90 * DEGRAD : 90 * DEGRAD;\n        let theta = Math.atan2(by, bx) + delta;\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2.0 * Math.sin(0.5 * dth)), brad = rad * Math.cos(0.5 * dth);\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)) + brad * Math.cos(theta);\n        let cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto)) + brad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + (n - 0.5) * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        let [i1, i2] = sign < 0 ? [bfr, bto] : [bto, bfr];\n        rx[0] = mol.atomX(i1);\n        ry[0] = mol.atomY(i1);\n        rx[1] = mol.atomX(i2);\n        ry[1] = mol.atomY(i2);\n        return [rx, ry];\n    }\n    static positionSimpleRing(mol, rsz, x, y, theta) {\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2 * Math.sin(0.5 * dth));\n        let cx = x + rad * Math.cos(theta), cy = y + rad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + n * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        return [rx, ry];\n    }\n    static guidelineSprouts(mol, atom) {\n        let sprouts = [];\n        let angs = [], ords = [];\n        for (let n = 0; n < 3; n++) {\n            angs.push(SketchUtil.allViableDirections(mol, atom, n + 1));\n            ords.push([n + 1]);\n            for (let i = 0; i < n; i++)\n                if (angs[i] != null && Vec.equals(angs[n], angs[i])) {\n                    angs[n] = null;\n                    ords[i].push(n + 1);\n                }\n        }\n        const cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let n = 0; n < 3; n++)\n            if (angs[n] != null) {\n                let sprout = {\n                    atom: atom,\n                    orders: ords[n],\n                    x: [],\n                    y: [],\n                };\n                for (let i = 0; i < angs[n].length; i++) {\n                    sprout.x[i] = cx + Math.cos(angs[n][i]) * Molecule.IDEALBOND;\n                    sprout.y[i] = cy + Math.sin(angs[n][i]) * Molecule.IDEALBOND;\n                }\n                sprouts.push(sprout);\n            }\n        return sprouts;\n    }\n}\nSketchUtil.GEOM_ANGLES = [\n    [0, 180 * DEGRAD],\n    [0, 120 * DEGRAD],\n    [0, 120 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 240 * DEGRAD],\n    [0, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 180 * DEGRAD, 270 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, 270 * DEGRAD],\n    [0, 60 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 210 * DEGRAD],\n    [0, 60 * DEGRAD, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD, 300 * DEGRAD],\n    [0, 45 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 225 * DEGRAD, 270 * DEGRAD]\n];\nexport { SketchUtil };\n//# sourceMappingURL=SketchUtil.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nexport var QueryTypeAtom;\n(function (QueryTypeAtom) {\n    QueryTypeAtom[\"Charges\"] = \"qC:\";\n    QueryTypeAtom[\"Aromatic\"] = \"qA:\";\n    QueryTypeAtom[\"Unsaturated\"] = \"qU:\";\n    QueryTypeAtom[\"Elements\"] = \"qE:\";\n    QueryTypeAtom[\"ElementsNot\"] = \"qE!\";\n    QueryTypeAtom[\"RingSizes\"] = \"qR:\";\n    QueryTypeAtom[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeAtom[\"RingBlock\"] = \"qB:\";\n    QueryTypeAtom[\"NumRings\"] = \"qN:\";\n    QueryTypeAtom[\"RingBonds\"] = \"qG:\";\n    QueryTypeAtom[\"Adjacency\"] = \"qJ:\";\n    QueryTypeAtom[\"BondSums\"] = \"qO:\";\n    QueryTypeAtom[\"Valences\"] = \"qV:\";\n    QueryTypeAtom[\"Hydrogens\"] = \"qH:\";\n    QueryTypeAtom[\"Isotopes\"] = \"qI:\";\n    QueryTypeAtom[\"SubFrags\"] = \"qX:\";\n    QueryTypeAtom[\"SubFragsNot\"] = \"qX!\";\n})(QueryTypeAtom || (QueryTypeAtom = {}));\nexport var QueryTypeBond;\n(function (QueryTypeBond) {\n    QueryTypeBond[\"RingSizes\"] = \"qR:\";\n    QueryTypeBond[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeBond[\"RingBlock\"] = \"qB:\";\n    QueryTypeBond[\"NumRings\"] = \"qN:\";\n    QueryTypeBond[\"Orders\"] = \"qO:\";\n})(QueryTypeBond || (QueryTypeBond = {}));\nexport class QueryUtil {\n    static hasAnyQueryAtom(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasAnyQueryBond(mol, bond) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static hasQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static deleteQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    static deleteQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setBondExtra(bond, extra);\n    }\n    static deleteQueryAtomAll(mol, atom) {\n        mol.setAtomExtra(atom, mol.atomExtra(atom).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static deleteQueryBondAll(mol, bond) {\n        mol.setBondExtra(bond, mol.bondExtra(bond).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static queryAtomString(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static queryAtomStringList(mol, atom, type) {\n        let extra = mol.atomExtra(atom), list = null;\n        if (extra != null)\n            for (let str of extra)\n                if (str.startsWith(type))\n                    list = Vec.append(list, str.substring(type.length));\n        return list;\n    }\n    static queryBondString(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static setQueryAtom(mol, atom, type, str) {\n        if (!str) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryAtomList(mol, atom, type, list) {\n        if (Vec.isBlank(list)) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                extra.splice(n, 1);\n        for (let str of list)\n            extra.push(type + str);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryBond(mol, bond, type, str) {\n        if (!str) {\n            this.deleteQueryBond(mol, bond, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setBondExtra(bond, extra);\n    }\n    static queryAtomCharges(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Charges)); }\n    static queryAtomAromatic(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Aromatic)); }\n    static queryAtomUnsaturated(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Unsaturated)); }\n    static queryAtomElements(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.Elements)); }\n    static queryAtomElementsNot(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.ElementsNot)); }\n    static queryAtomRingSizes(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizes)); }\n    static queryAtomRingSizesNot(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizesNot)); }\n    static queryAtomRingBlock(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.RingBlock)); }\n    static queryAtomNumRings(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.NumRings)); }\n    static queryAtomRingBonds(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingBonds)); }\n    static queryAtomAdjacency(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Adjacency)); }\n    static queryAtomBondSums(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.BondSums)); }\n    static queryAtomValences(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Valences)); }\n    static queryAtomHydrogens(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Hydrogens)); }\n    static queryAtomIsotope(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Isotopes)); }\n    static queryAtomSubFrags(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFrags)); }\n    static queryAtomSubFragsNot(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFragsNot)); }\n    static queryBondRingSizes(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizes)); }\n    static queryBondRingSizesNot(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizesNot)); }\n    static queryBondRingBlock(mol, bond) { return this.parseBoolean(this.queryBondString(mol, bond, QueryTypeBond.RingBlock)); }\n    static queryBondNumRings(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.NumRings)); }\n    static queryBondOrders(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.Orders)); }\n    static setQueryAtomCharges(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Charges, this.formatIntegers(value)); }\n    static setQueryAtomAromatic(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Aromatic, this.formatBoolean(value)); }\n    static setQueryAtomUnsaturated(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Unsaturated, this.formatBoolean(value)); }\n    static setQueryAtomElements(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Elements, this.formatStrings(value)); }\n    static setQueryAtomElementsNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.ElementsNot, this.formatStrings(value)); }\n    static setQueryAtomRingSizes(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizes, this.formatIntegers(value)); }\n    static setQueryAtomRingSizesNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryAtomRingBlock(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBlock, this.formatBoolean(value)); }\n    static setQueryAtomNumRings(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.NumRings, this.formatIntegers(value)); }\n    static setQueryAtomRingBonds(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBonds, this.formatIntegers(value)); }\n    static setQueryAtomAdjacency(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Adjacency, this.formatIntegers(value)); }\n    static setQueryAtomBondSums(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.BondSums, this.formatIntegers(value)); }\n    static setQueryAtomValences(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Valences, this.formatIntegers(value)); }\n    static setQueryAtomHydrogens(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Hydrogens, this.formatIntegers(value)); }\n    static setQueryAtomIsotope(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Isotopes, this.formatIntegers(value)); }\n    static setQueryAtomSubFrags(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFrags, this.formatMolecules(value)); }\n    static setQueryAtomSubFragsNot(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFragsNot, this.formatMolecules(value)); }\n    static setQueryBondRingSizes(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizes, this.formatIntegers(value)); }\n    static setQueryBondRingSizesNot(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryBondRingBlock(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingBlock, this.formatBoolean(value)); }\n    static setQueryBondNumRings(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.NumRings, this.formatIntegers(value)); }\n    static setQueryBondOrders(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.Orders, this.formatIntegers(value)); }\n    static parseIntegers(str) {\n        if (!str)\n            return null;\n        let strlist = str.split(',');\n        let intlist = new Array(strlist.length);\n        for (let n = 0; n < strlist.length; n++)\n            intlist[n] = parseInt(strlist[n]);\n        return intlist;\n    }\n    static parseStrings(str) {\n        if (!str)\n            return null;\n        return str.split(',');\n    }\n    static parseBoolean(str) {\n        return !str ? null : str == 'yes';\n    }\n    static parseMolecules(list) {\n        if (!list)\n            return null;\n        let mols = [];\n        for (let molstr of list) {\n            let mol = Molecule.fromString(molstr);\n            if (MolUtil.notBlank(mol))\n                mols.push(mol);\n        }\n        return mols;\n    }\n    static formatIntegers(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatStrings(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatBoolean(value) {\n        return value ? 'yes' : 'no';\n    }\n    static formatMolecules(mols) {\n        if (Vec.isBlank(mols))\n            return null;\n        let list = [];\n        for (let mol of mols)\n            if (MolUtil.notBlank(mol))\n                list.push(mol.toString());\n        return list;\n    }\n}\n//# sourceMappingURL=QueryUtil.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { PolymerBlock } from './PolymerBlock';\nimport { SketchUtil } from './SketchUtil';\nclass MolUtil {\n    static isBlank(mol) {\n        if (mol == null)\n            return true;\n        return mol.numAtoms == 0;\n    }\n    static notBlank(mol) {\n        if (mol == null)\n            return false;\n        return mol.numAtoms > 0;\n    }\n    static orBlank(mol) { return mol == null ? new Molecule() : mol; }\n    static hasAnyAbbrev(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n))\n                return true;\n        return false;\n    }\n    static hasAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra == null ? 0 : extra.length); n++)\n            if (extra[n].startsWith('a'))\n                return true;\n        return false;\n    }\n    static getAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                return Molecule.fromString(extra[n].substring(1));\n            }\n        return null;\n    }\n    static setAbbrev(mol, atom, frag) {\n        let attidx = 0;\n        for (let n = 1; n <= frag.numAtoms; n++)\n            if (frag.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                attidx = n;\n                break;\n            }\n        if (attidx == 0)\n            throw 'No attachment points indicated.';\n        if (attidx >= 2) {\n            frag = frag.clone();\n            frag.swapAtoms(attidx, 1);\n        }\n        let adj = mol.atomAdjList(atom);\n        if (adj.length > 1)\n            throw 'Setting abbreviation for non-terminal atom.';\n        if (frag.atomAdjCount(1) == 1 && mol.atomAdjCount(atom) > 0) {\n            let b1 = mol.findBond(atom, mol.atomAdjList(atom)[0]);\n            let b2 = frag.findBond(1, frag.atomAdjList(1)[0]);\n            mol.setBondOrder(b1, frag.bondOrder(b2));\n        }\n        let extra = mol.atomExtra(atom);\n        let idx = -1;\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                idx = n;\n                break;\n            }\n        if (idx < 0)\n            idx = extra.push(null) - 1;\n        extra[idx] = 'a' + frag.toString();\n        mol.setAtomExtra(atom, extra);\n    }\n    static validateAbbrevs(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                if (mol.atomAdjCount(n) > 1)\n                    MolUtil.clearAbbrev(mol, n);\n                if (mol.atomCharge(n) != 0)\n                    mol.setAtomCharge(n, 0);\n                if (mol.atomUnpaired(n) != 0)\n                    mol.setAtomUnpaired(n, 0);\n                if (mol.atomIsotope(n) != 0)\n                    mol.setAtomIsotope(n, Molecule.ISOTOPE_NATURAL);\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                    mol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n            }\n    }\n    static convertToAbbrev(mol, srcmask, abbrevName) {\n        let molidx = this.convertToAbbrevIndex(mol, srcmask, abbrevName);\n        return molidx ? molidx[0] : null;\n    }\n    static convertToAbbrevIndex(mol, srcmask, abbrevName) {\n        let junction = 0;\n        let polymerExtra = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n), atom = 0;\n            if (srcmask[b1 - 1] && !srcmask[b2 - 1]) {\n                atom = b1;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b2);\n            }\n            else if (!srcmask[b1 - 1] && srcmask[b2 - 1]) {\n                atom = b2;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b1);\n            }\n            if (atom == 0)\n                continue;\n            if (junction > 0 && atom != junction)\n                return [null, null];\n            junction = atom;\n        }\n        if (junction == 0)\n            return [null, null];\n        let na = mol.numAtoms, molidx = 0, fragidx = 0;\n        let maskmol = Vec.booleanArray(false, na), maskfrag = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            maskmol[n] = srcmask[n];\n            maskfrag[n] = !srcmask[n] || n + 1 == junction;\n            if (maskmol[n] && n + 1 <= junction)\n                molidx++;\n            if (maskfrag[n] && n + 1 <= junction)\n                fragidx++;\n        }\n        let bondType = Molecule.BONDTYPE_NORMAL, nadj = 0;\n        for (let a of mol.atomAdjList(junction))\n            if (!srcmask[a - 1]) {\n                if (nadj != 0) {\n                    bondType = Molecule.BONDTYPE_NORMAL;\n                    break;\n                }\n                let b = mol.findBond(junction, a);\n                if (mol.bondFrom(b) == junction)\n                    bondType = mol.bondType(b);\n                nadj++;\n            }\n        let frag = MolUtil.subgraphMask(mol, maskfrag);\n        frag.setAtomElement(fragidx, MolUtil.ABBREV_ATTACHMENT);\n        frag.setAtomCharge(fragidx, 0);\n        frag.setAtomUnpaired(fragidx, 0);\n        frag.setAtomHExplicit(fragidx, Molecule.HEXPLICIT_UNKNOWN);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        frag.setAtomExtra(fragidx, []);\n        frag.setAtomTransient(fragidx, []);\n        let adj = frag.atomAdjList(fragidx);\n        let x = 0, y = 0, inv = 1.0 / adj.length;\n        let bondOrder = 1;\n        for (let n = 0; n < adj.length; n++) {\n            x += frag.atomX(adj[n]);\n            y += frag.atomY(adj[n]);\n            let b = frag.findBond(fragidx, adj[n]);\n            if (n == 0)\n                bondOrder = frag.bondOrder(b);\n            else if (bondOrder != frag.bondOrder(b))\n                bondOrder = 1;\n        }\n        x *= inv;\n        y *= inv;\n        if (fragidx > 1)\n            frag.swapAtoms(fragidx, 1);\n        let newmol = MolUtil.subgraphMask(mol, maskmol);\n        let newatom = newmol.addAtom(abbrevName, x, y);\n        newmol.addBond(molidx, newatom, bondOrder, bondType);\n        MolUtil.setAbbrev(newmol, newatom, frag);\n        if (polymerExtra != null)\n            newmol.setAtomExtra(newatom, Vec.concat(newmol.atomExtra(newatom), polymerExtra));\n        return [newmol, newatom];\n    }\n    static expandAbbrevs(mol, alignCoords) {\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (MolUtil.hasAbbrev(mol, n)) {\n                    if (MolUtil.expandOneAbbrev(mol, n, alignCoords))\n                        anything = true;\n                    n--;\n                }\n            if (!anything)\n                break;\n        }\n    }\n    static expandedAbbrevs(mol) {\n        if (!this.hasAnyAbbrev(mol))\n            return mol;\n        mol = mol.clone();\n        this.expandAbbrevs(mol, true);\n        return mol;\n    }\n    static expandOneAbbrev(mol, atom, alignCoords) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (frag == null)\n            return null;\n        if (mol.atomAdjCount(atom) != 1 || frag.numAtoms == 0) {\n            MolUtil.clearAbbrev(mol, atom);\n            return null;\n        }\n        let m = mol.atomMapNum(atom);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        if (m > 0)\n            for (let n of frag.atomAdjList(1))\n                frag.setAtomMapNum(n, m);\n        return MolUtil.expandOneAbbrevFrag(mol, atom, frag, alignCoords);\n    }\n    static expandOneAbbrevFrag(mol, atom, frag, alignCoords) {\n        let polymerExtra = PolymerBlock.getPolymerExtensions(mol, atom);\n        let nbr = mol.atomAdjCount(atom) == 1 ? mol.atomAdjList(atom)[0] : 0;\n        let connBond = mol.findBond(atom, nbr), connType = Molecule.BONDTYPE_NORMAL;\n        if (connBond > 0) {\n            connType = mol.bondType(connBond);\n            if (mol.bondFrom(connBond) != nbr && (connType == Molecule.BONDTYPE_INCLINED || connType == Molecule.BONDTYPE_DECLINED))\n                connType = Molecule.BONDTYPE_NORMAL;\n        }\n        if (alignCoords) {\n            let vx1 = mol.atomX(atom) - mol.atomX(nbr), vy1 = mol.atomY(atom) - mol.atomY(nbr);\n            let adj = frag.atomAdjList(1);\n            let vx2 = 0, vy2 = 0, inv = 1.0 / adj.length;\n            for (let n = 0; n < adj.length; n++) {\n                vx2 += frag.atomX(adj[n]) - frag.atomX(1);\n                vy2 += frag.atomY(adj[n]) - frag.atomY(1);\n            }\n            vx2 *= inv;\n            vy2 *= inv;\n            let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n            CoordUtil.rotateMolecule(frag, th1 - th2);\n            CoordUtil.translateMolecule(frag, mol.atomX(nbr) - frag.atomX(1), mol.atomY(nbr) - frag.atomY(1));\n        }\n        if (polymerExtra != null) {\n            for (let n = 1; n <= frag.numAtoms; n++) {\n                let extra = frag.atomExtra(n);\n                for (let i = extra.length - 1; i >= 0; i--)\n                    if (polymerExtra.indexOf(extra[i]) >= 0)\n                        extra.splice(i, 1);\n                frag.setAtomExtra(n, Vec.concat(extra, polymerExtra));\n            }\n        }\n        let join = mol.numAtoms + 1;\n        mol.append(frag);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == join) {\n                mol.setBondFrom(n, nbr);\n                mol.setBondType(n, connType);\n            }\n            else if (mol.bondTo(n) == join) {\n                mol.setBondFromTo(n, nbr, mol.bondFrom(n));\n                mol.setBondType(n, connType);\n            }\n        }\n        let mask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = mask.length - frag.numAtoms; n < mask.length; n++)\n            mask[n] = true;\n        mol.deleteAtomAndBonds(join);\n        mol.deleteAtomAndBonds(atom);\n        mask.splice(join - 1, 1);\n        mask.splice(atom - 1, 1);\n        return mask;\n    }\n    static clearAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                extra.splice(n, 1);\n                mol.setAtomExtra(atom, extra);\n                mol.setAtomElement(atom, 'C');\n                return;\n            }\n    }\n    static setAtomElement(mol, atom, el) {\n        if (mol.atomElement(atom) == el)\n            return;\n        this.clearAbbrev(mol, atom);\n        mol.setAtomElement(atom, el);\n    }\n    static addBond(mol, bfr, bto, order, type) {\n        if (type == null)\n            type = Molecule.BONDTYPE_NORMAL;\n        if (mol.atomAdjCount(bfr) >= 1)\n            this.clearAbbrev(mol, bfr);\n        if (mol.atomAdjCount(bto) >= 1)\n            this.clearAbbrev(mol, bto);\n        let b = mol.findBond(bfr, bto);\n        if (b > 0)\n            mol.deleteBond(b);\n        return mol.addBond(bfr, bto, order, type);\n    }\n    static subgraphMask(mol, mask) {\n        let invidx = [];\n        let sum = 0;\n        for (let n = 0; n < mol.numAtoms; n++) {\n            if (mask[n])\n                invidx.push(++sum);\n            else\n                invidx.push(0);\n        }\n        if (sum == 0)\n            return new Molecule();\n        if (sum == mol.numAtoms)\n            return mol.clone();\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let num = frag.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n                frag.setAtomIsotope(num, mol.atomIsotope(n));\n                frag.setAtomHExplicit(num, mol.atomHExplicit(n));\n                frag.setAtomMapNum(num, mol.atomMapNum(n));\n                frag.setAtomExtra(num, mol.atomExtra(n));\n                frag.setAtomTransient(num, mol.atomTransient(n));\n            }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphIndex(mol, idx) {\n        let invidx = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 0; n < invidx.length; n++)\n            invidx[n] = 0;\n        for (let n = 0; n < idx.length; n++)\n            invidx[idx[n] - 1] = n + 1;\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 0; n < idx.length; n++) {\n            let num = frag.addAtom(mol.atomElement(idx[n]), mol.atomX(idx[n]), mol.atomY(idx[n]), mol.atomCharge(idx[n]), mol.atomUnpaired(idx[n]));\n            frag.setAtomIsotope(num, mol.atomIsotope(idx[n]));\n            frag.setAtomHExplicit(num, mol.atomHExplicit(idx[n]));\n            frag.setAtomMapNum(num, mol.atomMapNum(idx[n]));\n            frag.setAtomExtra(num, mol.atomExtra(idx[n]));\n            frag.setAtomTransient(num, mol.atomTransient(idx[n]));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphWithAttachments(mol, mask) {\n        let xmask = mask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (mask[bfr] && !mask[bto])\n                xmask[bto] = true;\n            else if (mask[bto] && !mask[bfr])\n                xmask[bfr] = true;\n        }\n        let xmol = mol.clone();\n        for (let n = 1; n <= xmol.numAtoms; n++)\n            if (xmask[n - 1] && !mask[n - 1]) {\n                xmol.setAtomElement(n, 'X');\n                xmol.setAtomCharge(n, 0);\n                xmol.setAtomUnpaired(n, 0);\n                xmol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n                xmol.setAtomExtra(n, []);\n            }\n        return MolUtil.subgraphMask(xmol, xmask);\n    }\n    static append(mol, frag) {\n        let boxm = mol.boundary(), boxf = frag.boundary();\n        let dx = boxm.maxX() + Molecule.IDEALBOND - boxf.minX();\n        let dy = 0.5 * (boxm.minY() + boxm.maxY() - boxf.minY() - boxf.maxY());\n        let top = mol.numAtoms;\n        mol.append(frag);\n        for (let n = top + 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + dx, mol.atomY(n) + dy);\n    }\n    static deleteAtoms(mol, idx) {\n        let mask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 0; n < idx.length; n++)\n            mask[idx[n] - 1] = false;\n        return MolUtil.subgraphMask(mol, mask);\n    }\n    static componentList(mol) {\n        let sz = mol.numAtoms;\n        if (sz == 0)\n            return null;\n        let g = Graph.fromMolecule(mol);\n        let groups = g.calculateComponentGroups();\n        for (let grp of groups)\n            Vec.addTo(grp, 1);\n        return groups;\n    }\n    static getAtomSides(mol, atom) {\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[atom - 1]);\n        mask[atom - 1] = false;\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++)\n            grps.push([atom]);\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static getBondSides(mol, bond) {\n        let bf = mol.bondFrom(bond), bt = mol.bondTo(bond);\n        let inRing = mol.bondInRing(bond);\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[bf - 1]);\n        if (!inRing)\n            g.removeEdge(bf - 1, bt - 1);\n        else {\n            mask[bf - 1] = false;\n            mask[bt - 1] = false;\n        }\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++) {\n            grps[n] = [];\n            if (inRing) {\n                grps[n].push(bf);\n                grps[n].push(bt);\n            }\n        }\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static arrayAtomX(mol) {\n        let x = Vec.numberArray(0, mol.numAtoms);\n        for (let n = x.length - 1; n >= 0; n--)\n            x[n] = mol.atomX(n + 1);\n        return x;\n    }\n    static arrayAtomY(mol) {\n        let y = Vec.numberArray(0, mol.numAtoms);\n        for (let n = y.length - 1; n >= 0; n--)\n            y[n] = mol.atomY(n + 1);\n        return y;\n    }\n    static arrayAtomMapNum(mol) {\n        let mapnum = Vec.numberArray(0, mol.numAtoms);\n        for (let n = mapnum.length - 1; n >= 0; n--)\n            mapnum[n] = mol.atomMapNum(n + 1);\n        return mapnum;\n    }\n    static molecularFormula(mol, punctuation) {\n        let puncEnter = '', puncExit = '', puncEnterSuper = '', puncExitSuper = '';\n        if (punctuation == true)\n            [puncEnter, puncExit] = ['{', '}', '{^', '}'];\n        else if (punctuation instanceof Array) {\n            puncEnter = punctuation[0];\n            puncExit = punctuation[1];\n            puncEnterSuper = punctuation[2];\n            puncExitSuper = punctuation[3];\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let countC = 0, countH = 0;\n        let elements = Vec.stringArray('', mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            countH += mol.atomHydrogens(n);\n            let el = mol.atomElement(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                el = puncEnterSuper + mol.atomIsotope(n) + puncExitSuper + el;\n            if (el == 'C')\n                countC++;\n            else if (el == 'H')\n                countH++;\n            else\n                elements[n - 1] = el;\n        }\n        elements.sort();\n        let formula = '';\n        if (countC > 0)\n            formula += 'C';\n        if (countC > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countC;\n            if (punctuation)\n                formula += puncExit;\n        }\n        if (countH > 0)\n            formula += 'H';\n        if (countH > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countH;\n            if (punctuation)\n                formula += puncExit;\n        }\n        for (let n = 0; n < elements.length; n++)\n            if (elements[n].length > 0) {\n                let count = 1;\n                for (; n + 1 < elements.length && elements[n] == elements[n + 1]; n++)\n                    count++;\n                formula += elements[n];\n                if (count > 1) {\n                    if (punctuation)\n                        formula += puncEnter;\n                    formula += count;\n                    if (punctuation)\n                        formula += puncExit;\n                }\n            }\n        return formula.toString();\n    }\n    static molecularWeight(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let mw = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            mw += mol.atomHydrogens(n) * Chemistry.NATURAL_ATOMIC_WEIGHTS[1];\n            let iso = mol.atomIsotope(n);\n            if (iso != Molecule.ISOTOPE_NATURAL) {\n                mw += iso;\n                continue;\n            }\n            let an = Molecule.elementAtomicNumber(mol.atomElement(n));\n            if (an > 0 && an < Chemistry.NATURAL_ATOMIC_WEIGHTS.length)\n                mw += Chemistry.NATURAL_ATOMIC_WEIGHTS[an];\n        }\n        return mw;\n    }\n    static removeDuplicateBonds(mol) {\n        let bpri = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let p = Math.min(mol.bondFrom(n), mol.bondTo(n)) * mol.numAtoms + Math.max(mol.bondFrom(n), mol.bondTo(n));\n            bpri.push(p);\n        }\n        let bidx = Vec.idxSort(bpri);\n        let keepmask = Vec.booleanArray(false, bidx.length);\n        let p = 0;\n        while (p < bidx.length) {\n            let sz = 1;\n            while (p + sz < bidx.length && bpri[bidx[p]] == bpri[bidx[p + sz]])\n                sz++;\n            let best = p;\n            for (let n = p + 1; n < p + sz; n++) {\n                let b1 = bidx[best] + 1, b2 = bidx[n] + 1;\n                let a1 = mol.bondFrom(b1), a2 = mol.bondTo(b1);\n                let el1 = mol.atomElement(a1), el2 = mol.atomElement(a2);\n                let limit1 = 0, limit2 = 0;\n                if (el1 == 'C' || el1 == 'N')\n                    limit1 = 4;\n                else if (el1 == 'O')\n                    limit1 = 3;\n                if (el2 == 'C' || el2 == 'N')\n                    limit2 = 4;\n                else if (el2 == 'O')\n                    limit2 = 3;\n                if (limit1 > 0 || limit2 > 0) {\n                    let boB1A1 = 0, boB1A2 = 0, boB2A1 = 0, boB2A2 = 0;\n                    for (let i = 1; i <= mol.numBonds; i++) {\n                        if (i != b2 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB1A1 += mol.bondOrder(i);\n                        if (i != b2 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB1A2 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB2A1 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB2A2 += mol.bondOrder(i);\n                    }\n                    let bad1 = 0, bad2 = 0;\n                    if (limit1 > 0 && boB1A1 > limit1)\n                        bad1++;\n                    if (limit2 > 0 && boB1A2 > limit2)\n                        bad1++;\n                    if (limit1 > 0 && boB2A1 > limit1)\n                        bad2++;\n                    if (limit2 > 0 && boB2A2 > limit2)\n                        bad2++;\n                    if (bad1 < bad2)\n                        continue;\n                    if (bad1 > bad2) {\n                        best = n;\n                        continue;\n                    }\n                }\n                let exotic1 = 2 * mol.bondOrder(b1), exotic2 = 2 * mol.bondOrder(b2);\n                exotic1 += (exotic1 == 0 ? 4 : 0) + (mol.bondType(b1) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                exotic2 += (exotic2 == 0 ? 4 : 0) + (mol.bondType(b2) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                if (exotic2 > exotic1)\n                    best = n;\n            }\n            keepmask[bidx[best]] = true;\n            p += sz;\n        }\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (!keepmask[n - 1] || mol.bondFrom(n) == mol.bondTo(n))\n                mol.deleteBond(n);\n    }\n    static calculateWalkWeight(mol, atom) {\n        let ccsz = 0, cc = Graph.fromMolecule(mol).calculateComponents();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n] == cc[atom - 1])\n                ccsz++;\n        let w = Vec.numberArray(1, mol.numAtoms), wn = Vec.numberArray(0, mol.numAtoms);\n        w[atom - 1] = 0;\n        for (; ccsz > 0; ccsz--) {\n            for (let n = 0; n < mol.numAtoms; n++)\n                wn[n] = w[n];\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let a1 = mol.bondFrom(n) - 1, a2 = mol.bondTo(n) - 1;\n                w[a1] += wn[a2] * 0.1;\n                w[a2] += wn[a1] * 0.1;\n            }\n            w[atom - 1] = 0;\n        }\n        return w;\n    }\n    static totalHydrogens(mol, atom) {\n        let hc = mol.atomHydrogens(atom);\n        let adj = mol.atomAdjList(atom);\n        for (let n = 0; n < adj.length; n++)\n            if (mol.atomElement(adj[n]) == 'H')\n                hc++;\n        return hc;\n    }\n    static stripHydrogens(mol, force = false) {\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if ((force && mol.atomElement(n) == 'H') || this.boringHydrogen(mol, n))\n                mol.deleteAtomAndBonds(n);\n    }\n    static boringHydrogen(mol, atom) {\n        if (mol.atomElement(atom) != 'H')\n            return false;\n        if (mol.atomCharge(atom) != 0 || mol.atomUnpaired(atom) != 0)\n            return false;\n        if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n            return false;\n        if (Vec.notBlank(mol.atomExtra(atom)) || Vec.notBlank(mol.atomTransient(atom)))\n            return false;\n        if (mol.atomAdjCount(atom) != 1)\n            return false;\n        let other = mol.atomAdjList(atom)[0];\n        if (mol.atomElement(other) == 'H')\n            return false;\n        let bond = mol.atomAdjBonds(atom)[0];\n        if (mol.bondOrder(bond) != 1 || mol.bondType(bond) != Molecule.BONDTYPE_NORMAL)\n            return false;\n        if (mol.atomHExplicit(other) != Molecule.HEXPLICIT_UNKNOWN)\n            return false;\n        if (Molecule.HYVALENCE_EL.indexOf(mol.atomElement(other)) < 0)\n            return false;\n        return true;\n    }\n    static createHydrogens(mol, position) {\n        if (position == null)\n            position = false;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++) {\n            let hc = mol.atomHydrogens(n);\n            if (hc == 0)\n                continue;\n            if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                mol.setAtomHExplicit(n, 0);\n            if (!position) {\n                for (; hc > 0; hc--) {\n                    let a = mol.addAtom('H', mol.atomX(n), mol.atomY(n));\n                    mol.addBond(n, a, 1);\n                }\n            }\n            else\n                SketchUtil.placeAdditionalHydrogens(mol, n, hc);\n        }\n        return mol.numAtoms - na;\n    }\n    static atomVec3(mol, atom) {\n        if (mol.is3D())\n            return [mol.atomX(atom), mol.atomY(atom), mol.atomZ(atom)];\n        else\n            return [mol.atomX(atom), mol.atomY(atom), 0];\n    }\n    static atomOxidationState(mol, atom) {\n        if (mol.atomAdjCount(atom) == 0)\n            return null;\n        if (this.hasAbbrev(mol, atom))\n            return null;\n        let atno = mol.atomicNumber(atom);\n        if (atno == 0)\n            return null;\n        let nonMetal = atno == Chemistry.ELEMENT_H || Chemistry.ELEMENT_BLOCKS[atno] == 2;\n        let oxstate = mol.atomHydrogens(atom) + (nonMetal ? -mol.atomCharge(atom) : mol.atomCharge(atom));\n        for (let b of mol.atomAdjBonds(atom)) {\n            let bo = mol.bondOrder(b), other = mol.bondOther(b, atom);\n            let chalco = ['O', 'S', 'Se', 'Te'].includes(mol.atomElement(other));\n            if (nonMetal || chalco)\n                oxstate += bo;\n            else\n                oxstate += bo % 2;\n        }\n        if (atno == Chemistry.ELEMENT_H && oxstate == 1)\n            return null;\n        if (atno == Chemistry.ELEMENT_B && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_C && oxstate == 4)\n            return null;\n        if (atno == Chemistry.ELEMENT_N && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_O && oxstate == 2)\n            return null;\n        if (atno == Chemistry.ELEMENT_S && (oxstate == 2 || oxstate == 4 || oxstate == 6))\n            return null;\n        if (atno == Chemistry.ELEMENT_P && (oxstate == 3 || oxstate == 5))\n            return null;\n        if ((atno == Chemistry.ELEMENT_F || atno == Chemistry.ELEMENT_Cl ||\n            atno == Chemistry.ELEMENT_Br || atno == Chemistry.ELEMENT_I) && oxstate == 1)\n            return null;\n        return oxstate;\n    }\n    static oxidationStateText(oxstate) {\n        if (oxstate == 0)\n            return '0';\n        let str = oxstate < 0 ? '-' : '';\n        let absox = Math.abs(oxstate);\n        if (absox == 1)\n            str += 'I';\n        else if (absox == 2)\n            str += 'II';\n        else if (absox == 3)\n            str += 'III';\n        else if (absox == 4)\n            str += 'IV';\n        else if (absox == 5)\n            str += 'V';\n        else if (absox == 6)\n            str += 'VI';\n        else if (absox == 7)\n            str += 'VII';\n        else if (absox == 8)\n            str += 'VIII';\n        else if (absox == 9)\n            str += 'IX';\n        else if (absox == 10)\n            str += 'X';\n        else if (absox == 11)\n            str += 'XI';\n        else if (absox == 12)\n            str += 'XII';\n        else\n            str = (oxstate > 0 ? '+' : '') + oxstate;\n        return str;\n    }\n}\nMolUtil.TEMPLATE_ATTACHMENT = 'X';\nMolUtil.ABBREV_ATTACHMENT = '*';\nexport { MolUtil };\n//# sourceMappingURL=MolUtil.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport const STEREOGROUP_EXTRA_RACEMIC = 'xCHIRAC:';\nexport const STEREOGROUP_EXTRA_RELATIVE = 'xCHIREL:';\nexport class StereoGroup {\n    static hasStereoGroups(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC) || str.startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                        return true;\n        }\n        return false;\n    }\n    constructor(mol) {\n        this.mol = mol;\n        this.chiRac = new Map();\n        this.chiRel = new Map();\n        this.mol = mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra) {\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RACEMIC.length));\n                        if (grp > 0)\n                            this.chiRac.set(grp, Vec.append(this.chiRac.get(grp), n));\n                    }\n                    else if (str.startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RELATIVE.length));\n                        if (grp > 0)\n                            this.chiRel.set(grp, Vec.append(this.chiRel.get(grp), n));\n                    }\n                }\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRac.set(grp, atoms);\n            else\n                this.chiRac.delete(grp);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRel.set(grp, atoms);\n            else\n                this.chiRel.delete(grp);\n        }\n    }\n    getRacemicGroups() { return Array.from(this.chiRac.keys()); }\n    getRelativeGroups() { return Array.from(this.chiRel.keys()); }\n    getRacemicAtoms() { return Array.from(this.chiRac.values()); }\n    getRelativeAtoms() { return Array.from(this.chiRel.values()); }\n    getRacemicGroupAtoms(grp) { return this.chiRac.get(grp); }\n    getRelativeGroupAtoms(grp) { return this.chiRel.get(grp); }\n    rewriteMolecule() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) || extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                    extra.splice(i, 1);\n                    modified = true;\n                }\n            }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RACEMIC + grp]);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RELATIVE + grp]);\n        }\n    }\n    harmoniseNumbering(other) {\n        let groups = other.getRacemicGroups();\n        let stash = this.getRacemicAtoms();\n        this.chiRac.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRac.set(grp, atoms);\n            groups.push(grp);\n        }\n        groups = other.getRelativeGroups();\n        stash = this.getRelativeAtoms();\n        this.chiRel.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRel.set(grp, atoms);\n            groups.push(grp);\n        }\n    }\n    createRacemic(atoms) {\n        let grp = this.nextIdentifier(this.getRacemicGroups());\n        this.chiRac.set(grp, atoms);\n        return grp;\n    }\n    createRelative(atoms) {\n        let grp = this.nextIdentifier(this.getRelativeGroups());\n        this.chiRel.set(grp, atoms);\n        return grp;\n    }\n    removeRacemic(grp) {\n        this.chiRac.delete(grp);\n    }\n    removeRelative(grp) {\n        this.chiRel.delete(grp);\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) && !extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                    continue;\n                extra.splice(i, 1);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    atomHasWedge(atom) {\n        if (this.mol.is3D())\n            return true;\n        let hasWedge = false;\n        for (let b of this.mol.atomAdjBonds(atom)) {\n            let bt = this.mol.bondType(b);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return false;\n            if (this.mol.bondFrom(b) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        return hasWedge;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=StereoGroup.js.map","import { ResonanceRemover } from '../calc/ResonanceRemover';\nimport { Vec } from '../util/Vec';\nimport { BondArtifact } from './BondArtifact';\nimport { CoordUtil } from './CoordUtil';\nimport { DataSheet } from './DataSheet';\nimport { ForeignMolecule, ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from './PolymerBlock';\nimport { QueryUtil } from './QueryUtil';\nimport { StereoGroup } from './StereoGroup';\nexport const MDLMOL_VALENCE = {\n    'H': [1],\n    'B': [3],\n    'C': [4],\n    'Si': [4],\n    'N': [3],\n    'P': [3, 5],\n    'As': [3, 5],\n    'O': [2],\n    'S': [2, 4, 6],\n    'Se': [2, 4, 6],\n    'Te': [2, 4, 6],\n    'F': [1],\n    'Cl': [1, 3, 5, 7],\n    'Br': [1],\n    'I': [1, 3, 5, 7],\n    'At': [1, 3, 5, 7],\n};\nexport class MDLMOLReader {\n    constructor(strData) {\n        this.parseHeader = true;\n        this.parseExtended = true;\n        this.allowV3000 = true;\n        this.considerRescale = true;\n        this.keepAromatic = false;\n        this.keepParity = false;\n        this.keepQuery = true;\n        this.mol = null;\n        this.molName = '';\n        this.overallStereoAbsolute = true;\n        this.resBonds = null;\n        this.groupAttachAny = new Map();\n        this.groupAttachAll = new Map();\n        this.groupStereoAbsolute = [];\n        this.groupStereoRacemic = [];\n        this.groupStereoRelative = [];\n        this.groupLinkNodes = [];\n        this.groupMixtures = [];\n        this.scsrTemplates = null;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        if (this.parseHeader) {\n            this.molName = this.lines[0];\n            this.pos = 3;\n        }\n        this.parseCTAB();\n        return this.mol;\n    }\n    nextLine() {\n        if (this.pos >= this.lines.length)\n            throw 'MDL Molfile parser: premature end, at line ' + (this.pos + 1);\n        return this.lines[this.pos++];\n    }\n    parseCTAB() {\n        this.mol = new Molecule();\n        this.mol.keepTransient = true;\n        let line = this.nextLine();\n        let version = line.length >= 39 ? line.substring(34, 39) : '';\n        if (this.allowV3000 && version == 'V3000') {\n            this.parseV3000();\n            this.mol.keepTransient = false;\n            return;\n        }\n        if (version != 'V2000')\n            throw 'Invalid MDL MOL: no Vx000 tag.';\n        let numAtoms = parseInt(line.substring(0, 3).trim());\n        let numBonds = parseInt(line.substring(3, 6).trim());\n        if (line.length >= 15)\n            this.overallStereoAbsolute = parseInt(line.substring(12, 15).trim()) == 1;\n        for (let n = 0; n < numAtoms; n++) {\n            line = this.nextLine();\n            if (line.length < 34)\n                throw 'Invalid MDL MOL: atom line' + (n + 1);\n            let x = parseFloat(line.substring(0, 10).trim());\n            let y = parseFloat(line.substring(10, 20).trim());\n            let z = parseFloat(line.substring(20, 30).trim());\n            let el = line.substring(31, 34).trim();\n            let chg = line.length < 39 ? 0 : parseInt(line.substring(36, 39).trim()), rad = 0;\n            let stereo = line.length < 42 ? 0 : parseInt(line.substring(39, 42).trim());\n            let hyd = line.length < 45 ? 0 : parseInt(line.substring(42, 45).trim());\n            let val = line.length < 51 ? 0 : parseInt(line.substring(48, 51).trim());\n            let mapnum = line.length < 63 ? 0 : parseInt(line.substring(60, 63).trim());\n            if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else if (chg == 4) {\n                chg = 0;\n                rad = 2;\n            }\n            else if (chg >= 5 && chg <= 7)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let a = this.mol.addAtom(el, x, y, chg, rad);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, mapnum);\n            if (hyd > 0)\n                QueryUtil.setQueryAtomHydrogens(this.mol, a, [hyd - 1]);\n            if (stereo > 0 && this.keepParity) {\n                let trans = this.mol.atomTransient(a);\n                if (stereo == 1)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLOdd));\n                else if (stereo == 2)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLEven));\n                else if (stereo == 3)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLRacemic));\n            }\n            if (val != 0)\n                ForeignMolecule.markExplicitValence(this.mol, n + 1, val > 14 ? 0 : val);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            line = this.nextLine();\n            if (line.length >= 9 && line.length < 12)\n                line = line.substring(0, 9) + '  0';\n            if (line.length < 12)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let bfr = parseInt(line.substring(0, 3).trim()), bto = parseInt(line.substring(3, 6).trim());\n            let type = parseInt(line.substring(6, 9).trim()), stereo = parseInt(line.substring(9, 12).trim());\n            if (bfr == bto || bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let order = type >= 1 && type <= 3 ? type : type == 8 || type == 9 || type == 10 ? 0 : 1;\n            let style = Molecule.BONDTYPE_NORMAL;\n            if (stereo == 1)\n                style = Molecule.BONDTYPE_INCLINED;\n            else if (stereo == 6)\n                style = Molecule.BONDTYPE_DECLINED;\n            else if (stereo == 3 || stereo == 4)\n                style = Molecule.BONDTYPE_UNKNOWN;\n            let b = this.mol.addBond(bfr, bto, order, style);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[n] = true;\n                    }\n                }\n            }\n        }\n        const MBLK_CHG = 1, MBLK_RAD = 2, MBLK_ISO = 3, MBLK_RGP = 4, MBLK_HYD = 5, MBLK_ZCH = 6, MBLK_ZBO = 7, MBLK_ZPA = 8, MBLK_ZRI = 9, MBLK_ZAR = 10, MBLK_RBC = 11, MBLK_SUB = 12, MBLK_UNS = 13;\n        let resPaths = new Map(), resRings = new Map(), arenes = new Map();\n        let superatoms = new Map(), mixtures = new Map();\n        while (true) {\n            line = this.nextLine();\n            if (line.startsWith('M  END'))\n                break;\n            let type = 0;\n            if (line.startsWith('M  CHG'))\n                type = MBLK_CHG;\n            else if (line.startsWith('M  RAD'))\n                type = MBLK_RAD;\n            else if (line.startsWith('M  ISO'))\n                type = MBLK_ISO;\n            else if (line.startsWith('M  RGP'))\n                type = MBLK_RGP;\n            else if (this.parseExtended && line.startsWith('M  HYD'))\n                type = MBLK_HYD;\n            else if (this.parseExtended && line.startsWith('M  ZCH'))\n                type = MBLK_ZCH;\n            else if (this.parseExtended && line.startsWith('M  ZBO'))\n                type = MBLK_ZBO;\n            else if (this.parseExtended && line.startsWith('M  ZPA'))\n                type = MBLK_ZPA;\n            else if (this.parseExtended && line.startsWith('M  ZRI'))\n                type = MBLK_ZRI;\n            else if (this.parseExtended && line.startsWith('M  ZAR'))\n                type = MBLK_ZAR;\n            else if (this.parseExtended && line.startsWith('M  RBC'))\n                type = MBLK_RBC;\n            else if (this.parseExtended && line.startsWith('M  SUB'))\n                type = MBLK_SUB;\n            else if (this.parseExtended && line.startsWith('M  UNS'))\n                type = MBLK_UNS;\n            else if (line.startsWith('A  ') && line.length >= 6) {\n                let anum = parseInt(line.substring(3, 6).trim());\n                if (anum >= 1 && anum <= this.mol.numAtoms) {\n                    line = this.nextLine();\n                    if (line == null)\n                        break;\n                    this.mol.setAtomElement(anum, line);\n                    continue;\n                }\n            }\n            else if (line.startsWith('M  STY')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    if (stype == 'SUP')\n                        superatoms.set(idx, { atoms: [], name: null });\n                    else if (stype == 'MIX' || stype == 'FOR')\n                        mixtures.set(idx, { index: idx, parent: 0, atoms: [], type: stype });\n                    else if (stype == 'SRU' || stype == 'COP' || stype == 'MUL' || stype == 'DAT')\n                        superatoms.set(idx, { atoms: [], name: null, bracketType: stype });\n                }\n            }\n            else if (line.startsWith('M  SPL')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let child = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let parent = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    let mix = mixtures.get(child);\n                    if (mix != null)\n                        mix.parent = parent;\n                }\n            }\n            else if (line.startsWith('M  SAL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.atoms = Vec.concat(sup.atoms, atoms);\n                }\n                let mix = mixtures.get(idx);\n                if (mix != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    mix.atoms = Vec.concat(mix.atoms, atoms);\n                }\n            }\n            else if (line.startsWith('M  SBL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let bonds = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        bonds[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.bonds = Vec.concat(sup.bonds, bonds);\n                }\n            }\n            else if (line.startsWith('M  SMT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null)\n                    sup.name = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SDT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup) {\n                    sup.name = line.substring(11, 41).trim();\n                    sup.unit = line.substring(43, 63).trim();\n                    sup.query = line.substring(63).trim();\n                }\n            }\n            else if (line.startsWith('M  SED')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup)\n                    sup.value = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SCN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    let sup = superatoms.get(idx);\n                    if (sup != null)\n                        sup.connectType = stype.trim();\n                }\n            }\n            else if (line.startsWith('M  CRS')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    sup.bondConn = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        sup.bondConn[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                }\n            }\n            else if (line.startsWith('M  LIN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let node = {\n                        atom: parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim()),\n                        nbrs: [],\n                        minRep: 1,\n                        maxRep: parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim()),\n                    };\n                    let nbr1 = parseInt(line.substring(17 + 8 * n, 21 + 8 * n).trim());\n                    let nbr2 = parseInt(line.substring(21 + 8 * n, 25 + 8 * n).trim());\n                    if (nbr1 > 0)\n                        node.nbrs.push(nbr1);\n                    if (nbr2 > 0)\n                        node.nbrs.push(nbr2);\n                    this.groupLinkNodes.push(node);\n                }\n            }\n            else if (line.startsWith('M  ALS')) {\n                let atom = parseInt(line.substring(7, 10).trim());\n                let len = parseInt(line.substring(10, 13).trim());\n                let logic = line.charAt(14);\n                let elements = [];\n                for (let n = 0; n < len; n++)\n                    elements.push(line.substring(16 + n * 4, 20 + n * 4).trim());\n                this.mol.setAtomElement(atom, '*');\n                if (logic == 'F')\n                    QueryUtil.setQueryAtomElements(this.mol, atom, elements);\n                else if (logic == 'T')\n                    QueryUtil.setQueryAtomElementsNot(this.mol, atom, elements);\n            }\n            if (type == MBLK_ZPA || type == MBLK_ZRI || type == MBLK_ZAR) {\n                let len = parseInt(line.substring(6, 9).trim()), blk = parseInt(line.substring(9, 13).trim());\n                let map = type == MBLK_ZPA ? resPaths : type == MBLK_ZRI ? resRings : arenes;\n                for (let n = 0; n < len; n++) {\n                    let val = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    if (val < 1 || val > numAtoms)\n                        throw 'Invalid MDL MOL: M-block';\n                    let atoms = map.get(blk);\n                    if (!atoms)\n                        map.set(blk, atoms = []);\n                    atoms.push(val);\n                }\n            }\n            else if (type > 0) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let pos = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let val = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    if (pos < 1)\n                        throw 'Invalid MDL MOL: M-block';\n                    if (type == MBLK_CHG)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_RAD) {\n                        if (val == 1 || val == 3)\n                            this.mol.setAtomUnpaired(pos, 2);\n                        else if (val == 2)\n                            this.mol.setAtomUnpaired(pos, 1);\n                    }\n                    else if (type == MBLK_ISO)\n                        this.mol.setAtomIsotope(pos, val);\n                    else if (type == MBLK_RGP)\n                        this.mol.setAtomElement(pos, 'R' + val);\n                    else if (type == MBLK_HYD)\n                        this.mol.setAtomHExplicit(pos, val);\n                    else if (type == MBLK_ZCH)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_ZBO)\n                        this.mol.setBondOrder(pos, val);\n                    else if (type == MBLK_RBC && val != 0) {\n                        if (val == -2)\n                            val = this.countRingBonds(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomRingBonds(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_SUB && val != 0) {\n                        if (val == -2)\n                            val = this.countSubstitutions(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomAdjacency(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_UNS) {\n                        if (val == 1)\n                            QueryUtil.setQueryAtomUnsaturated(this.mol, pos, true);\n                    }\n                }\n            }\n        }\n        this.postFix();\n        if (this.parseExtended) {\n            let artifacts = new BondArtifact(this.mol);\n            for (let atoms of resPaths.values())\n                artifacts.createPath(atoms);\n            for (let atoms of resRings.values())\n                artifacts.createRing(atoms);\n            for (let atoms of arenes.values())\n                artifacts.createArene(atoms);\n            artifacts.rewriteMolecule();\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        for (let key of Vec.sorted(Array.from(mixtures.keys())))\n            this.groupMixtures.push(mixtures.get(key));\n        this.mol.keepTransient = false;\n    }\n    postFix() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (MolUtil.hasAbbrev(mol, n) || mol.atomTransient(n).some((str) => str.startsWith(ForeignMoleculeTransient.AtomSCSRClass)))\n                continue;\n            let el = mol.atomElement(n);\n            if (el == 'D') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 2);\n            }\n            else if (el == 'T') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 3);\n            }\n            if (mol.is3D && mol.atomZ(n) === undefined)\n                mol.setAtomZ(n, 0);\n            let valence = ForeignMolecule.noteExplicitValence(this.mol, n);\n            let options = MDLMOL_VALENCE[el];\n            if (valence != null) {\n                let hcount = valence < 0 || valence > 14 ? 0 : valence;\n                for (let b of mol.atomAdjBonds(n))\n                    hcount -= mol.bondOrder(b);\n                if (hcount != mol.atomHydrogens(n))\n                    mol.setAtomHExplicit(n, Math.max(0, hcount));\n            }\n            else if (options) {\n                let chg = mol.atomCharge(n);\n                let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n                let usedValence = chgmod;\n                let unp = mol.atomUnpaired(n);\n                if (unp > 0 && (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P'))\n                    usedValence += unp;\n                for (let b of mol.atomAdjBonds(n))\n                    usedValence += mol.bondOrder(b);\n                for (let v of options)\n                    if (usedValence <= v) {\n                        let hcount = v - usedValence;\n                        if (hcount != mol.atomHydrogens(n))\n                            mol.setAtomHExplicit(n, Math.max(0, hcount));\n                        break;\n                    }\n            }\n        }\n        if (this.considerRescale && Vec.isBlank(this.scsrTemplates))\n            CoordUtil.normaliseBondDistances(mol);\n        if (this.resBonds != null) {\n            let derez = new ResonanceRemover(mol, this.resBonds, null);\n            try {\n                derez.perform();\n                for (let n = 0; n < mol.numBonds; n++)\n                    mol.setBondOrder(n + 1, derez.bondOrders[n]);\n            }\n            catch (ex) {\n            }\n        }\n    }\n    parseV3000() {\n        var _a;\n        let Section;\n        (function (Section) {\n            Section[Section[\"Atom\"] = 0] = \"Atom\";\n            Section[Section[\"Bond\"] = 1] = \"Bond\";\n            Section[Section[\"Coll\"] = 2] = \"Coll\";\n            Section[Section[\"SGroup\"] = 3] = \"SGroup\";\n            Section[Section[\"Template\"] = 4] = \"Template\";\n        })(Section || (Section = {}));\n        let inCTAB = false, inTemplate = false;\n        let section = null;\n        let lineCounts = null;\n        let lineAtom = [], lineBond = [], lineColl = [], lineSgroup = [];\n        let asdrawnRBC = [], asdrawnSUB = [];\n        let templateBlocks = [];\n        const ERRPFX = 'Invalid MDL MOL V3000: ';\n        while (true) {\n            let fullLine = this.nextLine();\n            if (fullLine == 'M  END')\n                break;\n            if (!fullLine.startsWith('M  V30 '))\n                continue;\n            let line = fullLine.substring(7);\n            if (line.startsWith('BEGIN TEMPLATE'))\n                inTemplate = true;\n            else if (line.startsWith('END TEMPLATE'))\n                inTemplate = false;\n            else if (line.startsWith('TEMPLATE ') && inTemplate)\n                templateBlocks.push([fullLine]);\n            else if (inTemplate && templateBlocks != null)\n                Vec.last(templateBlocks).push(fullLine);\n            else if (line.startsWith('COUNTS '))\n                lineCounts = line.substring(7);\n            else if (line.startsWith('BEGIN CTAB'))\n                inCTAB = true;\n            else if (line.startsWith('BEGIN ATOM'))\n                section = Section.Atom;\n            else if (line.startsWith('BEGIN BOND'))\n                section = Section.Bond;\n            else if (line.startsWith('BEGIN COLLECTION'))\n                section = Section.Coll;\n            else if (line.startsWith('BEGIN SGROUP'))\n                section = Section.SGroup;\n            else if (line.startsWith('END '))\n                section = null;\n            else if (inCTAB && section == Section.Atom)\n                lineAtom.push(line);\n            else if (inCTAB && section == Section.Bond)\n                lineBond.push(line);\n            else if (inCTAB && section == Section.Coll)\n                lineColl.push(line);\n            else if (inCTAB && section == Section.SGroup)\n                lineSgroup.push(line);\n            else if (inCTAB && section == null) {\n                if (line.startsWith('LINKNODE ')) {\n                    let bits = this.splitWithQuotes(line.substring(9));\n                    let node = {\n                        atom: 0,\n                        nbrs: [],\n                        minRep: parseInt(bits[0]),\n                        maxRep: parseInt(bits[1])\n                    };\n                    let nb = parseInt(bits[2]);\n                    let atoms = [];\n                    for (let n = 0; n < nb * 2; n++)\n                        atoms.push(parseInt(bits[3 + n]));\n                    Vec.sort(atoms);\n                    for (let n = 0; n < atoms.length; n++) {\n                        if (n < atoms.length - 1 && atoms[n] == atoms[n + 1])\n                            node.atom = atoms[n++];\n                        else\n                            node.nbrs.push(atoms[n]);\n                    }\n                    this.groupLinkNodes.push(node);\n                }\n            }\n        }\n        let counts = lineCounts.trim().split(/\\s+/);\n        if (counts.length < 2)\n            throw ERRPFX + 'counts line malformatted';\n        let numAtoms = parseInt(counts[0]), numBonds = parseInt(counts[1]);\n        if (numAtoms < 0 || numAtoms > lineAtom.length)\n            throw ERRPFX + 'unreasonable atom count: ' + numAtoms;\n        if (numBonds < 0 || numBonds > lineBond.length)\n            throw ERRPFX + 'unreasonable bond count: ' + numBonds;\n        let atomBits = [], bondBits = [];\n        for (let n = 0; n < lineAtom.length; n++) {\n            let line = lineAtom[n];\n            while (n < lineAtom.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineAtom[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 6)\n                throw ERRPFX + 'atom line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numAtoms)\n                throw ERRPFX + 'invalid atom index: ' + bits[0];\n            if (atomBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate atom index: ' + idx;\n            atomBits[idx - 1] = bits;\n        }\n        for (let n = 0; n < lineBond.length; n++) {\n            let line = lineBond[n];\n            while (n < lineBond.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineBond[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 4)\n                throw ERRPFX + 'bond line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numBonds)\n                throw ERRPFX + 'invalid bond index: ' + bits[0];\n            if (bondBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate bond index: ' + idx;\n            bondBits[idx - 1] = bits;\n        }\n        for (let a = 1; a <= numAtoms; a++) {\n            let bits = atomBits[a - 1];\n            if (bits == null)\n                throw ERRPFX + 'atom definition missing for #' + a;\n            let type = bits[1];\n            if (type.length > 2 && type.startsWith('\"') && type.endsWith('\"'))\n                type = type.substring(1, type.length - 1);\n            let x = parseFloat(bits[2]), y = parseFloat(bits[3]), z = parseFloat(bits[4]);\n            let map = parseInt(bits[5]);\n            this.mol.addAtom(type, x, y);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, map);\n            this.parseQueryAtomList(this.mol, a);\n            for (let i = 6; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CHG')\n                    this.mol.setAtomCharge(a, parseInt(val));\n                else if (key == 'RAD') {\n                    let spin = parseInt(val);\n                    if (spin == 1 || spin == 3)\n                        this.mol.setAtomUnpaired(a, 2);\n                    else if (spin == 2)\n                        this.mol.setAtomUnpaired(a, 1);\n                }\n                else if (key == 'MASS')\n                    this.mol.setAtomIsotope(a, parseInt(val));\n                else if (key == 'CFG') {\n                    let stereo = parseInt(val);\n                    if (stereo > 0 && this.keepParity) {\n                    }\n                }\n                else if (key == 'VAL')\n                    ForeignMolecule.markExplicitValence(this.mol, a, parseInt(val));\n                else if (key == 'CLASS') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRClass + ':' + val);\n                }\n                else if (key == 'SEQID') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRSeqID + ':' + val);\n                }\n                else if (key == 'ATTCHORD') {\n                    let attch = this.unpackStrings(val);\n                    if (attch != null)\n                        this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRAttchOrd + ':' + attch.join(','));\n                }\n                else if (key == 'HCOUNT') {\n                    let hyd = parseInt(val);\n                    if (hyd != 0)\n                        QueryUtil.setQueryAtomHydrogens(this.mol, a, [Math.max(hyd, 0)]);\n                }\n                else if (key == 'RBCNT') {\n                    let rbc = parseInt(val);\n                    if (rbc == -2)\n                        asdrawnRBC.push(a);\n                    else if (rbc != 0)\n                        QueryUtil.setQueryAtomRingBonds(this.mol, a, [Math.max(rbc, 0)]);\n                }\n                else if (key == 'SUBST') {\n                    let sub = parseInt(val);\n                    if (sub == -2)\n                        asdrawnSUB.push(a);\n                    else if (sub != 0)\n                        QueryUtil.setQueryAtomAdjacency(this.mol, a, [Math.max(sub, 0)]);\n                }\n                else if (key == 'UNSAT') {\n                    let uns = parseInt(val);\n                    if (uns == 1)\n                        QueryUtil.setQueryAtomUnsaturated(this.mol, a, true);\n                }\n            }\n        }\n        for (let b = 1; b <= numBonds; b++) {\n            let bits = bondBits[b - 1];\n            if (bits == null)\n                throw ERRPFX + 'bond definition missing for #' + b;\n            let type = parseInt(bits[1]), bfr = parseInt(bits[2]), bto = parseInt(bits[3]);\n            let order = type >= 1 && type <= 3 ? type : type == 9 || type == 10 ? 0 : 1;\n            this.mol.addBond(bfr, bto, order);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 10)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[b - 1] = true;\n                    }\n                }\n            }\n            let endpts = null;\n            let attach = null;\n            for (let i = 4; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CFG') {\n                    let dir = parseInt(val);\n                    this.mol.setBondType(b, dir == 1 ? Molecule.BONDTYPE_INCLINED :\n                        dir == 2 ? Molecule.BONDTYPE_UNKNOWN :\n                            dir == 3 ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_NORMAL);\n                }\n                else if (key == 'DISP') {\n                    if (val == 'COORD')\n                        this.mol.setBondOrder(b, 0);\n                }\n                else if (key == 'ENDPTS')\n                    endpts = this.unpackList(val);\n                else if (key == 'ATTACH')\n                    attach = val;\n            }\n            if (attach != null && endpts != null) {\n                if (attach == 'ALL')\n                    this.groupAttachAll.set(b, endpts);\n                else if (attach == 'ANY')\n                    this.groupAttachAny.set(b, endpts);\n            }\n        }\n        for (let atom of asdrawnRBC)\n            QueryUtil.setQueryAtomRingBonds(this.mol, atom, [this.countRingBonds(atom)]);\n        for (let atom of asdrawnSUB)\n            QueryUtil.setQueryAtomAdjacency(this.mol, atom, [this.countSubstitutions(atom)]);\n        this.postFix();\n        for (let n = 0; n < lineColl.length; n++) {\n            let line = lineColl[n];\n            while (n < lineColl.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineColl[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits[0].startsWith('MDLV30/STEABS')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoAbsolute = this.unpackList(bits[1].substring(5));\n            }\n            else if (bits[0].startsWith('MDLV30/STERAC')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRacemic.push(this.unpackList(bits[1].substring(6)));\n            }\n            else if (bits[0].startsWith('MDLV30/STEREL')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRelative.push(this.unpackList(bits[1].substring(6)));\n            }\n        }\n        let stereoGroup = new StereoGroup(this.mol);\n        for (let atoms of this.groupStereoRacemic)\n            stereoGroup.createRacemic(atoms);\n        for (let atoms of this.groupStereoRelative)\n            stereoGroup.createRelative(atoms);\n        stereoGroup.rewriteMolecule();\n        let superatoms = new Map();\n        for (let n = 0; n < lineSgroup.length; n++) {\n            let line = lineSgroup[n];\n            while (n < lineSgroup.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineSgroup[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            let idx = parseInt(bits[0]);\n            if (bits.length > 3 && idx > 0 && bits[1] == 'SUP') {\n                let sup = { atoms: [], name: null };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('XBONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('CLASS='))\n                        sup.templateClass = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('NATREPLACE='))\n                        sup.natReplace = this.withoutQuotes(bits[i].substring(11));\n                    else if (bits[i].startsWith('SAP=')) {\n                        const pts = this.unpackStrings(bits[i].substring(4));\n                        sup.attachPoints = [...((_a = sup.attachPoints) !== null && _a !== void 0 ? _a : []), ...pts];\n                    }\n                }\n                superatoms.set(idx, sup);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'MIX' || bits[1] == 'FOR') && parseInt(bits[2]) == idx) {\n                let mix = { index: idx, parent: 0, atoms: null, type: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        mix.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('PARENT='))\n                        mix.parent = parseInt(bits[i].substring(7));\n                }\n                this.groupMixtures.push(mix);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'SRU' || bits[1] == 'COP' || bits[1] == 'MUL' || bits[1] == 'DAT')) {\n                let sup = { atoms: [], name: null, bracketType: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('BONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('CONNECT='))\n                        sup.connectType = bits[i].substring(8);\n                    else if (bits[i].startsWith('XBCORR='))\n                        sup.bondConn = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('MULT='))\n                        sup.name = this.withoutQuotes(bits[i].substring(5));\n                    else if (bits[i].startsWith('FIELDNAME='))\n                        sup.name = this.withoutQuotes(bits[i].substring(10));\n                    else if (bits[i].startsWith('FIELDDATA='))\n                        sup.value = this.withoutQuotes(bits[i].substring(10));\n                }\n                superatoms.set(idx, sup);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        if (templateBlocks.length > 0) {\n            this.scsrTemplates = templateBlocks.map((lines) => this.parseV3000Template(lines));\n        }\n    }\n    parseQueryAtomList(mol, atom) {\n        let label = mol.atomElement(atom);\n        let not = false;\n        if (label.startsWith('NOT ')) {\n            label = label.substring(4);\n            not = true;\n        }\n        if (label.length < 2 || !label.startsWith('[') || !label.endsWith(']'))\n            return;\n        label = label.substring(1, label.length - 1);\n        let elements = label.split(',');\n        mol.setAtomElement(atom, '*');\n        if (!not)\n            QueryUtil.setQueryAtomElements(mol, atom, elements);\n        else\n            QueryUtil.setQueryAtomElementsNot(mol, atom, elements);\n    }\n    applySuperAtom(sup, residual) {\n        if (sup.name == null || Vec.isBlank(sup.atoms))\n            return;\n        let mask = Vec.booleanArray(true, this.mol.numAtoms);\n        for (let a of sup.atoms)\n            mask[a - 1] = false;\n        let name = sup.name;\n        let i;\n        while ((i = name.indexOf('\\\\S')) >= 0)\n            name = name.substring(0, i) + '{^' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\s')) >= 0)\n            name = name.substring(0, i) + '{' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\n')) >= 0)\n            name = name.substring(0, i) + '}' + name.substring(i + 2);\n        let [mod, abvAtom] = !sup.templateClass ? MolUtil.convertToAbbrevIndex(this.mol, mask, name) : [null, null];\n        if (mod == null) {\n            let keyval = {};\n            if (sup.bonds)\n                keyval['bonds'] = sup.bonds.join(' ');\n            if (sup.templateClass)\n                keyval['templateClass'] = sup.templateClass;\n            if (sup.natReplace)\n                keyval['natReplace'] = sup.natReplace;\n            if (sup.attachPoints)\n                keyval['attachPoints'] = sup.attachPoints.join(' ');\n            ForeignMolecule.markSgroupMultiAttach(this.mol, name, sup.atoms, keyval);\n            return;\n        }\n        this.mol = mod;\n        let map = Vec.maskMap(mask);\n        for (let res of residual) {\n            let subsumed = false;\n            for (let n = res.atoms.length - 1; n >= 0; n--) {\n                let atom = map[res.atoms[n] - 1] + 1;\n                if (atom == 0) {\n                    res.atoms = Vec.remove(res.atoms, n);\n                    subsumed = true;\n                }\n                else\n                    res.atoms[n] = atom;\n            }\n            if (subsumed)\n                res.atoms = Vec.sorted(Vec.append(res.atoms, abvAtom));\n        }\n    }\n    applyPolymerBlock(sup) {\n        if (sup.bracketType == 'MUL') {\n            let mult = parseInt(sup.name);\n            ForeignMolecule.markSgroupMultiRepeat(this.mol, mult, sup.atoms);\n            return;\n        }\n        if (sup.bracketType == 'DAT') {\n            if (sup.atoms != null)\n                ForeignMolecule.markSgroupData(this.mol, sup.name, sup.value, sup.unit, sup.query, sup.atoms);\n            return;\n        }\n        let poly = new PolymerBlock(this.mol);\n        let connect = null;\n        if (sup.connectType == null) { }\n        else if (sup.connectType == 'HT')\n            connect = PolymerBlockConnectivity.HeadToTail;\n        else if (sup.connectType == 'HH')\n            connect = PolymerBlockConnectivity.HeadToHead;\n        else if (sup.connectType == 'EU')\n            connect = PolymerBlockConnectivity.Random;\n        else\n            return;\n        let bondConn = null;\n        if (Vec.len(sup.bondConn) == 3) {\n            let b1 = sup.bondConn[0], b2 = sup.bondConn[2], b3 = sup.bondConn[1], b4 = 0;\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (n != b1 && n != b2 && n != b3) {\n                    let in1 = sup.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = sup.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                    if ((in1 && !in2) || (!in1 && in2)) {\n                        if (b4 > 0) {\n                            b4 = 0;\n                            break;\n                        }\n                        b4 = n;\n                    }\n                }\n            bondConn = [b1, b2, b3, b4];\n        }\n        else if (Vec.len(sup.bondConn) == 4) {\n            bondConn = sup.bondConn;\n        }\n        let unit = new PolymerBlockUnit(sup.atoms);\n        unit.connect = connect;\n        unit.bondConn = bondConn;\n        poly.createUnit(unit);\n    }\n    parseV3000Template(lines) {\n        let header = lines[0];\n        let bits = this.splitWithQuotes(header.substring('M  V30 TEMPLATE '.length));\n        let name = bits[1], natReplace = null;\n        for (let n = 2; n < bits.length; n++) {\n            if (bits[n].startsWith('NATREPLACE='))\n                natReplace = bits[n].substring(11);\n        }\n        lines[0] = '  0  0  0  0  0  0  0  0  0  0  0 V3000';\n        lines.push('M  END');\n        let mdl = new MDLMOLReader(lines.join('\\n'));\n        mdl.parseHeader = false;\n        mdl.parse();\n        return { name, natReplace, mol: mdl.mol };\n    }\n    withoutQuotes(str) {\n        if (str.length >= 2 && str.startsWith('\"') && str.endsWith('\"'))\n            return str.substring(1, str.length - 1);\n        return str;\n    }\n    splitWithQuotes(line) {\n        let segments = [];\n        let seg = '';\n        let depth = 0, quote = false;\n        for (let n = 0; n < line.length; n++) {\n            let ch = line.charAt(n);\n            if (ch == ' ' && depth == 0 && !quote) {\n                if (seg.length > 0)\n                    segments.push(seg);\n                seg = '';\n            }\n            else {\n                seg += ch;\n                if (ch == '\"')\n                    quote = !quote;\n                else if (ch == '(' || ch == '[')\n                    depth++;\n                else if (ch == ')' || ch == ']')\n                    depth--;\n            }\n        }\n        if (seg.length > 0)\n            segments.push(seg);\n        return segments;\n    }\n    unpackList(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = [];\n        for (let bit of str.split(' '))\n            values.push(parseInt(bit));\n        if (values[0] != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    unpackStrings(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = str.split(' ');\n        if (parseInt(values[0]) != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    countRingBonds(atom) {\n        let count = 0;\n        for (let b of this.mol.atomAdjBonds(atom))\n            if (this.mol.bondInRing(b))\n                count++;\n        return count;\n    }\n    countSubstitutions(atom) {\n        let count = 0;\n        for (let adj of this.mol.atomAdjList(atom))\n            if (this.mol.atomElement(adj) != 'H')\n                count++;\n        return count;\n    }\n}\nexport class MDLSDFReader {\n    constructor(strData) {\n        this.ds = new DataSheet();\n        this.upcastColumns = true;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        this.parseStream();\n        if (this.upcastColumns)\n            this.upcastStringColumns();\n        return this.ds;\n    }\n    parseStream() {\n        let ds = this.ds;\n        ds.appendColumn('Molecule', \"molecule\", 'Molecular structure');\n        let colName = -1;\n        let entry = [];\n        while (this.pos < this.lines.length) {\n            let line = this.lines[this.pos++];\n            if (!line.startsWith('$$$$')) {\n                entry.push(line);\n                continue;\n            }\n            let rn = ds.appendRow();\n            let molstr = '';\n            let pos = 0;\n            while (pos < entry.length) {\n                line = entry[pos];\n                if (line.startsWith('> '))\n                    break;\n                molstr += line + '\\n';\n                pos++;\n                if (line.startsWith('M\tEND'))\n                    break;\n            }\n            let mol = null, name = null;\n            try {\n                if (molstr.length > 0) {\n                    let mdl = new MDLMOLReader(molstr);\n                    mdl.parse();\n                    mol = mdl.mol;\n                    name = mdl.molName;\n                }\n            }\n            catch (ex) {\n            }\n            if (mol != null)\n                ds.setMolecule(rn, 0, mol);\n            if (name) {\n                if (colName < 0)\n                    colName = ds.appendColumn('Name', \"string\", 'Molecule name');\n                ds.setString(rn, colName, name);\n            }\n            if (rn == 0 && mol != null) {\n                let str1 = entry[0], str3 = entry[2];\n                if (str1.length >= 7 && str1.startsWith('$name=')) {\n                    ds.changeColumnName(0, str1.substring(6), ds.colDescr(0));\n                }\n                if (str3.length >= 8 && str3.startsWith('$title=')) {\n                    ds.title = str3.substring(7);\n                }\n            }\n            for (; pos + 1 < entry.length; pos += 3) {\n                let key = entry[pos], val = entry[pos + 1];\n                if (!key.startsWith('>'))\n                    continue;\n                let z = key.indexOf('<');\n                if (z < 0)\n                    continue;\n                key = key.substring(z + 1);\n                z = key.indexOf('>');\n                if (z < 0)\n                    continue;\n                key = key.substring(0, z);\n                if (key.length == 0)\n                    continue;\n                while (pos + 2 < entry.length && entry[pos + 2].length > 0) {\n                    val += '\\n' + entry[pos + 2];\n                    pos++;\n                }\n                let cn = ds.findColByName(key);\n                if (cn < 0)\n                    cn = ds.appendColumn(key, \"string\", '');\n                if (val.length == 0)\n                    ds.setToNull(rn, cn);\n                else\n                    ds.setString(rn, cn, val);\n            }\n            entry = [];\n        }\n        if (ds.numRows == 0)\n            this.ds = null;\n    }\n    upcastStringColumns() {\n        let ds = this.ds;\n        for (let i = 0; i < ds.numCols; i++)\n            if (ds.colType(i) == \"string\") {\n                let allnull = true, allreal = true, allint = true, allbool = true;\n                for (let j = 0; j < ds.numRows; j++) {\n                    if (!allreal && !allint && !allbool)\n                        break;\n                    if (ds.isNull(j, i))\n                        continue;\n                    allnull = false;\n                    let val = ds.getString(j, i);\n                    if (allbool) {\n                        let lc = val.toLowerCase();\n                        if (lc != 'true' && lc != 'false')\n                            allbool = false;\n                    }\n                    if (allint) {\n                        let int = parseInt(val);\n                        if (!isFinite(int) || int != parseFloat(val))\n                            allint = false;\n                    }\n                    if (allreal) {\n                        if (!isFinite(parseFloat(val)))\n                            allreal = false;\n                    }\n                }\n                if (allnull) { }\n                else if (allint)\n                    ds.changeColumnType(i, \"integer\");\n                else if (allreal)\n                    ds.changeColumnType(i, \"real\");\n                else if (allbool)\n                    ds.changeColumnType(i, \"boolean\");\n            }\n    }\n}\n//# sourceMappingURL=MDLReader.js.map","import { Vec } from '../util/Vec';\nimport { BondArtifact } from './BondArtifact';\nimport { ForeignMolecule, ForeignMoleculeTransient } from './ForeignMolecule';\nimport { MDLMOL_VALENCE } from './MDLReader';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity } from './PolymerBlock';\nimport { QueryUtil } from './QueryUtil';\nimport { StereoGroup } from './StereoGroup';\nconst VPFX = 'M  V30 ';\nexport class MDLMOLWriter {\n    constructor(mol) {\n        this.mol = mol;\n        this.includeHeader = true;\n        this.includeCounts = true;\n        this.includeEnd = true;\n        this.overallStereoAbsolute = true;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.polymerBlocks = true;\n        this.molName = '';\n        this.scsrTemplates = null;\n        this.sgroups = [];\n        this.lines = [];\n    }\n    write() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB();\n        return this.lines.join('\\n');\n    }\n    writeV3000() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB3000();\n        return this.lines.join('\\n');\n    }\n    writeEither() {\n        let triggered = StereoGroup.hasStereoGroups(this.mol) || this.mol.numAtoms >= 1000 || this.mol.numBonds >= 1000 || Vec.notBlank(this.scsrTemplates);\n        if (!triggered)\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (this.mol.bondOrder(n) == 0 && QueryUtil.queryBondOrders(this.mol, n) == null) {\n                    triggered = true;\n                    break;\n                }\n        if (triggered)\n            return this.writeV3000();\n        else\n            return this.write();\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n    writeCTAB() {\n        var _a;\n        let mol = this.mol = this.mol.clone();\n        mol.keepTransient = true;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let atomList1 = [], atomList2 = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let elements = null;\n            let logic = 'F';\n            elements = QueryUtil.queryAtomElements(mol, n);\n            if (elements == null) {\n                elements = QueryUtil.queryAtomElementsNot(mol, n);\n                logic = 'T';\n            }\n            if (elements == null)\n                continue;\n            mol.setAtomElement(n, 'L');\n            let line = this.intrpad(n, 3) + ' ' + logic + '  ' + this.intrpad(elements.length, 3);\n            for (let el of elements)\n                line += this.intrpad(Molecule.elementAtomicNumber(el), 4);\n            atomList1.push(line);\n            line = 'M  ALS ' + this.intrpad(n, 3) + this.intrpad(elements.length, 3) + ' ' + logic + ' ';\n            for (let el of elements)\n                line += this.pad(el, 4);\n            atomList2.push(line);\n        }\n        this.lines.push(this.intrpad(mol.numAtoms, 3) + this.intrpad(mol.numBonds, 3) + this.intrpad(atomList1.length, 3) +\n            '  0' + (this.overallStereoAbsolute ? '  1' : '  0') + '  0  0  0  0  0999 V2000');\n        let chgidx = [], chgval = [];\n        let radidx = [], radval = [];\n        let isoidx = [], isoval = [];\n        let rgpidx = [], rgpval = [];\n        let hydidx = [], hydval = [];\n        let zchidx = [], zchval = [];\n        let zboidx = [], zboval = [];\n        let rbcidx = [], rbcval = [];\n        let subidx = [], subval = [];\n        let unsidx = [], unsval = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let line = this.rpad(x.toFixed(4), 10) + this.rpad(y.toFixed(4), 10) + this.rpad(z.toFixed(4), 10);\n            let el = mol.atomElement(n);\n            let str = el;\n            if (str.length > 3)\n                str = str.substring(0, 3);\n            if (str.length > 1 && str.charAt(0) == 'R' && str.charAt(1) >= '0' && str.charAt(1) <= '9') {\n                rgpidx.push(n);\n                rgpval.push(parseInt(str.substring(1)));\n                str = 'R#';\n            }\n            while (str.length < 4)\n                str += ' ';\n            line += ' ' + str + '0';\n            let chg = mol.atomCharge(n), rad = mol.atomUnpaired(n), mapnum = mol.atomMapNum(n);\n            if (chg >= -3 && chg <= -1)\n                chg = 4 - chg;\n            else if (chg == 0 && rad == 2)\n                chg = 4;\n            else if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n);\n            let hyd = 0;\n            if (Vec.len(qhyd) == 1)\n                hyd = qhyd[0] + 1;\n            let val = this.mdlValence(mol, n, 15);\n            line += this.intrpad(chg, 3) + '  0' + this.intrpad(hyd, 3) + '  0' + this.intrpad(val, 3) + '  0  0  0' + this.intrpad(mapnum, 3) + '  0  0';\n            this.lines.push(line);\n            if (mol.atomCharge(n) != 0) {\n                chgidx.push(n);\n                chgval.push(mol.atomCharge(n));\n            }\n            if (this.enhancedFields) {\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) {\n                    hydidx.push(n);\n                    hydval.push(mol.atomHExplicit(n));\n                }\n            }\n            if (rad == 1) {\n                radidx.push(n);\n                radval.push(2);\n            }\n            if (rad == 2) {\n                radidx.push(n);\n                radval.push(1);\n            }\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                isoidx.push(n);\n                isoval.push(mol.atomIsotope(n));\n            }\n            let qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qrbc) == 1) {\n                rbcidx.push(n);\n                rbcval.push(qrbc[0] == 0 ? -1 : qrbc[0]);\n            }\n            if (Vec.len(qsub) == 1) {\n                subidx.push(n);\n                subval.push(qsub[0] == 0 ? -1 : qsub[0]);\n            }\n            if (quns == true) {\n                unsidx.push(n);\n                unsval.push(1);\n            }\n        }\n        let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let order = mol.bondOrder(n), type = order;\n            let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n            if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                type = 4;\n            else if (Vec.equals(qbond, [1, 2]))\n                type = 5;\n            else if (Vec.equals(qbond, [-1, 1]))\n                type = 6;\n            else if (Vec.equals(qbond, [-1, 2]))\n                type = 7;\n            else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                type = 8;\n            else if (type > 3)\n                type = 3;\n            let stereo = mol.bondType(n);\n            if (stereo == Molecule.BONDTYPE_NORMAL) { }\n            else if (stereo == Molecule.BONDTYPE_INCLINED) {\n                stereo = 1;\n            }\n            else if (stereo == Molecule.BONDTYPE_DECLINED) {\n                stereo = 6;\n            }\n            else if (stereo == Molecule.BONDTYPE_UNKNOWN) {\n                if (type == 1)\n                    stereo = 4;\n                else\n                    stereo = 3;\n            }\n            else\n                stereo = 0;\n            let line = this.intrpad(mol.bondFrom(n), 3) + this.intrpad(mol.bondTo(n), 3) +\n                this.intrpad(type, 3) + this.intrpad(stereo, 3) + '  0  0  0';\n            this.lines.push(line);\n            if (this.enhancedFields) {\n                if ((order < 1 || order > 3) || type != order && Vec.isBlank(qbond)) {\n                    zboidx.push(n);\n                    zboval.push(order);\n                }\n            }\n        }\n        this.lines.push(...atomList1);\n        this.lines.push(...atomList2);\n        this.writeMBlockPair('CHG', chgidx, chgval);\n        this.writeMBlockPair('RAD', radidx, radval);\n        this.writeMBlockPair('ISO', isoidx, isoval);\n        this.writeMBlockPair('RGP', rgpidx, rgpval);\n        this.writeMBlockPair('HYD', hydidx, hydval);\n        this.writeMBlockPair('ZCH', zchidx, zchval);\n        this.writeMBlockPair('ZBO', zboidx, zboval);\n        this.writeMBlockPair('RBC', rbcidx, rbcval);\n        this.writeMBlockPair('SUB', subidx, subval);\n        this.writeMBlockPair('UNS', unsidx, unsval);\n        if (this.enhancedFields) {\n            let artifacts = new BondArtifact(this.mol);\n            let idx = 0;\n            for (let path of artifacts.getResPaths())\n                this.writeMBlockFlat('ZPA', ++idx, path.atoms);\n            for (let ring of artifacts.getResRings())\n                this.writeMBlockFlat('ZRI', ++idx, ring.atoms);\n            for (let arene of artifacts.getArenes())\n                this.writeMBlockFlat('ZAR', ++idx, Vec.prepend(arene.atoms, arene.centre));\n        }\n        let inSgroup = Vec.booleanArray(false, mol.numAtoms);\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            for (let n of sg.atoms)\n                inSgroup[n - 1] = true;\n            let sidx = this.intrpad(s + 1, 4);\n            this.lines.push('M  STY  1' + sidx + ' ' + sg.type);\n            for (let n = 0; n < sg.atoms.length; n += 15) {\n                let sz = Math.min(sg.atoms.length - n, 15);\n                let line = 'M  SAL' + sidx + this.intrpad(sz, 3);\n                for (let i = 0; i < sz; i++)\n                    line += this.intrpad(sg.atoms[n + i], 4);\n                this.lines.push(line);\n            }\n            if (sg.type != 'DAT')\n                this.lines.push('M  SMT' + sidx + ' ' + sg.name);\n            if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                for (let n = 0; n < unit; n += 15) {\n                    let sz = Math.min(unit - n, 15);\n                    let line = 'M  SPA' + sidx + this.intrpad(sz, 3);\n                    for (let i = 0; i < sz; i++)\n                        line += this.intrpad(sg.atoms[n + i], 4);\n                    this.lines.push(line);\n                }\n                if (sg.parent > 0)\n                    this.lines.push('M  SPL    1' + sidx + this.intrpad(sg.parent, 4));\n            }\n            if (sg.type == 'DAT') {\n                this.lines.push('M  SDT' + sidx + ' ' + this.pad(sg.name, 32) + this.pad(sg.unit, 20) + sg.query);\n                this.lines.push('M  SED' + sidx + ' ' + sg.value);\n            }\n        }\n        if (this.polymerBlocks)\n            this.encodePolymerBlocks(this.sgroups.length);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n).length > 2) {\n                this.lines.push('A  ' + this.intrpad(n, 3));\n                this.lines.push(mol.atomElement(n));\n            }\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    writeMBlockPair(token, idx, val) {\n        const sz = idx.length;\n        for (let i = 0; i < sz; i += 8) {\n            let count = Math.min(8, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(idx[i + j], 4) + this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlat(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3) + this.intrpad(idx, 4);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlatIdxFirst(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(idx, 4) + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    intrpad(num, sz) {\n        return this.rpad(num.toString(), sz);\n    }\n    rpad(str, sz) {\n        while (str.length < sz)\n            str = ' ' + str;\n        return str;\n    }\n    pad(str, sz) {\n        while (str.length < sz)\n            str += ' ';\n        return str;\n    }\n    mdlValence(mol, atom, zeroVal) {\n        let marked = ForeignMolecule.noteExplicitValence(mol, atom);\n        if (marked != null)\n            return marked > 0 ? marked : zeroVal;\n        let hyd = mol.atomHydrogens(atom), el = mol.atomElement(atom);\n        let options = MDLMOL_VALENCE[el];\n        if (options == null && hyd == 0)\n            return 0;\n        let chg = mol.atomCharge(atom);\n        let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n        let bondSum = 0;\n        for (let b of mol.atomAdjBonds(atom))\n            bondSum += mol.bondOrder(b);\n        let nativeVal = chgmod + hyd + bondSum;\n        if (options === null || options === void 0 ? void 0 : options.includes(nativeVal))\n            return 0;\n        let val = nativeVal - chgmod;\n        return val <= 0 || val > 14 ? zeroVal : val;\n    }\n    partialAbbrevExpansion() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                let frag = MolUtil.getAbbrev(mol, n);\n                if (frag == null || mol.atomAdjCount(n) != 1) {\n                    MolUtil.clearAbbrev(mol, n);\n                    continue;\n                }\n                if (MolUtil.hasAnyAbbrev(frag)) {\n                    MolUtil.expandAbbrevs(frag, true);\n                    MolUtil.setAbbrev(mol, n, frag);\n                }\n                let order = mol.bondOrder(mol.atomAdjBonds(n)[0]);\n                if (frag.atomAdjCount(1) == 1 && order == frag.bondOrder(frag.atomAdjBonds(1)[0]))\n                    continue;\n                MolUtil.expandOneAbbrev(mol, n, true);\n                n--;\n            }\n    }\n    prepareSgroups() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomMapNum(n) < 0)\n                mol.setAtomMapNum(n, 0);\n        let next = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                this.sgroups.push({ type: 'SUP', name: mol.atomElement(n), atoms: null });\n                let mask = MolUtil.expandOneAbbrev(mol, n, true);\n                if (mask == null)\n                    continue;\n                next--;\n                for (let i = 0; i < mask.length; i++)\n                    if (mask[i])\n                        mol.setAtomMapNum(i + 1, next);\n                n--;\n            }\n        for (let idx = -1, p = 0; idx >= next; idx--, p++) {\n            let atoms = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) == idx) {\n                    atoms.push(n);\n                    mol.setAtomMapNum(n, 0);\n                }\n            this.sgroups[p].atoms = atoms;\n        }\n        for (let ma of ForeignMolecule.noteAllSgroupMultiAttach(mol)) {\n            let sg = { type: 'SUP', name: ma.name, atoms: ma.atoms };\n            let str = ma.keyval['bonds'];\n            if (str)\n                sg.bonds = str.split(' ').map((v) => parseInt(v));\n            sg.templateClass = ma.keyval['templateClass'];\n            sg.natReplace = ma.keyval['natReplace'];\n            str = ma.keyval['attachPoints'];\n            if (str)\n                sg.attachPoints = str.split(' ');\n            this.sgroups.push(sg);\n        }\n        for (let mr of ForeignMolecule.noteAllSgroupMultiRepeat(mol))\n            this.sgroups.push({ type: 'MUL', name: mr.mult.toString(), atoms: mr.atoms });\n        for (let dat of ForeignMolecule.noteAllSgroupData(mol))\n            this.sgroups.push({ type: 'DAT', name: dat.name, value: dat.value, unit: dat.unit, query: dat.query, atoms: dat.atoms });\n        for (let n = 0; n < this.sgroups.length; n++) {\n            let sg = this.sgroups[n];\n            if (sg.type != 'MUL')\n                continue;\n            let bestIdx = -1, bestSize = Number.MAX_SAFE_INTEGER;\n            skip: for (let i = 0; i < this.sgroups.length; i++)\n                if (i != n) {\n                    let look = this.sgroups[i];\n                    if (look.type != 'MUL' || look.atoms.length >= bestSize)\n                        continue;\n                    for (let a of sg.atoms)\n                        if (!look.atoms.includes(a))\n                            continue skip;\n                    bestIdx = i;\n                    bestSize = look.atoms.length;\n                }\n            if (bestIdx >= 0)\n                sg.parent = bestIdx + 1;\n        }\n    }\n    encodePolymerBlocks(idx) {\n        let polymers = new PolymerBlock(this.mol);\n        for (let id of polymers.getIDList()) {\n            let unit = polymers.getUnit(id);\n            let sidx = this.intrpad(++idx, 4);\n            this.lines.push('M  STY  1' + sidx + ' SRU');\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.lines.push('M  SCN  1' + sidx + ' HT ');\n            else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.lines.push('M  SCN  1' + sidx + ' HH ');\n            else if (unit.connect == PolymerBlockConnectivity.Random)\n                this.lines.push('M  SCN  1' + sidx + ' EU ');\n            this.writeMBlockFlatIdxFirst('SAL', idx, unit.atoms);\n            let bonds = null;\n            for (let n = 1; n <= this.mol.numBonds; n++) {\n                let fl1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, fl2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                if ((fl1 && !fl2) || (!fl1 && fl2))\n                    bonds = Vec.append(bonds, n);\n            }\n            if (bonds != null)\n                this.writeMBlockFlatIdxFirst('SBL', idx, bonds);\n            if (Vec.len(unit.bondConn) == 4) {\n                let bcrs = [unit.bondConn[0], unit.bondConn[2], unit.bondConn[1]];\n                this.writeMBlockFlatIdxFirst('CRS', idx, bcrs);\n            }\n            this.lines.push('M  SMT' + sidx + ' n');\n        }\n    }\n    writeCTAB3000() {\n        var _a;\n        let mol = this.mol;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            mol = this.mol = mol.clone();\n            mol.keepTransient = true;\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let sgroupText = this.populateV3000Sgroups();\n        if (this.includeCounts)\n            this.lines.push('  0  0  0     0  0            999 V3000');\n        this.lines.push(VPFX + 'BEGIN CTAB');\n        this.lines.push(VPFX + `COUNTS ${mol.numAtoms} ${mol.numBonds} ${sgroupText.length} 0 ${this.overallStereoAbsolute ? 1 : 0}`);\n        this.lines.push(VPFX + 'BEGIN ATOM');\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let label = mol.atomElement(n);\n            let qel = QueryUtil.queryAtomElements(mol, n);\n            if (qel != null)\n                label = '[' + qel.join(',') + ']';\n            else {\n                qel = QueryUtil.queryAtomElementsNot(mol, n);\n                if (qel != null)\n                    label = 'NOT [' + qel.join(',') + ']';\n            }\n            if (label.includes(' '))\n                label = `\"${label}\"`;\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let mapnum = mol.atomMapNum(n), chg = mol.atomCharge(n), unp = mol.atomUnpaired(n);\n            let isotope = mol.atomIsotope(n), val = this.mdlValence(mol, n, -1);\n            let line = `${VPFX}${n} ${label} ${x.toFixed(4)} ${y.toFixed(4)} ${z.toFixed(4)} ${mapnum}`;\n            if (chg != 0)\n                line += ' CHG=' + chg;\n            if (unp == 1)\n                line += ' RAD=2';\n            else if (unp == 2)\n                line += ' RAD=1';\n            if (isotope != 0)\n                line += ' MASS=' + isotope;\n            if (val != 0)\n                line += ' VAL=' + val;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n), qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qhyd) == 1)\n                line += ' HCOUNT=' + (qhyd[0] == 0 ? -1 : qhyd[0]);\n            if (Vec.len(qrbc) == 1)\n                line += ' RBCNT=' + (qrbc[0] == 0 ? -1 : qrbc[0]);\n            if (Vec.len(qsub) == 1)\n                line += ' SUBST=' + (qsub[0] == 0 ? -1 : qsub[0]);\n            if (quns == true)\n                line += ' UNSAT=1';\n            for (let trans of mol.atomTransient(n)) {\n                if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRClass))\n                    line += ' CLASS=' + trans.substring(ForeignMoleculeTransient.AtomSCSRClass.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRSeqID))\n                    line += ' SEQID=' + trans.substring(ForeignMoleculeTransient.AtomSCSRSeqID.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRAttchOrd)) {\n                    let bits = trans.substring(ForeignMoleculeTransient.AtomSCSRAttchOrd.length + 1).split(',');\n                    line += ' ATTCHORD=' + this.packV3000Strings(bits);\n                }\n            }\n            this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END ATOM');\n        if (mol.numBonds > 0) {\n            this.lines.push(VPFX + 'BEGIN BOND');\n            let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n            let maskHBond = ForeignMolecule.noteZeroHydrogenBonds(mol);\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let order = mol.bondOrder(n), type = order;\n                let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n                if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                    type = 4;\n                else if (Vec.equals(qbond, [1, 2]))\n                    type = 5;\n                else if (Vec.equals(qbond, [-1, 1]))\n                    type = 6;\n                else if (Vec.equals(qbond, [-1, 2]))\n                    type = 7;\n                else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                    type = 8;\n                else if (type == 0) {\n                    if (!maskHBond[n - 1])\n                        type = 9;\n                    else\n                        type = 10;\n                }\n                else if (type > 3)\n                    type = 3;\n                let stereo = mol.bondType(n);\n                let line = `${VPFX}${n} ${type} ${bfr} ${bto}`;\n                if (stereo == Molecule.BONDTYPE_INCLINED)\n                    line += ' CFG=1';\n                else if (stereo == Molecule.BONDTYPE_DECLINED)\n                    line += ' CFG=3';\n                else if (stereo == Molecule.BONDTYPE_UNKNOWN)\n                    line += ' CFG=2';\n                if (order == 0 && !maskHBond[n - 1])\n                    line += ' DISP=COORD';\n                this.lines.push(line);\n            }\n            this.lines.push(VPFX + 'END BOND');\n        }\n        if (sgroupText.length > 0) {\n            this.lines.push(VPFX + 'BEGIN SGROUP');\n            this.lines.push(...sgroupText);\n            this.lines.push(VPFX + 'END SGROUP');\n        }\n        let collections = [];\n        let stereoGroup = new StereoGroup(mol);\n        let racidx = 0, relidx = 0;\n        for (let atoms of stereoGroup.getRacemicAtoms())\n            collections.push(VPFX + 'MDLV30/STERAC' + (++racidx) + ' ATOMS=' + this.packV3000List(atoms));\n        for (let atoms of stereoGroup.getRelativeAtoms())\n            collections.push(VPFX + 'MDLV30/STEREL' + (++relidx) + ' ATOMS=' + this.packV3000List(atoms));\n        if (collections.length > 0) {\n            this.lines.push(VPFX + 'BEGIN COLLECTION');\n            this.lines.push(...collections);\n            this.lines.push(VPFX + 'END COLLECTION');\n        }\n        this.lines.push(VPFX + 'END CTAB');\n        if (Vec.notBlank(this.scsrTemplates))\n            this.populateSCSRTemplates();\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    populateV3000Sgroups() {\n        let mol = this.mol;\n        let lines = [];\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            let sid = lines.length + 1;\n            let txt = `${VPFX}${sid} ${sg.type} 0`;\n            if (sg.type == 'SUP') {\n                txt += ' LABEL=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                if (sg.bonds)\n                    txt += ' XBONDS=' + this.packV3000List(sg.bonds);\n                if (sg.templateClass)\n                    txt += ' CLASS=' + sg.templateClass;\n                if (sg.natReplace)\n                    txt += ' NATREPLACE=' + sg.natReplace;\n                if (sg.attachPoints) {\n                    for (let n = 0; n + 2 < sg.attachPoints.length; n += 3) {\n                        let v1 = sg.attachPoints[n], v2 = sg.attachPoints[n + 1], v3 = sg.attachPoints[n + 2];\n                        txt += ` SAP=(3 ${v1} ${v2} ${v3})`;\n                    }\n                }\n            }\n            else if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                txt += ' MULT=' + sg.name;\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' PATOMS=' + this.packV3000List(sg.atoms.slice(0, unit));\n                if (sg.parent > 0)\n                    txt += ' PARENT=' + sg.parent;\n            }\n            else if (sg.type == 'DAT') {\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' FIELDNAME=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' FIELDDATA=' + (sg.value.includes(' ') ? `\"${sg.value}\"` : sg.value);\n            }\n            lines.push(txt);\n        }\n        if (this.polymerBlocks) {\n            let polymers = new PolymerBlock(mol);\n            for (let id of polymers.getIDList()) {\n                let sid = lines.length + 1;\n                let unit = polymers.getUnit(id);\n                let txt = `${VPFX}${sid} SRU 0`;\n                txt += ' ATOMS=' + this.packV3000List(unit.atoms);\n                if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                    txt += ' CONNECT=HT';\n                else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                    txt += ' CONNECT=HH';\n                else if (unit.connect == PolymerBlockConnectivity.Random)\n                    txt += ' CONNECT=EU';\n                let bonds = [];\n                for (let n = 1; n <= mol.numBonds; n++) {\n                    let fl1 = unit.atoms.includes(mol.bondFrom(n)), fl2 = unit.atoms.includes(mol.bondTo(n));\n                    if ((fl1 && !fl2) || (!fl1 && fl2))\n                        bonds.push(n);\n                }\n                if (bonds.length > 0)\n                    txt += ' BONDS=' + this.packV3000List(bonds);\n                if (unit.bondConn != null)\n                    txt += ' XBCORR=' + this.packV3000List(unit.bondConn);\n                lines.push(txt);\n            }\n        }\n        return lines;\n    }\n    populateSCSRTemplates() {\n        this.lines.push(VPFX + 'BEGIN TEMPLATE');\n        for (let n = 0; n < this.scsrTemplates.length; n++) {\n            var defn = this.scsrTemplates[n];\n            let line = VPFX + 'TEMPLATE ' + (n + 1) + ' ' + defn.name;\n            if (defn.natReplace)\n                line += ' NATREPLACE=' + defn.natReplace;\n            this.lines.push(line);\n            var tmdl = new MDLMOLWriter(defn.mol);\n            tmdl.includeHeader = false;\n            tmdl.includeCounts = false;\n            tmdl.includeEnd = false;\n            let molfile = tmdl.writeV3000();\n            for (line of molfile.trimEnd().split('\\n'))\n                this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END TEMPLATE');\n    }\n    packV3000List(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n    packV3000Strings(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n}\nexport class MDLSDFWriter {\n    constructor(ds) {\n        this.ds = ds;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.lines = [];\n    }\n    write() {\n        let ds = this.ds, lines = this.lines;\n        let colMol = this.ds.firstColOfType(\"molecule\");\n        for (let i = 0; i < ds.numRows; i++) {\n            let mol = colMol < 0 ? null : ds.getMolecule(i, colMol);\n            if (mol != null) {\n                let wtr = new MDLMOLWriter(mol);\n                wtr.enhancedFields = this.enhancedFields;\n                wtr.chargeSeparate = this.chargeSeparate;\n                wtr.abbrevSgroups = this.abbrevSgroups;\n                let molstr = wtr.write();\n                lines.push(molstr);\n            }\n            for (let j = 0; j < ds.numCols; j++)\n                if (j != colMol && ds.notNull(i, j)) {\n                    let ct = ds.colType(j);\n                    let val = '';\n                    if (ct == \"string\")\n                        val = ds.getString(i, j);\n                    else if (ct == \"integer\")\n                        val = ds.getInteger(i, j).toString();\n                    else if (ct == \"real\")\n                        val = ds.getReal(i, j).toString();\n                    else if (ct == \"boolean\")\n                        val = ds.getBoolean(i, j) ? 'true' : 'false';\n                    if (val != '') {\n                        lines.push('> <' + ds.colName(j) + '>');\n                        lines.push(val);\n                        lines.push('');\n                    }\n                }\n            lines.push('$$$$');\n        }\n        return lines.join('\\n');\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n}\n//# sourceMappingURL=MDLWriter.js.map","import { MDLMOLReader } from './MDLReader';\nimport { MDLMOLWriter } from './MDLWriter';\nimport { Molecule } from './Molecule';\nexport class MoleculeStream {\n    static readUnknown(strData) {\n        if (strData.startsWith('\"')) {\n            try {\n                let jsonStr = JSON.parse(strData);\n                let mol = MoleculeStream.readNative(jsonStr);\n                if (mol)\n                    return mol;\n            }\n            catch (ex) { }\n        }\n        let mol = MoleculeStream.readNative(strData);\n        if (mol)\n            return mol;\n        try {\n            mol = MoleculeStream.readMDLMOL(strData);\n        }\n        catch (e) { }\n        return mol;\n    }\n    static readNative(strData) {\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        if (lines.length < 2)\n            return null;\n        if (!lines[0].startsWith('SketchEl!') && lines.length >= 4 && lines[3].indexOf('V2000') >= 0) {\n            let i = strData.indexOf('SketchEl!');\n            if (i < 0)\n                return null;\n            lines = strData.substring(i).split(/r?\\n/);\n        }\n        let hdr = lines[0].match(/^SketchEl\\!\\((\\d+)\\,(\\d+)\\)/);\n        if (!hdr)\n            return null;\n        let numAtoms = parseInt(hdr[1]), numBonds = parseInt(hdr[2]);\n        if (lines.length < 2 + numAtoms + numBonds)\n            return null;\n        if (!lines[1 + numAtoms + numBonds].match(/^!End/))\n            return null;\n        for (let n = 0; n < numAtoms; n++) {\n            let bits = lines[1 + n].split(/[=,;]/);\n            let num = mol.addAtom(MoleculeStream.skUnescape(bits[0]), parseFloat(bits[1]), parseFloat(bits[2]), parseInt(bits[3]), parseInt(bits[4]));\n            let extra = [], trans = [];\n            for (let i = 5; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'i') { }\n                else if (bits[i].charAt(0) == 'e')\n                    mol.setAtomHExplicit(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'm')\n                    mol.setAtomIsotope(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'n')\n                    mol.setAtomMapNum(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'z') {\n                    mol.setAtomZ(num, parseFloat(bits[i].substring(1)));\n                    mol.setIs3D(true);\n                }\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setAtomExtra(num, extra);\n            mol.setAtomTransient(num, trans);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            let bits = lines[1 + numAtoms + n].split(/[=,]/);\n            let frto = bits[0].split('-');\n            let bfr = parseInt(frto[0].trim()), bto = parseInt(frto[1].trim());\n            if (bfr == bto)\n                continue;\n            let num = mol.addBond(bfr, bto, parseInt(bits[1]), parseInt(bits[2]));\n            let extra = new Array(), trans = new Array();\n            for (let i = 3; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setBondExtra(num, extra);\n            mol.setBondTransient(num, trans);\n        }\n        mol.keepTransient = false;\n        return mol;\n    }\n    static writeNative(mol) {\n        let ret = 'SketchEl!(' + mol.numAtoms + ',' + mol.numBonds + ')\\n';\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = mol.atomX(n), y = mol.atomY(n), charge = mol.atomCharge(n), unpaired = mol.atomUnpaired(n);\n            let hy = mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN ? ('e' + mol.atomHExplicit(n)) : ('i' + mol.atomHydrogens(n));\n            ret += MoleculeStream.skEscape(el) + '=' + x.toFixed(4) + ',' + y.toFixed(4) + ';' + charge + ',' + unpaired + ',' + hy;\n            if (mol.is3D())\n                ret += ',z' + mol.atomZ(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                ret += ',m' + mol.atomIsotope(n);\n            if (mol.atomMapNum(n) > 0)\n                ret += ',n' + mol.atomMapNum(n);\n            ret += MoleculeStream.skEncodeExtra(mol.atomExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.atomTransient(n));\n            ret += '\\n';\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            ret += mol.bondFrom(n) + '-' + mol.bondTo(n) + '=' + mol.bondOrder(n) + ',' + mol.bondType(n);\n            ret += MoleculeStream.skEncodeExtra(mol.bondExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.bondTransient(n));\n            ret += '\\n';\n        }\n        ret += '!End\\n';\n        return ret;\n    }\n    static readMDLMOL(strData) {\n        let src = new MDLMOLReader(strData);\n        src.parseHeader = true;\n        src.parse();\n        return src.mol;\n    }\n    static writeMDLMOL(mol) {\n        return new MDLMOLWriter(mol).write();\n    }\n    static skUnescape(str) {\n        let ret = '', match;\n        while (match = str.match(/^(.*?)\\\\([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(.*)/)) {\n            ret += match[1] + String.fromCharCode(parseInt('0x' + match[2]));\n            str = match[3];\n        }\n        return ret + str;\n    }\n    static skEscape(str) {\n        let ret = '';\n        for (let n = 0; n < str.length; n++) {\n            let ch = str.charAt(n), code = str.charCodeAt(n);\n            if (code <= 32 || code > 127 || ch == '\\\\' || ch == ',' || ch == ';' || ch == '=') {\n                let hex = (code & 0xFFFF).toString(16).toUpperCase();\n                ret += '\\\\';\n                for (let i = 4 - hex.length; i > 0; i--)\n                    ret += '0';\n                ret += hex;\n            }\n            else\n                ret += ch;\n        }\n        return ret;\n    }\n    static skEncodeExtra(extra) {\n        let ret = '';\n        for (let n = 0; n < extra.length; n++)\n            ret += ',' + MoleculeStream.skEscape(extra[n]);\n        return ret;\n    }\n}\n//# sourceMappingURL=MoleculeStream.js.map","import { Box } from '../util/Geom';\nimport { deepClone } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { MoleculeStream } from './MoleculeStream';\nclass Atom {\n}\nclass Bond {\n}\nclass Molecule {\n    constructor() {\n        this.atoms = [];\n        this.bonds = [];\n        this.hasZCoord = false;\n        this.keepTransient = false;\n        this.hasTransient = false;\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    clone() {\n        let dup = new Molecule();\n        dup.atoms = deepClone(this.atoms);\n        dup.bonds = deepClone(this.bonds);\n        dup.hasZCoord = this.hasZCoord;\n        dup.keepTransient = this.keepTransient;\n        dup.hasTransient = this.hasTransient;\n        dup.graph = this.graph;\n        dup.graphBond = this.graphBond;\n        dup.ringID = this.ringID;\n        dup.compID = this.compID;\n        dup.ring3 = this.ring3;\n        dup.ring4 = this.ring4;\n        dup.ring5 = this.ring5;\n        dup.ring6 = this.ring6;\n        dup.ring7 = this.ring7;\n        return dup;\n    }\n    static fromString(strData) { return MoleculeStream.readNative(strData); }\n    toString() { return MoleculeStream.writeNative(this); }\n    append(frag) {\n        let base = this.atoms.length;\n        for (let n = 1; n <= frag.numAtoms; n++) {\n            let num = this.addAtom(frag.atomElement(n), frag.atomX(n), frag.atomY(n), frag.atomCharge(n), frag.atomUnpaired(n));\n            this.setAtomIsotope(num, frag.atomIsotope(n));\n            this.setAtomHExplicit(num, frag.atomHExplicit(n));\n            this.setAtomMapNum(num, frag.atomMapNum(n));\n            this.setAtomExtra(num, frag.atomExtra(n));\n            this.setAtomTransient(num, frag.atomTransient(n));\n        }\n        for (let n = 1; n <= frag.numBonds; n++) {\n            let num = this.addBond(frag.bondFrom(n) + base, frag.bondTo(n) + base, frag.bondOrder(n), frag.bondType(n));\n            this.setBondExtra(num, frag.bondExtra(n));\n            this.setBondTransient(num, frag.bondTransient(n));\n        }\n        this.trashTransient();\n    }\n    get numAtoms() { return this.atoms.length; }\n    getAtom(idx) {\n        if (idx < 1 || idx > this.atoms.length)\n            throw new Error(`Molecule.getAtom: index ${idx} out of range (#atoms=${this.atoms.length})`);\n        return this.atoms[idx - 1];\n    }\n    atomElement(idx) { return this.getAtom(idx).element; }\n    atomX(idx) { return this.getAtom(idx).x; }\n    atomY(idx) { return this.getAtom(idx).y; }\n    atomCharge(idx) { return this.getAtom(idx).charge; }\n    atomUnpaired(idx) { return this.getAtom(idx).unpaired; }\n    atomIsotope(idx) { return this.getAtom(idx).isotope; }\n    atomHExplicit(idx) { return this.getAtom(idx).hExplicit; }\n    atomMapNum(idx) { return this.getAtom(idx).mapNum; }\n    atomExtra(idx) { return this.getAtom(idx).extra.slice(0); }\n    atomTransient(idx) { return this.getAtom(idx).transient.slice(0); }\n    get numBonds() { return this.bonds.length; }\n    getBond(idx) {\n        if (idx < 1 || idx > this.bonds.length)\n            throw new Error(`Molecule.getBond: index ${idx} out of range (#bonds=${this.bonds.length})`);\n        return this.bonds[idx - 1];\n    }\n    bondFrom(idx) { return this.getBond(idx).from; }\n    bondTo(idx) { return this.getBond(idx).to; }\n    bondOrder(idx) { return this.getBond(idx).order; }\n    bondType(idx) { return this.getBond(idx).type; }\n    bondExtra(idx) { return this.getBond(idx).extra.slice(0); }\n    bondTransient(idx) { return this.getBond(idx).transient.slice(0); }\n    bondFromTo(idx) { let b = this.getBond(idx); return [b.from, b.to]; }\n    addAtom(element, x, y, charge = 0, unpaired = 0) {\n        let a = new Atom();\n        a.element = element;\n        a.x = x;\n        a.y = y;\n        a.charge = charge;\n        a.unpaired = unpaired;\n        a.isotope = Molecule.ISOTOPE_NATURAL;\n        a.hExplicit = Molecule.HEXPLICIT_UNKNOWN;\n        a.mapNum = 0;\n        a.extra = [];\n        a.transient = [];\n        this.atoms.push(a);\n        this.trashTransient();\n        this.trashGraph();\n        return this.atoms.length;\n    }\n    setAtomElement(idx, element) {\n        this.getAtom(idx).element = element;\n        this.trashTransient();\n    }\n    setAtomPos(idx, x, y, z) {\n        let a = this.getAtom(idx);\n        a.x = x;\n        a.y = y;\n        a.z = z == null ? 0 : z;\n        this.trashTransient();\n    }\n    setAtomX(idx, x) {\n        this.getAtom(idx).x = x;\n        this.trashTransient();\n    }\n    setAtomY(idx, y) {\n        this.getAtom(idx).y = y;\n        this.trashTransient();\n    }\n    setAtomCharge(idx, charge) {\n        this.getAtom(idx).charge = charge;\n        this.trashTransient();\n    }\n    setAtomUnpaired(idx, unpaired) {\n        this.getAtom(idx).unpaired = unpaired;\n        this.trashTransient();\n    }\n    setAtomIsotope(idx, isotope) {\n        this.getAtom(idx).isotope = isotope;\n        this.trashTransient();\n    }\n    setAtomHExplicit(idx, hExplicit) {\n        this.getAtom(idx).hExplicit = hExplicit;\n        this.trashTransient();\n    }\n    setAtomMapNum(idx, mapNum) {\n        this.getAtom(idx).mapNum = mapNum;\n        this.trashTransient();\n    }\n    setAtomExtra(idx, extra) {\n        this.getAtom(idx).extra = extra.slice(0);\n    }\n    setAtomTransient(idx, transi) {\n        this.getAtom(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    swapAtoms(a1, a2) {\n        let a = this.atoms[a1 - 1];\n        this.atoms[a1 - 1] = this.atoms[a2 - 1];\n        this.atoms[a2 - 1] = a;\n        for (let n = 0; n < this.bonds.length; n++) {\n            let b = this.bonds[n];\n            if (b.from == a2)\n                b.from = a1;\n            else if (b.from == a1)\n                b.from = a2;\n            if (b.to == a2)\n                b.to = a1;\n            else if (b.to == a1)\n                b.to = a2;\n        }\n        this.trashGraph();\n    }\n    addBond(from, to, order, type = Molecule.BONDTYPE_NORMAL) {\n        let b = new Bond();\n        b.from = from;\n        b.to = to;\n        b.order = order;\n        b.type = type;\n        b.extra = [];\n        b.transient = [];\n        this.bonds.push(b);\n        this.trashTransient();\n        this.trashGraph();\n        return this.bonds.length;\n    }\n    setBondFrom(idx, bfr) {\n        this.getBond(idx).from = bfr;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondTo(idx, to) {\n        this.getBond(idx).to = to;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondFromTo(idx, bfr, bto) {\n        this.getBond(idx).from = bfr;\n        this.getBond(idx).to = bto;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondOrder(idx, order) {\n        this.getBond(idx).order = order;\n        this.trashTransient();\n    }\n    setBondType(idx, type) {\n        this.getBond(idx).type = type;\n        this.trashTransient();\n    }\n    setBondExtra(idx, extra) {\n        this.getBond(idx).extra = extra.slice(0);\n    }\n    setBondTransient(idx, transi) {\n        this.getBond(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    deleteAtomAndBonds(idx) {\n        for (let n = this.numBonds; n >= 1; n--) {\n            if (this.bondFrom(n) == idx || this.bondTo(n) == idx)\n                this.deleteBond(n);\n            else {\n                if (this.bondFrom(n) > idx)\n                    this.setBondFrom(n, this.bondFrom(n) - 1);\n                if (this.bondTo(n) > idx)\n                    this.setBondTo(n, this.bondTo(n) - 1);\n            }\n        }\n        this.atoms.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    deleteBond(idx) {\n        this.bonds.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    atomHydrogens(idx) {\n        let hy = this.atomHExplicit(idx);\n        if (hy != Molecule.HEXPLICIT_UNKNOWN)\n            return hy;\n        for (let n = 0; n < Molecule.HYVALENCE_EL.length; n++)\n            if (Molecule.HYVALENCE_EL[n] == this.atomElement(idx)) {\n                hy = Molecule.HYVALENCE_VAL[n];\n                break;\n            }\n        if (hy == Molecule.HEXPLICIT_UNKNOWN)\n            return 0;\n        let ch = this.atomCharge(idx);\n        if (this.atomElement(idx) == 'C')\n            ch = -Math.abs(ch);\n        hy += ch - this.atomUnpaired(idx);\n        let adjBonds = this.atomAdjBonds(idx);\n        for (let n = 0; n < adjBonds.length; n++)\n            hy -= this.bondOrder(adjBonds[n]);\n        return hy < 0 ? 0 : hy;\n    }\n    findBond(a1, a2) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            let b1 = this.bondFrom(n), b2 = this.bondTo(n);\n            if ((a1 == b1 && a2 == b2) || (a1 == b2 && a2 == b1))\n                return n;\n        }\n        return 0;\n    }\n    bondOther(idx, ref) {\n        let b1 = this.bondFrom(idx), b2 = this.bondTo(idx);\n        if (b1 == ref)\n            return b2;\n        if (b2 == ref)\n            return b1;\n        return 0;\n    }\n    atomExplicit(idx) {\n        let a = this.atoms[idx - 1];\n        if (a.isotope != Molecule.ISOTOPE_NATURAL)\n            return true;\n        if (a.element != 'C' || a.charge != 0 || a.unpaired != 0)\n            return true;\n        if (this.atomAdjCount(idx) == 0)\n            return true;\n        return false;\n    }\n    atomRingBlock(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.ringID == null)\n            this.buildRingID();\n        return this.ringID[idx - 1];\n    }\n    bondInRing(idx) {\n        let r1 = this.atomRingBlock(this.bondFrom(idx)), r2 = this.atomRingBlock(this.bondTo(idx));\n        return r1 > 0 && r1 == r2;\n    }\n    atomConnComp(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.compID == null)\n            this.buildConnComp();\n        return this.compID[idx - 1];\n    }\n    atomAdjCount(idx) {\n        this.buildGraph();\n        return this.graph[idx - 1].length;\n    }\n    atomAdjList(idx) {\n        this.buildGraph();\n        let adj = this.graph[idx - 1].slice(0);\n        for (let n = adj.length - 1; n >= 0; n--)\n            adj[n]++;\n        return adj;\n    }\n    atomAdjBonds(idx) {\n        this.buildGraph();\n        return this.graphBond[idx - 1].slice(0);\n    }\n    findRingsOfSize(size) {\n        let rings = null;\n        if (size == 3 && this.ring3 != null)\n            rings = this.ring3;\n        if (size == 4 && this.ring4 != null)\n            rings = this.ring4;\n        if (size == 5 && this.ring5 != null)\n            rings = this.ring5;\n        if (size == 6 && this.ring6 != null)\n            rings = this.ring6;\n        if (size == 7 && this.ring7 != null)\n            rings = this.ring7;\n        if (rings == null) {\n            if (this.graph == null)\n                this.buildGraph();\n            if (this.ringID == null)\n                this.buildRingID();\n            rings = [];\n            for (let n = 1; n <= this.atoms.length; n++) {\n                if (this.ringID[n - 1] > 0) {\n                    let path = Vec.numberArray(0, size);\n                    path[0] = n;\n                    this.recursiveRingFind(path, 1, size, this.ringID[n - 1], rings);\n                }\n            }\n            if (size == 3)\n                this.ring3 = rings;\n            if (size == 4)\n                this.ring4 = rings;\n            if (size == 5)\n                this.ring5 = rings;\n            if (size == 6)\n                this.ring6 = rings;\n            if (size == 7)\n                this.ring7 = rings;\n        }\n        let ret = [];\n        for (let n = 0; n < rings.length; n++)\n            ret.push(rings[n].slice(0));\n        return ret;\n    }\n    boundary() {\n        if (this.atoms.length == 0)\n            return Box.zero();\n        let x1 = this.atoms[0].x, x2 = x1;\n        let y1 = this.atoms[0].y, y2 = y1;\n        for (let n = 1; n < this.atoms.length; n++) {\n            x1 = Math.min(x1, this.atoms[n].x);\n            y1 = Math.min(y1, this.atoms[n].y);\n            x2 = Math.max(x2, this.atoms[n].x);\n            y2 = Math.max(y2, this.atoms[n].y);\n        }\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    atomicNumber(idx) {\n        return Molecule.elementAtomicNumber(this.atomElement(idx));\n    }\n    static elementAtomicNumber(element) {\n        return Math.max(0, Chemistry.ELEMENTS.indexOf(element));\n    }\n    is3D() { return this.hasZCoord; }\n    setIs3D(v) { this.hasZCoord = v; }\n    atomZ(idx) { return this.getAtom(idx).z; }\n    setAtomZ(idx, z) { this.getAtom(idx).z = z; }\n    compareTo(other) {\n        if (other == null || other.numAtoms == 0)\n            return this.numAtoms == 0 ? 0 : 1;\n        if (this.numAtoms < other.numAtoms)\n            return -1;\n        if (this.numAtoms > other.numAtoms)\n            return 1;\n        if (this.numBonds < other.numBonds)\n            return -1;\n        if (this.numBonds > other.numBonds)\n            return 1;\n        for (let n = 1; n <= this.numAtoms; n++) {\n            if (this.atomElement(n) < other.atomElement(n))\n                return -1;\n            if (this.atomElement(n) > other.atomElement(n))\n                return 1;\n            if (this.atomX(n) < other.atomX(n))\n                return -1;\n            if (this.atomX(n) > other.atomX(n))\n                return 1;\n            if (this.atomY(n) < other.atomY(n))\n                return -1;\n            if (this.atomY(n) > other.atomY(n))\n                return 1;\n            if (this.atomCharge(n) < other.atomCharge(n))\n                return -1;\n            if (this.atomCharge(n) > other.atomCharge(n))\n                return 1;\n            if (this.atomUnpaired(n) < other.atomUnpaired(n))\n                return -1;\n            if (this.atomUnpaired(n) > other.atomUnpaired(n))\n                return 1;\n            if (this.atomHExplicit(n) < other.atomHExplicit(n))\n                return -1;\n            if (this.atomHExplicit(n) > other.atomHExplicit(n))\n                return 1;\n            if (this.atomIsotope(n) < other.atomIsotope(n))\n                return -1;\n            if (this.atomIsotope(n) > other.atomIsotope(n))\n                return 1;\n            if (this.atomMapNum(n) < other.atomMapNum(n))\n                return -1;\n            if (this.atomMapNum(n) > other.atomMapNum(n))\n                return 1;\n            let tx1 = this.atomExtra(n), tx2 = other.atomExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.atomTransient(n);\n            tx2 = other.atomTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        for (let n = 1; n <= this.numBonds; n++) {\n            if (this.bondFrom(n) < other.bondFrom(n))\n                return -1;\n            if (this.bondFrom(n) > other.bondFrom(n))\n                return 1;\n            if (this.bondTo(n) < other.bondTo(n))\n                return -1;\n            if (this.bondTo(n) > other.bondTo(n))\n                return 1;\n            if (this.bondOrder(n) < other.bondOrder(n))\n                return -1;\n            if (this.bondOrder(n) > other.bondOrder(n))\n                return 1;\n            if (this.bondType(n) < other.bondType(n))\n                return -1;\n            if (this.bondType(n) > other.bondType(n))\n                return 1;\n            let tx1 = this.bondExtra(n), tx2 = other.bondExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.bondTransient(n);\n            tx2 = other.bondTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        return 0;\n    }\n    trashTransient() {\n        if (this.keepTransient || !this.hasTransient)\n            return;\n        for (let a of this.atoms)\n            a.transient = [];\n        for (let b of this.bonds)\n            b.transient = [];\n        this.hasTransient = false;\n    }\n    appendAtomExtra(atom, extra) {\n        this.getAtom(atom).extra.push(extra);\n    }\n    appendAtomTransient(atom, trans) {\n        this.getAtom(atom).transient.push(trans);\n    }\n    appendBondExtra(bond, extra) {\n        this.getBond(bond).extra.push(extra);\n    }\n    appendBondTransient(bond, trans) {\n        this.getBond(bond).transient.push(trans);\n    }\n    trashGraph() {\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    buildGraph() {\n        if (this.graph != null && this.graphBond != null)\n            return;\n        let graph = [], graphBond = [];\n        let na = this.numAtoms, nb = this.numBonds;\n        for (let n = 0; n < na; n++) {\n            graph.push([]);\n            graphBond.push([]);\n        }\n        for (let n = 1; n <= nb; n++) {\n            let b = this.getBond(n);\n            graph[b.from - 1].push(b.to - 1);\n            graph[b.to - 1].push(b.from - 1);\n            graphBond[b.from - 1].push(n);\n            graphBond[b.to - 1].push(n);\n        }\n        this.graph = graph;\n        this.graphBond = graphBond;\n    }\n    buildConnComp() {\n        const numAtoms = this.atoms.length;\n        this.compID = Vec.numberArray(0, numAtoms);\n        for (let n = 0; n < numAtoms; n++)\n            this.compID[n] = 0;\n        let comp = 1;\n        this.compID[0] = comp;\n        while (true) {\n            let anything = false;\n            for (let n = 0; n < numAtoms; n++)\n                if (this.compID[n] == comp) {\n                    for (let i = 0; i < this.graph[n].length; i++) {\n                        if (this.compID[this.graph[n][i]] == 0) {\n                            this.compID[this.graph[n][i]] = comp;\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything) {\n                for (let n = 0; n < numAtoms; n++) {\n                    if (this.compID[n] == 0) {\n                        this.compID[n] = ++comp;\n                        anything = true;\n                        break;\n                    }\n                }\n                if (!anything)\n                    break;\n            }\n        }\n    }\n    buildRingID() {\n        const numAtoms = this.atoms.length;\n        this.ringID = Vec.numberArray(0, numAtoms);\n        if (numAtoms == 0)\n            return;\n        let visited = Vec.booleanArray(false, numAtoms);\n        for (let n = 0; n < numAtoms; n++) {\n            this.ringID[n] = 0;\n            visited[n] = false;\n        }\n        let path = Vec.numberArray(0, numAtoms + 1), plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < this.graph[last].length; n++) {\n                    if (!visited[this.graph[last][n]]) {\n                        current = this.graph[last][n];\n                        break;\n                    }\n                }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < this.graph[current].length; n++) {\n                    let join = this.graph[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = this.ringID[path[i]];\n                            if (id == 0)\n                                this.ringID[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < numAtoms; j++)\n                                    if (this.ringID[j] == id)\n                                        this.ringID[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == numAtoms)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < numAtoms; i++) {\n            if (this.ringID[i] > 0) {\n                nextID--;\n                for (let j = numAtoms - 1; j >= i; j--)\n                    if (this.ringID[j] == this.ringID[i])\n                        this.ringID[j] = nextID;\n            }\n        }\n        for (let i = 0; i < numAtoms; i++)\n            this.ringID[i] = -this.ringID[i];\n    }\n    recursiveRingFind(path, psize, capacity, rblk, rings) {\n        const { graph } = this;\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < graph[last - 1].length; n++) {\n                let adj = graph[last - 1][n] + 1;\n                if (this.ringID[adj - 1] != rblk)\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++) {\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                }\n                if (!fnd) {\n                    let newPath = path.slice(0);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, rblk, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < graph[last - 1].length; n++) {\n            if (graph[last - 1][n] + 1 == path[0]) {\n                fnd = true;\n                break;\n            }\n        }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n] - 1;\n            for (let i = 0; i < graph[p].length; i++)\n                if (path.indexOf(graph[p][i] + 1) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = Vec.numberArray(0, psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++) {\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\nMolecule.IDEALBOND = 1.5;\nMolecule.HEXPLICIT_UNKNOWN = -1;\nMolecule.ISOTOPE_NATURAL = 0;\nMolecule.BONDTYPE_NORMAL = 0;\nMolecule.BONDTYPE_INCLINED = 1;\nMolecule.BONDTYPE_DECLINED = 2;\nMolecule.BONDTYPE_UNKNOWN = 3;\nMolecule.HYVALENCE_EL = ['C', 'N', 'O', 'S', 'P'];\nMolecule.HYVALENCE_VAL = [4, 3, 2, 2, 3];\nMolecule.PREFIX_EXTRA = 'x';\nMolecule.PREFIX_TRANSIENT = 'y';\nexport { Molecule };\n//# sourceMappingURL=Molecule.js.map","import { angleDiff, angleNorm, DEGRAD, norm2_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nclass CoordUtil {\n    static atomAtPoint(mol, x, y, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.OVERLAP_THRESHOLD;\n        const tolsq = tolerance * tolerance;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return n;\n        return 0;\n    }\n    static sketchEquivalent(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        const na = mol1.numAtoms, nb = mol1.numBonds;\n        if (na != mol2.numAtoms || nb != mol2.numBonds)\n            return false;\n        const tolsq = tolerance * tolerance;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        if (Math.abs(box1.minX() - box2.minX()) > tolerance)\n            return false;\n        if (Math.abs(box1.minY() - box2.minY()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxX() - box2.maxX()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxY() - box2.maxY()) > tolerance)\n            return false;\n        let mx1 = MolUtil.arrayAtomX(mol1), my1 = MolUtil.arrayAtomY(mol1);\n        let mx2 = MolUtil.arrayAtomX(mol2), my2 = MolUtil.arrayAtomY(mol2);\n        let map = Vec.numberArray(0, na);\n        let mask = Vec.booleanArray(false, na);\n        for (let i = 0; i < na; i++) {\n            let j = -1;\n            if (norm2_xy(mx1[i] - mx2[i], my1[i] - my2[i]) < tolsq)\n                j = i;\n            if (j < 0) {\n                let bestdsq = Number.MAX_VALUE;\n                for (let n = 0; n < na; n++)\n                    if (!mask[n]) {\n                        let dsq = norm2_xy(mx1[i] - mx2[n], my1[i] - my2[n]);\n                        if (dsq < bestdsq) {\n                            bestdsq = dsq;\n                            j = n;\n                        }\n                    }\n                if (j < 0 || bestdsq > tolsq)\n                    return false;\n            }\n            map[i] = j + 1;\n            mask[j] = true;\n            if (mol1.atomElement(i + 1) != mol2.atomElement(j + 1))\n                return false;\n            if (mol1.atomCharge(i + 1) != mol2.atomCharge(j + 1))\n                return false;\n            if (mol1.atomUnpaired(i + 1) != mol2.atomUnpaired(j + 1))\n                return false;\n            if (mol1.atomHExplicit(i + 1) != mol2.atomHExplicit(j + 1) &&\n                mol1.atomHExplicit(i + 1) != Molecule.HEXPLICIT_UNKNOWN &&\n                mol2.atomHExplicit(j + 1) != Molecule.HEXPLICIT_UNKNOWN)\n                return false;\n        }\n        for (let i = 1; i <= nb; i++) {\n            let i1 = mol1.bondFrom(i), i2 = mol1.bondTo(i), j1 = map[i1 - 1], j2 = map[i2 - 1];\n            let j = mol2.findBond(j1, j2);\n            if (j == 0)\n                return false;\n            if (mol1.bondOrder(i) != mol2.bondOrder(j) || mol1.bondType(i) != mol2.bondType(j))\n                return false;\n            if (mol2.bondFrom(j) == j1 && mol2.bondTo(j) == j2) { }\n            else if (mol2.bondType(j) != Molecule.BONDTYPE_INCLINED &&\n                mol2.bondType(j) != Molecule.BONDTYPE_DECLINED &&\n                mol2.bondFrom(j) == j2 && mol2.bondTo(j) == j1) { }\n            else\n                return false;\n        }\n        return true;\n    }\n    static sketchMappable(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        let dx = box1.minX() - box2.minX(), dy = box1.minY() - box2.minY();\n        if (Math.abs(dx) > tolerance * 0.1 || Math.abs(dy) > tolerance * 0.1) {\n            mol2 = mol2.clone();\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomPos(n, mol2.atomX(n) + dx, mol2.atomY(n) + dy);\n        }\n        return CoordUtil.sketchEquivalent(mol1, mol2, tolerance);\n    }\n    static atomBondAngles(mol, atom, adj) {\n        if (adj == null)\n            adj = mol.atomAdjList(atom);\n        let bndang = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let a of adj)\n            bndang.push(Math.atan2(mol.atomY(a) - cy, mol.atomX(a) - cx));\n        return bndang;\n    }\n    static overlapsAtom(mol, x, y, tol) {\n        const tolsq = tol * tol;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return true;\n        return false;\n    }\n    static overlappingAtomMask(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        const sz = mol.numAtoms;\n        let box = mol.boundary();\n        let p1, p2;\n        if (box.w > box.h) {\n            p1 = MolUtil.arrayAtomX(mol);\n            p2 = MolUtil.arrayAtomY(mol);\n        }\n        else {\n            p1 = MolUtil.arrayAtomY(mol);\n            p2 = MolUtil.arrayAtomX(mol);\n        }\n        let omask = Vec.booleanArray(false, sz);\n        let idx = Vec.idxSort(p1);\n        const threshSQ = thresh * thresh;\n        for (let i = 1; i < sz - 1; i++) {\n            for (let j = i - 1; j >= 0; j--) {\n                let d1 = p1[idx[i]] - p1[idx[j]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[i]] - p2[idx[j]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n            for (let j = i + 1; j < sz; j++) {\n                let d1 = p1[idx[j]] - p1[idx[i]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[j]] - p2[idx[i]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n        }\n        return omask;\n    }\n    static overlappingAtomList(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        return Vec.add(Vec.maskIdx(CoordUtil.overlappingAtomMask(mol, thresh)), 1);\n    }\n    static congestionPoint(mol, x, y, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++)\n            score += 1.0 / (approach + norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y));\n        return score;\n    }\n    static congestionMolecule(mol, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 0; i < na - 1; i++)\n            for (let j = i + 1; j < na; j++)\n                score += 1.0 / (approach + norm2_xy(mx[i] - mx[j], my[i] - my[j]));\n        return score;\n    }\n    static translateMolecule(mol, ox, oy) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n    }\n    static rotateMolecule(mol, theta, cx, cy) {\n        if (cx == null || cy == null) {\n            let box = mol.boundary();\n            cx = box.midX();\n            cy = box.midY();\n        }\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n            mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n    }\n    static rotateBond(mol, centre, atom, theta) {\n        theta = angleNorm(theta);\n        if (Math.abs(theta) < 0.1 * DEGRAD)\n            return;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(centre - 1);\n        let cc = g.calculateComponents();\n        let cx = mol.atomX(centre), cy = mol.atomY(centre);\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (cc[n - 1] == cc[atom - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static rotateAtoms(mol, mask, cx, cy, theta) {\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static angleNeighbours(mol, atom) {\n        let adj = mol.atomAdjList(atom);\n        if (adj.length <= 1)\n            return null;\n        let th = [];\n        for (let n = 0; n < adj.length; n++)\n            th.push(Math.atan2(mol.atomY(adj[n]) - mol.atomY(atom), mol.atomX(adj[n]) - mol.atomX(atom)));\n        if (adj.length == 2) {\n            if (angleDiff(th[1], th[0]) > 0)\n                return adj;\n            return [adj[1], adj[0]];\n        }\n        let idx = Vec.idxSort(th);\n        return Vec.idxGet(adj, idx);\n    }\n    static mergeAtoms(mol, oldN, newN) {\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == oldN)\n                mol.setBondFrom(n, newN);\n            if (mol.bondTo(n) == oldN)\n                mol.setBondTo(n, newN);\n        }\n        mol.deleteAtomAndBonds(oldN);\n    }\n    static normaliseBondDistances(mol) {\n        const nb = mol.numBonds;\n        if (nb == 0)\n            return;\n        let dsq = [];\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            dsq.push(norm2_xy(mol.atomX(bto) - mol.atomX(bfr), mol.atomY(bto) - mol.atomY(bfr)));\n        }\n        Vec.sort(dsq);\n        let median = (nb & 1) == 1 ? Math.sqrt(dsq[nb >> 1]) : 0.5 * (Math.sqrt(dsq[nb >> 1]) + Math.sqrt(dsq[(nb >> 1) - 1]));\n        if (median < 0.1 || (median > Molecule.IDEALBOND * 0.9 && median < Molecule.IDEALBOND * 1.1))\n            return;\n        let box = mol.boundary();\n        let cx = box.midX(), cy = box.midY();\n        let scale = Molecule.IDEALBOND / median;\n        for (let n = mol.numAtoms; n >= 1; n--) {\n            let x = (mol.atomX(n) - cx) * scale + cx;\n            let y = (mol.atomY(n) - cy) * scale + cy;\n            mol.setAtomPos(n, x, y);\n        }\n    }\n    static centreMolecule(mol) {\n        if (MolUtil.isBlank(mol))\n            return;\n        let x = MolUtil.arrayAtomX(mol), y = MolUtil.arrayAtomY(mol);\n        let sz = x.length;\n        let invsz = 1.0 / sz;\n        let meanX = Vec.sum(x) * invsz, meanY = Vec.sum(y) * invsz;\n        let closest = Number.POSITIVE_INFINITY;\n        let deltaX = 0, deltaY = 0;\n        for (let n = 0; n < sz; n++) {\n            let dsq = norm2_xy(x[n] - meanX, y[n] - meanY);\n            if (dsq < closest) {\n                deltaX = -x[n];\n                deltaY = -y[n];\n                closest = dsq;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            mol.setAtomPos(n + 1, x[n] + deltaX, y[n] + deltaY);\n    }\n    static mirrorImage(mol) {\n        mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomX(n, -mol.atomX(n));\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_INCLINED);\n            else if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_DECLINED);\n        }\n        return mol;\n    }\n    static alignOrientFlip(mol1, idx1, mol2, idx2) {\n        if (idx1.length < 2 || idx1.length != idx2.length)\n            throw 'Invalid mapping indices.';\n        let x0 = mol1.atomX(idx1[0]), y0 = mol1.atomY(idx1[0]);\n        CoordUtil.translateMolecule(mol2, x0 - mol2.atomX(idx2[0]), y0 - mol2.atomY(idx2[0]));\n        const sz = idx1.length - 1;\n        let th1 = [], th2 = [];\n        let deltaA = 0, deltaB = 0;\n        for (let n = 0; n < sz; n++) {\n            th1.push(Math.atan2(mol1.atomY(idx1[n + 1]) - y0, mol1.atomX(idx1[n + 1]) - x0));\n            th2.push(Math.atan2(mol2.atomY(idx2[n + 1]) - y0, mol2.atomX(idx2[n + 1]) - x0));\n            let dthA = angleDiff(th1[n], th2[n]), dthB = angleDiff(th1[n], -th2[n]);\n            if (dthA < -175 * DEGRAD && deltaA > 0)\n                dthA += TWOPI;\n            else if (dthA > 175 * DEGRAD && deltaA < 0)\n                dthA -= TWOPI;\n            if (dthB < -175 * DEGRAD && deltaB > 0)\n                dthB += TWOPI;\n            else if (dthB > 175 * DEGRAD && deltaB < 0)\n                dthB -= TWOPI;\n            deltaA += dthA;\n            deltaB += dthB;\n        }\n        if (sz > 1) {\n            let inv = 1.0 / sz;\n            deltaA *= inv;\n            deltaB *= inv;\n        }\n        let scoreA = 0, scoreB = 0;\n        for (let n = 0; n < sz; n++) {\n            scoreA += Math.abs(angleDiff(th1[n], th2[n] + deltaA));\n            scoreB += Math.abs(angleDiff(th1[n], -th2[n] + deltaB));\n        }\n        if (scoreB < scoreA) {\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomY(n, 2 * y0 - mol2.atomY(n));\n            for (let n = 1; n <= mol2.numBonds; n++) {\n                if (mol2.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n                else if (mol2.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_DECLINED);\n            }\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaB);\n        }\n        else\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaA);\n    }\n    static atomIsWeirdLinear(mol, idx) {\n        let bonds = mol.atomAdjBonds(idx);\n        if (bonds.length != 2)\n            return false;\n        for (let n = 0; n < bonds.length; n++)\n            if (mol.bondOrder(bonds[n]) == 3)\n                return false;\n        let adj = mol.atomAdjList(idx);\n        let th1 = Math.atan2(mol.atomY(adj[0]) - mol.atomY(idx), mol.atomX(adj[0]) - mol.atomX(idx));\n        let th2 = Math.atan2(mol.atomY(adj[1]) - mol.atomY(idx), mol.atomX(adj[1]) - mol.atomX(idx));\n        return Math.abs(angleDiff(th1, th2)) >= 175 * DEGRAD;\n    }\n}\nCoordUtil.OVERLAP_THRESHOLD = 0.2;\nCoordUtil.OVERLAP_THRESHOLD_SQ = CoordUtil.OVERLAP_THRESHOLD * CoordUtil.OVERLAP_THRESHOLD;\nCoordUtil.DEFAULT_EQUIV_TOLERANCE = 0.2;\nexport { CoordUtil };\n//# sourceMappingURL=CoordUtil.js.map","import { GeomUtil } from './Geom';\nimport { DEGRAD, fltEqual, norm2_xy, norm_xy, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nconst CACHE_SIZE = 1000;\nclass FitRotatedEllipse {\n    constructor(px, py, margin) {\n        this.px = px;\n        this.py = py;\n        this.margin = margin;\n        this.theta = 0;\n        this.stop = false;\n        this.hashKey = JSON.stringify([this.px, this.py]);\n    }\n    calculate() {\n        if (this.lookupCache())\n            return;\n        this.setupParameters();\n        if (this.stop)\n            return;\n        this.currentScore = this.calculateScore(this.cx, this.cy, this.rw, this.rh);\n        this.coarseDiscovery();\n        this.fineImprovement();\n        this.theta = -this.theta;\n        this.saveCache();\n    }\n    getSpline() {\n        return GeomUtil.createBezierEllipse(this.cx, this.cy, this.rw, this.rh, this.theta);\n    }\n    lookupCache() {\n        let hashKey = this.hashKey;\n        let look = FitRotatedEllipse.cacheMap.get(hashKey);\n        if (look) {\n            this.cx = look.cx;\n            this.cy = look.cy;\n            this.rw = look.rw;\n            this.rh = look.rh;\n            this.theta = look.theta;\n            const { cacheVal } = FitRotatedEllipse;\n            for (let n = cacheVal.length - 1; n >= 0; n--)\n                if (cacheVal[n].hashKey == hashKey) {\n                    if (n < cacheVal.length - 1) {\n                        cacheVal.push(cacheVal[n]);\n                        cacheVal.splice(n, 1);\n                    }\n                    break;\n                }\n            return true;\n        }\n        return false;\n    }\n    saveCache() {\n        let hashKey = this.hashKey;\n        const { cacheVal, cacheMap } = FitRotatedEllipse;\n        cacheVal.push(this);\n        cacheMap.set(hashKey, this);\n        while (cacheVal.length > CACHE_SIZE) {\n            cacheMap.delete(cacheVal[0].hashKey);\n            cacheVal.splice(0);\n        }\n    }\n    setupParameters() {\n        const psz = this.psz = this.px.length;\n        const invpsz = this.invpsz = 1.0 / psz;\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        let ptheta = new Array(psz), pdist = new Array(psz);\n        for (let n = 0; n < psz; n++) {\n            ptheta[n] = Math.atan2(this.py[n] - this.cy, this.px[n] - this.cx);\n            pdist[n] = norm_xy(this.px[n] - this.cx, this.py[n] - this.cy);\n        }\n        let order = Vec.idxSort(ptheta);\n        this.px = Vec.idxGet(this.px, order);\n        this.py = Vec.idxGet(this.py, order);\n        ptheta = Vec.idxGet(ptheta, order);\n        pdist = Vec.idxGet(pdist, order);\n        let buffX = new Array(psz), buffY = new Array(psz);\n        const rotatedScore = (ptheta, pdist, rtheta) => {\n            for (let n = 0; n < psz; n++) {\n                buffX[n] = pdist[n] * Math.cos(ptheta[n] + rtheta);\n                buffY[n] = pdist[n] * Math.sin(ptheta[n] + rtheta);\n            }\n            let scx = Vec.sum(buffX) * invpsz, scy = Vec.sum(buffY) * invpsz;\n            let devx = 0, devy = 0;\n            for (let n = 0; n < psz; n++) {\n                devx += sqr(buffX[n] - scx);\n                devy += Math.abs(buffY[n] - scy);\n            }\n            return devy / (1 + devx);\n        };\n        let bestScore = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 360; n++) {\n            let th = n * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let dth = -1; dth <= 1; dth += 0.05) {\n            let th = this.theta + dth * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let n = 0; n < psz; n++) {\n            this.px[n] = this.cx + pdist[n] * Math.cos(ptheta[n] + this.theta);\n            this.py[n] = this.cy + pdist[n] * Math.sin(ptheta[n] + this.theta);\n        }\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        this.rw = this.rh = 1;\n    }\n    coarseDiscovery() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const DELTA_OPTIONS = [\n            { dx: -1, dy: 0, dw: 0, dh: 0 },\n            { dx: 1, dy: 0, dw: 0, dh: 0 },\n            { dx: 0, dy: -1, dw: 0, dh: 0 },\n            { dx: 0, dy: 1, dw: 0, dh: 0 },\n            { dx: 0, dy: 0, dw: -1, dh: 0 },\n            { dx: 0, dy: 0, dw: 1, dh: 0 },\n            { dx: 0, dy: 0, dw: 0, dh: -1 },\n            { dx: 0, dy: 0, dw: 0, dh: 1 },\n        ];\n        for (let sanity = 0; sanity < 1000; sanity++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let delta of DELTA_OPTIONS) {\n                let newCX = this.cx + delta.dx * deltaD;\n                let newCY = this.cy + delta.dy * deltaD;\n                let newRW = this.rw + delta.dw * deltaR;\n                let newRH = this.rh + delta.dh * deltaR;\n                let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                    anything = true;\n                    bestScore = newScore;\n                    bestCX = newCX;\n                    bestCY = newCY;\n                    bestRW = newRW;\n                    bestRH = newRH;\n                }\n            }\n            if (!anything)\n                break;\n            this.currentScore = bestScore;\n            this.cx = bestCX;\n            this.cy = bestCY;\n            this.rw = bestRW;\n            this.rh = bestRH;\n        }\n    }\n    fineImprovement() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const REDUCTION = 2.0 / 3;\n        const MAX_REDUCTIONS = 20;\n        for (let reduc = 0; reduc < MAX_REDUCTIONS; reduc++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let dCX = -1; dCX <= 1; dCX++) {\n                let newCX = this.cx + dCX * deltaD;\n                for (let dCY = -1; dCY <= 1; dCY++) {\n                    let newCY = this.cy + dCY * deltaD;\n                    for (let dRW = -1; dRW <= 1; dRW++) {\n                        let newRW = this.rw + dRW * deltaR;\n                        for (let dRH = -1; dRH <= 1; dRH++) {\n                            let newRH = this.rh + dRH * deltaR;\n                            if (dCX == 0 && dCY == 0 && dRW == 0 && dRH == 0)\n                                continue;\n                            let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                            if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                                anything = true;\n                                bestScore = newScore;\n                                bestCX = newCX;\n                                bestCY = newCY;\n                                bestRW = newRW;\n                                bestRH = newRH;\n                            }\n                        }\n                    }\n                }\n            }\n            if (anything) {\n                this.currentScore = bestScore;\n                this.cx = bestCX;\n                this.cy = bestCY;\n                this.rw = bestRW;\n                this.rh = bestRH;\n            }\n            else {\n                reduc++;\n                deltaD *= REDUCTION;\n                deltaR *= REDUCTION;\n            }\n        }\n    }\n    calculateScore(cx, cy, rw, rh) {\n        const { px, py, margin } = this, psz = px.length;\n        const nseg = 24;\n        let cosTheta = 1, sinTheta = 0;\n        let incrAlpha = TWOPI / nseg;\n        let closestDSQ = Vec.numberArray(Number.POSITIVE_INFINITY, psz);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            let dx = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta;\n            let dy = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta;\n            let d = norm_xy(dx, dy) + margin, eth = Math.atan2(dy, dx);\n            let x = cx + d * Math.cos(eth);\n            let y = cy + d * Math.sin(eth);\n            for (let i = 0; i < psz; i++) {\n                let ii = i == psz - 1 ? 0 : i + 1;\n                if (GeomUtil.doLineSegsIntersect(cx, cy, x, y, px[i], py[i], px[ii], py[ii]))\n                    return 0;\n            }\n            for (let i = 0; i < psz; i++)\n                closestDSQ[i] = Math.min(closestDSQ[i], norm2_xy(x - px[i], y - py[i]));\n        }\n        let proxSum = 0;\n        for (let dsq of closestDSQ)\n            proxSum += 1.0 / (1 + Math.sqrt(dsq));\n        return rw * rh + proxSum;\n    }\n}\nFitRotatedEllipse.cacheVal = [];\nFitRotatedEllipse.cacheMap = new Map();\nexport { FitRotatedEllipse };\n//# sourceMappingURL=FitRotatedEllipse.js.map","class FontData {\n    constructor() {\n        this.UNITS_PER_EM = 2048;\n        this.INV_UNITS_PER_EM = 1.0 / this.UNITS_PER_EM;\n        this.PANOSE_1 = '2 11 6 4 3 5 4 4 2 4';\n        this.ASCENT = 1638;\n        this.DESCENT = -410;\n        this.MISSING_HORZ = 2048;\n        this.MISSING_DATA = 'M256 0v1536h1536v-1536h-1536zM384 128h1280v1280h-1280v-1280z';\n        this.ASCENT_FUDGE = 0.9;\n        this.UNICODE = [\n            ' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<',\n            '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n            '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\n            'x', 'y', 'z', '{', '|', '}', '~', '\\u00A0', '\\u00A1', '\\u00A2', '\\u00A3', '\\u00A4', '\\u00A5', '\\u00A6', '\\u00A7', '\\u00A8', '\\u00A9', '\\u00AA',\n            '\\u00AB', '\\u00AC', '\\u00AD', '\\u00AE', '\\u00AF', '\\u00B0', '\\u00B1', '\\u00B2', '\\u00B3', '\\u00B4', '\\u00B5', '\\u00B6', '\\u00B7', '\\u00B8', '\\u00B9',\n            '\\u00BA', '\\u00BB', '\\u00BC', '\\u00BD', '\\u00BE', '\\u00BF', '\\u00C0', '\\u00C1', '\\u00C2', '\\u00C3', '\\u00C4', '\\u00C5', '\\u00C6', '\\u00C7', '\\u00C8',\n            '\\u00C9', '\\u00CA', '\\u00CB', '\\u00CC', '\\u00CD', '\\u00CE', '\\u00CF', '\\u00D0', '\\u00D1', '\\u00D2', '\\u00D3', '\\u00D4', '\\u00D5', '\\u00D6', '\\u00D7',\n            '\\u00D8', '\\u00D9', '\\u00DA', '\\u00DB', '\\u00DC', '\\u00DD', '\\u00DE', '\\u00DF', '\\u00E0', '\\u00E1', '\\u00E2', '\\u00E3', '\\u00E4', '\\u00E5', '\\u00E6',\n            '\\u00E7', '\\u00E8', '\\u00E9', '\\u00EA', '\\u00EB', '\\u00EC', '\\u00ED', '\\u00EE', '\\u00EF', '\\u00F0', '\\u00F1', '\\u00F2', '\\u00F3', '\\u00F4', '\\u00F5',\n            '\\u00F6', '\\u00F7', '\\u00F8', '\\u00F9', '\\u00FA', '\\u00FB', '\\u00FC', '\\u00FD', '\\u00FE', '\\u037E', '\\u0384', '\\u0385', '\\u0386', '\\u0387', '\\u0388',\n            '\\u0389', '\\u038A', '\\u038C', '\\u038E', '\\u038F', '\\u0390', '\\u0391', '\\u0392', '\\u0393', '\\u0394', '\\u0395', '\\u0396', '\\u0397', '\\u0398', '\\u0399',\n            '\\u039A', '\\u039B', '\\u039C', '\\u039D', '\\u039E', '\\u039F', '\\u03A0', '\\u03A1', '\\u03A3', '\\u03A4', '\\u03A5', '\\u03A6', '\\u03A7', '\\u03A8', '\\u03A9',\n            '\\u03AA', '\\u03AB', '\\u03AC', '\\u03AD', '\\u03AE', '\\u03AF', '\\u03B0', '\\u03B1', '\\u03B2', '\\u03B3', '\\u03B4', '\\u03B5', '\\u03B6', '\\u03B7', '\\u03B8',\n            '\\u03B9', '\\u03BA', '\\u03BB', '\\u03BC', '\\u03BD', '\\u03BE', '\\u03BF', '\\u03C0', '\\u03C1', '\\u03C2', '\\u03C3', '\\u03C4', '\\u03C5', '\\u03C6', '\\u03C7',\n            '\\u03C8', '\\u03C9', '\\u03CA', '\\u03CB', '\\u03CC', '\\u03CD', '\\u03CE', '\\u2202', '\\u2206', '\\u220F', '\\u2211', '\\u2212', '\\u2215', '\\u2219', '\\u221A',\n            '\\u221E', '\\u222B', '\\u2248', '\\u2260', '\\u2264', '\\u2265'\n        ];\n        this.HORIZ_ADV_X = [\n            720, 806, 940, 1676, 1302, 2204, 1488, 550, 930, 930, 1302, 1676, 745, 930, 745, 930, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,\n            930, 930, 1676, 1676, 1676, 1117, 2048, 1400, 1404, 1430, 1578, 1295, 1177, 1588, 1539, 862, 931, 1419, 1140, 1726, 1532, 1612, 1235, 1612, 1424,\n            1400, 1262, 1499, 1400, 2025, 1403, 1260, 1403, 930, 930, 930, 1676, 1302, 1302, 1230, 1276, 1067, 1276, 1220, 720, 1276, 1296, 562, 705, 1212, 562,\n            1992, 1296, 1243, 1276, 1276, 874, 1067, 807, 1296, 1212, 1676, 1212, 1212, 1076, 1300, 930, 1300, 1676, 720, 806, 1302, 1302, 1302, 1302, 930, 1302,\n            1302, 2048, 1117, 1320, 1676, 930, 2048, 1302, 1110, 1676, 1110, 1110, 1302, 1314, 1302, 745, 1302, 1110, 1117, 1320, 2048, 2048, 2048, 1117, 1400,\n            1400, 1400, 1400, 1400, 1400, 2016, 1430, 1295, 1295, 1295, 1295, 862, 862, 862, 862, 1588, 1532, 1612, 1612, 1612, 1612, 1612, 1676, 1612, 1499,\n            1499, 1499, 1499, 1260, 1240, 1270, 1230, 1230, 1230, 1230, 1230, 1230, 1956, 1067, 1220, 1220, 1220, 1220, 562, 562, 562, 562, 1253, 1296, 1243,\n            1243, 1243, 1243, 1243, 1676, 1243, 1296, 1296, 1296, 1296, 1212, 1276, 930, 1302, 1302, 1400, 930, 1538, 1782, 1105, 1804, 1543, 1859, 562, 1400,\n            1404, 1160, 1440, 1295, 1403, 1539, 1612, 862, 1419, 1404, 1726, 1532, 1329, 1612, 1539, 1235, 1377, 1262, 1260, 1677, 1403, 1783, 1676, 862, 1260,\n            1276, 1050, 1296, 562, 1293, 1276, 1270, 1212, 1245, 1050, 937, 1296, 1278, 562, 1212, 1212, 1310, 1212, 1030, 1243, 1305, 1280, 1040, 1291, 1016,\n            1293, 1618, 1208, 1683, 1666, 562, 1293, 1243, 1293, 1666, 1302, 1489, 1676, 1489, 1676, 740, 745, 1676, 2048, 1302, 1676, 1676, 1676, 1676\n        ];\n        this.GLYPH_DATA = [\n            '',\n            'M515 1489l-26 -1079h-170l-28 1079h224zM505 0h-204v211h204v-211z',\n            'M772 1556l-43 -579h-132l-43 579h218zM386 1556l-43 -579h-132l-43 579h218z',\n            'M1481 932h-333l-92 -376h308v-135h-343l-104 -421h-129l104 421h-270l-104 -421h-129l104 421h-298v135h333l92 376h-308v135h343l105 422h129l-105 -422h270l105 422h129l-105 -422h298v-135zM1022 934h-274l-94 -380h274z',\n            'M1160 380q0 -155 -121 -257.5t-317 -121.5v-362h-118v357q-132 1 -248 25.5t-201 63.5v198h16q19 -14 68 -40.5t95 -43.5q52 -19 121.5 -35.5t148.5 -19.5v433q-40 8 -74 15.5t-63 15.5q-163 41 -234 123.5t-71 203.5q0 148 116.5 250t325.5 119v272h118v-270 q101 -2 207 -24t178 -51v-196h-14q-75 46 -156.5 81.5t-214.5 44.5v-431q30 -5 65 -13.5t61 -13.5q149 -32 230.5 -110t81.5 -213zM604 747v413q-107 -8 -180 -58.5t-73 -140.5q0 -91 54 -137t199 -77zM971 354q0 94 -58.5 137.5t-190.5 68.5v-414q120 12 184.5 61t64.5 147 z',\n            'M884 1076q0 -224 -94.5 -333t-272.5 -109q-182 0 -275 109t-93 332q0 224 95 333t273 109q181 0 274 -110t93 -331zM1575 1489l-780 -1489h-165l780 1489h165zM2055 413q0 -224 -95 -333t-273 -109q-181 0 -274 110t-93 331q0 224 94.5 333t272.5 109q182 0 275 -109 t93 -332zM706 1076q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5zM1877 413q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5z',\n            'M792 1191q0 95 -56.5 149.5t-144.5 54.5q-92 0 -150 -61.5t-58 -150.5q0 -75 39.5 -133t170.5 -137q98 35 148.5 102.5t50.5 175.5zM986 315l-478 466q-31 -15 -62 -39.5t-62 -66.5q-28 -39 -46 -94t-18 -124q0 -146 85.5 -235.5t242.5 -89.5q93 0 184.5 45.5 t153.5 137.5zM1287 909v-96q0 -96 -25 -216t-85 -229l378 -368h-246l-229 224q-115 -142 -235 -198.5t-247 -56.5q-208 0 -345.5 121.5t-137.5 318.5q0 92 26 159t61 116q35 47 87 88.5t105 72.5q-110 72 -158.5 145t-48.5 184q0 67 26.5 127.5t79.5 110.5q50 48 130.5 78 t177.5 30q173 0 280 -87.5t107 -221.5q0 -44 -12 -99.5t-41 -99.5q-32 -49 -91 -94t-153 -77l371 -362q14 40 21 88t8 100q2 56 1.5 125t-0.5 117h195z',\n            'M386 1556l-43 -579h-136l-43 579h222z',\n            'M783 -412h-229q-177 203 -275 443t-98 541t98 541t275 443h229v-10q-81 -73 -154.5 -168.5t-136.5 -222.5q-60 -123 -97.5 -271t-37.5 -312q0 -171 36.5 -313t98.5 -270q60 -123 137 -222.5t154 -168.5v-10z',\n            'M749 572q0 -301 -98 -541t-275 -443h-229v10q77 69 154.5 168.5t136.5 222.5q62 128 98.5 270t36.5 313q0 164 -37 312t-98 271q-63 127 -136.5 222.5t-154.5 168.5v10h229q177 -203 275 -443t98 -541z',\n            'M1137 887l-64 -110l-362 213l6 -360h-129l5 360l-361 -214l-65 110l381 207l-381 207l65 110l362 -213l-6 359h129l-7 -359l363 212l64 -110l-380 -205z',\n            'M1466 572h-545v-545h-166v545h-545v160h545v545h166v-545h545v-160z',\n            'M575 285l-282 -655h-146l174 655h254z',\n            'M777 561h-624v181h624v-181z',\n            'M492 0h-239v285h239v-285z',\n            'M860 1556l-717 -1860h-173l714 1860h176z',\n            'M1167 745q0 -401 -125.5 -588.5t-389.5 -187.5q-268 0 -391.5 190t-123.5 584q0 397 125 586.5t390 189.5q268 0 391.5 -192.5t123.5 -581.5zM904 291q35 81 47.5 190.5t12.5 263.5q0 152 -12.5 264t-48.5 190q-35 77 -95.5 116t-155.5 39q-94 0 -155.5 -39t-97.5 -118 q-34 -74 -46.5 -193t-12.5 -261q0 -156 11 -261t47 -188q33 -78 93.5 -119t160.5 -41q94 0 156 39t96 118z',\n            'M1084 0h-806v152h310v998h-310v136q63 0 135 10.5t109 30.5q46 25 72.5 63.5t30.5 103.5h155v-1342h304v-152z',\n            'M1169 0h-1008v209q105 90 210.5 180t196.5 179q192 186 263 295.5t71 236.5q0 116 -76.5 181.5t-213.5 65.5q-91 0 -197 -32t-207 -98h-10v210q71 35 189.5 64t229.5 29q229 0 359 -110.5t130 -299.5q0 -85 -21.5 -158.5t-63.5 -139.5q-39 -62 -91.5 -122t-127.5 -133 q-107 -105 -221 -203.5t-213 -182.5h801v-171z',\n            'M1038 717q48 -43 79 -108t31 -168q0 -102 -37 -187t-104 -148q-75 -70 -176.5 -103.5t-222.5 -33.5q-124 0 -244 29.5t-197 64.5v209h15q85 -56 200 -93t222 -37q63 0 134 21t115 62q46 44 68.5 97t22.5 134q0 80 -25.5 132.5t-70.5 82.5q-45 31 -109 42.5t-138 11.5h-90 v166h70q152 0 242.5 63.5t90.5 185.5q0 54 -23 94.5t-64 66.5q-43 26 -92 36t-111 10q-95 0 -202 -34t-202 -96h-10v209q71 35 189.5 64.5t229.5 29.5q109 0 192 -20t150 -64q72 -48 109 -116t37 -159q0 -124 -87.5 -216.5t-206.5 -116.5v-14q48 -8 110 -33.5t105 -63.5z ',\n            'M1203 419h-221v-419h-192v419h-713v230l721 840h184v-910h221v-160zM790 579v672l-577 -672h577z',\n            'M1157 473q0 -104 -38 -199t-104 -160q-72 -70 -171.5 -107.5t-230.5 -37.5q-122 0 -235 25.5t-191 61.5v211h14q82 -52 192 -88.5t216 -36.5q71 0 137.5 20t118.5 70q44 43 66.5 103t22.5 139q0 77 -26.5 130t-73.5 85q-52 38 -126.5 53.5t-166.5 15.5q-88 0 -169.5 -12 t-140.5 -24v767h896v-175h-703v-396q43 4 88 6t78 2q121 0 212 -20.5t167 -72.5q80 -55 124 -142t44 -218z',\n            'M1191 483q0 -227 -149.5 -370.5t-366.5 -143.5q-110 0 -200 34t-159 101q-86 83 -132.5 220t-46.5 330q0 198 42.5 351t135.5 272q88 113 227 176.5t324 63.5q59 0 99 -5t81 -18v-191h-10q-28 15 -84.5 28.5t-115.5 13.5q-215 0 -343 -134.5t-149 -363.5 q84 51 165.5 77.5t188.5 26.5q95 0 167.5 -17.5t148.5 -70.5q88 -61 132.5 -154t44.5 -226zM988 475q0 93 -27.5 154t-90.5 106q-46 32 -102 42t-117 10q-85 0 -158 -20t-150 -62q-2 -22 -3 -42.5t-1 -51.5q0 -158 32.5 -249.5t89.5 -144.5q46 -44 99.5 -64.5t116.5 -20.5 q145 0 228 88.5t83 254.5z',\n            'M1173 1266l-674 -1266h-214l717 1314h-848v175h1019v-223z',\n            'M1180 415q0 -193 -150.5 -321t-378.5 -128q-242 0 -385.5 125t-143.5 320q0 124 72 224.5t203 159.5v6q-120 64 -177.5 140t-57.5 190q0 168 138 280t351 112q223 0 356 -107t133 -272q0 -101 -63 -198.5t-185 -152.5v-6q140 -60 214 -148t74 -224zM943 1142 q0 107 -82.5 170.5t-210.5 63.5q-126 0 -206.5 -60t-80.5 -162q0 -72 40.5 -124.5t122.5 -93.5q37 -18 106.5 -47t135.5 -48q99 66 137 137t38 164zM974 396q0 92 -40.5 147.5t-158.5 111.5q-47 22 -103 41t-149 53q-90 -49 -144.5 -133t-54.5 -190q0 -135 93 -223t236 -88 q146 0 233.5 75t87.5 206z',\n            'M1167 834q0 -195 -44.5 -354t-134.5 -271q-91 -114 -228 -176t-322 -62q-52 0 -98 5.5t-82 17.5v191h10q29 -15 82 -28.5t118 -13.5q221 0 346.5 132.5t145.5 365.5q-93 -56 -175 -80t-179 -24q-92 0 -166.5 18t-149.5 70q-88 61 -132.5 155t-44.5 225q0 228 150 371 t366 143q108 0 200 -33.5t161 -100.5q85 -83 131 -213.5t46 -337.5zM965 877q0 155 -32 249t-88 146q-47 45 -101 64.5t-117 19.5q-144 0 -227.5 -90t-83.5 -253q0 -95 27 -155t91 -105q45 -31 99 -41.5t120 -10.5q78 0 158 21t150 61q1 21 2.5 41.5t1.5 52.5z',\n            'M585 832h-239v285h239v-285zM585 0h-239v285h239v-285z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M1408 77l-1154 513v124l1154 513v-180l-910 -395l910 -395v-180z',\n            'M1431 782h-1186v160h1186v-160zM1431 362h-1186v160h1186v-160z',\n            'M1422 590l-1154 -513v180l910 395l-910 395v180l1154 -513v-124z',\n            'M1005 1139q0 -98 -35 -174.5t-92 -135.5q-56 -57 -129 -107t-155 -97v-225h-179v305q65 37 140.5 81t123.5 89q58 52 90 107.5t32 141.5q0 113 -76.5 168.5t-197.5 55.5q-108 0 -204.5 -34t-152.5 -69h-10v204q70 27 177.5 48.5t203.5 21.5q215 0 339.5 -104.5 t124.5 -275.5zM610 0h-204v211h204v-211z',\n            'M1870 663q0 -139 -40.5 -269t-115.5 -237h-440l-27 116q-74 -60 -142 -92t-156 -32q-168 0 -268.5 127t-100.5 355q0 227 123 362t294 135q73 0 129 -16.5t121 -49.5v48h159v-842h243q42 75 63.5 187.5t21.5 201.5q0 164 -45.5 298t-133.5 230t-218 147.5t-295 51.5 q-160 0 -292.5 -58t-227.5 -156q-96 -98 -150.5 -234.5t-54.5 -290.5q0 -165 52 -301.5t147 -233.5q99 -101 232 -152.5t290 -51.5q86 0 177.5 11t175.5 35v-142q-97 -21 -181 -28.5t-173 -7.5q-186 0 -345 63.5t-273 177.5q-115 115 -179 276t-64 356q0 185 67 344.5 t183 276.5t275 184t340 67q196 0 350 -62t260 -174t162.5 -269.5t56.5 -350.5zM1245 408v518q-63 29 -113 41.5t-107 12.5q-129 0 -202 -90t-73 -256q0 -163 58 -246.5t181 -83.5q67 0 134 31t122 73z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-61 -19 -132.5 -32.5t-157.5 -13.5q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47 q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1458 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v1489h372q218 0 346.5 -31.5t217.5 -86.5q152 -95 237 -253t85 -375zM1251 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-186v-1149h186q143 0 249.5 21t195.5 78 q111 71 166.5 187t55.5 290z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1151 1313h-753v-420h647v-176h-647v-717h-198v1489h951v-176z',\n            'M1442 110q-122 -56 -266.5 -97.5t-279.5 -41.5q-174 0 -319 48t-247 144q-103 97 -159 242.5t-56 340.5q0 357 208.5 563.5t572.5 206.5q127 0 259.5 -30.5t285.5 -103.5v-235h-18q-31 24 -90 63t-116 65q-69 31 -156.5 51.5t-198.5 20.5q-250 0 -395.5 -160.5 t-145.5 -434.5q0 -289 152 -449.5t414 -160.5q96 0 191.5 19t167.5 49v365h-399v174h595v-639z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M746 387q0 -196 -119.5 -302t-320.5 -106q-48 0 -128 8.5t-134 20.5v185h11q41 -14 101 -29t123 -15q92 0 146.5 21t80.5 60q27 40 34.5 98t7.5 134v869h-315v158h513v-1102z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1142 0h-942v1489h198v-1313h744v-176z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1528 -365q-60 -15 -118.5 -21.5t-119.5 -6.5q-174 0 -279.5 95.5t-114.5 273.5q-24 -4 -46.5 -5.5t-43.5 -1.5q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5 q91 -100 139.5 -245t48.5 -329q0 -273 -111.5 -460t-299.5 -262q4 -114 54 -177t182 -63q41 0 97.5 12.5t80.5 22.5h27v-182zM1292 744q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1432 0h-257l-498 592h-279v-592h-198v1489h417q135 0 225 -17.5t162 -62.5q81 -51 126.5 -128.5t45.5 -196.5q0 -161 -81 -269.5t-223 -163.5zM969 1070q0 64 -22.5 113.5t-74.5 83.5q-43 29 -102 40.5t-139 11.5h-233v-562h200q94 0 164 16.5t119 61.5q45 42 66.5 96.5 t21.5 138.5z',\n            'M1282 425q0 -87 -40.5 -172t-113.5 -144q-80 -64 -186.5 -100t-256.5 -36q-161 0 -289.5 30t-261.5 89v248h14q113 -94 261 -145t278 -51q184 0 286.5 69t102.5 184q0 99 -48.5 146t-147.5 73q-75 20 -162.5 33t-185.5 33q-198 42 -293.5 143.5t-95.5 264.5 q0 187 158 306.5t401 119.5q157 0 288 -30t232 -74v-234h-14q-85 72 -223.5 119.5t-283.5 47.5q-159 0 -255.5 -66t-96.5 -170q0 -93 48 -146t169 -81q64 -14 182 -34t200 -41q166 -44 250 -133t84 -249z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891z',\n            'M1374 1489l-542 -1489h-264l-542 1489h212l467 -1310l467 1310h202z',\n            'M1933 1489l-387 -1489h-223l-313 1236l-306 -1236h-218l-394 1489h203l313 -1238l308 1238h201l311 -1250l311 1250h194z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M759 -392h-520v1948h520v-143h-346v-1662h346v-143z',\n            'M960 -304h-173l-717 1860h176z',\n            'M691 -392h-520v143h346v1662h-346v143h520v-1948z',\n            'M1490 684h-198l-455 627l-454 -629h-197l589 807h126z',\n            'M1306 -300h-1310v120h1310v-120z',\n            'M762 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5z',\n            'M1168 567q0 -140 -39.5 -252t-106.5 -188q-71 -79 -156 -118.5t-187 -39.5q-95 0 -166 22.5t-140 60.5l-12 -52h-176v1556h188v-556q79 65 168 106.5t200 41.5q198 0 312.5 -152t114.5 -429zM974 562q0 200 -66 303.5t-213 103.5q-82 0 -166 -35.5t-156 -91.5v-640 q80 -36 137.5 -50t130.5 -14q156 0 244.5 102.5t88.5 321.5z',\n            'M1011 70q-94 -45 -178.5 -70t-179.5 -25q-121 0 -222 35.5t-173 107.5q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5 q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -18.5t143 -57.5v484h188v-1556zM903 275v641q-76 34 -136 47t-131 13q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640z',\n            'M786 1374h-10q-31 9 -81 18.5t-88 9.5q-121 0 -175.5 -53.5t-54.5 -193.5v-38h339v-158h-333v-959h-188v959h-127v158h127v37q0 199 99 305.5t286 106.5q63 0 113.5 -6t92.5 -14v-172z',\n            'M1091 127q0 -284 -129 -417t-397 -133q-89 0 -173.5 12.5t-166.5 35.5v192h10q46 -18 146 -44.5t200 -26.5q96 0 159 23t98 64q35 39 50 94t15 123v102q-85 -68 -162.5 -101.5t-197.5 -33.5q-200 0 -317.5 144.5t-117.5 407.5q0 144 40.5 248.5t110.5 180.5 q65 71 158 110.5t185 39.5q97 0 162.5 -19.5t138.5 -59.5l12 48h176v-990zM903 307v609q-75 34 -139.5 48.5t-128.5 14.5q-155 0 -244 -104t-89 -302q0 -188 66 -285t219 -97q82 0 164.5 31.5t151.5 84.5z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1556h188v-563q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M387 1304h-212v195h212v-195zM375 0h-188v1117h188v-1117z',\n            'M533 1304h-212v195h212v-195zM521 -27q0 -196 -100 -296t-268 -100q-40 0 -105.5 8t-109.5 20v179h10q28 -11 75.5 -25t92.5 -14q72 0 116 20t66 60t28.5 96.5t6.5 137.5v900h-233v158h421v-1144z',\n            'M1199 0h-248l-448 489l-122 -116v-373h-188v1556h188v-998l543 559h237l-519 -516z',\n            'M375 0h-188v1556h188v-1556z',\n            'M1815 0h-188v636q0 72 -6.5 139t-27.5 107q-23 43 -66 65t-124 22q-79 0 -158 -39.5t-158 -100.5q3 -23 5 -53.5t2 -60.5v-715h-188v636q0 74 -6.5 140.5t-27.5 106.5q-23 43 -66 64.5t-124 21.5q-77 0 -154.5 -38t-154.5 -97v-834h-188v1117h188v-124q88 73 175.5 114 t186.5 41q114 0 193.5 -48t118.5 -133q114 96 208 138.5t201 42.5q184 0 271.5 -111.5t87.5 -311.5v-725z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1529h188v-117q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M1091 -412h-188v538q-87 -75 -173 -111.5t-186 -36.5q-199 0 -317.5 153.5t-118.5 423.5q0 144 41.5 254.5t109.5 185.5q66 73 155 113t188 40q90 0 159.5 -20t141.5 -59l12 48h176v-1529zM903 284v632q-78 35 -138 49t-130 14q-163 0 -248 -110.5t-85 -304.5 q0 -196 68.5 -301.5t215.5 -105.5q82 0 164 35.5t153 91.5z',\n            'M882 912h-10q-42 10 -81.5 14.5t-93.5 4.5q-87 0 -168 -38.5t-156 -99.5v-793h-188v1117h188v-165q112 90 197.5 127.5t174.5 37.5q49 0 71 -2.5t66 -9.5v-193z',\n            'M983 322q0 -153 -126.5 -251t-345.5 -98q-124 0 -227.5 29.5t-173.5 64.5v211h10q89 -67 198 -106.5t209 -39.5q124 0 194 40t70 126q0 66 -38 100t-146 58q-40 9 -104.5 21t-117.5 26q-147 39 -208.5 114.5t-61.5 185.5q0 69 28.5 130t86.5 109q56 47 142.5 74.5 t193.5 27.5q100 0 202.5 -24.5t170.5 -59.5v-201h-10q-72 53 -175 89.5t-202 36.5q-103 0 -174 -39.5t-71 -117.5q0 -69 43 -104q42 -35 136 -57q52 -12 116.5 -24t107.5 -22q131 -30 202 -103q71 -74 71 -196z',\n            'M765 10q-53 -14 -115.5 -23t-111.5 -9q-171 0 -260 92t-89 295v594h-127v158h127v321h188v-321h388v-158h-388v-509q0 -88 4 -137.5t28 -92.5q22 -40 60.5 -58.5t117.5 -18.5q46 0 96 13.5t72 22.5h10v-169z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1590 1117l-291 -1117h-174l-287 861l-285 -861h-173l-294 1117h196l205 -865l279 865h155l286 -865l194 865h189z',\n            'M1152 0h-237l-317 429l-319 -429h-219l436 557l-432 560h237l315 -422l316 422h220l-439 -550z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197z',\n            'M995 0h-902v139l651 821h-637v157h871v-134l-654 -824h671v-159z',\n            'M1113 -392h-150q-179 0 -290.5 99.5t-111.5 287.5v149q0 169 -83 264.5t-254 95.5h-51v156h51q171 0 254 95.5t83 264.5v149q0 188 111.5 287.5t290.5 99.5h150v-138h-114q-136 0 -197.5 -63t-61.5 -203v-175q0 -139 -77 -233.5t-214 -149.5v-24q137 -55 214 -149.5 t77 -233.5v-175q0 -140 61.5 -203t197.5 -63h114v-138z',\n            'M552 -392h-174v1948h174v-1948z',\n            'M1127 504h-51q-171 0 -254 -95.5t-83 -264.5v-149q0 -188 -111.5 -287.5t-290.5 -99.5h-150v138h114q136 0 197.5 63t61.5 203v175q0 139 77 233.5t214 149.5v24q-137 55 -214 149.5t-77 233.5v175q0 140 -61.5 203t-197.5 63h-114v138h150q179 0 290.5 -99.5 t111.5 -287.5v-149q0 -169 83 -264.5t254 -95.5h51v-156z',\n            'M1489 927q-2 -99 -22.5 -195t-65.5 -171q-46 -77 -111 -121t-165 -44q-94 0 -167 39.5t-157 141.5q-102 125 -148 157t-96 32q-94 0 -144 -87.5t-59 -283.5h-167q2 100 22.5 194.5t64.5 171.5q43 74 112 119.5t165 45.5q93 0 166.5 -38.5t158.5 -142.5q80 -98 131 -143.5 t112 -45.5q103 0 151.5 101t51.5 270h167z',\n            '',\n            'M505 1278h-204v211h204v-211zM515 0h-224l26 1079h170z',\n            'M1120 74q-71 -30 -161 -53.5t-194 -26.5v-355h-118v359q-227 21 -357.5 165t-130.5 394q0 242 133.5 391.5t354.5 171.5v355h118v-351q104 -3 197 -25t158 -53v-203h-11q-55 44 -142 85t-202 50v-839q120 10 206.5 52.5t137.5 83.5h11v-201zM647 142v834 q-135 -20 -216 -125t-81 -294q0 -181 76 -286t221 -129z',\n            'M1163 0h-1026v207q118 32 169.5 126.5t51.5 279.5h-176v138h176v310q0 200 126.5 328.5t331.5 128.5q105 0 181 -17t140 -34v-206h-10q-62 42 -138 66t-162 24q-140 0 -209.5 -82.5t-69.5 -226.5v-291h415v-138h-415v-61q0 -126 -62 -219.5t-160 -150.5v-11h837v-171z ',\n            'M1168 257l-110 -110l-236 234q-44 -26 -81 -37t-89 -11q-46 0 -89.5 12.5t-79.5 35.5l-236 -236l-109 113l233 234q-23 37 -35 81.5t-12 87.5q0 52 11 88.5t37 79.5l-234 237l111 110l235 -235q36 23 79.5 35.5t88.5 12.5q44 0 88 -12t81 -35l234 234l113 -109l-235 -237 q24 -38 36 -79.5t12 -89.5q0 -45 -12.5 -89t-35.5 -80zM832 661q0 73 -52.5 129t-127.5 56q-73 0 -126.5 -55t-53.5 -130q0 -74 52.5 -129.5t127.5 -55.5q73 0 126.5 54.5t53.5 130.5z',\n            'M1191 1489l-448 -831v-94h372v-138h-370v-426h-188v426h-370v138h372v73l-451 852h212l332 -659l336 659h203z',\n            'M552 758h-174v798h174v-798zM552 -392h-174v798h174v-798z',\n            'M1128 601q0 -106 -59 -187t-158 -136v-7q97 -46 141 -118.5t44 -162.5q0 -77 -33 -146t-98 -119q-72 -56 -169 -83t-221 -27q-87 0 -170.5 13.5t-175.5 44.5v194h10q79 -37 169 -62t198 -25q134 0 215 48.5t81 135.5q0 56 -19.5 88.5t-64.5 57.5q-41 23 -113 41.5 t-154 38.5q-214 52 -296 133q-83 81 -83 210q0 98 57 182.5t159 141.5v7q-101 48 -143 121t-42 162q0 81 32 146.5t99 117.5q64 50 163.5 79t227.5 29q87 0 171 -14t175 -43v-194h-10q-58 27 -152.5 57t-215.5 30q-127 0 -211.5 -46t-84.5 -133q0 -57 21.5 -92.5t64.5 -58.5 t109 -41.5t157 -39.5q200 -46 290 -125q89 -79 89 -218zM881 399q28 33 43 65.5t15 90.5q0 51 -16.5 86t-45.5 58q-28 24 -67 39.5t-83 27.5q-39 11 -85.5 21.5t-116.5 30.5q-18 -9 -49 -31.5t-53 -46.5q-24 -26 -43 -69t-19 -92q0 -50 15.5 -85t44.5 -59q27 -23 67.5 -39 t84.5 -27q38 -10 86 -22t115 -31q20 11 53 34.5t54 48.5z',\n            'M958 1304h-199v195h199v-195zM545 1304h-199v195h199v-195z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1375 258 q-86 -39 -165.5 -58.5t-157.5 -19.5q-227 0 -359 123t-132 357q0 225 134.5 354t356.5 129q89 0 175 -24t148 -52v-181h-16q-54 40 -138.5 75t-173.5 35q-142 0 -221.5 -85.5t-79.5 -250.5q0 -159 76.5 -246t224.5 -87q83 0 161.5 29t150.5 81h16v-179z',\n            'M944 554h-170v94q-28 -20 -52.5 -38.5t-68.5 -37.5q-45 -20 -85.5 -30.5t-113.5 -10.5q-128 0 -215.5 85t-87.5 217q0 106 46.5 173.5t123.5 103.5q78 36 197.5 51.5t255.5 21.5v18q0 53 -18 85t-51 51q-34 18 -77.5 23t-91.5 5q-84 0 -168 -24t-123 -38h-14v172 q45 13 137 29t169 16q217 0 312 -84.5t95 -243.5v-638zM774 796v245q-69 -4 -160.5 -12t-145.5 -23q-64 -18 -103 -56.5t-39 -106.5q0 -76 45.5 -114t139.5 -38q82 0 147.5 33.5t115.5 71.5z',\n            'M1146 191l-528 419v85l528 418v-188l-357 -273l357 -273v-188zM716 162l-550 446v89l550 445v-196l-371 -294l371 -294v-196z',\n            'M1456 57h-171v545h-1075v160h1246v-705z',\n            'M777 561h-624v181h624v-181z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1581 215h-223l-331 355 h-162v-355h-165v915h312q94 0 155 -8t120 -39q63 -34 92.5 -82.5t29.5 -121.5q0 -97 -56.5 -161.5t-155.5 -102.5zM1229 868q0 36 -14 64t-47 46q-31 17 -66 22t-88 5h-149v-309h127q62 0 107 9.5t74 32.5q31 25 43.5 55t12.5 75z',\n            'M1306 1668h-1305l-5 120h1310v-120z',\n            'M956 1116q0 -168 -116 -284t-285 -116t-285 115.5t-116 284.5q0 168 116 284t285 116q170 0 285.5 -116t115.5 -284zM791 1116q0 102 -67 171.5t-169 69.5t-169 -69.5t-67 -171.5q0 -104 68.5 -172.5t167.5 -68.5q102 0 169 70t67 171z',\n            'M1461 179h-1246v158h540v422h-540v158h540v545h166v-545h540v-158h-540v-422h540v-158z',\n            'M967 566h-760v156q100 62 183.5 117t134.5 96q131 103 168 154.5t37 135.5q0 69 -53.5 107t-143.5 38q-89 0 -175 -30.5t-134 -61.5h-13v180q71 26 158.5 43.5t174.5 17.5q180 0 273.5 -78.5t93.5 -203.5q0 -99 -48.5 -174.5t-163.5 -165.5q-55 -43 -132.5 -94 t-143.5 -92h544v-145z',\n            'M956 817q0 -75 -33 -131.5t-89 -90.5q-57 -35 -131 -51.5t-163 -16.5q-94 0 -176.5 15t-156.5 43v179h14q41 -36 138.5 -65.5t190.5 -29.5q100 0 166.5 35.5t66.5 110.5q0 85 -59 115t-171 30h-143v141h128q112 0 165.5 38.5t53.5 106.5q0 61 -49.5 96.5t-153.5 35.5 q-77 0 -174.5 -31t-141.5 -67h-14v178q74 27 160.5 44.5t176.5 17.5q175 0 271.5 -68t96.5 -174q0 -89 -55 -146t-144 -83v-8q95 -17 160.5 -72.5t65.5 -151.5z',\n            'M963 1676l-273 -374h-149l179 374h243z',\n            'M1124 0h-178l-10 118q-59 -65 -123.5 -102t-155.5 -37q-86 0 -149.5 35t-129.5 99v-525h-188v1529h188v-838q32 -39 109.5 -80t168.5 -41q93 0 159.5 33.5t120.5 93.5v832h188v-1117z',\n            'M1106 -363h-148v1722h-214v-1722h-149v956q-206 5 -332 129t-126 328q0 207 130 323t373 116h466v-1852z',\n            'M492 511h-239v283h239v-283z',\n            'M880 -89q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 29 -3 65.5t-6 61.5h153q2 -19 5 -45t3 -64z',\n            'M914 566h-615v122h234v568h-242v112q45 0 99 6.5t84 18.5q37 16 59 38t25 62h135v-805h221v-122z',\n            'M996 1025q0 -235 -122 -364.5t-315 -129.5q-201 0 -319.5 132.5t-118.5 361.5t118.5 362t319.5 133q193 0 315 -130t122 -365zM814 1025q0 172 -67.5 258t-187.5 86q-122 0 -189 -87t-67 -257t67 -256.5t189 -86.5q120 0 187.5 85.5t67.5 257.5z',\n            'M1154 608l-550 -446v196l371 294l-371 294v196l550 -445v-89zM702 610l-528 -419v188l357 273l-357 273v188l528 -418v-85z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1857 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1548 353v400l-353 -400h353z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1955 0h-688v148q91 69 158 121t106 89q109 103 141 157.5t32 136.5q0 70 -44 107t-120 37q-70 0 -141.5 -30t-112.5 -62h-15v179q65 27 140.5 44t152.5 17 q157 0 241.5 -79t84.5 -201q0 -93 -41 -167t-147 -168q-49 -43 -119.5 -96t-125.5 -94h498v-139z',\n            'M793 826q0 -71 -30 -127t-78 -90q-53 -37 -114.5 -53t-140.5 -16q-82 0 -153.5 15t-136.5 43v175h17q37 -35 114 -64.5t156 -29.5q84 0 139 36.5t55 108.5q0 83 -50 112.5t-141 29.5h-140v139h125q87 0 134.5 38t47.5 104q0 60 -41 95.5t-128 35.5q-66 0 -142.5 -31 t-113.5 -66h-17v175q64 27 139 44t154 17q152 0 237 -70t85 -168q0 -87 -48.5 -143.5t-125.5 -82.5v-8q80 -16 138.5 -70.5t58.5 -148.5zM1500 1489l-780 -1489h-165l780 1489h165zM1913 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1604 353v400 l-353 -400h353z',\n            'M712 1278h-204v211h204v-211zM958 40q-83 -30 -176 -50t-205 -20q-215 0 -339.5 104.5t-124.5 275.5q0 98 34.5 173t93.5 137q58 62 136.5 112.5t146.5 91.5v225h179v-305q-60 -33 -139 -81.5t-125 -88.5q-54 -47 -88 -109t-34 -140q0 -113 76.5 -168.5t197.5 -55.5 q103 0 201.5 33t155.5 70h10v-204z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM862 1675h-149l-273 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM955 2049l-273 -374h-149l179 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1033 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1119 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5 t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1005 1677h-199v195h199v-195zM592 1677h-199v195h199v-195z',\n            'M1374 0h-211l-148 415h-640l-148 -415h-201l519 1407q-89 44 -142.5 123.5t-53.5 181.5q0 143 102 240t248 97q147 0 248.5 -97t101.5 -240q0 -100 -52.5 -181.5t-141.5 -123.5zM899 1710q0 86 -57 143.5t-143 57.5t-143 -58t-57 -143q0 -86 57.5 -143.5t142.5 -57.5 q86 0 143 57.5t57 143.5zM953 585l-258 715l-259 -715h517z',\n            'M1901 0h-944v556h-524l-212 -556h-207l594 1489h1293v-176h-749v-408h749v-176h-749v-553h749v-176zM957 723v601h-219l-239 -601h458z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-11 -3 -24 -7.5t-31 -7.5q2 -19 3.5 -44.5t1.5 -48.5q0 -162 -93.5 -248t-240.5 -86q-38 0 -97.5 7t-104.5 19v162h9q26 -10 71.5 -24t95.5 -14q106 0 155 40t49 126q0 19 -1 41.5t-3 42.5q-19 -2 -40.5 -3t-39.5 -1 q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270 t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM822 1675h-149l-273 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM993 2049l-273 -374h-149l179 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1031 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1038 1677h-199v195h199v-195zM625 1677h-199v195h199v-195z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM568 1675h-149l-273 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM725 2049l-273 -374h-149l179 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM776 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1468 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v740h-196v143h196v606h372q218 0 347 -31.5t217 -86.5q152 -95 237 -253t85 -375zM1261 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-188v-436h361v-143h-361v-570h188 q143 0 249.5 21t195.5 78q111 71 166.5 187t55.5 290z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489zM1208 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5 q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM932 1675h-149l-273 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1083 2049l-273 -374h-149l179 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1136 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1207 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228 t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1307 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1289 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1108 1677h-199v195h199v-195zM695 1677h-199v195h199v-195z',\n            'M1385 216l-111 -111l-436 440l-436 -440l-111 111l440 436l-440 436l111 111l436 -440l436 440l111 -111l-440 -436z',\n            'M1498 744q0 -184 -49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-115 0 -215.5 29t-179.5 84l-159 -228h-132l205 294q-101 100 -155.5 250t-54.5 346q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q118 0 215 -27.5t179 -82.5l142 201h132 l-188 -268q101 -100 156.5 -248.5t55.5 -350.5zM1097 1260q-57 46 -129 68.5t-161 22.5q-110 0 -200 -38.5t-156 -116.5q-64 -76 -98.5 -190.5t-34.5 -261.5q0 -140 29.5 -252t87.5 -188zM1295 744q0 139 -30 253t-88 189l-664 -957q60 -45 132.5 -68t161.5 -23 q110 0 201.5 40t153.5 116q67 82 100 194.5t33 255.5z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM932 1675h-149l-273 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1073 2049l-273 -374h-149l179 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1084 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1056 1677h-199v195h199v-195zM643 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM935 2049l-273 -374h-149l179 374h243z',\n            'M1174 787q0 -92 -35 -176.5t-95 -141.5q-78 -75 -187.5 -111t-260.5 -36h-198v-322h-198v1489h198v-270h205q133 0 230 -22.5t164 -66.5q83 -53 130 -138t47 -205zM968 782q0 72 -26 125.5t-82 88.5q-48 30 -112 42.5t-154 12.5h-196v-563h167q119 0 195 20.5t123 65.5 q44 41 64.5 92t20.5 116z',\n            'M1165 481q0 -214 -135.5 -359.5t-354.5 -145.5q-44 0 -101.5 7.5t-93.5 20.5v165h10q42 -24 91.5 -33t105.5 -9q74 0 129 29t88 78q35 52 50.5 115.5t15.5 139.5q0 166 -105.5 250.5t-303.5 84.5v150q157 0 234 59.5t77 188.5q0 35 -11 68t-41 64q-27 29 -71 46.5 t-105 17.5q-57 0 -103 -14.5t-86 -53.5q-37 -36 -59.5 -102t-22.5 -161v-1087h-188v1080q0 124 36 215.5t100 153.5q60 58 149.5 87.5t183.5 29.5q183 0 297.5 -87t114.5 -238q0 -112 -71 -201t-184 -121v-9q164 -37 259 -148.5t95 -280.5z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM738 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM934 1676l-273 -374h-149l179 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM961 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5 q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM926 1304h-199v195h199v-195zM513 1304h-199v195h199v-195z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM956 1630q0 -143 -102 -242t-248 -99q-144 0 -247 98.5t-103 242.5 q0 143 102 241t248 98q147 0 248.5 -98t101.5 -241zM811 1630q0 86 -58.5 145.5t-146.5 59.5t-146.5 -59t-58.5 -146t59 -146t146 -59q88 0 146.5 59t58.5 146z',\n            'M1855 559h-819q0 -114 30 -195t85 -133q52 -48 123 -70.5t157 -22.5q111 0 217.5 41.5t172.5 93.5h12v-205q-78 -35 -184.5 -64.5t-215.5 -29.5q-166 0 -284.5 52t-194.5 155q-21 -19 -67 -59t-96 -68q-63 -36 -137 -59.5t-189 -23.5q-150 0 -255.5 97t-105.5 249 q0 124 54 200.5t155 118.5q95 39 241 53t308 17v61q0 65 -23 107.5t-64 65.5q-40 23 -96 31.5t-116 8.5q-79 0 -168.5 -21t-179.5 -57h-13v191q55 15 158 34t204 19q159 0 264.5 -46.5t162.5 -137.5q69 82 170 134t226 52q217 0 342.5 -128t125.5 -379v-82zM1673 703 q-5 68 -23.5 119t-50.5 88q-34 39 -88.5 61t-133.5 22q-133 0 -223 -75t-115 -215h634zM894 298q-20 53 -30.5 119t-10.5 141q-105 -3 -201 -7.5t-178 -25.5q-79 -20 -127.5 -65.5t-48.5 -128.5q0 -95 58 -141t176 -46q99 0 195.5 43t166.5 111z',\n            'M1011 70q-33 -15 -71.5 -30.5t-67.5 -24.5q3 -19 5.5 -47.5t2.5 -56.5q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 22 -1.5 45t-3.5 43q-16 -2 -30.5 -4t-39.5 -2q-121 0 -222 35.5t-173 107.5 q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM759 1302h-149l-273 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM960 1676l-273 -374h-149l179 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM986 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM951 1304h-199v195h199v-195zM538 1304h-199v195h199v-195z',\n            'M375 0h-188v1117h188v-1117zM401 1302h-149l-273 374h243z',\n            'M375 0h-188v1117h188v-1117zM582 1676l-273 -374h-149l179 374h243z',\n            'M572 1297h-151l-143 267l-142 -267h-147l178 379h227zM375 0h-188v1117h188v-1117z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1137 637q0 -324 -142 -496t-383 -172q-229 0 -367.5 135t-138.5 380q0 226 137 358t339 132q108 0 185.5 -26.5t163.5 -79.5q-32 112 -99.5 219t-154.5 181l-264 -162l-66 97l237 142q-84 67 -156 107.5t-165 87.5v16h295q35 -25 84 -58.5t86 -59.5l210 128l66 -97 l-186 -109q153 -147 236 -325.5t83 -397.5zM847 226q49 59 75 143.5t26 234.5q0 32 -1.5 59.5t-3.5 57.5q-75 45 -157.5 66.5t-168.5 21.5q-147 0 -231.5 -87.5t-84.5 -239.5q0 -180 84.5 -267t227.5 -87q66 0 127.5 22t106.5 76z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725zM1075 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5 t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M732 1302h-149l-273 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M933 1676l-273 -374h-149l179 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M963 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M928 1304h-199v195h199v-195zM515 1304h-199v195h199v-195z',\n            'M957 1022h-238v275h238v-275zM1466 572h-1256v160h1256v-160zM957 7h-238v275h238v-275z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-84 0 -155.5 21t-130.5 60l-133 -198h-110l171 256q-75 77 -116.5 190t-41.5 260q0 273 139.5 431.5t376.5 158.5q87 0 158 -22t125 -57l116 172h111l-155 -231q76 -76 118 -188t42 -264zM813 930q-37 29 -86.5 43.5t-104.5 14.5 q-155 0 -240 -110t-85 -320q0 -97 17 -171t52 -128zM946 558q0 97 -17.5 173t-51.5 130l-448 -671q39 -31 86.5 -46t106.5 -15q150 0 237 108.5t87 320.5z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM764 1302h-149l-273 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM945 1676l-273 -374h-149l179 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM985 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM955 1304h-199v195h199v-195zM542 1304h-199v195h199v-195z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197zM928 1676l-273 -374h-149l179 374h243z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1968h188v-556q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M773 1676l-49 -384h-145l-49 384h243z',\n            'M765 1676l-49 -384h-128l-49 384h226zM1048 1304h-191v195h191v-195zM447 1304h-191v195h191v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM250 1489l-49 -384h-145l-49 384h243z',\n            'M585 832h-239v285h239v-285z',\n            'M1424 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1582 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489zM243 1489l-49 -384h-145l-49 384h243z',\n            'M968 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1501 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1483 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1537 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1751 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174zM243 1489l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM379 1676l-56 -384h-84l-56 384h196zM615 1304h-171v195h171v-195zM118 1304h-171v195h171v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1162 1313h-764v-1313h-198v1489h962v-176z',\n            'M1414 0h-1388l562 1489h264zM1147 168l-432 1147l-431 -1147h863z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1120 713h-627v179h627v-179z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1378 0h-213l-468 1285l-468 -1285h-203l556 1489h240z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1215 1313h-1101v176h1101v-176zM1163 729h-997v176h997v-176zM1215 0h-1101v176h1101v-176z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1339 0h-198v1313h-743v-1313h-198v1489h1139v-1489z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1280 0h-1162v184l620 600l-600 526v179h1096v-176h-832l586 -506v-26l-630 -605h922v-176z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1572 755q0 -140 -44.5 -248.5t-123.5 -181.5q-85 -79 -207 -125.5t-260 -49.5v-166h-197v166q-134 3 -257 48t-210 127q-79 74 -123.5 182t-44.5 248q0 136 43 238t119 178q81 81 202.5 128t270.5 51v155h197v-155q148 -3 271 -52t202 -127q75 -73 118.5 -177t43.5 -239 zM1366 763q0 99 -32 182t-91 140q-58 56 -129 82t-177 28v-890q94 2 171 30.5t127 75.5q65 60 98 147t33 205zM740 305v890q-106 -1 -177 -28t-129 -82t-90.5 -140t-32.5 -182q0 -112 33.5 -203t97.5 -149q49 -45 126.5 -75t171.5 -31z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1604 910q0 -157 -40.5 -264.5t-117.5 -174.5q-80 -69 -192.5 -104t-263.5 -45v-322h-197v322q-154 11 -267 47t-188 102q-78 69 -118.5 176t-40.5 263v579h198v-602q0 -109 29.5 -180t81.5 -115q53 -45 130 -68.5t175 -30.5v996h197v-996q97 8 175 30.5t131 68.5 q56 49 83 115.5t27 179.5v602h198v-579z',\n            'M1568 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM939 1677h-199v195h199v-195zM526 1677h-199v195h199v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5zM743 1676l-49 -384h-145l-49 384h243z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206zM721 1676 l-49 -384h-145l-49 384h243z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137zM802 1676l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM403 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM760 1676l-49 -384h-128l-49 384h226zM1043 1304h-191 v195h191v-195zM442 1304h-191v195h191v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1165 444q0 -202 -134.5 -334t-339.5 -132q-79 0 -167 22t-151 64v-476h-188v1490q0 224 126.5 351t349.5 127q90 0 164.5 -21.5t133.5 -67.5q57 -43 91 -112t34 -160q0 -127 -69.5 -221.5t-196.5 -131.5v-17q159 -26 253 -125.5t94 -255.5zM971 449q0 89 -34.5 144.5 t-92.5 86.5q-59 32 -132 43t-146 11h-36v160h36q66 0 131 14.5t104 44.5q46 34 68.5 83t22.5 134q0 112 -69 170t-178 58q-73 0 -125 -26.5t-85 -70.5q-32 -44 -47 -102.5t-15 -120.5v-862q66 -38 141 -53.5t147 -15.5q149 0 229.5 78.5t80.5 223.5z',\n            'M1151 1117l-457 -1061v-468h-188v468l-445 1061h204l343 -828l346 828h197z',\n            'M1139 551q0 -272 -138.5 -427t-376.5 -155q-241 0 -379.5 151.5t-138.5 413.5q0 141 43 239.5t107 162.5q69 72 159 113t182 58q-76 63 -166 130.5t-192 139.5v179h810v-158h-561v-10q68 -46 179 -124t204 -162q150 -136 209 -261.5t59 -289.5zM945 551q0 135 -55 249 t-165 200q-66 -8 -138.5 -32t-138.5 -77q-63 -50 -105.5 -137t-42.5 -214q0 -201 85 -305t241 -104q153 0 236 105.5t83 314.5z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206z',\n            'M922 75q32 -40 46 -85.5t14 -85.5q0 -84 -45 -168.5t-112 -147.5h-179v14q90 79 128 138.5t38 128.5q0 57 -30.5 95t-77.5 38h-145q-229 0 -340 116t-111 345q0 140 46 268t124 247q75 112 173.5 214.5t206.5 196.5v9h-460v158h744v-135q-117 -78 -231.5 -181 t-204.5 -223q-89 -117 -146 -257t-57 -283q0 -34 3 -70t15 -76q10 -38 34.5 -75.5t63.5 -61.5q36 -22 96.5 -24.5t116.5 -2.5h86q71 0 122 -26t82 -66z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137z',\n            'M1141 768q0 -190 -23 -316.5t-59 -210.5q-58 -135 -163 -203.5t-257 -68.5t-257 68.5t-163 203.5q-37 84 -59.5 210.5t-22.5 316.5q0 174 22.5 305.5t60.5 214.5q57 130 162.5 199t256.5 69t256.5 -69t162.5 -199q37 -84 60 -215t23 -305zM952 858q-4 143 -28.5 250 t-56.5 161q-41 70 -95 98.5t-133 28.5t-133 -28.5t-95 -98.5q-34 -55 -57.5 -161.5t-27.5 -249.5h626zM952 697h-626q0 -142 23 -258.5t59 -178.5q40 -69 96 -100t135 -31t135 31t96 100q36 62 59 178.5t23 258.5z',\n            'M375 0h-188v1117h188v-1117z',\n            'M1192 0h-248l-451 489l-112 -109v-380h-188v1117h188v-550l384 417q72 79 135.5 107t126.5 28q28 0 58 -1t37 -1v-166h-11q-16 2 -39.5 3t-36.5 1q-47 0 -85.5 -23.5t-67.5 -56.5l-251 -271z',\n            'M1151 0h-205l-328 829l-361 -829h-196l465 1056l-215 500h211z',\n            'M1125 0h-186v118q-74 -78 -141.5 -108.5t-145.5 -30.5q-75 0 -135 27t-144 107v-525h-188v1529h188v-838q32 -39 111 -80t170 -41q93 0 161 33.5t122 93.5v832h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1041 -96q0 -85 -45.5 -169t-111.5 -147h-180v14q92 79 129.5 139t37.5 128q0 55 -29 94t-75 39h-140q-140 0 -232.5 27t-155.5 84q-66 60 -100.5 135.5t-34.5 163.5q0 78 25 144t73 119q44 49 112.5 83.5t144.5 53.5v11q-125 28 -200 110.5t-75 186.5q0 83 43.5 150.5 t133.5 125.5v6h-228v154h824v-158h-256q-68 0 -122.5 -14.5t-102.5 -48.5q-45 -32 -72 -83t-27 -118q0 -79 32.5 -128t83.5 -75q45 -23 104 -34t139 -11h170v-165h-295q-66 0 -118.5 -20t-99.5 -59q-43 -37 -68.5 -90t-25.5 -112q0 -102 37.5 -159t101.5 -82 q63 -25 139.5 -28.5t166.5 -3.5h28q68 0 119.5 -23.5t84.5 -60.5q31 -35 48 -82.5t17 -96.5z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1120 0h-188v955h-559v-955h-188v1117h935v-1117z',\n            'M1172 577q0 -258 -138.5 -428.5t-360.5 -170.5q-65 0 -146.5 18t-153.5 61v-469h-188v1058q0 123 35.5 215.5t101.5 158.5q62 62 155.5 95t195.5 33q243 0 371 -147t128 -424zM978 565q0 218 -80 320t-226 102q-158 0 -228.5 -96t-70.5 -278v-403q73 -34 132.5 -48.5 t134.5 -14.5q162 0 250 111t88 307z',\n            'M1018 -96q0 -87 -47 -172t-109 -144h-177v14q86 75 124.5 135.5t38.5 131.5q0 54 -30 93.5t-75 39.5h-92q-117 0 -216 30t-174 97q-73 66 -114.5 170t-41.5 250q0 270 155.5 432t414.5 162q84 0 164 -18.5t147 -45.5v-211h-12q-94 62 -172.5 87t-146.5 25 q-166 0 -260.5 -119t-94.5 -312q0 -112 28.5 -183t78.5 -116q50 -44 114.5 -63.5t139.5 -19.5h100q115 0 186 -76.5t71 -186.5z',\n            'M1137 558q0 -281 -140.5 -435t-373.5 -154q-241 0 -379 158t-138 431q0 275 141 432.5t378 157.5q55 0 108 -11t82 -20h480v-165h-288q62 -73 96 -170t34 -224zM943 558q0 215 -82 322t-236 107q-161 0 -243 -112t-82 -317q0 -209 83.5 -318t239.5 -109q152 0 236 107.5 t84 319.5z',\n            'M1006 952h-404v-952h-188v952h-404v165h996v-165z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710z',\n            'M1514 576q0 -259 -171.5 -417t-440.5 -173v-398h-187v398q-130 6 -240.5 46.5t-191.5 109.5q-85 74 -132 172t-47 232q0 159 59 296t192 275h229v-17q-136 -99 -210 -232t-74 -300q0 -189 112.5 -304t301.5 -121v1000q33 2 70.5 2.5t76.5 0.5q304 0 478.5 -149.5 t174.5 -420.5zM1319 586q0 184 -112 293.5t-305 109.5v-846q206 10 311.5 126t105.5 317z',\n            'M1160 -412h-213l-346 619l-350 -619h-203l444 770l-433 759h213l335 -600l339 600h203l-433 -751z',\n            'M1507 446q0 -114 -48 -198t-127 -137q-82 -55 -182 -82.5t-215 -32.5v-408h-187v408q-115 6 -214.5 32t-182.5 83q-80 54 -127.5 137.5t-47.5 197.5v671h188v-612q0 -113 37.5 -180.5t89.5 -102.5q56 -38 123 -53t134 -19v967h187v-967q67 5 134 19t123 53 q59 40 93 101.5t34 181.5v612h188v-671z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM953 1304h-199v195h199v-195zM540 1304h-199v195h199 v-195z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M743 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM768 1676l-49 -384h-145l-49 384h243z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5zM955 1676l-49 -384h-145l-49 384h243z',\n            'M1145 837q0 -164 -39 -344t-121 -303q-85 -124 -186.5 -173t-214.5 -49q-192 0 -313.5 126.5t-121.5 329.5q0 228 134.5 372.5t336.5 144.5q90 0 169.5 -26t158.5 -91q2 26 3 55.5t1 55.5q0 217 -79 318t-231 101q-78 0 -169.5 -31.5t-169.5 -86.5h-11v194 q81 44 181.5 66.5t196.5 22.5q137 0 239.5 -54.5t164.5 -178.5q42 -86 56.5 -189t14.5 -260zM942 678q-60 47 -136 74t-148 27q-141 0 -225 -91t-84 -261q0 -145 67.5 -221.5t179.5 -76.5q128 0 209.5 97t115.5 287q6 33 11.5 73t9.5 92z',\n            'M1438 0h-1388l562 1489h264zM1171 168l-432 1147l-431 -1147h863z',\n            'M1532 1315h-200v-1508h-198v1508h-592v-1508h-198v1508h-200v174h1388v-174z',\n            'M1369 -189h-1182v191l673 668l-663 631v188h1133v-176h-891l648 -601v-72l-666 -653h948v-176z',\n            'M1456 572h-1236v160h1236v-160z',\n            'M843 1489l-780 -1489h-165l780 1489h165z',\n            'M492 511h-239v283h239v-283z',\n            'M1737 1788l-880 -1939h-102l-384 993h-237v139h393l313 -821l730 1628h167z',\n            'M1887 663q0 -239 -122.5 -372.5t-329.5 -133.5q-133 0 -244 76.5t-180 222.5q-79 -151 -184.5 -225t-248.5 -74q-191 0 -304 135.5t-113 349.5q0 238 125 372t327 134q134 0 245 -77t179 -222q79 150 185.5 224.5t247.5 74.5q191 0 304 -135.5t113 -349.5zM967 729 q-63 117 -155 175.5t-188 58.5q-138 0 -216 -83.5t-78 -237.5q0 -133 63.5 -216t182.5 -83q110 0 172 48.5t119 142.5q34 57 52.5 92.5t47.5 102.5zM1718 663q0 134 -64 216.5t-182 82.5q-88 0 -152.5 -35.5t-138.5 -155.5q-30 -48 -55.5 -99.5t-44.5 -95.5 q60 -115 153.5 -174.5t189.5 -59.5q138 0 216 83t78 238z',\n            'M1168 1367h-10q-32 8 -89.5 18.5t-89.5 10.5q-129 0 -181 -61q-53 -61 -53 -210v-1123q0 -206 -104 -315q-105 -110 -293 -110q-52 0 -106.5 5.5t-103.5 15.5v178h10q33 -8 87 -18.5t88 -10.5q129 0 182 61q52 61 52 210v1123q0 204 104 315q104 110 293 110 q58 0 109 -5.5t105 -15.5v-178z',\n            'M1431 1104q-20 -194 -111 -293t-249 -99q-77 0 -147 37.5t-126 82.5q-65 52 -117 79.5t-96 27.5q-75 0 -117 -48t-70 -172h-155q23 182 112.5 280t248.5 98q72 0 143 -37t130 -83q61 -48 114.5 -77.5t98.5 -29.5q76 0 120.5 54.5t63.5 179.5h157zM1432 588 q-25 -184 -112 -281.5t-250 -97.5q-72 0 -144 37.5t-129 82.5q-39 31 -103 69t-110 38q-78 0 -121 -55t-63 -179h-157q19 192 110.5 292t249.5 100q77 0 146 -37t127 -83q35 -28 97 -67.5t116 -39.5q75 0 117 49.5t69 171.5h157z',\n            'M1431 362h-608l-104 -335h-153l104 335h-425v156h474l84 268h-558v156h606l105 335h153l-105 -335h427v-156h-476l-83 -268h559v-156z',\n            'M1408 303l-1154 483v124l1154 483v-183l-889 -362l889 -362v-183zM1408 0h-1154v160h1154v-160z',\n            'M1422 786l-1154 -483v183l889 362l-889 362v183l1154 -483v-124zM1422 0h-1154v160h1154v-160z'\n        ];\n        this.OUTLINE_X = [\n            [], [291, 301, 505, 515], [168, 211, 729, 772, 554], [195, 389, 917, 1364, 1481, 1481, 1288, 760, 312, 195],\n            [155, 604, 722, 1129.8, 1160, 1107, 722, 604, 278.5, 191.1, 162, 155], [149, 172.3, 242, 630, 1687, 1844.3, 1960, 2031.3, 2055, 2031.8, 1962, 1575, 517, 359.8, 244, 172.8],\n            [115, 149.4, 252.5, 407.6, 598, 1555, 1287, 961.3, 881, 757.5, 601, 423.5, 293, 213.5, 187], [164, 207, 343, 386], [181, 205.5, 279, 554, 783, 783, 554, 279, 205.5],\n            [147, 376, 651, 724.5, 749, 724.5, 651, 376, 147], [167, 232, 588, 717, 1073, 1137, 1137, 1073, 717, 588, 232, 167], [210, 755, 921, 1466, 1466, 921, 755, 210],\n            [147, 293, 575, 321], [153, 777, 777, 153], [253, 492, 492, 253], [-30, 143, 860, 684],\n            [137, 167.9, 260.5, 420.1, 652, 881.4, 1041.5, 1135.6, 1167, 1136.1, 1043.5, 883.9, 652, 422, 262, 168.3], [278, 1084, 1084, 780, 625, 278],\n            [161, 1169, 1169, 1106, 1073.5, 976, 821.3, 617, 387.5, 198, 161], [167, 364, 608, 830.5, 1007, 1111, 1148, 1117, 1080, 971, 821, 629, 399.5, 210, 167],\n            [77, 790, 982, 1203, 1203, 982, 798, 77], [187, 378, 613, 843.5, 1015, 1119, 1157, 1147, 251, 187],\n            [137, 183.5, 316, 475, 675, 875.1, 1041.5, 1153.6, 1191, 1046, 965, 866, 542, 315, 179.5], [154, 285, 499, 1173, 1173, 154],\n            [122, 157.9, 265.5, 433.6, 651, 859.6, 1029.5, 1142.4, 1180, 1140, 1106.8, 1007, 851.5, 651, 456.8, 300, 196.5, 162],\n            [113, 258, 340, 438, 760, 988, 1122.5, 1167, 1121, 990, 829, 629, 429.5, 263, 150.5], [346, 585, 585, 346], [230, 376, 658, 585, 346], [254, 1408, 1408, 254],\n            [245, 1431, 1431, 245], [268, 1422, 1422, 268], [160, 406, 610, 970, 1005, 973.9, 880.5, 733.4, 541, 337.5, 160],\n            [176, 240, 419, 692, 1037, 1210, 1391, 1714, 1829.5, 1870, 1813.5, 1651, 1391, 1041, 701, 426, 243], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [115, 169, 319, 549.5, 844, 1001.5, 1134, 1250.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167],\n            [200, 576, 906.5, 1134, 1369.5, 1458, 1373, 1136, 918.5, 572, 200], [200, 1181, 1181, 200], [200, 398, 1045, 1151, 1151, 200],\n            [115, 171, 330, 577, 896, 1175.5, 1442, 1442, 1441, 1155.5, 896, 570.9, 323.5, 167.1], [200, 1339, 1339, 200], [137, 725, 725, 137],\n            [44, 178, 306, 486.6, 626.5, 716.1, 746, 746, 233, 44], [205, 1397, 1366, 205], [200, 1142, 1142, 398, 200], [200, 1526, 1526, 200], [200, 1336, 1336, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200],\n            [115, 163.5, 302, 520.5, 1010.5, 1133.1, 1290, 1409.5, 1528, 1528, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1432, 1130.5, 1004, 842, 617, 200],\n            [134, 395.5, 685, 941.5, 1128, 1241.5, 1282, 1222, 990, 702, 480.3, 301, 182.5, 143, 134], [0, 532, 730, 1262, 1262, 0],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 178], [26, 568, 832, 1374, 238], [92, 486, 1546, 1933, 295], [68, 1335, 1336, 80], [6, 532, 730, 1254, 225],\n            [126, 1288, 1288, 1266, 160, 126], [239, 759, 759, 239], [70, 787, 960, 246], [171, 691, 691, 171], [186, 383, 1490, 901, 775], [-4, 1306, 1306, -4], [340, 613, 762, 583],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 924, 772.5, 567, 362, 203], [185, 679, 866, 1022, 1128.5, 1168, 1139.4, 1053.5, 918.1, 373, 185],\n            [105, 145, 258, 431, 653, 832.5, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 903, 258, 148.5],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 849.1, 649, 428.6, 255.5, 143.4], [68, 195, 383, 716, 786, 786, 693.5, 580, 415, 294, 68],\n            [108, 225, 391.5, 565, 798.3, 962, 1058.8, 1091, 1091, 602, 417, 259, 148.5], [185, 1119, 1119, 1095.3, 1024, 373, 185], [175, 187, 375, 387, 387, 175],\n            [-62, 47.5, 153, 304, 421, 496, 521, 533, 533, 321, 100, -62], [193, 1199, 1161, 381, 193], [187, 375, 375, 187], [185, 1815, 1815, 1793.1, 1727.5, 1615.9, 1456, 735, 185],\n            [185, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9],\n            [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 741, 185], [108, 137.6, 226.5, 365.1, 903, 1091, 1091, 602, 414, 259, 149.5], [185, 373, 882, 882, 816, 745, 185],\n            [110, 283.5, 511, 706.9, 856.5, 951.4, 983, 939, 768.5, 566, 372.5, 230, 143.5, 115, 110], [62, 211.3, 278, 387.5, 538, 649.5, 765, 765, 377, 189, 62],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 177], [61, 510, 699, 1151, 265], [86, 380, 1299, 1590, 766], [60, 1152, 1152, 64], [61, 298, 499, 1151, 265],\n            [93, 995, 995, 978, 107, 93], [173, 588.9, 672.5, 800.9, 963, 1113, 1113, 963, 800.9, 672.5, 588.9, 173], [378, 552, 552, 378],\n            [187, 337, 499.1, 627.5, 711.1, 1127, 1127, 711.1, 627.5, 499.1, 337, 187], [187, 354, 1125, 1290, 1401, 1466.5, 1489, 1322, 551, 386, 274, 209.5], [], [291, 515, 505, 301],\n            [159, 191.6, 289.5, 647, 765, 1120, 1120, 765, 647, 292.5, 192.4], [137, 1163, 1163, 1137, 997, 816, 630.6, 484.5, 389.6, 182, 137],\n            [138, 247, 1058, 1168, 1168, 1055, 249, 138], [108, 187, 557, 745, 1115, 1191, 320], [378, 552, 552, 378],\n            [172, 229, 404.5, 575, 796, 965, 1063, 1096, 1128, 1071, 896, 725, 497.5, 334, 235, 203], [346, 958, 958, 346],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4],\n            [151, 238.5, 454, 944, 944, 920.3, 849, 723.5, 537, 368, 231], [166, 716, 1146, 1146, 716, 166], [210, 1285, 1456, 1456, 210], [153, 777, 777, 153],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4], [-4, 1, 1306, 1306],\n            [154, 183, 270, 399.3, 555, 710.8, 840, 927, 956, 927.1, 840.5, 711.4, 555, 399.3, 270, 183], [215, 1461, 1461, 921, 755, 215],\n            [207, 967, 967, 911, 887.6, 817.5, 544, 369.5, 211, 207], [207, 363.5, 540, 703, 834, 923, 956, 929, 904.9, 832.5, 561, 384.5, 224, 207], [541, 690, 963, 720],\n            [190, 378, 1124, 1124, 190], [137, 168.5, 595, 1106, 1106, 640, 425.3, 267, 169.5], [253, 492, 492, 253], [353, 456, 551, 788.5, 857.1, 880, 877, 872, 719, 353],\n            [291, 299, 914, 914, 693, 558, 291], [121, 150.6, 239.5, 378.6, 559, 734.3, 874, 965.5, 996, 965.5, 874, 734.3, 559, 378.6, 239.5, 150.6], [174, 604, 1154, 1154, 604, 174],\n            [171, 465, 1694, 1857, 1857, 1694, 1410, 545, 408, 171], [171, 465, 1955, 1955, 1890, 1805.5, 1410, 545, 408, 171], [140, 555, 1750, 1913, 1913, 1750, 1500, 448, 294, 155, 140],\n            [113, 144.1, 237.5, 384.6, 577, 782, 958, 958, 712, 508, 147.5], [26, 1374, 862, 683, 440], [26, 1374, 955, 712, 533], [26, 1374, 1033, 805, 578, 350],\n            [26, 1374, 1119, 990, 541, 367, 288], [26, 1374, 1005, 806, 393], [26, 1374, 1049, 1023.6, 947.5, 834.6, 699, 564, 451, 374.5, 349], [14, 1901, 1901, 608],\n            [115, 169, 548, 652.5, 750, 990.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167], [200, 1181, 1181, 643, 400, 200], [200, 1181, 1181, 993, 750, 200],\n            [200, 1181, 1181, 803, 576, 200], [200, 1181, 1181, 1038, 426, 200], [137, 725, 725, 389, 146, 137], [137, 725, 725, 482, 137], [93, 137, 725, 776, 548, 321],\n            [126, 137, 725, 738, 738, 126], [14, 210, 586, 916.5, 1144, 1379.5, 1468, 1383, 1146, 929, 582, 210, 14], [200, 1336, 1336, 1208, 1079, 630, 456, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 753, 510, 163], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1083, 840, 303, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1136, 908, 681, 453, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1207, 1078, 629, 455, 163],\n            [112, 160.5, 299, 517.5, 803, 1089.5, 1307, 1445.5, 1495, 1446.5, 1108, 909, 496, 160], [291, 402, 1274, 1385, 1385, 1274, 402, 291],\n            [115, 120, 252, 1092.5, 1310, 1448.5, 1498, 1474, 1342, 806, 521.5, 303, 163], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 753, 510, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1073, 830, 178], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 856, 629, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1056, 444, 178], [6, 532, 730, 1254, 935, 692], [200, 398, 1044, 1139, 1174, 1127, 997, 398, 200],\n            [185, 675, 873.1, 1029.5, 1131.1, 1165, 1066, 1037.4, 951.5, 819.9, 654, 470.5, 321, 221, 185], [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 559, 316, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 934, 691, 203], [104, 130.3, 209, 325.5, 465, 1053, 1053, 961, 733, 506, 278, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1038, 909, 460, 286, 207], [104, 130.3, 209, 325.5, 465, 1053, 1053, 926, 314, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 956, 930.6, 854.5, 741.6, 606, 471, 358, 281.5, 256],\n            [104, 130.4, 209.5, 326.1, 465, 1433, 1648.5, 1833, 1855, 1855, 1823.6, 1729.5, 1581.1, 1387, 564, 360, 202],\n            [105, 145, 353, 456, 551, 788.5, 857.1, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 580, 337, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 960, 717, 255.5, 143.4], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 986, 758, 531, 303, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 951, 339, 143.4], [-21, 187, 375, 401, 222], [160, 187, 375, 582, 339], [-11, 187, 375, 572, 394, 167],\n            [5, 187, 375, 557, 557, 5], [106, 140.6, 244.5, 405.6, 612, 828.3, 995, 1101.5, 1137, 1004, 938, 263], [185, 1119, 1119, 1075, 946, 497, 323, 244, 185],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 553, 310, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 933, 690, 245.5, 140.9],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 963, 735, 508, 280, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1038, 909, 460, 286, 207],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 928, 729, 316, 140.9], [210, 719, 957, 1466, 1466, 957, 719, 210],\n            [93, 203, 833.3, 997, 1102, 1137, 1132, 1021, 409.4, 245.5, 140.9, 106], [177, 201.5, 275, 392.5, 549, 1111, 1111, 585, 342, 177],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 945, 702, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 757, 530, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 955, 343, 177],\n            [61, 298, 499, 1151, 928, 685], [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 373, 185], [230, 376, 658, 585, 346], [530, 579, 724, 773],\n            [256, 588, 716, 1048, 1048, 765, 539, 256], [7, 26, 1374, 832], [346, 585, 585, 346], [0, 49, 443, 1424, 1424, 443], [0, 49, 443, 1582, 1582, 443], [0, 49, 380, 968, 968, 380],\n            [0, 49, 354.5, 493, 711.5, 997, 1283.5, 1501, 1639.5, 1689, 1640.5, 1501, 1284.5, 997], [0, 49, 815, 1013, 1537, 289],\n            [0, 49, 291, 1751, 1751, 1701, 1654.1, 1513.5, 1296.6, 1021], [-53, 187, 375, 615, 615, 379, 183, -53], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [200, 398, 1162, 1162, 200], [26, 1414, 852, 588], [200, 1181, 1181, 200],\n            [126, 1288, 1288, 1266, 160, 126], [200, 1339, 1339, 200], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163],\n            [137, 725, 725, 137], [205, 1397, 1366, 205], [26, 1378, 822, 582], [200, 1526, 1526, 200], [200, 1336, 1336, 200], [114, 1215, 1215, 114],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1339, 1339, 200],\n            [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200], [118, 1280, 1280, 1234, 138, 118], [0, 532, 730, 1262, 1262, 0], [6, 532, 730, 1254, 225],\n            [105, 149.5, 273, 740, 937, 1404, 1527.5, 1572, 1528.5, 1410, 937, 740, 267, 148], [68, 1335, 1336, 80], [179, 219.5, 338, 793, 990, 1446, 1563.5, 1604, 1604, 179],\n            [108, 1568, 1568, 1518, 1471.1, 1330.5, 1113.6, 838, 562.4, 345.5, 204.9, 158, 108], [126, 137, 725, 738, 738, 126], [6, 532, 730, 1254, 939, 740, 327],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 743, 500, 148.5], [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 721, 478, 191.5, 144],\n            [185, 931, 1119, 1119, 1095.3, 802, 559, 185], [160, 187, 375, 403], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 1043, 760, 534, 251, 177],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 604, 416.5, 258, 148.5], [185, 373, 1030.5, 1131.4, 1165, 1084, 1050, 959, 825.5, 661, 462.1, 311.5, 216.6, 185],\n            [61, 506, 694, 1151, 265], [106, 140.6, 244.5, 408.6, 624, 837.1, 1000.5, 1104.4, 1139, 1049, 239],\n            [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 789, 609, 449, 304, 191.5, 144], [108, 135.8, 219, 646, 825, 937, 982, 942, 198],\n            [185, 931, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [137, 159.5, 219, 382, 639, 896, 1059, 1118, 1141, 1118, 1058, 895.5, 639, 382.5, 220, 159.5], [187, 375, 375, 187],\n            [193, 1192, 1122, 1085, 1027, 193], [61, 1151, 522, 311], [185, 373, 1125, 1125, 185], [61, 510, 699, 1151, 265], [104, 138.5, 239, 704, 884, 995.5, 1041, 957, 133],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9], [185, 1120, 1120, 185],\n            [185, 373, 1033.5, 1137.4, 1172, 1140, 1044, 887.3, 673, 477.5, 322, 220.5, 185], [105, 146.5, 261, 685, 862, 971, 1018, 986, 839, 675, 441.9, 260.5, 143.9],\n            [106, 140.5, 244, 407.8, 623, 832.9, 996.5, 1101.9, 1295, 1295, 625, 412, 247, 141.3], [10, 414, 602, 1006, 1006, 10],\n            [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 177], [104, 151, 283, 715, 902, 1342.5, 1471.1, 1514, 1470.4, 1339.5, 1132.6, 861, 784.5, 714, 355, 163],\n            [48, 1160, 1149, 59], [176, 223.5, 748, 935, 1459, 1507, 1507, 176], [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 1295, 371, 170],\n            [5, 187, 375, 557, 557, 5], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 953, 341, 177],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 743, 500, 140.9], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 768, 525, 177],\n            [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 955, 712, 170],\n            [149, 179.4, 270.5, 409.6, 584, 798.5, 985, 1106, 1145, 1130.5, 1074, 909.5, 670, 473.5, 292], [50, 1438, 876, 612], [144, 344, 1332, 1532, 1532, 144],\n            [187, 1369, 1369, 1330, 197, 187], [220, 1456, 1456, 220], [-102, 63, 843, 678], [253, 492, 492, 253], [134, 755, 857, 1737, 1570, 134],\n            [161, 189.3, 274, 406.5, 578, 1435, 1620.9, 1764.5, 1856.4, 1887, 1858.8, 1774, 1641.5, 1470, 613, 430.3, 286, 192.3],\n            [138, 241.5, 348, 515.3, 641, 719, 1168, 1168, 1063, 954, 786.3, 661, 583, 138], [243, 400, 1070, 1214, 1320, 1432, 1431, 1274, 604, 462.4, 355.5, 243],\n            [245, 566, 719, 1431, 1431, 1109, 956, 245], [254, 1408, 1408, 254], [268, 1422, 1422, 268]\n        ];\n        this.OUTLINE_Y = [\n            [], [1489, 0, 0, 1489], [1556, 977, 977, 1556, 1556], [421, 0, 0, 421, 932, 1067, 1489, 1489, 1067, 556],\n            [85, -361, -361, 238.1, 380, 1231, 1576, 1576, 1185, 1071.5, 935, 283], [1075, 880.5, 743, 0, -29, -1.8, 80, 217.8, 413, 607.5, 745, 1489, 1517, 1489.8, 1408, 1270.3],\n            [409, 230.9, 90.5, -0.6, -31, 0, 909, 1333.4, 1432.5, 1498.1, 1520, 1490, 1412, 1301.5, 1174], [1556, 977, 977, 1556], [572, 286.3, 31, -412, -412, 1556, 1556, 1113, 857.8],\n            [-412, -412, 31, 286.3, 572, 857.8, 1113, 1556, 1556], [886, 776, 630, 630, 777, 887, 1299, 1409, 1556, 1556, 1410, 1300], [572, 27, 27, 572, 732, 1277, 1277, 732],\n            [-370, -370, 285, 285], [561, 561, 742, 742], [0, 0, 285, 285], [-304, -304, 1556, 1556],\n            [743, 400, 159, 16.5, -31, 15.9, 156.5, 397.4, 745, 1084.9, 1326.5, 1470.9, 1519, 1471.6, 1329.5, 1088.1], [0, 0, 152, 1494, 1494, 1286],\n            [0, 0, 171, 1110, 1279.4, 1409.5, 1492.4, 1520, 1491, 1427, 209], [63, -1.5, -31, 2.5, 106, 254, 441, 1161, 1320, 1436, 1500, 1520, 1490.5, 1426, 272],\n            [419, 0, 0, 419, 579, 1489, 1489, 649], [56, -5.5, -31, 6.5, 114, 274, 473, 1489, 1489, 267],\n            [654, 324, 104, 3, -31, 4.9, 112.5, 276.9, 483, 1494, 1512, 1517, 1453.5, 1277, 1005], [1314, 0, 0, 1266, 1489, 1489],\n            [411, 233.5, 91, -2.8, -34, -2, 94, 238.3, 415, 1144, 1294.5, 1416, 1496.3, 1523, 1495, 1411, 1285, 1131],\n            [1005, -6, -23.5, -29, 33, 209, 480, 834, 1171.5, 1385, 1485.5, 1519, 1483.3, 1376, 1211.8], [0, 0, 1117, 1117], [-370, -370, 285, 1117, 1117], [590, 77, 1227, 714],\n            [362, 362, 942, 942], [77, 590, 714, 1227], [1245, 0, 0, 964.5, 1139, 1293.4, 1414.5, 1492.9, 1519, 1497.5, 1449],\n            [647, 291, 15, -162.5, -226, -218.5, -190, 157, 394, 663, 1013.5, 1283, 1457, 1519, 1452, 1268, 991.5], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [743, 402.5, 161, 18.5, -27, -13.5, 19, 63, 108, 1385, 1487, 1516, 1465, 1317, 1072],\n            [0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 717, 1313, 1489, 1489],\n            [746, 405.5, 163, 19, -29, 12.5, 110, 749, 1382, 1485.5, 1516, 1464.4, 1309.5, 1065.4], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [8, -12.5, -21, 5.5, 85, 213.5, 387, 1489, 1489, 193], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489],\n            [744, 415, 172, 21, -297.5, -369.1, -393, -386.5, -365, -183, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1280.5, 1409, 1471.5, 1489, 1489],\n            [92, 3, -27, 9, 109, 253, 425, 1412, 1486, 1516, 1486.1, 1396.5, 1260.1, 1090, 340], [1313, 0, 0, 1313, 1489, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1489],\n            [1489, 0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [-392, -392, 1556, 1556],\n            [1556, -304, -304, 1556], [-392, -392, 1556, 1556], [682, 682, 684, 1489, 1489], [-300, -300, -180, -180], [1676, 1302, 1302, 1676],\n            [324, 182.8, 69, -6, -31, 0, 758, 939, 1058, 1124.5, 1144, 1126, 1093], [0, -31, 8.5, 127, 315, 567, 812.8, 996, 1110, 1556, 1556],\n            [557, 300, 118, 10.5, -25, 0, 70, 1050, 1116, 1143, 1104, 987, 801.5], [550, 306.8, 123, 7.5, -31, 0, 1556, 1556, 992, 803],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1115, 1148, 1107.8, 987, 797.8], [959, 0, 0, 959, 1374, 1546, 1560, 1566, 1539.4, 1459.5, 1117],\n            [569, -375, -410.5, -423, -389.8, -290, -119.3, 127, 1117, 1148, 1108.5, 998, 817.5], [0, 0, 725, 906, 1039, 1556, 1556], [1304, 0, 0, 1304, 1499, 1499],\n            [-395, -415, -423, -398, -323, -199, -27, 1304, 1499, 1499, 1117, -216], [0, 0, 1117, 1556, 1556], [0, 0, 1556, 1556], [0, 0, 725, 902.9, 1036.5, 1120.1, 1148, 1148, 1117],\n            [0, 0, 725, 906, 1039, 1120.8, 1148, 1117], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4],\n            [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1148, 1117], [555, 314.1, 131.5, 16.4, -412, -412, 1117, 1148, 1108, 995, 809.5], [0, 0, 912, 1105, 1114.5, 1117, 1117],\n            [67, 2.5, -27, -2.5, 71, 182.8, 322, 1060, 1119.5, 1144, 1116.5, 1042, 933, 803, 278], [959, 189.8, 70, 1, -22, -13, 10, 1117, 1438, 1438, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [0, 0, 1117, 1117], [1117, -412, -412, 1117, 1117],\n            [0, 0, 159, 1117, 1117, 139], [504, -170.9, -292.5, -367.1, -392, -392, 1556, 1556, 1531.1, 1456.5, 1334.9, 660], [-392, -392, 1556, 1556],\n            [-392, -392, -367.1, -292.5, -170.9, 504, 660, 1334.9, 1456.5, 1531.1, 1556, 1556], [395, 395, 396, 440, 561, 732, 927, 927, 926, 880.5, 761, 589.5], [], [0, 0, 1489, 1489],\n            [557, 333.5, 163, -361, -361, 74, 1046, 1475, 1475, 948.5, 775.9], [0, 0, 171, 1467, 1501, 1518, 1485.9, 1389.5, 1243.1, 751, 207],\n            [258, 145, 147, 257, 1067, 1176, 1176, 1066], [1489, 426, 0, 0, 426, 1489, 1489], [-392, -392, 1556, 1556],\n            [533, -327, -371.5, -385, -358, -275, -156, -10, 601, 1462, 1505, 1519, 1490, 1411, 1293.5, 1147], [1304, 1304, 1499, 1499],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9],\n            [833, 616, 531, 554, 1192, 1332.4, 1435.5, 1498.9, 1520, 1504, 1475], [608, 162, 191, 1113, 1142, 697], [602, 57, 57, 762, 762], [561, 561, 742, 742],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9], [1788, 1668, 1668, 1788],\n            [1116, 960.4, 831.5, 744.9, 716, 745, 832, 961, 1116, 1271, 1400, 1487, 1516, 1487, 1400, 1271], [179, 179, 917, 1462, 1462, 917],\n            [566, 566, 711, 1237, 1350.4, 1440.5, 1519, 1501.5, 1458, 722], [585, 542, 527, 543.5, 595, 685.5, 817, 1278, 1374.5, 1452, 1520, 1502.5, 1458, 764],\n            [1302, 1302, 1676, 1676], [-412, -412, 0, 1117, 1117], [1050, 866, -363, -363, 1489, 1489, 1460, 1373, 1234.3], [511, 511, 794, 794],\n            [-397, -416, -423, -337, -232, -89, -25, 20, 20, -237], [1256, 566, 566, 688, 1493, 1493, 1368],\n            [1025, 820.1, 663.5, 564.1, 531, 563.4, 660.5, 816.4, 1025, 1233.8, 1390, 1487.5, 1520, 1486.8, 1387, 1230], [191, 162, 608, 697, 1142, 1113],\n            [1246, 0, 0, 220, 353, 944, 1489, 1493, 1493, 1363], [1246, 0, 0, 139, 664, 865, 1489, 1493, 1493, 1363], [598, 0, 0, 220, 353, 944, 1489, 1517, 1500, 1456, 773],\n            [350, 195.6, 74.5, -3.9, -30, -10, 40, 244, 1489, 1489, 523], [0, 0, 1675, 2049, 2049], [0, 0, 2049, 2049, 1675], [0, 0, 1670, 2049, 2049, 1670],\n            [0, 0, 1992, 1992, 1987, 1910, 1682], [0, 0, 1872, 1872, 1872], [0, 0, 1712, 1843.5, 1952, 2024.8, 2049, 2024.8, 1952, 1843.5, 1712], [0, 0, 1489, 1489],\n            [743, 402.5, -397, -416, -423, -337, 108, 1385, 1487, 1516, 1465, 1317, 1072], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489],\n            [0, 0, 1489, 1872, 1872, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 2049, 2049, 1489], [1670, 0, 0, 1670, 2049, 2049], [1677, 0, 0, 1677, 1872, 1872],\n            [740, 0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489, 883], [0, 0, 1489, 1992, 1992, 1987, 1910, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 2049, 2049, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 2049, 2049, 1318, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1670, 2049, 2049, 1670, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1992, 1992, 1987, 1910, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1872, 1872, 1872, 1070.5], [216, 105, 105, 216, 1088, 1199, 1199, 1088],\n            [744, -146, -146, 20, 172, 414.5, 744, 1611, 1611, 1520, 1468, 1318, 1070.5], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1872, 1872, 1489], [1489, 0, 0, 1489, 2049, 2049], [0, 0, 469, 610.5, 787, 992, 1130, 1489, 1489],\n            [0, -24, 12.4, 121.5, 284.1, 481, 1241, 1376, 1479, 1544.3, 1566, 1536.5, 1449, 1295.5, 1080], [324, 182.8, 69, -6, -31, 0, 758, 939, 1676, 1676, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1676, 1676, 1093], [324, 182.8, 69, -6, -31, 0, 758, 1297, 1676, 1676, 1297, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1619, 1619, 1614, 1537, 1309], [324, 182.8, 69, -6, -31, 0, 758, 1499, 1499, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1630, 1761.8, 1871, 1944.5, 1969, 1944.5, 1871, 1761.8, 1630],\n            [317, 178.8, 68, -4.8, -29, -26, 3.5, 68, 559, 641, 861.3, 1020, 1116, 1148, 1146, 1127, 1093], [557, 300, -397, -416, -423, -337, -232, 70, 1050, 1116, 1143, 1104, 987, 801.5],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1676, 1676, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1676, 1676, 987, 797.8],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1297, 1676, 1676, 1297, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1499, 1499, 797.8],\n            [1676, 0, 0, 1302, 1676], [1302, 0, 0, 1676, 1676], [1297, 0, 0, 1297, 1676, 1676], [1304, 0, 0, 1304, 1499, 1499],\n            [484, 266.5, 104, 2.8, -31, 12, 141, 351, 637, 1469, 1566, 1556], [0, 0, 725, 1619, 1619, 1614, 1537, 1309, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1676, 1676, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 989.5, 802.4],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1297, 1676, 1676, 1297, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 1619, 1619, 1614, 1537, 1309],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1499, 1499, 1499, 802.4], [572, 7, 7, 572, 732, 1297, 1297, 732],\n            [-148, -148, 8.5, 127, 313.8, 558, 1241, 1241, 1108.4, 989.5, 802.4, 558], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1499, 1499, 1117],\n            [1117, -412, -412, 1117, 1676, 1676], [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1556, 1556], [-370, -370, 285, 1117, 1117], [1676, 1292, 1292, 1676],\n            [1304, 1292, 1292, 1304, 1499, 1676, 1676, 1499], [1489, 0, 0, 1489], [832, 832, 1117, 1117], [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520], [1304, 0, 0, 1304, 1499, 1676, 1676, 1499], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [0, 0, 1313, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184],\n            [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489],\n            [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [1313, 0, 0, 1313, 1489, 1489], [1489, 0, 0, 1489, 1489],\n            [755, 507, 325, -16, -16, 325, 506.5, 755, 994, 1171, 1505, 1505, 1171, 993], [0, 0, 1489, 1489], [910, 647, 471, 0, 0, 471, 645.5, 910, 1489, 1489],\n            [0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520, 1476.3, 1345, 1144.8, 894, 174], [1677, 0, 0, 1677, 1872, 1872], [1489, 0, 0, 1489, 1872, 1872, 1872],\n            [550, 306.8, 123, 7.5, -31, 0, 1117, 1676, 1676, 803], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1676, 1676, 986.5, 839], [0, -412, -412, 725, 906, 1676, 1676, 1117],\n            [1676, 0, 0, 1676], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1676, 1676, 1499, 1117], [550, 306.8, 123, 7.5, -31, 0, 1117, 1148, 1108, 992, 803],\n            [-412, -412, 110, 259.5, 444, 1195, 1355, 1467, 1534.5, 1556, 1524.3, 1429, 1277.8, 1078], [1117, -412, -412, 1117, 1117],\n            [534, 299.6, 120.5, 6.9, -31, 7.8, 124, 308.3, 551, 1556, 1556], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1127.5, 1144, 1128, 1079, 986.5, 839],\n            [463, 262.3, 118, -412, -412, -264.5, -96, 1556, 1556], [0, -412, -412, 725, 906, 1039, 1120.8, 1148, 1117],\n            [768, 451.5, 241, 37.5, -31, 37.5, 241, 451.5, 768, 1073, 1288, 1487, 1556, 1487, 1288, 1073.5], [0, 0, 1117, 1117], [0, 0, 1117, 1118, 1119, 1117], [0, 0, 1556, 1556],\n            [-412, -412, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [412, 248.5, 113, -412, -412, -265, -96, 1556, 1556],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4], [0, 0, 1117, 1117],\n            [-412, -412, 148.5, 340.9, 577, 821.5, 1001, 1111.3, 1148, 1115, 1020, 861.5, 646], [549, 299, 129, -412, -412, -268, -96, 1079, 1124.5, 1143, 1102.5, 981, 792],\n            [558, 313.8, 127, 8.5, -31, 7.5, 123, 308.8, 952, 1117, 1148, 1108.6, 990.5, 803.6], [952, 0, 0, 952, 1117, 1117],\n            [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1117], [546, 314, 142, -412, -412, 159, 342.3, 576, 816.6, 996.5, 1108.6, 1146, 1145.5, 1143, 1117, 842],\n            [-412, -412, 1117, 1117], [446, 248.5, -412, -412, 248, 446, 1117, 1117], [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1117, 1117, 811.5],\n            [1304, 0, 0, 1304, 1499, 1499], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1499, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 802.4], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1676, 1676, 1117],\n            [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1676, 1676, 811.5], [424, 240.1, 94.5, -0.4, -32, 17, 190, 493, 837, 1097, 1286, 1464.5, 1519, 1496.5, 1430],\n            [0, 0, 1489, 1489], [1315, -193, -193, 1315, 1489, 1489], [-189, -189, -13, 1489, 1489, 2], [572, 572, 732, 732], [0, 0, 1489, 1489], [511, 511, 794, 794],\n            [842, -151, -151, 1788, 1788, 981], [642, 447.6, 292.5, 190.9, 157, 157, 190.4, 290.5, 450.4, 663, 857.4, 1012.5, 1114.1, 1148, 1148, 1114.5, 1014, 854],\n            [-402, -417.5, -423, -395.5, -313, -179.8, 1367, 1545, 1560.5, 1566, 1538.5, 1456, 1321.8, -224], [202, 202, 209, 233.4, 306.5, 588, 1104, 1104, 1097, 1072.5, 999, 719],\n            [362, 27, 27, 362, 942, 1277, 1277, 942], [0, 0, 1393, 910], [0, 0, 910, 1393]\n        ];\n        this.KERN_C1 = [\n            '\\'', '\\'', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '.', '.', 'A', 'A', 'A', 'A', 'A', 'A', 'A',\n            'A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F',\n            'I', 'J', 'J', 'J', 'J', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n            'L', 'O', 'O', 'O', 'O', 'O', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'Q', 'Q', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'S',\n            'S', 'S', 'S', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T',\n            'T', 'T', 'T', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'W', 'W', 'W', 'W', 'W', 'W',\n            'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y',\n            'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z',\n            'a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'k', 'k', 'k', 'k', 'm', 'm',\n            'm', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'p', 'p', 'p', 'r', 'r', 'r', 'r', 'r', 't', 't', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'w', 'w', 'w',\n            'w', 'w', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'z', 'z', 'z', 'z', 'z', 'z', 'z',\n            'z', 'z', '\\u00C7', '\\u00E7', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8'\n        ];\n        this.KERN_C2 = [\n            '\\u00C6', 'A', '\\u00E6', '\\u00C6', 'z', 'y', 'x', 'w', 'v', 'a', 'Z', 'Y', 'X', 'W', 'V', 'T', 'S', 'J', 'I', 'A', '-', ',', 'y', 'w', 'v', 'u', 't',\n            'Y', 'W', 'V', 'U', 'T', 'S', '-', 'T', '.', '-', ',', '-', 'Z', 'Y', 'X', 'W', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'T', 'A',\n            '?', ';', ':', '.', ',', '-', '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00D8', 'y', 'w', 'v', 'u', 'o', 'e', 'a', 'O', '-', '\\u00D8', '\\u00C7',\n            'y', 'v', 'Y', 'W', 'V', 'T', 'O', 'J', 'G', 'C', '-', '\\'', 'Z', 'Y', 'X', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'Y', 'A',\n            '.', ',', '.', ',', '\\u00F8', '\\u00E6', 'y', 'u', 'o', 'e', 'a', 'Y', 'T', '-', '\\u00C6', 'y', 'w', 'v', 'S', 'A', '.', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C6', '\\u00C7', 'z', 'y', 'w', 'v', 'u', 's', 'r', 'o', 'g', 'e', 'c', 'a', 'T', 'S', 'O', 'G', 'C', 'A', '?', ';', ':', '.', '-', ',',\n            '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u',\n            'r', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00D8', '\\u00C7', 'y', 'u', 'o', 'e', 'a', 'O', 'G', 'C', '-', '\\u00F8',\n            '\\u00E6', '\\u00D8', '\\u00C6', 'v', 'u', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'g', 'e', 'd', 'a', 'O', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C7', 'y', 'w', 'o', 'e', 'a', 'Z', 'O', 'G', 'C', '-', 'y', 'w', 'v', 'y', '.', ',', 'T', '-', 'T', '}', 'y', ']', '\\\\', '?', '.',\n            '-', ',', '*', ')', '\\'', '\"', 'y', 'w', 'v', '\\u00F8', 'o', 'e', '-', 'y', 'w', 'v', 'y', 'w', 'v', 'y', 'x', 'v', '.', ',', 'y', '.', ',',\n            '\\u00E6', 'a', '.', '-', ',', 'y', '-', '\\u00F8', '\\u00E6', 'o', 'e', 'a', '.', '-', ',', '\\u00E6', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'o', 'g',\n            'e', 'd', 'c', '-', '\\u00F8', '\\u00E6', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c',\n            '-', '-', '-', 'Z', 'Y', 'X', 'T', '.', ',', 'y', 'x', 'v', '.', ','\n        ];\n        this.KERN_K = [\n            100, 100, 20, 50, 40, 40, 50, 20, 40, 20, 30, 140, 80, 50, 50, 150, 20, 100, 30, 50, 160, 130, 50, 30, 50, 10, 20, 80, 50, 60, 10, 120, 10, 50, 60,\n            20, -10, 20, 50, 20, 20, 10, 20, 50, 50, 50, 50, 100, 110, 50, 50, 100, -30, 100, -60, 60, 60, 300, 300, 30, 10, 10, 20, 20, 70, 60, 20, 80, 70, 80,\n            50, 70, 70, 60, 20, 110, 20, 20, 110, 110, 160, 100, 110, 170, 20, -100, 20, 20, 160, 120, 20, 20, 10, 50, 30, 30, 50, 50, 70, 50, 50, 50, -20, 50,\n            300, 300, 30, 30, 50, 50, 55, 20, 50, 50, 40, 20, 60, 100, 20, 30, 20, 30, 22, 20, 20, 20, 220, 240, 50, 130, 40, 170, 200, 200, 200, 200, 180, 200,\n            220, 210, 220, 220, 240, 70, 12, 50, 40, 40, 120, -60, 200, 200, 290, 150, 290, 20, 10, 20, 20, 100, 100, 70, 65, 60, 100, 100, 100, 60, 80, 80, 290,\n            50, 290, 100, 100, 60, 65, 60, 60, 100, 100, 100, 50, 80, 80, 220, 50, 290, 60, 50, 10, 10, 80, 30, 60, 60, 50, 10, 10, 10, 80, 130, 140, 20, 80,\n            100, 110, 110, 100, 130, 100, 130, 100, 100, 130, 130, 120, 140, 20, 80, 200, 200, 290, 140, 290, 60, 50, 20, 20, 65, 40, 60, 60, 50, 10, 20, 20, 20,\n            60, 16, 10, 16, 5, 20, 30, 60, 20, 140, -100, 10, -100, -100, -110, 120, 50, 130, -50, -100, -60, -60, 20, 10, 20, 20, 20, 20, 100, 20, 10, 20, 20,\n            10, 20, 15, 20, 15, 20, 30, 5, 20, 30, 40, 36, 290, 20, 290, 10, 40, 18, 40, 18, 18, 40, 180, 40, 180, 20, 20, 70, 20, 70, 24, 20, 24, 10, 24, 10,\n            20, 50, 18, 40, 18, 10, 18, 10, 18, 10, 18, 40, 190, 40, 190, 12, 10, 10, 12, 10, 12, 10, 10, 20, 50, 20, 20, 20, 10, 50, 30, 30, 15, 20, 15, 20, 30\n        ];\n        this.pathCache = [];\n        this.pathMissing = null;\n        this.ctxReference = null;\n        for (let n = this.GLYPH_DATA.length - 1; n >= 0; n--)\n            this.pathCache[n] = null;\n    }\n    getKerning(ch1, ch2) {\n        const sz = this.KERN_K.length;\n        for (let n = 0; n < sz; n++)\n            if (this.KERN_C1[n] == ch1 && this.KERN_C2[n] == ch2)\n                return -this.KERN_K[n];\n        return 0;\n    }\n    static measureText(txt, size) { return this.main.measureText(txt, size); }\n    measureText(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n        return [dx * scale, font.ASCENT * scale * font.ASCENT_FUDGE, -font.DESCENT * scale];\n    }\n    static measureWidths(txt, size) { return this.main.measureWidths(txt, size); }\n    measureWidths(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let xpos = [0];\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                xpos.push(dx * scale);\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n            xpos.push(dx * scale);\n        }\n        return xpos;\n    }\n    getIndex(ch) {\n        return this.UNICODE.indexOf(ch);\n    }\n    getRawGlyph(idx) {\n        return this.GLYPH_DATA[idx];\n    }\n    getGlyphPath(idx) {\n        let path = this.pathCache[idx];\n        if (path != null)\n            return path;\n        path = new Path2D(this.GLYPH_DATA[idx]);\n        this.pathCache[idx] = path;\n        return path;\n    }\n    getMissingPath() {\n        if (!this.pathMissing)\n            this.pathMissing = new Path2D(this.MISSING_DATA);\n        return this.pathMissing;\n    }\n    getOutlineX(idx) { return this.OUTLINE_X[idx].slice(0); }\n    getOutlineY(idx) { return this.OUTLINE_Y[idx].slice(0); }\n    initNativeFont(ctx) {\n        if (ctx == null && this.ctxReference)\n            return;\n        if (ctx == null) {\n            let canvas = new OffscreenCanvas(256, 256);\n            this.ctxReference = canvas.getContext('2d');\n        }\n        else\n            this.ctxReference = ctx;\n    }\n    static measureTextNative(txt, family, size, opt = {}) {\n        return this.main.measureTextNative(txt, family, size, opt);\n    }\n    measureTextNative(txt, family, size, opt = {}) {\n        if (!this.ctxReference)\n            throw 'Calling measureTextNative without having called initNativeFont first';\n        this.ctxReference.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        this.ctxReference.font = pfx + size + 'px ' + family;\n        let metrics = this.ctxReference.measureText(txt);\n        this.ctxReference.restore();\n        const FUDGE = this.ASCENT_FUDGE * this.ASCENT / this.UNITS_PER_EM;\n        return [metrics.width, size * FUDGE, size * (-this.DESCENT / this.ASCENT) * FUDGE];\n    }\n}\nFontData.main = new FontData();\nexport { FontData };\n//# sourceMappingURL=FontData.js.map","import { BondArtifact } from '../data/BondArtifact';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Molecule } from '../data/Molecule';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../data/PolymerBlock';\nimport { QueryUtil } from '../data/QueryUtil';\nimport { FitRotatedEllipse } from '../util/FitRotatedEllipse';\nimport { Box, GeomUtil, Line, Oval, QuickHull } from '../util/Geom';\nimport { angleDiff, clone, DEGRAD, invZ, norm2_xy, norm_xy, RADDEG, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nimport { RenderEffects } from './Rendering';\nexport var BLineType;\n(function (BLineType) {\n    BLineType[BLineType[\"Normal\"] = 1] = \"Normal\";\n    BLineType[BLineType[\"Inclined\"] = 2] = \"Inclined\";\n    BLineType[BLineType[\"Declined\"] = 3] = \"Declined\";\n    BLineType[BLineType[\"Unknown\"] = 4] = \"Unknown\";\n    BLineType[BLineType[\"Dotted\"] = 5] = \"Dotted\";\n    BLineType[BLineType[\"DotDir\"] = 6] = \"DotDir\";\n    BLineType[BLineType[\"IncDouble\"] = 7] = \"IncDouble\";\n    BLineType[BLineType[\"IncTriple\"] = 8] = \"IncTriple\";\n    BLineType[BLineType[\"IncQuadruple\"] = 9] = \"IncQuadruple\";\n})(BLineType || (BLineType = {}));\nconst MINBOND_LINE = 0.25;\nconst MINBOND_EXOTIC = 0.5;\nclass ArrangeMolecule {\n    static guestimateSize(mol, policy, maxW, maxH) {\n        let box = mol.boundary();\n        let minX = box.minX(), minY = box.minY(), maxX = box.maxX(), maxY = box.maxY();\n        let fontSize = policy.data.fontSize * this.FONT_CORRECT;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomExplicit(n)) {\n                let numsym = 0;\n                for (let ch of mol.atomElement(n))\n                    if (!'|{}^'.includes(ch))\n                        numsym++;\n                let plusH = mol.atomHydrogens(n) > 0 ? 1 : 0;\n                const aw = 0.5 * 0.7 * fontSize * (numsym + plusH);\n                const ah = 0.75 * fontSize * (1 + 0.2 * plusH);\n                const ax = mol.atomX(n), ay = mol.atomY(n);\n                minX = Math.min(minX, ax - aw);\n                maxX = Math.max(maxX, ax + aw);\n                minY = Math.min(minY, ay - ah);\n                maxY = Math.max(maxY, ay + ah);\n            }\n        let w = Math.max(1, (maxX - minX)) * policy.data.pointScale;\n        let h = Math.max(1, (maxY - minY)) * policy.data.pointScale;\n        if (maxW > 0 && w > maxW) {\n            h *= maxW / w;\n            w = maxW;\n        }\n        if (maxH > 0 && h > maxH) {\n            w *= maxH / h;\n            h = maxH;\n        }\n        return [w, h];\n    }\n    constructor(mol, measure, policy, effects = new RenderEffects()) {\n        this.mol = mol;\n        this.measure = measure;\n        this.policy = policy;\n        this.effects = effects;\n        this.points = [];\n        this.lines = [];\n        this.rings = [];\n        this.paths = [];\n        this.space = [];\n        this.wantArtifacts = true;\n        this.artifacts = null;\n        this.bondOrder = [];\n        this.atomCharge = [];\n        this.atomUnpaired = [];\n        this.artifactCharge = new Map();\n        this.artifactUnpaired = new Map();\n        this.artifactFract = new Map();\n    }\n    getMolecule() { return this.mol; }\n    getMeasure() { return this.measure; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    getScale() { return this.scale; }\n    setWantArtifacts(want) { this.wantArtifacts = want; }\n    getArtifacts() { return this.artifacts; }\n    setArtifacts(artifacts) { this.artifacts = artifacts; }\n    arrange() {\n        const { mol, measure, policy, effects } = this;\n        this.scale = measure.scale();\n        this.bondSepPix = policy.data.bondSep * measure.scale();\n        this.lineSizePix = policy.data.lineSize * measure.scale();\n        this.fontSizePix = policy.data.fontSize * measure.scale() * ArrangeMolecule.FONT_CORRECT;\n        this.ymul = measure.yIsUp() ? -1 : 1;\n        let artmask = null;\n        if (this.wantArtifacts && this.artifacts == null) {\n            this.artifacts = new BondArtifact(mol);\n            artmask = Vec.booleanArray(false, mol.numAtoms);\n            for (let path of this.artifacts.getResPaths())\n                for (let a of path.atoms)\n                    artmask[a - 1] = true;\n            for (let ring of this.artifacts.getResRings())\n                for (let a of ring.atoms)\n                    artmask[a - 1] = true;\n            for (let arene of this.artifacts.getArenes()) {\n                artmask[arene.centre - 1] = true;\n                for (let a of arene.atoms)\n                    artmask[a - 1] = true;\n            }\n        }\n        this.setupBondOrders();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (mol.atomElement(n).length > 2 && mol.atomHydrogens(n) == 0) {\n                this.points.push(null);\n                this.space.push(null);\n                continue;\n            }\n            let a = {\n                anum: n,\n                text: mol.atomExplicit(n) || CoordUtil.atomIsWeirdLinear(mol, n) ? mol.atomElement(n) : null,\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[mol.atomicNumber(n)],\n                oval: new Oval(this.measure.angToX(mol.atomX(n)), this.measure.angToY(mol.atomY(n)), 0, 0)\n            };\n            let overCol = this.effects.colAtom[n];\n            if (overCol)\n                a.col = overCol;\n            if (artmask && artmask[n - 1] && mol.atomElement(n) == 'C')\n                a.text = null;\n            if (a.text != null) {\n                let wad = this.measure.measureText(a.text, a.fsz);\n                const PADDING = 1.1;\n                a.oval.rw = 0.5 * wad[0] * PADDING;\n                a.oval.rh = 0.5 * wad[1] * PADDING;\n            }\n            this.points.push(a);\n            this.space.push(this.computeSpacePoint(a));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (this.points[n - 1] == null)\n                this.processLabel(n);\n        let bdbl = Vec.booleanArray(false, mol.numBonds);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let bt = mol.bondType(n), bo = this.bondOrder[n - 1];\n            if (bo < 0)\n                continue;\n            let col = this.effects.colBond[n];\n            if (!col)\n                col = this.policy.data.foreground;\n            bdbl[n - 1] = bo == 2 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN);\n            let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n            let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n            if (Math.abs(x2 - x1) <= 1 && Math.abs(y2 - y1) <= 1) {\n                bdbl[n - 1] = false;\n                continue;\n            }\n            if (bdbl[n - 1])\n                continue;\n            let minDist = (bo == 1 && bt == Molecule.BONDTYPE_NORMAL ? MINBOND_LINE : MINBOND_EXOTIC) * measure.scale();\n            let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(bfr, x1, y1, x2, y2, minDist));\n            let xy2 = this.shrinkBond(x2, y2, x1, y1, this.backOffAtom(bto, x2, y2, x1, y1, minDist));\n            this.ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist);\n            let sz = this.lineSizePix, head = 0;\n            let qbonds = QueryUtil.queryBondOrders(mol, n);\n            if (Vec.notBlank(qbonds)) {\n                Vec.sort(qbonds);\n                if (qbonds[0] == -1) {\n                    qbonds.splice(0, 1);\n                    qbonds.push(-1);\n                }\n                let qtxt = Vec.equals(qbonds, [0, 1, 2, 3, -1]) ? '?' : qbonds.map((o) => o == -1 ? 'A' : o.toString()).join('');\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], 1.3 * this.bondSepPix);\n                let v = -0.5;\n                for (let i = 0; i < 2; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: BLineType.Dotted,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: 0.5 * sz,\n                        head,\n                        col: (col & 0xFFFFFF) | 0x80000000,\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n                let rotation = Math.atan2(xy2[1] - xy1[1], xy2[0] - xy1[0]) * RADDEG;\n                if (rotation < -90 || rotation > 90)\n                    rotation += 180;\n                let a = {\n                    anum: 0,\n                    text: qtxt,\n                    fsz: 0.35 * this.fontSizePix,\n                    col,\n                    oval: new Oval(0.5 * (xy1[0] + xy2[0]), 0.5 * (xy1[1] + xy2[1]), 0, 0),\n                    rotation\n                };\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n                continue;\n            }\n            let ltype = BLineType.Normal;\n            if (bo == 1 && bt == Molecule.BONDTYPE_INCLINED) {\n                ltype = BLineType.Inclined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bo == 1 && bt == Molecule.BONDTYPE_DECLINED) {\n                ltype = BLineType.Declined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bt == Molecule.BONDTYPE_UNKNOWN) {\n                ltype = BLineType.Unknown;\n                head = 0.2 * measure.scale();\n            }\n            else if (bo == 0) {\n                if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                    ltype = BLineType.DotDir;\n                else\n                    ltype = BLineType.Dotted;\n            }\n            else if ((bo == 2 || bo == 3 || bo == 4) && (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)) {\n                ltype = bo == 2 ? BLineType.IncDouble : bo == 3 ? BLineType.IncTriple : BLineType.IncQuadruple;\n                head = (bo == 2 ? 0.20 : 0.25) * measure.scale();\n            }\n            if (bo == 0) {\n                let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n                let d = norm_xy(dx, dy), invD = 1 / d;\n                let ox = 0.5 * dx * invD * this.bondSepPix, oy = 0.5 * dy * invD * this.bondSepPix;\n                if (mol.atomAdjCount(bfr) > 1) {\n                    xy1[0] += ox;\n                    xy1[1] += oy;\n                }\n                if (mol.atomAdjCount(bto) > 1) {\n                    xy2[0] -= ox;\n                    xy2[1] -= oy;\n                }\n            }\n            if (bo != 1 && bt == Molecule.BONDTYPE_DECLINED)\n                [xy1, xy2] = [xy2, xy1];\n            if (bo > 1 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN)) {\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], this.bondSepPix);\n                let ext1 = 1, ext2 = 1;\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext1 = Math.min(ext1, this.backOffAtom(bfr, lx1, ly1, lx2, ly2, minDist));\n                }\n                xy1 = this.shrinkBond(xy1[0], xy1[1], xy2[0], xy2[1], ext1);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext2 = Math.min(ext2, this.backOffAtom(bto, lx2, ly2, lx1, ly1, minDist));\n                }\n                xy2 = this.shrinkBond(xy2[0], xy2[1], xy1[0], xy1[1], ext2);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: ltype,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: sz,\n                        head,\n                        col\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n            }\n            else {\n                let b = {\n                    bnum: n,\n                    bfr,\n                    bto,\n                    type: ltype,\n                    line: new Line(xy1[0], xy1[1], xy2[0], xy2[1]),\n                    size: sz,\n                    head,\n                    col\n                };\n                this.lines.push(b);\n                this.space.push(this.computeSpaceLine(b));\n            }\n        }\n        let rings = this.orderedRingList();\n        for (let i = 0; i < rings.length; i++) {\n            for (let j = 0; j < rings[i].length; j++) {\n                let k = mol.findBond(rings[i][j], rings[i][j < rings[i].length - 1 ? j + 1 : 0]);\n                if (bdbl[k - 1]) {\n                    this.processDoubleBond(k, rings[i]);\n                    bdbl[k - 1] = false;\n                }\n            }\n        }\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (bdbl[i - 1])\n                this.processDoubleBond(i, this.priorityDoubleSubstit(i));\n        let hcount = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            hcount[n - 1] = this.points[n - 1].text == null ? 0 : mol.atomHydrogens(n);\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0 && this.placeHydrogen(n, hcount[n], true))\n                hcount[n] = 0;\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0)\n                this.placeHydrogen(n, hcount[n], false);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                let isostr = mol.atomIsotope(n).toString();\n                let col = policy.data.atomCols[mol.atomicNumber(n)];\n                this.placeAdjunct(n, isostr, this.fontSizePix * 0.6, col, 150 * DEGRAD);\n            }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let str = '';\n            let chg = this.atomCharge[n - 1];\n            if (chg == -1)\n                str = '-';\n            else if (chg == 1)\n                str = '+';\n            else if (chg < -1)\n                str = Math.abs(chg) + '-';\n            else if (chg > 1)\n                str = chg + '+';\n            for (let i = this.atomUnpaired[n - 1]; i > 0; i--)\n                str += '.';\n            if (str.length == 0)\n                continue;\n            let col = policy.data.atomCols[mol.atomicNumber(n)];\n            this.placeAdjunct(n, str, str.length == 1 ? 0.8 * this.fontSizePix : 0.6 * this.fontSizePix, col, 30 * DEGRAD);\n        }\n        for (let n = 0; n < effects.atomDecoText.length; n++) {\n            let txt = effects.atomDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateAtom(n + 1, txt, effects.atomDecoCol[n], effects.atomDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < effects.bondDecoText.length; n++) {\n            let txt = effects.bondDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateBond(n + 1, txt, effects.bondDecoCol[n], effects.bondDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < Math.min(effects.atomCircleSz.length, mol.numAtoms); n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * this.scale;\n                let a = this.points[n];\n                let box = new Box(a.oval.cx - dw, a.oval.cy - dw, 2 * dw, 2 * dw);\n                let spc = {\n                    anum: 0,\n                    bnum: 0,\n                    box,\n                    px: [box.minX(), box.maxX(), box.maxX(), box.minX()],\n                    py: [box.minY(), box.minY(), box.maxY(), box.maxY()]\n                };\n                this.space.push(spc);\n            }\n        if (this.artifacts != null) {\n            for (let path of this.artifacts.getResPaths()) {\n                this.createCurvedPath(path.atoms, this.artifactFract.get(path), 0);\n                this.delocalisedAnnotation(path.atoms, this.artifactCharge.get(path), this.artifactUnpaired.get(path));\n            }\n            for (let ring of this.artifacts.getResRings()) {\n                this.createCircularRing(ring.atoms);\n                this.delocalisedAnnotation(ring.atoms, this.artifactCharge.get(ring), this.artifactUnpaired.get(ring));\n            }\n            for (let arene of this.artifacts.getArenes()) {\n                let isRing = arene.atoms.length > 2;\n                if (isRing)\n                    for (let n = 0; n < arene.atoms.length; n++) {\n                        let nn = n < arene.atoms.length - 1 ? n + 1 : 0;\n                        if (mol.findBond(arene.atoms[n], arene.atoms[nn]) == 0) {\n                            isRing = false;\n                            break;\n                        }\n                    }\n                let alkeneLike = arene.atoms.length == 2;\n                this.createBondCentroid(arene.centre, arene.atoms);\n                if (!alkeneLike) {\n                    if (isRing)\n                        this.createCircularRing(arene.atoms);\n                    else\n                        this.createCurvedPath(arene.atoms, false, arene.centre);\n                }\n                this.delocalisedAnnotation(arene.atoms, this.artifactCharge.get(arene), this.artifactUnpaired.get(arene));\n            }\n        }\n        let polymers = new PolymerBlock(mol);\n        for (let id of polymers.getIDList())\n            this.processPolymerUnit(polymers.getUnit(id), polymers.getUnits());\n    }\n    numPoints() { return this.points.length; }\n    getPoint(idx) { return this.points[idx]; }\n    getPoints() { return this.points; }\n    numLines() { return this.lines.length; }\n    getLine(idx) { return this.lines[idx]; }\n    getLines() { return this.lines; }\n    numRings() { return this.rings.length; }\n    getRing(idx) { return this.rings[idx]; }\n    getRings() { return this.rings; }\n    numPaths() { return this.paths.length; }\n    getPath(idx) { return this.paths[idx]; }\n    getPaths() { return this.paths; }\n    numSpace() { return this.space.length; }\n    getSpace(idx) { return this.space[idx]; }\n    getSpaces() { return this.space; }\n    offsetEverything(dx, dy) {\n        for (let a of this.points)\n            a.oval.offsetBy(dx, dy);\n        for (let b of this.lines)\n            b.line.offsetBy(dx, dy);\n        for (let r of this.rings) {\n            r.cx += dx;\n            r.cy += dy;\n        }\n        for (let p of this.paths) {\n            Vec.addTo(p.px, dx);\n            Vec.addTo(p.py, dy);\n        }\n        for (let spc of this.space) {\n            spc.box.offsetBy(dx, dy);\n            Vec.addTo(spc.px, dx);\n            Vec.addTo(spc.py, dy);\n        }\n    }\n    offsetOrigin() {\n        let bounds = this.determineBoundary();\n        if (bounds[0] != 0 || bounds[1] != 0)\n            this.offsetEverything(-bounds[0], -bounds[1]);\n    }\n    scaleEverything(scaleBy) {\n        if (scaleBy == 1)\n            return;\n        this.scale *= scaleBy;\n        for (let a of this.points) {\n            a.oval.scaleBy(scaleBy);\n            a.fsz *= scaleBy;\n        }\n        for (let b of this.lines) {\n            b.line.scaleBy(scaleBy);\n            b.size *= scaleBy;\n            b.head *= scaleBy;\n        }\n        for (let r of this.rings) {\n            r.cx *= scaleBy;\n            r.cy *= scaleBy;\n            r.rw *= scaleBy;\n            r.rh *= scaleBy;\n            r.size *= scaleBy;\n        }\n        for (let p of this.paths) {\n            Vec.mulBy(p.px, scaleBy);\n            Vec.mulBy(p.py, scaleBy);\n            p.size *= scaleBy;\n        }\n        for (let spc of this.space) {\n            spc.box.scaleBy(scaleBy);\n            Vec.mulBy(spc.px, scaleBy);\n            Vec.mulBy(spc.py, scaleBy);\n        }\n    }\n    determineBoundary(padding) {\n        if (padding == null)\n            padding = 0;\n        if (this.space.length == 0)\n            return [0, 0, 2 * padding, 2 * padding];\n        let bounds = Vec.numberArray(0, 4);\n        let spc = this.space[0];\n        bounds[0] = spc.box.x;\n        bounds[1] = spc.box.y;\n        bounds[2] = spc.box.x + spc.box.w;\n        bounds[3] = spc.box.y + spc.box.h;\n        for (let n = this.space.length - 1; n > 0; n--) {\n            spc = this.space[n];\n            bounds[0] = Math.min(bounds[0], spc.box.x);\n            bounds[1] = Math.min(bounds[1], spc.box.y);\n            bounds[2] = Math.max(bounds[2], spc.box.x + spc.box.w);\n            bounds[3] = Math.max(bounds[3], spc.box.y + spc.box.h);\n        }\n        return bounds;\n    }\n    determineBoundaryBox() {\n        let [x1, y1, x2, y2] = this.determineBoundary();\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    squeezeInto(x, y, w, h, padding) {\n        if (padding != null && padding > 0) {\n            x += padding;\n            y += padding;\n            w -= 2 * padding;\n            h -= 2 * padding;\n        }\n        let bounds = this.determineBoundary(0);\n        let bw = bounds[2] - bounds[0], bh = bounds[3] - bounds[1];\n        if (bw > w || bh > h) {\n            let downScale = 1;\n            if (bw > w)\n                downScale = w / bw;\n            if (bh > h)\n                downScale = Math.min(downScale, h / bh);\n            this.scaleEverything(downScale);\n            Vec.mulBy(bounds, downScale);\n        }\n        this.offsetEverything(x - bounds[0] + 0.5 * (w - bounds[2] + bounds[0]), y - bounds[1] + 0.5 * (h - bounds[3] + bounds[1]));\n    }\n    limitBounds(w, h) {\n        let bounds = this.determineBoundary(0);\n        if (bounds[0] == bounds[2] && bounds[1] == bounds[3])\n            return;\n        let scale = Math.min(1, Math.min(w / (bounds[2] - bounds[0]), h / (bounds[3] - bounds[1])));\n        this.offsetEverything(-bounds[0], -bounds[1]);\n        this.scaleEverything(scale);\n    }\n    monochromate(col) {\n        for (let a of this.points)\n            a.col = col;\n        for (let b of this.lines)\n            b.col = col;\n    }\n    spatialCongestion(x, y, thresh) {\n        if (thresh == null)\n            thresh = 0.001;\n        let congest = 0;\n        for (let n = 0; n < this.points.length; n++) {\n            let a = this.points[n];\n            if (a == null)\n                continue;\n            let dx = a.oval.cx - x, dy = a.oval.cy - y;\n            congest += 1 / (dx * dx + dy * dy + thresh);\n        }\n        return congest;\n    }\n    clone() {\n        let dup = new ArrangeMolecule(this.mol, this.measure, this.policy, this.effects);\n        dup.scale = this.scale;\n        dup.bondSepPix = this.bondSepPix;\n        dup.lineSizePix = this.lineSizePix;\n        dup.fontSizePix = this.fontSizePix;\n        dup.ymul = this.ymul;\n        for (let a of this.points)\n            dup.points.push(clone(a));\n        for (let b of this.lines)\n            dup.lines.push(clone(b));\n        for (let s of this.space)\n            dup.space.push(clone(s));\n        return dup;\n    }\n    setupBondOrders() {\n        const mol = this.mol;\n        for (let n = 0; n < mol.numBonds; n++)\n            this.bondOrder[n] = mol.bondOrder(n + 1);\n        for (let n = 0; n < mol.numAtoms; n++) {\n            this.atomCharge[n] = mol.atomCharge(n + 1);\n            this.atomUnpaired[n] = mol.atomUnpaired(n + 1);\n        }\n        let delocalise = (obj, atoms) => {\n            let charge = 0, unpaired = 0;\n            for (let a of atoms) {\n                charge += this.atomCharge[a - 1];\n                unpaired += this.atomUnpaired[a - 1];\n                this.atomCharge[a - 1] = this.atomUnpaired[a - 1] = 0;\n            }\n            this.artifactCharge.set(obj, charge);\n            this.artifactUnpaired.set(obj, unpaired);\n            for (let a1 of atoms)\n                for (let a2 of mol.atomAdjList(a1))\n                    if (!atoms.includes(a2)) {\n                        let b = mol.findBond(a1, a2);\n                        if (this.bondOrder[b - 1] >= 0)\n                            this.bondOrder[b - 1] = 1;\n                    }\n        };\n        if (this.artifacts == null)\n            return;\n        for (let path of this.artifacts.getResPaths()) {\n            let charge = 0, unpaired = 0, orders = 0;\n            for (let n = 0; n < path.atoms.length; n++) {\n                charge += mol.atomCharge(path.atoms[n]);\n                unpaired += mol.atomUnpaired(path.atoms[n]);\n                let b = mol.findBond(path.atoms[n], path.atoms[n < path.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    orders += mol.bondOrder(b);\n            }\n            let fractional = (2 * orders - charge + unpaired) / path.atoms.length < 1;\n            this.artifactFract.set(path, fractional);\n            for (let n = 0; n < path.atoms.length - 1; n++) {\n                let b = mol.findBond(path.atoms[n], path.atoms[n + 1]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = fractional ? -1 : 1;\n            }\n            delocalise(path, path.atoms);\n        }\n        for (let ring of this.artifacts.getResRings()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let b = mol.findBond(ring.atoms[n], ring.atoms[n < ring.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = 1;\n            }\n            delocalise(ring, ring.atoms);\n        }\n        for (let arene of this.artifacts.getArenes()) {\n            let alkeneLike = arene.atoms.length == 2;\n            for (let n = 0; n < arene.atoms.length; n++) {\n                if (!alkeneLike) {\n                    let b = mol.findBond(arene.atoms[n], arene.atoms[n < arene.atoms.length - 1 ? n + 1 : 0]);\n                    if (b > 0)\n                        this.bondOrder[b - 1] = 1;\n                }\n                let b = mol.findBond(arene.centre, arene.atoms[n]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = -1;\n            }\n            delocalise(arene, arene.atoms);\n        }\n    }\n    placeAdjunct(atom, str, fsz, col, angdir) {\n        let wad = this.measure.measureText(str, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        if (str == '..') {\n            let zeroBonds = this.mol.atomAdjBonds(atom).filter((b) => this.mol.bondOrder(b) == 0);\n            if (zeroBonds.length == 1) {\n                let zpt = this.getPoint(this.mol.bondOther(zeroBonds[0], atom) - 1);\n                let dx = zpt.oval.cx - cx, dy = zpt.oval.cy - cy, inv = 1 / norm_xy(dx, dy);\n                let r = fsz * 0.15;\n                let ox = dy * inv * 2.5 * r, oy = -dx * inv * 2.5 * r;\n                let ext = 1.2 * (rw + rh) * inv;\n                [dx, dy] = [dx * ext, dy * ext];\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx + ox, cy + dy + oy, r, r) });\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx - ox, cy + dy - oy, r, r) });\n                return;\n            }\n        }\n        let bestScore = 0, bestDX = 0, bestDY = 0;\n        let px = Vec.numberArray(0, 4), py = Vec.numberArray(0, 4);\n        let angThresh = 10;\n        let shorted = false;\n        for (let ext = 0.5 * (a.oval.rw + a.oval.rh); !shorted && ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n            const DELTA = 5 * DEGRAD;\n            for (let d = 0; !shorted && d < Math.PI - 0.0001; d += DELTA)\n                for (let s = -1; s <= 1; s += 2) {\n                    let dang = d * s + (s > 0 ? DELTA : 0), ang = angdir + dang;\n                    let dx = ext * Math.cos(ang), dy = ext * Math.sin(ang) * -this.ymul;\n                    let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                    px[0] = x1;\n                    py[0] = y1;\n                    px[1] = x2;\n                    py[1] = y1;\n                    px[2] = x2;\n                    py[2] = y2;\n                    px[3] = x1;\n                    py[3] = y2;\n                    let viol = this.countPolyViolations(px, py, null, false);\n                    let score = 10 * viol + Math.abs(dang) + 10 * ext;\n                    let shortCircuit = viol == 0 && Math.abs(dang) < (angThresh + 1) * DEGRAD;\n                    if (bestScore == 0 || shortCircuit || score < bestScore) {\n                        bestScore = score;\n                        bestDX = dx;\n                        bestDY = dy;\n                    }\n                    if (shortCircuit) {\n                        shorted = true;\n                        break;\n                    }\n                }\n            angThresh += 5;\n        }\n        a =\n            {\n                anum: 0,\n                text: str,\n                fsz,\n                col,\n                oval: new Oval(cx + bestDX, cy + bestDY, rw, rh)\n            };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processLabel(anum) {\n        let ax = this.mol.atomX(anum), ay = this.mol.atomY(anum);\n        let left = 0, right = 0;\n        let adj = this.mol.atomAdjList(anum);\n        for (let n = 0; n < adj.length; n++) {\n            let theta = Math.atan2(this.mol.atomY(adj[n]) - ay, this.mol.atomX(adj[n]) - ax) * RADDEG;\n            if (theta >= -15 && theta <= 15)\n                right += 3;\n            else if (theta >= -85 && theta <= 85)\n                right++;\n            else if (theta > 85 && theta < 95) { }\n            else if (theta < -85 && theta > -95) { }\n            else if (theta > 165 || theta < -165)\n                left += 3;\n            else\n                left++;\n        }\n        let label = this.mol.atomElement(anum);\n        let ibar = label.indexOf('|'), ibrace = label.indexOf('{');\n        let side = 0;\n        if (left == 0 && right == 0 && ibar < 0 && ibrace < 0) { }\n        else if (left < right)\n            side = -1;\n        else if (right < left)\n            side = 1;\n        else {\n            let score1 = CoordUtil.congestionPoint(this.mol, ax - 1, ay);\n            let score2 = CoordUtil.congestionPoint(this.mol, ax + 1, ay);\n            if (score1 < 0.5 * score2)\n                side = -1;\n            else\n                side = 1;\n        }\n        let chunks = null;\n        let position = null;\n        let primary = null;\n        let refchunk = 0;\n        if (ibar < 0 && ibrace < 0) {\n            if (side == 0)\n                chunks = [label];\n            else if (side < 0) {\n                chunks = [label.substring(0, label.length - 1), label.substring(label.length - 1)];\n                refchunk = 1;\n            }\n            else\n                chunks = [label.substring(0, 1), label.substring(1)];\n        }\n        else {\n            let bits = [];\n            let bpos = [];\n            let bpri = [];\n            let blocks = label.split('|');\n            if (side < 0)\n                blocks = Vec.reverse(blocks);\n            let buff = '';\n            for (let i = 0; i < blocks.length; i++) {\n                let isPrimary = (side >= 0 && i == 0) || (side < 0 && i == blocks.length - 1);\n                if (side < 0 && refchunk == 0 && i == blocks.length - 1)\n                    refchunk = bits.length;\n                let pos = 0;\n                buff = '';\n                for (let j = 0; j < blocks[i].length; j++) {\n                    let ch = blocks[i].charAt(j);\n                    if (ch == '{' || ch == '}') {\n                        if (buff.length > 0) {\n                            bits.push(buff.toString());\n                            bpos.push(pos);\n                            bpri.push(isPrimary);\n                        }\n                        buff = '';\n                        pos = ch == '{' ? -1 : 0;\n                    }\n                    else if (ch == '^' && pos == -1 && buff.length == 0)\n                        pos = 1;\n                    else\n                        buff += ch;\n                }\n                if (buff.length > 0) {\n                    bits.push(buff.toString());\n                    bpos.push(pos);\n                    bpri.push(isPrimary);\n                }\n            }\n            chunks = bits;\n            position = bpos;\n            primary = bpri;\n            while (refchunk < chunks.length - 1 && position[refchunk] != 0)\n                refchunk++;\n        }\n        let PADDING = 1.1;\n        let SSFRACT = 0.6;\n        let chunkw = Vec.numberArray(0, chunks.length);\n        let tw = 0;\n        for (let n = 0; n < chunks.length; n++) {\n            chunkw[n] = this.measure.measureText(chunks[n], this.fontSizePix)[0];\n            if (position != null && position[n] != 0)\n                chunkw[n] *= SSFRACT;\n            tw += chunkw[n];\n        }\n        let x = this.measure.angToX(ax), y = this.measure.angToY(ay);\n        for (let n = 0; n < refchunk; n++)\n            x -= chunkw[n];\n        x -= 0.5 * chunkw[refchunk];\n        for (let n = 0; n < chunks.length; n++) {\n            let a = {\n                anum: (n == refchunk || (primary != null && primary[n])) ? anum : 0,\n                text: chunks[n],\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[this.mol.atomicNumber(anum)],\n                oval: new Oval(x + 0.5 * chunkw[n], y, 0.5 * chunkw[n] * PADDING, 0.5 * this.fontSizePix * PADDING)\n            };\n            if (position != null && position[n] != 0) {\n                a.fsz *= SSFRACT;\n                if (position[n] < 0)\n                    a.oval.cy += a.fsz * 0.7 * (this.measure.yIsUp() ? -1 : 1);\n                else\n                    a.oval.cy -= a.fsz * 0.3 * (this.measure.yIsUp() ? -1 : 1);\n            }\n            if (n == refchunk) {\n                this.points[anum - 1] = a;\n                this.space[anum - 1] = this.computeSpacePoint(a);\n            }\n            else {\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n            }\n            x += chunkw[n];\n        }\n    }\n    backOffAtom(atom, x, y, fx, fy, minDist) {\n        if (x == fx && y == fy)\n            return 1;\n        let dx = x - fx, dy = y - fy, dist = norm_xy(dx, dy), inv = 1.0 / dist;\n        const bump = 0.1 * this.measure.scale();\n        let xbump = x + 2 * bump * dx * inv, ybump = y + 2 * bump * dy * inv;\n        let ext = dist;\n        let active = false;\n        for (let spc of this.space)\n            if (spc.anum == atom) {\n                const sz = spc.px.length;\n                if (sz == 0)\n                    continue;\n                for (let n = 0; n < sz; n++) {\n                    let nn = n < sz - 1 ? n + 1 : 0;\n                    let x1 = spc.px[n], y1 = spc.py[n], x2 = spc.px[nn], y2 = spc.py[nn];\n                    if (!GeomUtil.doLineSegsIntersect(xbump, ybump, fx, fy, x1, y1, x2, y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(x, y, fx, fy, x1, y1, x2, y2);\n                    active = true;\n                    ext = Math.min(ext, norm_xy(xy[0] - fx, xy[1] - fy));\n                }\n            }\n        if (active) {\n            ext = Math.max(minDist, ext - bump);\n            return ext / dist;\n        }\n        else\n            return 1;\n    }\n    backOffAtomDelta(atom, x, y, fx, fy, minDist) {\n        let ext = this.backOffAtom(atom, x, y, fx, fy, minDist);\n        if (ext >= 1)\n            return null;\n        ext = 1 - ext;\n        let dx = (fx - x) * ext, dy = (fy - y) * ext;\n        return [norm2_xy(dx, dy), dx, dy];\n    }\n    shrinkBond(x, y, fx, fy, ext) {\n        if (ext == 1)\n            return [x, y];\n        let dx = x - fx, dy = y - fy;\n        return [fx + ext * dx, fy + ext * dy];\n    }\n    ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist) {\n        let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n        let dsq = norm2_xy(dx, dy);\n        minDist = Math.min(minDist, norm_xy(x2 - x1, y2 - y1));\n        if (dsq >= sqr(minDist - 0.0001))\n            return;\n        let d12 = Math.sqrt(dsq), d1 = norm_xy(xy1[0] - x1, xy1[1] - y1), d2 = norm_xy(x2 - xy2[0], y2 - xy2[1]);\n        let mag = 1 - minDist / d12, invD12 = 1.0 / (d1 + d2), mag1 = d1 * mag * invD12, mag2 = d2 * mag * invD12;\n        xy1[0] -= dx * mag1;\n        xy1[1] -= dy * mag1;\n        xy2[0] += dx * mag2;\n        xy2[1] += dy * mag2;\n    }\n    orderedRingList() {\n        let rings = [];\n        let SIZE_ORDER = [6, 5, 7, 4, 3];\n        for (let i = 0; i < SIZE_ORDER.length; i++) {\n            let nring = this.mol.findRingsOfSize(SIZE_ORDER[i]);\n            for (let j = 0; j < nring.length; j++)\n                rings.push(nring[j]);\n        }\n        let ringsz = rings.length;\n        let ringbusy = Vec.numberArray(0, this.mol.numAtoms);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringbusy[r[i] - 1]++;\n        }\n        let ringscore = Vec.numberArray(0, ringsz);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringscore[n] += ringbusy[r[i] - 1];\n        }\n        let ringorder = Vec.idxSort(ringscore);\n        let resbcount = Vec.numberArray(0, ringsz), maxbcount = 0;\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[ringorder[n]];\n            for (let i = 0; i < r.length; i++) {\n                let j = this.mol.findBond(r[i], r[i + 1 < r.length ? i + 1 : 0]);\n                if (this.mol.bondOrder(j) == 2)\n                    resbcount[n]++;\n            }\n            maxbcount = Math.max(maxbcount, resbcount[n]);\n        }\n        let pos = 0, ret = [];\n        for (let sz = maxbcount; sz >= 0; sz--) {\n            for (let n = 0; n < ringsz; n++)\n                if (resbcount[n] == sz)\n                    ret.push(rings[ringorder[n]]);\n        }\n        return ret;\n    }\n    orthogonalDelta(x1, y1, x2, y2, d) {\n        let ox = y1 - y2, oy = x2 - x1, dsq = norm2_xy(ox, oy);\n        let sc = dsq > 0 ? d / Math.sqrt(dsq) : 1;\n        return [ox * sc, oy * sc];\n    }\n    processDoubleBond(idx, priority) {\n        let bfr = this.mol.bondFrom(idx), bto = this.mol.bondTo(idx);\n        let nfr = this.mol.atomAdjList(bfr), nto = this.mol.atomAdjList(bto);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n        const minDist = MINBOND_EXOTIC * this.measure.scale();\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let countFLeft = 0, countFRight = 0, countTLeft = 0, countTRight = 0;\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        let noshift = false;\n        for (let n = 0; n < nfr.length; n++)\n            if (nfr[n] != bto) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bfr, nfr[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nfr[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nfr[n] - 1].oval.cy - y1, this.points[nfr[n] - 1].oval.cx - x1), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countFLeft++;\n                    idxFLeft = nfr[n];\n                }\n                else {\n                    if (ispri)\n                        countFRight++;\n                    idxFRight = nfr[n];\n                }\n            }\n        for (let n = 0; n < nto.length; n++)\n            if (nto[n] != bfr) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bto, nto[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nto[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nto[n] - 1].oval.cy - y2, this.points[nto[n] - 1].oval.cx - x2), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countTLeft++;\n                    idxTLeft = nto[n];\n                }\n                else {\n                    if (ispri)\n                        countTRight++;\n                    idxTRight = nto[n];\n                }\n            }\n        let side = 0;\n        if (noshift || countFLeft > 1 || countFRight > 1 || countTLeft > 1 || countTRight > 1) { }\n        else if (countFLeft > 0 && countFRight > 0) { }\n        else if (countTLeft > 0 && countTRight > 0) { }\n        else if (countFLeft > 0 || countTLeft > 0)\n            side = 1;\n        else if (countFRight > 0 || countTRight > 0)\n            side = -1;\n        let sz = this.lineSizePix;\n        let ax1 = x1, ay1 = y1, ax2 = x2, ay2 = y2;\n        let bx1 = 0, by1 = 0, bx2 = 0, by2 = 0;\n        if (side == 0) {\n            ax1 = x1 + 0.5 * oxy[0];\n            ay1 = y1 + 0.5 * oxy[1];\n            ax2 = x2 + 0.5 * oxy[0];\n            ay2 = y2 + 0.5 * oxy[1];\n            bx1 = x1 - 0.5 * oxy[0];\n            by1 = y1 - 0.5 * oxy[1];\n            bx2 = x2 - 0.5 * oxy[0];\n            by2 = y2 - 0.5 * oxy[1];\n        }\n        else if (side > 0) {\n            bx1 = x1 + oxy[0];\n            by1 = y1 + oxy[1];\n            bx2 = x2 + oxy[0];\n            by2 = y2 + oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        else if (side < 0) {\n            bx1 = x1 - oxy[0];\n            by1 = y1 - oxy[1];\n            bx2 = x2 - oxy[0];\n            by2 = y2 - oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        if (side != 0) {\n            if (this.mol.atomElement(bfr).length <= 2 && this.mol.atomAdjCount(bfr) == 1 && this.points[bfr - 1].text != null) {\n                this.bumpAtomPosition(bfr, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n            if (this.mol.atomElement(bto).length <= 2 && this.mol.atomAdjCount(bto) == 1 && this.points[bto - 1].text != null) {\n                this.bumpAtomPosition(bto, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n        }\n        let delta1 = this.backOffAtomDelta(bfr, ax1, ay1, ax2, ay2, minDist), delta2 = this.backOffAtomDelta(bfr, bx1, by1, bx2, by2, minDist);\n        if (delta1 != null || delta2 != null) {\n            let delta = (delta1 == null ? 0 : delta1[0]) > (delta2 == null ? 0 : delta2[0]) ? delta1 : delta2;\n            ax1 += delta[1];\n            ay1 += delta[2];\n            bx1 += delta[1];\n            by1 += delta[2];\n        }\n        let delta3 = this.backOffAtomDelta(bto, ax2, ay2, ax1, ay1, minDist), delta4 = this.backOffAtomDelta(bto, bx2, by2, bx1, by1, minDist);\n        if (delta3 != null || delta4 != null) {\n            let delta = (delta3 == null ? 0 : delta3[0]) > (delta4 == null ? 0 : delta4[0]) ? delta3 : delta4;\n            ax2 += delta[1];\n            ay2 += delta[2];\n            bx2 += delta[1];\n            by2 += delta[2];\n        }\n        if (side == 0 && !noshift) {\n            let xy = null;\n            if (this.points[bfr - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxFLeft, bfr, ax1, ay1, ax2, ay2);\n                if (xy != null) {\n                    ax1 = xy[0];\n                    ay1 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxFRight, bfr, bx1, by1, bx2, by2);\n                if (xy != null) {\n                    bx1 = xy[0];\n                    by1 = xy[1];\n                }\n            }\n            if (this.points[bto - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxTLeft, bto, ax2, ay2, ax1, ay1);\n                if (xy != null) {\n                    ax2 = xy[0];\n                    ay2 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxTRight, bto, bx2, by2, bx1, by1);\n                if (xy != null) {\n                    bx2 = xy[0];\n                    by2 = xy[1];\n                }\n            }\n        }\n        let lt = this.mol.bondType(idx) == Molecule.BONDTYPE_UNKNOWN ? BLineType.Unknown : BLineType.Normal;\n        let head = lt == BLineType.Unknown ? 0.1 * this.scale : 0;\n        let col = this.effects.colBond[idx];\n        if (!col)\n            col = this.policy.data.foreground;\n        let b1 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(ax1, ay1, ax2, ay2),\n            size: sz,\n            head,\n            col\n        };\n        let b2 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(bx1, by1, bx2, by2),\n            size: sz,\n            head,\n            col\n        };\n        this.lines.push(b1);\n        this.lines.push(b2);\n        this.space.push(this.computeSpaceLine(b1));\n        this.space.push(this.computeSpaceLine(b2));\n    }\n    placeHydrogen(idx, hcount, fussy) {\n        let font = FontData.main;\n        const SSFRACT = 0.6;\n        const GLYPH_H = font.getIndex('H');\n        let a = this.points[idx];\n        let emscale = a.fsz * font.INV_UNITS_PER_EM;\n        let sub = hcount >= 2 ? hcount.toString() : '';\n        let outlineX = font.getOutlineX(GLYPH_H), outlineY = font.getOutlineY(GLYPH_H);\n        let firstEMW = font.HORIZ_ADV_X[GLYPH_H], emw = firstEMW;\n        for (let n = 0; n < sub.length; n++) {\n            let ch = sub.charAt(n), g = font.getIndex(ch);\n            if (n == 0) {\n                emw += font.getKerning('H', ch);\n            }\n            else {\n                let chp = sub.charAt(n - 1);\n                emw += font.getKerning(chp, ch) * SSFRACT;\n            }\n            let extraX = font.getOutlineX(g), extraY = font.getOutlineY(g);\n            Vec.addTo(extraX, emw / SSFRACT);\n            Vec.addTo(extraY, (SSFRACT - 1) * font.ASCENT * 1.30);\n            Vec.mulBy(extraX, SSFRACT);\n            Vec.mulBy(extraY, SSFRACT);\n            outlineX = outlineX.concat(extraX);\n            outlineY = outlineY.concat(extraY);\n            emw += font.HORIZ_ADV_X[g] * SSFRACT;\n        }\n        if (sub.length > 0) {\n            let qh = new QuickHull(outlineX, outlineY, 0);\n            outlineX = qh.hullX;\n            outlineY = qh.hullY;\n        }\n        let emdx = -0.5 * firstEMW, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n        for (let n = 0; n < outlineX.length; n++) {\n            outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n            outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n        }\n        let dx = 0, dy = 0;\n        let srcWAD = this.measure.measureText(a.text, a.fsz);\n        if (fussy) {\n            let RIGHTLEFT = [0, 1, 2, 3];\n            let LEFTRIGHT = [1, 0, 2, 3];\n            let UPDOWN = [2, 3, 0, 1];\n            let DOWNUP = [3, 2, 0, 1];\n            let quad = RIGHTLEFT, adj = this.mol.atomAdjList(a.anum);\n            if (adj.length == 0) {\n                let LEFTIES = ['O', 'S', 'F', 'Cl', 'Br', 'I'];\n                if (this.mol.atomCharge(a.anum) == 0 && this.mol.atomUnpaired(a.anum) == 0 &&\n                    LEFTIES.indexOf(this.mol.atomElement(a.anum)) >= 0)\n                    quad = LEFTRIGHT;\n                else\n                    quad = RIGHTLEFT;\n            }\n            else {\n                let allLeft = true, allRight = true, allUp = true, allDown = true;\n                const ax = this.mol.atomX(a.anum), ay = this.mol.atomY(a.anum);\n                for (let n = 0; n < adj.length; n++) {\n                    const bx = this.mol.atomX(adj[n]), by = this.mol.atomY(adj[n]);\n                    if (bx > ax + 0.01)\n                        allLeft = false;\n                    if (bx < ax - 0.01)\n                        allRight = false;\n                    if (by < ay - 0.01)\n                        allUp = false;\n                    if (by > ay + 0.01)\n                        allDown = false;\n                }\n                if (allLeft) { }\n                else if (allRight)\n                    quad = LEFTRIGHT;\n                else if (allUp)\n                    quad = DOWNUP;\n                else if (allDown)\n                    quad = UPDOWN;\n            }\n            for (let n = 0; n < 4; n++) {\n                let tx = 0, ty = 0;\n                if (quad[n] == 0)\n                    tx = 0.5 * srcWAD[0] + 0.5 * firstEMW * emscale;\n                else if (quad[n] == 1)\n                    tx = -0.5 * srcWAD[0] - (emw - 0.5 * firstEMW) * emscale;\n                else if (quad[n] == 2)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * -this.ymul;\n                else if (quad[n] == 3)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * this.ymul;\n                Vec.addTo(outlineX, tx);\n                Vec.addTo(outlineY, ty);\n                let viol = this.countPolyViolations(outlineX, outlineY, null, true);\n                Vec.addTo(outlineX, -tx);\n                Vec.addTo(outlineY, -ty);\n                if (viol == 0) {\n                    dx = tx;\n                    dy = ty;\n                    break;\n                }\n            }\n            if (dx == 0 && dy == 0)\n                return false;\n        }\n        else {\n            const mx1 = Vec.min(outlineY), mx2 = Vec.max(outlineX), my1 = Vec.min(outlineY), my2 = Vec.max(outlineY), cx = 0.5 * (mx1 + mx2), cy = 0.5 * (my1 + my2);\n            const mag = 1 + this.measure.scale() * this.policy.data.fontSize * ArrangeMolecule.FONT_CORRECT * 0.1 / Math.max(mx2 - cx, my2 - cy);\n            const psz = outlineX.length;\n            let magPX = outlineX.slice(0), magPY = outlineY.slice(0);\n            for (let n = 0; n < psz; n++) {\n                magPX[n] = (magPX[n] - cx) * mag + cx;\n                magPY[n] = (magPY[n] - cy) * mag + cy;\n            }\n            let bestScore = 0, bestExt = 0, bestAng = 0;\n            for (let ext = 0.5 * (a.oval.rw + a.oval.rh); ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n                let anyNoClash = false;\n                for (let ang = 0; ang < 2 * Math.PI; ang += 5 * DEGRAD) {\n                    let tx = ext * Math.cos(ang), ty = ext * Math.sin(ang);\n                    Vec.addTo(magPX, tx);\n                    Vec.addTo(magPY, ty);\n                    let viol = this.countPolyViolations(magPX, magPY, null, false);\n                    Vec.addTo(magPX, -tx);\n                    Vec.addTo(magPY, -ty);\n                    if (viol == 0)\n                        anyNoClash = true;\n                    let score = 10 * viol + this.spatialCongestion(a.oval.cx + tx, a.oval.cy + ty, 0.5) + 2 * ext;\n                    if (bestScore == 0 || score < bestScore) {\n                        bestScore = score;\n                        bestExt = ext;\n                        bestAng = ang;\n                        dx = tx;\n                        dy = ty;\n                    }\n                }\n                if (anyNoClash)\n                    break;\n            }\n        }\n        let wad = this.measure.measureText('H', a.fsz);\n        const PADDING = 1.1;\n        let ah = {\n            anum: 0,\n            text: 'H',\n            fsz: a.fsz,\n            col: a.col,\n            oval: new Oval(a.oval.cx + dx, a.oval.cy + dy, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n        };\n        this.points.push(ah);\n        if (sub.length > 0) {\n            const subFsz = SSFRACT * a.fsz;\n            wad = this.measure.measureText(sub, subFsz);\n            let an = {\n                anum: 0,\n                text: sub,\n                fsz: subFsz,\n                col: a.col,\n                oval: new Oval(ah.oval.cx + 0.5 * firstEMW * a.fsz * font.INV_UNITS_PER_EM + 0.5 * wad[0], ah.oval.cy + (1 - SSFRACT) * a.fsz, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n            };\n            this.points.push(an);\n        }\n        Vec.addTo(outlineX, dx);\n        Vec.addTo(outlineY, dy);\n        let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY),\n            px: outlineX,\n            py: outlineY\n        };\n        this.space.push(spc);\n        return true;\n    }\n    computeSpacePoint(a) {\n        let s = {\n            anum: a.anum,\n            bnum: 0,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        const font = FontData.main;\n        let outlineX = [], outlineY = [];\n        let emw = 0, nglyphs = 0;\n        if (a.text != null) {\n            for (let n = 0; n < a.text.length; n++) {\n                let ch1 = a.text.charAt(n);\n                let i = font.getIndex(ch1);\n                if (i >= 0) {\n                    if (emw == 0) {\n                        outlineX = font.getOutlineX(i);\n                        outlineY = font.getOutlineY(i);\n                        nglyphs = 1;\n                    }\n                    else {\n                        let extraX = font.getOutlineX(i), extraY = font.getOutlineY(i);\n                        if (extraX.length > 0) {\n                            Vec.addTo(extraX, emw);\n                            outlineX = outlineX.concat(extraX);\n                            outlineY = outlineY.concat(extraY);\n                            nglyphs++;\n                        }\n                    }\n                    emw += font.HORIZ_ADV_X[i];\n                }\n                else\n                    emw += font.MISSING_HORZ;\n                if (n < a.text.length - 1) {\n                    let ch2 = a.text.charAt(n + 1);\n                    emw += font.getKerning(ch1, ch2);\n                }\n            }\n        }\n        if (outlineX.length > 0) {\n            if (nglyphs > 1) {\n                let qh = new QuickHull(outlineX, outlineY, 0);\n                outlineX = qh.hullX;\n                outlineY = qh.hullY;\n            }\n            let emdx = -0.5 * emw, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n            let emscale = a.fsz * font.INV_UNITS_PER_EM;\n            for (let n = 0; n < outlineX.length; n++) {\n                outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n                outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n            }\n            s.px = outlineX;\n            s.py = outlineY;\n            let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n            s.box = new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY);\n        }\n        else {\n            s.box = Box.fromOval(a.oval);\n            if (s.box.w > 0 && s.box.h > 0) {\n                s.px = [s.box.minX(), s.box.maxX(), s.box.maxX(), s.box.minX()];\n                s.py = [s.box.minY(), s.box.minY(), s.box.maxY(), s.box.maxY()];\n            }\n        }\n        return s;\n    }\n    computeSpaceLine(b) {\n        let s = {\n            anum: 0,\n            bnum: b.bnum,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        if (b.type == BLineType.Normal || b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n            s.px = [b.line.x1, b.line.x2];\n            s.py = [b.line.y1, b.line.y2];\n        }\n        else {\n            const dx = b.line.x2 - b.line.x1, dy = b.line.y2 - b.line.y1;\n            const norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            const ox = norm * dy, oy = -norm * dx;\n            if (b.type == BLineType.Unknown) {\n                s.px = [b.line.x1 + ox, b.line.x1 - ox, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1 + oy, b.line.y1 - oy, b.line.y2 - oy, b.line.y2 + oy];\n            }\n            else {\n                s.px = [b.line.x1, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1, b.line.y2 - oy, b.line.y2 + oy];\n            }\n        }\n        s.box.x = Vec.min(s.px) - b.size;\n        s.box.y = Vec.min(s.py) - b.size;\n        s.box.w = Vec.max(s.px) - s.box.x + b.size;\n        s.box.h = Vec.max(s.py) - s.box.y + b.size;\n        return s;\n    }\n    bumpAtomPosition(atom, dx, dy) {\n        let p = this.points[atom - 1];\n        p.oval.cx += dx;\n        p.oval.cy += dy;\n        for (let n = this.space.length - 1; n >= 0; n--) {\n            let s = this.space[n - 1];\n            if (s == null || s.anum != atom)\n                continue;\n            s.box.x += dx;\n            s.box.y += dy;\n            Vec.addTo(s.px, dx);\n            Vec.addTo(s.py, dy);\n        }\n    }\n    spaceSubset(x, y, w, h) {\n        let subset = [];\n        for (let s of this.space)\n            if (GeomUtil.rectsIntersect(x, y, w, h, s.box.x, s.box.y, s.box.w, s.box.h))\n                subset.push(s);\n        return subset;\n    }\n    countPolyViolations(px, py, space, shortCircuit) {\n        if (space == null)\n            space = this.space;\n        let hits = 0;\n        const psz = px.length, nspc = space.length;\n        let pr = new Box(), sr = new Box();\n        for (let i1 = 0; i1 < psz; i1++) {\n            let i2 = i1 < psz - 1 ? i1 + 1 : 0;\n            pr.x = Math.min(px[i1], px[i2]) - 1;\n            pr.y = Math.min(py[i1], py[i2]) - 1;\n            pr.w = Math.max(px[i1], px[i2]) - pr.x + 2;\n            pr.h = Math.max(py[i1], py[i2]) - pr.y + 2;\n            for (let j = 0; j < nspc; j++) {\n                let spc = space[j];\n                if (spc.px == null)\n                    continue;\n                sr.x = spc.box.x - 1;\n                sr.y = spc.box.y - 1;\n                sr.w = spc.box.w + 1;\n                sr.h = spc.box.h + 1;\n                if (!pr.intersects(sr))\n                    continue;\n                let ssz = spc.px.length;\n                for (let j1 = 0; j1 < ssz; j1++) {\n                    let j2 = j1 < ssz - 1 ? j1 + 1 : 0;\n                    sr.x = Math.min(spc.px[j1], spc.px[j2]) - 1;\n                    sr.y = Math.min(spc.py[j1], spc.py[j2]) - 1;\n                    sr.w = Math.max(spc.px[j1], spc.px[j2]) - sr.x + 2;\n                    sr.h = Math.max(spc.py[j1], spc.py[j2]) - sr.y + 2;\n                    if (!pr.intersects(sr))\n                        continue;\n                    if (GeomUtil.doLineSegsIntersect(px[i1], py[i1], px[i2], py[i2], spc.px[j1], spc.py[j1], spc.px[j2], spc.py[j2])) {\n                        if (shortCircuit)\n                            return 1;\n                        hits++;\n                        break;\n                    }\n                    if (ssz == 1)\n                        break;\n                }\n            }\n        }\n        pr.x = Vec.min(px);\n        pr.y = Vec.min(py);\n        pr.w = Vec.max(px) - pr.x;\n        pr.h = Vec.max(py) - pr.y;\n        for (let n = nspc - 1; n >= 0; n--) {\n            let spc = space[n];\n            sr.x = spc.box.x;\n            sr.y = spc.box.y;\n            sr.w = spc.box.w;\n            sr.h = spc.box.h;\n            if (!pr.intersects(sr))\n                continue;\n            for (let i = spc.px.length - 1; i >= 0; i--)\n                if (GeomUtil.pointInPolygon(spc.px[i], spc.py[i], px, py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n            for (let i = 0; i < psz; i++)\n                if (GeomUtil.pointInPolygon(px[i], py[i], spc.px, spc.py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n        }\n        return hits;\n    }\n    adjustBondPosition(bf, bt, x1, y1, x2, y2) {\n        if (bf == 0 || bt == 0)\n            return null;\n        for (let n = 0; n < this.lines.length; n++) {\n            let b = this.lines[n];\n            if (this.mol.bondOrder(b.bnum) != 1 || this.mol.bondType(b.bnum) != Molecule.BONDTYPE_NORMAL)\n                continue;\n            let alt = false;\n            if (this.mol.bondFrom(b.bnum) == bf && this.mol.bondTo(b.bnum) == bt) { }\n            else if (this.mol.bondFrom(b.bnum) == bt && this.mol.bondTo(b.bnum) == bf)\n                alt = true;\n            else\n                continue;\n            let th = angleDiff(Math.atan2(b.line.y2 - b.line.y1, b.line.x2 - b.line.x1), Math.atan2(y2 - y1, x2 - x1)) * RADDEG;\n            if ((th > -5 && th < 5) || th > 175 || th < -175)\n                continue;\n            let xy = GeomUtil.lineIntersect(b.line.x1, b.line.y1, b.line.x2, b.line.y2, x1, y1, x2, y2);\n            if (this.mol.atomRingBlock(bt) == 0) {\n                if (alt) {\n                    b.line.x1 = xy[0];\n                    b.line.y1 = xy[1];\n                }\n                else {\n                    b.line.x2 = xy[0];\n                    b.line.y2 = xy[1];\n                }\n            }\n            return xy;\n        }\n        return null;\n    }\n    priorityDoubleSubstit(idx) {\n        let bf = this.mol.bondFrom(idx), bt = this.mol.bondTo(idx);\n        let nf = this.mol.atomAdjList(bf), nt = this.mol.atomAdjList(bt);\n        let a1 = this.points[bf - 1], a2 = this.points[bt - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        for (let n = 0; n < nf.length; n++)\n            if (nf[n] != bt) {\n                let theta = angleDiff(Math.atan2(this.points[nf[n] - 1].oval.cy - y1, this.points[nf[n] - 1].oval.cx - x1), btheta);\n                if (theta > 0) {\n                    if (idxFLeft != 0)\n                        return null;\n                    idxFLeft = nf[n];\n                }\n                else {\n                    if (idxFRight != 0)\n                        return null;\n                    idxFRight = nf[n];\n                }\n            }\n        for (let n = 0; n < nt.length; n++)\n            if (nt[n] != bf) {\n                let theta = angleDiff(Math.atan2(this.points[nt[n] - 1].oval.cy - y2, this.points[nt[n] - 1].oval.cx - x2), btheta);\n                if (theta > 0) {\n                    if (idxTLeft != 0)\n                        return null;\n                    idxTLeft = nt[n];\n                }\n                else {\n                    if (idxTRight != 0)\n                        return null;\n                    idxTRight = nt[n];\n                }\n            }\n        let sumFrom = (idxFLeft > 0 ? 1 : 0) + (idxFRight > 0 ? 1 : 0), sumTo = (idxTLeft > 0 ? 1 : 0) + (idxTRight > 0 ? 1 : 0);\n        if (sumFrom == 1 && sumTo == 0)\n            return [idxFLeft > 0 ? idxFLeft : idxFRight];\n        if (sumFrom == 0 && sumTo == 1)\n            return [idxTLeft > 0 ? idxTLeft : idxTRight];\n        if (sumFrom == 1 && sumTo == 1) {\n            if (idxFLeft > 0 && idxTLeft > 0)\n                return [idxFLeft, idxTLeft];\n            if (idxFRight > 0 && idxTRight > 0)\n                return [idxFRight, idxTRight];\n            let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n            let congestLeft = this.spatialCongestion(0.5 * (x1 + x2) + oxy[0], 0.5 * (y1 + y2) + oxy[1]);\n            let congestRight = this.spatialCongestion(0.5 * (x1 + x2) - oxy[0], 0.5 * (y1 + y2) - oxy[1]);\n            if (congestLeft < congestRight)\n                return [idxFLeft > 0 ? idxFLeft : idxTLeft];\n            else\n                return [idxFRight > 0 ? idxFRight : idxTRight];\n        }\n        if (sumFrom == 2 && sumTo == 1) {\n            if (idxTLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        if (sumFrom == 1 && sumTo == 2) {\n            if (idxFLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        return null;\n    }\n    annotateAtom(atom, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.6 * tw, rh = 0.6 * ta;\n        let otherTheta = [];\n        for (let a of this.mol.atomAdjList(atom)) {\n            let dx = this.points[a - 1].oval.cx - cx, dy = this.points[a - 1].oval.cy - cy;\n            otherTheta.push(Math.atan2(dy, dx));\n        }\n        let minExt = 0.5 * (a.oval.rw + a.oval.rh), stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    annotateBond(bond, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let bfr = this.mol.bondFrom(bond), bto = this.mol.bondTo(bond);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let cx = 0.5 * (a1.oval.cx + a2.oval.cx), cy = 0.5 * (a1.oval.cy + a2.oval.cy), rw = 0.6 * tw, rh = 0.6 * ta;\n        let bth = Math.atan2(a2.oval.cy - a1.oval.cy, a2.oval.cx - a1.oval.cx);\n        let otherTheta = [bth, bth + Math.PI];\n        for (let a of this.mol.atomAdjList(bfr))\n            if (a != bto) {\n                let dx = this.points[a - 1].oval.cx - this.points[bfr - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bfr - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        for (let a of this.mol.atomAdjList(bto))\n            if (a != bfr) {\n                let dx = this.points[a - 1].oval.cx - this.points[bto - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bto - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        let minExt = 0.2 * this.scale * this.bondOrder[bond - 1], stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    boxOverlaps(x, y, w, h, pointmask, linemask) {\n        let vx1 = x, vy1 = y, vx2 = x + w, vy2 = y + h;\n        for (let n = 0; n < this.points.length; n++) {\n            if (pointmask != null && !pointmask[n])\n                continue;\n            let a = this.points[n];\n            let wx1 = a.oval.cx - a.oval.rw, wy1 = a.oval.cy - a.oval.rh, wx2 = a.oval.cx + a.oval.rw, wy2 = a.oval.cy + a.oval.rh;\n            if (vx2 < wx1 || vx1 > wx2 || vy2 < wy1 || vy1 > wy2)\n                continue;\n            return true;\n        }\n        for (let n = 0; n < this.lines.length; n++) {\n            if (linemask != null && !linemask[n])\n                continue;\n            let b = this.lines[n];\n            let wx1 = b.line.x1, wy1 = b.line.y1, wx2 = b.line.x2, wy2 = b.line.y2;\n            if (vx2 < Math.min(wx1, wx2) || vx1 > Math.max(wx1, wx2) || vy2 < Math.min(wy1, wy2) || vy1 > Math.max(wy1, wy2))\n                continue;\n            if (wx1 >= vx1 && wx1 <= vx2 && wy1 >= vy1 && wy1 <= vy2)\n                return true;\n            if (wx2 >= vx1 && wx2 <= vx2 && wy2 >= vy1 && wy2 <= vy2)\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx2, vy1))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy2, vx2, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx1, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx2, vy1, vx2, vy2))\n                return true;\n        }\n        return false;\n    }\n    resolveLineCrossings(bondHigher, bondLower) {\n        while (true) {\n            let anything = false;\n            for (let i1 = 0; i1 < this.lines.length; i1++) {\n                let b1 = this.lines[i1];\n                if (b1.bnum != bondHigher)\n                    continue;\n                if (b1.type != BLineType.Normal && b1.type != BLineType.Dotted && b1.type != BLineType.DotDir)\n                    continue;\n                for (let i2 = 0; i2 < this.lines.length; i2++) {\n                    let b2 = this.lines[i2];\n                    if (b2.bnum != bondLower)\n                        continue;\n                    if (b2.type == BLineType.DotDir)\n                        b2.type = BLineType.Dotted;\n                    if (b2.type != BLineType.Normal && b2.type != BLineType.Dotted)\n                        continue;\n                    if (b1.bfr == b2.bfr || b1.bfr == b2.bto || b1.bto == b2.bfr || b1.bto == b2.bto)\n                        continue;\n                    if (!GeomUtil.doLineSegsIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2);\n                    let dx = b2.line.x2 - b2.line.x1, dy = b2.line.y2 - b2.line.y1;\n                    let ext = Math.abs(dx) > Math.abs(dy) ? (xy[0] - b2.line.x1) / dx : (xy[1] - b2.line.y1) / dy;\n                    let dist = norm_xy(dx, dy);\n                    let delta = b2.size / dist * (b2.type == BLineType.Normal ? 2 : 4);\n                    if (ext > delta && ext < 1 - delta) {\n                        let b3 = {\n                            bnum: b2.bnum,\n                            bfr: b2.bfr,\n                            bto: b2.bto,\n                            type: b2.type,\n                            line: b2.line.clone(),\n                            size: b2.size,\n                            head: b2.head,\n                            col: b2.col\n                        };\n                        this.lines.push(b3);\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        b3.line.x1 = b3.line.x1 + dx * (ext + delta);\n                        b3.line.y1 = b3.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                    else if (ext > delta) {\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        anything = true;\n                    }\n                    else if (ext < 1 - delta) {\n                        b2.line.x1 = b2.line.x1 + dx * (ext + delta);\n                        b2.line.y1 = b2.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                }\n            }\n            if (!anything)\n                break;\n        }\n    }\n    createCircularRing(atoms) {\n        let px = new Array(atoms.length), py = new Array(atoms.length);\n        for (let n = 0; n < atoms.length; n++) {\n            let pt = this.points[atoms[n] - 1];\n            px[n] = pt.oval.cx;\n            py[n] = pt.oval.cy;\n        }\n        let cx = Vec.sum(px) / atoms.length, cy = Vec.sum(py) / atoms.length;\n        let bx = [], by = [];\n        let isRegular = true;\n        let regDist = Number.NaN;\n        const FRACT = 0.7;\n        for (let a of atoms) {\n            let pt = this.points[a - 1];\n            let x0 = pt.oval.cx - cx, y0 = pt.oval.cy - cy, x1 = x0 - pt.oval.rw, x2 = x0 + pt.oval.rw, y1 = y0 - pt.oval.rh, y2 = y0 + pt.oval.rh;\n            bx.push(x1);\n            by.push(y0);\n            bx.push(x1);\n            by.push(y1);\n            bx.push(x1);\n            by.push(y2);\n            bx.push(x0);\n            by.push(y1);\n            bx.push(x0);\n            by.push(y2);\n            bx.push(x2);\n            by.push(y0);\n            bx.push(x2);\n            by.push(y1);\n            bx.push(x2);\n            by.push(y2);\n            let dist = norm_xy(x0, y0), theta = Math.atan2(y0, x0);\n            bx.push(FRACT * dist * Math.cos(theta));\n            by.push(FRACT * dist * Math.sin(theta));\n            for (let b of this.mol.atomAdjList(a))\n                if (atoms.indexOf(b) >= 0) {\n                    let pb = this.points[b - 1];\n                    let mx = 0.5 * (pt.oval.cx + pb.oval.cx) - cx, my = 0.5 * (pt.oval.cy + pb.oval.cy) - cy;\n                    let mdist = norm_xy(mx, my), mtheta = Math.atan2(my, mx);\n                    bx.push(FRACT * mdist * Math.cos(mtheta));\n                    by.push(FRACT * mdist * Math.sin(mtheta));\n                }\n            if (!isRegular) { }\n            else if (Number.isFinite(regDist)) {\n                if (Math.abs(regDist - dist) > 1)\n                    isRegular = false;\n            }\n            else\n                regDist = dist;\n        }\n        let r = { atoms, cx, cy, rw: 0, rh: 0, theta: 0, size: 0 };\n        if (isRegular) {\n            r.rw = r.rh = GeomUtil.fitCircle(bx, by);\n        }\n        else {\n            let mdist = 0;\n            for (let n = 0; n < atoms.length; n++)\n                mdist += norm_xy(px[n] - cx, py[n] - cy);\n            let margin = mdist / atoms.length * (1 - FRACT);\n            var fit = new FitRotatedEllipse(px, py, margin);\n            fit.calculate();\n            r.cx = fit.cx;\n            r.cy = fit.cy;\n            r.rw = fit.rw;\n            r.rh = fit.rh;\n            r.theta = fit.theta;\n        }\n        r.size = this.lineSizePix;\n        this.rings.push(r);\n    }\n    createCurvedPath(atoms, fractional, extAtom) {\n        const sz = atoms.length, szn = sz - 1;\n        let x = [], y = [], symbol = [];\n        for (let n = 0; n < sz; n++) {\n            let pt = this.points[atoms[n] - 1];\n            x.push(pt.oval.cx);\n            y.push(pt.oval.cy);\n            symbol.push(pt.text != null);\n        }\n        let ox = [], oy = [];\n        const EXT = Molecule.IDEALBOND * 0.25 * this.scale;\n        for (let n = 0; n < sz - 1; n++) {\n            let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n], invD = EXT * invZ(norm_xy(dx, dy));\n            ox.push(dy * invD);\n            oy.push(-dx * invD);\n        }\n        const FAR = 1.2, CLOSE = 0.7;\n        let sx1 = Vec.numberArray(0, sz), sy1 = Vec.numberArray(0, sz), sx2 = Vec.numberArray(0, sz), sy2 = Vec.numberArray(0, sz);\n        const capA = symbol[0] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[0] = x[0] + ox[0] * capA;\n            sy1[0] = y[0] + oy[0] * capA;\n            sx2[0] = x[0] - ox[0] * capA;\n            sy2[0] = y[0] - oy[0] * capA;\n        }\n        else {\n            const dx = -oy[0], dy = ox[0];\n            sx1[0] = x[0] + dx * capA;\n            sy1[0] = y[0] + dy * capA;\n            sx2[0] = x[0] + dx * capA;\n            sy2[0] = y[0] + dy * capA;\n        }\n        let ncross1 = 0, ncross2 = 0;\n        for (let n = 1; n < sz - 1; n++) {\n            const fr1 = symbol[n] ? FAR : CLOSE, fr2 = fr1;\n            sx1[n] = x[n] + fr1 * (ox[n - 1] + ox[n]);\n            sy1[n] = y[n] + fr1 * (oy[n - 1] + oy[n]);\n            sx2[n] = x[n] - fr2 * (ox[n - 1] + ox[n]);\n            sy2[n] = y[n] - fr2 * (oy[n - 1] + oy[n]);\n            for (let a of this.mol.atomAdjList(atoms[n]))\n                if (atoms.indexOf(a) < 0 && a != extAtom) {\n                    let pt = this.points[a - 1];\n                    let dx = pt.oval.cx - x[n], dy = pt.oval.cy - y[n];\n                    let dot1 = dx * (sx1[n] - x[n]) + dy * (sy1[n] - x[n]);\n                    let dot2 = dy * (sx2[n] - x[n]) + dy * (sy2[n] - x[n]);\n                    if (dot1 > dot2)\n                        ncross1++;\n                    else\n                        ncross2++;\n                }\n        }\n        let nn = sz - 1;\n        let capB = symbol[nn] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[nn] = x[nn] + ox[nn - 1] * capB;\n            sy1[nn] = y[nn] + oy[nn - 1] * capB;\n            sx2[nn] = x[nn] - ox[nn - 1] * capB;\n            sy2[nn] = y[nn] - oy[nn - 1] * capB;\n        }\n        else {\n            let dx = -oy[nn - 1], dy = ox[nn - 1];\n            sx1[nn] = x[nn] - dx * capB;\n            sy1[nn] = y[nn] - dy * capB;\n            sx2[nn] = x[nn] - dx * capB;\n            sy2[nn] = y[nn] - dy * capB;\n        }\n        let score1 = 0, score2 = 0;\n        for (let n = 0; n < sz - 1; n++) {\n            score1 += norm_xy(sx1[n + 1] - sx1[n], sy1[n + 1] - sy1[n]);\n            score2 += norm_xy(sx2[n + 1] - sx2[n], sy2[n + 1] - sy2[n]);\n        }\n        score1 *= ncross1 + 1;\n        score2 *= ncross2 + 1;\n        let sx = score1 < score2 ? sx1 : sx2;\n        let sy = score1 < score2 ? sy1 : sy2;\n        let p = { atoms, px: null, py: null, ctrl: null, size: this.lineSizePix };\n        this.splineInterpolate(p, sx, sy);\n        this.paths.push(p);\n    }\n    createBondCentroid(from, to) {\n        let pt = this.points[from - 1];\n        let x1 = pt.oval.cx, y1 = pt.oval.cy, x2 = 0, y2 = 0;\n        for (let a of to) {\n            pt = this.points[a - 1];\n            x2 += pt.oval.cx;\n            y2 += pt.oval.cy;\n        }\n        x2 /= to.length;\n        y2 /= to.length;\n        if (to.length <= 2) {\n            x2 -= 0.1 * (x2 - x1);\n            y2 -= 0.1 * (y2 - y1);\n        }\n        const minDist = MINBOND_LINE * this.measure.scale();\n        let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(from, x1, y1, x2, y2, minDist));\n        this.ensureMinimumBondLength(xy1, [x2, y2], x1, y1, x2, y2, minDist);\n        let b = {\n            bnum: 0,\n            bfr: from,\n            bto: 0,\n            type: BLineType.Normal,\n            line: new Line(xy1[0], xy1[1], x2, y2),\n            size: this.lineSizePix,\n            head: 0,\n            col: this.policy.data.foreground\n        };\n        this.lines.push(b);\n        this.space.push(this.computeSpaceLine(b));\n    }\n    splineInterpolate(path, x, y) {\n        const sz = x.length;\n        const scale = 0.25;\n        for (let n = 0; n < sz; n++) {\n            if (n == 0) {\n                let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n];\n                let qx = x[n] + scale * dx, qy = y[n] + scale * dy;\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n            else if (n == sz - 1) {\n                let dx = x[n] - x[n - 1], dy = y[n] - y[n - 1];\n                let qx = x[n] - scale * dx, qy = y[n] - scale * dy;\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n            }\n            else {\n                let dx = x[n + 1] - x[n - 1], dy = y[n + 1] - y[n - 1];\n                let invD = invZ(norm_xy(dx, dy));\n                dx *= invD;\n                dy *= invD;\n                let d1 = scale * norm_xy(x[n] - x[n - 1], y[n] - y[n - 1]), d2 = scale * norm_xy(x[n + 1] - x[n], y[n + 1] - y[n]);\n                let qx1 = x[n] - dx * d1, qy1 = y[n] - dy * d1;\n                let qx2 = x[n] + dx * d2, qy2 = y[n] + dy * d2;\n                path.px = Vec.append(path.px, qx1);\n                path.py = Vec.append(path.py, qy1);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx2);\n                path.py = Vec.append(path.py, qy2);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n        }\n    }\n    delocalisedAnnotation(atoms, charge, unpaired) {\n        const mol = this.mol;\n        let str = '';\n        if (charge == -1)\n            str = '-';\n        else if (charge == 1)\n            str = '+';\n        else if (charge < -1)\n            str = Math.abs(charge) + '-';\n        else if (charge > 1)\n            str = charge + '+';\n        if (unpaired > 0)\n            for (let n = 0; n < unpaired; n++)\n                str += '.';\n        if (str.length == 0)\n            return;\n        const sz = atoms.length;\n        let bestX = 0, bestY = 0;\n        for (let a of atoms) {\n            bestX += mol.atomX(a);\n            bestY += mol.atomY(a);\n        }\n        bestX /= sz;\n        bestY /= sz;\n        let bestScore = CoordUtil.congestionPoint(mol, bestX, bestY);\n        for (let n = 1; n < sz - 1; n++) {\n            let x = 0.5 * (mol.atomX(atoms[n - 1]) + mol.atomX(atoms[n + 1])), y = 0.5 * (mol.atomY(atoms[n - 1]) + mol.atomY(atoms[n + 1]));\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (score < bestScore) {\n                bestScore = score;\n                bestX = x;\n                bestY = y;\n            }\n        }\n        let fsz = 0.8 * this.fontSizePix;\n        let wad = this.measure.measureText(str, fsz);\n        let rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        let a = {\n            anum: 0,\n            text: str,\n            fsz,\n            col: this.policy.data.foreground,\n            oval: new Oval(this.measure.angToX(bestX), this.measure.angToY(bestY), rw, rh)\n        };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processPolymerUnit(unit, allUnits) {\n        if (Vec.len(unit.bondConn) == 4) {\n            this.processPolymerUnitPair(unit);\n            return;\n        }\n        let brackets = [];\n        const { mol, measure } = this;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let a1 = mol.bondFrom(n), a2 = mol.bondTo(n);\n            let in1 = unit.atoms.indexOf(a1) >= 0, in2 = unit.atoms.indexOf(a2) >= 0;\n            let bracket = null;\n            if (in1 && !in2)\n                bracket = { a1, a2 };\n            else if (in2 && !in1)\n                bracket = { a1: a2, a2: a1 };\n            else\n                continue;\n            bracket.x1 = mol.atomX(bracket.a1);\n            bracket.y1 = mol.atomY(bracket.a1);\n            bracket.x2 = mol.atomX(bracket.a2);\n            bracket.y2 = mol.atomY(bracket.a2);\n            bracket.shared = false;\n            for (let other of allUnits)\n                if (unit !== other && other.atoms.includes(bracket.a2)) {\n                    bracket.shared = true;\n                    break;\n                }\n            let nestings = allUnits.filter((look) => look === unit || (look.atoms.includes(bracket.a1) && !look.atoms.includes(bracket.a2)));\n            if (nestings.length > 1) {\n                nestings.sort((u1, u2) => u1.atoms.length - u2.atoms.length);\n                for (let i = 0; i < nestings.length; i++)\n                    if (nestings[i] === unit)\n                        bracket.nestOrder = i;\n                bracket.nestCount = nestings.length;\n            }\n            brackets.push(bracket);\n        }\n        let tagidx = 0;\n        let atomX = unit.atoms.map((a) => mol.atomX(a)), atomY = unit.atoms.map((a) => mol.atomY(a));\n        let minX = Vec.min(atomX), minY = Vec.min(atomY);\n        let maxX = Vec.max(atomX), maxY = Vec.max(atomY);\n        for (let n = 1; n < brackets.length; n++) {\n            let b1 = brackets[tagidx], b2 = brackets[n];\n            let score1 = b1.x2 - minX - b1.y2 + minY;\n            let score2 = b2.x2 - minX - b2.y2 + minY;\n            if (score2 > score1)\n                tagidx = n;\n        }\n        let isLinear = false, isOuter = false;\n        if (brackets.length == 2) {\n            let left = brackets[tagidx == 0 ? 1 : 0], right = brackets[tagidx];\n            let theta1 = Math.atan2(left.y2 - left.y1, left.x2 - left.x1);\n            let theta2 = Math.atan2(right.y2 - right.y1, right.x2 - right.x1);\n            isLinear = (theta1 > 145 * DEGRAD || theta1 < -145 * DEGRAD) && theta2 < 35 * DEGRAD && theta2 > -35 * DEGRAD;\n        }\n        else if (brackets.length == 0) {\n            let ym = 0.5 * (minY + maxY);\n            brackets.push({ x1: minX, y1: ym, x2: minX - 1, y2: ym });\n            brackets.push({ x1: maxX, y1: ym, x2: maxX + 1, y2: ym });\n            tagidx = 1;\n            isOuter = true;\n        }\n        let bsz1 = (isOuter ? 0.5 * (maxY - minY + 1) : isLinear ? 1.0 : 0.5) * this.scale, bsz2 = 0.2 * this.scale;\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        for (let n = 0; n < brackets.length; n++) {\n            let bracket = brackets[n];\n            let x1 = measure.angToX(bracket.x1), y1 = measure.angToY(bracket.y1);\n            let x2 = measure.angToX(bracket.x2), y2 = measure.angToY(bracket.y2);\n            if (bracket.shared) {\n                x2 -= (x2 - x1) * 0.1;\n                y2 -= (y2 - y1) * 0.1;\n            }\n            if (bracket.nestCount > 1) {\n                let dx = x2 - x1, dy = y2 - y1, fract = (bracket.nestOrder + 1) / bracket.nestCount;\n                x2 = x1 + dx * fract;\n                y2 = y1 + dy * fract;\n            }\n            let mx = 0.5 * (x1 + x2), my = 0.5 * (y1 + y2);\n            if (isLinear) {\n                x1 = x2 = mx;\n                y1 = y2 = my;\n                if (n == tagidx) {\n                    x1--;\n                    x2++;\n                }\n                else {\n                    x1++;\n                    x2--;\n                }\n            }\n            let invDist = invZ(norm_xy(x2 - x1, y2 - y1));\n            let dx = (x2 - x1) * invDist, dy = (y2 - y1) * invDist;\n            let ox = dy, oy = -dx;\n            let px2 = mx - bsz1 * ox, py2 = my - bsz1 * oy;\n            let px3 = mx + bsz1 * ox, py3 = my + bsz1 * oy;\n            let px1 = px2 - bsz2 * dx, py1 = py2 - bsz2 * dy;\n            let px4 = px3 - bsz2 * dx, py4 = py3 - bsz2 * dy;\n            let line1 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px1, py1, px2, py2) });\n            let line2 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px2, py2, px3, py3) });\n            let line3 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px3, py3, px4, py4) });\n            this.lines.push(line1);\n            this.lines.push(line2);\n            this.lines.push(line3);\n            this.space.push(this.computeSpaceLine(line1));\n            this.space.push(this.computeSpaceLine(line2));\n            this.space.push(this.computeSpaceLine(line3));\n            if (n == tagidx) {\n                let xx, yy;\n                if (bracket.shared)\n                    [xx, yy] = [px2 - 0.5 * this.scale * ox, py2 - 0.5 * this.scale * oy];\n                else\n                    [xx, yy] = [px2 + bsz2 * 2 * dx, py2 + bsz2 * 2 * dy];\n                let pt1 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': 'n', 'oval': new Oval(xx, yy, 0, 0) });\n                this.points.push(pt1);\n                this.space.push(this.computeSpacePoint(pt1));\n                if (unit.connect != null) {\n                    let text = '?';\n                    if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                        text = 'ht';\n                    else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                        text = 'hh';\n                    else if (unit.connect == PolymerBlockConnectivity.Random)\n                        text = 'eu';\n                    if (bracket.shared)\n                        [xx, yy] = [px3 + 0.5 * this.scale * ox, py3 + 0.5 * this.scale * oy];\n                    else\n                        [xx, yy] = [px3 + bsz2 * 2.5 * dx, py3 + bsz2 * 2.5 * dy];\n                    let pt2 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': text, 'oval': new Oval(xx, yy, 0, 0) });\n                    this.points.push(pt2);\n                    this.space.push(this.computeSpacePoint(pt2));\n                }\n            }\n        }\n    }\n    processPolymerUnitPair(unit) {\n        const { mol, measure } = this;\n        let xpos = [], ypos = [];\n        for (let b of unit.bondConn) {\n            let bfr = mol.bondFrom(b), bto = mol.bondTo(b);\n            xpos.push(measure.angToX(0.5 * (mol.atomX(bfr) + mol.atomX(bto))));\n            ypos.push(measure.angToY(0.5 * (mol.atomY(bfr) + mol.atomY(bto))));\n        }\n        let cx = Vec.sum(xpos) * 0.25, cy = Vec.sum(ypos) * 0.25;\n        let bsz = 0.5 * this.scale;\n        let rx = [], ry = [];\n        for (let [i1, i2] of [[0, 1], [2, 3]]) {\n            let dx = xpos[i2] - xpos[i1], dy = ypos[i2] - ypos[i1], inv = bsz * invZ(norm_xy(dx, dy) + 0.001);\n            [dx, dy] = [dx * inv, dy * inv];\n            xpos[i1] -= 2 * dx;\n            ypos[i1] -= 2 * dy;\n            xpos[i2] += 2 * dx;\n            ypos[i2] += 2 * dy;\n            let ox = dy, oy = -dx;\n            let dsq1 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) + ox - cx, 0.5 * (ypos[i1] + ypos[i2]) + oy - cy);\n            let dsq2 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) - ox - cx, 0.5 * (ypos[i1] + ypos[i2]) - oy - cy);\n            if (dsq2 < dsq1)\n                [ox, oy] = [-ox, -oy];\n            rx.push(...[ox, ox]);\n            ry.push(...[oy, oy]);\n        }\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        let drawLine = (x1, y1, x2, y2) => {\n            let line = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(x1, y1, x2, y2) });\n            this.lines.push(line);\n            this.space.push(this.computeSpaceLine(line));\n        };\n        let drawText = (x, y, txt) => {\n            let pt = Object.assign(Object.assign({}, BASE_TEXT), { 'text': txt, 'oval': new Oval(x, y, 0, 0) });\n            this.points.push(pt);\n            this.space.push(this.computeSpacePoint(pt));\n        };\n        drawLine(xpos[0], ypos[0], xpos[1], ypos[1]);\n        drawLine(xpos[0], ypos[0], xpos[0] + rx[0], ypos[0] + ry[0]);\n        drawLine(xpos[1], ypos[1], xpos[1] + rx[1], ypos[1] + ry[1]);\n        drawLine(xpos[2], ypos[2], xpos[3], ypos[3]);\n        drawLine(xpos[2], ypos[2], xpos[2] + rx[2], ypos[2] + ry[2]);\n        drawLine(xpos[3], ypos[3], xpos[3] + rx[3], ypos[3] + ry[3]);\n        let xmin = Vec.min(xpos), ymin = Vec.min(ypos);\n        let dist = [];\n        for (let n = 0; n < 4; n++)\n            dist.push(xpos[n] - xmin + ypos[n] - ymin);\n        let idxN = Vec.idxMax(dist);\n        drawText(xpos[idxN] - rx[idxN], ypos[idxN] - ry[idxN], 'n');\n        let idxD2 = idxN + (idxN % 2 == 1 ? -1 : 1), idxD1 = (idxD2 + 2) % 4;\n        drawText(xpos[idxD1] - 0.5 * rx[idxD1], ypos[idxD1] - 0.5 * ry[idxD1], '*');\n        drawText(xpos[idxD2] - 0.5 * rx[idxD2], ypos[idxD2] - 0.5 * ry[idxD2], '*');\n    }\n}\nArrangeMolecule.FONT_CORRECT = 1.5;\nexport { ArrangeMolecule };\n//# sourceMappingURL=ArrangeMolecule.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Theme } from '../util/Theme';\nimport { readTextURL } from '../util/util';\nimport { Vec } from '../util/Vec';\nlet globalInstance = null;\nconst ONTOLOGY_FILES = [\n    'units'\n];\nexport class OntologyTree {\n    static get main() { return globalInstance; }\n    constructor() {\n        this.roots = [];\n        this.mapTerms = new Map();\n        this.alreadyLoaded = new Set();\n    }\n    static init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (globalInstance)\n                return;\n            globalInstance = new OntologyTree();\n            for (let fn of ONTOLOGY_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/ontology/' + fn + '.onto';\n                globalInstance.loadFromURL(url);\n            }\n        });\n    }\n    getRoots() {\n        return this.roots;\n    }\n    hasTerm(uri) { return this.mapTerms.has(uri); }\n    getBranch(uri) {\n        return this.mapTerms.get(uri);\n    }\n    getBranchList(root) {\n        if (typeof root == 'string') {\n            let look = this.mapTerms.get(root);\n            if (!look)\n                throw `Unknown branch URI: ${root}`;\n            if (look.length > 1)\n                throw `Ambiguous branch URI occurs more than once: ${root}`;\n            root = look[0];\n        }\n        let list = [];\n        let accumulate = (branch) => {\n            list.push(branch);\n            for (let child of Vec.safeArray(branch.children))\n                accumulate(child);\n        };\n        accumulate(root);\n        return list;\n    }\n    loadFromURL(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.alreadyLoaded.has(url))\n                return;\n            this.alreadyLoaded.add(url);\n            let text = yield readTextURL(url);\n            if (!text)\n                throw `Resource not found: ${url}`;\n            this.loadContent(text);\n        });\n    }\n    loadContent(text) {\n        let termList = [];\n        let pos = 0;\n        for (let line of text.split(/\\n/)) {\n            pos++;\n            line = line.trim();\n            if (!line || line.startsWith('#'))\n                continue;\n            let idx = line.indexOf('http');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no URI term: ${line}`;\n            let depth = 0;\n            for (let n = 0; n < idx; n++)\n                if (line.charAt(n) == '-')\n                    depth++;\n            let uri = line.substring(idx);\n            idx = uri.indexOf(' ');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no label: ${line}`;\n            let label = uri.substring(idx + 1);\n            uri = uri.substring(0, idx);\n            let term = null;\n            if (depth == 0)\n                term = this.roots.find((look) => look.uri == uri);\n            if (!term) {\n                term = { uri, label, 'parent': null, 'children': [], depth };\n                if (depth == 0)\n                    this.roots.push(term);\n                else {\n                    for (let n = termList.length - 1; n >= 0; n--)\n                        if (termList[n].depth == depth - 1) {\n                            term.parent = termList[n];\n                            termList[n].children.push(term);\n                            break;\n                        }\n                    if (!term.parent)\n                        throw `Line ${pos} invalid hierarchy, no parent found`;\n                }\n                let list = this.mapTerms.get(uri);\n                if (list)\n                    list.push(term);\n                else\n                    this.mapTerms.set(uri, [term]);\n            }\n            termList.push(term);\n        }\n    }\n    debugString(term) {\n        let lines = [];\n        let emit = (term) => {\n            lines.push('* '.repeat(term.depth) + `<${term.uri}> \"${term.label}\"`);\n            for (let child of term.children)\n                emit(child);\n        };\n        emit(term);\n        return lines.join('\\n');\n    }\n}\n//# sourceMappingURL=OntologyTree.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tTry to arrange a list of boxes into a more rectangular pattern, which has a better ratio than stacking everything vertically.\n*/\n\nenum SquarePackingSpring\n{\n\tStrong = 0,\n\tMedium = 1,\n\tWeak = 2,\n}\n\ninterface SquarePackingCandidate\n{\n\tidxStart:number;\n\tsprings:SquarePackingSpring[];\n\tlayout?:Box[];\n\toutline?:Size;\n\tscore?:number; // lower is better\n\thash?:string;\n}\n\ninterface SquarePackingSegment\n{\n\ty:number;\n\tx1:number;\n\tx2:number;\n}\n\nexport class SquarePacking\n{\n\tpublic outline:Size;\n\tpublic layout:Box[] = null;\n\n\tprivate wantRatio:number;\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(private packSize:Size, private boxes:Box[], private hspace:number, private vspace:number)\n\t{\n\t\tthis.wantRatio = packSize.w / packSize.h;\n\n\t\t/*\n\t\t// !! temporary validation\n\t\tlet segs:SquarePackingSegment[] =\n\t\t[\n\t\t\t{'y': 0, 'x1': 0, 'x2': 1},\n\t\t\t{'y': 2, 'x1': 1, 'x2': 3},\n\t\t\t{'y': 1, 'x1': 3, 'x2': Number.POSITIVE_INFINITY}\n\t\t];\n\t\tthis.mergeSegmentAbove(segs, {'y': 2.5, 'x1': 1.5, 'x2': 2.5});\n\t\t//this.mergeSegmentBelow(segs, {'y': -1.5, 'x1': 2, 'x2': 3.5});\n\t\tfor (let seg of segs) console.log(JSON.stringify(seg));\n\t\tthrow 'blork';*/\n\t}\n\n\t// carries out the arrangement: returns whether it got something good\n\tpublic pack():boolean\n\t{\n\t\tlet candidates:SquarePackingCandidate[] = [];\n\t\tlet num = this.boxes.length;\n\t\tfor (let n = 0; n < num; n++)\n\t\t{\n\t\t\tlet cand:SquarePackingCandidate = {idxStart: n, springs: Vec.anyArray(SquarePackingSpring.Weak, num)};\n\t\t\tcand.hash = cand.idxStart + '/' + cand.springs;\n\t\t\tthis.processCandidate(cand);\n\t\t\tcandidates.push(cand);\n\t\t}\n\n\t\tconst KEEP = 100;\n\t\tcandidates = candidates.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\tfor (let sanity = 100; sanity > 0; sanity--)\n\t\t{\n\t\t\tlet hashes = new Set<string>();\n\t\t\tfor (let cand of candidates) hashes.add(cand.hash);\n\n\t\t\tlet batch = candidates.slice(0);\n\t\t\tfor (let cand of candidates) for (let n = 0; n < num; n++) if (n != cand.idxStart)\n\t\t\t{\n\t\t\t\tfor (let sp of [SquarePackingSpring.Strong, SquarePackingSpring.Medium, SquarePackingSpring.Weak]) if (cand.springs[n] != sp)\n\t\t\t\t{\n\t\t\t\t\tlet mod:SquarePackingCandidate = {idxStart: cand.idxStart, springs: cand.springs.slice(0)};\n\t\t\t\t\tmod.springs[n] = sp;\n\t\t\t\t\tmod.hash = mod.idxStart + '/' + mod.springs;\n\t\t\t\t\tif (hashes.has(mod.hash)) continue;\n\t\t\t\t\tthis.processCandidate(mod);\n\t\t\t\t\tbatch.push(mod);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbatch = batch.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\t\tlet same = true;\n\t\t\tfor (let n = 0; n < candidates.length && n < batch.length; n++) if (candidates[n].hash != batch[n].hash) {same = false; break;}\n\n\t\t\tif (!same) break;\n\n\t\t\tcandidates = batch;\n\t\t}\n\n\t\tlet best = candidates[0];\n\n\t\tthis.outline = best.outline;\n\t\tthis.layout = best.layout;\n\t\tlet minY = Vec.min(this.layout.map((b) => b.y));\n\t\tfor (let box of this.layout) box.y -= minY;\n\n\t\treturn true;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate processCandidate(cand:SquarePackingCandidate):void\n\t{\n\t\tlet len = this.boxes.length;\n\t\tcand.layout = this.boxes.map((box) => new Box(0, 0, box.w, box.h));\n\t\tlet placed = Vec.booleanArray(false, len);\n\t\tplaced[cand.idxStart] = true;\n\n\t\tlet placeAbove = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx + 1; n < len; n++) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() - this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace + 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentAbove(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.min(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y > bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY - box.h;\n\t\t\tplaced[idx] = true;\n\t\t};\n\t\tlet placeBelow = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx - 1; n >= 0; n--) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() + this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace - 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentBelow(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.POSITIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.NEGATIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.max(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y < bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY;\n\t\t\tplaced[idx] = true;\n\t\t};\n\n\t\tfor (let d = 1; d < len; d++)\n\t\t{\n\t\t\tlet i1 = cand.idxStart - d, i2 = cand.idxStart + d;\n\t\t\tif (i1 >= 0) placeAbove(i1, cand.springs[i1]);\n\t\t\tif (i2 < len) placeBelow(i2, cand.springs[i2]);\n\t\t}\n\n\t\tlet loX = 0, hiX = Vec.max(cand.layout.map((box) => box.maxX()));\n\t\tlet loY = Vec.min(cand.layout.map((box) => box.minY())), hiY = Vec.max(cand.layout.map((box) => box.maxY()));\n\t\tcand.outline = new Size(hiX - loX, hiY - loY);\n\t\tlet ratio = cand.outline.w / cand.outline.h;\n\t\tcand.score = Math.abs(ratio - this.wantRatio) * (cand.outline.w + cand.outline.h);\n\t\tcand.score += Vec.sum((cand.layout.map((box) => box.x)));\n\t\tfor (let n = 0; n < cand.layout.length - 1; n++) cand.score += Math.max(0, cand.layout[n].minY() - cand.layout[n].maxY());\n\t}\n\n\tprivate mergeSegmentAbove(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n\tprivate mergeSegmentBelow(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MixfileComponent} from '../data/Mixfile';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {NormMixture} from '../data/NormMixture';\nimport {Mixture} from '../data/Mixture';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {formatDouble} from 'webmolkit/util/util';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {SquarePacking} from './SquarePacking';\nimport {FontData} from 'webmolkit/gfx/FontData';\n\n/*\n\tArranging a Mixfile: will create a tree layout for all of the components, according to parameters.\n*/\n\nexport enum ArrangeMixtureLineSource\n{\n\tName,\n\tQuantity,\n\tIdentifier,\n\tMeta,\n}\n\nexport interface ArrangeMixtureLine\n{\n\ttext:string;\n\tcol:number;\n\tsource:ArrangeMixtureLineSource;\n}\n\nexport interface ArrangeMixtureComponent\n{\n\torigin:number[];\n\tcontent:MixfileComponent;\n\tparentIdx:number;\n\n\tboundary?:Box; // outer boundary (position on canvas)\n\n\tmol?:Molecule;\n\tmolLayout?:ArrangeMolecule;\n\tmolBox?:Box;\n\n\tnameBox?:Box;\n\tnameLines?:ArrangeMixtureLine[];\n\tfontSize?:number;\n\n\toutline?:Box; // inner boundary (surrounds molecule, names, etc.)\n\n\tisCollapsed?:boolean;\n\tcollapseBox?:Box;\n}\n\nconst PADDING = 0.25;\nconst VSPACE = 0.5;\nconst HSPACE = 1;\nconst COLLAPSE_SIZE = 0.3;\nconst COLLAPSE_GAP = 0.05;\n\nexport class ArrangeMixture\n{\n\tpublic norm:NormMixture = null; // optional: contents may be used for additional decoration\n\n\tpublic scale:number;\n\tpublic nameFontSize:number;\n\tpublic width = 0;\n\tpublic height = 0;\n\n\tpublic components:ArrangeMixtureComponent[] = [];\n\n\t// parameters to influence the drawing\n\tpublic limitStructW:number;\n\tpublic limitStructH:number;\n\tpublic minBoxSize:Size = null;\n\tpublic showCollapsors = false; // if true, boxes for [+]/[-] will be created for interactive use\n\tpublic collapsedBranches:number[][] = []; // any origin specified in this list will not display its children\n\tpublic packBranches:Size = null; // if defined, makes an effort to pack branches into the box size\n\tpublic hardwrapName:number; // name width guaranteed not longer than this\n\tpublic softwrapName:number; // name wrapping at selected characters kicks in after this width\n\tpublic includeIdentifiers = true; // if switched off, identifiers won't be included in text\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(public mixture:Mixture, public measure:ArrangeMeasurement, public policy:RenderPolicy)\n\t{\n\t\tthis.scale = policy.data.pointScale;\n\t\tthis.nameFontSize = 0.5 * this.scale;\n\t\tthis.limitStructW = this.limitStructH = this.scale * 10;\n\t\tthis.hardwrapName = 12 * this.scale;\n\t\tthis.softwrapName = 8 * this.scale;\n\t}\n\n\t// carries out the arrangement\n\tpublic arrange():void\n\t{\n\t\tthis.createComponents();\n\t\tthis.layoutSubComponents(0);\n\t\tthis.contractComponents();\n\n\t\t// normalize boundaries\n\t\tlet outline:Box = null;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tif (outline) outline = outline.union(comp.boundary); else outline = comp.boundary;\n\t\t}\n\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.x -= outline.x;\n\t\t\tcomp.boundary.y -= outline.y;\n\n\t\t\tif (comp.molLayout)\n\t\t\t{\n\t\t\t\tlet b1 = comp.boundary, b2 = comp.molBox;\n\t\t\t\tcomp.molLayout.squeezeInto(b1.x + b2.x, b1.y + b2.y, b2.w, b2.h);\n\t\t\t}\n\t\t}\n\t\tthis.width = outline.w;\n\t\tthis.height = outline.h;\n\t}\n\n\t// resize the whole thing\n\tpublic scaleComponents(modScale:number):void\n\t{\n\t\tif (modScale == 1) return;\n\n\t\tthis.scale *= modScale;\n\t\tthis.width *= modScale;\n\t\tthis.height *= modScale;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.scaleBy(modScale);\n\t\t\tcomp.outline.scaleBy(modScale);\n\t\t\tif (comp.molBox)\n\t\t\t{\n\t\t\t\tcomp.molBox.scaleBy(modScale);\n\t\t\t\tif (comp.molLayout)\n\t\t\t\t{\n\t\t\t\t\tlet mx = comp.boundary.x + comp.molBox.x, my = comp.boundary.y + comp.molBox.y;\n\t\t\t\t\tcomp.molLayout.squeezeInto(mx, my, comp.molBox.w, comp.molBox.h);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (comp.nameBox) comp.nameBox.scaleBy(modScale);\n\t\t\tif (comp.collapseBox) comp.collapseBox.scaleBy(modScale);\n\t\t\tcomp.fontSize *= modScale;\n\t\t}\n\t}\n\n\t// returns the index of the indicated origin vector, or -1 if not present\n\tpublic findComponent(origin:number[]):number\n\t{\n\t\tfor (let n = 0; n < this.components.length; n++) if (Vec.equals(this.components[n].origin, origin)) return n;\n\t\treturn -1;\n\t}\n\n\t// turn quantity info into a readable string\n\tpublic static formatQuantity(mixcomp:MixfileComponent):string\n\t{\n\t\tlet prec = (val:number):string =>\n\t\t{\n\t\t\tif (val == null) return '';\n\t\t\tif (val > 10000) return Math.round(val).toString();\n\t\t\tlet str = val.toPrecision(6);\n\t\t\tif (str.indexOf('e') >= 0 || str.indexOf('.') < 0) return str;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\t\t\telse if (str.endsWith('.')) {str = str.substring(0, str.length - 1); break;}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\treturn str;\n\t\t};\n\n\t\tif (mixcomp.ratio)\n\t\t{\n\t\t\tif (mixcomp.ratio.length == 2) return prec(mixcomp.ratio[0]) + '/' + prec(mixcomp.ratio[1]);\n\t\t\treturn null; // invalid ratio\n\t\t}\n\n\t\tif (mixcomp.quantity == null) return null;\n\n\t\tlet str = '';\n\t\tif (mixcomp.relation && mixcomp.relation != '=')\n\t\t{\n\t\t\tlet rel = mixcomp.relation;\n\t\t\tif (rel == '>=') rel = '\\u{2265}'; else if (rel == '<=') rel = '\\u{2264}';\n\t\t\tstr += rel /*+ ' '*/;\n\t\t}\n\t\tif (mixcomp.quantity instanceof Array)\n\t\t{\n\t\t\tif (mixcomp.quantity.length == 0) return;\n\t\t\tstr += prec(mixcomp.quantity[0]);\n\t\t\tif (mixcomp.quantity.length >= 2) str += ' - ' + prec(mixcomp.quantity[1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr += prec(mixcomp.quantity); // is presumed to be scalar\n\t\t\tif (mixcomp.error)\n\t\t\t{\n\t\t\t\t// TODO: match the significant figures more carefully\n\t\t\t\tstr += ' \\u{00B1} ' + prec(mixcomp.error);\n\t\t\t}\n\t\t}\n\n\t\tif (mixcomp.units)\n\t\t{\n\t\t\tif (!mixcomp.units.startsWith('%')) str += ' ';\n\t\t\tstr += mixcomp.units;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\t// if the component has a \"standardised\" quantity, format and return\n\tprivate formatNormQuantity(origin:number[]):string\n\t{\n\t\tif (!this.norm) return;\n\t\tlet note = this.norm.findNote(origin);\n\t\tif (!note || !note.concQuantity) return;\n\n\t\tlet comp:MixfileComponent =\n\t\t{\n\t\t\tquantity: note.concQuantity,\n\t\t\terror: note.concError,\n\t\t\tunits: note.concUnits,\n\t\t\trelation: note.concRelation,\n\t\t};\n\t\treturn ArrangeMixture.formatQuantity(comp);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// instantiate each component in the diagram (which includes pluses and arrows)\n\tprivate createComponents():void\n\t{\n\t\t// assemble the components into a flat hierarchy\n\t\tlet examineBranch = (origin:number[], mixcomp:MixfileComponent, idx:number):void =>\n\t\t{\n\t\t\tlet comp:ArrangeMixtureComponent = {origin: origin, content: mixcomp, parentIdx: idx};\n\t\t\tlet parentIdx = this.components.push(comp) - 1;\n\n\t\t\t// see if it's been indicated as collapsed\n\t\t\tcomp.isCollapsed = false;\n\t\t\tfor (let origin of this.collapsedBranches) if (Vec.equals(origin, comp.origin)) comp.isCollapsed = true;\n\n\t\t\tif (mixcomp.contents && !comp.isCollapsed) for (let n = 0; n < mixcomp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet subOrigin = Vec.append(origin, n);\n\t\t\t\texamineBranch(subOrigin, mixcomp.contents[n], parentIdx);\n\t\t\t}\n\t\t};\n\t\texamineBranch([], this.mixture.mixfile, -1);\n\n\t\tlet padding = PADDING * this.scale;\n\n\t\t// do the sizing for each component\n\t\tfor (let [idx, comp] of this.components.entries())\n\t\t{\n\t\t\tlet mixcomp = comp.content;\n\n\t\t\t// handle molecule, if any\n\t\t\tif (mixcomp.molfile) comp.mol = MoleculeStream.readUnknown(mixcomp.molfile);\n\t\t\tif (comp.mol)\n\t\t\t{\n\t\t\t\tcomp.molLayout = new ArrangeMolecule(comp.mol, this.measure, this.policy);\n\t\t\t\tcomp.molLayout.arrange();\n\t\t\t\tcomp.molLayout.squeezeInto(0, 0, this.limitStructW, this.limitStructH);\n\t\t\t\tlet bounds = comp.molLayout.determineBoundary();\n\t\t\t\tcomp.molBox = new Box(padding, padding, Math.ceil(bounds[2] - bounds[0]), Math.ceil(bounds[3] - bounds[1]));\n\t\t\t}\n\t\t\telse comp.molBox = Box.zero();\n\n\t\t\t// handle name, or other content needing representation\n\t\t\tcomp.nameLines = [];\n\t\t\tif (mixcomp.name) this.wrapSplitName(comp.nameLines, mixcomp.name, 0x000000, ArrangeMixtureLineSource.Name);\n\n\t\t\t// (... synonyms, and linewrapping ...)\n\t\t\tlet qline = ArrangeMixture.formatQuantity(mixcomp);\n\t\t\tif (qline) comp.nameLines.push({text: qline, col: 0x000000, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tqline = this.formatNormQuantity(comp.origin);\n\t\t\tif (qline) comp.nameLines.push({text: `(${qline})`, col: 0x808080, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tif (this.includeIdentifiers && mixcomp.identifiers) for (let key in mixcomp.identifiers)\n\t\t\t{\n\t\t\t\tlet line = key + ' ';\n\t\t\t\tlet val = mixcomp.identifiers[key];\n\t\t\t\tif (val instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let n = 0; n < val.length; n++) line += (n == 0 ? '' : ', ') + val[n];\n\t\t\t\t}\n\t\t\t\telse line += val;\n\t\t\t\tcomp.nameLines.push({text: this.truncateEllipsis(line), col: 0x42007E, source: ArrangeMixtureLineSource.Identifier});\n\t\t\t}\n\t\t\tif (mixcomp.metadata) for (let meta of mixcomp.metadata)\n\t\t\t{\n\t\t\t\tlet metaString = (m:string | number):string =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof m == 'number') return formatDouble(m, 4);\n\t\t\t\t\tif (!OntologyTree.main) return m;\n\t\t\t\t\tlet branch = OntologyTree.main.getBranch(m);\n\t\t\t\t\tif (Vec.notBlank(branch)) return branch[0].label;\n\t\t\t\t\treturn m;\n\t\t\t\t};\n\t\t\t\tlet bits:string[] = [];\n\t\t\t\tif (Array.isArray(meta)) bits = meta.map((m) => metaString(m)); else bits = [metaString(meta as string | number)];\n\t\t\t\tcomp.nameLines.push({text: bits.join(' '), col: 0x002B88, source: ArrangeMixtureLineSource.Meta});\n\t\t\t}\n\n\t\t\tcomp.nameBox = new Box(padding, padding);\n\t\t\tcomp.fontSize = this.nameFontSize;\n\t\t\tfor (let n = 0; n < comp.nameLines.length; n++)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(comp.nameLines[n].text, comp.fontSize);\n\t\t\t\tcomp.nameBox.w = Math.max(comp.nameBox.w, wad[0]);\n\t\t\t\tcomp.nameBox.h += wad[1] + (n > 0 ? wad[2] * 2 : 0);\n\t\t\t}\n\n\t\t\tcomp.outline = Box.zero();\n\t\t\tcomp.outline.w = Math.max(comp.molBox.w, comp.nameBox.w) + 2 * padding;\n\t\t\tcomp.outline.h = comp.molBox.h + comp.nameBox.h + 2 * padding;\n\t\t\tif (comp.molBox.notEmpty() && comp.nameBox.notEmpty())\n\t\t\t{\n\t\t\t\tcomp.outline.h += padding;\n\t\t\t\tcomp.nameBox.y += comp.molBox.h + padding;\n\t\t\t\tcomp.molBox.w = comp.nameBox.w = Math.max(comp.molBox.w, comp.nameBox.w);\n\t\t\t}\n\n\t\t\tif (this.minBoxSize)\n\t\t\t{\n\t\t\t\tlet minsz = this.minBoxSize;\n\t\t\t\tlet dw = minsz.w - comp.outline.w, dh = minsz.h - comp.outline.h;\n\t\t\t\tif (dw > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.w += dw;\n\t\t\t\t\tcomp.molBox.w += dw;\n\t\t\t\t}\n\t\t\t\tif (dh > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.h += dh;\n\t\t\t\t\tcomp.molBox.h += dh;\n\t\t\t\t\tcomp.nameBox.y += dh;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomp.boundary = comp.outline.clone();\n\n\t\t\tif ((this.showCollapsors || comp.isCollapsed) && Vec.notBlank(comp.content.contents))\n\t\t\t{\n\t\t\t\tlet gap = COLLAPSE_GAP * this.scale, wh = COLLAPSE_SIZE * this.scale;\n\t\t\t\tcomp.collapseBox = new Box(comp.boundary.maxX() + gap, comp.boundary.midY() - 0.5 * wh, wh, wh);\n\t\t\t\tcomp.boundary.w += gap + wh;\n\t\t\t}\n\t\t}\n\t}\n\n\t// arranges all of the subcomponents for a given index, positioning them relative to the current position; returns the indices of\n\t// the entire branch, for subsequent touchup\n\tprivate layoutSubComponents(idx:number):number[]\n\t{\n\t\tlet wholeBranch:number[] = [idx];\n\t\tlet branchBlock:number[][] = [];\n\t\tlet branchBox:Box[] = [];\n\n\t\tlet totalWidth = 0, totalHeight = 0;\n\n\t\tfor (let n = idx + 1; n < this.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.components[n];\n\t\t\tif (comp.parentIdx != idx) continue;\n\n\t\t\tlet branch = this.layoutSubComponents(n);\n\t\t\tif (branch.length == 0) continue;\n\n\t\t\tlet box:Box = null;\n\t\t\tfor (let i of branch)\n\t\t\t{\n\t\t\t\twholeBranch.push(i);\n\t\t\t\tlet bound = this.components[i].boundary;\n\t\t\t\tif (box) box = box.union(bound); else box = bound;\n\t\t\t}\n\n\t\t\tbranchBlock.push(branch);\n\t\t\tbranchBox.push(box);\n\n\t\t\ttotalWidth = Math.max(totalWidth, box.w);\n\t\t\ttotalHeight += box.h;\n\t\t}\n\t\tif (branchBlock.length == 0) return wholeBranch;\n\n\t\tlet hspace = HSPACE * this.scale, vspace = VSPACE * this.scale;\n\t\ttotalHeight += vspace * (branchBlock.length - 1);\n\n\t\tlet cbox = this.components[idx].boundary;\n\t\tlet x = cbox.maxX() + hspace;\n\n\t\t// special case: may try to pack the boxes into a smaller area rather than vertically on top of each other\n\t\tif (this.packBranches && branchBlock.length > 2 && totalHeight > this.packBranches.h)\n\t\t{\n\t\t\tlet packSize = this.packBranches.clone();\n\t\t\tfor (let box of branchBox) packSize.h = Math.max(packSize.h, box.h); // if a sub-box is bigger than overall, no need to limit it further\n\n\t\t\tlet sq = new SquarePacking(packSize, branchBox, /*hspace*/ vspace, vspace);\n\t\t\tif (sq.pack())\n\t\t\t{\n\t\t\t\tlet y = cbox.midY() - 0.5 * sq.outline.h;\n\t\t\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet box = sq.layout[n];\n\t\t\t\t\tlet dx = x - branchBox[n].x + box.x, dy = y - branchBox[n].y + box.y;\n\t\t\t\t\tfor (let i of branchBlock[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn wholeBranch;\n\t\t\t}\n\t\t}\n\n\t\t// !! note: not guaranteed that x is high enough to not interfere with other boxes; will need a post-check of some kind, maybe here,\n\t\t//    maybe further down the line\n\n\t\tlet y = cbox.midY() - 0.5 * totalHeight;\n\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t{\n\t\t\tlet dx = x - branchBox[n].x, dy = y - branchBox[n].y;\n\t\t\tfor (let i of branchBlock[n])\n\t\t\t{\n\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t}\n\t\t\ty += branchBox[n].h + vspace;\n\t\t}\n\n\t\treturn wholeBranch;\n\t}\n\n\t// component layout is done, but may be able to \"reel in\" some of the branches to make it smaller\n\tprivate contractComponents():void\n\t{\n\t\tlet allChildren:number[][] = [];\n\t\tfor (let n = 0; n < this.components.length; n++) \n\t\t{\n\t\t\tallChildren.push([]);\n\t\t\tfor (let idx = this.components[n].parentIdx; idx >= 0; idx = this.components[idx].parentIdx) allChildren[idx].push(n);\n\t\t}\n\n\t\tlet hspace = HSPACE * this.scale, padding = PADDING * this.scale;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tfor (let n = 1; n < allChildren.length; n++)\n\t\t\t{\n\t\t\t\tlet pidx = this.components[n].parentIdx;\n\t\t\t\tlet boundX = this.components[pidx].boundary.maxX() + hspace;\n\t\t\t\tlet dx = this.components[n].boundary.minX() - boundX; // how far to move to the left\n\t\t\t\tif (dx < 1) continue; // no room to contract\n\n\t\t\t\tlet idxInside = [n, ...allChildren[n]];\n\t\t\t\tlet idxOutside = Vec.identity0(allChildren.length).filter((idx) => !idxInside.includes(idx));\n\n\t\t\t\tfor (let i of idxInside)\n\t\t\t\t{\n\t\t\t\t\tlet box1 = this.components[i].boundary.withGrow(padding, padding);\n\t\t\t\t\tfor (let j of idxOutside)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet box2 = this.components[j].boundary;\n\t\t\t\t\t\tif (box2.minX() > box1.maxX()) continue;\n\t\t\t\t\t\tif (box1.minY() > box2.maxY() || box1.maxY() < box2.minY()) continue;\n\n\t\t\t\t\t\tdx = Math.min(dx, box1.minX() - box2.maxX());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dx > 1)\n\t\t\t\t{\n\t\t\t\t\tfor (let n of idxInside) this.components[n].boundary.x -= dx;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// if the given string is longer than the soft/hard limit, looks to break it up into smaller pieces; each of them is\n\t// appended to the list parameter\n\tprivate wrapSplitName(list:ArrangeMixtureLine[], text:string, col:number, source:ArrangeMixtureLineSource):void\n\t{\n\t\tif (!text) return;\n\t\tlet xpos = FontData.measureWidths(text, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.softwrapName)\n\t\t{\n\t\t\tlist.push({text, col, source});\n\t\t\treturn;\n\t\t}\n\n\t\tlet p = 0;\n\t\tfor (; xpos[p] < this.softwrapName; p++) {}\n\t\tfor (; xpos[p] < this.hardwrapName; p++)\n\t\t{\n\t\t\tlet ch = text.charAt(p);\n\t\t\tif (' ,;-/'.includes(ch))\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlist.push({text: text.substring(0, p).trim(), col, source});\n\t\tthis.wrapSplitName(list, text.substring(p).trim(), col, source);\n\t}\n\n\t// if the line is longer than the hard wrap limit, just truncate with ellipsis\n\tprivate truncateEllipsis(txt:string):string\n\t{\n\t\tlet xpos = FontData.measureWidths(txt, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.hardwrapName) return txt;\n\t\tlet ellipsis = '...', ellw = FontData.measureText(ellipsis, this.nameFontSize)[0];\n\t\tlet keep = 1;\n\t\tfor (; keep < txt.length; keep++) if (xpos[keep] + ellw > this.hardwrapName) break;\n\t\treturn txt.substring(0, keep) + ellipsis;\n\t}\n}\n\n","import { Box } from '../util/Geom';\nimport { colourAlpha, colourCanvas, colourCode, DEGRAD, newElement, pixelDensity } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nexport var TextAlign;\n(function (TextAlign) {\n    TextAlign[TextAlign[\"Centre\"] = 0] = \"Centre\";\n    TextAlign[TextAlign[\"Left\"] = 1] = \"Left\";\n    TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\n    TextAlign[TextAlign[\"Baseline\"] = 0] = \"Baseline\";\n    TextAlign[TextAlign[\"Middle\"] = 4] = \"Middle\";\n    TextAlign[TextAlign[\"Top\"] = 8] = \"Top\";\n    TextAlign[TextAlign[\"Bottom\"] = 16] = \"Bottom\";\n})(TextAlign || (TextAlign = {}));\nvar PrimClass;\n(function (PrimClass) {\n    PrimClass[PrimClass[\"Line\"] = 1] = \"Line\";\n    PrimClass[PrimClass[\"Rect\"] = 2] = \"Rect\";\n    PrimClass[PrimClass[\"Oval\"] = 3] = \"Oval\";\n    PrimClass[PrimClass[\"Path\"] = 4] = \"Path\";\n    PrimClass[PrimClass[\"Text\"] = 5] = \"Text\";\n    PrimClass[PrimClass[\"TextNative\"] = 6] = \"TextNative\";\n})(PrimClass || (PrimClass = {}));\nclass SpoolSVG {\n    constructor(prettyPrint) {\n        this.prettyPrint = prettyPrint;\n        this.lines = [];\n        this.depth = 0;\n    }\n    spool(str) { if ((str === null || str === void 0 ? void 0 : str.length) > 0)\n        this.lines.push(str); }\n    start(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n    }\n    stop(str) {\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    whole(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    attr(key, val) {\n        var _a;\n        if (typeof val == 'number') {\n            val = val.toFixed(4);\n            let match = (_a = /^(.*\\.\\d*?[1-9]+)0+$/.exec(val)) !== null && _a !== void 0 ? _a : /^(.*)\\.0+$/.exec(val);\n            if (match)\n                val = match[1];\n        }\n        this.spool(` ${key}=\"${val}\"`);\n    }\n    inc() { this.depth++; }\n    dec() { this.depth--; }\n    toString() { return this.lines.join(''); }\n}\nclass MetaVector {\n    constructor(vec) {\n        this.types = [];\n        this.prims = [];\n        this.width = 0;\n        this.height = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.scale = 1;\n        this.density = 1;\n        this.charMissing = false;\n        this.lowX = null;\n        this.lowY = null;\n        this.highX = null;\n        this.highY = null;\n        const font = FontData.main;\n        this.charMask = Vec.booleanArray(false, font.UNICODE.length);\n        if (vec != null) {\n            if (vec.size != null) {\n                this.width = vec.size[0];\n                this.height = vec.size[1];\n            }\n            if (vec.types != null)\n                this.types = vec.types;\n            if (vec.prims != null)\n                this.prims = vec.prims;\n            for (let p of this.prims)\n                if (p.primClass == PrimClass.Text) {\n                    let { txt } = p;\n                    for (let n = 0; n < txt.length; n++) {\n                        let i = font.getIndex(txt.charAt(n));\n                        if (i >= 0)\n                            this.charMask[i] = true;\n                        else\n                            this.charMissing = true;\n                    }\n                }\n        }\n    }\n    drawLine(x1, y1, x2, y2, colour, thickness) {\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Line, thickness, colour });\n        const bump = 0.5 * thickness;\n        this.updateBounds(Math.min(x1, x2) - bump, Math.min(y1, y2) - bump);\n        this.updateBounds(Math.max(x1, x2) + bump, Math.max(y1, y2) + bump);\n        this.prims.push({ primClass: PrimClass.Line, typeidx, x1, y1, x2, y2 });\n    }\n    drawRect(x, y, w, h, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Rect, edgeCol, fillCol, thickness });\n        const bump = 0.5 * thickness;\n        this.updateBounds(x - bump, y - bump);\n        this.updateBounds(x + w + bump, y + h + bump);\n        this.prims.push({ primClass: PrimClass.Rect, typeidx, x, y, w, h });\n    }\n    drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        const bump = 0.5 * thickness;\n        this.updateBounds(cx - rw - bump, cy - rh - bump);\n        this.updateBounds(cx + rw + bump, cy + rh + bump);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Oval, edgeCol, fillCol, thickness });\n        this.prims.push({ primClass: PrimClass.Oval, typeidx, cx, cy, rw, rh });\n    }\n    drawPath(xpoints, ypoints, ctrlFlags, isClosed, edgeCol, thickness, fillCol, hardEdge) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        if (hardEdge == null)\n            hardEdge = false;\n        const bump = 0.5 * thickness;\n        for (let n = 0; n < xpoints.length; n++) {\n            this.updateBounds(xpoints[n] - bump, ypoints[n] - bump);\n            if (bump != 0)\n                this.updateBounds(xpoints[n] + bump, ypoints[n] + bump);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Path, edgeCol, fillCol, thickness, hardEdge });\n        this.prims.push({ primClass: PrimClass.Path, typeidx, count: xpoints.length,\n            x: Vec.duplicate(xpoints), y: Vec.duplicate(ypoints), ctrl: ctrlFlags && [...ctrlFlags], closed: isClosed });\n    }\n    drawPoly(xpoints, ypoints, edgeCol, thickness, fillCol, hardEdge) {\n        this.drawPath(xpoints, ypoints, null, true, edgeCol, thickness, fillCol, hardEdge);\n    }\n    drawText(x, y, txt, size, colour, align, direction) {\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        if (direction == null)\n            direction = 0;\n        let cosTheta = 1, sinTheta = 0;\n        if (direction != 0)\n            [cosTheta, sinTheta] = [Math.cos(direction * DEGRAD), Math.sin(direction * DEGRAD)];\n        const font = FontData.main;\n        for (let n = 0; n < txt.length; n++) {\n            let i = font.getIndex(txt.charAt(n));\n            if (i >= 0)\n                this.charMask[i] = true;\n            else\n                this.charMissing = true;\n        }\n        let metrics = font.measureText(txt, size);\n        let bx = 0, by = 0;\n        let dx = 0;\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            dx = -metrics[0];\n        else\n            dx = -0.5 * metrics[0];\n        if (dx != 0) {\n            bx += dx * cosTheta;\n            by += dx * sinTheta;\n        }\n        let dy = 0;\n        if ((align & TextAlign.Middle) != 0)\n            dy = 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            dy = metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            dy = -metrics[2];\n        if (dy != 0) {\n            bx -= dy * sinTheta;\n            by += dy * cosTheta;\n        }\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0;\n        let tx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            if (i >= 0) {\n                let outlineX = font.getOutlineX(i), outlineY = font.getOutlineY(i);\n                x1 = Math.min(x1, tx + Vec.min(outlineX));\n                x2 = Math.max(x2, tx + Vec.max(outlineX));\n                y1 = Math.min(y1, -Vec.max(outlineY));\n                y2 = Math.max(y2, -Vec.min(outlineY));\n                tx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    tx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                tx += font.MISSING_HORZ;\n        }\n        const mscale = size * font.INV_UNITS_PER_EM;\n        if (direction == 0) {\n            this.updateBounds(x + bx + x1 * mscale, y + by + y1 * mscale);\n            this.updateBounds(x + bx + x2 * mscale, y + by + y2 * mscale);\n        }\n        else {\n            let rx1 = x1 * mscale, ry1 = y1 * mscale;\n            let rx2 = x2 * mscale, ry2 = y2 * mscale;\n            this.updateBounds(x + bx + rx1 * cosTheta - ry1 * sinTheta, y + by + rx1 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry1 * sinTheta, y + by + rx2 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry2 * sinTheta, y + by + rx2 * sinTheta + ry2 * cosTheta);\n            this.updateBounds(x + bx + rx1 * cosTheta - ry2 * sinTheta, y + by + rx1 * sinTheta + ry2 * cosTheta);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Text, size, colour });\n        this.prims.push({ primClass: PrimClass.Text, typeidx, x: x + bx, y: y + by, txt, direction });\n    }\n    drawTextNative(x, y, txt, fontFamily, fontSize, colour, align, opt) {\n        if (!opt)\n            opt = {};\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        const font = FontData.main;\n        let metrics = font.measureTextNative(txt, fontFamily, fontSize, opt);\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            x -= metrics[0];\n        else\n            x -= 0.5 * metrics[0];\n        if ((align & TextAlign.Middle) != 0)\n            y += 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            y += metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            y -= metrics[2];\n        this.updateBounds(x, y - metrics[1]);\n        this.updateBounds(x + metrics[0], y + metrics[2]);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.TextNative, family: fontFamily, size: fontSize, colour, opt });\n        this.prims.push({ primClass: PrimClass.TextNative, typeidx, x, y, txt });\n    }\n    boundLowX() { return this.lowX; }\n    boundLowY() { return this.lowY; }\n    boundHighX() { return this.highX; }\n    boundHighY() { return this.highY; }\n    getBounds() { return new Box(this.lowX, this.lowY, this.highX - this.lowX, this.highY - this.lowY); }\n    measure() {\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    normalise() {\n        if (this.lowX != 0 || this.lowY != 0)\n            this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    setSize(width, height) { this.width = width; this.height = height; }\n    transformIntoBox(box) {\n        this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        let nw = Math.ceil(this.highX - this.lowX), nh = Math.ceil(this.highY - this.lowY);\n        let scale = 1;\n        if (nw > box.w) {\n            let mod = box.w / nw;\n            nw = box.w;\n            nh *= mod;\n            scale *= mod;\n        }\n        if (nh > box.h) {\n            let mod = box.h / nh;\n            nh = box.h;\n            nw *= mod;\n            scale *= mod;\n        }\n        let ox = 0.5 * (box.w - nw), oy = 0.5 * (box.h - nh);\n        this.transformPrimitives(box.x + ox, box.y + oy, scale, scale);\n    }\n    scaleExtent(maxWidth, maxHeight) {\n        let w = this.highX - this.lowX, h = this.highY - this.lowY;\n        if (w <= maxWidth && h <= maxHeight)\n            return;\n        let scale = Math.min(maxWidth / w, maxHeight / h);\n        this.transformPrimitives(0, 0, scale, scale);\n    }\n    transformPrimitives(ox, oy, sw, sh) {\n        if (ox == 0 && oy == 0 && sw == 1 && sh == 1)\n            return;\n        for (let a of this.prims) {\n            const type = a.primClass;\n            if (type == PrimClass.Line) {\n                let line = a;\n                line.x1 = ox + line.x1 * sw;\n                line.y1 = oy + line.y1 * sh;\n                line.x2 = ox + line.x2 * sw;\n                line.y2 = oy + line.y2 * sh;\n            }\n            else if (type == PrimClass.Rect) {\n                let rect = a;\n                rect.x = ox + rect.x * sw;\n                rect.y = oy + rect.y * sh;\n                rect.w = rect.w * sw;\n                rect.h = rect.h * sh;\n            }\n            else if (type == PrimClass.Oval) {\n                let oval = a;\n                oval.cx = ox + oval.cx * sw;\n                oval.cy = oy + oval.cy * sh;\n                oval.rw *= sw;\n                oval.rh *= sh;\n            }\n            else if (type == PrimClass.Path) {\n                let path = a;\n                let sz = path.count, px = path.x, py = path.y;\n                for (let n = 0; n < sz; n++) {\n                    px[n] = ox + px[n] * sw;\n                    py[n] = oy + py[n] * sh;\n                }\n            }\n            else if (type == PrimClass.Text || type == PrimClass.TextNative) {\n                let text = a;\n                text.x = ox + text.x * sw;\n                text.y = oy + text.y * sh;\n            }\n        }\n        let swsh = 0.5 * (sw + sh);\n        if (swsh != 1)\n            for (let t of this.types) {\n                const type = t.primClass;\n                if (type == PrimClass.Line)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Rect)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Oval)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Path)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Text)\n                    t.size *= swsh;\n                else if (type == PrimClass.TextNative)\n                    t.size *= swsh;\n            }\n        this.lowX = ox + this.lowX * sw;\n        this.lowY = oy + this.lowY * sh;\n        this.highX = ox + this.highX * sw;\n        this.highY = oy + this.highY * sh;\n    }\n    renderInto(parent) {\n        let canvas = newElement(parent, 'canvas', { 'width': this.width, 'height': this.height });\n        this.renderCanvas(canvas);\n        return canvas;\n    }\n    renderCanvas(canvas, clearFirst) {\n        let ctx = canvas.getContext('2d');\n        if (clearFirst)\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        let w = this.width, h = this.height;\n        this.density = pixelDensity();\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        canvas.width = w * this.density;\n        canvas.height = h * this.density;\n        this.renderContext(ctx);\n    }\n    renderContext(ctx) {\n        ctx.save();\n        ctx.scale(this.density, this.density);\n        this.typeObj = [];\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length; n++) {\n            let p = this.prims[n];\n            if (p.primClass == PrimClass.Line)\n                this.renderLine(ctx, p);\n            else if (p.primClass == PrimClass.Rect)\n                this.renderRect(ctx, p);\n            else if (p.primClass == PrimClass.Oval)\n                this.renderOval(ctx, p);\n            else if (p.primClass == PrimClass.Path)\n                this.renderPath(ctx, p);\n            else if (p.primClass == PrimClass.Text)\n                this.renderText(ctx, p);\n            else if (p.primClass == PrimClass.TextNative)\n                this.renderTextNative(ctx, p);\n        }\n        ctx.restore();\n    }\n    createSVG(prettyPrint = false, withXlink = false) {\n        let svg = new SpoolSVG(prettyPrint);\n        svg.start('<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        if (withXlink)\n            svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.attr('width', this.width);\n        svg.attr('height', this.height);\n        svg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n        svg.stop('>');\n        svg.inc();\n        this.renderSVG(svg, withXlink);\n        svg.dec();\n        svg.whole('</svg>');\n        return svg.toString();\n    }\n    renderSVG(svg, withXlink = false) {\n        this.typeObj = [];\n        const font = FontData.main;\n        svg.whole('<defs>');\n        svg.inc();\n        if (this.charMissing) {\n            svg.start('<path');\n            svg.attr('id', 'missing');\n            svg.attr('d', font.MISSING_DATA);\n            svg.attr('edge', 'none');\n            svg.stop('/>');\n        }\n        for (let n = 0; n < font.UNICODE.length; n++)\n            if (this.charMask[n]) {\n                svg.start('<path');\n                svg.attr('id', 'char' + n);\n                svg.attr('d', font.GLYPH_DATA[n]);\n                svg.attr('edge', 'none');\n                svg.stop('/>');\n            }\n        svg.dec();\n        svg.whole('</defs>');\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length;) {\n            let p = this.prims[n], num = 1;\n            if (p.primClass != PrimClass.Path && p.primClass != PrimClass.Text && p.primClass != PrimClass.TextNative) {\n                for (; n + num < this.prims.length; num++)\n                    if (this.prims[n + num].primClass != p.primClass || this.prims[n + num].typeidx != p.typeidx)\n                        break;\n            }\n            if (p.primClass == PrimClass.Line) {\n                if (num == 1)\n                    this.svgLine1(svg, p);\n                else\n                    this.svgLineN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                if (num == 1)\n                    this.svgRect1(svg, p);\n                else\n                    this.svgRectN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                if (num == 1)\n                    this.svgOval1(svg, p);\n                else\n                    this.svgOvalN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Path)\n                this.svgPath(svg, p);\n            else if (p.primClass == PrimClass.Text)\n                this.svgText(svg, p, withXlink);\n            else if (p.primClass == PrimClass.TextNative)\n                this.svgTextNative(svg, p);\n            n += num;\n        }\n    }\n    spool(into) {\n        for (let p of this.prims) {\n            if (p.primClass == PrimClass.Line) {\n                let { typeidx, x1, y1, x2, y2 } = p;\n                let { thickness, colour } = this.types[typeidx];\n                into.drawLine(x1, y1, x2, y2, colour, thickness);\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                let { typeidx, x, y, w, h } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawRect(x, y, w, h, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                let { typeidx, cx, cy, rw, rh } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Path) {\n                let { typeidx, count, x, y, ctrl, closed } = p;\n                let { edgeCol, fillCol, thickness, hardEdge } = this.types[typeidx];\n                into.drawPath(x, y, ctrl, closed, edgeCol, thickness, fillCol, hardEdge);\n            }\n            else if (p.primClass == PrimClass.Text) {\n                let { typeidx, x, y, txt, direction } = p;\n                let { size, colour } = this.types[typeidx];\n                into.drawText(x, y, txt, size, colour, null, direction);\n            }\n            else if (p.primClass == PrimClass.TextNative) {\n                let { typeidx, x, y, txt } = p;\n                let { family, size, colour } = this.types[typeidx];\n                into.drawTextNative(x, y, txt, family, size, colour);\n            }\n        }\n    }\n    setupTypeLine(t) {\n        let thickness = t.thickness * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, thickness, colour };\n    }\n    setupTypeRect(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypeOval(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypePath(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        let hardEdge = t.hardEdge;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness, hardEdge };\n    }\n    setupTypeText(t) {\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, colour, size };\n    }\n    setupTypeTextNative(t) {\n        let family = t.family;\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        let opt = t.opt;\n        return { primClass: t.primClass, colour, family, size, opt };\n    }\n    renderLine(ctx, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != null) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.strokeStyle = colourCanvas(colour);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'round';\n            ctx.stroke();\n        }\n    }\n    renderRect(ctx, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fillRect(x, y, w, h);\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'square';\n            ctx.strokeRect(x, y, w, h);\n        }\n    }\n    renderOval(ctx, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.fill();\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.stroke();\n        }\n    }\n    renderPath(ctx, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        for (let layer = 1; layer <= 2; layer++) {\n            if (layer == 1 && fillCol == MetaVector.NOCOLOUR)\n                continue;\n            if (layer == 2 && edgeCol == MetaVector.NOCOLOUR)\n                continue;\n            ctx.beginPath();\n            ctx.moveTo(x[0], y[0]);\n            for (let i = 1; i < count; i++) {\n                if (!ctrl || !ctrl[i]) {\n                    ctx.lineTo(x[i], y[i]);\n                }\n                else if (i < count - 1 && !ctrl[i + 1]) {\n                    ctx.quadraticCurveTo(x[i], y[i], x[i + 1], y[i + 1]);\n                    i++;\n                }\n                else if (i < count - 1 && !ctrl[i + 2]) {\n                    ctx.bezierCurveTo(x[i], y[i], x[i + 1], y[i + 1], x[i + 2], y[i + 2]);\n                    i += 2;\n                }\n            }\n            if (closed)\n                ctx.closePath();\n            if (layer == 1) {\n                ctx.fillStyle = colourCanvas(fillCol);\n                ctx.fill();\n            }\n            else {\n                ctx.strokeStyle = colourCanvas(edgeCol);\n                ctx.lineWidth = thickness;\n                ctx.lineCap = hardEdge ? 'square' : 'round';\n                ctx.lineJoin = hardEdge ? 'miter' : 'round';\n                ctx.stroke();\n            }\n        }\n    }\n    renderText(ctx, text) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            let path = null;\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                path = font.getMissingPath();\n            }\n            else\n                path = font.getGlyphPath(i);\n            if (path) {\n                ctx.save();\n                let theta = direction != 0 ? direction * DEGRAD : 0;\n                if (theta == 0)\n                    ctx.translate(x + dx * scale, y);\n                else\n                    ctx.translate(x + Math.cos(theta) * dx * scale, y + Math.sin(theta) * dx * scale);\n                ctx.scale(scale, -scale);\n                if (theta != 0)\n                    ctx.rotate(-theta);\n                ctx.fillStyle = fill;\n                ctx.fill(path);\n                ctx.restore();\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n    }\n    renderTextNative(ctx, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        ctx.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        ctx.font = pfx + (size * this.scale) + 'px ' + family;\n        ctx.fillStyle = fill;\n        ctx.fillText(txt, x, y);\n        ctx.restore();\n    }\n    svgLine1(svg, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != MetaVector.NOCOLOUR) {\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            this.defineSVGStroke(svg, colour);\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'round');\n            svg.stop('/>');\n        }\n    }\n    svgLineN(svg, lines) {\n        let { colour, thickness } = this.typeObj[lines[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, colour);\n        svg.attr('stroke-width', thickness);\n        svg.attr('stroke-linecap', 'round');\n        svg.stop('>');\n        svg.inc();\n        for (let line of lines) {\n            let { x1, y1, x2, y2 } = line;\n            x1 = this.offsetX + this.scale * x1;\n            y1 = this.offsetY + this.scale * y1;\n            x2 = this.offsetX + this.scale * x2;\n            y2 = this.offsetY + this.scale * y2;\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgRect1(svg, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        svg.start('<rect');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('width', w);\n        svg.attr('height', h);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgRectN(svg, rects) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[rects[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let rect of rects) {\n            let { x, y, w, h } = rect;\n            x = this.offsetX + this.scale * x;\n            y = this.offsetY + this.scale * y;\n            w *= this.scale;\n            h *= this.scale;\n            svg.start('<rect');\n            svg.attr('x', x);\n            svg.attr('y', y);\n            svg.attr('width', w);\n            svg.attr('height', h);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgOval1(svg, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        svg.start('<ellipse');\n        svg.attr('cx', cx);\n        svg.attr('cy', cy);\n        svg.attr('rx', rw);\n        svg.attr('ry', rh);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgOvalN(svg, ovals) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[ovals[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let oval of ovals) {\n            let { cx, cy, rw, rh } = oval;\n            cx = this.offsetX + this.scale * cx;\n            cy = this.offsetY + this.scale * cy;\n            rw *= this.scale;\n            rh *= this.scale;\n            svg.start('<ellipse');\n            svg.attr('cx', cx);\n            svg.attr('cy', cy);\n            svg.attr('rx', rw);\n            svg.attr('ry', rh);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgPath(svg, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        let shape = 'M ' + x[0] + ' ' + y[0];\n        let n = 1;\n        while (n < count) {\n            if (!ctrl || !ctrl[n]) {\n                shape += ' L ' + x[n] + ' ' + y[n];\n                n++;\n            }\n            else if (ctrl[n] && n < count - 1 && !ctrl[n + 1]) {\n                shape += ' Q ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1];\n                n += 2;\n            }\n            else if (ctrl[n] && n < count - 2 && ctrl[n + 1] && !ctrl[n + 2]) {\n                shape += ' C ' + x[n] + ' ' + y[n] + ' ' + x[n + 1] + ' ' + y[n + 1] + ' ' + x[n + 2] + ' ' + y[n + 2];\n                n += 3;\n            }\n            else\n                n++;\n        }\n        if (closed)\n            shape += ' Z';\n        svg.start('<path');\n        svg.attr('d', shape);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linejoin', hardEdge ? 'miter' : 'round');\n            svg.attr('stroke-linecap', hardEdge ? 'square' : 'round');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgText(svg, text, withXlink = true) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        if (direction != 0) {\n            svg.start('<g');\n            svg.attr('transform', `rotate(${direction},${x},${y})`);\n            svg.stop('>');\n            svg.inc();\n        }\n        svg.start('<g');\n        svg.attr('transform', 'translate(' + x + ',' + y + ')');\n        this.defineSVGFill(svg, colour);\n        svg.stop('>');\n        svg.inc();\n        svg.start('<g');\n        svg.attr('transform', 'scale(' + scale + ',' + (-scale) + ')');\n        svg.stop('>');\n        svg.inc();\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            svg.start('<use');\n            let ref = i < 0 ? '#missing' : '#char' + i;\n            if (withXlink)\n                svg.attr('xlink:href', ref);\n            else\n                svg.attr('href', ref);\n            svg.attr('x', dx);\n            svg.stop('/>');\n            if (i >= 0) {\n                dx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    dx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                dx += font.MISSING_HORZ;\n        }\n        svg.dec();\n        svg.whole('</g>');\n        svg.dec();\n        svg.whole('</g>');\n        if (direction != 0) {\n            svg.dec();\n            svg.whole('</g>');\n        }\n    }\n    svgTextNative(svg, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let fill = colourCanvas(colour);\n        let style = `fill: ${fill}; font-family: ${family}; font-size: ${size * this.scale};`;\n        if (opt.bold)\n            style += ' font-weight: bold;';\n        if (opt.italic)\n            style += ' font-style: italic;';\n        const escapeXML = (str) => {\n            return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n        };\n        svg.start('<text');\n        svg.attr('xml:space', 'preserve');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('style', style);\n        svg.stop('>' + escapeXML(txt) + '</text>');\n    }\n    defineSVGStroke(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('stroke-opacity', '0');\n            return;\n        }\n        svg.attr('stroke', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('stroke-opacity', alpha);\n    }\n    defineSVGFill(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('fill-opacity', '0');\n            return;\n        }\n        svg.attr('fill', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('fill-opacity', alpha);\n    }\n    findOrCreateType(typeDef) {\n        for (let n = 0; n < this.types.length; n++) {\n            if (this.types[n].primClass != typeDef.primClass)\n                continue;\n            let keys = Object.keys(typeDef);\n            let match = keys.every((k) => typeDef[k] == this.types[n][k]);\n            if (match)\n                return n;\n        }\n        this.types.push(typeDef);\n        return this.types.length - 1;\n    }\n    updateBounds(x, y) {\n        if (this.lowX == null) {\n            this.lowX = x;\n            this.lowY = y;\n            this.highX = x;\n            this.highY = y;\n            return;\n        }\n        this.lowX = Math.min(this.lowX, x);\n        this.lowY = Math.min(this.lowY, y);\n        this.highX = Math.max(this.highX, x);\n        this.highY = Math.max(this.highY, y);\n    }\n}\nMetaVector.NOCOLOUR = -1;\nexport { MetaVector };\n//# sourceMappingURL=MetaVector.js.map","import { FontData } from '../gfx/FontData';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { dom } from '../util/dom';\nimport { Theme } from '../util/Theme';\nimport { colourCanvas, eventCoords, newElement, pathRoundedRect, pixelDensity, setBoundaryPixels } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Widget } from './Widget';\nexport var ButtonViewPosition;\n(function (ButtonViewPosition) {\n    ButtonViewPosition[ButtonViewPosition[\"Left\"] = 0] = \"Left\";\n    ButtonViewPosition[ButtonViewPosition[\"Right\"] = 1] = \"Right\";\n    ButtonViewPosition[ButtonViewPosition[\"Top\"] = 2] = \"Top\";\n    ButtonViewPosition[ButtonViewPosition[\"Bottom\"] = 3] = \"Bottom\";\n    ButtonViewPosition[ButtonViewPosition[\"Centre\"] = 4] = \"Centre\";\n})(ButtonViewPosition || (ButtonViewPosition = {}));\nexport class ButtonView extends Widget {\n    constructor(position, parentX, parentY, parentWidth, parentHeight) {\n        super();\n        this.position = position;\n        this.parentX = parentX;\n        this.parentY = parentY;\n        this.parentWidth = parentWidth;\n        this.parentHeight = parentHeight;\n        this.idealSize = 50;\n        this.width = 0;\n        this.height = 0;\n        this.selectedButton = null;\n        this.highlightButton = null;\n        this.maxButtonColumns = 0;\n        this.maxButtonRows = 0;\n        this.border = 0x808080;\n        this.background = 0xFFFFFF;\n        this.buttonColNorm1 = 0x47D5D2;\n        this.buttonColNorm2 = 0x008FD1;\n        this.buttonColActv1 = 0x30FF69;\n        this.buttonColActv2 = 0x008650;\n        this.buttonColSel1 = 0xFFFFFF;\n        this.buttonColSel2 = 0xE0E0E0;\n        this.canvas = null;\n        this.stack = [];\n        this.display = [];\n        this.hasBigButtons = true;\n        this.prefabImgSize = 44;\n        this.gripHeight = 30;\n        this.gripWidth = 50;\n        this.isRaised = true;\n        this.outPadding = 2;\n        this.inPadding = 2;\n        this.x = 0;\n        this.y = 0;\n        this.isMacLike = false;\n        this.isMacLike = !!navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i);\n    }\n    setParentSize(width, height) {\n        this.parentWidth = width;\n        this.parentHeight = height;\n        if (this.contentDOM) {\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    get topBank() {\n        return this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n    }\n    get stackSize() { return this.stack.length; }\n    render(parent) {\n        super.render(parent);\n        this.contentDOM.css({ 'position': 'absolute', 'width': `${this.width}px`, 'height': `${this.height}px` });\n        this.contentDOM.addClass('no_selection');\n        this.layoutButtons();\n        let canvasStyle = 'position: absolute; left: 0; top: 0;';\n        canvasStyle += 'pointer-events: none;';\n        this.canvas = newElement(this.contentDOM.el, 'canvas', { 'width': this.width, 'height': this.height, 'style': canvasStyle });\n        this.canvas.style.width = this.width + 'px';\n        this.canvas.style.height = this.height + 'px';\n        this.applyOffset();\n        this.redraw();\n        this.contentDOM.onClick((event) => this.mouseClick(event));\n        this.contentDOM.onDblClick((event) => this.mouseDoubleClick(event));\n        this.contentDOM.onMouseDown((event) => { event.preventDefault(); this.mouseDown(event); });\n        this.contentDOM.onMouseUp((event) => this.mouseUp(event));\n        this.contentDOM.onMouseOver((event) => this.mouseOver(event));\n        this.contentDOM.onMouseLeave((event) => this.mouseOut(event));\n        this.contentDOM.onMouseMove((event) => this.mouseMove(event));\n    }\n    pushBank(bank) {\n        bank.buttonView = this;\n        bank.isSubLevel = this.stack.length > 0;\n        bank.init();\n        this.stack.push(bank);\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    popBank() {\n        if (this.stack.length == 0)\n            return;\n        Vec.last(this.stack).bankClosed();\n        this.stack.length--;\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    refreshBank() {\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    getSelectedButton() {\n        return this.selectedButton;\n    }\n    setSelectedButton(id) {\n        if (id != this.selectedButton) {\n            this.selectedButton = id;\n            this.redraw();\n        }\n    }\n    cycleSelected(dir) {\n        let sorted = this.display.filter((s) => s.id != '*');\n        sorted.sort((d1, d2) => (d1.y * 10000 + d1.x) - (d2.y * 10000 + d2.x));\n        let idx = 0, sz = sorted.length;\n        for (let n = 0; n < sz; n++)\n            if (sorted[n].id == this.selectedButton) {\n                idx = n;\n                break;\n            }\n        this.selectedButton = sorted[(idx + dir + sz) % sz].id;\n        this.redraw();\n    }\n    raiseBank() {\n        if (this.isRaised)\n            return;\n        this.isRaised = true;\n        if (this.contentDOM) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    lowerBank() {\n        if (!this.isRaised)\n            return;\n        this.isRaised = false;\n        if (this.contentDOM) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    getHasBigButtons() {\n        return this.hasBigButtons;\n    }\n    setHasBigButtons(flag) {\n        this.hasBigButtons = flag;\n        this.prefabImgSize = flag ? 44 : 36;\n        this.idealSize = flag ? 50 : 40;\n    }\n    withinOutline(x, y) {\n        let w = this.width, h = this.height;\n        if (x < 0 || x > w || y < 0 || y > h)\n            return false;\n        if (this.position == ButtonViewPosition.Centre || this.stack.length == 0)\n            return true;\n        if (this.position == ButtonViewPosition.Left) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return x < w - gw || (y > my - hg && y < my + hg);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return x > gw || (y > my - hg && y < my + hg);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return y < h - gh || (x > mx - hg && x < mx + hg);\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return y > gh || (x > mx - hg && x < mx + hg);\n        }\n        return true;\n    }\n    gripSize() {\n        return this.gripHeight;\n    }\n    sizeForButtons(nbtn) {\n        return this.idealSize * nbtn + this.inPadding * (nbtn - 1) + 2 * this.outPadding;\n    }\n    layoutButtons() {\n        if (this.contentDOM == null)\n            return;\n        let outPadding = this.outPadding, inPadding = this.inPadding;\n        this.removeDisplayButtons();\n        if (this.stack.length == 0) {\n            this.width = 10;\n            this.height = 10;\n            if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n                this.height = this.parentHeight;\n            else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n                this.width = this.parentWidth;\n            return;\n        }\n        if (!this.isRaised) {\n            if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n                this.width = this.gripHeight;\n                this.height = this.gripWidth + 2 * outPadding;\n            }\n            else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n                this.width = this.gripWidth + 2 * outPadding;\n                this.height = this.gripHeight;\n            }\n            this.addGripButton();\n            return;\n        }\n        let bank = this.stack[this.stack.length - 1];\n        bank.buttons = [];\n        bank.update();\n        let popWidth = 0, popHeight = 0;\n        if (this.stack.length == 1) { }\n        else if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n            popHeight = this.gripHeight + inPadding;\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n            popWidth = this.gripHeight + inPadding;\n        let bestLayout = null, bestScore = null;\n        if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n            let maxSlotHeight = Math.floor((this.parentHeight - 2 * outPadding - inPadding) / (this.idealSize + inPadding));\n            let minSlotHeight = Math.ceil(0.5 * maxSlotHeight);\n            for (let i = maxSlotHeight; i >= minSlotHeight; i--) {\n                let slotWidth = Math.ceil(bank.buttons.length / i);\n                for (let j = slotWidth; j <= slotWidth + 1; j++) {\n                    let layout = this.layoutMaxHeight(bank, i, j);\n                    let score = this.scoreLayout(layout) + 1 * layout[0].length;\n                    if (bestLayout == null || score < bestScore) {\n                        bestLayout = layout;\n                        bestScore = score;\n                    }\n                }\n            }\n        }\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n            let maxSlotWidth = Math.floor((this.parentWidth - 2 * outPadding - inPadding - popWidth) / (this.idealSize + inPadding));\n            let minSlotWidth = Math.ceil(0.5 * maxSlotWidth);\n            for (let n = maxSlotWidth; n >= minSlotWidth; n--) {\n                let layout = this.layoutMaxWidth(bank, n);\n                let score = this.scoreLayout(layout) + 1 * layout.length;\n                if (bestLayout == null || score < bestScore) {\n                    bestLayout = layout;\n                    bestScore = score;\n                }\n            }\n        }\n        else {\n        }\n        let ncols = bestLayout[0].length, nrows = bestLayout.length;\n        this.width = 2 * outPadding + inPadding + (this.idealSize + inPadding) * ncols + popWidth;\n        this.height = 2 * outPadding + inPadding + (this.idealSize + inPadding) * nrows + popHeight;\n        if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n            this.width += this.gripHeight;\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n            this.height += this.gripHeight;\n        this.addGripButton();\n        if (popWidth > 0 || popHeight > 0) {\n            let d = {\n                id: '!',\n                x: outPadding + inPadding,\n                y: outPadding + inPadding,\n                width: popWidth - inPadding,\n                height: popHeight - inPadding\n            };\n            if (this.position == ButtonViewPosition.Right)\n                d.x += this.gripHeight;\n            else if (this.position == ButtonViewPosition.Bottom)\n                d.y += this.gripHeight;\n            if (popWidth == 0)\n                d.width = ncols * this.idealSize + inPadding * (ncols - 1);\n            if (popHeight == 0)\n                d.height = nrows * this.idealSize + inPadding * (nrows - 1);\n            this.display.push(d);\n        }\n        for (let y = 0; y < nrows; y++)\n            for (let x = 0; x < ncols; x++) {\n                for (let n = 0; n < bank.buttons.length; n++)\n                    if (bestLayout[y][x] == bank.buttons[n].id) {\n                        let b = bank.buttons[n], d = { id: b.id };\n                        d.x = outPadding + inPadding + popWidth + (this.idealSize + inPadding) * x;\n                        d.y = outPadding + inPadding + popHeight + (this.idealSize + inPadding) * y;\n                        if (this.position == ButtonViewPosition.Right)\n                            d.x += this.gripHeight;\n                        else if (this.position == ButtonViewPosition.Bottom)\n                            d.y += this.gripHeight;\n                        d.width = this.idealSize;\n                        d.height = this.idealSize;\n                        this.display.push(d);\n                    }\n            }\n    }\n    addGripButton() {\n        if (this.position == ButtonViewPosition.Centre)\n            return;\n        let d = { id: '*' }, spc = 3;\n        if (this.position == ButtonViewPosition.Left) {\n            d.width = this.gripHeight - spc;\n            d.height = this.gripWidth - 2 * spc;\n            d.x = this.width - d.width - spc - 1;\n            d.y = 0.5 * (this.height - d.height);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            d.width = this.gripHeight - spc;\n            d.height = this.gripWidth - 2 * spc;\n            d.x = spc + 1;\n            d.y = 0.5 * (this.height - d.height);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            d.width = this.gripWidth - 2 * spc;\n            d.height = this.gripHeight - spc;\n            d.x = 0.5 * (this.width - d.width);\n            d.y = this.height - d.height - spc - 1;\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            d.width = this.gripWidth - 2 * spc;\n            d.height = this.gripHeight - spc;\n            d.x = 0.5 * (this.width - d.width);\n            d.y = spc + 1;\n        }\n        this.display.push(d);\n    }\n    replaceCanvas() {\n        this.contentDOM.empty();\n        for (let n = 0; n < this.display.length; n++) {\n            this.display[n].imgDOM = null;\n            this.display[n].helpSpan = null;\n        }\n        let canvasStyle = 'position: absolute; left: 0; top: 0;';\n        canvasStyle += 'pointer-events: none;';\n        this.canvas = newElement(this.contentDOM.el, 'canvas', { 'width': this.width, 'height': this.height, 'style': canvasStyle });\n    }\n    removeDisplayButtons() {\n        this.contentDOM.empty();\n        this.display = [];\n    }\n    applyOffset() {\n        let x, y;\n        if (this.position == ButtonViewPosition.Left) {\n            x = 0;\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            x = this.parentWidth - this.width;\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = 0;\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = this.parentHeight - this.height;\n        }\n        else {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        this.x = this.parentX + x;\n        this.y = this.parentY + y;\n        this.contentDOM.css({ 'position': 'absolute' });\n        setBoundaryPixels(this.contentDOM, this.x, this.y, this.width, this.height);\n    }\n    redraw() {\n        if (!this.contentDOM || !this.canvas)\n            return;\n        let density = pixelDensity();\n        this.canvas.width = this.width * density;\n        this.canvas.height = this.height * density;\n        this.canvas.style.width = this.width + 'px';\n        this.canvas.style.height = this.height + 'px';\n        let ctx = this.canvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        let path = this.traceOutline();\n        ctx.fillStyle = colourCanvas(this.background);\n        ctx.fill(path);\n        ctx.strokeStyle = colourCanvas(this.border);\n        ctx.lineWidth = 1;\n        ctx.stroke(path);\n        let bank = this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n        this.contentDOM.css({ 'width': this.width + 'px', 'height': this.height + 'px' });\n        for (let n = 0; n < this.display.length; n++) {\n            const d = this.display[n], b = this.buttonFromID(d.id);\n            let col1, col2;\n            if (this.highlightButton != null && d.id == this.highlightButton) {\n                col1 = this.buttonColActv1;\n                col2 = this.buttonColActv2;\n            }\n            else if (this.selectedButton != null && d.id == this.selectedButton) {\n                col1 = this.buttonColSel1;\n                col2 = this.buttonColSel2;\n            }\n            else {\n                col1 = this.buttonColNorm1;\n                col2 = this.buttonColNorm2;\n            }\n            ctx.save();\n            path = pathRoundedRect(d.x + 0.5, d.y + 0.5, d.x + d.width - 1, d.y + d.height - 1, 5);\n            if (col2 != null) {\n                let grad = ctx.createLinearGradient(d.x, d.y, d.x + d.width, d.y + d.height);\n                grad.addColorStop(0, colourCanvas(col1));\n                grad.addColorStop(1, colourCanvas(col2));\n                ctx.fillStyle = grad;\n            }\n            else\n                ctx.fillStyle = colourCanvas(col1);\n            ctx.fill(path);\n            ctx.strokeStyle = colourCanvas(this.border);\n            ctx.lineWidth = 0.5;\n            ctx.stroke(path);\n            ctx.restore();\n            if (d.imgDOM != null) {\n                d.imgDOM.remove();\n                d.imgDOM = null;\n            }\n            if (b != null) {\n                if (d.helpSpan == null) {\n                    d.helpSpan = dom('<span style=\"position: absolute;\"/>').appendTo(this.contentDOM);\n                    let txt = b.helpText;\n                    if (b.mnemonic) {\n                        while (txt.endsWith('.'))\n                            txt = txt.substring(0, txt.length - 1);\n                        let keyText = b.mnemonic;\n                        let match = keyText.match(/^(.*)CmdOrCtrl(.*)$/);\n                        if (match)\n                            keyText = match[1] + (this.isMacLike ? 'Cmd' : 'Ctrl') + match[2];\n                        txt += ' [' + keyText + ']';\n                    }\n                    this.addTooltip(d.helpSpan.el.outerHTML, txt);\n                }\n                setBoundaryPixels(d.helpSpan, d.x, d.y, d.width, d.height);\n            }\n            if (b == null) { }\n            else if (b.imageFN != null && d.imgDOM == null) {\n                d.imgDOM = dom('<img/>').appendTo(this.contentDOM).css({ 'position': 'absolute', 'pointer-events': 'none' });\n                d.imgDOM.setAttr('src', Theme.RESOURCE_URL + '/img/actions/' + b.imageFN + '.svg');\n                const sz = this.prefabImgSize;\n                const bx = d.x + Math.floor(0.5 * (d.width - sz));\n                const by = d.y + Math.floor(0.5 * (d.height - sz));\n                setBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n            }\n            else if (b.metavec != null) {\n                let draw = b.metavec instanceof MetaVector ? b.metavec : new MetaVector(b.metavec);\n                draw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n                draw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n                draw.renderContext(ctx);\n            }\n            else if (b.text != null) {\n                let sz = this.idealSize;\n                let draw = new MetaVector({ 'size': [sz, sz] });\n                let fsz = sz * 0.6;\n                let wad = FontData.main.measureText(b.text, fsz);\n                if (wad[1] + wad[2] > sz) {\n                    fsz *= sz / (wad[1] + wad[2]);\n                    wad = FontData.main.measureText(b.text, fsz);\n                }\n                if (wad[0] > sz) {\n                    fsz *= sz / wad[0];\n                    wad = FontData.main.measureText(b.text, fsz);\n                }\n                let x = 0.5 * (sz - wad[0]), y = 0.5 * (sz + wad[1]);\n                draw.drawText(x - 1, y, b.text, fsz, 0x000000);\n                draw.drawText(x + 1, y, b.text, fsz, 0x000000);\n                draw.drawText(x, y - 1, b.text, fsz, 0x000000);\n                draw.drawText(x, y + 1, b.text, fsz, 0x000000);\n                draw.drawText(x, y, b.text, fsz, 0xFFFFFF);\n                draw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n                draw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n                draw.renderContext(ctx);\n            }\n            if (b != null && b.isSubMenu) {\n                ctx.save();\n                let sx = d.x + d.width - 3, sy = d.y + d.height - 3;\n                ctx.beginPath();\n                ctx.moveTo(sx, sy);\n                ctx.lineTo(sx - 6, sy);\n                ctx.lineTo(sx, sy - 6);\n                ctx.closePath();\n                ctx.fillStyle = 'black';\n                ctx.fill();\n                ctx.restore();\n            }\n            if (d.id == '*') {\n                ctx.save();\n                path = new Path2D();\n                let px, py, flip = this.isRaised;\n                if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n                    px = [0.2, 0.7, 0.7];\n                    py = [0.5, 0.3, 0.7];\n                    if (this.position == ButtonViewPosition.Left)\n                        flip = !flip;\n                }\n                else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n                    px = [0.5, 0.3, 0.7];\n                    py = [0.2, 0.7, 0.7];\n                    if (this.position == ButtonViewPosition.Top)\n                        flip = !flip;\n                }\n                if (flip) {\n                    px = [1 - px[0], 1 - px[1], 1 - px[2]];\n                    py = [1 - py[0], 1 - py[1], 1 - py[2]];\n                }\n                path.moveTo(d.x + d.width * px[0], d.y + d.height * py[0]);\n                path.lineTo(d.x + d.width * px[1], d.y + d.height * py[1]);\n                path.lineTo(d.x + d.width * px[2], d.y + d.height * py[2]);\n                path.closePath();\n                ctx.fillStyle = 'white';\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0;\n                ctx.fill(path);\n                ctx.stroke(path);\n                ctx.restore();\n            }\n            else if (d.id == '!') {\n                ctx.save();\n                let path1 = new Path2D(), path2 = new Path2D();\n                let inset = 5;\n                let w = d.width - inset * 2, h = d.height - inset * 2;\n                for (let z = 5; z < w + h - 1; z += 12) {\n                    let x1 = 0, y1 = z, x2 = z, y2 = 0;\n                    if (y1 > h) {\n                        let delta = y1 - h;\n                        x1 += delta;\n                        y1 -= delta;\n                    }\n                    if (x2 > w) {\n                        let delta = x2 - w;\n                        x2 -= delta;\n                        y2 += delta;\n                    }\n                    path1.moveTo(d.x + inset + x1, d.y + inset + y1);\n                    path1.lineTo(d.x + inset + x2, d.y + inset + y2);\n                    path2.moveTo(d.x + inset + x1 + 1, d.y + inset + y1);\n                    path2.lineTo(d.x + inset + x2 + 1, d.y + inset + y2);\n                }\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = '#404040';\n                ctx.stroke(path1);\n                ctx.strokeStyle = 'white';\n                ctx.stroke(path2);\n                ctx.restore();\n            }\n        }\n        ctx.restore();\n    }\n    delayedRedraw() {\n        window.setTimeout(() => this.redraw(), 100);\n    }\n    buttonFromID(id) {\n        let bank = this.stack[this.stack.length - 1];\n        for (let n = 0; n < bank.buttons.length; n++)\n            if (bank.buttons[n].id == id)\n                return bank.buttons[n];\n        return null;\n    }\n    displayFromID(id) {\n        for (let n = 0; n < this.display.length; n++)\n            if (this.display[n].id == id)\n                return this.display[n];\n        return null;\n    }\n    traceOutline() {\n        let w = this.width, h = this.height, uw = w - 1, uh = h - 1, r = 8;\n        if (this.position == ButtonViewPosition.Centre || this.stack.length == 0)\n            return pathRoundedRect(0.5, 0.5, w - 0.5, h - 0.5, r);\n        let path = new Path2D();\n        if (this.position == ButtonViewPosition.Left) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, 0.5);\n            path.lineTo(0.5 + uw - gw - r, 0.5);\n            path.bezierCurveTo(0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5 + r);\n            path.lineTo(0.5 + uw - gw, 0.5 + my - hg);\n            path.lineTo(0.5 + uw - r, 0.5 + my - hg);\n            path.bezierCurveTo(0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg + r);\n            path.lineTo(0.5 + uw, 0.5 + my + hg - r);\n            path.bezierCurveTo(0.5 + uw, 0.5 + my + hg, 0.5 + uw, 0.5 + my + hg, 0.5 + uw - r, 0.5 + my + hg);\n            path.lineTo(0.5 + uw - gw, 0.5 + my + hg);\n            path.lineTo(0.5 + uw - gw, 0.5 + uh - r);\n            path.bezierCurveTo(0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw - r, 0.5 + uh);\n            path.lineTo(0.5, 0.5 + uh);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(w - 0.5, 0.5);\n            path.lineTo(w - (0.5 + uw - gw - r), 0.5);\n            path.bezierCurveTo(w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5 + r);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + my - hg);\n            path.lineTo(w - (0.5 + uw - r), 0.5 + my - hg);\n            path.bezierCurveTo(w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg + r);\n            path.lineTo(w - (0.5 + uw), 0.5 + my + hg - r);\n            path.bezierCurveTo(w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw - r), 0.5 + my + hg);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + my + hg);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + uh - r);\n            path.bezierCurveTo(w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw - r), 0.5 + uh);\n            path.lineTo(w - 0.5, 0.5 + uh);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, h - (0.5 + uh));\n            path.lineTo(0.5, h - (0.5 + gh + r));\n            path.bezierCurveTo(0.5, h - (0.5 + gh), 0.5, h - (0.5 + gh), 0.5 + r, h - (0.5 + gh));\n            path.lineTo(0.5 + mx - hg, h - (0.5 + gh));\n            path.lineTo(0.5 + mx - hg, h - (0.5 + r));\n            path.bezierCurveTo(0.5 + mx - hg, h - 0.5, 0.5 + mx - hg, h - 0.5, 0.5 + mx - hg + r, h - 0.5);\n            path.lineTo(0.5 + mx + hg - r, h - 0.5);\n            path.bezierCurveTo(0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - (0.5 + r));\n            path.lineTo(0.5 + mx + hg, h - (0.5 + gh));\n            path.lineTo(0.5 + uw - r, h - (0.5 + gh));\n            path.bezierCurveTo(0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh + r));\n            path.lineTo(0.5 + uw, h - (0.5 + uh));\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, 0.5 + uh);\n            path.lineTo(0.5, 0.5 + gh + r);\n            path.bezierCurveTo(0.5, 0.5 + gh, 0.5, 0.5 + gh, 0.5 + r, 0.5 + gh);\n            path.lineTo(0.5 + mx - hg, 0.5 + gh);\n            path.lineTo(0.5 + mx - hg, 0.5 + r);\n            path.bezierCurveTo(0.5 + mx - hg, 0.5, 0.5 + mx - hg, 0.5, 0.5 + mx - hg + r, 0.5);\n            path.lineTo(0.5 + mx + hg - r, 0.5);\n            path.bezierCurveTo(0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5 + r);\n            path.lineTo(0.5 + mx + hg, 0.5 + gh);\n            path.lineTo(0.5 + uw - r, 0.5 + gh);\n            path.bezierCurveTo(0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh + r);\n            path.lineTo(0.5 + uw, 0.5 + uh);\n        }\n        return path;\n    }\n    layoutMaxWidth(bank, slotWidth) {\n        if (bank.buttons.length == 0)\n            return [[null]];\n        let bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n        let x = 0, y = 0, w = 0, h = 0;\n        for (let n = 0; n < bank.buttons.length; n++) {\n            w = Math.max(x + 1, w);\n            h = Math.max(y + 1, h);\n            bx[n] = x;\n            by[n] = y;\n            x++;\n            if (x >= slotWidth) {\n                x = 0;\n                y++;\n            }\n        }\n        let slot = new Array(h);\n        for (let n = 0; n < h; n++)\n            slot[n] = new Array(w);\n        for (let n = 0; n < bank.buttons.length; n++) {\n            slot[by[n]][bx[n]] = bank.buttons[n].id;\n        }\n        return slot;\n    }\n    layoutMaxHeight(bank, slotHeight, slotWidth) {\n        if (bank.buttons.length == 0)\n            return [[null]];\n        let bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n        let x = 0, y = 0, w = 0, h = 0;\n        for (let n = 0; n < bank.buttons.length; n++) {\n            w = Math.max(x + 1, w);\n            h = Math.max(y + 1, h);\n            bx[n] = x;\n            by[n] = y;\n            x++;\n            if (x >= slotWidth) {\n                x = 0;\n                y++;\n            }\n        }\n        let slot = new Array(h);\n        for (let n = 0; n < h; n++)\n            slot[n] = new Array(w);\n        for (let n = 0; n < bank.buttons.length; n++) {\n            slot[by[n]][bx[n]] = bank.buttons[n].id;\n        }\n        return slot;\n    }\n    scoreLayout(slots) {\n        let score = 0;\n        let nrows = slots.length, ncols = slots[0].length;\n        for (let y = 0; y < nrows; y++)\n            for (let x = 0; x < ncols; x++) {\n                if (slots[y][x] == null)\n                    score++;\n            }\n        if (this.maxButtonRows > 0 && nrows > this.maxButtonRows)\n            score += (nrows - this.maxButtonRows) * 100;\n        if (this.maxButtonColumns > 0 && ncols > this.maxButtonColumns)\n            score += (ncols - this.maxButtonColumns) * 100;\n        return score;\n    }\n    pickButtonIndex(x, y) {\n        for (let n = 0; n < this.display.length; n++) {\n            let d = this.display[n];\n            if (x >= d.x && y >= d.y && x < d.x + d.width && y < d.y + d.height)\n                return n;\n        }\n        return -1;\n    }\n    pickButtonID(x, y) {\n        let idx = this.pickButtonIndex(x, y);\n        if (idx < 0)\n            return undefined;\n        return this.display[idx].id;\n    }\n    triggerButton(id) {\n        if (id == '*') {\n            if (this.isRaised)\n                this.lowerBank();\n            else\n                this.raiseBank();\n            return;\n        }\n        else if (id == '!') {\n            this.popBank();\n            return;\n        }\n        let bank = this.stack[this.stack.length - 1];\n        bank.hitButton(id);\n    }\n    mouseClick(event) {\n    }\n    mouseDoubleClick(event) {\n        event.stopImmediatePropagation();\n    }\n    mouseDown(event) {\n        this.contentDOM.parent().grabFocus();\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        let id = this.pickButtonID(xy[0], xy[1]);\n        if (id != this.highlightButton) {\n            this.highlightButton = id;\n            this.redraw();\n        }\n        event.stopPropagation();\n    }\n    mouseUp(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        let id = this.pickButtonID(xy[0], xy[1]);\n        if (id != null && this.highlightButton == id) {\n            this.highlightButton = undefined;\n            this.triggerButton(id);\n            this.delayedRedraw();\n        }\n        else {\n            this.highlightButton = undefined;\n            this.delayedRedraw();\n        }\n        event.stopPropagation();\n    }\n    mouseOver(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        event.stopPropagation();\n    }\n    mouseOut(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1])) {\n            if (this.highlightButton != null) {\n                this.highlightButton = null;\n                this.delayedRedraw();\n            }\n            return;\n        }\n        if (this.highlightButton != null) {\n            let xy = eventCoords(event, this.contentDOM);\n            let id = this.pickButtonID(xy[0], xy[1]);\n            if (id != this.highlightButton) {\n                this.highlightButton = null;\n                this.delayedRedraw();\n            }\n        }\n        event.stopPropagation();\n    }\n    mouseMove(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n    }\n}\n//# sourceMappingURL=ButtonView.js.map","import { fltEqual } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Graph } from './Graph';\nexport var DotPathBond;\n(function (DotPathBond) {\n    DotPathBond[DotPathBond[\"O0\"] = 0] = \"O0\";\n    DotPathBond[DotPathBond[\"O01\"] = 1] = \"O01\";\n    DotPathBond[DotPathBond[\"O1\"] = 2] = \"O1\";\n    DotPathBond[DotPathBond[\"O12\"] = 3] = \"O12\";\n    DotPathBond[DotPathBond[\"O2\"] = 4] = \"O2\";\n    DotPathBond[DotPathBond[\"O23\"] = 5] = \"O23\";\n    DotPathBond[DotPathBond[\"O3\"] = 6] = \"O3\";\n    DotPathBond[DotPathBond[\"O3X\"] = 7] = \"O3X\";\n})(DotPathBond || (DotPathBond = {}));\nexport var DotPathCharge;\n(function (DotPathCharge) {\n    DotPathCharge[DotPathCharge[\"N1X\"] = -3] = \"N1X\";\n    DotPathCharge[DotPathCharge[\"N1\"] = -2] = \"N1\";\n    DotPathCharge[DotPathCharge[\"N01\"] = -1] = \"N01\";\n    DotPathCharge[DotPathCharge[\"Z0\"] = 0] = \"Z0\";\n    DotPathCharge[DotPathCharge[\"P01\"] = 1] = \"P01\";\n    DotPathCharge[DotPathCharge[\"P1\"] = 2] = \"P1\";\n    DotPathCharge[DotPathCharge[\"P1X\"] = 3] = \"P1X\";\n})(DotPathCharge || (DotPathCharge = {}));\nexport class DotPath {\n    constructor(mol) {\n        this.mol = mol;\n        this.paths = [];\n        if (mol)\n            this.calculate();\n    }\n    clone() {\n        let dup = new DotPath(null);\n        dup.mol = this.mol;\n        dup.maskBlock = this.maskBlock;\n        dup.paths = this.paths.slice(0);\n        return dup;\n    }\n    getBondOrders() {\n        const mol = this.mol;\n        let orders = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            orders.push(mol.bondOrder(n));\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            for (let n = 1; n <= 5; n++)\n                if (fltEqual(fract, n))\n                    fract = n;\n            for (let b of path.bonds)\n                orders[b - 1] = fract;\n        }\n        return orders;\n    }\n    getBondClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bo = mol.bondOrder(n);\n            classes.push(bo == 0 ? 0 :\n                bo == 1 ? 2 :\n                    bo == 2 ? 4 :\n                        bo == 3 ? 6 : 7);\n        }\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            let bcls = fltEqual(fract, 0) ? 0 :\n                fltEqual(fract, 1) ? 2 :\n                    fltEqual(fract, 2) ? 4 :\n                        fltEqual(fract, 3) ? 6 :\n                            fract < 1 ? 1 :\n                                fract < 2 ? 3 :\n                                    fract < 3 ? 5 : 7;\n            for (let b of path.bonds)\n                classes[b - 1] = bcls;\n        }\n        return classes;\n    }\n    getChargeClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let chg = mol.atomCharge(n);\n            classes.push(chg == 0 ? 0 :\n                chg == -1 ? -2 :\n                    chg == 1 ? 2 :\n                        chg < -1 ? -3 : 3);\n        }\n        for (let path of this.paths) {\n            let chg = 0;\n            for (let a of path.atoms)\n                chg += mol.atomCharge(a);\n            chg /= path.atoms.length;\n            let ccls = fltEqual(chg, 0) ? 0 :\n                fltEqual(chg, -1) ? -2 :\n                    fltEqual(chg, 1) ? 2 :\n                        chg > -1 && chg < 0 ? -1 :\n                            chg > 0 && chg < 1 ? 1 :\n                                chg < -1 ? -3 : 3;\n            for (let a of path.atoms)\n                classes[a - 1] = ccls;\n        }\n        return classes;\n    }\n    getAggregateCharges() {\n        const mol = this.mol;\n        let chg = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            chg[n - 1] = mol.atomCharge(n);\n        for (let path of this.paths) {\n            let total = 0;\n            for (let a of path.atoms)\n                total += chg[a - 1];\n            for (let a of path.atoms)\n                chg[a - 1] = total;\n        }\n        return chg;\n    }\n    toString() {\n        let str = 'blocking=' + JSON.stringify(this.maskBlock) + '; paths=' + this.paths.length;\n        for (let p of this.paths)\n            str += ' [' + p.numer + '/' + p.denom + ';a=' + JSON.stringify(p.atoms) + ';b=' + JSON.stringify(p.bonds) + ']';\n        return str;\n    }\n    calculate() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let nonsingle = Vec.booleanArray(false, na), pibonded = Vec.booleanArray(false, na), metalbonded = Vec.booleanArray(false, na);\n        let bondsum = Vec.numberArray(0, na);\n        for (let n = 0; n < na; n++)\n            bondsum[n] = mol.atomHydrogens(n + 1);\n        for (let n = 1; n <= nb; n++) {\n            let bo = mol.bondOrder(n), bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (bo != 1) {\n                nonsingle[bfr - 1] = true;\n                nonsingle[bto - 1] = true;\n            }\n            if (bo >= 2) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n            else {\n                let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)], blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n                if (blk1 >= 3 || blk2 >= 3) {\n                    metalbonded[bfr - 1] = true;\n                    metalbonded[bto - 1] = true;\n                }\n            }\n            bondsum[bfr - 1] += bo;\n            bondsum[bto - 1] += bo;\n            if (mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n        }\n        let impliedPi = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++)\n            if (!pibonded[n - 1]) {\n                let adjpi = 0;\n                for (let adj of mol.atomAdjList(n))\n                    if (pibonded[adj - 1] || metalbonded[adj - 1])\n                        adjpi++;\n                if (adjpi >= 2)\n                    impliedPi[n - 1] = true;\n            }\n        for (let n = 0; n < na; n++)\n            if (impliedPi[n])\n                pibonded[n] = true;\n        this.maskBlock = Vec.booleanArray(false, na);\n        let maskMaybe = Vec.booleanArray(false, na);\n        const COULD_BLOCK = [\n            Chemistry.ELEMENT_H,\n            Chemistry.ELEMENT_B, Chemistry.ELEMENT_C, Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si, Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge, Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn, Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb, Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        const ACIDS = [\n            Chemistry.ELEMENT_B,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb,\n        ];\n        const BASES = [\n            Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        skip: for (let n = 0; n < na; n++) {\n            const a = n + 1;\n            if (nonsingle[n] || pibonded[n])\n                continue;\n            if (mol.atomCharge(a) != 0 || mol.atomUnpaired(a) != 0)\n                continue;\n            const atno = mol.atomicNumber(a);\n            if (atno == 0) {\n                this.maskBlock[n] = true;\n                continue;\n            }\n            if (COULD_BLOCK.indexOf(atno) < 0)\n                continue;\n            if (bondsum[n] != Chemistry.ELEMENT_BONDING[atno])\n                continue;\n            if (ACIDS.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (BASES.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            if (BASES.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (ACIDS.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            maskMaybe[n] = true;\n            if (atno == Chemistry.ELEMENT_C) {\n                let hasMetal = false;\n                for (let adj of mol.atomAdjList(a))\n                    if (COULD_BLOCK.indexOf(mol.atomicNumber(adj)) < 0)\n                        hasMetal = true;\n                if (!hasMetal)\n                    this.maskBlock[n] = true;\n            }\n            else if (atno == Chemistry.ELEMENT_H) {\n                this.maskBlock[n] = true;\n            }\n        }\n        skip: for (let n = 0; n < na; n++)\n            if (maskMaybe[n] && !this.maskBlock[n]) {\n                for (let a of mol.atomAdjList(n + 1))\n                    if (!maskMaybe[a - 1])\n                        continue skip;\n                this.maskBlock[n] = true;\n            }\n        let g = Graph.fromMolecule(mol);\n        for (let n = 0; n < na; n++)\n            if (this.maskBlock[n])\n                g.isolateNode(n);\n        for (let cc of g.calculateComponentGroups()) {\n            if (cc.length == 1)\n                continue;\n            let amask = Vec.idxMask(cc, na);\n            Vec.addTo(cc, 1);\n            let p = {\n                atoms: cc,\n                bonds: [],\n                numer: 0,\n                denom: 0\n            };\n            for (let n = 1; n <= nb; n++)\n                if (amask[mol.bondFrom(n) - 1] && amask[mol.bondTo(n) - 1])\n                    p.bonds.push(n);\n            let totalHave = 0, totalWant = 0;\n            for (let a of p.atoms) {\n                let others = mol.atomHydrogens(a);\n                for (let o of mol.atomAdjList(a))\n                    if (!amask[o - 1])\n                        others++;\n                let atno = mol.atomicNumber(a);\n                let have = Chemistry.ELEMENT_VALENCE[atno] - mol.atomCharge(a) - others;\n                let want = Chemistry.ELEMENT_SHELL[atno] - Chemistry.ELEMENT_VALENCE[atno] - others;\n                totalHave += have;\n                totalWant += want;\n            }\n            let electrons = Math.min(totalHave, totalWant);\n            p.numer = electrons;\n            p.denom = 2 * p.bonds.length;\n            this.paths.push(p);\n        }\n    }\n}\n//# sourceMappingURL=DotPath.js.map","import { deepClone, findNode, findNodes, nodeText } from '../util/util';\nimport { XML } from '../util/XML';\nimport { DataSheet } from './DataSheet';\nimport { Molecule } from './Molecule';\nimport { MoleculeStream } from './MoleculeStream';\nexport class DataSheetStream {\n    static readXML(strXML) {\n        let xmlDoc;\n        if (XML.customParser)\n            xmlDoc = new XML.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        let root = xmlDoc.documentElement;\n        if (root == null)\n            return null;\n        let ds = new DataSheet();\n        let summary = findNode(root, 'Summary');\n        if (summary == null)\n            return null;\n        ds.title = nodeText(findNode(summary, 'Title'));\n        ds.description = nodeText(findNode(summary, 'Description'));\n        let extRoot = findNode(root, 'Extension');\n        if (extRoot != null) {\n            let extList = findNodes(extRoot, 'Ext');\n            for (let n = 0; n < extList.length; n++) {\n                let ext = extList[n];\n                ds.appendExtension(ext.getAttribute('name'), ext.getAttribute('type'), nodeText(ext));\n            }\n        }\n        let header = findNode(root, 'Header');\n        let numCols = parseInt(header.getAttribute('ncols'));\n        let colList = findNodes(header, 'Column');\n        if (colList.length != numCols)\n            return null;\n        for (let n = 0; n < numCols; n++) {\n            let col = colList[n];\n            let id = parseInt(col.getAttribute('id'));\n            if (id != n + 1)\n                return null;\n            ds.appendColumn(col.getAttribute('name'), col.getAttribute('type'), nodeText(col));\n        }\n        let rowidx = 0;\n        for (let row of findNodes(findNode(root, 'Content'), 'Row')) {\n            if (parseInt(row.getAttribute('id')) != rowidx + 1)\n                return null;\n            ds.appendRow();\n            for (let col of findNodes(row, 'Cell')) {\n                let colidx = parseInt(col.getAttribute('id')) - 1;\n                let ct = ds.colType(colidx), val = nodeText(col);\n                if (val == '') { }\n                else if (ct == \"molecule\")\n                    ds.setObject(rowidx, colidx, val);\n                else if (ct == \"string\")\n                    ds.setString(rowidx, colidx, val);\n                else if (ct == \"real\")\n                    ds.setReal(rowidx, colidx, parseFloat(val));\n                else if (ct == \"integer\")\n                    ds.setInteger(rowidx, colidx, parseInt(val));\n                else if (ct == \"boolean\")\n                    ds.setBoolean(rowidx, colidx, val == 'true' ? true : val == 'false' ? false : null);\n                else if (ct == \"extend\")\n                    ds.setExtend(rowidx, colidx, val);\n                col = col.nextElementSibling;\n                colidx++;\n            }\n            row = row.nextElementSibling;\n            rowidx++;\n        }\n        return ds;\n    }\n    static readJSON(json) {\n        if (!json.colData || !json.rowData)\n            throw 'Not a JSON-formatted datasheet.';\n        return new DataSheet(deepClone(json));\n    }\n    static writeXML(ds) {\n        let xml;\n        if (XML.customParser)\n            xml = new XML.customParser().parseFromString('<DataSheet/>', 'application/xml');\n        else\n            xml = new DOMParser().parseFromString('<DataSheet/>', 'application/xml');\n        let summary = xml.createElement('Summary');\n        xml.documentElement.appendChild(summary);\n        let title = xml.createElement('Title'), descr = xml.createElement('Description');\n        summary.appendChild(title);\n        title.appendChild(xml.createTextNode(ds.title));\n        summary.appendChild(descr);\n        descr.appendChild(xml.createCDATASection(ds.description));\n        let extension = xml.createElement('Extension');\n        xml.documentElement.appendChild(extension);\n        for (let n = 0; n < ds.numExtensions; n++) {\n            let ext = xml.createElement('Ext');\n            extension.appendChild(ext);\n            ext.setAttribute('name', ds.getExtName(n));\n            ext.setAttribute('type', ds.getExtType(n));\n            ext.appendChild(xml.createCDATASection(ds.getExtData(n)));\n        }\n        let header = xml.createElement('Header');\n        xml.documentElement.appendChild(header);\n        header.setAttribute('nrows', ds.numRows.toString());\n        header.setAttribute('ncols', ds.numCols.toString());\n        for (let n = 0; n < ds.numCols; n++) {\n            let column = xml.createElement('Column');\n            header.appendChild(column);\n            column.setAttribute('id', (n + 1).toString());\n            column.setAttribute('name', ds.colName(n));\n            column.setAttribute('type', ds.colType(n));\n            column.appendChild(xml.createTextNode(ds.colDescr(n)));\n        }\n        let content = xml.createElement('Content');\n        xml.documentElement.appendChild(content);\n        for (let r = 0; r < ds.numRows; r++) {\n            let row = xml.createElement('Row');\n            row.setAttribute('id', (r + 1).toString());\n            content.appendChild(row);\n            for (let c = 0; c < ds.numCols; c++) {\n                let cell = xml.createElement('Cell');\n                cell.setAttribute('id', (c + 1).toString());\n                row.appendChild(cell);\n                let ct = ds.colType(c);\n                let txtNode = null;\n                if (ds.isNull(r, c)) { }\n                else if (ct == \"molecule\") {\n                    let obj = ds.getObject(r, c);\n                    if (obj instanceof Molecule)\n                        obj = MoleculeStream.writeNative(obj);\n                    txtNode = xml.createCDATASection(obj);\n                }\n                else if (ct == \"string\")\n                    txtNode = xml.createCDATASection(ds.getString(r, c));\n                else if (ct == \"real\")\n                    txtNode = xml.createTextNode(ds.getReal(r, c).toString());\n                else if (ct == \"integer\")\n                    txtNode = xml.createTextNode(ds.getInteger(r, c).toString());\n                else if (ct == \"boolean\")\n                    txtNode = xml.createTextNode(ds.getBoolean(r, c).toString());\n                else if (ct == \"extend\")\n                    txtNode = xml.createCDATASection(ds.getExtend(r, c));\n                if (txtNode != null)\n                    cell.appendChild(txtNode);\n            }\n        }\n        if (XML.customSerial)\n            return new XML.customSerial().serializeToString(xml.documentElement);\n        else\n            return new XMLSerializer().serializeToString(xml.documentElement);\n    }\n    static writeJSON(ds) {\n        let data = ds.data;\n        let nrow = ds.numRows, ncol = ds.numCols;\n        let rowData = new Array(nrow);\n        for (let n = 0; n < nrow; n++)\n            rowData[n] = new Array(ncol);\n        for (let c = 0; c < ncol; c++) {\n            let doConvert = ds.colType(c) == \"molecule\";\n            for (let r = 0; r < nrow; r++) {\n                let val = data.rowData[r][c];\n                if (val != null && doConvert)\n                    val = val.toString();\n                rowData[r][c] = val;\n            }\n        }\n        let json = {\n            title: data.title,\n            description: data.description,\n            colData: deepClone(data.colData),\n            rowData: rowData,\n            extData: deepClone(data.extData),\n        };\n        return json;\n    }\n}\n//# sourceMappingURL=DataSheetStream.js.map","import { Molecule } from '../data/Molecule';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiff, DEGRAD, invZ, norm2_xy, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { BLineType } from './ArrangeMolecule';\nimport { MetaVector, TextAlign } from './MetaVector';\nimport { RenderMnemonicType } from './Rendering';\nexport class DrawMolecule {\n    constructor(layout, vg) {\n        this.layout = layout;\n        this.vg = vg;\n        this.mnemonics = null;\n        this.mol = layout.getMolecule();\n        this.policy = layout.getPolicy();\n        this.effects = layout.getEffects();\n        this.scale = layout.getScale();\n        this.invScale = 1.0 / this.scale;\n    }\n    getMolecule() { return this.mol; }\n    getMetaVector() { return this.vg; }\n    getLayout() { return this.layout; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    draw() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        let DRAW_SPACE = false;\n        if (DRAW_SPACE) {\n            let bounds = this.layout.determineBoundary();\n            this.vg.drawRect(bounds[0], bounds[1], bounds[2] - bounds[0], bounds[3] - bounds[1], 0xFF0000, 1, MetaVector.NOCOLOUR);\n            for (let n = 0; n < this.layout.numSpace(); n++) {\n                let spc = this.layout.getSpace(n);\n                this.vg.drawRect(spc.box.x, spc.box.y, spc.box.w, spc.box.h, MetaVector.NOCOLOUR, 0, 0xE0E0E0);\n                if (spc.px != null && spc.py != null && spc.px.length > 2)\n                    this.vg.drawPoly(spc.px, spc.py, 0x000000, 1, 0x808080FF, true);\n            }\n        }\n        this.drawUnderEffects();\n        let { mol, layout, effects, policy, vg } = this;\n        let hideBonds = new Set(effects.hideBonds);\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (mol.bondType(i) == Molecule.BONDTYPE_INCLINED && !hideBonds.has(i)) {\n                let atom = mol.bondTo(i);\n                if (layout.getPoint(atom - 1).text)\n                    continue;\n                for (let j of mol.atomAdjBonds(atom))\n                    if (j != i && mol.bondType(j) == Molecule.BONDTYPE_INCLINED && mol.bondTo(j) == atom && !hideBonds.has(j)) {\n                        let b1 = layout.getLines().find((b) => b.bnum == i);\n                        let b2 = layout.getLines().find((b) => b.bnum == j);\n                        let th1 = Math.atan2(b1.line.y1 - b1.line.y2, b1.line.x1 - b1.line.x2);\n                        let th2 = Math.atan2(b2.line.y1 - b2.line.y2, b2.line.x1 - b2.line.x2);\n                        if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                            this.drawFusedWedge(b1, b2);\n                            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Artifact, 'Fused', [b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2]);\n                            hideBonds.add(i);\n                            hideBonds.add(j);\n                            break;\n                        }\n                    }\n            }\n        for (let n = 0; n < layout.numLines(); n++) {\n            let b = layout.getLine(n);\n            if (hideBonds.has(b.bnum))\n                continue;\n            if (b.type == BLineType.Normal) {\n                vg.drawLine(b.line.x1, b.line.y1, b.line.x2, b.line.y2, b.col, b.size);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Bond, 'L', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Inclined) {\n                this.drawBondInclined(b);\n                (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Bond, 'I', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Declined) {\n                this.drawBondDeclined(b);\n                (_d = this.mnemonics) === null || _d === void 0 ? void 0 : _d.append(RenderMnemonicType.Bond, 'D', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Unknown) {\n                this.drawBondUnknown(b);\n                (_e = this.mnemonics) === null || _e === void 0 ? void 0 : _e.append(RenderMnemonicType.Bond, 'U', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n                this.drawBondDotted(b);\n                (_f = this.mnemonics) === null || _f === void 0 ? void 0 : _f.append(RenderMnemonicType.Bond, 'O', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.IncDouble || b.type == BLineType.IncTriple || b.type == BLineType.IncQuadruple) {\n                this.drawBondIncMulti(b);\n                (_g = this.mnemonics) === null || _g === void 0 ? void 0 : _g.append(RenderMnemonicType.Bond, 'M', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n        }\n        let fg = policy.data.foreground;\n        for (let r of layout.getRings()) {\n            if (r.theta != 0) {\n                var bez = GeomUtil.createBezierEllipse(r.cx, r.cy, r.rw, r.rh, r.theta);\n                vg.drawPath(bez.px, bez.py, bez.ctrl, true, fg, r.size, MetaVector.NOCOLOUR, false);\n                (_h = this.mnemonics) === null || _h === void 0 ? void 0 : _h.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh, r.theta]);\n            }\n            else {\n                vg.drawOval(r.cx, r.cy, r.rw, r.rh, fg, r.size, MetaVector.NOCOLOUR);\n                (_j = this.mnemonics) === null || _j === void 0 ? void 0 : _j.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh]);\n            }\n        }\n        for (let p of layout.getPaths()) {\n            vg.drawPath(p.px, p.py, p.ctrl, false, fg, p.size, MetaVector.NOCOLOUR, false);\n            (_k = this.mnemonics) === null || _k === void 0 ? void 0 : _k.append(RenderMnemonicType.Artifact, 'Path', [...p.px, ...p.py]);\n        }\n        for (let n = 0; n < layout.numPoints(); n++) {\n            let p = layout.getPoint(n);\n            if (effects.hideAtoms.has(p.anum))\n                continue;\n            let txt = p.text;\n            let cx = p.oval.cx, cy = p.oval.cy, rw = p.oval.rw;\n            if (txt == null) {\n                (_l = this.mnemonics) === null || _l === void 0 ? void 0 : _l.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n                continue;\n            }\n            let fsz = p.fsz;\n            let col = p.col;\n            while (txt.endsWith('.')) {\n                let dw = rw / txt.length;\n                let r = fsz * 0.15;\n                vg.drawOval(cx + rw - dw, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n                cx -= dw;\n                rw -= dw;\n                txt = txt.substring(0, txt.length - 1);\n            }\n            while (txt.startsWith('+')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                vg.drawLine(x, y - r, x, y + r, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            while (txt.startsWith('-')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            if (txt.length > 0) {\n                vg.drawText(cx, cy, txt, fsz, col, TextAlign.Centre | TextAlign.Middle, p.rotation || 0);\n                (_m = this.mnemonics) === null || _m === void 0 ? void 0 : _m.append(RenderMnemonicType.Atom, txt, [cx, cy]);\n            }\n            else\n                (_o = this.mnemonics) === null || _o === void 0 ? void 0 : _o.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n        }\n        this.drawOverEffects();\n    }\n    drawUnderEffects() {\n        var _a, _b, _c;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let n = 0, num = Math.min(effects.atomFrameDotSz.length, mol.numAtoms); n < num; n++) {\n            if (effects.hideAtoms.has(n + 1))\n                continue;\n            let dw = effects.atomFrameDotSz[n] * scale, col = effects.atomFrameCol[n];\n            let a = layout.getPoint(n);\n            let rw = a.oval.rw + 0.1 * scale, rh = a.oval.rh + 0.1 * scale;\n            let wdots = Math.ceil(2 * rw / (3 * dw));\n            let hdots = Math.ceil(2 * rh / (3 * dw));\n            let wspc = 2 * rw / wdots, hspc = 2 * rh / hdots;\n            for (let i = 0; i <= wdots; i++) {\n                let x = a.oval.cx - rw + i * wspc;\n                vg.drawOval(x, a.oval.cy - rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let i = 1; i < hdots; i++) {\n                let y = a.oval.cy - rh + i * hspc;\n                vg.drawOval(a.oval.cx - rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Dot', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedRectOutline) {\n            let atom = parseInt(key), col = effects.dottedRectOutline[key];\n            let a = layout.getPoint(atom - 1);\n            let rw = Math.max(a.oval.rw, 0.2 * scale), rh = Math.max(a.oval.rh, 0.2 * scale);\n            let sz = 0.05 * scale;\n            let xdots = Math.max(1, Math.round(rw / (2 * sz)));\n            let ydots = Math.max(1, Math.round(rh / (2 * sz)));\n            let invX = (2 * rw) / xdots, invY = (2 * rh) / ydots;\n            for (let n = 0; n <= xdots; n++) {\n                let x = a.oval.cx - rw + n * invX;\n                vg.drawOval(x, a.oval.cy - rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let n = 1; n < ydots; n++) {\n                let y = a.oval.cy - rh + n * invY;\n                vg.drawOval(a.oval.cx - rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Rect', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedBondCross) {\n            let bond = parseInt(key), col = effects.dottedBondCross[key];\n            let x1 = 0, y1 = 0, x2 = 0, y2 = 0, bcount = 0;\n            for (let n = 0; n < layout.numLines(); n++) {\n                let b = layout.getLine(n);\n                if (b.bnum == bond) {\n                    x1 += b.line.x1;\n                    y1 += b.line.y1;\n                    x2 += b.line.x2;\n                    y2 += b.line.y2;\n                    bcount += 1;\n                }\n            }\n            if (bcount > 1) {\n                let inv = 1 / bcount;\n                [x1, y1, x2, y2] = [x1 * inv, y1 * inv, x2 * inv, y2 * inv];\n            }\n            let dx = x2 - x1, dy = y2 - y1;\n            let inv = 0.2 * scale * invZ(norm_xy(dx, dy)), ox = dy * inv, oy = -dx * inv;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), sz = 0.05 * scale;\n            for (let p of [-2, -1, 1, 2]) {\n                let x = cx + p * ox, y = cy + p * oy;\n                vg.drawOval(x, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Effect, 'Crossing', [x1, y1, x2, y2]);\n        }\n    }\n    drawOverEffects() {\n        var _a, _b;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let a of effects.overlapAtoms) {\n            let p = layout.getPoint(a - 1);\n            let rad = scale * 0.2;\n            vg.drawLine(p.oval.cx - rad, p.oval.cy - rad, p.oval.cx + rad, p.oval.cy + rad, 0xFF0000, 1);\n            vg.drawLine(p.oval.cx + rad, p.oval.cy - rad, p.oval.cx - rad, p.oval.cy + rad, 0xFF0000, 1);\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Overlap', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n        }\n        for (let n = 0, num = Math.min(effects.atomCircleSz.length, mol.numAtoms); n < num; n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * scale, col = effects.atomCircleCol[n];\n                let p = layout.getPoint(n);\n                vg.drawOval(p.oval.cx, p.oval.cy, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Circle', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n            }\n    }\n    drawBondInclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        let px = [x1, x2 - ox, x2 + ox], py = [y1, y2 - oy, y2 + oy];\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 2) {\n            let other = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other != null) {\n                        other = null;\n                        break;\n                    }\n                    other = o;\n                }\n            }\n            if (other != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other.line.y1 - other.line.y2, other.line.x1 - other.line.x2);\n                if (b.bto == other.bfr)\n                    th2 += Math.PI;\n                let diff = Math.abs(angleDiff(th1, th2));\n                if (diff > 105 * DEGRAD && diff < 135 * DEGRAD) {\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    px[1] = ixy1[0];\n                    py[1] = ixy1[1];\n                    px[2] = ixy2[0];\n                    py[2] = ixy2[1];\n                    let dx1 = px[1] - px[0], dy1 = py[1] - py[0], inv1 = 0.5 * other.size / norm_xy(dx1, dy1);\n                    px[1] += dx1 * inv1;\n                    py[1] += dy1 * inv1;\n                    let dx2 = px[2] - px[0], dy2 = py[2] - py[0], inv2 = 0.5 * other.size / norm_xy(dx2, dy2);\n                    px[2] += dx2 * inv1;\n                    py[2] += dy2 * inv1;\n                }\n            }\n        }\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 3) {\n            let other1 = null, other2 = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other1 == null)\n                        other1 = o;\n                    else if (other2 == null)\n                        other2 = o;\n                    else {\n                        other1 = other2 = null;\n                        break;\n                    }\n                }\n            }\n            if (other1 != null && other2 != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other1.line.y1 - other1.line.y2, other1.line.x1 - other1.line.x2);\n                let th3 = Math.atan2(other2.line.y1 - other2.line.y2, other2.line.x1 - other2.line.x2);\n                if (b.bto == other1.bfr)\n                    th2 += Math.PI;\n                if (b.bto == other2.bfr)\n                    th3 += Math.PI;\n                let dth1 = angleDiff(th1, th2), diff1 = Math.abs(dth1);\n                let dth2 = angleDiff(th1, th3), diff2 = Math.abs(dth2);\n                let diff3 = Math.abs(angleDiff(th2, th3));\n                if (diff1 > 105 * DEGRAD && diff1 < 135 * DEGRAD ||\n                    diff2 > 105 * DEGRAD && diff2 < 135 * DEGRAD ||\n                    diff3 > 105 * DEGRAD && diff3 < 135 * DEGRAD) {\n                    if (dth1 < 0)\n                        [other1, other2] = [other2, other1];\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other1.line.x1, other1.line.y1, other1.line.x2, other1.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other2.line.x1, other2.line.y1, other2.line.x2, other2.line.y2);\n                    px = [x1, ixy1[0], x2, ixy2[0]];\n                    py = [y1, ixy1[1], y2, ixy2[1]];\n                }\n            }\n        }\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, col, true);\n    }\n    drawFusedWedge(b1, b2) {\n        const terminalPoints = (b, other) => {\n            let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n            let dx = x2 - x1, dy = y2 - y1;\n            let norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            let ox = norm * dy, oy = -norm * dx;\n            let tx1 = x2 - ox, ty1 = y2 - oy, tx2 = x2 + ox, ty2 = y2 + oy;\n            let dsq1 = norm2_xy(tx1 - other.line.x1, ty1 - other.line.y1);\n            let dsq2 = norm2_xy(tx2 - other.line.x1, ty2 - other.line.y1);\n            if (dsq1 > dsq2)\n                return { outerX: tx1, outerY: ty1, innerX: tx2, innerY: ty2 };\n            else\n                return { outerX: tx2, outerY: ty2, innerX: tx1, innerY: ty1 };\n        };\n        let u = terminalPoints(b1, b2), v = terminalPoints(b2, b1);\n        let [innerX, innerY] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, u.innerX, u.innerY, b2.line.x1, b2.line.y1, v.innerX, v.innerY);\n        let px = [b1.line.x1, u.outerX, v.outerX, b2.line.x1, innerX];\n        let py = [b1.line.y1, u.outerY, v.outerY, b2.line.y1, innerY];\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, b1.col, true);\n    }\n    drawBondDeclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 2.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx, invSteps = 1.0 / (nsteps + 1);\n        let holdout = this.mol.atomAdjCount(b.bto) == 1 && this.layout.getPoint(b.bto - 1).text == null ? 1 : 1 - (0.15 * this.scale) / ext;\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let cx = x1 + i * dx * invSteps * holdout, cy = y1 + i * dy * invSteps * holdout;\n            let ix = ox * i * invSteps, iy = oy * i * invSteps;\n            this.vg.drawLine(cx - ix, cy - iy, cx + ix, cy + iy, col, size);\n        }\n    }\n    drawBondUnknown(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 3.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx;\n        let sz = 1 + 3 * (nsteps + 1);\n        let x = Vec.numberArray(0, sz), y = Vec.numberArray(0, sz), ctrl = Vec.booleanArray(false, sz);\n        x[0] = x1;\n        y[0] = y1;\n        ctrl[0] = false;\n        for (let i = 0, j = 1; i <= nsteps; i++, j += 3) {\n            let ax = x1 + i * dx / (nsteps + 1), ay = y1 + i * dy / (nsteps + 1);\n            let cx = x1 + (i + 1) * dx / (nsteps + 1), cy = y1 + (i + 1) * dy / (nsteps + 1);\n            let bx = (ax + cx) / 2, by = (ay + cy) / 2;\n            let sign = i % 2 == 0 ? 1 : -1;\n            x[j] = ax;\n            x[j + 1] = bx + sign * ox;\n            x[j + 2] = cx;\n            y[j] = ay;\n            y[j + 1] = by + sign * oy;\n            y[j + 2] = cy;\n            ctrl[j] = true;\n            ctrl[j + 1] = true;\n            ctrl[j + 2] = false;\n        }\n        this.vg.drawPath(x, y, ctrl, false, col, size, MetaVector.NOCOLOUR, false);\n    }\n    drawBondDotted(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size;\n        let radius = size, dist = norm_xy(dx, dy);\n        if (dist < 0.01)\n            return;\n        let nudge = 0.5 * size / dist;\n        x1 += nudge * dx;\n        y1 += nudge * dy;\n        x2 -= nudge * dx;\n        y2 -= nudge * dy;\n        dx = x2 - x1;\n        dy = y2 - y1;\n        let nsteps = Math.ceil(0.2 * dist / radius);\n        let invSteps = 1.0 / (nsteps + 1);\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let r = radius;\n            if (b.type == BLineType.DotDir)\n                r *= 1 + (i * (1.0 / (nsteps + 2)) - 0.5);\n            let cx = x1 + i * dx * invSteps, cy = y1 + i * dy * invSteps;\n            this.vg.drawOval(cx, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n        }\n    }\n    drawBondIncMulti(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        this.vg.drawPoly([x1, x2 - ox, x2 + ox], [y1, y2 - oy, y2 + oy], col, this.scale * 0.05, MetaVector.NOCOLOUR, true);\n        if (b.type == BLineType.IncDouble) {\n            this.vg.drawLine(x1, y1, x2, y2, col, this.scale * 0.03);\n        }\n        else {\n            this.vg.drawLine(x1, y1, x2 + 0.33 * ox, y2 + 0.33 * oy, col, this.scale * 0.03);\n            this.vg.drawLine(x1, y1, x2 - 0.33 * ox, y2 - 0.33 * oy, col, this.scale * 0.03);\n        }\n    }\n}\n//# sourceMappingURL=DrawMolecule.js.map","export class ButtonBank {\n    constructor() {\n        this.isSubLevel = false;\n        this.buttons = [];\n    }\n    init() { }\n    claimKey(event) { return false; }\n    bankClosed() { }\n    static matchKey(event, mnemonic, key) {\n        if (mnemonic == null || mnemonic == '')\n            return false;\n        let mshift = false, mctrl = false, malt = false, mmeta = false, mkey = mnemonic;\n        while (true) {\n            if (mkey.startsWith('Shift+')) {\n                mshift = true;\n                mkey = mkey.substring(6);\n            }\n            else if (mkey.startsWith('Ctrl+')) {\n                mctrl = true;\n                mkey = mkey.substring(5);\n            }\n            else if (mkey.startsWith('Alt+')) {\n                malt = true;\n                mkey = mkey.substring(4);\n            }\n            else if (mkey.startsWith('Cmd+')) {\n                mmeta = true;\n                mkey = mkey.substring(4);\n            }\n            else\n                break;\n        }\n        if (mshift != event.shiftKey)\n            return false;\n        if (mctrl != event.ctrlKey)\n            return false;\n        if (malt != event.altKey)\n            return false;\n        if (mmeta != event.metaKey)\n            return false;\n        if (key)\n            mkey = key;\n        return mkey.toLowerCase() == event.key.toLowerCase();\n    }\n}\n//# sourceMappingURL=ButtonBank.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, DEGRAD, norm2_xyz, norm_xyz } from '../util/util';\nimport { Permutation, Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nclass Stereochemistry {\n    constructor(meta) {\n        this.meta = meta;\n        this.mol = meta.mol;\n        this.priority = Vec.numberArray(0, this.mol.numAtoms);\n        this.chiralTetra = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n        this.cistransBond = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numBonds);\n        this.squarePlanar = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n    }\n    calculate() {\n        this.isH = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = this.mol.numAtoms; n >= 1; n--)\n            this.isH[n - 1] = this.mol.atomElement(n) == 'H';\n        this.buildPriority();\n        this.buildTetraChirality();\n        this.buildBondCisTrans();\n        this.buildPlanarCisTrans();\n        this.buildOctaChirality();\n    }\n    atomPriority(atom) { return this.priority[atom - 1]; }\n    atomTetraChirality(atom) { return this.chiralTetra[atom - 1]; }\n    bondSideStereo(bond) { return this.cistransBond[bond - 1]; }\n    atomPlanarStereo(atom) { return this.squarePlanar[atom - 1]; }\n    getPriorities() { return this.priority.slice(0); }\n    getAtomTetraChiral() { return this.chiralTetra.slice(0); }\n    getBondSideStereo() { return this.cistransBond.slice(0); }\n    static create(meta) {\n        let stereo = new Stereochemistry(meta);\n        stereo.calculate();\n        return stereo;\n    }\n    static rubricTetrahedral(mol, atom) {\n        if (mol.atomAdjCount(atom) < 3 || mol.atomAdjCount(atom) + mol.atomHydrogens(atom) != 4)\n            return null;\n        let adjBonds = mol.atomAdjBonds(atom);\n        let hasWedge = false;\n        for (let n = 0; n < adjBonds.length; n++) {\n            let bt = mol.bondType(adjBonds[n]);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return null;\n            if (mol.bondFrom(adjBonds[n]) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        if (!hasWedge && !mol.is3D())\n            return null;\n        let adj = mol.atomAdjList(atom);\n        let x = [0, 0, 0, 0];\n        let y = [0, 0, 0, 0];\n        let z = [0, 0, 0, 0];\n        let numShort = 0, numWedges = 0;\n        for (let n = 0; n < adjBonds.length; n++) {\n            const bfr = mol.bondFrom(adjBonds[n]), bt = mol.bondType(adjBonds[n]);\n            x[n] = mol.atomX(adj[n]) - mol.atomX(atom);\n            y[n] = mol.atomY(adj[n]) - mol.atomY(atom);\n            if (mol.is3D()) {\n                z[n] = mol.atomZ(adj[n]) - mol.atomZ(atom);\n            }\n            else if (bfr == atom) {\n                if (bt == Molecule.BONDTYPE_INCLINED) {\n                    z[n] = 1;\n                    numWedges++;\n                }\n                else if (bt == Molecule.BONDTYPE_DECLINED) {\n                    z[n] = -1;\n                    numWedges++;\n                }\n            }\n            let dsq = norm_xyz(x[n], y[n], z[n]);\n            if (dsq < 0.01 * 0.01) {\n                numShort++;\n                if (numShort > 1)\n                    return null;\n            }\n        }\n        if (adjBonds.length == 3) {\n            adj.push(0);\n            if (!mol.is3D() && numWedges == 1) {\n                let th0 = Math.atan2(y[0], x[0]), th1 = Math.atan2(y[1], x[1]), th2 = Math.atan2(y[2], x[2]);\n                let i1 = 1, i2 = 2;\n                if (angleDiffPos(th1, th0) > angleDiffPos(th2, th0)) {\n                    i2 = 1;\n                    i1 = 2;\n                }\n                x[0] = 1.5;\n                y[0] = 0;\n                x[1] = -0.75;\n                y[i1] = 1.3;\n                x[2] = -0.75;\n                y[i2] = -1.3;\n            }\n            else {\n                x[3] = -(x[0] + x[1] + x[2]);\n                y[3] = -(y[0] + y[1] + y[2]);\n                z[3] = -(z[0] + z[1] + z[2]);\n                let dsq = norm2_xyz(x[3], y[3], z[3]);\n                if (dsq < 0.01 * 0.01)\n                    return null;\n                let inv = 1.0 / Math.sqrt(dsq);\n                x[3] *= inv;\n                y[3] *= inv;\n                z[3] *= inv;\n            }\n        }\n        let one = 0, two = 0;\n        for (let i = 1; i <= 6; i++) {\n            let a = 0, b = 0;\n            if (i == 1) {\n                a = 1;\n                b = 2;\n            }\n            else if (i == 2) {\n                a = 2;\n                b = 3;\n            }\n            else if (i == 3) {\n                a = 3;\n                b = 1;\n            }\n            else if (i == 4) {\n                a = 2;\n                b = 1;\n            }\n            else if (i == 5) {\n                a = 3;\n                b = 2;\n            }\n            else if (i == 6) {\n                a = 1;\n                b = 3;\n            }\n            let xx = y[a] * z[b] - y[b] * z[a] - x[0];\n            let yy = z[a] * x[b] - z[b] * x[a] - y[0];\n            let zz = x[a] * y[b] - x[b] * y[a] - z[0];\n            if (i <= 3)\n                one += xx * xx + yy * yy + zz * zz;\n            else\n                two += xx * xx + yy * yy + zz * zz;\n        }\n        if (two > one)\n            Vec.swap(adj, 2, 3);\n        return adj;\n    }\n    static rubricSquarePlanar(mol, atom) {\n        if (mol.atomAdjCount(atom) != 4)\n            return null;\n        if (!mol.is3D()) {\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(atom)) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    ninc++;\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    ndec++;\n            }\n            if (ninc == 2 && ndec == 2) { }\n            else if (ninc == 2 && ndec == 0) { }\n            else if (ninc == 0 && ndec == 2) { }\n            else\n                return null;\n        }\n        let adj = mol.atomAdjList(atom);\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v1 = Vec.sub(MolUtil.atomVec3(mol, adj[0]), v0);\n        let v2 = Vec.sub(MolUtil.atomVec3(mol, adj[1]), v0);\n        let v3 = Vec.sub(MolUtil.atomVec3(mol, adj[2]), v0);\n        let v4 = Vec.sub(MolUtil.atomVec3(mol, adj[3]), v0);\n        for (let v of [v1, v2, v3, v4]) {\n            let dsq = norm2_xyz(v[0], v[1], v[2]);\n            if (dsq < 0.01 * 0.01)\n                continue;\n            let inv = 1.0 / Math.sqrt(dsq);\n            v[0] *= inv;\n            v[1] *= inv;\n            v[2] *= inv;\n        }\n        let d2 = GeomUtil.dist2(v1, v2), d3 = GeomUtil.dist2(v1, v3), d4 = GeomUtil.dist2(v1, v4);\n        if (d2 > d3 && d2 >= d4) {\n            Vec.swap(adj, 1, 2);\n            [v2, v3] = [v3, v2];\n        }\n        else if (d4 > d3) {\n            Vec.swap(adj, 3, 2);\n            [v3, v4] = [v4, v3];\n        }\n        const MIN_ANGLE = (mol.is3D() ? 80 : 45) * DEGRAD;\n        const MAX_ANGLE = (mol.is3D() ? 100 : 135) * DEGRAD;\n        const th12 = GeomUtil.acuteAngle(v1, v2);\n        if (th12 < MIN_ANGLE || th12 > MAX_ANGLE)\n            return null;\n        const th23 = GeomUtil.acuteAngle(v2, v3);\n        if (th23 < MIN_ANGLE || th23 > MAX_ANGLE)\n            return null;\n        const th34 = GeomUtil.acuteAngle(v3, v4);\n        if (th34 < MIN_ANGLE || th34 > MAX_ANGLE)\n            return null;\n        const th41 = GeomUtil.acuteAngle(v4, v1);\n        if (th41 < MIN_ANGLE || th41 > MAX_ANGLE)\n            return null;\n        return adj;\n    }\n    static rubricBipyrimidal(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 4 && nadj != 5)\n            return null;\n        let atom2 = 0, atom3 = 0;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (!mol.is3D()) {\n            for (let n = 0; n < adj.length; n++) {\n                if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_INCLINED) {\n                    if (atom2 > 0)\n                        return null;\n                    atom2 = adj[n];\n                }\n                else if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_DECLINED) {\n                    if (atom3 > 0)\n                        return null;\n                    atom3 = adj[n];\n                }\n            }\n            if (atom2 == 0 || atom3 == 0)\n                return null;\n            let th1 = Math.atan2(mol.atomY(atom2) - mol.atomY(atom), mol.atomX(atom2) - mol.atomX(atom));\n            let th2 = Math.atan2(mol.atomY(atom3) - mol.atomY(atom), mol.atomX(atom3) - mol.atomX(atom));\n            if (Math.abs(angleDiff(th1, th2)) > 160 * DEGRAD)\n                return null;\n        }\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], []];\n        const THRESH = 0.1;\n        for (let n = 0; n < nadj; n++) {\n            v[n] = Vec.sub(MolUtil.atomVec3(mol, adj[n]), v0);\n            const mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1.0 / mag);\n            if (adj[n] == atom2)\n                v[n][2] += 1;\n            else if (adj[n] == atom3)\n                v[n][2] -= 1;\n        }\n        let atom4 = 0, atom5 = 0;\n        const ANGLE_OPPOSITE = 175 * DEGRAD;\n        for (let i = 0; i < nadj - 1; i++)\n            if (adj[i] != atom2 && adj[i] != atom3) {\n                for (let j = i + 1; j < nadj; j++)\n                    if (adj[j] != atom2 && adj[j] != atom3) {\n                        let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                        if (theta > ANGLE_OPPOSITE) {\n                            if (atom4 != 0)\n                                return null;\n                            atom4 = adj[i];\n                            atom5 = adj[j];\n                        }\n                    }\n            }\n        if (mol.is3D()) {\n            for (let a of adj)\n                if (a != atom4 && a != atom5) {\n                    if (atom2 == 0)\n                        atom2 = a;\n                    else if (atom3 == 0)\n                        atom3 = a;\n                }\n        }\n        if (!atom4 || !atom5)\n            return null;\n        let v1 = null;\n        let v2 = v[adj.indexOf(atom2)];\n        let v3 = v[adj.indexOf(atom3)];\n        let v4 = v[adj.indexOf(atom4)];\n        let v5 = v[adj.indexOf(atom5)];\n        let atom1 = 0;\n        if (nadj == 5) {\n            for (let n = 0; n < nadj; n++)\n                if (adj[n] != atom2 && adj[n] != atom3 && adj[n] != atom4 && adj[n] != atom5) {\n                    atom1 = adj[n];\n                    v1 = v[n];\n                    break;\n                }\n        }\n        else {\n            v1 = [0, 0, 0];\n            v1 = Vec.sub(v1, v2);\n            v1 = Vec.sub(v1, v3);\n            const mag = GeomUtil.magnitude(v1);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v1, 1.0 / mag);\n        }\n        let v45 = Vec.sub(v5, v4);\n        let cross = GeomUtil.crossProduct(v45, v1);\n        let dsq2 = GeomUtil.dist2(cross, v2), dsq3 = GeomUtil.dist2(cross, v3);\n        if (dsq2 < dsq3)\n            return [atom1, atom2, atom3, atom4, atom5];\n        else\n            return [atom1, atom2, atom3, atom5, atom4];\n    }\n    static rubricOctahedral(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 5 && nadj != 6)\n            return null;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (nadj == 5) {\n            adj.push(0);\n            bonds.push(0);\n        }\n        if (!mol.is3D()) {\n            let numWedges = 0;\n            for (let b of bonds)\n                if (b > 0) {\n                    const bt = mol.bondType(b);\n                    if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                        numWedges++;\n                }\n            if ((nadj == 5 && numWedges < 1) || (nadj == 6 && numWedges < 2))\n                return null;\n        }\n        const THRESH = 0.1;\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], [], []];\n        for (let n = 0; n < nadj; n++) {\n            v[n] = MolUtil.atomVec3(mol, adj[n]);\n            Vec.subFromArray(v[n], v0);\n            let mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1 / mag);\n            let bt = mol.bondType(bonds[n]);\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] += 1;\n                else\n                    v[n][2] -= 1;\n            }\n            else if (bt == Molecule.BONDTYPE_DECLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] -= 1;\n                else\n                    v[n][2] += 1;\n            }\n        }\n        if (nadj == 5) {\n            v[5] = [0, 0, 0];\n            for (let n = 0; n < 5; n++)\n                Vec.subFromArray(v[5], v[n]);\n            let mag = GeomUtil.magnitude(v[5]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[5], 1 / mag);\n        }\n        let slots = [-1, -1, -1, -1, 0, 1];\n        let bestOpposite = GeomUtil.acuteAngle(v[0], v[1]);\n        for (let i = 0; i < 5; i++)\n            for (let j = (i == 0 ? 2 : i + 1); j < 6; j++) {\n                let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                if (theta > bestOpposite) {\n                    slots[4] = i;\n                    slots[5] = j;\n                    bestOpposite = theta;\n                }\n            }\n        let axial = Vec.sub(v[slots[5]], v[slots[4]]);\n        let bestOrthogonal = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 6; n++)\n            if (n != slots[4] && n != slots[5]) {\n                let delta = Math.abs((90 * DEGRAD) - GeomUtil.acuteAngle(v[n], axial));\n                if (delta < bestOrthogonal) {\n                    slots[0] = n;\n                    bestOrthogonal = delta;\n                }\n            }\n        for (let s = 1; s <= 2; s++) {\n            let cross = GeomUtil.crossProduct(axial, v[slots[s - 1]]);\n            let bestOrient = Number.POSITIVE_INFINITY;\n            for (let n = 0; n < 6; n++) {\n                if (n == slots[4] || n == slots[5] || n == slots[0] || n == slots[1])\n                    continue;\n                let delta = GeomUtil.acuteAngle(v[n], cross);\n                if (delta < bestOrient) {\n                    slots[s] = n;\n                    bestOrient = delta;\n                }\n            }\n        }\n        for (let n = 0; n < 6; n++)\n            if (slots.indexOf(n) < 0) {\n                slots[3] = n;\n                break;\n            }\n        let rubric = [0, 0, 0, 0, 0, 0];\n        for (let n = 0; n < 6; n++)\n            rubric[n] = slots[n] < 0 ? 0 : adj[slots[n]];\n        return rubric;\n    }\n    static rubricBondSides(mol, bond) {\n        const bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        const nfr = mol.atomAdjCount(bfr), nto = mol.atomAdjCount(bto);\n        if (nfr < 2 || nfr > 3 || nto < 2 || nto > 3)\n            return null;\n        let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n        let f1 = 0, f2 = 0, t1 = 0, t2 = 0;\n        for (let i = 0; i < adj1.length; i++) {\n            if (adj1[i] != bto) {\n                if (f1 == 0)\n                    f1 = adj1[i];\n                else\n                    f2 = adj1[i];\n            }\n        }\n        for (let i = 0; i < adj2.length; i++) {\n            if (adj2[i] != bfr) {\n                if (t1 == 0)\n                    t1 = adj2[i];\n                else\n                    t2 = adj2[i];\n            }\n        }\n        if (f1 > 0 && f2 > 0 && mol.atomElement(f1) == 'H') {\n            let f = f1;\n            f1 = f2;\n            f2 = f;\n        }\n        if (t1 > 0 && t2 > 0 && mol.atomElement(t1) == 'H') {\n            let t = t1;\n            t1 = t2;\n            t2 = t;\n        }\n        let vfr = MolUtil.atomVec3(mol, bfr), vto = MolUtil.atomVec3(mol, bto);\n        let vbond = Vec.sub(vto, vfr);\n        let vf1 = Vec.sub(MolUtil.atomVec3(mol, f1), vfr), vt1 = Vec.sub(MolUtil.atomVec3(mol, t1), vto);\n        const THRESHSQ = 0.1 * 0.1;\n        let xf1 = GeomUtil.crossProduct(vf1, vbond);\n        if (GeomUtil.magnitude2(xf1) < THRESHSQ)\n            return null;\n        let xt1 = GeomUtil.crossProduct(vt1, vbond);\n        if (GeomUtil.magnitude2(xt1) < THRESHSQ)\n            return null;\n        let xf1N = Vec.neg(xf1);\n        let keepF1T1 = GeomUtil.dist2(xf1, xt1) < GeomUtil.dist2(xf1N, xt1);\n        let keepF2T1 = keepF1T1, keepF1T2 = keepF1T1, keepF2T2 = keepF1T1;\n        let vf2 = null, vt2 = null, xf2 = null, xt2 = null, xf2N = null;\n        if (f2 > 0) {\n            vf2 = Vec.sub(MolUtil.atomVec3(mol, f2), vfr);\n            if (GeomUtil.magnitude2(vf2) < THRESHSQ) {\n                if (mol.atomElement(f2) != 'H')\n                    return null;\n            }\n            else {\n                xf2 = GeomUtil.crossProduct(vf2, vbond);\n                if (GeomUtil.magnitude2(xf2) < THRESHSQ)\n                    return null;\n                xf2N = Vec.neg(xf2);\n                keepF2T1 = GeomUtil.dist2(xf2, xt1) > GeomUtil.dist2(xf2N, xt1);\n            }\n        }\n        if (t2 > 0) {\n            vt2 = Vec.sub(MolUtil.atomVec3(mol, t2), vto);\n            if (GeomUtil.magnitude2(vt2) < THRESHSQ) {\n                if (mol.atomElement(t2) != 'H')\n                    return null;\n            }\n            else {\n                xt2 = GeomUtil.crossProduct(vt2, vbond);\n                if (GeomUtil.magnitude2(xt2) < THRESHSQ)\n                    return null;\n                keepF1T2 = GeomUtil.dist2(xf1, xt2) > GeomUtil.dist2(xf1N, xt2);\n            }\n        }\n        if (xf2 != null && xt2 != null) {\n            keepF2T2 = GeomUtil.dist2(xf2, xt2) < GeomUtil.dist2(xf2N, xt2);\n        }\n        if (keepF1T1 && keepF2T1 && keepF1T2 && keepF2T2)\n            return [f1, f2, t1, t2];\n        if (!keepF1T1 && !keepF2T1 && !keepF1T2 && !keepF2T2)\n            return [f1, f2, t2, t1];\n        return null;\n    }\n    buildTetraChirality() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let haswedge = Vec.booleanArray(false, na);\n        for (let n = 1; n <= nb; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED || mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                haswedge[mol.bondFrom(n) - 1] = true;\n        }\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.chiralTetra[n - 1] = Stereochemistry.STEREO_NONE;\n            let adj = mol.atomAdjList(n);\n            if (!(adj.length == 4 || (adj.length == 3 && mol.atomHydrogens(n) == 1)))\n                continue;\n            if (adj.length == 3 && (this.isH[adj[0] - 1] || this.isH[adj[1] - 1] || this.isH[adj[2] - 1]))\n                continue;\n            for (let i = 0; i < adj.length - 1; i++) {\n                for (let j = i + 1; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        continue skip_atom;\n                }\n            }\n            if (!haswedge[n - 1] && !mol.is3D()) {\n                this.chiralTetra[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricTetrahedral(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            pri = Vec.idxSort(pri);\n            let parity = Permutation.parityIdentity(pri);\n            this.chiralTetra[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildBondCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let sf = [0, 0], st = [0, 0];\n        let ringMask = Vec.booleanArray(false, nb);\n        for (let rsz = 3; rsz <= 7; rsz++) {\n            for (let r of mol.findRingsOfSize(rsz)) {\n                for (let n = 0; n < r.length; n++) {\n                    let b = mol.findBond(r[n], r[n < r.length - 1 ? n + 1 : 0]);\n                    ringMask[b - 1] = true;\n                }\n            }\n        }\n        skip_bond: for (let n = 1; n <= nb; n++) {\n            this.cistransBond[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.bondOrder(n) != 2 || this.meta.isBondAromatic(n) || ringMask[n - 1])\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n            if (adj1.length <= 1 || adj2.length <= 1 || adj1.length > 3 || adj2.length > 3)\n                continue;\n            if (adj1.length == 2 && (this.isH[adj1[0] - 1] || this.isH[adj1[1] - 1]))\n                continue;\n            if (adj2.length == 2 && (this.isH[adj2[0] - 1] || this.isH[adj2[1] - 1]))\n                continue;\n            for (let i = 0; i < adj1.length - 1; i++)\n                if (adj1[i] != bfr)\n                    for (let j = i + 1; j < adj1.length; j++)\n                        if (adj1[j] != bfr)\n                            if (this.priority[adj1[i] - 1] == this.priority[adj1[j] - 1])\n                                continue skip_bond;\n            for (let i = 0; i < adj2.length - 1; i++)\n                if (adj2[i] != bto)\n                    for (let j = i + 1; j < adj2.length; j++)\n                        if (adj2[j] != bto)\n                            if (this.priority[adj2[i] - 1] == this.priority[adj2[j] - 1])\n                                continue skip_bond;\n            if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN) {\n                this.cistransBond[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricBondSides(mol, n);\n            if (rubric == null)\n                continue;\n            let pf1 = rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1];\n            let pf2 = rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1];\n            let pt1 = rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1];\n            let pt2 = rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1];\n            this.cistransBond[n - 1] = ((pf1 < pf2) == (pt1 < pt2)) ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildPlanarCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.squarePlanar[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.atomAdjCount(n) != 4)\n                continue;\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)] < 3)\n                continue;\n            let adj = mol.atomAdjList(n);\n            for (let i = 0; i < adj.length; i++) {\n                let count = 0;\n                for (let j = 0; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        count++;\n                }\n                if (count >= 3)\n                    continue skip_atom;\n            }\n            let rubric = Stereochemistry.rubricSquarePlanar(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            let parity = Permutation.parityOrder(pri);\n            this.squarePlanar[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildOctaChirality() {\n    }\n    buildPriority() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let cipgr = [];\n        for (let n = 0; n < na; n++)\n            cipgr.push(Vec.numberArray(-1, mol.atomHydrogens(n + 1)));\n        for (let n = 1; n <= nb; n++) {\n            let bf = mol.bondFrom(n) - 1, bt = mol.bondTo(n) - 1, bo = mol.bondOrder(n);\n            if (this.meta.isBondAromatic(n))\n                bo = 2;\n            if (bf != bt)\n                for (let i = 0; i < bo; i++) {\n                    cipgr[bf].push(bt);\n                    cipgr[bt].push(bf);\n                }\n        }\n        this.priority = Vec.numberArray(0, na);\n        let anyActualH = false;\n        for (let n = 0; n < na; n++) {\n            this.priority[n] = mol.atomicNumber(n + 1);\n            if (this.priority[n] == 1)\n                anyActualH = true;\n        }\n        let prigr = [];\n        for (let n = 0; n < na; n++)\n            prigr.push([]);\n        while (true) {\n            for (let n = 0; n < na; n++) {\n                let cip = cipgr[n], pri = [];\n                for (let i = 0; i < cip.length; i++)\n                    pri.push(cip[i] < 0 ? 1 : this.priority[cip[i]]);\n                Vec.sort(pri);\n                prigr[n] = pri;\n            }\n            let groups = this.sortAndGroup(this.priority);\n            let nextpri = anyActualH ? 0 : 1;\n            let repartitioned = false;\n            for (let n = 0; n < groups.length; n++) {\n                let g = groups[n];\n                for (let p = 0; p < g.length - 1;) {\n                    const i1 = g[p], i2 = g[p + 1];\n                    let cmp = 0, sz = Math.max(prigr[i1].length, prigr[i2].length);\n                    for (let i = 0; i < sz; i++) {\n                        let v1 = i < prigr[i1].length ? prigr[i1][i] : 0, v2 = i < prigr[i2].length ? prigr[i2][i] : 0;\n                        if (v1 < v2) {\n                            cmp = -1;\n                            break;\n                        }\n                        if (v1 > v2) {\n                            cmp = 1;\n                            break;\n                        }\n                    }\n                    if (cmp > 0) {\n                        g[p] = i2;\n                        g[p + 1] = i1;\n                        if (p > 0)\n                            p--;\n                    }\n                    else\n                        p++;\n                }\n                for (let i = 0; i < g.length; i++) {\n                    if (i == 0)\n                        nextpri++;\n                    else if (prigr[g[i]].length != prigr[g[i - 1]].length) {\n                        nextpri++;\n                        repartitioned = true;\n                    }\n                    else {\n                        for (let j = 0; j < prigr[g[i]].length; j++)\n                            if (prigr[g[i]][j] != prigr[g[i - 1]][j]) {\n                                nextpri++;\n                                repartitioned = true;\n                                break;\n                            }\n                    }\n                    this.priority[g[i]] = nextpri;\n                }\n            }\n            if (!repartitioned)\n                break;\n        }\n    }\n    sortAndGroup(val) {\n        let uset = new Set();\n        for (let v of val)\n            uset.add(v);\n        let unique = Array.from(uset);\n        Vec.sort(unique);\n        let ret = [];\n        for (let n = 0; n < unique.length; n++)\n            ret.push([]);\n        for (let n = 0; n < val.length; n++) {\n            let grp = unique.indexOf(val[n]);\n            ret[grp].push(n);\n        }\n        return ret;\n    }\n}\nStereochemistry.STEREO_NONE = 0;\nStereochemistry.STEREO_POS = 1;\nStereochemistry.STEREO_NEG = 2;\nStereochemistry.STEREO_UNKNOWN = 3;\nStereochemistry.STEREO_BROKEN = 4;\nStereochemistry.RUBRIC_EQUIV_TETRA = [\n    [0, 1, 2, 3], [0, 2, 3, 1], [0, 3, 1, 2], [1, 0, 3, 2], [1, 2, 0, 3], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 1, 3, 0], [2, 3, 0, 1], [3, 0, 2, 1], [3, 1, 0, 2], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SIDES = [\n    [0, 1, 2, 3], [1, 0, 3, 2], [2, 3, 0, 1], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SQUARE = [\n    [0, 1, 2, 3], [0, 3, 2, 1], [1, 2, 3, 0], [1, 0, 3, 2],\n    [2, 1, 0, 3], [2, 3, 0, 1], [3, 2, 1, 0], [3, 0, 1, 2]\n];\nStereochemistry.RUBRIC_EQUIV_BIPY = [\n    [0, 1, 2, 3, 4], [1, 2, 0, 3, 4], [2, 0, 1, 3, 4],\n    [0, 2, 1, 4, 3], [1, 0, 2, 4, 3], [2, 1, 0, 4, 3],\n];\nStereochemistry.RUBRIC_EQUIV_OCTA = [\n    [0, 1, 2, 3, 4, 5], [0, 3, 2, 1, 5, 4], [0, 4, 2, 5, 3, 1], [0, 5, 2, 4, 1, 3],\n    [1, 0, 3, 2, 5, 4], [1, 2, 3, 0, 4, 5], [1, 4, 3, 5, 0, 2], [1, 5, 3, 4, 2, 0],\n    [2, 1, 0, 3, 5, 4], [2, 3, 0, 1, 4, 5], [2, 4, 0, 5, 1, 3], [2, 5, 0, 4, 3, 1],\n    [3, 0, 1, 2, 4, 5], [3, 2, 1, 0, 5, 4], [3, 4, 1, 5, 2, 0], [3, 5, 1, 4, 0, 2],\n    [4, 0, 5, 2, 1, 3], [4, 1, 5, 3, 2, 0], [4, 2, 5, 0, 3, 1], [4, 3, 5, 1, 0, 2],\n    [5, 0, 4, 2, 3, 1], [5, 1, 4, 3, 0, 2], [5, 2, 4, 0, 1, 3], [5, 3, 4, 1, 2, 0]\n];\nexport { Stereochemistry };\n//# sourceMappingURL=Stereochemistry.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { DotPath } from './DotPath';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { Stereochemistry } from './Stereochemistry';\nclass MetaMolecule {\n    constructor(mol) {\n        this.mol = mol;\n        this.atomArom = null;\n        this.bondArom = null;\n        this.rubricTetra = null;\n        this.rubricSquare = null;\n        this.rubricBipy = null;\n        this.rubricOcta = null;\n        this.rubricSides = null;\n        this.hash = null;\n        this.heavyHash = null;\n        this.uniqueElements = null;\n        this.dots = null;\n        this.piAtom = null;\n    }\n    calculateStrictAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        let rings = mol.findRingsOfSize(6);\n        const nr = rings.length;\n        if (nr == 0)\n            return;\n        this.ensurePiAtoms();\n        let mask = Vec.booleanArray(false, nr);\n        for (let n = 0; n < nr; n++) {\n            for (let i = 0; i < rings[n].length; i++) {\n                let a = rings[n][i];\n                if (!this.piAtom[a - 1]) {\n                    mask[n] = true;\n                    break;\n                }\n                let b = mol.findBond(a, rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                let bo = mol.bondOrder(b);\n                if (bo != 1 && bo != 2) {\n                    mask[n] = true;\n                    break;\n                }\n            }\n        }\n        while (true) {\n            let anyChange = false;\n            for (let n = 0; n < nr; n++)\n                if (!mask[n]) {\n                    let phase1 = true, phase2 = true;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        if (this.bondArom[b - 1])\n                            continue;\n                        let bo = mol.bondOrder(b);\n                        phase1 = phase1 && bo == (2 - (i & 1));\n                        phase2 = phase2 && bo == (1 + (i & 1));\n                    }\n                    if (!phase1 && !phase2)\n                        continue;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        this.bondArom[b - 1] = true;\n                    }\n                    mask[n] = true;\n                    anyChange = true;\n                }\n            if (!anyChange)\n                break;\n        }\n        for (let n = 0; n < this.bondArom.length; n++)\n            if (this.bondArom[n]) {\n                this.atomArom[mol.bondFrom(n + 1) - 1] = true;\n                this.atomArom[mol.bondTo(n + 1) - 1] = true;\n            }\n    }\n    calculateRelaxedAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        this.ensurePiAtoms();\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let electrons = Vec.numberArray(0, na);\n        let exocyclic = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            electrons[n - 1] = (Chemistry.ELEMENT_BLOCKS[atno] == 2 ? Chemistry.ELEMENT_VALENCE[atno] : 0) - mol.atomCharge(n) - mol.atomHydrogens(n)\n                - mol.atomUnpaired(n);\n        }\n        for (let n = 1; n <= nb; n++) {\n            const bfr = mol.bondFrom(n), bto = mol.bondTo(n), bo = mol.bondOrder(n);\n            electrons[bfr - 1] -= bo;\n            electrons[bto - 1] -= bo;\n            if (bo == 2) {\n                const rblk1 = mol.atomRingBlock(bfr), rblk2 = mol.atomRingBlock(bto);\n                if (rblk1 > 0 && rblk1 != rblk2)\n                    exocyclic[bfr - 1] = true;\n                if (rblk2 > 0 && rblk2 != rblk1)\n                    exocyclic[bto - 1] = true;\n            }\n        }\n        let rings = [];\n        for (let rsz = 3; rsz <= 7; rsz++)\n            for (let rng of mol.findRingsOfSize(rsz)) {\n                let valid = true;\n                for (let n = 0; n < rsz; n++) {\n                    const a = rng[n];\n                    if (!this.piAtom[a - 1] && electrons[a - 1] < 2 && !exocyclic[a - 1]) {\n                        valid = false;\n                        break;\n                    }\n                    let b = mol.findBond(a, rng[n < rsz - 1 ? n + 1 : 0]);\n                    let bo = mol.bondOrder(b);\n                    if (bo != 1 && bo != 2) {\n                        valid = false;\n                        break;\n                    }\n                }\n                if (valid)\n                    rings.push(rng);\n            }\n        while (rings.length > 0) {\n            let anyChange = false;\n            for (let n = 0; n < rings.length; n++) {\n                let r = rings[n];\n                let paths = [0];\n                for (let i = 0; i < r.length; i++) {\n                    const a = r[i];\n                    const b1 = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                    const b2 = mol.findBond(a, r[i > 0 ? i - 1 : r.length - 1]);\n                    if (this.bondArom[b1 - 1]) {\n                        for (let j = paths.length - 1; j >= 0; j--) {\n                            const e = paths[j] + 2;\n                            if (paths.indexOf(e) < 0)\n                                paths = Vec.append(paths, e);\n                        }\n                    }\n                    else if (mol.bondOrder(b1) == 2)\n                        Vec.addTo(paths, 2);\n                    else if (electrons[a - 1] >= 2 && mol.bondOrder(b1) == 1 && mol.bondOrder(b2) == 1)\n                        Vec.addTo(paths, 2);\n                }\n                let arom = false;\n                for (let e of paths) {\n                    if (e == 2 && r.length == 3) {\n                        arom = true;\n                        break;\n                    }\n                    if (e == 6) {\n                        arom = true;\n                        break;\n                    }\n                }\n                if (arom) {\n                    for (let i = 0; i < r.length; i++) {\n                        let a = r[i], b = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                        this.atomArom[a - 1] = true;\n                        this.bondArom[b - 1] = true;\n                    }\n                    rings.splice(n, 1);\n                    n--;\n                    anyChange = true;\n                }\n            }\n            if (!anyChange)\n                break;\n        }\n    }\n    calculateStereoRubric() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        this.rubricTetra = new Array(na);\n        this.rubricSquare = new Array(na);\n        this.rubricBipy = new Array(na);\n        this.rubricOcta = new Array(na);\n        this.rubricSides = new Array(nb);\n        for (let n = 1; n <= na; n++) {\n            let blk = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)];\n            let adjc = mol.atomAdjCount(n), hc = mol.atomHydrogens(n);\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(n)) {\n                if (mol.bondType(b) == Molecule.BONDTYPE_INCLINED && mol.bondFrom(b) == n)\n                    ninc++;\n                else if (mol.bondType(b) == Molecule.BONDTYPE_DECLINED && mol.bondFrom(b) == n)\n                    ndec++;\n            }\n            if (blk == 2 && ((adjc == 3 && hc == 1) || (adjc == 4 && hc == 0))) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            else if (blk >= 3 && adjc == 4 && ninc == 1 && ndec == 1) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            if (blk >= 3 && adjc == 4 && hc == 0) {\n                this.rubricSquare[n - 1] = Stereochemistry.rubricSquarePlanar(mol, n);\n            }\n            if (blk >= 3 && (adjc == 4 || adjc == 5) && hc == 0) {\n                this.rubricBipy[n - 1] = Stereochemistry.rubricBipyrimidal(mol, n);\n            }\n            if (blk >= 3 && (adjc == 5 || adjc == 6) && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n            else if (blk == 2 && adjc == 6 && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondOrder(n) != 2 || mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN || this.isBondAromatic(n))\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)];\n            let blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n            let adjc1 = mol.atomAdjCount(bfr), hc1 = mol.atomHydrogens(bfr);\n            let adjc2 = mol.atomAdjCount(bto), hc2 = mol.atomHydrogens(bto);\n            if (blk1 == 2 && blk2 == 2 && (adjc1 + hc1 == 3 && hc1 <= 1) && (adjc2 + hc2 == 3 && hc2 <= 1)) {\n                this.rubricSides[n - 1] = Stereochemistry.rubricBondSides(mol, n);\n            }\n        }\n    }\n    removeHydrogens() {\n        let mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let atomMask = Vec.booleanArray(true, na), bondMask = Vec.booleanArray(true, nb);\n        for (let n = 1; n <= na; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                atomMask[n - 1] = false;\n                bondMask[mol.atomAdjBonds(n)[0] - 1] = false;\n            }\n        if (Vec.allTrue(atomMask))\n            return;\n        mol = MolUtil.subgraphMask(mol, atomMask);\n        if (this.atomArom)\n            this.atomArom = Vec.maskGet(this.atomArom, atomMask);\n        if (this.bondArom)\n            this.bondArom = Vec.maskGet(this.bondArom, bondMask);\n        if (this.rubricTetra || this.rubricSquare || this.rubricBipy || this.rubricOcta || this.rubricSides) {\n            if (this.rubricTetra)\n                this.rubricTetra = Vec.maskGet(this.rubricTetra, atomMask);\n            if (this.rubricSquare)\n                this.rubricSquare = Vec.maskGet(this.rubricSquare, atomMask);\n            if (this.rubricBipy)\n                this.rubricBipy = Vec.maskGet(this.rubricBipy, atomMask);\n            if (this.rubricOcta)\n                this.rubricOcta = Vec.maskGet(this.rubricOcta, atomMask);\n            if (this.rubricSides)\n                this.rubricSides = Vec.maskGet(this.rubricSides, bondMask);\n            let atomMap = Vec.prepend(Vec.add(Vec.maskMap(atomMask), 1), 0);\n            for (let n = 0; n < Vec.len(this.rubricTetra); n++)\n                if (this.rubricTetra[n])\n                    this.rubricTetra[n] = Vec.idxGet(atomMap, this.rubricTetra[n]);\n            for (let n = 0; n < Vec.len(this.rubricSquare); n++)\n                if (this.rubricSquare[n])\n                    this.rubricSquare[n] = Vec.idxGet(atomMap, this.rubricSquare[n]);\n            for (let n = 0; n < Vec.len(this.rubricBipy); n++)\n                if (this.rubricBipy[n])\n                    this.rubricBipy[n] = Vec.idxGet(atomMap, this.rubricBipy[n]);\n            for (let n = 0; n < Vec.len(this.rubricOcta); n++)\n                if (this.rubricOcta[n])\n                    this.rubricOcta[n] = Vec.idxGet(atomMap, this.rubricOcta[n]);\n            for (let n = 0; n < Vec.len(this.rubricSides); n++)\n                if (this.rubricSides[n])\n                    this.rubricSides[n] = Vec.idxGet(atomMap, this.rubricSides[n]);\n        }\n    }\n    calculateSkeletonHash() {\n        if (MetaMolecule.skeletonHash == null)\n            throw 'Skeleton hash not available.';\n        this.hash = MetaMolecule.skeletonHash(this.mol);\n    }\n    calculateHeavyHash() {\n        let anyH = false;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (this.mol.atomElement(n) == 'H') {\n                anyH = true;\n                break;\n            }\n        if (!anyH) {\n            this.heavyHash = this.getSkeletonHash();\n            return;\n        }\n        let hvy = this.mol.clone();\n        for (let n = hvy.numAtoms; n >= 1; n--)\n            if (hvy.atomElement(n) == 'H')\n                hvy.deleteAtomAndBonds(n);\n        this.heavyHash = MetaMolecule.skeletonHash(hvy);\n    }\n    isAtomAromatic(atom) {\n        return this.atomArom == null ? false : this.atomArom[atom - 1];\n    }\n    isBondAromatic(bond) {\n        return this.bondArom == null ? false : this.bondArom[bond - 1];\n    }\n    bondOrderArom(bond) {\n        return this.bondArom != null && this.bondArom[bond - 1] ? -1 : this.mol.bondOrder(bond);\n    }\n    getAtomAromaticity() {\n        return this.atomArom == null ? null : this.atomArom.slice(0);\n    }\n    getBondAromaticity() {\n        return this.bondArom == null ? null : this.bondArom.slice(0);\n    }\n    getSkeletonHash() {\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        return this.hash;\n    }\n    getHeavyHash() {\n        if (this.heavyHash == null)\n            this.calculateHeavyHash();\n        return this.heavyHash;\n    }\n    getDotPath() {\n        if (this.dots == null)\n            this.dots = new DotPath(this.mol);\n        return this.dots;\n    }\n    getUniqueElements() {\n        if (this.uniqueElements == null) {\n            this.uniqueElements = [];\n            for (let n = 1; n <= this.mol.numAtoms; n++) {\n                let el = this.mol.atomElement(n);\n                if (this.uniqueElements.indexOf(el) < 0)\n                    this.uniqueElements.push(el);\n            }\n        }\n        return this.uniqueElements;\n    }\n    equivalentTo(other, timeout = 1000) {\n        if (MetaMolecule.isomorphMatch == null)\n            throw 'Isomorph search unavailable.';\n        if (this.mol.numAtoms != other.mol.numAtoms || this.mol.numBonds != other.mol.numBonds)\n            return false;\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        if (other.hash == null)\n            other.calculateSkeletonHash();\n        if (this.hash != other.hash)\n            return false;\n        if (this.mol.compareTo(other.mol) == 0)\n            return true;\n        let uniq1 = this.getUniqueElements(), uniq2 = other.getUniqueElements();\n        for (let n = 0; n < uniq1.length; n++) {\n            if (!uniq2.includes(uniq1[n]))\n                return false;\n        }\n        return MetaMolecule.isomorphMatch(this, other, timeout);\n    }\n    static createRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createStrict(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        return meta;\n    }\n    static createStrictRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createRelaxed(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        return meta;\n    }\n    static createRelaxedRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    ensurePiAtoms() {\n        if (this.piAtom != null)\n            return;\n        this.piAtom = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++)\n            if (this.mol.bondOrder(n) == 2) {\n                {\n                    this.piAtom[this.mol.bondFrom(n) - 1] = true;\n                    this.piAtom[this.mol.bondTo(n) - 1] = true;\n                }\n            }\n    }\n}\nMetaMolecule.skeletonHash = null;\nMetaMolecule.isomorphMatch = null;\nexport { MetaMolecule };\n//# sourceMappingURL=MetaMolecule.js.map","import { Chemistry } from '../data/Chemistry';\nimport { MetaMolecule } from '../data/MetaMolecule';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { Permutation, Vec } from '../util/Vec';\nlet crc_table = [];\nfunction make_crc_table() {\n    if (crc_table.length > 0)\n        return;\n    for (let n = 0; n < 256; n++) {\n        let c = n;\n        for (let i = 0; i < 8; i++)\n            if ((c & 1) != 0)\n                c = 0xEDB88320 ^ (c >>> 1);\n            else\n                c = (c >>> 1);\n        crc_table.push(c);\n    }\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc() { return BOOT_CRC; }\nfunction feed_crc(crc, byte) {\n    let idx = (crc ^ byte) & 0xFF;\n    return crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc) { return crc ^ BOOT_CRC; }\nclass CircularFingerprints {\n    constructor(meta, kind) {\n        this.meta = meta;\n        this.kind = kind;\n        this.hookApplyNewFP = null;\n        this.hookConsiderNewFP = null;\n        this.identity = [];\n        this.resolvedChiral = [];\n        this.atomGroup = [];\n        this.fplist = [];\n        this.amask = [];\n        this.atomAdj = [];\n        this.bondAdj = [];\n        make_crc_table();\n    }\n    calculate() {\n        let mol = this.meta.mol, na = mol.numAtoms;\n        this.identity = Vec.numberArray(0, na);\n        this.resolvedChiral = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++)\n            this.atomGroup.push([]);\n        this.amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            this.amask[n] = mol.atomicNumber(n + 1) >= 2 && !MolUtil.hasAbbrev(mol, n + 1);\n            this.atomAdj.push([]);\n            this.bondAdj.push([]);\n        }\n        for (let n = 0; n < na; n++) {\n            if (!this.amask[n])\n                continue;\n            this.atomAdj[n] = mol.atomAdjList(n + 1);\n            this.bondAdj[n] = mol.atomAdjBonds(n + 1);\n            for (let i = this.atomAdj[n].length - 1; i >= 0; i--)\n                if (!this.amask[this.atomAdj[n][i] - 1]) {\n                    this.atomAdj[n].splice(i, 1);\n                    this.bondAdj[n].splice(i, 1);\n                }\n        }\n        for (let n = 0; n < na; n++)\n            if (this.amask[n]) {\n                this.identity[n] = this.initialIdentityECFP(n + 1);\n                this.atomGroup[n] = [n + 1];\n                this.applyNewFP({ hashCode: this.identity[n], iteration: 0, atoms: this.atomGroup[n], centralAtom: n + 1 });\n            }\n        let niter = this.kind;\n        for (let iter = 1; iter <= niter; iter++) {\n            let newident = Vec.numberArray(0, na);\n            for (let n = 0; n < na; n++)\n                if (this.amask[n])\n                    newident[n] = this.circularIterate(iter, n + 1);\n            this.identity = newident;\n            for (let n = 0; n < na; n++)\n                if (this.amask[n]) {\n                    this.atomGroup[n] = this.growAtoms(this.atomGroup[n]);\n                    this.considerNewFP({ hashCode: this.identity[n], iteration: iter, atoms: this.atomGroup[n], centralAtom: n + 1 });\n                }\n        }\n    }\n    static create(meta, kind) {\n        if (meta instanceof Molecule)\n            meta = MetaMolecule.createStrictRubric(meta);\n        let circ = new CircularFingerprints(meta, kind);\n        circ.calculate();\n        return circ;\n    }\n    getMolecule() { return this.meta.mol; }\n    get numFP() { return this.fplist.length; }\n    getFP(idx) { return this.fplist[idx]; }\n    getFingerprints() { return this.fplist.slice(0); }\n    getUniqueHashes() {\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode);\n        return Vec.sorted(Array.from(hashes));\n    }\n    getFoldedHashes(maxBits) {\n        let andBits = maxBits - 1;\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode & andBits);\n        return Vec.sorted(Array.from(hashes));\n    }\n    static tanimoto(hash1, hash2) {\n        let shared = 0, total = 0;\n        let sz1 = hash1.length, sz2 = hash2.length;\n        if (sz1 == 0 && sz2 == 0)\n            return 0;\n        let i1 = 0, i2 = 0;\n        while (i1 < sz1 || i2 < sz2) {\n            if (i1 == sz1) {\n                total += sz2 - i2;\n                break;\n            }\n            if (i2 == sz2) {\n                total += sz1 - i1;\n                break;\n            }\n            let v1 = hash1[i1], v2 = hash2[i2];\n            if (v1 == v2) {\n                shared += 1;\n                i1 += 1;\n                i2 += 1;\n            }\n            else if (v1 < v2)\n                i1 += 1;\n            else\n                i2 += 1;\n            total += 1;\n        }\n        return shared / total;\n    }\n    initialIdentityECFP(atom) {\n        const mol = this.meta.mol;\n        let adj = mol.atomAdjList(atom);\n        let nheavy = 0, nhydr = mol.atomHydrogens(atom);\n        for (let a of adj)\n            if (mol.atomElement(a) == 'H')\n                nhydr++;\n            else\n                nheavy++;\n        let atno = mol.atomicNumber(atom);\n        let degree = Math.max(0, Chemistry.ELEMENT_BONDING[atno] - nhydr);\n        let chg = mol.atomCharge(atom);\n        let inring = mol.atomRingBlock(atom) > 0 ? 1 : 0;\n        let crc = start_crc();\n        crc = feed_crc(crc, (nheavy << 4) | degree);\n        crc = feed_crc(crc, atno);\n        crc = feed_crc(crc, chg + 0x80);\n        crc = feed_crc(crc, (nhydr << 4) | inring);\n        return end_crc(crc);\n    }\n    circularIterate(iter, atom) {\n        let adj = this.atomAdj[atom - 1], adjb = this.bondAdj[atom - 1];\n        let seq = Vec.numberArray(0, 2 + 2 * adj.length);\n        seq[0] = iter;\n        seq[1] = this.identity[atom - 1];\n        for (let n = 0; n < adj.length; n++) {\n            seq[2 * n + 2] = this.meta.isBondAromatic(adjb[n]) ? 0xF : this.meta.mol.bondOrder(adjb[n]);\n            seq[2 * n + 3] = this.identity[adj[n] - 1];\n        }\n        let p = 0;\n        while (p < adj.length - 1) {\n            let i = 2 + 2 * p;\n            if (seq[i] > seq[i + 2] || (seq[i] == seq[i + 2] && seq[i + 1] > seq[i + 3])) {\n                Vec.swap(seq, i, i + 2);\n                Vec.swap(seq, i + 1, i + 3);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let crc = start_crc();\n        for (let n = 0; n < seq.length; n += 2) {\n            crc = feed_crc(crc, seq[n]);\n            let v = seq[n + 1];\n            crc = feed_crc(crc, v >> 24);\n            crc = feed_crc(crc, (v >> 16) & 0xFF);\n            crc = feed_crc(crc, (v >> 8) & 0xFF);\n            crc = feed_crc(crc, v & 0xFF);\n        }\n        if (!this.resolvedChiral[atom - 1] && Vec.len(this.meta.rubricTetra) > 0 && this.meta.rubricTetra[atom - 1] != null) {\n            let ru = this.meta.rubricTetra[atom - 1];\n            let par = [\n                ru[0] == 0 ? 0 : this.identity[ru[0] - 1],\n                ru[1] == 0 ? 0 : this.identity[ru[1] - 1],\n                ru[2] == 0 ? 0 : this.identity[ru[2] - 1],\n                ru[3] == 0 ? 0 : this.identity[ru[3] - 1]\n            ];\n            if (par[0] != par[1] && par[0] != par[2] && par[0] != par[3] && par[1] != par[2] && par[1] != par[3] && par[2] != par[3]) {\n                crc = feed_crc(crc, Permutation.parityOrder(par) + 1);\n                this.resolvedChiral[atom - 1] = true;\n            }\n        }\n        return end_crc(crc);\n    }\n    growAtoms(atoms) {\n        let mask = Vec.booleanArray(false, this.meta.mol.numAtoms);\n        for (let n = 0; n < atoms.length; n++) {\n            mask[atoms[n] - 1] = true;\n            for (let a of this.atomAdj[atoms[n] - 1])\n                mask[a - 1] = true;\n        }\n        return Vec.add(Vec.maskIdx(mask), 1);\n    }\n    applyNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n        this.fplist.push(newFP);\n    }\n    considerNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        let hit = -1;\n        let fp = null;\n        for (let n = 0; n < this.fplist.length; n++) {\n            let lookFP = this.fplist[n];\n            if (Vec.equals(lookFP.atoms, newFP.atoms)) {\n                fp = lookFP;\n                hit = n;\n                break;\n            }\n        }\n        if (hit < 0) {\n            this.fplist.push(newFP);\n            return;\n        }\n        if (fp.iteration < newFP.iteration || fp.hashCode < newFP.hashCode)\n            return;\n        this.fplist[hit] = newFP;\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n    }\n}\nCircularFingerprints.CLASS_ECFP0 = 0;\nCircularFingerprints.CLASS_ECFP2 = 1;\nCircularFingerprints.CLASS_ECFP4 = 2;\nCircularFingerprints.CLASS_ECFP6 = 3;\nexport { CircularFingerprints };\n//# sourceMappingURL=CircularFingerprints.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CircularFingerprints } from '../calc/CircularFingerprints';\nimport { Theme } from '../util/Theme';\nimport { DEGRAD, escapeHTML, norm_xy, readTextURL } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CoordUtil } from './CoordUtil';\nimport { DataSheetStream } from './DataSheetStream';\nimport { MetaMolecule } from './MetaMolecule';\nimport { MolUtil } from './MolUtil';\nexport const TEMPLATE_FILES = [\n    'rings',\n    'termgrp',\n    'funcgrp',\n    'protgrp',\n    'nonplrings',\n    'largerings',\n    'crownethers',\n    'ligmonodent',\n    'ligbident',\n    'ligtrident',\n    'ligmultident',\n    'cagecmplx',\n    'aminoacids',\n    'biomolecules',\n    'saccharides'\n];\nclass AbbrevContainer {\n    constructor() {\n        this.abbrevs = [];\n    }\n    static needsSetup() { return !this.main; }\n    static setupData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.main)\n                return;\n            if (!Theme.RESOURCE_URL)\n                throw ('RPC resource URL not defined.');\n            this.main = new AbbrevContainer();\n            for (let tfn of TEMPLATE_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/templates/' + tfn + '.ds';\n                let dsstr = yield readTextURL(url);\n                let ds = DataSheetStream.readXML(dsstr);\n                let colMol = ds.firstColOfType(\"molecule\"), colAbbrev = ds.findColByName('Abbrev', \"string\");\n                if (colMol < 0 || colAbbrev < 0)\n                    continue;\n                for (let n = 0; n < ds.numRows; n++) {\n                    let frag = ds.getMoleculeClone(n, colMol), name = ds.getString(n, colAbbrev);\n                    if (!frag || !name)\n                        continue;\n                    let attcount = 0, firstConn = 0;\n                    for (let i = 1; i <= frag.numAtoms; i++)\n                        if (frag.atomElement(i) == MolUtil.TEMPLATE_ATTACHMENT) {\n                            if (firstConn == 0)\n                                firstConn = i;\n                            frag.setAtomElement(i, MolUtil.ABBREV_ATTACHMENT);\n                            attcount++;\n                        }\n                    if (attcount != 1)\n                        continue;\n                    if (firstConn > 1)\n                        frag.swapAtoms(1, firstConn);\n                    this.main.submitAbbreviation(name, frag);\n                }\n            }\n        });\n    }\n    getAbbrevs() {\n        return this.abbrevs.slice(0);\n    }\n    submitAbbreviation(name, infrag, promote = false) {\n        let frag = infrag.clone();\n        this.submitFragment(name, frag, promote);\n    }\n    submitMolecule(inmol, promote = false) {\n        let mol = inmol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let frag = MolUtil.getAbbrev(mol, n);\n            if (!frag)\n                continue;\n            this.submitFragment(mol.atomElement(n), frag, promote);\n        }\n    }\n    substituteAbbrevName(mol, atom) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (!frag)\n            return false;\n        let fragExp = MolUtil.expandedAbbrevs(frag);\n        let fragMF = MolUtil.molecularFormula(fragExp);\n        let fragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(fragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n        for (let abbrev of this.abbrevs)\n            if (abbrev.frag.numAtoms == frag.numAtoms) {\n                let match = CoordUtil.sketchEquivalent(frag, abbrev.frag);\n                if (!match) {\n                    let afragExp = MolUtil.expandedAbbrevs(abbrev.frag);\n                    if (fragMF == MolUtil.molecularFormula(afragExp)) {\n                        let afragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(afragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n                        if (Vec.equals(fragFP, afragFP))\n                            match = true;\n                    }\n                }\n                if (match) {\n                    mol.setAtomElement(atom, abbrev.name);\n                    return true;\n                }\n            }\n        return false;\n    }\n    submitFragment(name, frag, promote) {\n        if (name == '?')\n            return;\n        let vx = 0, vy = 0;\n        let adj = frag.atomAdjList(1);\n        for (let a of adj) {\n            vx += frag.atomX(a) - frag.atomX(1);\n            vy += frag.atomY(a) - frag.atomY(1);\n        }\n        if (adj.length > 1) {\n            let inv = 1.0 / adj.length;\n            vx *= inv;\n            vy *= inv;\n        }\n        if (norm_xy(vx, vy) > 0.1 * 0.1) {\n            let theta = Math.atan2(vy, vx);\n            if (Math.abs(theta) > 2 * DEGRAD)\n                CoordUtil.rotateMolecule(frag, -theta);\n        }\n        let hit = -1;\n        for (let n = 0; n < this.abbrevs.length; n++) {\n            let a = this.abbrevs[n];\n            if (a.name != name)\n                continue;\n            hit = n;\n            break;\n        }\n        let [html, search] = this.formatAbbrevLabel(name);\n        let abv = { name, frag, nameHTML: html, nameSearch: search };\n        if (hit < 0) {\n            if (promote)\n                this.abbrevs.unshift(abv);\n            else\n                this.abbrevs.push(abv);\n        }\n        else {\n            if (promote && hit > 0) {\n                this.abbrevs.splice(hit, 1);\n                this.abbrevs.unshift(abv);\n            }\n            else\n                this.abbrevs[hit] = abv;\n        }\n    }\n    formatAbbrevLabel(name) {\n        let html = '', search = '';\n        let append = (bit, tag) => {\n            if (tag)\n                html += '<' + tag + '>';\n            html += escapeHTML(bit);\n            search += bit;\n            if (tag)\n                html += '</' + tag + '>';\n        };\n        for (let bit of name.split('|')) {\n            while (true) {\n                let match = bit.match(/^(.*?)\\{(.*?)\\}(.*)$/);\n                if (!match)\n                    break;\n                let pre = match[1], mid = match[2], post = match[3];\n                append(pre, null);\n                if (mid.startsWith('^'))\n                    append(mid.substring(1), 'sup');\n                else\n                    append(mid, 'sub');\n                bit = post;\n            }\n            append(bit, null);\n        }\n        return [html, search.toLowerCase()];\n    }\n}\nAbbrevContainer.main = null;\nexport { AbbrevContainer };\n//# sourceMappingURL=AbbrevContainer.js.map","import { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiffPos, DEGRAD, norm2_xy, norm_xy, signum, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class MetalLigate {\n    constructor(mol, metalAtom, ligandAttach) {\n        this.metalAtom = metalAtom;\n        this.ligandAttach = ligandAttach;\n        this.ligands = [];\n        this.mol = mol.clone();\n    }\n    generate() {\n        const { mol, metalAtom, ligandAttach, ligands } = this;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(metalAtom - 1);\n        for (let cc of g.calculateComponentGroups()) {\n            Vec.addTo(cc, 1);\n            let anything = false;\n            for (let a of ligandAttach)\n                if (cc.indexOf(a) >= 0) {\n                    anything = true;\n                    break;\n                }\n            if (!anything)\n                continue;\n            let lig = { atoms: cc, attach: [] };\n            lig.atoms = cc;\n            let anyAttached = false;\n            for (let a of lig.atoms)\n                if (mol.findBond(a, metalAtom) > 0) {\n                    anyAttached = true;\n                    break;\n                }\n            for (let a of lig.atoms) {\n                let bonded = mol.findBond(a, metalAtom) > 0;\n                if (bonded || (!anyAttached && ligandAttach.includes(a)))\n                    lig.attach.push(a);\n            }\n            ligands.push(lig);\n            for (let a of lig.attach)\n                if (mol.findBond(a, metalAtom) == 0)\n                    this.makeLigandBond(a);\n        }\n        if (ligands.length == 0)\n            throw new Error('No ligand atoms');\n        let otherLigands = mol.atomAdjList(metalAtom);\n        for (let lig of ligands)\n            otherLigands = Vec.exclude(otherLigands, lig.attach);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let otherTheta = new Array(otherLigands.length);\n        for (let n = 0; n < otherLigands.length; n++)\n            otherTheta[n] = Math.atan2(mol.atomY(otherLigands[n]) - my, mol.atomX(otherLigands[n]) - mx);\n        for (let lig of ligands) {\n            if (lig.attach.length == 1) {\n                let a = lig.attach[0];\n                lig.avgTheta = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                this.orientLigand(lig);\n            }\n            else {\n                let theta = new Array(lig.attach.length);\n                for (let n = 0; n < lig.attach.length; n++) {\n                    let a = lig.attach[n];\n                    theta[n] = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                }\n                theta = GeomUtil.sortAngles(theta);\n                let base = theta[0];\n                for (let n = 0; n < theta.length; n++)\n                    theta[n] = angleDiffPos(theta[n], base);\n                lig.avgTheta = base + Vec.sum(theta) / theta.length;\n                this.orientLigand(lig);\n            }\n        }\n        if (otherLigands.length == 0) {\n            ligands.sort((l1, l2) => signum(l1.avgTheta - l2.avgTheta));\n            this.arrangeLigandsFree(ligands);\n        }\n        else if (otherLigands.length == 1) {\n            ligands.sort((l1, l2) => {\n                let diff1 = angleDiffPos(l1.avgTheta, otherTheta[0]);\n                let diff2 = angleDiffPos(l2.avgTheta, otherTheta[0]);\n                return signum(diff1 - diff2);\n            });\n            this.arrangeLigandsRange(ligands, otherTheta[0], TWOPI, true);\n        }\n        else {\n            let otherOrder = Vec.idxSort(otherTheta);\n            for (let n = 0; n < otherOrder.length; n++) {\n                let nn = (n + 1) % otherOrder.length;\n                let theta = otherTheta[otherOrder[n]];\n                let extent = angleDiffPos(otherTheta[otherOrder[nn]], theta);\n                let batch = [];\n                for (let lig of ligands) {\n                    let diff = angleDiffPos(lig.avgTheta, theta);\n                    if (diff < extent)\n                        batch.push(lig);\n                }\n                if (batch.length == 0)\n                    continue;\n                batch.sort((l1, l2) => {\n                    let diff1 = angleDiffPos(l1.avgTheta, theta);\n                    let diff2 = angleDiffPos(l2.avgTheta, theta);\n                    return signum(diff1 - diff2);\n                });\n                this.arrangeLigandsRange(batch, theta, extent, true);\n            }\n        }\n        this.resolveClashes();\n        return mol;\n    }\n    makeLigandBond(ligAtom) {\n        const { mol, metalAtom } = this;\n        let mchg = mol.atomCharge(metalAtom), lchg = mol.atomCharge(ligAtom);\n        if (mchg > 0 && lchg < 0) {\n            mol.setAtomCharge(metalAtom, mchg - 1);\n            mol.setAtomCharge(ligAtom, lchg + 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        if (mchg < 0 && lchg > 0) {\n            mol.setAtomCharge(metalAtom, mchg + 1);\n            mol.setAtomCharge(ligAtom, lchg - 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        let order = 0;\n        if (mol.atomHExplicit(ligAtom) == Molecule.HEXPLICIT_UNKNOWN && mol.atomHydrogens(ligAtom) > 0)\n            order = 1;\n        mol.addBond(metalAtom, ligAtom, order);\n    }\n    orientLigand(lig) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let lsz = lig.atoms.length, asz = lig.attach.length;\n        let idxAttach = new Array(asz);\n        for (let n = 0; n < asz; n++)\n            idxAttach[n] = lig.atoms.indexOf(lig.attach[n]);\n        let lx = new Array(lsz), ly = new Array(lsz);\n        let ax = MolUtil.arrayAtomX(mol), ay = MolUtil.arrayAtomY(mol);\n        let molExtent = Vec.max(ax) - Vec.min(ax) + Vec.max(ay) - Vec.min(ay);\n        let dx = molExtent * Math.cos(lig.avgTheta), dy = molExtent * Math.sin(lig.avgTheta);\n        for (let n = 0; n < lsz; n++) {\n            lx[n] = mol.atomX(lig.atoms[n]) + dx;\n            ly[n] = mol.atomY(lig.atoms[n]) + dy;\n        }\n        let cx = Vec.sum(lx) / lsz, cy = Vec.sum(ly) / lsz;\n        let weight = [];\n        for (let n = 0; n < lsz; n++) {\n            let closest = Number.POSITIVE_INFINITY;\n            for (let idx of idxAttach)\n                closest = Math.min(closest, norm2_xy(lx[n] - lx[idx], ly[n] - ly[idx]));\n            weight.push(1.0 / (1 + Math.sqrt(closest)));\n        }\n        let bestScore = Number.POSITIVE_INFINITY;\n        let bestLX = null, bestLY = null;\n        for (let theta = 0; theta < 360; theta += 15) {\n            let cosTheta = Math.cos(theta * DEGRAD), sinTheta = Math.sin(theta * DEGRAD);\n            let rx = new Array(lsz), ry = new Array(lsz);\n            let score = 0;\n            for (let n = 0; n < lsz; n++) {\n                let x = lx[n] - cx, y = ly[n] - cy;\n                rx[n] = cx + x * cosTheta - y * sinTheta;\n                ry[n] = cy + x * sinTheta + y * cosTheta;\n                let dist = norm_xy(rx[n] - mx, ry[n] - my);\n                if (lig.attach.indexOf(lig.atoms[n]) >= 0)\n                    score += dist;\n                else\n                    score -= dist * weight[n];\n            }\n            if (score < bestScore) {\n                bestScore = score;\n                bestLX = rx;\n                bestLY = ry;\n            }\n        }\n        lx = bestLX;\n        ly = bestLY;\n        if (asz == 1) {\n            dx = Molecule.IDEALBOND * Math.cos(lig.avgTheta);\n            dy = Molecule.IDEALBOND * Math.sin(lig.avgTheta);\n            Vec.addTo(lx, mx + dx - lx[idxAttach[0]]);\n            Vec.addTo(ly, my + dy - ly[idxAttach[0]]);\n        }\n        else {\n            let attTheta = new Array(asz), attDist = Vec.numberArray(0, asz), attDX = Vec.numberArray(0, asz), attDY = Vec.numberArray(0, asz);\n            for (let n = 0; n < asz; n++) {\n                let ox = lx[idxAttach[n]] - mx, oy = ly[idxAttach[n]] - my;\n                attTheta[n] = Math.atan2(oy, ox);\n                if (asz > 2) {\n                    attDist[n] = norm_xy(ox, oy);\n                    attDX[n] = ox / attDist[n];\n                    attDY[n] = oy / attDist[n];\n                }\n            }\n            Vec.addTo(attDist, -Vec.min(attDist));\n            let orderAttach = GeomUtil.idxSortAngles(attTheta);\n            let srcX = new Array(asz), srcY = new Array(asz);\n            let dstX = new Array(asz), dstY = new Array(asz);\n            let dtheta = 45 * DEGRAD / (asz - 1), theta = lig.avgTheta - 0.5 * dtheta;\n            for (let n = 0; n < asz; n++) {\n                srcX[n] = lx[idxAttach[orderAttach[n]]];\n                srcY[n] = ly[idxAttach[orderAttach[n]]];\n                dstX[n] = mx + Molecule.IDEALBOND * Math.cos(theta) + attDist[n] * attDX[n];\n                dstY[n] = my + Molecule.IDEALBOND * Math.sin(theta) + attDist[n] * attDY[n];\n                theta += dtheta / (asz - 1);\n            }\n            let tfm = GeomUtil.superimpose(srcX, srcY, dstX, dstY);\n            for (let n = 0; n < lsz; n++) {\n                let [x, y] = GeomUtil.applyAffine(lx[n], ly[n], tfm);\n                lx[n] = x;\n                ly[n] = y;\n            }\n        }\n        for (let n = 0; n < lsz; n++)\n            mol.setAtomPos(lig.atoms[n], lx[n], ly[n]);\n    }\n    arrangeLigandsFree(batch) {\n        if (batch.length == 1)\n            return;\n        let refTheta = Vec.last(batch).avgTheta;\n        refTheta += 0.5 * angleDiffPos(Vec.first(batch).avgTheta, refTheta);\n        this.arrangeLigandsRange(batch, refTheta, TWOPI, false);\n    }\n    arrangeLigandsRange(batch, refTheta, refSpan, bounded) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let bsz = batch.length;\n        let thetaMin = new Array(bsz), thetaSpan = new Array(bsz);\n        let ligandSpan = 0;\n        for (let n = 0; n < bsz; n++) {\n            let [theta1, theta2] = this.determineThetaBounds(batch[n]);\n            thetaMin[n] = theta1;\n            thetaSpan[n] = angleDiffPos(theta2, theta1);\n            ligandSpan += thetaSpan[n];\n        }\n        let residual = (refSpan - ligandSpan) / (bsz + (bounded ? 1 : 0));\n        let theta = refTheta + (bounded ? residual : 0.5 * residual);\n        for (let n = 0; n < bsz; n++) {\n            let rotTheta = theta - thetaMin[n];\n            let cosTheta = Math.cos(rotTheta), sinTheta = Math.sin(rotTheta);\n            for (let a of batch[n].atoms) {\n                let x = mol.atomX(a) - mx, y = mol.atomY(a) - my;\n                mol.setAtomPos(a, mx + x * cosTheta - y * sinTheta, my + x * sinTheta + y * cosTheta);\n            }\n            theta += thetaSpan[n] + residual;\n        }\n    }\n    determineThetaBounds(lig) {\n        const { mol, metalAtom } = this;\n        let theta = [];\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lig.attach.length; n++) {\n            let x = mol.atomX(lig.attach[n]) - mx;\n            let y = mol.atomY(lig.attach[n]) - my;\n            theta.push(Math.atan2(y, x));\n        }\n        Vec.sort(theta);\n        let bestScore = Number.POSITIVE_INFINITY, bestMin = 0, bestMax = 0;\n        for (let n = 0; n < theta.length; n++) {\n            let score = 0;\n            for (let i = 0; i < theta.length - 1; i++)\n                score += angleDiffPos(theta[i + 1], theta[i]);\n            if (score < bestScore) {\n                bestScore = score;\n                bestMin = Vec.first(theta);\n                bestMax = Vec.last(theta);\n            }\n            theta.push(theta.shift());\n        }\n        return [bestMin, bestMax];\n    }\n    resolveClashes() {\n        const { mol, metalAtom, ligands } = this;\n        const na = mol.numAtoms, nb = mol.numBonds, lsz = this.ligands.length;\n        let ablk = Vec.numberArray(-1, na), bblk = Vec.numberArray(-1, nb);\n        for (let n = 1; n <= na; n++)\n            if (mol.atomConnComp(n) == mol.atomConnComp(metalAtom))\n                ablk[n - 1] = 0;\n        for (let n = 0; n < lsz; n++)\n            for (let a of ligands[n].atoms)\n                ablk[a - 1] = n + 1;\n        for (let n = 1; n <= nb; n++) {\n            let blk1 = ablk[mol.bondFrom(n) - 1], blk2 = ablk[mol.bondTo(n) - 1];\n            if (blk1 < 0 || blk2 < 0) { }\n            else if (blk1 == blk2)\n                bblk[n - 1] = blk1;\n        }\n        let bumpDX = new Array(lsz), bumpDY = new Array(lsz);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lsz; n++) {\n            let lig = ligands[n];\n            let dx = 0, dy = 0;\n            for (let a of lig.attach) {\n                dx += mol.atomX(a) - mx;\n                dy += mol.atomY(a) - my;\n            }\n            dx /= lig.attach.length;\n            dy /= lig.attach.length;\n            let invDist = 1.0 / norm_xy(dx, dy);\n            bumpDX[n] = dx * 0.5 * invDist;\n            bumpDY[n] = dy * 0.5 * invDist;\n        }\n        const CLOSE_SQ = sqr(0.5);\n        for (let count = 0; count < 12; count++) {\n            let tainted = Vec.booleanArray(false, lsz);\n            outer: for (let i = 0; i < na - 1; i++) {\n                if (ablk[i] < 0)\n                    continue;\n                for (let j = i + 1; j < na; j++)\n                    if (ablk[j] >= 0 && ablk[j] != ablk[i]) {\n                        if (norm2_xy(mol.atomX(i + 1) - mol.atomX(j + 1), mol.atomY(i + 1) - mol.atomY(j + 1)) < CLOSE_SQ) {\n                            if (ablk[i] > 0)\n                                tainted[ablk[i] - 1] = true;\n                            if (ablk[j] > 0)\n                                tainted[ablk[j] - 1] = true;\n                        }\n                        if (Vec.allTrue(tainted))\n                            break outer;\n                    }\n            }\n            if (Vec.anyFalse(tainted))\n                outer: for (let i = 0; i < nb - 1; i++) {\n                    if (bblk[i] < 0)\n                        continue;\n                    let x1 = mol.atomX(mol.bondFrom(i + 1)), y1 = mol.atomY(mol.bondFrom(i + 1));\n                    let x2 = mol.atomX(mol.bondTo(i + 1)), y2 = mol.atomY(mol.bondTo(i + 1));\n                    for (let j = i + 1; j < nb; j++)\n                        if (bblk[j] >= 0 && bblk[j] != bblk[i]) {\n                            let x3 = mol.atomX(mol.bondFrom(j + 1)), y3 = mol.atomY(mol.bondFrom(j + 1));\n                            let x4 = mol.atomX(mol.bondTo(j + 1)), y4 = mol.atomY(mol.bondTo(j + 1));\n                            if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                                if (bblk[i] > 0)\n                                    tainted[bblk[i] - 1] = true;\n                                if (bblk[j] > 0)\n                                    tainted[bblk[j] - 1] = true;\n                            }\n                            if (Vec.allTrue(tainted))\n                                break outer;\n                        }\n                }\n            if (Vec.allFalse(tainted))\n                break;\n            for (let n = 0; n < lsz; n++)\n                if (tainted[n]) {\n                    for (let a of ligands[n].atoms) {\n                        mol.setAtomPos(a, mol.atomX(a) + bumpDX[n], mol.atomY(a) + bumpDY[n]);\n                    }\n                }\n        }\n    }\n}\n//# sourceMappingURL=MetalLigate.js.map","import { BondArtifact } from '../data/BondArtifact';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { angleDiff, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class FusionPermutation {\n    constructor() {\n        this.attdist = 0;\n        this.guided = false;\n        this.bridged = false;\n        this.scoreModifier = 0;\n        this.chainSelect = 0;\n    }\n}\nclass TemplateFusion {\n    constructor(mol, templ, abbrev) {\n        this.mol = mol;\n        this.templ = templ;\n        this.abbrev = abbrev;\n        this.perms = [];\n        this.numAttach = 0;\n        this.withGuideOnly = false;\n        this.guidetempl = null;\n        this.guideidx = [];\n        this.guideadj = [];\n        this.timeLimit = 5.0;\n        let artif1 = new BondArtifact(mol), artif2 = new BondArtifact(templ);\n        artif2.harmoniseNumbering(artif1);\n        artif2.rewriteMolecule();\n        let poly1 = new PolymerBlock(mol), poly2 = new PolymerBlock(templ);\n        poly2.harmoniseNumbering(poly1);\n        poly2.rewriteMolecule();\n        this.huntForGuides();\n    }\n    permuteNone() {\n        let numAttach = 0;\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        if (oldmol.numAtoms > 0) {\n            let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n            let dx = oldbox.maxX() + 1 - newbox.minX();\n            let dy = 0.5 * (oldbox.minY() + oldbox.maxY()) - 0.5 * (newbox.minY() + newbox.maxY());\n            CoordUtil.translateMolecule(newmol, dx, dy);\n        }\n        else {\n            let newbox = newmol.boundary();\n            CoordUtil.translateMolecule(newmol, -newbox.midX(), -newbox.midY());\n        }\n        let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n        let cx = newbox.midX(), cy = newbox.midY();\n        let ROTN = [0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330];\n        duplicate: for (let n = 0; n < ROTN.length; n++) {\n            let rotmol = newmol.clone();\n            CoordUtil.rotateMolecule(rotmol, -ROTN[n] * DEGRAD, cx, cy);\n            for (let i = 0; i < this.perms.length; i++)\n                if (CoordUtil.sketchEquivalent(rotmol, this.perms[i].display))\n                    continue duplicate;\n            let p = new FusionPermutation();\n            p.mol = oldmol.clone();\n            p.mol.append(rotmol);\n            p.display = rotmol;\n            p.srcidx = this.sourceIndex(p.mol, oldmol);\n            p.attdist = 0;\n            p.guided = false;\n            this.perms.push(p);\n        }\n    }\n    permuteAtom(atom) {\n        this.numAttach = 1;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let n = 0; n < this.guideidx.length; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeGuidedOne(newperms, oldmol, this.guidetempl, atom, this.guideidx[n]);\n                this.composeGuidedOne(newperms, oldmol, fliptempl, atom, this.guideidx[n]);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectOne(newperms, oldmol, newmol, atom, n);\n                this.composeDirectOne(newperms, oldmol, flipmol, atom, n);\n                this.composeBridge(newperms, oldmol, newmol, atom, n);\n                this.composeBridge(newperms, oldmol, flipmol, atom, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteBond(a1, a2) {\n        this.numAttach = 2;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let i = 0; i < this.guideidx.length; i++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let g1 = this.guideidx[i];\n                let adj = this.guidetempl.atomAdjList(g1);\n                for (let j = 0; j < adj.length; j++) {\n                    let g2 = adj[j];\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, false);\n                }\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numBonds; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let nfr = newmol.bondFrom(n), nto = newmol.bondTo(n);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nto, nfr);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nto, nfr);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteMulti(atoms) {\n        this.numAttach = atoms.length;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            if (this.guideidx.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideidx, true);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideidx, true);\n            }\n            if (this.guideadj.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideadj, false);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideadj, false);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectMulti(newperms, oldmol, newmol, atoms, n);\n                this.composeDirectMulti(newperms, oldmol, flipmol, atoms, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    huntForGuides() {\n        this.guideidx = [];\n        this.guideadj = [];\n        for (let n = 1; n <= this.templ.numAtoms; n++)\n            if (this.templ.atomElement(n) == 'X' && this.templ.atomAdjCount(n) > 0) {\n                this.guideidx.push(n);\n                let adj = this.templ.atomAdjList(n);\n                for (let i = 0; i < adj.length; i++)\n                    if (this.guideadj.indexOf(adj[i]) < 0)\n                        this.guideadj.push(adj[i]);\n            }\n        if (this.guideidx.length > 0) {\n            this.guidetempl = this.templ.clone();\n            for (let n = this.guideidx.length - 1; n >= 0; n--)\n                this.templ.deleteAtomAndBonds(this.guideidx[n]);\n        }\n    }\n    composeDirectOne(list, oldmol, newmol, o1, n1) {\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let ocurrent = CoordUtil.atomBondAngles(oldmol, o1);\n        let ncurrent = CoordUtil.atomBondAngles(newmol, n1);\n        let theta1 = [], theta2 = [], scoreMod = [];\n        for (let i = 0; i < ocurrent.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(ocurrent[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(-51);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ncurrent.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ncurrent[j]);\n                scoreMod.push(0);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(0);\n            }\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n        for (let n = 0; n < theta1.length; n++) {\n            let dth = angleDiff(theta1[n], theta2[n]);\n            let frag = newmol.clone();\n            CoordUtil.translateMolecule(frag, ox - nx, oy - ny);\n            CoordUtil.rotateMolecule(frag, dth, ox, oy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [o1];\n            p.temidx = [n1];\n            p.attdist = bfs[n1 - 1];\n            p.guided = false;\n            p.scoreModifier = scoreMod[n];\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeDirectTwo(list, oldmol, newmol, o1, o2, n1, n2) {\n        let oth = Math.atan2(oldmol.atomY(o2) - oldmol.atomY(o1), oldmol.atomX(o2) - oldmol.atomX(o1));\n        let nth = Math.atan2(newmol.atomY(n2) - newmol.atomY(n1), newmol.atomX(n2) - newmol.atomX(n1));\n        let cx = 0.5 * (oldmol.atomX(o1) + oldmol.atomX(o2)), cy = 0.5 * (oldmol.atomY(o1) + oldmol.atomY(o2));\n        let frag = newmol.clone();\n        CoordUtil.translateMolecule(frag, cx - 0.5 * (newmol.atomX(n1) + newmol.atomX(n2)), cy - 0.5 * (newmol.atomY(n1) + newmol.atomY(n2)));\n        CoordUtil.rotateMolecule(frag, oth - nth, cx, cy);\n        frag.setAtomPos(n1, oldmol.atomX(o1), oldmol.atomY(o1));\n        frag.setAtomPos(n2, oldmol.atomX(o2), oldmol.atomY(o2));\n        let pmol = oldmol.clone();\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [n1, n2];\n        p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n        p.guided = false;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeDirectMulti(list, oldmol, newmol, oidx, n1) {\n        let frag = newmol.clone();\n        let x0 = oldmol.atomX(oidx[0]), y0 = oldmol.atomY(oidx[0]);\n        CoordUtil.translateMolecule(frag, x0 - frag.atomX(n1), y0 - frag.atomY(n1));\n        let ox = oldmol.atomX(oidx[1]) - x0, oy = oldmol.atomY(oidx[1]) - y0;\n        let otheta = Math.atan2(oy, ox), orad = norm_xy(ox, oy);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(1);\n        let nidx = [];\n        for (let n2 = 1; n2 <= frag.numAtoms; n2++)\n            if (n1 != n2) {\n                let nx = frag.atomX(n2) - frag.atomX(n1), ny = frag.atomY(n2) - frag.atomY(n1), nrad = norm_xy(nx, ny);\n                if (Math.abs(nrad - orad) > 0.1)\n                    continue;\n                let ntheta = Math.atan2(ny, nx);\n                CoordUtil.rotateMolecule(frag, otheta - ntheta, x0, y0);\n                nidx = [n1, n2];\n                for (let i = 2; i < oidx.length; i++) {\n                    let hit = false;\n                    for (let j = 1; j <= frag.numAtoms; j++)\n                        if (nidx.indexOf(j) < 0)\n                            if (norm_xy(oldmol.atomX(oidx[i]) - frag.atomX(j), oldmol.atomY(oidx[i]) - frag.atomY(j)) < 0.1 * 0.1) {\n                                hit = true;\n                                nidx.push(j);\n                                break;\n                            }\n                    if (!hit)\n                        break;\n                }\n                if (nidx.length < oidx.length)\n                    continue;\n                let lowbfs = bfs.length;\n                for (let n = 0; n < nidx.length; n++)\n                    lowbfs = Math.min(lowbfs, bfs[nidx[n] - 1]);\n                let dx = 0, dy = 0;\n                for (let n = 0; n < oidx.length; n++) {\n                    dx += oldmol.atomX(oidx[n]) - frag.atomX(nidx[n]);\n                    dy += oldmol.atomY(oidx[n]) - frag.atomY(nidx[n]);\n                }\n                let invsz = 1.0 / oidx.length;\n                dx *= invsz;\n                dy *= invsz;\n                CoordUtil.translateMolecule(frag, dx, dy);\n                let pmol = oldmol.clone();\n                let osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                for (let n = 0; n < nidx.length; n++) {\n                    let x = pmol.atomX(oidx[n]), y = pmol.atomY(oidx[n]);\n                    pmol.setAtomPos(osz + nidx[n], x, y);\n                }\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag.clone();\n                p.srcidx = srcidx;\n                p.molidx = oidx.slice(0);\n                p.temidx = nidx.slice(0);\n                p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeBridge(list, oldmol, newmol, o1, n1) {\n        let busy1 = oldmol.atomRingBlock(o1) != 0 || oldmol.atomAdjCount(o1) >= 3;\n        let busy2 = newmol.atomRingBlock(n1) != 0 || newmol.atomAdjCount(n1) >= 3;\n        if (!busy1 || !busy2)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n                let dx = Molecule.IDEALBOND * Math.cos(otheta[i]), dy = Molecule.IDEALBOND * Math.sin(otheta[i]);\n                let dth = angleDiff(otheta[i], Math.PI + ntheta[j]);\n                let frag = newmol.clone();\n                CoordUtil.translateMolecule(frag, ox - nx + dx, oy - ny + dy);\n                CoordUtil.rotateMolecule(frag, dth, ox + dx, oy + dy);\n                let pmol = oldmol.clone();\n                let att = pmol.numAtoms + n1, osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                pmol.addBond(o1, att, 1);\n                att = frag.addAtom('C', ox, oy);\n                frag.addBond(n1, att, 1);\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = [o1];\n                p.temidx = [att];\n                p.attdist = bfs[n1 - 1];\n                p.bridged = true;\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeGuidedOne(list, oldmol, newmol, oidx, gidx) {\n        if (newmol.atomAdjCount(gidx) == 0)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, oidx);\n        if (newmol.atomAdjCount(gidx) > 1 && oldmol.atomAdjCount(oidx) > 0) {\n            let ox = 0, oy = 0;\n            let adj = oldmol.atomAdjList(oidx);\n            for (let n = 0; n < adj.length; n++) {\n                ox += oldmol.atomX(adj[n]) - oldmol.atomX(oidx);\n                oy += oldmol.atomY(adj[n]) - oldmol.atomY(oidx);\n            }\n            let ang = Math.atan2(oy, ox);\n            let unique = true;\n            for (let n = 0; n < otheta.length; n++)\n                if (Math.abs(angleDiff(ang, otheta[n])) < 3 * RADDEG) {\n                    unique = false;\n                    break;\n                }\n            if (unique)\n                otheta.push(ang);\n        }\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let dx = 0, dy = 0;\n        let adj = newmol.atomAdjList(gidx);\n        for (let n = 0; n < adj.length; n++) {\n            dx += newmol.atomX(adj[n]) - gx;\n            dy += newmol.atomY(adj[n]) - gy;\n        }\n        dx /= adj.length;\n        dy /= adj.length;\n        let ntheta = Math.atan2(dy, dx);\n        let homoPenalty = 0;\n        if (adj.length == 1) {\n            let oel = oldmol.atomElement(oidx), nel = newmol.atomElement(adj[0]);\n            if (oel != 'C' && oel == nel)\n                homoPenalty = 1;\n        }\n        for (let n = 0; n < otheta.length; n++) {\n            let frag = newmol.clone();\n            if (this.guideidx.length == 2) {\n                for (let i = 1; i <= frag.numAtoms; i++)\n                    if (i != gidx && frag.atomElement(i) == 'X') {\n                        frag.setAtomElement(i, TemplateFusion.RESERVED_GUIDESYMBOL);\n                        break;\n                    }\n            }\n            CoordUtil.rotateMolecule(frag, otheta[n] - ntheta, gx, gy);\n            CoordUtil.translateMolecule(frag, oldmol.atomX(oidx) - gx, oldmol.atomY(oidx) - gy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let sel = 0;\n            for (let i = 1; i <= pmol.numAtoms; i++)\n                if (pmol.atomElement(i) == TemplateFusion.RESERVED_GUIDESYMBOL) {\n                    let padj = pmol.atomAdjList(i);\n                    if (padj.length == 1) {\n                        sel = padj[0];\n                        if (sel > i)\n                            sel--;\n                    }\n                    pmol.deleteAtomAndBonds(i);\n                    srcidx.splice(i - 1, 1);\n                    break;\n                }\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [oidx];\n            p.temidx = [gidx];\n            p.attdist = 0;\n            p.guided = true;\n            p.scoreModifier = homoPenalty;\n            p.chainSelect = sel;\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeGuidedTwo(list, oldmol, newmol, o1, o2, gidx, nidx, snapToGuide) {\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1);\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let nx = newmol.atomX(nidx), ny = newmol.atomY(nidx);\n        let otheta = Math.atan2(oldmol.atomY(o2) - oy, oldmol.atomX(o2) - ox);\n        let gtheta = Math.atan2(ny - gy, nx - gx);\n        let isGuideOnTerminal = oldmol.atomAdjCount(o1) == 1;\n        let pmol = oldmol.clone(), frag = newmol.clone();\n        CoordUtil.rotateMolecule(frag, otheta - gtheta, gx, gy);\n        if (snapToGuide) {\n            CoordUtil.translateMolecule(frag, ox - gx, oy - gy);\n            pmol.setAtomPos(o2, frag.atomX(nidx), frag.atomY(nidx));\n        }\n        else {\n            CoordUtil.translateMolecule(frag, oldmol.atomX(o2) - frag.atomX(nidx), oldmol.atomY(o2) - frag.atomY(nidx));\n            frag.setAtomPos(gidx, ox, oy);\n        }\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [gidx, nidx];\n        p.attdist = isGuideOnTerminal ? 1 : 0;\n        p.guided = true;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeGuidedMulti(list, oldmol, newmol, oidx, gidx, nudgenew) {\n        let cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0;\n        for (let n = 0; n < oidx.length; n++) {\n            cx1 += oldmol.atomX(oidx[n]);\n            cy1 += oldmol.atomY(oidx[n]);\n        }\n        for (let n = 0; n < gidx.length; n++) {\n            cx2 += newmol.atomX(gidx[n]);\n            cy2 += newmol.atomY(gidx[n]);\n        }\n        cx1 /= oidx.length;\n        cy1 /= oidx.length;\n        cx2 /= gidx.length;\n        cy2 /= gidx.length;\n        let osz = oldmol.numAtoms;\n        for (let i = 0; i < oidx.length; i++)\n            for (let j = 0; j < gidx.length; j++) {\n                let pmol = oldmol.clone(), frag = newmol.clone();\n                let th1 = Math.atan2(pmol.atomY(oidx[i]) - cy1, pmol.atomX(oidx[i]) - cx1);\n                let th2 = Math.atan2(frag.atomY(gidx[j]) - cy2, frag.atomX(gidx[j]) - cx2);\n                CoordUtil.rotateMolecule(frag, th1 - th2, cx2, cy2);\n                CoordUtil.translateMolecule(frag, cx1 - cx2, cy1 - cy2);\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                let midx = Vec.numberArray(0, gidx.length), tidx = gidx.slice(0);\n                Vec.sort(tidx);\n                let mask = Vec.booleanArray(false, osz);\n                for (let g = tidx.length - 1; g >= 0; g--) {\n                    let gatom = tidx[g] + osz;\n                    let closest = 0, closeDSQ = 0;\n                    for (let n = 0; n < oidx.length; n++)\n                        if (!mask[oidx[n] - 1]) {\n                            let dx = pmol.atomX(oidx[n]) - pmol.atomX(gatom), dy = pmol.atomY(oidx[n]) - pmol.atomY(gatom);\n                            let dsq = norm_xy(dx, dy);\n                            if (closest == 0 || dsq < closeDSQ) {\n                                closest = oidx[n];\n                                closeDSQ = dsq;\n                            }\n                        }\n                    if (!nudgenew) {\n                        let dsq = norm_xy(pmol.atomX(gatom) - pmol.atomX(closest), pmol.atomY(gatom) - pmol.atomY(closest));\n                        if (dsq > 0.1 * 0.1) {\n                            let num = frag.addAtom('C', pmol.atomX(closest), pmol.atomY(closest));\n                            frag.addBond(num, tidx[g], 0);\n                        }\n                        pmol.setAtomPos(closest, pmol.atomX(gatom), pmol.atomY(gatom));\n                    }\n                    midx[g] = closest;\n                    mask[closest - 1] = true;\n                    let adj = pmol.atomAdjList(gatom);\n                    for (let n = 0; n < adj.length; n++) {\n                        let b = pmol.findBond(gatom, adj[n]);\n                        pmol.addBond(closest, adj[n], pmol.bondOrder(b), pmol.bondType(b));\n                    }\n                    pmol.deleteAtomAndBonds(gatom);\n                    srcidx.splice(gatom - 1, 1);\n                    frag.setAtomPos(tidx[g], pmol.atomX(closest), pmol.atomY(closest));\n                }\n                for (let n = pmol.numAtoms; n > osz; n--)\n                    if (pmol.atomElement(n) == 'X') {\n                        pmol.deleteAtomAndBonds(n);\n                        srcidx.splice(n - 1, 1);\n                        for (let k = 0; k < tidx.length; k++)\n                            if (n < tidx[k])\n                                tidx[k]--;\n                    }\n                for (let n = frag.numAtoms; n >= 1; n--)\n                    if (frag.atomElement(n) == 'X') {\n                        frag.setAtomElement(n, 'C');\n                    }\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = midx;\n                p.temidx = tidx;\n                p.attdist = 0;\n                p.guided = true;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    affixRawPermutations(list) {\n        let npsz = list.length;\n        if (npsz == 0)\n            return;\n        let umask = Vec.booleanArray(true, npsz);\n        for (let i = 0; i < npsz - 1; i++)\n            if (umask[i]) {\n                let p1 = list[i];\n                for (let j = i + 1; j < npsz; j++)\n                    if (umask[j]) {\n                        let p2 = list[j];\n                        if (CoordUtil.sketchEquivalent(p1.mol, p2.mol)) {\n                            if (p1.scoreModifier + p1.attdist > p2.scoreModifier + p2.attdist) {\n                                list[i] = p2;\n                                list[j] = p1;\n                            }\n                            umask[j] = false;\n                        }\n                    }\n            }\n        let score = Vec.numberArray(0, npsz);\n        let numKeep = 0;\n        for (let n = 0; n < npsz; n++) {\n            if (umask[n]) {\n                score[n] = this.scorePermutation(list[n]);\n                if (score[n] < 1000)\n                    numKeep++;\n            }\n            else\n                score[n] = 0;\n        }\n        if (numKeep > 0)\n            for (let n = 0; n < npsz; n++)\n                if (umask[n] && score[n] >= 1000)\n                    umask[n] = false;\n        let uscore = [], uidx = [];\n        for (let n = 0; n < npsz; n++)\n            if (umask[n]) {\n                uscore.push(score[n]);\n                uidx.push(n);\n            }\n        let sidx = Vec.idxSort(uscore);\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (p.guided) {\n                this.perms.push(p);\n            }\n        }\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (!p.guided) {\n                this.perms.push(p);\n            }\n        }\n    }\n    removeExtraGuides(perm, oldmol) {\n        MolUtil.removeDuplicateBonds(perm.mol);\n        for (let n = perm.temidx.length - 1; n >= 0; n--) {\n            let el = perm.display.atomElement(perm.temidx[n]);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            perm.molidx.splice(n, 1);\n            perm.temidx.splice(n, 1);\n        }\n        for (let n = perm.display.numAtoms; n >= 1; n--) {\n            let el = perm.display.atomElement(n);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            let a = CoordUtil.atomAtPoint(oldmol, perm.display.atomX(n), perm.display.atomY(n));\n            if (a > 0)\n                perm.display.setAtomElement(n, 'C');\n            else {\n                perm.display.deleteAtomAndBonds(n);\n                for (let i = 0; i < perm.temidx.length; i++)\n                    if (perm.temidx[i] > n)\n                        perm.temidx[i]--;\n            }\n        }\n    }\n    scorePermutation(perm) {\n        let mol = this.mol, tmol = perm.display, tunion = perm.mol;\n        let score = 0.2 * perm.attdist + perm.scoreModifier;\n        score += CoordUtil.congestionMolecule(tunion, 1e-3);\n        score -= tunion.numAtoms;\n        let sz1 = mol.numAtoms, sz2 = tmol.numAtoms;\n        let mx1 = [], my1 = [], mx2 = [], my2 = [];\n        for (let n = 0; n < sz1; n++) {\n            mx1.push(mol.atomX(n + 1));\n            my1.push(mol.atomY(n + 1));\n        }\n        for (let n = 0; n < sz2; n++) {\n            mx2.push(tmol.atomX(n + 1));\n            my2.push(tmol.atomY(n + 1));\n        }\n        for (let i = 0; i < sz1; i++)\n            for (let j = 0; j < sz2; j++) {\n                if (norm_xy(mx1[i] - mx2[j], my1[i] - my2[j]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                    continue;\n                let contained = false;\n                for (let k = 0; k < perm.molidx.length; k++)\n                    if (perm.molidx[k] == i + 1 && perm.temidx[k] == j + 1) {\n                        contained = true;\n                        break;\n                    }\n                if (contained)\n                    continue;\n                score += 100;\n            }\n        if (!perm.guided)\n            for (let n = 0; n < perm.molidx.length; n++) {\n                let el = mol.atomElement(perm.molidx[n]);\n                if (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P')\n                    continue;\n                let adj1 = mol.atomAdjList(perm.molidx[n]), adj2 = tmol.atomAdjList(perm.temidx[n]);\n                if (adj1.length + adj2.length >= 4)\n                    continue;\n                for (let i = 0; i < adj1.length; i++)\n                    for (let j = 0; j < adj2.length; j++) {\n                        let ai = adj1[i], aj = adj2[j];\n                        let bo1 = mol.bondOrder(mol.findBond(perm.molidx[n], ai));\n                        let bo2 = tmol.bondOrder(tmol.findBond(perm.temidx[n], aj));\n                        let wantTheta = 0;\n                        if ((bo1 == 1 && bo2 == 1) || (bo1 == 1 && bo2 == 2) || (bo1 == 2 && bo2 == 1))\n                            wantTheta = 120;\n                        else if ((bo1 == 2 && bo2 == 2) || (bo1 == 1 && bo2 == 3) || (bo1 == 3 && bo2 == 1))\n                            wantTheta = 180;\n                        else\n                            continue;\n                        let dx1 = mx1[ai - 1] - mx1[perm.molidx[n] - 1];\n                        let dy1 = my1[ai - 1] - my1[perm.molidx[n] - 1];\n                        let dx2 = mx2[aj - 1] - mx2[perm.temidx[n] - 1];\n                        let dy2 = my2[aj - 1] - my2[perm.temidx[n] - 1];\n                        let theta = Math.abs(angleDiff(Math.atan2(dy1, dx1), Math.atan2(dy2, dx2))) * RADDEG;\n                        if (Math.abs(theta - wantTheta) > 5)\n                            score += 50;\n                    }\n            }\n        for (let n = 1; n <= tunion.numAtoms; n++)\n            if (tunion.atomElement(n) == 'C' || tunion.atomElement(n) == 'N') {\n                let adjb = tunion.atomAdjBonds(n);\n                let totalBO = 0;\n                for (let i = 0; i < adjb.length; i++) {\n                    let bo = tunion.bondOrder(adjb[i]);\n                    totalBO += bo;\n                    if (bo == 0) {\n                        totalBO = 0;\n                        break;\n                    }\n                }\n                if (totalBO > 4)\n                    score += 1000;\n            }\n        if (perm.molidx.length >= 2) {\n            let mmask = Vec.booleanArray(false, sz1);\n            for (let n = 0; n < perm.molidx.length; n++)\n                mmask[perm.molidx[n] - 1] = true;\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                if (!mmask[bfr - 1] || !mmask[bto - 1])\n                    continue;\n                let tfr = perm.molidx.indexOf(bfr), tto = perm.molidx.indexOf(bto);\n                let tn = tmol.findBond(perm.temidx[tfr], perm.temidx[tto]);\n                if (tn == 0)\n                    continue;\n                if (mol.bondOrder(n) != tmol.bondOrder(tn))\n                    score += 1;\n            }\n        }\n        return score;\n    }\n    sourceIndex(xmol, wmol) {\n        let idx = Vec.numberArray(0, xmol.numAtoms);\n        for (let n = wmol.numAtoms; n >= 1; n--)\n            idx[n - 1] = n;\n        return idx;\n    }\n    asMask(imask) {\n        let ret = Vec.booleanArray(false, imask.length);\n        for (let n = 0; n < imask.length; n++)\n            ret[n] = imask[n] != 0;\n        return ret;\n    }\n}\nTemplateFusion.RESERVED_GUIDESYMBOL = 'XXX';\nexport { TemplateFusion };\n//# sourceMappingURL=TemplateFusion.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { BondArtifact } from '../data/BondArtifact';\nimport { Chemistry } from '../data/Chemistry';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { Graph } from '../data/Graph';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { QueryTypeAtom, QueryUtil } from '../data/QueryUtil';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { angleDiff, angleNorm, DEGRAD, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { MetalLigate } from './MetalLigate';\nimport { TemplateFusion } from './TemplateFusion';\nexport var ActivityType;\n(function (ActivityType) {\n    ActivityType[ActivityType[\"Delete\"] = 1] = \"Delete\";\n    ActivityType[ActivityType[\"Clear\"] = 2] = \"Clear\";\n    ActivityType[ActivityType[\"Copy\"] = 3] = \"Copy\";\n    ActivityType[ActivityType[\"Cut\"] = 4] = \"Cut\";\n    ActivityType[ActivityType[\"SelectAll\"] = 5] = \"SelectAll\";\n    ActivityType[ActivityType[\"SelectNone\"] = 6] = \"SelectNone\";\n    ActivityType[ActivityType[\"SelectPrevComp\"] = 7] = \"SelectPrevComp\";\n    ActivityType[ActivityType[\"SelectNextComp\"] = 8] = \"SelectNextComp\";\n    ActivityType[ActivityType[\"SelectSide\"] = 9] = \"SelectSide\";\n    ActivityType[ActivityType[\"SelectGrow\"] = 10] = \"SelectGrow\";\n    ActivityType[ActivityType[\"SelectShrink\"] = 11] = \"SelectShrink\";\n    ActivityType[ActivityType[\"SelectChain\"] = 12] = \"SelectChain\";\n    ActivityType[ActivityType[\"SelectSmRing\"] = 13] = \"SelectSmRing\";\n    ActivityType[ActivityType[\"SelectRingBlk\"] = 14] = \"SelectRingBlk\";\n    ActivityType[ActivityType[\"SelectCurElement\"] = 15] = \"SelectCurElement\";\n    ActivityType[ActivityType[\"SelectToggle\"] = 16] = \"SelectToggle\";\n    ActivityType[ActivityType[\"SelectUnCurrent\"] = 17] = \"SelectUnCurrent\";\n    ActivityType[ActivityType[\"Element\"] = 18] = \"Element\";\n    ActivityType[ActivityType[\"AtomPos\"] = 19] = \"AtomPos\";\n    ActivityType[ActivityType[\"Charge\"] = 20] = \"Charge\";\n    ActivityType[ActivityType[\"Connect\"] = 21] = \"Connect\";\n    ActivityType[ActivityType[\"Disconnect\"] = 22] = \"Disconnect\";\n    ActivityType[ActivityType[\"MetalLigate\"] = 23] = \"MetalLigate\";\n    ActivityType[ActivityType[\"BondOrder\"] = 24] = \"BondOrder\";\n    ActivityType[ActivityType[\"BondType\"] = 25] = \"BondType\";\n    ActivityType[ActivityType[\"BondGeom\"] = 26] = \"BondGeom\";\n    ActivityType[ActivityType[\"BondAtom\"] = 27] = \"BondAtom\";\n    ActivityType[ActivityType[\"BondSwitch\"] = 28] = \"BondSwitch\";\n    ActivityType[ActivityType[\"BondRotate\"] = 29] = \"BondRotate\";\n    ActivityType[ActivityType[\"BondAddTwo\"] = 30] = \"BondAddTwo\";\n    ActivityType[ActivityType[\"BondInsert\"] = 31] = \"BondInsert\";\n    ActivityType[ActivityType[\"Join\"] = 32] = \"Join\";\n    ActivityType[ActivityType[\"Nudge\"] = 33] = \"Nudge\";\n    ActivityType[ActivityType[\"NudgeLots\"] = 34] = \"NudgeLots\";\n    ActivityType[ActivityType[\"NudgeFar\"] = 35] = \"NudgeFar\";\n    ActivityType[ActivityType[\"Flip\"] = 36] = \"Flip\";\n    ActivityType[ActivityType[\"Scale\"] = 37] = \"Scale\";\n    ActivityType[ActivityType[\"Rotate\"] = 38] = \"Rotate\";\n    ActivityType[ActivityType[\"BondDist\"] = 39] = \"BondDist\";\n    ActivityType[ActivityType[\"AlignAngle\"] = 40] = \"AlignAngle\";\n    ActivityType[ActivityType[\"AlignRegular\"] = 41] = \"AlignRegular\";\n    ActivityType[ActivityType[\"AdjustTorsion\"] = 42] = \"AdjustTorsion\";\n    ActivityType[ActivityType[\"Move\"] = 43] = \"Move\";\n    ActivityType[ActivityType[\"Ring\"] = 44] = \"Ring\";\n    ActivityType[ActivityType[\"TemplateFusion\"] = 45] = \"TemplateFusion\";\n    ActivityType[ActivityType[\"AbbrevTempl\"] = 46] = \"AbbrevTempl\";\n    ActivityType[ActivityType[\"AbbrevGroup\"] = 47] = \"AbbrevGroup\";\n    ActivityType[ActivityType[\"AbbrevFormula\"] = 48] = \"AbbrevFormula\";\n    ActivityType[ActivityType[\"AbbrevClear\"] = 49] = \"AbbrevClear\";\n    ActivityType[ActivityType[\"AbbrevExpand\"] = 50] = \"AbbrevExpand\";\n    ActivityType[ActivityType[\"BondArtifactPath\"] = 51] = \"BondArtifactPath\";\n    ActivityType[ActivityType[\"BondArtifactRing\"] = 52] = \"BondArtifactRing\";\n    ActivityType[ActivityType[\"BondArtifactArene\"] = 53] = \"BondArtifactArene\";\n    ActivityType[ActivityType[\"BondArtifactClear\"] = 54] = \"BondArtifactClear\";\n    ActivityType[ActivityType[\"PolymerBlock\"] = 55] = \"PolymerBlock\";\n    ActivityType[ActivityType[\"AddHydrogens\"] = 56] = \"AddHydrogens\";\n    ActivityType[ActivityType[\"RemoveHydrogens\"] = 57] = \"RemoveHydrogens\";\n    ActivityType[ActivityType[\"QueryClear\"] = 58] = \"QueryClear\";\n    ActivityType[ActivityType[\"QueryCopy\"] = 59] = \"QueryCopy\";\n    ActivityType[ActivityType[\"QueryPaste\"] = 60] = \"QueryPaste\";\n    ActivityType[ActivityType[\"QuerySetAtom\"] = 61] = \"QuerySetAtom\";\n    ActivityType[ActivityType[\"QuerySetBond\"] = 62] = \"QuerySetBond\";\n    ActivityType[ActivityType[\"QueryBondAny\"] = 63] = \"QueryBondAny\";\n    ActivityType[ActivityType[\"SproutDirection\"] = 64] = \"SproutDirection\";\n})(ActivityType || (ActivityType = {}));\nexport class MoleculeActivity {\n    constructor(input, activity, param, owner) {\n        this.input = input;\n        this.activity = activity;\n        this.param = param;\n        this.owner = owner;\n        this.toClipboard = null;\n        this.output =\n            {\n                mol: null,\n                currentAtom: -1,\n                currentBond: -1,\n                selectedMask: null\n            };\n        let na = this.input.mol.numAtoms;\n        if (this.input.selectedMask == null)\n            this.input.selectedMask = Vec.booleanArray(false, na);\n        while (this.input.selectedMask.length < na)\n            this.input.selectedMask.push(false);\n        this.subjectMask = this.input.selectedMask.slice(0);\n        this.subjectLength = Vec.maskCount(this.subjectMask);\n        this.subjectIndex = [];\n        this.hasSelected = this.subjectLength > 0;\n        if (this.subjectLength == 0) {\n            if (this.input.currentAtom > 0) {\n                this.subjectLength = 1;\n                this.subjectMask[this.input.currentAtom - 1] = true;\n                this.subjectIndex = [this.input.currentAtom];\n            }\n            else if (this.input.currentBond > 0) {\n                let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n                let b1 = Math.min(bfr, bto), b2 = Math.max(bfr, bto);\n                this.subjectLength = 2;\n                this.subjectMask[b1 - 1] = true;\n                this.subjectMask[b2 - 1] = true;\n                this.subjectIndex = [b1, b2];\n            }\n        }\n        else {\n            this.subjectIndex = Vec.maskIdx(this.subjectMask);\n            Vec.addTo(this.subjectIndex, 1);\n        }\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    evaluate() {\n        return true;\n    }\n    execute() {\n        let param = this.param;\n        if (this.activity == ActivityType.Delete)\n            this.execDelete();\n        else if (this.activity == ActivityType.Clear)\n            this.execClear();\n        else if (this.activity == ActivityType.Copy)\n            this.execCopy(false);\n        else if (this.activity == ActivityType.Cut)\n            this.execCopy(true);\n        else if (this.activity == ActivityType.SelectAll)\n            this.execSelectAll(true);\n        else if (this.activity == ActivityType.SelectNone)\n            this.execSelectAll(false);\n        else if (this.activity == ActivityType.SelectPrevComp)\n            this.execSelectComp(-1);\n        else if (this.activity == ActivityType.SelectNextComp)\n            this.execSelectComp(1);\n        else if (this.activity == ActivityType.SelectSide)\n            this.execSelectSide();\n        else if (this.activity == ActivityType.SelectGrow)\n            this.execSelectGrow();\n        else if (this.activity == ActivityType.SelectShrink)\n            this.execSelectShrink();\n        else if (this.activity == ActivityType.SelectChain)\n            this.execSelectChain();\n        else if (this.activity == ActivityType.SelectSmRing)\n            this.execSelectSmRing();\n        else if (this.activity == ActivityType.SelectRingBlk)\n            this.execSelectRingBlk();\n        else if (this.activity == ActivityType.SelectCurElement)\n            this.execSelectCurElement();\n        else if (this.activity == ActivityType.SelectToggle)\n            this.execSelectToggle();\n        else if (this.activity == ActivityType.SelectUnCurrent)\n            this.execSelectUnCurrent();\n        else if (this.activity == ActivityType.Element)\n            this.execElement(param.element, param.positionX, param.positionY, param.keepAbbrev);\n        else if (this.activity == ActivityType.Charge)\n            this.execCharge(param.delta);\n        else if (this.activity == ActivityType.Connect)\n            this.execConnect(1, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.Disconnect)\n            this.execDisconnect();\n        else if (this.activity == ActivityType.MetalLigate)\n            this.execMetalLigate();\n        else if (this.activity == ActivityType.BondOrder)\n            this.execBond(param.order, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.BondType)\n            this.execBond(1, param.type);\n        else if (this.activity == ActivityType.BondGeom)\n            this.execBondGeom(param.geom);\n        else if (this.activity == ActivityType.BondAtom)\n            this.execBondAtom(param.order, param.type, param.element, param.x1, param.y1, param.x2, param.y2);\n        else if (this.activity == ActivityType.BondSwitch)\n            this.execBondSwitch();\n        else if (this.activity == ActivityType.BondRotate)\n            this.execBondRotate();\n        else if (this.activity == ActivityType.BondAddTwo)\n            this.execBondAddTwo();\n        else if (this.activity == ActivityType.BondInsert)\n            this.execBondInsert();\n        else if (this.activity == ActivityType.Join)\n            this.execJoin();\n        else if (this.activity == ActivityType.Nudge)\n            this.execNudge(param.dir, 0.1);\n        else if (this.activity == ActivityType.NudgeLots)\n            this.execNudge(param.dir, 1);\n        else if (this.activity == ActivityType.NudgeFar)\n            this.execNudgeFar(param.dir);\n        else if (this.activity == ActivityType.Flip)\n            this.execFlip(param.axis);\n        else if (this.activity == ActivityType.Scale)\n            this.execScale(param.mag);\n        else if (this.activity == ActivityType.Rotate)\n            this.execRotate(param.theta, param.centreX, param.centreY);\n        else if (this.activity == ActivityType.BondDist)\n            this.execBondDist(param.dist);\n        else if (this.activity == ActivityType.AlignAngle)\n            this.execAlignAngle(param.angle);\n        else if (this.activity == ActivityType.AlignRegular)\n            this.execAlignRegular();\n        else if (this.activity == ActivityType.AdjustTorsion)\n            this.execAdjustTorsion(param.angle);\n        else if (this.activity == ActivityType.Move)\n            this.execMove(param.refAtom, param.deltaX, param.deltaY);\n        else if (this.activity == ActivityType.Ring)\n            this.execRing(param.ringX, param.ringY, param.aromatic);\n        else if (this.activity == ActivityType.TemplateFusion) {\n            this.execTemplateFusion(Molecule.fromString(param.fragNative));\n            if (this.owner)\n                this.owner.setPermutations(this.output.permutations);\n            return;\n        }\n        else if (this.activity == ActivityType.AbbrevTempl)\n            this.execAbbrevTempl();\n        else if (this.activity == ActivityType.AbbrevGroup)\n            this.execAbbrevGroup();\n        else if (this.activity == ActivityType.AbbrevFormula)\n            this.execAbbrevFormula();\n        else if (this.activity == ActivityType.AbbrevClear)\n            this.execAbbrevClear();\n        else if (this.activity == ActivityType.AbbrevExpand)\n            this.execAbbrevExpand();\n        else if (this.activity == ActivityType.BondArtifactPath || this.activity == ActivityType.BondArtifactRing ||\n            this.activity == ActivityType.BondArtifactArene || this.activity == ActivityType.BondArtifactClear)\n            this.execBondArtifact(this.activity);\n        else if (this.activity == ActivityType.PolymerBlock)\n            this.execPolymerBlock();\n        else if (this.activity == ActivityType.AddHydrogens)\n            this.execAddHydrogens();\n        else if (this.activity == ActivityType.RemoveHydrogens)\n            this.execRemoveHydrogens();\n        else if (this.activity == ActivityType.QueryClear)\n            this.execQueryClear();\n        else if (this.activity == ActivityType.QueryCopy)\n            this.execQueryCopy();\n        else if (this.activity == ActivityType.QueryPaste)\n            this.execQueryPaste();\n        else if (this.activity == ActivityType.QuerySetAtom)\n            this.execQuerySetAtom();\n        else if (this.activity == ActivityType.QuerySetBond)\n            this.execQuerySetBond();\n        else if (this.activity == ActivityType.QueryBondAny)\n            this.execQueryBondAny();\n        else if (this.activity == ActivityType.SproutDirection)\n            this.execSproutDirection(param.deltaX, param.deltaY);\n        this.finish();\n    }\n    finish() {\n        if (!this.owner)\n            return;\n        if (this.output.mol != null || this.output.currentAtom >= 0 || this.output.currentBond >= 0 || this.output.selectedMask != null) {\n            this.owner.setState(this.output, true);\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, false);\n        }\n        else {\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, true);\n        }\n    }\n    execDelete() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.mol = mol.clone();\n        this.zapSubject();\n        if (this.input.currentBond > 0 && !this.hasSelected) {\n            this.output.mol.deleteBond(this.input.currentBond);\n            this.output.currentBond = 0;\n            return;\n        }\n        if (this.subjectLength == 1 && this.subjectIndex[0] == this.input.currentAtom) {\n            let adj = mol.atomAdjList(this.input.currentAtom);\n            if (adj.length == 1) {\n                this.output.currentAtom = adj[0];\n                if (this.output.currentAtom > this.input.currentAtom)\n                    this.output.currentAtom--;\n            }\n        }\n        for (let n = this.subjectLength - 1; n >= 0; n--)\n            this.output.mol.deleteAtomAndBonds(this.subjectIndex[n]);\n    }\n    execCopy(withCut) {\n        let mol = this.input.mol;\n        if (this.subjectLength > 0)\n            mol = MolUtil.subgraphWithAttachments(mol, this.subjectMask);\n        if (this.owner)\n            this.owner.performCopy(mol);\n        else\n            this.toClipboard = mol.toString();\n        if (withCut) {\n            this.zapSubject();\n            this.output.mol = MolUtil.subgraphMask(this.input.mol, Vec.notMask(this.subjectMask));\n        }\n    }\n    execClear() {\n        this.output.mol = new Molecule();\n        this.zapSubject();\n    }\n    execSelectAll(all) {\n        let same = true;\n        for (let n = 0; n < this.input.mol.numAtoms; n++)\n            if (this.subjectMask[n] != all) {\n                same = false;\n                break;\n            }\n        if (same) {\n            this.errmsg = all ? 'All atoms already selected.' : 'All atoms already deselected.';\n            return;\n        }\n        this.output.selectedMask = Vec.booleanArray(all, this.input.mol.numAtoms);\n    }\n    execSelectComp(dir) {\n        let cclist = MolUtil.componentList(this.input.mol);\n        if (cclist.length == 1 && this.hasSelected && this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'All atoms already selected.';\n            return;\n        }\n        let sel = this.pickSelectedGroup(cclist, dir);\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n        for (let n = 0; n < cclist[sel].length; n++)\n            this.output.selectedMask[cclist[sel][n] - 1] = true;\n    }\n    execSelectSide() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        if (currentAtom > 0 && mol.atomAdjCount(currentAtom) == 0) {\n            this.errmsg = 'Current atom has no neighbours.';\n            return;\n        }\n        if (currentBond > 0 && mol.atomAdjCount(mol.bondFrom(currentBond)) == 1 && mol.atomAdjCount(mol.bondTo(currentBond)) == 1) {\n            this.errmsg = 'Current bond has no neighbours.';\n            return;\n        }\n        let sides = currentAtom > 0 ? MolUtil.getAtomSides(mol, currentAtom) : MolUtil.getBondSides(mol, currentBond);\n        let sel = this.pickSelectedGroup(sides, 1);\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = 0; n < sides[sel].length; n++)\n            this.output.selectedMask[sides[sel][n] - 1] = true;\n    }\n    execSelectGrow() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (!this.hasSelected) {\n            if (currentAtom > 0) {\n                this.output.selectedMask[currentAtom - 1] = true;\n            }\n            else {\n                this.output.selectedMask[mol.bondFrom(currentBond) - 1] = true;\n                this.output.selectedMask[mol.bondTo(currentBond) - 1] = true;\n            }\n        }\n        else {\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n                if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto])\n                    this.output.selectedMask[bto] = true;\n                else if (this.input.selectedMask && !this.input.selectedMask[bfr])\n                    this.output.selectedMask[bfr] = true;\n            }\n        }\n    }\n    execSelectShrink() {\n        if (!this.requireSelected())\n            return;\n        let mol = this.input.mol;\n        let count = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (!this.input.selectedMask[bfr] || !this.input.selectedMask[bto])\n                continue;\n            count[bfr]++;\n            count[bto]++;\n        }\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 0; n < mol.numAtoms; n++)\n            this.output.selectedMask[n] = this.input.selectedMask[n] && count[n] >= 2;\n    }\n    execSelectChain() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto] && mol.atomRingBlock(bto + 1) == 0)\n                this.output.selectedMask[bto] = true;\n            else if (this.input.selectedMask[bto] && !this.input.selectedMask[bfr] && mol.atomRingBlock(bfr + 1) == 0)\n                this.output.selectedMask[bfr] = true;\n        }\n    }\n    execSelectSmRing() {\n        if (!this.requireSubject())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let r = 3; r <= 8; r++) {\n            let rings = this.input.mol.findRingsOfSize(r);\n            for (let i = 0; i < rings.length; i++) {\n                let any = false;\n                for (let j = 0; j < rings[i].length; j++)\n                    if (this.subjectMask[rings[i][j] - 1]) {\n                        any = true;\n                        break;\n                    }\n                if (any)\n                    for (let j = 0; j < rings[i].length; j++)\n                        this.output.selectedMask[rings[i][j] - 1] = true;\n            }\n        }\n    }\n    execSelectRingBlk() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let maxRB = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            maxRB = Math.max(maxRB, mol.atomRingBlock(n));\n        if (maxRB == 0)\n            return;\n        let gotRB = Vec.booleanArray(false, maxRB);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && this.subjectMask[n - 1])\n                gotRB[rb - 1] = true;\n        }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && gotRB[rb - 1])\n                this.output.selectedMask[n - 1] = true;\n        }\n    }\n    execSelectCurElement() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let el1 = '', el2 = '';\n        if (this.input.currentAtom > 0) {\n            el1 = mol.atomElement(this.input.currentAtom);\n        }\n        else {\n            el1 = mol.atomElement(mol.bondFrom(this.input.currentBond));\n            el2 = mol.atomElement(mol.bondTo(this.input.currentBond));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n) == el1 || mol.atomElement(n) == el2)\n                this.output.selectedMask[n - 1] = true;\n    }\n    execSelectToggle() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = !this.output.selectedMask[this.input.currentAtom - 1];\n        }\n        else {\n            let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n            let sel = !this.input.selectedMask[bfr - 1] || !this.input.selectedMask[bto - 1];\n            this.output.selectedMask[bfr - 1] = sel;\n            this.output.selectedMask[bto - 1] = sel;\n        }\n    }\n    execSelectUnCurrent() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = false;\n        }\n        else {\n            this.output.selectedMask[this.input.mol.bondFrom(this.input.currentBond) - 1] = false;\n            this.output.selectedMask[this.input.mol.bondTo(this.input.currentBond) - 1] = false;\n        }\n    }\n    execElement(element, positionX, positionY, keepAbbrev) {\n        const QUERY_ELEMENTS = ['A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'R'];\n        if (this.subjectLength > 0 && !QUERY_ELEMENTS.includes(element)) {\n            let anyChange = false;\n            for (let n = 0; n < this.subjectLength; n++)\n                if (this.input.mol.atomElement(this.subjectIndex[n]) != element) {\n                    anyChange = true;\n                    break;\n                }\n            if (!anyChange) {\n                this.errmsg = 'Elements not changed.';\n                return;\n            }\n        }\n        let mol = this.output.mol = this.input.mol.clone();\n        let applyQuery = (atom) => {\n            if (element == 'A') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'X') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'I']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Y') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['O', 'S', 'Se', 'Te']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Z') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'O', 'S']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Q') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H', 'C']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'M') {\n                const NON_METALS = ['H', 'B', 'C', 'N', 'O', 'F', 'Si', 'P', 'S', 'Cl', 'As', 'Se', 'Br', 'Te', 'I'];\n                QueryUtil.setQueryAtomElementsNot(mol, atom, NON_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'T') {\n                const TRANSITION_METALS = [\n                    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n                    'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n                    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n                    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n                    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, TRANSITION_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'E') {\n                const MAIN_GROUPS = [\n                    'B', 'N', 'O', 'F',\n                    'Al', 'Si', 'P', 'S', 'Cl',\n                    'Zn', 'Ga', 'Se', 'As', 'Se', 'Br',\n                    'Cd', 'In', 'Sn', 'Sb', 'Te', 'I',\n                    'Hg', 'Tl', 'Pb', 'Bi', 'Pb', 'At'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, MAIN_GROUPS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'R') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['C', 'N', 'O', 'S', 'P', 'H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n        };\n        if (mol.numAtoms == 0) {\n            mol.addAtom(element, 0, 0);\n            applyQuery(mol.numAtoms);\n        }\n        else if (this.subjectLength == 0) {\n            if (positionX != null && positionY != null)\n                mol.addAtom(element, positionX, positionY);\n            else\n                SketchUtil.placeNewAtom(mol, element);\n            applyQuery(mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                if (keepAbbrev)\n                    mol.setAtomElement(this.subjectIndex[n], element);\n                else\n                    MolUtil.setAtomElement(mol, this.subjectIndex[n], element);\n                applyQuery(this.subjectIndex[n]);\n            }\n        }\n    }\n    execCharge(delta) {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let chg = Math.max(-20, Math.min(20, this.input.mol.atomCharge(this.subjectIndex[n]) + delta));\n            this.output.mol.setAtomCharge(this.subjectIndex[n], chg);\n        }\n    }\n    execConnect(order, type) {\n        if (!this.requireSubject())\n            return;\n        let conn = SketchUtil.pickAtomsToConnect(this.input.mol, this.subjectIndex);\n        if (conn == null) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for connection.';\n            return;\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < conn.length; n += 2)\n            MolUtil.addBond(this.output.mol, conn[n], conn[n + 1], order, type);\n    }\n    execDisconnect() {\n        let zap = [];\n        let mol = this.input.mol;\n        if (this.hasSelected) {\n            for (let n = 1; n <= mol.numBonds; n++)\n                if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                    zap.push(n);\n        }\n        else if (this.input.currentAtom > 0) {\n            for (let a of mol.atomAdjBonds(this.input.currentAtom))\n                zap.push(a);\n        }\n        else if (this.input.currentBond > 0) {\n            zap.push(this.input.currentBond);\n        }\n        if (zap.length == 0) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for disconnection.';\n            return;\n        }\n        let killmask = Vec.booleanArray(false, mol.numBonds);\n        for (let b of zap)\n            killmask[b - 1] = true;\n        this.output.mol = this.input.mol.clone();\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (killmask[n - 1])\n                this.output.mol.deleteBond(n);\n    }\n    execMetalLigate() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let ligAtoms = this.subjectIndex.slice(0);\n        let metalAtom = this.input.currentAtom;\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_BLOCKS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_ROWS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            this.errmsg = 'Unsure which is the metal atom: try indicating as current.';\n            return;\n        }\n        let i = ligAtoms.indexOf(metalAtom);\n        if (i >= 0)\n            ligAtoms.splice(i, 1);\n        if (ligAtoms.length == 0)\n            ligAtoms = mol.atomAdjList(metalAtom);\n        if (ligAtoms.length == 0) {\n            this.errmsg = 'Metal centre has no attachments: try selecting atom join-points.';\n            return;\n        }\n        mol = new MetalLigate(mol, metalAtom, ligAtoms).generate();\n        this.output.mol = mol;\n        this.output.currentAtom = metalAtom;\n        this.output.currentBond = -1;\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of ligAtoms)\n            this.output.selectedMask[a - 1] = true;\n    }\n    execBond(order, type) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == 1) {\n            this.performBondNew(this.subjectIndex[0], order, type);\n            return;\n        }\n        let ccmol = MolUtil.subgraphMask(this.input.mol, this.subjectMask);\n        let oneComp = true;\n        for (let n = ccmol.numAtoms; n >= 1; n--)\n            if (ccmol.atomConnComp(n) != 1) {\n                oneComp = false;\n                break;\n            }\n        if (oneComp)\n            this.performBondChange(order, type);\n        else\n            this.execConnect(order, type);\n    }\n    execBondGeom(geom) {\n        let bond = this.subjectLength == 2 ? this.input.mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) : 0;\n        if (this.subjectLength == 0 || this.subjectLength > 2 || (this.subjectLength == 2 && bond == 0)) {\n            this.errmsg = 'The subject must be a single atom or bond.';\n            return;\n        }\n        if (this.subjectLength == 1)\n            this.performBondGeomAtom(geom, this.subjectIndex[0]);\n        else\n            this.performBondGeomBond(geom, bond);\n    }\n    execBondAtom(order, type, element, x1, y1, x2, y2) {\n        let mol = this.input.mol;\n        let a1 = CoordUtil.atomAtPoint(mol, x1, y1, 0.01), a2 = CoordUtil.atomAtPoint(mol, x2, y2, 0.01);\n        if (a1 > 0 && a1 == a2)\n            return;\n        if (a1 > 0 && a2 > 0 && mol.findBond(a1, a2) > 0)\n            return;\n        this.output.mol = mol.clone();\n        if (a1 == 0)\n            a1 = this.output.mol.addAtom('C', x1, y1);\n        if (a2 == 0)\n            a2 = this.output.mol.addAtom(element, x2, y2);\n        this.output.mol.addBond(a1, a2, order, type);\n    }\n    execBondSwitch() {\n        if (this.input.altmol) {\n            this.output.mol = this.input.altmol;\n            this.output.altmol = this.input.mol;\n            return;\n        }\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let src = 0, dst = [];\n        if (this.subjectLength == 1) {\n            src = this.subjectIndex[0];\n            let adj = mol.atomAdjList(src);\n            for (let n = 0; n < adj.length; n++)\n                if (mol.atomAdjCount(adj[n]) == 1)\n                    dst.push(adj[n]);\n        }\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0) {\n            let ac1 = mol.atomAdjCount(this.subjectIndex[0]), ac2 = mol.atomAdjCount(this.subjectIndex[1]);\n            if (ac1 > 1 && ac2 == 1) {\n                src = this.subjectIndex[0];\n                dst.push(this.subjectIndex[1]);\n            }\n            else if (ac1 == 1 && ac2 > 1) {\n                src = this.subjectIndex[1];\n                dst.push(this.subjectIndex[0]);\n            }\n        }\n        if (src == 0 || dst.length == 0) {\n            this.errmsg = 'Subject must include a terminal bond.';\n            return;\n        }\n        let geoms = SketchUtil.guessAtomGeometry(mol, src, 1);\n        if (geoms.length == 0) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = SketchUtil.switchAtomGeometry(mol, src, dst, geoms);\n        if (this.output.mol == null) {\n            this.errmsg = 'No alternative geometries identified.';\n        }\n    }\n    execBondRotate() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol;\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot rotate a ring-bond.';\n            return;\n        }\n        if (mol.atomAdjCount(mol.bondFrom(bond)) == 1 && mol.atomAdjCount(mol.bondTo(bond)) == 1) {\n            this.errmsg = 'Two-atom components do not rotate.';\n            return;\n        }\n        mol = mol.clone();\n        let [atom1, atom2, side] = this.mobileSide(bond, true);\n        let cx = mol.atomX(atom1), cy = mol.atomY(atom1);\n        let theta = Math.atan2(mol.atomY(atom1) - mol.atomY(atom2), mol.atomX(atom1) - mol.atomX(atom2));\n        for (let a of side)\n            if (a != atom1) {\n                let dx = mol.atomX(a) - cx, dy = mol.atomY(a) - cy, dist = norm_xy(dx, dy);\n                let dtheta = Math.atan2(dy, dx);\n                dtheta = theta - angleDiff(dtheta, theta);\n                mol.setAtomPos(a, cx + dist * Math.cos(dtheta), cy + dist * Math.sin(dtheta));\n            }\n        let mask = Vec.idxMask(Vec.add(side, -1), mol.numAtoms);\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (mask[mol.bondFrom(b) - 1] && mask[mol.bondTo(b) - 1]) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_DECLINED);\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_INCLINED);\n            }\n        if (CoordUtil.sketchEquivalent(this.input.mol, mol)) {\n            this.errmsg = 'Rotation has no effect.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execBondAddTwo() {\n        if (this.subjectLength != 1) {\n            this.errmsg = 'Subject must be a single atom.';\n            return;\n        }\n        let atom = this.subjectIndex[0];\n        if (this.input.mol.atomAdjCount(atom) < 2) {\n            this.errmsg = 'Subject atom must already have at least 2 bonds.';\n            return;\n        }\n        let ang = SketchUtil.calculateNewBondAngles(this.input.mol, atom, 1);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(this.input.mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for new substituents.';\n            return;\n        }\n        let baseAng = ang[0];\n        let cx = this.input.mol.atomX(atom), cy = this.input.mol.atomY(atom);\n        if (ang.length > 1) {\n            let best = 0;\n            for (let n = 0; n < ang.length; n++) {\n                let x = cx + Molecule.IDEALBOND * Math.cos(ang[n]);\n                let y = cy + Molecule.IDEALBOND * Math.sin(ang[n]);\n                let score = CoordUtil.congestionPoint(this.input.mol, x, y);\n                if (n == 0 || score < best) {\n                    best = score;\n                    baseAng = ang[n];\n                }\n            }\n        }\n        let ang1 = baseAng - 30.0 * DEGRAD, ang2 = baseAng + 30.0 * DEGRAD;\n        let mol = this.input.mol.clone();\n        let a1 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang1), cy + Molecule.IDEALBOND * Math.sin(ang1));\n        let a2 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang2), cy + Molecule.IDEALBOND * Math.sin(ang2));\n        mol.addBond(atom, a1, 1);\n        mol.addBond(atom, a2, 1);\n        this.output.mol = mol;\n    }\n    execBondInsert() {\n        let mol = this.input.mol, bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot insert into a ring-bond.';\n            return;\n        }\n        let [alink, _, side] = this.mobileSide(bond);\n        mol = mol.clone();\n        mol.setBondOrder(bond, 1);\n        let fragmask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of side)\n            fragmask[a - 1] = true;\n        let frag = MolUtil.subgraphWithAttachments(mol, fragmask);\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if (fragmask[n - 1] && n != alink) {\n                mol.deleteAtomAndBonds(n);\n                if (n < alink)\n                    alink -= 1;\n            }\n        mol.setAtomElement(alink, 'C');\n        mol.setAtomCharge(alink, 0);\n        mol.setAtomUnpaired(alink, 0);\n        mol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n        mol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n        mol.setAtomMapNum(alink, 0);\n        mol.setAtomExtra(alink, []);\n        mol.setAtomTransient(alink, []);\n        let fusion = new TemplateFusion(mol, frag, '');\n        fusion.withGuideOnly = true;\n        fusion.permuteAtom(alink);\n        if (fusion.perms.length == 0) {\n            this.errmsg = 'Unable to insert.';\n            return;\n        }\n        this.output.mol = fusion.perms[0].mol;\n        this.zapSubject();\n        this.output.currentAtom = alink;\n    }\n    execJoin() {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = SketchUtil.joinOverlappingAtoms(this.input.mol, this.subjectMask);\n        if (this.output.mol == null) {\n            this.errmsg = 'Subject contains no overlapping atoms.';\n        }\n        else {\n            this.zapSubject();\n        }\n    }\n    execNudge(dir, extent) {\n        if (!this.requireSubject())\n            return;\n        let dx = extent * (dir == 'left' ? -1 : dir == 'right' ? 1 : 0);\n        let dy = extent * (dir == 'down' ? -1 : dir == 'up' ? 1 : 0);\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]), y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], x + dx, y + dy);\n        }\n    }\n    execNudgeFar(dir) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'Cannot apply to entire molecule.';\n            return;\n        }\n        let dx = dir == 'left' ? -1 : dir == 'right' ? 1 : 0;\n        let dy = dir == 'down' ? -1 : dir == 'up' ? 1 : 0;\n        this.output.mol = SketchUtil.moveToEdge(this.input.mol, this.subjectMask, dx, dy);\n        if (this.output.mol == null) {\n            this.execNudge(dir, 1);\n        }\n    }\n    execFlip(axis) {\n        if (this.input.mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let isVertical = axis == 'ver';\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask, mol = this.input.mol;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                if (!isVertical)\n                    this.output.mol.setAtomX(n, 2 * cx - this.output.mol.atomX(n));\n                else\n                    this.output.mol.setAtomY(n, 2 * cy - this.output.mol.atomY(n));\n            }\n    }\n    execScale(mag) {\n        const { mol, currentAtom, currentBond } = this.input;\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        if (currentAtom > 0) {\n            let connAtoms = [];\n            for (let a of this.subjectIndex)\n                if (a != currentAtom && mol.findBond(currentAtom, a) > 0)\n                    connAtoms.push(a);\n            let g = Graph.fromMolecule(mol);\n            g.isolateNode(currentAtom - 1);\n            let anything = false;\n            for (let cc of g.calculateComponentGroups()) {\n                Vec.addTo(cc, 1);\n                let sz = 0, dx = 0, dy = 0;\n                for (let a of cc)\n                    if (connAtoms.includes(a)) {\n                        dx += mol.atomX(a) - mol.atomX(currentAtom);\n                        dy += mol.atomY(a) - mol.atomY(currentAtom);\n                        sz++;\n                    }\n                if (sz == 0)\n                    continue;\n                [dx, dy] = [dx / sz, dy / sz];\n                if (Math.abs(dx) < 0.1 && Math.abs(dy) < 0.1)\n                    continue;\n                [dx, dy] = [dx * (mag - 1), dy * (mag - 1)];\n                if (!this.output.mol)\n                    this.output.mol = mol.clone();\n                for (let a of cc)\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                anything = true;\n            }\n            if (anything)\n                return;\n        }\n        let b;\n        if (this.subjectLength == 2 && (b = mol.findBond(this.subjectIndex[0], this.subjectIndex[1])) > 0 && !mol.bondInRing(b)) {\n            let a1 = this.subjectIndex[0], a2 = this.subjectIndex[1];\n            let ccmol = mol.clone();\n            ccmol.deleteBond(b);\n            let idx1 = [], idx2 = [];\n            for (let n = 1; n <= ccmol.numAtoms; n++) {\n                if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a1))\n                    idx1.push(n);\n                else if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a2))\n                    idx2.push(n);\n            }\n            let dx = (mol.atomX(a2) - mol.atomX(a1)) * (mag - 1);\n            let dy = (mol.atomY(a2) - mol.atomY(a1)) * (mag - 1);\n            if (idx1.length == idx2.length) {\n                dx *= 0.5;\n                dy *= 0.5;\n            }\n            this.output.mol = mol.clone();\n            if (idx1.length <= idx2.length)\n                for (let n = 0; n < idx1.length; n++) {\n                    let a = idx1[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) - dx, this.output.mol.atomY(a) - dy);\n                }\n            if (idx2.length <= idx1.length)\n                for (let n = 0; n < idx2.length; n++) {\n                    let a = idx2[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                }\n            return;\n        }\n        let cx = 0, cy = 0;\n        if (currentAtom > 0) {\n            cx = mol.atomX(currentAtom);\n            cy = mol.atomY(currentAtom);\n        }\n        else if (currentBond > 0) {\n            let bfr = mol.bondFrom(currentBond), bto = mol.bondTo(currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]);\n            let y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], (x - cx) * mag + cx, (y - cy) * mag + cy);\n        }\n    }\n    execRotate(theta, centreX, centreY) {\n        theta *= DEGRAD;\n        let mol = this.input.mol;\n        if (centreX != null && centreY != null) {\n            this.output.mol = mol.clone();\n            let mask = this.subjectLength == 0 ? Vec.booleanArray(true, mol.numAtoms) : this.subjectMask;\n            CoordUtil.rotateAtoms(this.output.mol, mask, centreX, centreY, theta);\n            return;\n        }\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n            if (Vec.maskCount(mask) == 1 && mask[this.input.currentAtom - 1]) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            if (this.subjectLength == 1) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        CoordUtil.rotateAtoms(this.output.mol, mask, cx, cy, theta);\n    }\n    execBondDist(dist) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1), curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let sel1 = this.isSelected(atom1), sel2 = this.isSelected(atom2);\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            if (sel1 && !sel2) {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - ox, mol.atomY(atom1) - oy);\n            }\n            else if (sel2 && !sel1) {\n                mol.setAtomPos(atom2, mol.atomX(atom2) + ox, mol.atomY(atom2) + oy);\n            }\n            else {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - 0.5 * ox, mol.atomY(atom1) - 0.5 * oy);\n                mol.setAtomPos(atom2, mol.atomX(atom2) + 0.5 * ox, mol.atomY(atom2) + 0.5 * oy);\n            }\n        }\n        else {\n            let [atom1, atom2, side] = this.mobileSide(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1);\n            let curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            for (let a of side)\n                mol.setAtomPos(a, mol.atomX(a) - ox, mol.atomY(a) - oy);\n        }\n        this.output.mol = mol;\n    }\n    execAlignAngle(angle) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot align a ring-bond.';\n            return;\n        }\n        let [atom1, atom2, side] = this.mobileSide(bond);\n        let cx = mol.atomX(atom2), cy = mol.atomY(atom2);\n        let delta = angle - Math.atan2(mol.atomY(atom1) - cy, mol.atomX(atom1) - cx);\n        let cosTheta = Math.cos(delta), sinTheta = Math.sin(delta);\n        for (let a of side) {\n            let x = mol.atomX(a) - cx, y = mol.atomY(a) - cy;\n            mol.setAtomPos(a, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n        this.output.mol = mol;\n    }\n    execAlignRegular() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n        let theta = Math.atan2(mol.atomY(bto) - mol.atomY(bfr), mol.atomX(bto) - mol.atomX(bfr)) * RADDEG;\n        if (theta < 0)\n            theta += 360;\n        let snap = Math.round(theta / 30) * 30;\n        if (Math.abs(theta - snap) < 0.001)\n            return;\n        let delta = (snap - theta) * DEGRAD;\n        let mask = this.input.selectedMask;\n        if (Vec.allFalse(mask)) {\n            let cc = mol.atomConnComp(bfr);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                mask[n - 1] = cc == mol.atomConnComp(n);\n        }\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)), cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let dx = mol.atomX(n) - cx, dy = mol.atomY(n) - cy;\n                let th = Math.atan2(dy, dx) + delta, dist = norm_xy(dx, dy);\n                mol.setAtomPos(n, cx + dist * Math.cos(th), cy + dist * Math.sin(th));\n            }\n        this.output.mol = mol;\n    }\n    execAdjustTorsion(angle) {\n        if (this.input.currentAtom == 0 || Vec.maskCount(this.input.selectedMask) != 3) {\n            this.errmsg = 'Must be 3 selected atoms and a current atom.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let a1 = this.input.currentAtom;\n        let atoms = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (n != a1 && this.input.selectedMask[n - 1])\n                atoms.push(n);\n        let a2 = mol.findBond(a1, atoms[0]) > 0 ? atoms.shift() :\n            mol.findBond(a1, atoms[1]) > 0 ? atoms.pop() : 0;\n        if (a2 == 0 || mol.findBond(a2, atoms[0]) == 0) {\n            this.errmsg = 'Selected atoms must be consecutive.';\n            return;\n        }\n        let a3 = atoms[0];\n        let cx = mol.atomX(a2), cy = mol.atomY(a2);\n        let theta1 = Math.atan2(mol.atomY(a1) - cy, mol.atomX(a1) - cx);\n        let theta3 = Math.atan2(mol.atomY(a3) - cy, mol.atomX(a3) - cx);\n        let delta = angle - angleDiff(theta3, theta1);\n        let group1 = [], group3 = [];\n        if (mol.atomRingBlock(a1) == 0 || mol.atomRingBlock(a1) != mol.atomRingBlock(a3)) {\n            let g = Graph.fromMolecule(mol);\n            g.removeEdge(a2 - 1, a1 - 1);\n            g.removeEdge(a2 - 1, a3 - 1);\n            let cc = g.calculateComponents();\n            for (let n = 0; n < g.numNodes; n++) {\n                if (cc[n] == cc[a1 - 1])\n                    group1.push(n + 1);\n                else if (cc[n] == cc[a3 - 1])\n                    group3.push(n + 1);\n            }\n        }\n        if (mol.atomRingBlock(a1) > 0 && mol.atomRingBlock(a1) == mol.atomRingBlock(a2))\n            group1 = [a1];\n        if (mol.atomRingBlock(a3) > 0 && mol.atomRingBlock(a3) == mol.atomRingBlock(a2))\n            group3 = [a3];\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group1, -1), mol.numAtoms), cx, cy, -0.5 * delta);\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group3, -1), mol.numAtoms), cx, cy, 0.5 * delta);\n        this.output.mol = mol;\n    }\n    execMove(refAtom, deltaX, deltaY) {\n        let subj = this.subjectIndex;\n        if (Vec.len(subj) == 0) {\n            if (refAtom == 0)\n                return;\n            subj = [refAtom];\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let a of subj)\n            this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + deltaX, this.output.mol.atomY(a) + deltaY);\n    }\n    execRing(ringX, ringY, aromatic) {\n        let rsz = ringX.length;\n        let atoms = Vec.numberArray(0, rsz), bonds = Vec.numberArray(0, rsz);\n        let outmol = this.input.mol.clone();\n        for (let n = 0; n < rsz; n++) {\n            atoms[n] = CoordUtil.atomAtPoint(outmol, ringX[n], ringY[n]);\n            if (atoms[n] == 0)\n                atoms[n] = outmol.addAtom('C', ringX[n], ringY[n]);\n        }\n        for (let n = 0; n < rsz; n++) {\n            let nn = n < rsz - 1 ? n + 1 : 0;\n            bonds[n] = outmol.findBond(atoms[n], atoms[nn]);\n            if (bonds[n] == 0)\n                bonds[n] = outmol.addBond(atoms[n], atoms[nn], 1);\n        }\n        if (aromatic) {\n            let valence = Vec.numberArray(0, rsz);\n            let pi = Vec.booleanArray(false, rsz);\n            for (let n = 0; n < rsz; n++) {\n                valence[n] = Chemistry.ELEMENT_BONDING[outmol.atomicNumber(atoms[n])] + outmol.atomCharge(atoms[n]);\n                if (outmol.atomHExplicit(atoms[n]) != Molecule.HEXPLICIT_UNKNOWN)\n                    valence[n] -= outmol.atomHExplicit(atoms[n]);\n                for (let b of outmol.atomAdjBonds(atoms[n]))\n                    valence[n] -= outmol.bondOrder(b);\n                if (outmol.bondOrder(bonds[n]) >= 2) {\n                    pi[n] = true;\n                    if (n < rsz - 1) {\n                        pi[n] = true;\n                        n++;\n                    }\n                    else\n                        pi[0] = true;\n                }\n            }\n            for (let n = 0; n < rsz; n++) {\n                let nn = n < rsz - 1 ? n + 1 : 0;\n                if (pi[n] || pi[nn])\n                    continue;\n                if (valence[n] > 0 && valence[nn] > 0) {\n                    outmol.setBondOrder(bonds[n], 2);\n                    pi[n] = true;\n                    pi[nn] = true;\n                    valence[n]--;\n                    valence[nn]--;\n                }\n            }\n        }\n        this.output.mol = outmol;\n    }\n    execTemplateFusion(frag) {\n        let mol = this.input.mol;\n        let fusion = new TemplateFusion(mol, frag, '');\n        if (this.subjectLength == 0)\n            fusion.permuteNone();\n        else if (this.subjectLength == 1)\n            fusion.permuteAtom(this.subjectIndex[0]);\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n            fusion.permuteBond(this.subjectIndex[0], this.subjectIndex[1]);\n        else\n            fusion.permuteMulti(this.subjectIndex);\n        let permutations = [];\n        for (let perm of fusion.perms) {\n            let obj = {};\n            obj['mol'] = perm.mol.toString();\n            obj['display'] = perm.display.toString();\n            obj['molidx'] = perm.molidx;\n            obj['temidx'] = perm.temidx;\n            obj['srcidx'] = perm.srcidx;\n            permutations.push(obj);\n        }\n        this.output.permutations = permutations;\n    }\n    execAbbrevTempl() {\n    }\n    execAbbrevGroup() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), '?');\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        if (AbbrevContainer.main) {\n            AbbrevContainer.main.submitMolecule(mol, true);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomElement(n) == '?' && MolUtil.hasAbbrev(mol, n))\n                    AbbrevContainer.main.substituteAbbrevName(mol, n);\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevFormula() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let fixed = this.input.mol.clone();\n        for (let n = 1; n <= fixed.numAtoms; n++)\n            fixed.setAtomHExplicit(n, fixed.atomHydrogens(n));\n        let abv = MolUtil.subgraphMask(fixed, this.subjectMask);\n        let formula = MolUtil.molecularFormula(abv, true);\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), formula);\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevClear() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to clear.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.clearAbbrev(mol, n);\n        this.output.mol = mol;\n    }\n    execAbbrevExpand() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to expand.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.expandOneAbbrev(mol, n, true);\n        this.output.mol = mol;\n        this.zapSubject();\n    }\n    execBondArtifact(activity) {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        let artif = new BondArtifact(this.input.mol.clone());\n        let subject = this.subjectIndex.slice(0), curAtom = this.input.currentAtom;\n        if (curAtom > 0 && subject.indexOf(curAtom) < 0)\n            subject.push(curAtom);\n        if (activity == ActivityType.BondArtifactPath) {\n            if (!artif.createPath(subject)) {\n                this.errmsg = 'Path artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactRing) {\n            if (!artif.createRing(subject)) {\n                this.errmsg = 'Ring artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactArene) {\n            if (!artif.createArene(subject)) {\n                this.errmsg = 'Arene artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactClear) {\n            if (!artif.removeArtifact(subject)) {\n                if (this.removePolymerBlock(subject))\n                    return;\n                this.errmsg = 'No artifact removed.';\n                return;\n            }\n        }\n        artif.rewriteMolecule();\n        this.output.mol = artif.mol;\n    }\n    execPolymerBlock() {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        if (this.owner)\n            this.owner.performPolymerBlock(this.subjectIndex);\n    }\n    execAddHydrogens() {\n        let mol = this.input.mol.clone();\n        if (!this.requireAtoms())\n            return;\n        let atoms = this.subjectIndex;\n        if (atoms.length == 0)\n            atoms = Vec.identity1(mol.numAtoms);\n        for (let a of atoms) {\n            let hc = mol.atomHydrogens(a);\n            if (hc > 0)\n                SketchUtil.placeAdditionalHydrogens(mol, a, hc);\n        }\n        if (mol.numAtoms == this.input.mol.numAtoms) {\n            this.errmsg = 'Nothing needs to be added.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execRemoveHydrogens() {\n        if (!this.requireAtoms())\n            return;\n        let mol = this.input.mol;\n        let selmask = this.subjectMask;\n        if (Vec.allFalse(selmask))\n            selmask = Vec.booleanArray(true, mol.numAtoms);\n        let keepmask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                let nbr = mol.atomAdjList(n)[0];\n                if (selmask[n - 1] || selmask[nbr - 1])\n                    keepmask[n - 1] = false;\n            }\n        if (Vec.allTrue(keepmask)) {\n            this.errmsg = 'Nothing to be deleted.';\n            return;\n        }\n        this.output.mol = MolUtil.subgraphMask(mol, keepmask);\n    }\n    execQueryClear() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol.clone();\n        const { currentBond } = this.input;\n        if (currentBond > 0 && QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n            QueryUtil.deleteQueryBondAll(mol, currentBond);\n            this.output.mol = mol;\n            return;\n        }\n        let anything = false;\n        for (let a of this.subjectIndex)\n            if (QueryUtil.hasAnyQueryAtom(mol, a)) {\n                QueryUtil.deleteQueryAtomAll(mol, a);\n                anything = true;\n            }\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1] && QueryUtil.hasAnyQueryBond(mol, b)) {\n                QueryUtil.deleteQueryBondAll(mol, b);\n                anything = true;\n            }\n        if (anything)\n            this.output.mol = mol;\n        else\n            this.errmsg = 'No query terms to clear.';\n    }\n    execQueryCopy() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        if (currentBond > 0) {\n            if (!QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n                this.errmsg = 'Bond has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.addAtom('*', Molecule.IDEALBOND, 0);\n            qmol.addBond(1, 2, 1);\n            qmol.setBondExtra(1, mol.bondExtra(currentBond).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else if (this.subjectLength == 1) {\n            let atom = this.subjectIndex[0];\n            if (!QueryUtil.hasAnyQueryAtom(mol, atom)) {\n                this.errmsg = 'Atom has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.setAtomExtra(1, mol.atomExtra(atom).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else\n            this.errmsg = 'Subject has to be a single atom or bond.';\n    }\n    execQueryPaste() {\n        if (!this.requireSubject())\n            return;\n        let qmol = this.param.qmol;\n        if (!qmol) { }\n        else if (qmol.numAtoms == 1 && qmol.atomElement(1) == '*' && QueryUtil.hasAnyQueryAtom(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.atomExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let a of this.subjectIndex) {\n                let aterms = mol.atomExtra(a).filter((xtra) => xtra.startsWith('q'));\n                mol.setAtomExtra(a, [...aterms, ...qterms]);\n            }\n            return;\n        }\n        else if (qmol.numAtoms == 2 && qmol.atomElement(1) == '*' && qmol.atomElement(2) == '*' &&\n            qmol.numBonds == 1 && QueryUtil.hasAnyQueryBond(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.bondExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let b = 1; b <= mol.numBonds; b++)\n                if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1]) {\n                    let bterms = mol.bondExtra(b).filter((xtra) => xtra.startsWith('q'));\n                    mol.setBondExtra(b, [...bterms, ...qterms]);\n                }\n            return;\n        }\n        this.errmsg = 'Unable to paste query terms.';\n    }\n    execQuerySetAtom() {\n    }\n    execQuerySetBond() {\n    }\n    execQueryBondAny() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        if (bonds.length == 0) {\n            this.errmsg = 'Must select at least one bond.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let b of bonds) {\n            this.output.mol.setBondOrder(b, 0);\n            QueryUtil.setQueryBondOrders(this.output.mol, b, [-1, 0, 1, 2, 3, 4]);\n        }\n    }\n    execSproutDirection(deltaX, deltaY) {\n        var _a, _b;\n        if (!this.requireCurrent())\n            return;\n        if (deltaX == 0 && deltaY == 0)\n            return;\n        const { mol, currentAtom } = this.input;\n        let angleOptions;\n        if (mol.atomAdjCount(currentAtom) == 0)\n            angleOptions = Vec.identity0(12).map((n) => n * TWOPI / 12);\n        else\n            angleOptions = (_a = SketchUtil.primeDirections(mol, currentAtom)) !== null && _a !== void 0 ? _a : SketchUtil.exitVectors(mol, currentAtom);\n        if (angleOptions.length == 0)\n            return;\n        let theta = Math.atan2(deltaY, deltaX);\n        let idx = Vec.idxMin(angleOptions.map((look) => Math.abs(angleDiff(theta, look)) + 0.01 * Math.abs(Math.sin(look))));\n        let px = mol.atomX(currentAtom) + Molecule.IDEALBOND * Math.cos(angleOptions[idx]);\n        let py = mol.atomY(currentAtom) + Molecule.IDEALBOND * Math.sin(angleOptions[idx]);\n        this.output.mol = mol.clone();\n        let newAtom = this.output.mol.addAtom('C', px, py);\n        this.output.mol.addBond(currentAtom, newAtom, 1);\n        this.output.mol = (_b = SketchUtil.joinOverlappingAtoms(this.output.mol, Vec.booleanArray(true, this.output.mol.numAtoms))) !== null && _b !== void 0 ? _b : this.output.mol;\n        for (let n = 1; n <= this.output.mol.numAtoms; n++) {\n            let dx = this.output.mol.atomX(n) - px, dy = this.output.mol.atomY(n) - py;\n            if (norm2_xy(dx, dy) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                this.output.currentAtom = n;\n                break;\n            }\n        }\n    }\n    requireSubject() {\n        if (this.subjectLength == 0)\n            this.errmsg = 'Subject required: current atom/bond or selected atoms.';\n        return this.subjectLength > 0;\n    }\n    requireAtoms() {\n        if (this.input.mol.numAtoms == 0)\n            this.errmsg = 'There are no atoms.';\n        return this.input.mol.numAtoms > 0;\n    }\n    requireCurrent() {\n        if (this.input.currentAtom == 0 && this.input.currentBond == 0) {\n            this.errmsg = 'There must be a current atom or bond.';\n            return false;\n        }\n        return true;\n    }\n    requireSelected() {\n        if (!this.hasSelected)\n            this.errmsg = 'No atoms are selected.';\n        return this.hasSelected;\n    }\n    pickSelectedGroup(groups, dir) {\n        if (this.subjectLength == 0)\n            return 0;\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            let all = true;\n            for (let j = 0; j < g.length; j++)\n                if (!this.subjectMask[g[j] - 1]) {\n                    all = false;\n                    break;\n                }\n            if (all) {\n                i += dir;\n                return i < 0 ? i + groups.length : i >= groups.length ? i - groups.length : i;\n            }\n        }\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            for (let j = 0; j < g.length; j++)\n                if (this.subjectMask[g[j] - 1])\n                    return i;\n        }\n        return 0;\n    }\n    zapSubject() {\n        this.output.currentAtom = 0;\n        this.output.currentBond = 0;\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n    }\n    performBondNew(atom, order, type) {\n        let mol = this.input.mol;\n        let ang = SketchUtil.calculateNewBondAngles(mol, atom, order);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for a new substituent.';\n            return;\n        }\n        let bx = [], by = [], bscore = [];\n        for (let n = 0; n < ang.length; n++) {\n            let x = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(ang[n]);\n            let y = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(ang[n]);\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(atom)] <= 2)\n                score += Math.abs(angleNorm(ang[n])) * 1E-8;\n            else\n                score += Math.abs(angleDiff(0.5 * Math.PI, ang[n])) * 1E-8;\n            bx.push(x);\n            by.push(y);\n            bscore.push(score);\n        }\n        let idx = Vec.idxSort(bscore);\n        this.output.mol = mol.clone();\n        let anum = CoordUtil.atomAtPoint(this.output.mol, bx[idx[0]], by[idx[0]]);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', bx[idx[0]], by[idx[0]]);\n        MolUtil.addBond(this.output.mol, atom, anum, order, type);\n        if (idx.length >= 2) {\n            this.output.altmol = mol.clone();\n            anum = CoordUtil.atomAtPoint(this.output.altmol, bx[idx[1]], by[idx[1]]);\n            if (anum == 0)\n                anum = this.output.altmol.addAtom('C', bx[idx[1]], by[idx[1]]);\n            MolUtil.addBond(this.output.altmol, atom, anum, order, type);\n        }\n    }\n    performBondChange(order, type) {\n        let mol = this.input.mol;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        let switchType = type == Molecule.BONDTYPE_DECLINED || type == Molecule.BONDTYPE_INCLINED;\n        let stereoType = switchType || type == Molecule.BONDTYPE_UNKNOWN;\n        let anyChange = switchType;\n        for (let n = 0; n < bonds.length && !anyChange; n++) {\n            let b = bonds[n];\n            if (mol.bondOrder(b) != order && type == Molecule.BONDTYPE_NORMAL)\n                anyChange = true;\n            else if (mol.bondType(b) != type)\n                anyChange = true;\n        }\n        if (!anyChange) {\n            this.errmsg = 'No bond changes made.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < bonds.length; n++) {\n            let b = bonds[n], bfr = this.output.mol.bondFrom(b), bto = this.output.mol.bondTo(b);\n            if (switchType && this.output.mol.bondType(b) == type) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n            else if (this.output.mol.bondOrder(b) != order || this.output.mol.bondType(b) != type) {\n                if (!stereoType && order != this.output.mol.bondOrder(b))\n                    this.output.mol.setBondOrder(b, order);\n                else\n                    this.output.mol.setBondType(b, type);\n            }\n            else if (switchType) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n        }\n    }\n    performBondGeomAtom(geom, atom) {\n        let mol = this.input.mol;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length, gsz = SketchUtil.GEOM_ANGLES[geom].length;\n        if (asz > gsz) {\n            this.errmsg = 'The current atom has more bonds than does the selected geometry.';\n            return;\n        }\n        if (asz == 0) {\n            this.performBondNew(atom, 1, Molecule.BONDTYPE_NORMAL);\n            return;\n        }\n        if (asz == gsz) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom);\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, newang);\n        let x = this.output.mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta);\n        let y = this.output.mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta);\n        let anum = CoordUtil.atomAtPoint(this.output.mol, x, y);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', x, y);\n        MolUtil.addBond(this.output.mol, atom, anum, 1);\n    }\n    performBondGeomBond(geom, bond) {\n        let mol = this.input.mol;\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let ac1 = mol.atomAdjCount(bfr), ac2 = mol.atomAdjCount(bto);\n        if (ac1 > 1 && ac2 == 1) { }\n        else if (ac1 == 1 && ac2 > 1) {\n            let t = ac1;\n            ac1 = ac2;\n            ac2 = t;\n        }\n        else {\n            this.errmsg = 'One end of the bond must be terminal.';\n            return;\n        }\n        let adj = mol.atomAdjList(bfr);\n        let x1 = mol.atomX(bfr), y1 = mol.atomY(bfr);\n        let x2 = mol.atomX(bto), y2 = mol.atomY(bto);\n        let ang = [];\n        for (let n = 0, p = 0; n < adj.length; n++)\n            if (adj[n] != bto) {\n                ang.push(Math.atan2(mol.atomY(adj[n]) - y1, mol.atomX(adj[n]) - x1));\n            }\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        let bestAng = TWOPI + 1, bestX = 0, bestY = 0;\n        let curth = Math.atan2(y2 - y1, x2 - x1), r = norm_xy(x2 - x1, y2 - y1);\n        for (let n = 0; n < newang.length; n++) {\n            let th = angleDiff(newang[n], curth);\n            if (th < 0)\n                th += TWOPI;\n            if (n > 0 && th > bestAng)\n                continue;\n            let x = x1 + r * Math.cos(th + curth);\n            let y = y1 + r * Math.sin(th + curth);\n            if (CoordUtil.atomAtPoint(mol, x, y) > 0)\n                continue;\n            bestAng = th;\n            bestX = x;\n            bestY = y;\n        }\n        if (bestAng > TWOPI) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        this.output.mol.setAtomPos(bto, bestX, bestY);\n    }\n    checkAbbreviationReady() {\n        let junction = 0;\n        let mol = this.input.mol, subjmask = this.subjectMask;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n);\n            let atom = 0;\n            if ((subjmask[b1 - 1] && !subjmask[b2 - 1] && MolUtil.hasAbbrev(mol, b1)) ||\n                (subjmask[b2 - 1] && !subjmask[b1 - 1] && MolUtil.hasAbbrev(mol, b2))) {\n                this.errmsg = 'Already an abbreviation.';\n                return false;\n            }\n            if (subjmask[b1 - 1] && !subjmask[b2 - 1])\n                atom = b1;\n            else if (subjmask[b2 - 1] && !subjmask[b1 - 1])\n                atom = b2;\n            if (atom == 0 || atom == junction) { }\n            else if (junction == 0)\n                junction = atom;\n            else {\n                this.errmsg = 'The selected group must be terminal.';\n                return false;\n            }\n        }\n        return true;\n    }\n    mobileSide(bond, disqualTerminal = false) {\n        let { mol } = this.input;\n        let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n        let g = Graph.fromMolecule(mol);\n        g.removeEdge(atom1 - 1, atom2 - 1);\n        let side1 = [], side2 = [];\n        for (let grp of g.calculateComponentGroups()) {\n            if (grp.includes(atom1 - 1))\n                side1 = Vec.add(grp, 1);\n            if (grp.includes(atom2 - 1))\n                side2 = Vec.add(grp, 1);\n        }\n        let weight1 = side1.length * (mol.atomRingBlock(atom1) > 0 ? 2 : 1);\n        let weight2 = side2.length * (mol.atomRingBlock(atom2) > 0 ? 2 : 1);\n        let sel1 = false, sel2 = false;\n        for (let a of side1)\n            if (this.isSelected(a)) {\n                sel1 = true;\n                break;\n            }\n        for (let a of side2)\n            if (this.isSelected(a)) {\n                sel2 = true;\n                break;\n            }\n        if (disqualTerminal && mol.atomAdjCount(atom1) == 1)\n            return [atom2, atom1, side2];\n        else if (disqualTerminal && mol.atomAdjCount(atom2) == 1)\n            return [atom1, atom2, side1];\n        else if (sel1 && !sel2) { }\n        else if ((sel2 && !sel1) || weight2 < weight1)\n            return [atom2, atom1, side2];\n        return [atom1, atom2, side1];\n    }\n    isSelected(atom) {\n        let mask = this.input.selectedMask;\n        return mask ? mask[atom - 1] : false;\n    }\n    removePolymerBlock(atoms) {\n        let polymer = new PolymerBlock(this.input.mol.clone());\n        for (let id of polymer.getIDList()) {\n            let unit = polymer.getUnit(id);\n            for (let atom of atoms)\n                if (unit.atoms.includes(atom)) {\n                    polymer.removeUnit(id);\n                    polymer.rewriteMolecule();\n                    this.output.mol = polymer.mol;\n                    return true;\n                }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=MoleculeActivity.js.map","import { Molecule } from '../data/Molecule';\nimport { Geometry } from '../data/SketchUtil';\nimport { ButtonBank } from '../ui/ButtonBank';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nconst ELEMENTS_NOBLE = [\n    'He', 'Ar', 'Kr', 'Xe', 'Rn'\n];\nconst ELEMENTS_S_BLOCK = [\n    'Li', 'Na', 'K', 'Rb', 'Cs', 'Fr', 'Sc',\n    'Be', 'Mg', 'Ca', 'Sr', 'Ba', 'Ra', 'Y'\n];\nconst ELEMENTS_P_BLOCK = [\n    'B', 'Al', 'Si', 'Ga', 'Ge', 'As', 'Se',\n    'In', 'Sn', 'Sb', 'Te', 'Tl', 'Pb', 'Bi', 'Po', 'At'\n];\nconst ELEMENTS_D_BLOCK = [\n    'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n    'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg'\n];\nconst ELEMENTS_F_BLOCK = [\n    'La', 'Ce', 'Pr', 'Nd', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy',\n    'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Ac', 'Th', 'Pa', 'U'\n];\nconst ELEMENTS_ABBREV = [\n    '*', 'A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'L', 'R',\n    'R0', 'R1', 'R2', 'R3', 'R4', 'R5', 'R6', 'R7', 'R8'\n];\nvar CommandType;\n(function (CommandType) {\n    CommandType[CommandType[\"Main\"] = 0] = \"Main\";\n    CommandType[CommandType[\"Atom\"] = 1] = \"Atom\";\n    CommandType[CommandType[\"Bond\"] = 2] = \"Bond\";\n    CommandType[CommandType[\"Select\"] = 3] = \"Select\";\n    CommandType[CommandType[\"Move\"] = 4] = \"Move\";\n    CommandType[CommandType[\"Abbrev\"] = 5] = \"Abbrev\";\n    CommandType[CommandType[\"SBlock\"] = 6] = \"SBlock\";\n    CommandType[CommandType[\"PBlock\"] = 7] = \"PBlock\";\n    CommandType[CommandType[\"DBlock\"] = 8] = \"DBlock\";\n    CommandType[CommandType[\"FBlock\"] = 9] = \"FBlock\";\n    CommandType[CommandType[\"Noble\"] = 10] = \"Noble\";\n})(CommandType || (CommandType = {}));\nconst COMMANDS_MAIN = [\n    { id: 'undo', imageFN: 'MainUndo', helpText: 'Undo last change.', mnemonic: 'CmdOrCtrl+Z' },\n    { id: 'redo', imageFN: 'MainRedo', helpText: 'Cancel last undo.', mnemonic: 'CmdOrCtrl+Shift+Z' },\n    { id: 'zoomin', imageFN: 'MainZoomIn', helpText: 'Zoom in.', mnemonic: '=' },\n    { id: 'zoomout', imageFN: 'MainZoomOut', helpText: 'Zoom out.', mnemonic: '-' },\n    { id: 'zoomfit', imageFN: 'MainZoomFit', helpText: 'Show whole diagram onscreen.', mnemonic: '' },\n    { id: 'selside', imageFN: 'MainSelSide', helpText: 'Select alternate side of current atom or bond.', mnemonic: 'E' },\n    { id: 'selall', imageFN: 'MainSelAll', helpText: 'Select all atoms.', mnemonic: 'Shift+A' },\n    { id: 'selnone', imageFN: 'MainSelNone', helpText: 'Clear selection.', mnemonic: 'Shift+Q' },\n    { id: 'delete', imageFN: 'MainDelete', helpText: 'Delete selected atoms and bonds.', mnemonic: 'D' },\n    { id: 'cut', imageFN: 'MainCut', helpText: 'Copy selection to clipboard, and remove.', mnemonic: 'CmdOrCtrl+X' },\n    { id: 'copy', imageFN: 'MainCopy', helpText: 'Copy selection to clipboard.', mnemonic: 'CmdOrCtrl+C' },\n    { id: 'paste', imageFN: 'MainPaste', helpText: 'Paste clipboard contents.' },\n    { id: 'atom', imageFN: 'MainAtom', helpText: 'Open the Atom submenu.', isSubMenu: true, mnemonic: 'A' },\n    { id: 'bond', imageFN: 'MainBond', helpText: 'Open the Bond submenu.', isSubMenu: true, mnemonic: 'B' },\n    { id: 'select', imageFN: 'MainSelect', helpText: 'Open the Selection submenu.', isSubMenu: true, mnemonic: 'S' },\n    { id: 'move', imageFN: 'MainMove', helpText: 'Open the Move submenu.', isSubMenu: true, mnemonic: 'M' },\n];\nconst COMMANDS_ATOM = [\n    { id: 'element:C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: 'Shift+C' },\n    { id: 'element:N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: 'Shift+N' },\n    { id: 'element:O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: 'Shift+O' },\n    { id: 'element:S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: 'Shift+S' },\n    { id: 'element:P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: 'Shift+P' },\n    { id: 'element:H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: 'Shift+H' },\n    { id: 'element:F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: 'Shift+F' },\n    { id: 'element:Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: 'Shift+L' },\n    { id: 'element:Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: 'Shift+B' },\n    { id: 'element:I', text: 'I', helpText: 'Change elements to Iodine.', mnemonic: 'Shift+I' },\n    { id: 'plus', imageFN: 'AtomPlus', helpText: 'Increase the atom charge.', mnemonic: 'Shift+=', key: '+' },\n    { id: 'minus', imageFN: 'AtomMinus', helpText: 'Decrease the atom charge.', mnemonic: 'Shift+-', key: '_' },\n    { id: 'abbrev', imageFN: 'AtomAbbrev', helpText: 'Open list of common labels.', isSubMenu: true, mnemonic: '' },\n    { id: 'sblock', imageFN: 'AtomSBlock', helpText: 'Open list of s-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'pblock', imageFN: 'AtomPBlock', helpText: 'Open list of p-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'dblock', imageFN: 'AtomDBlock', helpText: 'Open list of d-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'fblock', imageFN: 'AtomFBlock', helpText: 'Open list of f-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'noble', imageFN: 'AtomNoble', helpText: 'Open list of noble elements.', isSubMenu: true, mnemonic: '' },\n];\nconst COMMANDS_BOND = [\n    { id: 'one', imageFN: 'BondOne', helpText: 'Create or set bonds to single.', mnemonic: '1' },\n    { id: 'two', imageFN: 'BondTwo', helpText: 'Create or set bonds to double.', mnemonic: '2' },\n    { id: 'three', imageFN: 'BondThree', helpText: 'Create or set bonds to triple.', mnemonic: '3' },\n    { id: 'four', imageFN: 'BondFour', helpText: 'Create or set bonds to quadruple.', mnemonic: '' },\n    { id: 'zero', imageFN: 'BondZero', helpText: 'Create or set bonds to zero-order.', mnemonic: '0' },\n    { id: 'inclined', imageFN: 'BondUp', helpText: 'Create or set bonds to inclined.', mnemonic: '5' },\n    { id: 'declined', imageFN: 'BondDown', helpText: 'Create or set bonds to declined.', mnemonic: '6' },\n    { id: 'squig', imageFN: 'BondSquig', helpText: 'Create or set bonds to unknown stereochemistry.', mnemonic: '4' },\n    { id: 'bondQAny', imageFN: 'BondQAny', helpText: 'Query bond that matches anything.' },\n    { id: 'addtwo', imageFN: 'BondAddTwo', helpText: 'Add two new bonds to the subject atom.', mnemonic: 'Shift+D' },\n    { id: 'insert', imageFN: 'BondInsert', helpText: 'Insert a methylene into the subject bond.', mnemonic: '' },\n    { id: 'switch', imageFN: 'BondSwitch', helpText: 'Cycle through likely bond geometries.', mnemonic: '\\'' },\n    { id: 'rotate', imageFN: 'BondRotate', helpText: 'Rotate bond to invert substituent orientation.', mnemonic: '' },\n    { id: 'linear', imageFN: 'BondLinear', helpText: 'Apply linear geometry.', mnemonic: 'Shift+V' },\n    { id: 'trigonal', imageFN: 'BondTrigonal', helpText: 'Apply trigonal geometry.', mnemonic: 'Shift+W' },\n    { id: 'tetra1', imageFN: 'BondTetra1', helpText: 'Apply tetrahedral geometry #1.', mnemonic: 'Shift+E' },\n    { id: 'tetra2', imageFN: 'BondTetra2', helpText: 'Apply tetrahedral geometry #2.', mnemonic: 'Shift+R' },\n    { id: 'sqplan', imageFN: 'BondSqPlan', helpText: 'Apply square planar geometry.', mnemonic: 'Shift+T' },\n    { id: 'octa1', imageFN: 'BondOcta1', helpText: 'Apply octahedral geometry #1.', mnemonic: 'Shift+Y' },\n    { id: 'octa2', imageFN: 'BondOcta2', helpText: 'Apply octahedral geometry #2.', mnemonic: 'Shift+U' },\n    { id: 'metalligate', imageFN: 'BondMetalLigate', helpText: 'Arrange ligands around metal centre.', mnemonic: '' },\n    { id: 'artifactpath', imageFN: 'BondArtifactPath', helpText: 'Add a path bond artifact.', mnemonic: '' },\n    { id: 'artifactring', imageFN: 'BondArtifactRing', helpText: 'Add a ring bond artifact.', mnemonic: '' },\n    { id: 'artifactarene', imageFN: 'BondArtifactArene', helpText: 'Add an arene bond artifact.', mnemonic: '' },\n    { id: 'artifactclear', imageFN: 'BondArtifactClear', helpText: 'Remove a bond artifact.', mnemonic: '' },\n    { id: 'polymer', imageFN: 'BondPolymer', helpText: 'Create a polymer block.', mnemonic: '' },\n];\nconst COMMANDS_SELECT = [\n    { id: 'selgrow', imageFN: 'SelectionGrow', helpText: 'Add adjacent atoms to selection.', mnemonic: '' },\n    { id: 'selshrink', imageFN: 'SelectionShrink', helpText: 'Unselect exterior atoms.', mnemonic: '' },\n    { id: 'selchain', imageFN: 'SelectionChain', helpText: 'Extend selection to non-ring atoms.', mnemonic: '' },\n    { id: 'smallring', imageFN: 'SelectionSmRing', helpText: 'Extend selection to small rings.', mnemonic: '' },\n    { id: 'ringblock', imageFN: 'SelectionRingBlk', helpText: 'Extend selection to ring blocks.', mnemonic: '' },\n    { id: 'curelement', imageFN: 'SelectionCurElement', helpText: 'Select all atoms of current element type.', mnemonic: '' },\n    { id: 'selprev', imageFN: 'MainSelPrev', helpText: 'Select previous connected component.', mnemonic: '[' },\n    { id: 'selnext', imageFN: 'MainSelNext', helpText: 'Select next connected component.', mnemonic: ']' },\n    { id: 'toggle', imageFN: 'SelectionToggle', helpText: 'Toggle selection of current.', mnemonic: ',' },\n    { id: 'uncurrent', imageFN: 'SelectionUncurrent', helpText: 'Undefine current object.', mnemonic: '.' },\n    { id: 'join', imageFN: 'MoveJoin', helpText: 'Overlapping atoms will be joined as one.', mnemonic: '' },\n    { id: 'new', imageFN: 'MainNew', helpText: 'Clear the molecular structure.', mnemonic: '' },\n    { id: 'inline', imageFN: 'AtomInline', helpText: 'Make selected atoms into an inline abbreviation.', mnemonic: '/' },\n    { id: 'formula', imageFN: 'AtomFormula', helpText: 'Make selected atoms into their molecule formula.', mnemonic: '\\\\' },\n    { id: 'expandabbrev', imageFN: 'AtomExpandAbbrev', helpText: 'Expand out the inline abbreviation.', mnemonic: 'Shift+/', key: '?' },\n    { id: 'clearabbrev', imageFN: 'AtomClearAbbrev', helpText: 'Remove inline abbreviation.', mnemonic: 'Shift+\\\\', key: '|' },\n];\nconst COMMANDS_MOVE = [\n    { id: 'up', imageFN: 'MoveUp', helpText: 'Move subject atoms up slightly.', mnemonic: 'Shift+Up', key: \"ArrowUp\" },\n    { id: 'down', imageFN: 'MoveDown', helpText: 'Move subject atoms down slightly.', mnemonic: 'Shift+Down', key: \"ArrowDown\" },\n    { id: 'left', imageFN: 'MoveLeft', helpText: 'Move subject atoms slightly to the left.', mnemonic: 'Shift+Left', key: \"ArrowLeft\" },\n    { id: 'right', imageFN: 'MoveRight', helpText: 'Move subject atoms slightly to the right.', mnemonic: 'Shift+Right', key: \"ArrowRight\" },\n    { id: 'uplots', imageFN: 'MoveUpLots', helpText: 'Move subject atoms up somewhat.', mnemonic: '' },\n    { id: 'downlots', imageFN: 'MoveDownLots', helpText: 'Move subject atoms down somewhat.', mnemonic: '' },\n    { id: 'leftlots', imageFN: 'MoveLeftLots', helpText: 'Move subject atoms somewhat to the left.', mnemonic: '' },\n    { id: 'rightlots', imageFN: 'MoveRightLots', helpText: 'Move subject atoms somewhat to the right.', mnemonic: '' },\n    { id: 'upfar', imageFN: 'MoveUpFar', helpText: 'Move subject atoms far up.', mnemonic: '' },\n    { id: 'downfar', imageFN: 'MoveDownFar', helpText: 'Move subject atoms far down.', mnemonic: '' },\n    { id: 'leftfar', imageFN: 'MoveLeftFar', helpText: 'Move subject atoms far to the left.', mnemonic: '' },\n    { id: 'rightfar', imageFN: 'MoveRightFar', helpText: 'Move subject atoms far to the right.', mnemonic: '' },\n    { id: 'rotp01', imageFN: 'MoveRotP01', helpText: 'Rotate 1\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm01', imageFN: 'MoveRotM01', helpText: 'Rotate 1\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp05', imageFN: 'MoveRotP05', helpText: 'Rotate 5\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm05', imageFN: 'MoveRotM05', helpText: 'Rotate 5\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp15', imageFN: 'MoveRotP15', helpText: 'Rotate 15\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm15', imageFN: 'MoveRotM15', helpText: 'Rotate 15\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp30', imageFN: 'MoveRotP30', helpText: 'Rotate 30\\u00B0 counter-clockwise.', mnemonic: 'Shift+[', key: '{' },\n    { id: 'rotm30', imageFN: 'MoveRotM30', helpText: 'Rotate 30\\u00B0 clockwise.', mnemonic: 'Shift+]', key: '}' },\n    { id: 'hflip', imageFN: 'MoveHFlip', helpText: 'Flip subject atoms horizontally.', mnemonic: 'Shift+,', key: '<' },\n    { id: 'vflip', imageFN: 'MoveVFlip', helpText: 'Flip subject atoms vertically.', mnemonic: 'Shift+.', key: '>' },\n    { id: 'shrink', imageFN: 'MoveShrink', helpText: 'Decrease subject bond distances.', mnemonic: 'Shift+Z' },\n    { id: 'grow', imageFN: 'MoveGrow', helpText: 'Increase subject bond distances.', mnemonic: 'Shift+X' },\n];\nexport class CommandBank extends ButtonBank {\n    constructor(owner, cmdType = CommandType.Main) {\n        super();\n        this.owner = owner;\n        this.cmdType = cmdType;\n    }\n    update() {\n        if (this.cmdType == CommandType.Main)\n            for (let btn of COMMANDS_MAIN)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Atom)\n            for (let btn of COMMANDS_ATOM)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Bond)\n            for (let btn of COMMANDS_BOND)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Select)\n            for (let btn of COMMANDS_SELECT)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Move)\n            for (let btn of COMMANDS_MOVE)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Abbrev)\n            this.populateElements(ELEMENTS_ABBREV);\n        else if (this.cmdType == CommandType.SBlock)\n            this.populateElements(ELEMENTS_S_BLOCK);\n        else if (this.cmdType == CommandType.PBlock)\n            this.populateElements(ELEMENTS_P_BLOCK);\n        else if (this.cmdType == CommandType.DBlock)\n            this.populateElements(ELEMENTS_D_BLOCK);\n        else if (this.cmdType == CommandType.FBlock)\n            this.populateElements(ELEMENTS_F_BLOCK);\n        else if (this.cmdType == CommandType.Noble)\n            this.populateElements(ELEMENTS_NOBLE);\n    }\n    populateElements(elements) {\n        for (let el of elements) {\n            this.buttons.push({ id: `element:${el}`, text: el, helpText: `Change elements to ${el}.` });\n        }\n    }\n    hitButton(id) {\n        let actv = 0, param = null;\n        if (id.startsWith('element:')) {\n            let el = id.substring(8);\n            actv = ActivityType.Element;\n            param = { element: el };\n        }\n        else if (id == 'delete')\n            actv = ActivityType.Delete;\n        else if (id == 'undo') {\n            if (this.owner.canUndo())\n                this.owner.performUndo();\n            else\n                this.owner.showMessage('Nothing to undo.');\n        }\n        else if (id == 'redo') {\n            if (this.owner.canRedo())\n                this.owner.performRedo();\n            else\n                this.owner.showMessage('Nothing to redo.');\n        }\n        else if (id == 'cut')\n            actv = ActivityType.Cut;\n        else if (id == 'copy')\n            actv = ActivityType.Copy;\n        else if (id == 'paste')\n            this.owner.performPaste();\n        else if (id == 'new')\n            actv = ActivityType.Clear;\n        else if (id == 'zoomfit')\n            this.owner.autoScale();\n        else if (id == 'zoomout')\n            this.owner.zoom(0.8);\n        else if (id == 'zoomin')\n            this.owner.zoom(1.25);\n        else if (id == 'selall')\n            actv = ActivityType.SelectAll;\n        else if (id == 'selnone')\n            actv = ActivityType.SelectNone;\n        else if (id == 'selprev')\n            actv = ActivityType.SelectPrevComp;\n        else if (id == 'selnext')\n            actv = ActivityType.SelectNextComp;\n        else if (id == 'selside')\n            actv = ActivityType.SelectSide;\n        else if (id == 'plus') {\n            actv = ActivityType.Charge;\n            param = { delta: 1 };\n        }\n        else if (id == 'minus') {\n            actv = ActivityType.Charge;\n            param = { delta: -1 };\n        }\n        else if (id == 'one') {\n            actv = ActivityType.BondOrder;\n            param = { order: 1 };\n        }\n        else if (id == 'two') {\n            actv = ActivityType.BondOrder;\n            param = { order: 2 };\n        }\n        else if (id == 'three') {\n            actv = ActivityType.BondOrder;\n            param = { order: 3 };\n        }\n        else if (id == 'four') {\n            actv = ActivityType.BondOrder;\n            param = { order: 4 };\n        }\n        else if (id == 'zero') {\n            actv = ActivityType.BondOrder;\n            param = { order: 0 };\n        }\n        else if (id == 'inclined') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_INCLINED };\n        }\n        else if (id == 'declined') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_DECLINED };\n        }\n        else if (id == 'squig') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_UNKNOWN };\n        }\n        else if (id == 'linear') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Linear };\n        }\n        else if (id == 'trigonal') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Trigonal };\n        }\n        else if (id == 'tetra1') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Tetra1 };\n        }\n        else if (id == 'tetra2') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Tetra2 };\n        }\n        else if (id == 'sqplan') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.SqPlan };\n        }\n        else if (id == 'octa1') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Octa1 };\n        }\n        else if (id == 'octa2') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Octa2 };\n        }\n        else if (id == 'switch')\n            actv = ActivityType.BondSwitch;\n        else if (id == 'rotate')\n            actv = ActivityType.BondRotate;\n        else if (id == 'connect')\n            actv = ActivityType.Connect;\n        else if (id == 'disconnect')\n            actv = ActivityType.Disconnect;\n        else if (id == 'metalligate')\n            actv = ActivityType.MetalLigate;\n        else if (id == 'artifactpath')\n            actv = ActivityType.BondArtifactPath;\n        else if (id == 'artifactring')\n            actv = ActivityType.BondArtifactRing;\n        else if (id == 'artifactarene')\n            actv = ActivityType.BondArtifactArene;\n        else if (id == 'artifactclear')\n            actv = ActivityType.BondArtifactClear;\n        else if (id == 'polymer')\n            actv = ActivityType.PolymerBlock;\n        else if (id == 'addtwo')\n            actv = ActivityType.BondAddTwo;\n        else if (id == 'insert')\n            actv = ActivityType.BondInsert;\n        else if (id == 'curelement')\n            actv = ActivityType.SelectCurElement;\n        else if (id == 'selgrow')\n            actv = ActivityType.SelectGrow;\n        else if (id == 'selshrink')\n            actv = ActivityType.SelectShrink;\n        else if (id == 'selprev')\n            actv = ActivityType.SelectPrevComp;\n        else if (id == 'selnext')\n            actv = ActivityType.SelectNextComp;\n        else if (id == 'selchain')\n            actv = ActivityType.SelectChain;\n        else if (id == 'smallring')\n            actv = ActivityType.SelectSmRing;\n        else if (id == 'ringblock')\n            actv = ActivityType.SelectRingBlk;\n        else if (id == 'toggle')\n            actv = ActivityType.SelectToggle;\n        else if (id == 'uncurrent')\n            actv = ActivityType.SelectUnCurrent;\n        else if (id == 'join')\n            actv = ActivityType.Join;\n        else if (id == 'inline')\n            actv = ActivityType.AbbrevGroup;\n        else if (id == 'formula')\n            actv = ActivityType.AbbrevFormula;\n        else if (id == 'clearabbrev')\n            actv = ActivityType.AbbrevClear;\n        else if (id == 'expandabbrev')\n            actv = ActivityType.AbbrevExpand;\n        else if (id == 'up') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'up' };\n        }\n        else if (id == 'down') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'down' };\n        }\n        else if (id == 'left') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'left' };\n        }\n        else if (id == 'right') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'right' };\n        }\n        else if (id == 'uplots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'up' };\n        }\n        else if (id == 'downlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'down' };\n        }\n        else if (id == 'leftlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'left' };\n        }\n        else if (id == 'rightlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'right' };\n        }\n        else if (id == 'upfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'up' };\n        }\n        else if (id == 'downfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'down' };\n        }\n        else if (id == 'leftfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'left' };\n        }\n        else if (id == 'rightfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'right' };\n        }\n        else if (id == 'rotp01') {\n            actv = ActivityType.Rotate;\n            param = { theta: 1 };\n        }\n        else if (id == 'rotm01') {\n            actv = ActivityType.Rotate;\n            param = { theta: -1 };\n        }\n        else if (id == 'rotp05') {\n            actv = ActivityType.Rotate;\n            param = { theta: 5 };\n        }\n        else if (id == 'rotm05') {\n            actv = ActivityType.Rotate;\n            param = { theta: -5 };\n        }\n        else if (id == 'rotp15') {\n            actv = ActivityType.Rotate;\n            param = { theta: 15 };\n        }\n        else if (id == 'rotm15') {\n            actv = ActivityType.Rotate;\n            param = { theta: -15 };\n        }\n        else if (id == 'rotp30') {\n            actv = ActivityType.Rotate;\n            param = { theta: 30 };\n        }\n        else if (id == 'rotm30') {\n            actv = ActivityType.Rotate;\n            param = { theta: -30 };\n        }\n        else if (id == 'hflip') {\n            actv = ActivityType.Flip;\n            param = { axis: 'hor' };\n        }\n        else if (id == 'vflip') {\n            actv = ActivityType.Flip;\n            param = { axis: 'ver' };\n        }\n        else if (id == 'shrink') {\n            actv = ActivityType.Scale;\n            param = { mag: 1 / 1.1 };\n        }\n        else if (id == 'grow') {\n            actv = ActivityType.Scale;\n            param = { mag: 1.1 };\n        }\n        else if (id == 'bondQAny')\n            actv = ActivityType.QueryBondAny;\n        else if (id == 'atom')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Atom));\n        else if (id == 'bond')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Bond));\n        else if (id == 'select')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Select));\n        else if (id == 'move')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Move));\n        else if (id == 'abbrev')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Abbrev));\n        else if (id == 'sblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.SBlock));\n        else if (id == 'pblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.PBlock));\n        else if (id == 'dblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.DBlock));\n        else if (id == 'fblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.FBlock));\n        else if (id == 'noble')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Noble));\n        else\n            alert('Unhandled command: \"' + id + '\"');\n        if (actv > 0) {\n            new MoleculeActivity(this.owner.getState(), actv, param, this.owner).execute();\n        }\n    }\n    claimKey(event) {\n        for (let listItems of [COMMANDS_MAIN, COMMANDS_ATOM, COMMANDS_BOND, COMMANDS_SELECT, COMMANDS_MOVE])\n            for (let item of listItems) {\n                if (ButtonBank.matchKey(event, item.mnemonic, item.key)) {\n                    this.hitButton(item.id);\n                    return true;\n                }\n            }\n        return false;\n    }\n}\n//# sourceMappingURL=CommandBank.js.map","import { Molecule } from '../data/Molecule';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { Vec } from '../util/Vec';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nexport class ContextSketch {\n    constructor(state, sketcher, proxyClip) {\n        this.state = state;\n        this.sketcher = sketcher;\n        this.proxyClip = proxyClip;\n    }\n    populate() {\n        const { state, sketcher } = this;\n        let menu = [];\n        if (sketcher.canUndo() || sketcher.canRedo()) {\n            if (sketcher.canUndo())\n                menu.push({ label: 'Undo', accelerator: 'CmdOrCtrl+Z', click: () => sketcher.performUndo() });\n            if (sketcher.canRedo())\n                menu.push({ label: 'Redo', accelerator: 'CmdOrCtrl+Shift+Z', click: () => sketcher.performRedo() });\n            menu.push(null);\n        }\n        if (state.currentAtom > 0 || state.currentBond > 0)\n            menu.push({ label: 'Edit', 'accelerator': 'Enter', click: () => sketcher.editCurrent() });\n        this.maybeAppend(menu, 'Delete', 'D', ActivityType.Delete);\n        this.maybeAppend(menu, 'Cut', 'CmdOrCtrl+X', ActivityType.Cut);\n        this.maybeAppend(menu, 'Copy', 'CmdOrCtrl+C', ActivityType.Copy);\n        if (this.proxyClip.canAlwaysGet())\n            menu.push({ label: 'Paste', 'accelerator': 'CmdOrCtrl+V', click: () => sketcher.performPaste() });\n        this.maybeAppend(menu, 'Charge +', 'Shift+=', ActivityType.Charge, { delta: 1 });\n        this.maybeAppend(menu, 'Charge -', 'Shift+-', ActivityType.Charge, { delta: -1 });\n        this.maybeAppend(menu, 'Bond Order 0', '0', ActivityType.BondOrder, { order: 0 });\n        this.maybeAppend(menu, 'Bond Order 1', '1', ActivityType.BondOrder, { order: 1 });\n        this.maybeAppend(menu, 'Bond Order 2', '2', ActivityType.BondOrder, { order: 2 });\n        this.maybeAppend(menu, 'Bond Order 3', '3', ActivityType.BondOrder, { order: 3 });\n        this.maybeAppend(menu, 'Bond Order 4', null, ActivityType.BondOrder, { order: 4 });\n        this.maybeAppend(menu, 'Unknown Stereochemistry', '4', ActivityType.BondType, { type: Molecule.BONDTYPE_UNKNOWN });\n        this.maybeAppend(menu, 'Bond Wedge Up', '5', ActivityType.BondType, { type: Molecule.BONDTYPE_INCLINED });\n        this.maybeAppend(menu, 'Bond Wedge Down', '6', ActivityType.BondType, { type: Molecule.BONDTYPE_DECLINED });\n        this.maybeAppend(menu, 'Switch Geometry', null, ActivityType.BondSwitch);\n        this.maybeAppend(menu, 'Add Two Bonds', 'Shift+D', ActivityType.BondAddTwo);\n        this.maybeAppend(menu, 'Insert Atom', null, ActivityType.BondInsert);\n        this.maybeAppend(menu, 'Join Atoms', null, ActivityType.Join);\n        this.maybeAppend(menu, 'Abbreviate Group', '/', ActivityType.AbbrevGroup);\n        this.maybeAppend(menu, 'Abbreviate Formula', '\\\\', ActivityType.AbbrevFormula);\n        this.maybeAppend(menu, 'Clear Abbreviation', 'Shift+\\\\', ActivityType.AbbrevClear);\n        this.maybeAppend(menu, 'Expand Abbreviation', 'Shift+/', ActivityType.AbbrevExpand);\n        let rotateSub = this.rotateSubMenu();\n        if (Vec.notBlank(rotateSub))\n            menu.push({ label: 'Rotate', subMenu: rotateSub });\n        let querySub = this.querySubMenu();\n        if (Vec.notBlank(querySub))\n            menu.push({ label: 'Query', subMenu: querySub });\n        let poly = new PolymerBlock(state.mol);\n        for (let units of poly.getUnits()) {\n            let a1 = state.currentAtom, a2 = 0;\n            if (state.currentBond > 0)\n                [a1, a2] = state.mol.bondFromTo(state.currentBond);\n            if (units.atoms.includes(a1) || units.atoms.includes(a2)) {\n                let label = 'Polymer Block (' + units.atoms.length + ' atom' + (units.atoms.length == 1 ? '' : 's') + ')';\n                menu.push({ label: label, click: () => sketcher.performPolymerBlock(units.atoms) });\n            }\n        }\n        if (menu.length > 0)\n            menu.push(null);\n        menu.push({ label: 'Scale to Fit', click: () => sketcher.autoScale() });\n        menu.push({ label: 'Zoom In', 'accelerator': '=', click: () => sketcher.zoom(1.25) });\n        menu.push({ label: 'Zoom Out', 'accelerator': '-', click: () => sketcher.zoom(0.8) });\n        return menu;\n    }\n    maybeAppend(menu, title, accelerator, activ, param = null) {\n        let molact = new MoleculeActivity(this.state, activ, param);\n        molact.execute();\n        if (!molact.output.mol && !molact.toClipboard)\n            return;\n        menu.push({ label: title, 'accelerator': accelerator, click: () => {\n                this.sketcher.setState(molact.output, true);\n                if (molact.toClipboard)\n                    this.proxyClip.setString(molact.toClipboard);\n            } });\n    }\n    rotateSubMenu() {\n        let menu = [];\n        this.maybeAppend(menu, 'Bond', null, ActivityType.BondRotate);\n        this.maybeAppend(menu, '+1 \\u{00B0}', null, ActivityType.Rotate, { theta: 1 });\n        this.maybeAppend(menu, '-1 \\u{00B0}', null, ActivityType.Rotate, { theta: -1 });\n        this.maybeAppend(menu, '+5 \\u{00B0}', null, ActivityType.Rotate, { theta: 5 });\n        this.maybeAppend(menu, '-5 \\u{00B0}', null, ActivityType.Rotate, { theta: -5 });\n        this.maybeAppend(menu, '+15 \\u{00B0}', null, ActivityType.Rotate, { theta: 15 });\n        this.maybeAppend(menu, '-15 \\u{00B0}', null, ActivityType.Rotate, { theta: -15 });\n        this.maybeAppend(menu, '+30 \\u{00B0}', 'Shift+[', ActivityType.Rotate, { theta: 30 });\n        this.maybeAppend(menu, '-30 \\u{00B0}', 'Shift+]', ActivityType.Rotate, { theta: -30 });\n        this.maybeAppend(menu, 'H-Flip', 'Shift+,', ActivityType.Flip, { axis: 'hor' });\n        this.maybeAppend(menu, 'V-Flip', 'Shift+.', ActivityType.Flip, { axis: 'ver' });\n        this.maybeAppend(menu, 'Align', null, ActivityType.AlignRegular);\n        return menu;\n    }\n    querySubMenu() {\n        let menu = [];\n        this.maybeAppend(menu, 'Clear', null, ActivityType.QueryClear);\n        this.maybeAppend(menu, 'Copy', null, ActivityType.QueryCopy);\n        return menu;\n    }\n}\n//# sourceMappingURL=ContextSketch.js.map","import { Chemistry } from '../data/Chemistry';\nimport { CoordUtil } from '../data/CoordUtil';\nimport { MetaMolecule } from '../data/MetaMolecule';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock, POLYMERBLOCK_SPECIAL_UNCAPPED, PolymerBlockConnectivity } from '../data/PolymerBlock';\nimport { QueryTypeBond, QueryUtil } from '../data/QueryUtil';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { Stereochemistry } from '../data/Stereochemistry';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { FontData } from '../gfx/FontData';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { GeomUtil } from '../util/Geom';\nimport { Theme } from '../util/Theme';\nimport { colourCanvas, drawLine, fontSansSerif, invZ, norm2_xy, norm_xy, pixelDensity, setBoundaryPixels, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport var DraggingTool;\n(function (DraggingTool) {\n    DraggingTool[DraggingTool[\"None\"] = 0] = \"None\";\n    DraggingTool[DraggingTool[\"Press\"] = 1] = \"Press\";\n    DraggingTool[DraggingTool[\"Lasso\"] = 2] = \"Lasso\";\n    DraggingTool[DraggingTool[\"Pan\"] = 3] = \"Pan\";\n    DraggingTool[DraggingTool[\"Zoom\"] = 4] = \"Zoom\";\n    DraggingTool[DraggingTool[\"Rotate\"] = 5] = \"Rotate\";\n    DraggingTool[DraggingTool[\"Move\"] = 6] = \"Move\";\n    DraggingTool[DraggingTool[\"Erasor\"] = 7] = \"Erasor\";\n    DraggingTool[DraggingTool[\"Atom\"] = 8] = \"Atom\";\n    DraggingTool[DraggingTool[\"Bond\"] = 9] = \"Bond\";\n    DraggingTool[DraggingTool[\"Charge\"] = 10] = \"Charge\";\n    DraggingTool[DraggingTool[\"Ring\"] = 11] = \"Ring\";\n})(DraggingTool || (DraggingTool = {}));\nexport var DrawCanvasDecoration;\n(function (DrawCanvasDecoration) {\n    DrawCanvasDecoration[DrawCanvasDecoration[\"None\"] = 0] = \"None\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"Stereochemistry\"] = 1] = \"Stereochemistry\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"MappingNumber\"] = 2] = \"MappingNumber\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"AtomIndex\"] = 3] = \"AtomIndex\";\n})(DrawCanvasDecoration || (DrawCanvasDecoration = {}));\nexport class DrawCanvas extends Widget {\n    constructor() {\n        super();\n        this.mol = null;\n        this.policy = null;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.pointScale = 1;\n        this.viewOpt = {\n            decoration: DrawCanvasDecoration.Stereochemistry,\n            showOxState: true,\n            showQuery: true,\n            showArtifacts: true,\n        };\n        this.width = 0;\n        this.height = 0;\n        this.border = 0x808080;\n        this.borderRadius = 4;\n        this.background = 0xF8F8F8;\n        this.canvasUnder = null;\n        this.canvasMolecule = null;\n        this.canvasOver = null;\n        this.divMessage = null;\n        this.layout = null;\n        this.metavec = null;\n        this.stereo = null;\n        this.guidelines = null;\n        this.filthy = false;\n        this.dragType = DraggingTool.None;\n        this.currentAtom = 0;\n        this.currentBond = 0;\n        this.hoverAtom = 0;\n        this.hoverBond = 0;\n        this.selectedMask = null;\n        this.opAtom = 0;\n        this.opBond = 0;\n        this.opBudged = false;\n        this.opShift = false;\n        this.opCtrl = false;\n        this.opAlt = false;\n        this.lassoX = null;\n        this.lassoY = null;\n        this.lassoMask = null;\n        this.clickX = 0;\n        this.clickY = 0;\n        this.mouseX = 0;\n        this.mouseY = 0;\n        this.dragGuides = null;\n        this.templatePerms = null;\n        this.currentPerm = 0;\n        this.fusionBank = null;\n        this.cursorWatermark = 0;\n        this.cursorDX = 0;\n        this.cursorDY = 0;\n        this.toolAtomSymbol = '';\n        this.toolBondOrder = 0;\n        this.toolBondType = 0;\n        this.toolChargeDelta = 0;\n        this.toolRingArom = false;\n        this.toolRingFreeform = false;\n        this.toolRotateIncr = 0;\n        this.redrawCacheKey = '';\n        this.abbrevPolicy = RenderPolicy.defaultBlackOnWhite();\n        this.abbrevPolicy.data.foreground = 0xD0D0D0;\n        this.abbrevPolicy.data.atomCols = Vec.numberArray(0xD0D0D0, this.abbrevPolicy.data.atomCols.length);\n    }\n    render(parent) {\n        if (!this.width || !this.height)\n            throw 'Sketcher.render called without width and height';\n        super.render(parent);\n        this.container = dom('<div/>').appendTo(this.contentDOM);\n        this.container.css({ 'position': 'relative', 'width': this.width + 'px', 'height': this.height + 'px' });\n        this.container.css({ 'background-color': colourCanvas(this.background) });\n        if (this.border != MetaVector.NOCOLOUR) {\n            this.container.css({ 'border': '1px solid ' + colourCanvas(this.border) });\n            this.container.css({ 'border-radius': this.borderRadius + 'px' });\n        }\n        this.container.css({ 'outline': 'none' });\n        this.container.attr({ 'tabindex': '0' });\n        let canvasStyle = { 'position': 'absolute', 'left': '0', 'top': '0', 'width': `${this.width}px`, 'height': `${this.height}`, 'pointer-events': 'none' };\n        this.divInfo = dom('<div/>').appendTo(this.container).css({ 'position': 'absolute', 'left': '0', 'top': '0', 'pointer-events': 'none' });\n        this.canvasUnder = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.canvasMolecule = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.canvasOver = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.divMessage = dom('<div/>').appendTo(this.container).css(canvasStyle);\n        this.divMessage.css({ 'text-align': 'center', 'vertical-align': 'middle', 'font-weight': 'bold', 'font-size': '120%' });\n    }\n    getState() {\n        let state = {\n            mol: this.mol.clone(),\n            currentAtom: this.currentAtom,\n            currentBond: this.currentBond,\n            selectedMask: this.selectedMask == null ? null : this.selectedMask.slice(0)\n        };\n        return state;\n    }\n    getSelected(atom) {\n        if (this.selectedMask == null || atom > this.selectedMask.length)\n            return false;\n        return this.selectedMask[atom - 1];\n    }\n    getLassoed(atom) {\n        if (this.lassoMask == null || atom > this.lassoMask.length)\n            return false;\n        return this.lassoMask[atom - 1];\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) {\n        return ax * this.pointScale + this.offsetX;\n    }\n    angToY(ay) {\n        return ay * -this.pointScale + this.offsetY;\n    }\n    xToAng(px) {\n        return (px - this.offsetX) / this.pointScale;\n    }\n    yToAng(py) {\n        return (py - this.offsetY) / -this.pointScale;\n    }\n    scaleToAng(scale) { return scale / this.pointScale; }\n    angToScale(ang) { return ang * this.pointScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n    delayedRedraw() {\n        if (this.canvasMolecule == null)\n            return;\n        this.filthy = true;\n        window.setTimeout(() => { if (this.filthy)\n            this.redraw(); }, 10);\n    }\n    layoutMolecule() {\n        let mol = this.mol;\n        if (this.hoverAtom > 0 && MolUtil.hasAbbrev(mol, this.hoverAtom)) {\n            mol = mol.clone();\n            mol.setAtomElement(this.hoverAtom, '');\n            mol.setAtomCharge(this.hoverAtom, 0);\n            mol.setAtomUnpaired(this.hoverAtom, 0);\n            MolUtil.clearAbbrev(mol, this.hoverAtom);\n        }\n        let effects = this.sketchEffects(mol);\n        this.layout = new ArrangeMolecule(mol, this, this.policy, effects);\n        this.layout.setWantArtifacts(this.viewOpt.showArtifacts);\n        this.layout.arrange();\n    }\n    redrawMetaVector() {\n        this.metavec = new MetaVector();\n        new DrawMolecule(this.layout, this.metavec).draw();\n        if (this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom)) {\n            let abbrevMol = MolUtil.getAbbrev(this.mol, this.hoverAtom);\n            this.orientAbbreviation(this.hoverAtom, abbrevMol);\n            this.abbrevPolicy.data.pointScale = this.policy.data.pointScale;\n            let layout = new ArrangeMolecule(abbrevMol, this, this.abbrevPolicy, new RenderEffects());\n            layout.arrange();\n            new DrawMolecule(layout, this.metavec).draw();\n        }\n    }\n    redraw() {\n        this.filthy = false;\n        this.redrawInfo();\n        this.redrawUnder();\n        this.redrawMolecule();\n        this.redrawOver();\n    }\n    redrawInfo() {\n        let cacheKey = JSON.stringify([this.width, this.height, this.mol.toString()]);\n        if (cacheKey == this.redrawCacheKey)\n            return;\n        this.redrawCacheKey = cacheKey;\n        this.divInfo.empty();\n        this.divInfo.css({ 'visibility': 'hidden', 'left': '0', 'top': '0' });\n        if (this.mol.numAtoms == 0)\n            return;\n        let divText = dom('<div/>').appendTo(this.divInfo);\n        divText.css({ 'display': 'inline-block', 'text-align': 'right', 'font-family': 'sans-serif', 'font-size': '80%', 'color': '#C0C0C0' });\n        let html = MolUtil.molecularFormula(this.mol, ['<sub>', '</sub>', '<sup>', '</sup>']);\n        let chg = 0;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            chg += this.mol.atomCharge(n);\n        if (chg == -1)\n            html += '<sup>-</sup>';\n        else if (chg < -1)\n            html += `<sup>${chg}</sup>`;\n        else if (chg == 1)\n            html += '<sup>+</sup>';\n        else if (chg > 1)\n            html += `<sup>+${chg}</sup>`;\n        html += '<br>' + MolUtil.molecularWeight(this.mol).toFixed(2);\n        divText.setHTML(html);\n        setTimeout(() => {\n            let w = divText.width(), h = divText.height();\n            setBoundaryPixels(this.divInfo, this.width - w - 1, 1, w, h);\n            this.divInfo.css({ 'visibility': 'visible' });\n        }, 1);\n    }\n    redrawUnder() {\n        let HOVER_COL = 0xE0E0E0;\n        let CURRENT_COL = 0xA0A0A0, CURRENT_BORD = 0x808080;\n        let SELECT_COL = 0xC0C0C0;\n        let LASSO_COL = 0xD0D0D0;\n        let density = pixelDensity();\n        this.canvasUnder.elCanvas.width = this.width * density;\n        this.canvasUnder.elCanvas.height = this.height * density;\n        this.canvasUnder.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasUnder.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if (this.hoverAtom > 0) {\n            let units = new PolymerBlock(this.mol).getUnits();\n            for (let unit of units)\n                if (unit.atoms.includes(this.hoverAtom))\n                    this.drawPolymerUnit(ctx, unit, units);\n            let sz = 0;\n            if (this.hoverAtom == this.currentAtom)\n                sz += 0.1;\n            if (this.getSelected(this.hoverAtom))\n                sz += 0.1;\n            if (this.currentBond > 0 && (this.mol.bondFrom(this.currentBond) == this.hoverAtom || this.mol.bondTo(this.currentBond) == this.hoverAtom))\n                sz += 0.1;\n            this.drawAtomShade(ctx, this.hoverAtom, HOVER_COL, -1, sz);\n        }\n        if (this.hoverBond > 0) {\n            let bfr = this.mol.bondFrom(this.hoverBond), bto = this.mol.bondTo(this.hoverBond);\n            let units = new PolymerBlock(this.mol).getUnits();\n            for (let unit of units)\n                if (unit.atoms.includes(bfr) && unit.atoms.includes(bto))\n                    this.drawPolymerUnit(ctx, unit, units);\n            let sz = 0;\n            if (this.hoverBond == this.currentBond)\n                sz += 0.1;\n            if (this.getSelected(bfr) && this.getSelected(bto))\n                sz += 0.1;\n            this.drawBondShade(ctx, this.hoverBond, HOVER_COL, -1, sz);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let sz = n == this.currentBond ? 0.1 : 0;\n            let bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n            let sfr = this.getSelected(bfr), sto = this.getSelected(bto), lfr = this.getLassoed(bfr), lto = this.getLassoed(bto);\n            if (sfr && sto)\n                this.drawBondShade(ctx, n, SELECT_COL, -1, sz);\n            else if ((sfr || lfr) && (sto || lto))\n                this.drawBondShade(ctx, n, LASSO_COL, -1, sz);\n        }\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let sz = this.currentAtom == n ? 0.1 : 0;\n            if (this.getSelected(n))\n                this.drawAtomShade(ctx, n, SELECT_COL, -1, sz);\n            else if (this.getLassoed(n))\n                this.drawAtomShade(ctx, n, LASSO_COL, -1, sz);\n        }\n        if (this.currentAtom > 0) {\n            this.drawAtomShade(ctx, this.currentAtom, CURRENT_COL, CURRENT_BORD, 0);\n        }\n        if (this.currentBond > 0) {\n            this.drawBondShade(ctx, this.currentBond, CURRENT_COL, CURRENT_BORD, 0);\n        }\n        if (this.dragType == DraggingTool.Move || (this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond) {\n            if (this.dragGuides != null && this.dragGuides.length > 0) {\n                for (let g of this.dragGuides)\n                    for (let n = 0; n < g.x.length; n++) {\n                        let lw = this.policy.data.lineSize * this.pointScale;\n                        ctx.strokeStyle = '#C0C0C0';\n                        ctx.lineWidth = lw;\n                        drawLine(ctx, g.sourceX, g.sourceY, g.destX[n], g.destY[n]);\n                        ctx.beginPath();\n                        ctx.ellipse(g.destX[n], g.destY[n], 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                        ctx.fillStyle = '#C0C0C0';\n                        ctx.fill();\n                    }\n            }\n        }\n        if (this.dragType == DraggingTool.Ring) {\n            let [ringX, ringY] = this.determineFauxRing();\n            let rsz = ringX == null ? 0 : ringX.length;\n            if (rsz > 0) {\n                let scale = this.pointScale;\n                let lw = this.policy.data.lineSize * scale;\n                ctx.strokeStyle = '#C0C0C0';\n                ctx.lineWidth = lw;\n                for (let n = 0; n < rsz; n++) {\n                    let nn = n < rsz - 1 ? n + 1 : 0;\n                    let x1 = this.angToX(ringX[n]), y1 = this.angToY(ringY[n]);\n                    let x2 = this.angToX(ringX[nn]), y2 = this.angToY(ringY[nn]);\n                    drawLine(ctx, x1, y1, x2, y2);\n                }\n                if (this.toolRingArom) {\n                    let cx = 0, cy = 0;\n                    for (let n = 0; n < rsz; n++) {\n                        cx += ringX[n];\n                        cy += ringY[n];\n                    }\n                    cx /= rsz;\n                    cy /= rsz;\n                    let rad = 0;\n                    for (let n = 0; n < rsz; n++)\n                        rad += norm_xy(ringX[n] - cx, ringY[n] - cy);\n                    rad = this.angToScale(rad * 0.5 / rsz);\n                    ctx.beginPath();\n                    ctx.ellipse(this.angToX(cx), this.angToY(cy), rad, rad, 0, 0, TWOPI, false);\n                    ctx.stroke();\n                }\n            }\n        }\n        ctx.restore();\n    }\n    redrawMolecule() {\n        let density = pixelDensity();\n        this.canvasMolecule.elCanvas.width = this.width * density;\n        this.canvasMolecule.elCanvas.height = this.height * density;\n        this.canvasMolecule.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasMolecule.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if (this.metavec != null)\n            this.metavec.renderContext(ctx);\n        if (this.templatePerms != null) {\n            let perm = this.templatePerms[this.currentPerm];\n            if (perm.metavec != null)\n                perm.metavec.renderContext(ctx);\n        }\n        ctx.restore();\n    }\n    redrawOver() {\n        let density = pixelDensity();\n        this.canvasOver.elCanvas.width = this.width * density;\n        this.canvasOver.elCanvas.height = this.height * density;\n        this.canvasOver.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasOver.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if ((this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) && this.lassoX.length > 1) {\n            let erasing = this.dragType == DraggingTool.Erasor;\n            let path = new Path2D();\n            path.moveTo(this.lassoX[0], this.lassoY[0]);\n            for (let n = 1; n < this.lassoX.length; n++)\n                path.lineTo(this.lassoX[n], this.lassoY[n]);\n            path.closePath();\n            ctx.fillStyle = colourCanvas(erasing ? 0xD0FF0000 : 0xF0000000);\n            ctx.fill(path);\n            ctx.strokeStyle = erasing ? '#804040' : '#808080';\n            ctx.lineWidth = 0.5;\n            ctx.stroke(path);\n        }\n        if (this.dragType == DraggingTool.Rotate) {\n            let [x0, y0, theta, magnitude] = this.determineDragTheta();\n            let scale = this.pointScale;\n            let lw = this.policy.data.lineSize * scale;\n            ctx.strokeStyle = '#E0E0E0';\n            ctx.lineWidth = 0.5 * lw;\n            drawLine(ctx, x0, y0, x0 + magnitude, y0);\n            ctx.strokeStyle = '#808080';\n            ctx.lineWidth = lw;\n            drawLine(ctx, x0, y0, x0 + magnitude * Math.cos(theta), y0 + magnitude * Math.sin(theta));\n            ctx.beginPath();\n            ctx.ellipse(x0, y0, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n            ctx.fillStyle = '#808080';\n            ctx.fill();\n            for (let atom of this.subjectAtoms(true, false)) {\n                let ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n                let ang = Math.atan2(ay - y0, ax - x0), dist = norm_xy(ax - x0, ay - y0);\n                let nx = x0 + dist * Math.cos(ang + theta), ny = y0 + dist * Math.sin(ang + theta);\n                ctx.beginPath();\n                ctx.ellipse(nx, ny, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0.5;\n                ctx.stroke();\n            }\n        }\n        if (this.dragType == DraggingTool.Move) {\n            let [dx, dy] = this.determineMoveDelta();\n            let scale = this.pointScale;\n            let lw = this.policy.data.lineSize * scale;\n            for (let atom of this.subjectAtoms(false, true)) {\n                let ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n                ctx.beginPath();\n                ctx.ellipse(ax + dx, ay + dy, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0.5;\n                ctx.stroke();\n            }\n        }\n        if ((this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond) {\n            let element = this.dragType == DraggingTool.Atom ? this.toolAtomSymbol : 'C';\n            let order = this.dragType == DraggingTool.Bond ? this.toolBondOrder : 1;\n            let type = this.dragType == DraggingTool.Bond ? this.toolBondType : Molecule.BONDTYPE_NORMAL;\n            this.drawOriginatingBond(ctx, element, order, type);\n        }\n        if (this.viewOpt.showQuery)\n            this.drawQueryFeatures(ctx);\n        ctx.restore();\n    }\n    subjectAtoms(allIfNone = false, useOpAtom = false) {\n        let atoms = [];\n        if (this.selectedMask != null) {\n            for (let n = 0; n < this.selectedMask.length; n++)\n                if (this.selectedMask[n])\n                    atoms.push(n + 1);\n            if (atoms.length > 0)\n                return atoms;\n        }\n        if (this.currentAtom > 0)\n            atoms.push(this.currentAtom);\n        else if (this.currentBond > 0) {\n            atoms.push(this.mol.bondFrom(this.currentBond));\n            atoms.push(this.mol.bondTo(this.currentBond));\n        }\n        if (useOpAtom && atoms.length == 0 && this.opAtom > 0)\n            atoms.push(this.opAtom);\n        if (allIfNone && atoms.length == 0) {\n            for (let n = 1; n <= this.mol.numAtoms; n++)\n                atoms.push(n);\n        }\n        return atoms;\n    }\n    updateLasso(x, y) {\n        if (this.dragType != DraggingTool.Lasso && this.dragType != DraggingTool.Erasor)\n            return;\n        if (x < 0 || y < 0 || x > this.width || y > this.height) {\n            this.dragType = DraggingTool.None;\n            this.lassoX = null;\n            this.lassoY = null;\n            this.lassoMask = null;\n            this.delayedRedraw();\n        }\n        let len = Vec.len(this.lassoX);\n        if (len > 0 && this.lassoX[len - 1] == x && this.lassoY[len - 1] == y)\n            return;\n        this.lassoX.push(x);\n        this.lassoY.push(y);\n        this.calculateLassoMask();\n        this.delayedRedraw();\n    }\n    calculateLassoMask() {\n        this.lassoMask = new Array(this.mol.numAtoms);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            this.lassoMask[n] = false;\n        for (let n = 0; n < this.layout.numPoints(); n++) {\n            let p = this.layout.getPoint(n);\n            if (p.anum == 0)\n                continue;\n            this.lassoMask[p.anum - 1] = GeomUtil.pointInPolygon(p.oval.cx, p.oval.cy, this.lassoX, this.lassoY);\n        }\n    }\n    drawAtomShade(ctx, atom, fillCol, borderCol, anghalo) {\n        if (this.layout == null)\n            return;\n        let p = null;\n        for (let n = 0; n < this.layout.numPoints(); n++)\n            if (this.layout.getPoint(n).anum == atom) {\n                p = this.layout.getPoint(n);\n                break;\n            }\n        if (p == null)\n            return;\n        let minRad = 0.2 * this.pointScale, minRadSq = sqr(minRad);\n        let cx = p.oval.cx, cy = p.oval.cy;\n        let rad = Math.max(minRad, Math.max(p.oval.rw, p.oval.rh)) + (0.1 + anghalo) * this.pointScale;\n        if (fillCol != -1) {\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fill();\n        }\n        if (borderCol != -1) {\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n            ctx.strokeStyle = colourCanvas(borderCol);\n            ctx.lineWidth = 1;\n            ctx.stroke();\n        }\n    }\n    drawBondShade(ctx, bond, fillCol, borderCol, anghalo) {\n        if (this.layout == null)\n            return;\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0, nb = 0, sz = 0;\n        for (let n = 0; n < this.layout.numLines(); n++) {\n            let l = this.layout.getLine(n);\n            if (l.bnum != bond)\n                continue;\n            x1 += l.line.x1;\n            y1 += l.line.y1;\n            x2 += l.line.x2;\n            y2 += l.line.y2;\n            nb++;\n            sz += l.size + (0.2 + anghalo) * this.pointScale;\n        }\n        if (nb == 0)\n            return;\n        let invNB = 1 / nb;\n        sz *= invNB;\n        x1 *= invNB;\n        y1 *= invNB;\n        x2 *= invNB;\n        y2 *= invNB;\n        let dx = x2 - x1, dy = y2 - y1, invDist = 1 / norm_xy(dx, dy);\n        dx *= invDist;\n        dy *= invDist;\n        let ox = dy, oy = -dx;\n        let path = new Path2D(), mx, my, CIRC = 0.8;\n        path.moveTo(x1 + ox * sz, y1 + oy * sz);\n        mx = x1 + (ox * sz - dx * sz) * CIRC;\n        my = y1 + (oy * sz - dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x1 - dx * sz, y1 - dy * sz);\n        mx = x1 + (-ox * sz - dx * sz) * CIRC;\n        my = y1 + (-oy * sz - dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x1 - ox * sz, y1 - oy * sz);\n        path.lineTo(x2 - ox * sz, y2 - oy * sz);\n        mx = x2 + (-ox * sz + dx * sz) * CIRC;\n        my = y2 + (-oy * sz + dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x2 + dx * sz, y2 + dy * sz);\n        mx = x2 + (ox * sz + dx * sz) * CIRC;\n        my = y2 + (oy * sz + dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x2 + ox * sz, y2 + oy * sz);\n        path.closePath();\n        if (fillCol != -1) {\n            ctx.beginPath();\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fill(path);\n        }\n        if (borderCol != -1) {\n            ctx.beginPath();\n            ctx.strokeStyle = colourCanvas(borderCol);\n            ctx.lineWidth = 1;\n            ctx.stroke(path);\n        }\n    }\n    drawOriginatingBond(ctx, element, order, type) {\n        let x1 = this.clickX, y1 = this.clickY;\n        if (this.opAtom > 0) {\n            x1 = this.angToX(this.mol.atomX(this.opAtom));\n            y1 = this.angToY(this.mol.atomY(this.opAtom));\n        }\n        else if (this.opBond > 0) {\n            let [bfr, bto] = this.mol.bondFromTo(this.opBond);\n            x1 = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n            y1 = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n        }\n        let x2 = this.mouseX, y2 = this.mouseY;\n        let snapTo = this.snapToGuide(x2, y2), snapAtom = false;\n        if (snapTo)\n            [x2, y2, snapAtom] = snapTo;\n        let scale = this.pointScale;\n        ctx.strokeStyle = snapAtom ? '#4040FF' : '#808080';\n        ctx.lineWidth = this.policy.data.lineSize * scale * (snapAtom ? 1.5 : 1);\n        drawLine(ctx, x1, y1, x2, y2);\n        if (element != 'C') {\n            let fh = this.policy.data.fontSize * scale;\n            ctx.font = fontSansSerif(fh);\n            let metrics = ctx.measureText(element);\n            ctx.fillStyle = '#808080';\n            ctx.fillText(element, x2 - 0.5 * metrics.width, y2 + 0.5 * fh);\n        }\n    }\n    drawQueryFeatures(ctx) {\n        const { layout, mol } = this;\n        let annots = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (QueryUtil.hasAnyQueryAtom(mol, n)) {\n                let bits = [];\n                for (let xtra of mol.atomExtra(n))\n                    if (xtra.startsWith('q'))\n                        bits.push(xtra);\n                let ap = layout.getPoint(n - 1);\n                annots.push({ txt: bits.join(','), x: ap.oval.cx + ap.oval.rw, y: ap.oval.cy });\n            }\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (QueryUtil.hasAnyQueryBond(mol, n)) {\n                let bits = [];\n                for (let xtra of mol.bondExtra(n))\n                    if (xtra.startsWith('q') && !xtra.startsWith(QueryTypeBond.Orders))\n                        bits.push(xtra);\n                let num = 0, cx = 0, cy = 0;\n                for (let bl of layout.getLines())\n                    if (bl.bnum == n) {\n                        num += 2;\n                        cx += bl.line.x1 + bl.line.x2;\n                        cy += bl.line.y1 + bl.line.y2;\n                    }\n                annots.push({ txt: bits.join(','), x: cx / num, y: cy / num });\n            }\n        let fh = 0.7 * this.policy.data.fontSize * this.pointScale;\n        for (let annot of annots) {\n            ctx.font = fontSansSerif(fh);\n            ctx.fillStyle = '#FF40C0';\n            ctx.fillText(annot.txt, annot.x, annot.y);\n        }\n    }\n    drawPolymerUnit(ctx, unit, allUnits) {\n        const { mol, layout } = this;\n        let x = [], y = [];\n        let scale = this.pointScale;\n        for (let a of unit.atoms) {\n            let pt = layout.getPoint(a - 1);\n            let rad = Math.max(0.5 * scale, Math.max(pt.oval.rw, pt.oval.rh));\n            const NPT = 36, THPT = TWOPI / NPT;\n            for (let n = 0; n < NPT; n++) {\n                let th = n * THPT;\n                x.push(pt.oval.cx + rad * Math.cos(th));\n                y.push(pt.oval.cy + rad * Math.sin(th));\n            }\n        }\n        let extBonds = [], inAtoms = [], outAtoms = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let flag1 = unit.atoms.includes(bfr), flag2 = unit.atoms.includes(bto);\n            if (!flag1 && !flag2)\n                continue;\n            if (!flag2) {\n                extBonds.push(n);\n                inAtoms.push(bfr);\n                outAtoms.push(bto);\n            }\n            else if (!flag1) {\n                extBonds.push(n);\n                inAtoms.push(bto);\n                outAtoms.push(bfr);\n            }\n            let pt1 = layout.getPoint(bfr - 1), pt2 = layout.getPoint(bto - 1);\n            let x1 = pt1.oval.cx, y1 = pt1.oval.cy, x2 = pt2.oval.cx, y2 = pt2.oval.cy;\n            if (!flag1)\n                [x1, y1] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n            else if (!flag2)\n                [x2, y2] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n            let dx = x2 - x1, dy = y2 - y1, d = norm_xy(dx, dy), invD = invZ(d);\n            let ox = dy * invD * 0.3 * scale, oy = -dx * invD * 0.3 * scale;\n            let npWidth = Math.ceil(2 * d / scale) + 1, npHeight = Math.ceil(2 * norm_xy(ox, oy) / scale) + 1;\n            for (let n = 0; n <= npWidth; n++) {\n                x.push(x1 - ox + dx * n / npWidth);\n                y.push(y1 - oy + dy * n / npWidth);\n                x.push(x1 + ox + dx * n / npWidth);\n                y.push(y1 + oy + dy * n / npWidth);\n            }\n            for (let n = 1; n < npHeight; n++) {\n                x.push(x1 - ox + 2 * ox * n / npHeight);\n                y.push(y1 - oy + 2 * oy * n / npHeight);\n                x.push(x2 - ox + 2 * ox * n / npHeight);\n                y.push(y2 - oy + 2 * oy * n / npHeight);\n            }\n        }\n        let [px, py] = GeomUtil.outlinePolygon(x, y, 0.5 * scale);\n        let path = new Path2D();\n        path.moveTo(px[0], py[0]);\n        for (let n = 1; n < px.length; n++)\n            path.lineTo(px[n], py[n]);\n        path.closePath();\n        ctx.save();\n        ctx.fillStyle = '#F9EFFF';\n        ctx.fill(path);\n        ctx.strokeStyle = '#C0C0C0';\n        ctx.lineWidth = 1;\n        ctx.stroke(path);\n        ctx.restore();\n        let selfLinks = [];\n        let innerLinks = [];\n        let outerLinks = [];\n        if (Vec.len(unit.bondConn) == 4) {\n            innerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[0])], inAtoms[extBonds.indexOf(unit.bondConn[2])]]);\n            innerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[1])], inAtoms[extBonds.indexOf(unit.bondConn[3])]]);\n        }\n        else if (Vec.len(extBonds) == 2 && unit.connect != null) {\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail || unit.connect == PolymerBlockConnectivity.Random) {\n                innerLinks.push([inAtoms[0], inAtoms[1]]);\n            }\n            if (unit.connect == PolymerBlockConnectivity.HeadToHead || unit.connect == PolymerBlockConnectivity.Random) {\n                selfLinks.push(inAtoms[0]);\n                selfLinks.push(inAtoms[1]);\n            }\n        }\n        else {\n            for (let b of extBonds) {\n                let a1 = mol.bondFrom(b), a2 = mol.bondTo(b);\n                if (unit.atoms.includes(a2))\n                    [a1, a2] = [a2, a1];\n                let incl = unit.bondIncl.get(b), excl = unit.bondExcl.get(b);\n                let isCapped = mol.atomElement(a2) != POLYMERBLOCK_SPECIAL_UNCAPPED;\n                for (let look of (isCapped ? [unit] : allUnits))\n                    for (let a of look.atoms) {\n                        let isExt = false;\n                        for (let adj of mol.atomAdjList(a))\n                            if (!look.atoms.includes(adj)) {\n                                isExt = true;\n                                break;\n                            }\n                        if (!isExt)\n                            continue;\n                        if (Vec.notBlank(incl)) {\n                            let anames = look.atomName.get(a), any = false;\n                            if (anames)\n                                for (let an of anames)\n                                    any = any || incl.includes(an);\n                            if (!any)\n                                continue;\n                        }\n                        if (Vec.notBlank(excl)) {\n                            let anames = look.atomName.get(a), any = false;\n                            if (anames)\n                                for (let an of anames)\n                                    any = any || excl.includes(an);\n                            if (any)\n                                continue;\n                        }\n                        if (a == a1)\n                            selfLinks.push(a1);\n                        else if (unit === look)\n                            innerLinks.push([a1, a]);\n                        else\n                            outerLinks.push([a1, a]);\n                    }\n            }\n        }\n        selfLinks = Vec.uniqueStable(selfLinks);\n        innerLinks = Vec.maskGet(innerLinks, Vec.maskUnique(innerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n        outerLinks = Vec.maskGet(outerLinks, Vec.maskUnique(outerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n        ctx.save();\n        ctx.strokeStyle = '#6329C1';\n        ctx.lineWidth = 2;\n        ctx.setLineDash([1, 1]);\n        ctx.beginPath();\n        for (let a of selfLinks) {\n            let p1 = layout.getPoint(a - 1), x1 = p1.oval.cx, y1 = p1.oval.cy;\n            let x2 = 0, y2 = 0, num = 0;\n            for (let n = 0; n < extBonds.length; n++)\n                if (inAtoms[n] == a) {\n                    let p2 = layout.getPoint(outAtoms[n] - 1);\n                    x2 += p2.oval.cx;\n                    y2 += p2.oval.cy;\n                    num++;\n                }\n            if (num > 1) {\n                x2 /= num;\n                y2 /= num;\n            }\n            x2 = x1 + 0.5 * (x2 - x1);\n            y2 = y1 + 0.5 * (y2 - y1);\n            let dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n            const EXT = 2 * scale;\n            ctx.moveTo(x1, y1);\n            ctx.quadraticCurveTo(cx + ox * EXT, cy + oy * EXT, x2, y2);\n            ctx.quadraticCurveTo(cx - ox * EXT, cy - oy * EXT, x1, y1);\n        }\n        for (let [a1, a2] of innerLinks) {\n            let x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n            let dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n            const EXT = 5;\n            let px1 = cx + ox * EXT, py1 = cy + oy * EXT, px2 = cx - ox * EXT, py2 = cy - oy * EXT;\n            let [px, py] = CoordUtil.congestionPoint(mol, px1, py1) < CoordUtil.congestionPoint(mol, px2, py2) ? [px1, py1] : [px2, py2];\n            ctx.moveTo(this.angToX(x1), this.angToY(y1));\n            ctx.quadraticCurveTo(this.angToX(px), this.angToY(py), this.angToX(x2), this.angToY(y2));\n        }\n        for (let [a1, a2] of outerLinks) {\n            let p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n            ctx.moveTo(p1.oval.cx, p1.oval.cy);\n            ctx.lineTo(p2.oval.cx, p2.oval.cy);\n        }\n        ctx.stroke();\n        ctx.restore();\n    }\n    determineFauxRing() {\n        let atom = this.opAtom, bond = this.opBond, mol = this.mol;\n        let x1 = atom > 0 ? mol.atomX(atom) : bond > 0 ? 0.5 * (mol.atomX(mol.bondFrom(bond)) + mol.atomX(mol.bondTo(bond))) : this.xToAng(this.clickX);\n        let y1 = atom > 0 ? mol.atomY(atom) : bond > 0 ? 0.5 * (mol.atomY(mol.bondFrom(bond)) + mol.atomY(mol.bondTo(bond))) : this.yToAng(this.clickY);\n        let x2 = this.xToAng(this.mouseX), y2 = this.yToAng(this.mouseY), dx = x2 - x1, dy = y2 - y1;\n        let rsz = Math.min(9, Math.round(norm_xy(dx, dy) * 2 / Molecule.IDEALBOND) + 2);\n        if (rsz < 3) { }\n        else if (bond > 0)\n            return SketchUtil.proposeBondRing(mol, rsz, bond, dx, dy);\n        else if (atom > 0 && mol.atomAdjCount(atom) > 0 && !this.toolRingFreeform)\n            return SketchUtil.proposeAtomRing(mol, rsz, atom, dx, dy);\n        else\n            return SketchUtil.proposeNewRing(mol, rsz, x1, y1, dx, dy, !this.toolRingFreeform);\n        return [null, null];\n    }\n    determineDragTheta() {\n        let x0 = this.clickX, y0 = this.clickY;\n        let snap = this.snapToGuide(x0, y0);\n        if (snap != null) {\n            x0 = snap[0];\n            y0 = snap[1];\n        }\n        let theta = Math.atan2(this.mouseY - y0, this.mouseX - x0), magnitude = norm_xy(this.mouseX - x0, this.mouseY - y0);\n        if (this.toolRotateIncr > 0)\n            theta = Math.round(theta / this.toolRotateIncr) * this.toolRotateIncr;\n        return [x0, y0, theta, magnitude];\n    }\n    determineMoveDelta() {\n        let x1 = this.clickX, y1 = this.clickY, x2 = this.mouseX, y2 = this.mouseY;\n        if (this.opAtom > 0) {\n            x1 = this.angToX(this.mol.atomX(this.opAtom));\n            y1 = this.angToY(this.mol.atomY(this.opAtom));\n            let snap = this.snapToGuide(x2, y2);\n            if (snap != null) {\n                x2 = snap[0];\n                y2 = snap[1];\n            }\n        }\n        return [x2 - x1, y2 - y1];\n    }\n    snapToGuide(x, y) {\n        if (this.opBond > 0) {\n            let obj = this.pickObject(x, y);\n            if (obj < 0) {\n                let [bfr, bto] = this.mol.bondFromTo(-obj);\n                let px = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n                let py = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n                return [px, py, false];\n            }\n            return null;\n        }\n        let bestDSQ = Number.POSITIVE_INFINITY, bestX = 0, bestY = 0, bestAtom = false;\n        const APPROACH = sqr(0.5 * this.pointScale);\n        if (this.dragGuides != null)\n            for (let i = 0; i < this.dragGuides.length; i++)\n                for (let j = 0; j < this.dragGuides[i].x.length; j++) {\n                    let px = this.dragGuides[i].destX[j], py = this.dragGuides[i].destY[j];\n                    let dsq = norm2_xy(px - x, py - y);\n                    if (dsq < APPROACH && dsq < bestDSQ)\n                        [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, false];\n                }\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let px = this.angToX(this.mol.atomX(n)), py = this.angToY(this.mol.atomY(n));\n            let dsq = norm2_xy(px - x, py - y);\n            if (dsq < APPROACH && dsq < bestDSQ)\n                [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, true];\n        }\n        if (isFinite(bestDSQ))\n            return [bestX, bestY, bestAtom];\n        return null;\n    }\n    pickObjectCanvas(x, y, opt = {}) {\n        let limitDist = 0.5 * this.pointScale;\n        let bestItem = 0, bestScore = Number.POSITIVE_INFINITY;\n        if (!opt.noAtoms)\n            for (let n = 0; n < this.layout.numPoints(); n++) {\n                let p = this.layout.getPoint(n);\n                if (p.anum == 0)\n                    continue;\n                let dx = Math.abs(x - p.oval.cx), dy = Math.abs(y - p.oval.cy);\n                let dsq = norm2_xy(dx, dy);\n                let limitDSQ = sqr(Math.max(limitDist, Math.max(p.oval.rw, p.oval.rh)));\n                if (dsq > limitDSQ)\n                    continue;\n                if (dsq < bestScore) {\n                    bestItem = p.anum;\n                    bestScore = dsq;\n                }\n            }\n        if (bestItem != 0)\n            return bestItem;\n        if (!opt.noBonds)\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let l = this.layout.getLine(n);\n                if (l.bnum == 0)\n                    continue;\n                let x1 = l.line.x1, y1 = l.line.y1;\n                let x2 = l.line.x2, y2 = l.line.y2;\n                if (x < Math.min(x1, x2) - limitDist || y < Math.min(y1, y2) - limitDist ||\n                    x > Math.max(x1, x2) + limitDist || y > Math.max(y1, y2) + limitDist)\n                    continue;\n                let dist = GeomUtil.pointLineSegDistance(x, y, x1, y1, x2, y2);\n                if (dist > limitDist)\n                    continue;\n                if (dist < bestScore) {\n                    bestItem = -l.bnum;\n                    bestScore = dist;\n                }\n            }\n        return bestItem;\n    }\n    pickObject(x, y, opt = {}) {\n        return this.pickObjectCanvas(x, y, opt) || 0;\n    }\n    sketchEffects(mol) {\n        let effects = new RenderEffects();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n) && n != this.hoverAtom)\n                effects.dottedRectOutline[n] = 0x808080;\n        effects.overlapAtoms = CoordUtil.overlappingAtomList(mol, 0.2);\n        effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n        effects.atomDecoCol = Vec.numberArray(Theme.foreground, mol.numAtoms);\n        effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n        effects.bondDecoText = Vec.stringArray('', mol.numBonds);\n        effects.bondDecoCol = Vec.numberArray(Theme.foreground, mol.numBonds);\n        effects.bondDecoSize = Vec.numberArray(0.3, mol.numBonds);\n        if (this.viewOpt.showOxState) {\n            for (let n = 1; n <= mol.numAtoms; n++) {\n                let ox = MolUtil.atomOxidationState(mol, n);\n                if (ox != null) {\n                    effects.atomDecoText[n - 1] = MolUtil.oxidationStateText(ox);\n                    effects.atomDecoCol[n - 1] = 0xFF8080;\n                }\n            }\n        }\n        if (this.viewOpt.decoration == DrawCanvasDecoration.Stereochemistry) {\n            if (!this.stereo)\n                this.stereo = Stereochemistry.create(MetaMolecule.createStrict(mol));\n            skip: for (let n = 1; n <= mol.numAtoms; n++) {\n                let chi = this.stereo.atomTetraChirality(n);\n                if (chi == Stereochemistry.STEREO_NONE)\n                    continue;\n                for (let adjb of mol.atomAdjBonds(n))\n                    if (mol.bondOrder(adjb) != 1)\n                        continue skip;\n                if (chi == Stereochemistry.STEREO_UNKNOWN) {\n                    for (let adj of mol.atomAdjList(n))\n                        if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(adj)] >= 3)\n                            continue skip;\n                }\n                effects.atomDecoText[n - 1] = chi == Stereochemistry.STEREO_POS ? 'R' :\n                    chi == Stereochemistry.STEREO_NEG ? 'S' :\n                        chi == Stereochemistry.STEREO_UNKNOWN ? 'R/S' : '?';\n                effects.atomDecoCol[n - 1] = 0x00A000;\n            }\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let side = this.stereo.bondSideStereo(n);\n                if (side == Stereochemistry.STEREO_NONE)\n                    continue;\n                effects.bondDecoText[n - 1] = side == Stereochemistry.STEREO_POS ? 'Z' :\n                    side == Stereochemistry.STEREO_NEG ? 'E' :\n                        side == Stereochemistry.STEREO_UNKNOWN ? 'Z/E' : '?';\n                effects.bondDecoCol[n - 1] = 0x00A000;\n            }\n        }\n        else if (this.viewOpt.decoration == DrawCanvasDecoration.MappingNumber) {\n            effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n            effects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n            effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) > 0)\n                    effects.atomDecoText[n - 1] = mol.atomMapNum(n).toString();\n        }\n        else if (this.viewOpt.decoration == DrawCanvasDecoration.AtomIndex) {\n            effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n            effects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n            effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                effects.atomDecoText[n - 1] = n.toString();\n        }\n        return effects;\n    }\n    orientAbbreviation(abbrevAtom, abbrevMol) {\n        const { mol } = this;\n        if (MolUtil.isBlank(abbrevMol))\n            return;\n        if (this.mol.atomAdjCount(abbrevAtom) != 1)\n            return;\n        let nbr = mol.atomAdjList(abbrevAtom)[0];\n        let vx1 = mol.atomX(abbrevAtom) - mol.atomX(nbr), vy1 = mol.atomY(abbrevAtom) - mol.atomY(nbr);\n        let adj = abbrevMol.atomAdjList(1);\n        let vx2 = 0, vy2 = 0, inv = invZ(adj.length);\n        for (let a of adj) {\n            vx2 += abbrevMol.atomX(a) - abbrevMol.atomX(1);\n            vy2 += abbrevMol.atomY(a) - abbrevMol.atomY(1);\n        }\n        vx2 *= inv;\n        vy2 *= inv;\n        let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n        CoordUtil.rotateMolecule(abbrevMol, th1 - th2);\n        if (adj.length == 1) {\n            CoordUtil.translateMolecule(abbrevMol, mol.atomX(abbrevAtom) - abbrevMol.atomX(adj[0]), mol.atomY(abbrevAtom) - abbrevMol.atomY(adj[0]));\n            abbrevMol.setAtomPos(1, mol.atomX(nbr), mol.atomY(nbr));\n        }\n        else {\n            CoordUtil.translateMolecule(abbrevMol, mol.atomX(nbr) - abbrevMol.atomX(1), mol.atomY(nbr) - abbrevMol.atomY(1));\n        }\n        for (let b of abbrevMol.atomAdjBonds(1)) {\n            let a = abbrevMol.bondOther(b, 1);\n            if (abbrevMol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN)\n                continue;\n            abbrevMol.setAtomHExplicit(a, Math.max(0, abbrevMol.atomHydrogens(a)));\n        }\n        abbrevMol.deleteAtomAndBonds(1);\n    }\n}\n//# sourceMappingURL=DrawCanvas.js.map","import { MetaVector } from '../gfx/MetaVector';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { GeomUtil } from '../util/Geom';\nimport { Theme } from '../util/Theme';\nimport { angleDiff, DEGRAD, eventCoords, norm_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport var GeomWidgetType;\n(function (GeomWidgetType) {\n    GeomWidgetType[GeomWidgetType[\"Atom\"] = 0] = \"Atom\";\n    GeomWidgetType[GeomWidgetType[\"Bond\"] = 1] = \"Bond\";\n})(GeomWidgetType || (GeomWidgetType = {}));\nexport var GeomWidgetSelType;\n(function (GeomWidgetSelType) {\n    GeomWidgetSelType[GeomWidgetSelType[\"Position\"] = 0] = \"Position\";\n    GeomWidgetSelType[GeomWidgetSelType[\"Link\"] = 1] = \"Link\";\n    GeomWidgetSelType[GeomWidgetSelType[\"Torsion\"] = 2] = \"Torsion\";\n})(GeomWidgetSelType || (GeomWidgetSelType = {}));\nexport class GeomWidget extends Widget {\n    constructor(type, mol, idx) {\n        super();\n        this.type = type;\n        this.mol = mol;\n        this.idx = idx;\n        this.posX = [];\n        this.posY = [];\n        this.linkA = [];\n        this.linkB = [];\n        this.torsA = [];\n        this.torsB = [];\n        this.hovered = null;\n        if (type == GeomWidgetType.Atom) {\n            const atom = idx;\n            let adj = mol.atomAdjList(atom);\n            this.atomSubset = [atom, ...adj];\n            for (let b of mol.atomAdjBonds(atom)) {\n                this.linkA.push(0);\n                this.linkB.push(this.atomSubset.indexOf(mol.bondOther(b, atom)));\n            }\n            let theta = [];\n            for (let a of adj)\n                theta.push(Math.atan2(-(mol.atomY(a) - mol.atomY(atom)), mol.atomX(a) - mol.atomX(atom)));\n            let order = Vec.idxSort(theta);\n            for (let n = 0; n < order.length; n++) {\n                this.torsA.push(order[n] + 1);\n                this.torsB.push(order[n < order.length - 1 ? n + 1 : 0] + 1);\n            }\n            this.selected = { type: GeomWidgetSelType.Position, idx: 0 };\n        }\n        else {\n            const bond = idx;\n            let a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n            this.atomSubset = [...mol.atomAdjList(a1), ...mol.atomAdjList(a2)];\n            let link = (a1, a2) => {\n                this.linkA.push(this.atomSubset.indexOf(a1));\n                this.linkB.push(this.atomSubset.indexOf(a2));\n            };\n            link(a1, a2);\n            for (let a of mol.atomAdjList(a1))\n                if (a != a2)\n                    link(a1, a);\n            for (let a of mol.atomAdjList(a2))\n                if (a != a1)\n                    link(a2, a);\n            this.selected = { type: GeomWidgetSelType.Link, idx: 0 };\n        }\n    }\n    render(parent) {\n        super.render(parent);\n        let divOuter = dom('<div/>').appendTo(this.contentDOM).css({ 'text-align': 'center' });\n        this.divDiagram = dom('<div/>').appendTo(divOuter).css({ 'display': 'inline-block' });\n        this.contentDOM.onClick((event) => this.mouseClick(eventCoords(event, this.divDiagram)));\n        this.contentDOM.onMouseMove((event) => this.mouseMove(eventCoords(event, this.divDiagram)));\n        this.redraw();\n    }\n    selectionAtoms(sel) {\n        const atoms = this.atomSubset;\n        if (sel.type == GeomWidgetSelType.Position)\n            return [atoms[sel.idx]];\n        if (sel.type == GeomWidgetSelType.Link)\n            return [atoms[this.linkA[sel.idx]], atoms[this.linkB[sel.idx]]];\n        if (sel.type == GeomWidgetSelType.Torsion)\n            return [atoms[0], atoms[this.torsA[sel.idx]], atoms[this.torsB[sel.idx]]];\n        return null;\n    }\n    redraw() {\n        this.divDiagram.empty();\n        let w = 250, h = 250;\n        this.posX = [];\n        this.posY = [];\n        const ANG_RAD = 0.25;\n        for (let a of this.atomSubset) {\n            this.posX.push(this.mol.atomX(a));\n            this.posY.push(this.mol.atomY(a));\n        }\n        let loX = Vec.min(this.posX) - ANG_RAD, hiX = Vec.max(this.posX) + ANG_RAD;\n        let loY = Vec.min(this.posY) - ANG_RAD, hiY = Vec.max(this.posY) + ANG_RAD;\n        this.scale = Math.min(40, Math.min((w - 4) / (hiX - loX), (h - 4) / (hiY - loY)));\n        let dx = 0.5 * (w - (hiX - loX) * this.scale), dy = 0.5 * (h - (hiY - loY) * this.scale);\n        for (let n = 0; n < this.atomSubset.length; n++) {\n            this.posX[n] = dx + (this.posX[n] - loX) * this.scale;\n            this.posY[n] = h - (dy + (this.posY[n] - loY) * this.scale);\n        }\n        this.posRad = ANG_RAD * this.scale;\n        let gfx = new MetaVector();\n        gfx.setSize(w, h);\n        let fg = Theme.foreground, bg = Theme.background, outerSel = 0x008FD1, innerSel = 0x47D5D2;\n        for (let n = 0; n < this.atomSubset.length; n++) {\n            if (this.hovered && this.hovered.type == GeomWidgetSelType.Position && this.hovered.idx == n)\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, fg, 1, bg);\n            else if (this.selected && this.selected.type == GeomWidgetSelType.Position && this.selected.idx == n)\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, outerSel, 1, innerSel);\n            else\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, MetaVector.NOCOLOUR, 0, fg);\n        }\n        for (let showsel of [1, 2, 3])\n            for (let n = 0; n < this.linkA.length; n++) {\n                let x1 = this.posX[this.linkA[n]], y1 = this.posY[this.linkA[n]];\n                let x2 = this.posX[this.linkB[n]], y2 = this.posY[this.linkB[n]];\n                if (this.hovered && this.hovered.type == GeomWidgetSelType.Link && this.hovered.idx == n) {\n                    if (showsel == 3) {\n                        gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1 + 2);\n                        gfx.drawLine(x1, y1, x2, y2, bg, this.scale * 0.1);\n                    }\n                }\n                else if (this.selected && this.selected.type == GeomWidgetSelType.Link && this.selected.idx == n) {\n                    if (showsel == 2) {\n                        gfx.drawLine(x1, y1, x2, y2, outerSel, this.scale * 0.1 + 2);\n                        gfx.drawLine(x1, y1, x2, y2, innerSel, this.scale * 0.1);\n                    }\n                }\n                else {\n                    if (showsel == 1)\n                        gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1);\n                }\n            }\n        for (let n = 0; n < this.torsA.length; n++) {\n            let cx = this.posX[0], cy = this.posY[0];\n            let dx1 = 0.5 * (this.posX[this.torsA[n]] - cx), dy1 = 0.5 * (this.posY[this.torsA[n]] - cy);\n            let dx2 = 0.5 * (this.posX[this.torsB[n]] - cx), dy2 = 0.5 * (this.posY[this.torsB[n]] - cy);\n            let rad = 0.5 * (norm_xy(dx1, dy1) + norm_xy(dx2, dy2));\n            let theta1 = Math.atan2(dy1, dx1) + 10 * DEGRAD, theta2 = Math.atan2(dy2, dx2) - 10 * DEGRAD, dtheta = angleDiff(theta2, theta1);\n            let ox1 = rad * Math.cos(theta1), oy1 = rad * Math.sin(theta1), ox2 = rad * Math.cos(theta2), oy2 = rad * Math.sin(theta2);\n            let px, py, pf;\n            if (dtheta > 0) {\n                let [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, ox2, oy2);\n                px = Vec.add([ox1, ax1, ax2, ox2], cx);\n                py = Vec.add([oy1, ay1, ay2, oy2], cy);\n                pf = [false, true, true, false];\n            }\n            else {\n                let thetaM = theta1 + 0.5 * (dtheta + TWOPI);\n                let oxM = rad * Math.cos(thetaM), oyM = rad * Math.sin(thetaM);\n                let [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, oxM, oyM);\n                let [ax3, ay3, ax4, ay4] = GeomUtil.arcControlPoints(rad, oxM, oyM, ox2, oy2);\n                px = Vec.add([ox1, ax1, ax2, oxM, ax3, ax4, ox2], cx);\n                py = Vec.add([oy1, ay1, ay2, oyM, ay3, ay4, oy2], cy);\n                pf = [false, true, true, false, true, true, false];\n            }\n            if (this.hovered && this.hovered.type == GeomWidgetSelType.Torsion && this.hovered.idx == n) {\n                gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n                gfx.drawPath(px, py, pf, false, bg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n            }\n            else if (this.selected && this.selected.type == GeomWidgetSelType.Torsion && this.selected.idx == n) {\n                gfx.drawPath(px, py, pf, false, outerSel, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n                gfx.drawPath(px, py, pf, false, innerSel, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n            }\n            else\n                gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n        }\n        this.divDiagram.empty();\n        let svg = dom(gfx.createSVG()).appendTo(this.divDiagram).css({ 'pointer-events': 'none' });\n    }\n    mouseClick(xy) {\n        event.stopPropagation();\n        if (this.type == GeomWidgetType.Bond)\n            return;\n        let which = this.whichSelection(xy[0], xy[1]);\n        if (!which)\n            return;\n        if (!this.sameSelection(this.selected, which)) {\n            this.selected = which;\n            this.hovered = null;\n            this.redraw();\n            this.callbackSelect(which);\n        }\n    }\n    mouseMove(xy) {\n        if (this.type == GeomWidgetType.Bond)\n            return;\n        let which = this.whichSelection(xy[0], xy[1]);\n        if (which && this.sameSelection(which, this.selected))\n            which = null;\n        if (!this.sameSelection(this.hovered, which)) {\n            this.hovered = which;\n            this.redraw();\n        }\n    }\n    whichSelection(x, y) {\n        let cx = this.posX[0], cy = this.posY[0];\n        if (norm_xy(x - cx, y - cy) <= this.posRad)\n            return { type: GeomWidgetSelType.Position, idx: 0 };\n        let maxRad = 0;\n        for (let n = 1; n < this.atomSubset.length; n++)\n            maxRad = Math.max(maxRad, norm_xy(this.posX[n] - cx, this.posY[n] - cy) + this.posRad);\n        if (norm_xy(x - cx, y - cy) > maxRad)\n            return null;\n        let theta = Math.atan2(y - cy, x - cx);\n        let closeSel = null, closeDelta = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < this.linkB.length; n++) {\n            let delta = Math.abs(angleDiff(Math.atan2(this.posY[this.linkB[n]] - cy, this.posX[this.linkB[n]] - cx), theta));\n            if (delta < 10 * DEGRAD && delta < closeDelta) {\n                closeSel = { type: GeomWidgetSelType.Link, idx: n };\n                closeDelta = delta;\n            }\n        }\n        for (let n = 0; n < this.torsA.length; n++) {\n            let theta1 = Math.atan2(this.posY[this.torsA[n]] - cy, this.posX[this.torsA[n]] - cx);\n            let theta2 = Math.atan2(this.posY[this.torsB[n]] - cy, this.posX[this.torsB[n]] - cx);\n            let midtheta = theta1 + 0.5 * (angleDiff(theta2, theta1));\n            let delta = Math.abs(angleDiff(midtheta, theta));\n            if (delta < closeDelta) {\n                closeSel = { type: GeomWidgetSelType.Torsion, idx: n };\n                closeDelta = delta;\n            }\n        }\n        return closeSel;\n    }\n    sameSelection(sel1, sel2) {\n        if (sel1 == null && sel2 == null)\n            return true;\n        if (sel1 == null || sel2 == null)\n            return false;\n        return sel1.type == sel2.type && sel1.idx == sel2.idx;\n    }\n}\n//# sourceMappingURL=GeomWidget.js.map","import { clearTooltip } from '../ui/Tooltip';\nimport { dom, domLegacy } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst CSS_DIALOG = `\n    *.wmk-dialog\n    {\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 16px;\n\t\tcolor: black;\n\t\tuser-select: none;\n    }\n\t*.wmk-noscroll\n\t{\n\t\toverflow: hidden;\n\t}\n`;\nexport class Dialog {\n    constructor(parent = null) {\n        this.minPortionWidth = 80;\n        this.maxPortionWidth = 80;\n        this.maximumWidth = 0;\n        this.maximumHeight = 0;\n        this.minPortionHeight = 20;\n        this.maxPortionHeight = 0;\n        this.topMargin = 50;\n        this.title = 'Dialog';\n        this.allowScroller = true;\n        this.zindex = null;\n        this.callbackClose = null;\n        this.callbackShown = null;\n        this.parent = domLegacy(parent);\n        installInlineCSS('dialog', CSS_DIALOG);\n    }\n    onClose(callback) {\n        this.callbackClose = callback;\n    }\n    onShown(callback) {\n        this.callbackShown = callback;\n    }\n    open() {\n        clearTooltip();\n        let body = this.parent || dom(document.body);\n        body.addClass('wmk-noscroll');\n        let bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n        bg.css({ 'position': 'fixed' });\n        bg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        bg.css({ 'background-color': 'black', 'opacity': 0.8 });\n        bg.onClick(() => this.close());\n        let fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n        fg.css({ 'position': 'fixed' });\n        fg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        if (this.zindex > 0) {\n            bg.setCSS('z-index', this.zindex);\n            fg.setCSS('z-index', this.zindex + 1);\n        }\n        let pb = this.domPanelBoundary = dom('<div class=\"wmk-dialog\"/>').appendTo(fg);\n        pb.css({ 'min-width': this.minPortionWidth + '%' });\n        if (this.maximumWidth > 0)\n            pb.css({ 'max-width': this.maximumWidth + 'px' });\n        else if (this.maxPortionWidth != null)\n            pb.css({ 'max-width': this.maxPortionWidth + '%' });\n        if (this.maximumHeight > 0)\n            pb.css({ 'max-height': this.maximumHeight + 'px' });\n        else if (this.maxPortionHeight > 0)\n            pb.css({ 'max-height': this.maxPortionHeight + 'vh' });\n        pb.css({ 'background-color': 'white', 'border-radius': '6px', 'border': '1px solid black' });\n        pb.css({ 'position': 'absolute' });\n        pb.css({ 'left': (50 - 0.5 * this.minPortionWidth) + '%' });\n        pb.css({ 'top': this.topMargin + 'px' });\n        pb.css({ 'min-height': this.minPortionHeight + '%' });\n        let divOuter = dom('<div/>').appendTo(pb).css({ 'display': 'flex' });\n        divOuter.css({ 'flex-direction': 'column', 'align-items': 'stretch' });\n        if (this.maximumHeight > 0)\n            divOuter.css({ 'max-height': this.maximumHeight + 'px' });\n        else if (this.maxPortionHeight > 0)\n            divOuter.css({ 'max-height': this.maxPortionHeight + 'vh' });\n        let tdiv = this.domTitle = dom('<div/>').appendTo(divOuter);\n        tdiv.css({ 'flex-shrink': '0', 'flex-grow': '0' });\n        tdiv.css({ 'margin': '0', 'padding': '0' });\n        tdiv.css({ 'background-color': '#F0F0F0' });\n        tdiv.css({ 'background-image': 'linear-gradient(to right bottom, #FFFFFF, #E0E0E0)' });\n        tdiv.css({ 'border-bottom': '1px solid #C0C0C0' });\n        tdiv.css({ 'border-radius': '6px 6px 0 0' });\n        let bdiv = dom('<div/>').appendTo(divOuter).css({ 'width': '100%' });\n        bdiv.css({ 'flex-shrink': '1', 'flex-grow': '0' });\n        if (this.allowScroller)\n            bdiv.css({ 'overflow-y': 'auto' });\n        this.domBody = dom('<div/>').appendTo(bdiv).css({ 'padding': '0.5em' });\n        let ttlTable = dom('<table/>').appendTo(tdiv), tr = dom('<tr/>').appendTo(ttlTable);\n        ttlTable.attr({ 'width': '100%' });\n        let tdTitle = dom('<td valign=\"center\"/>').appendTo(tr).css({ 'padding': '0.5em' });\n        let ttl = dom('<font/>').appendTo(tdTitle).css({ 'font-size': '1.5em', 'font-weight': '600' });\n        ttl.setText(this.title);\n        let tdButtons = this.domTitleButtons = dom('<td align=\"right\" valign=\"center\"/>').appendTo(tr).css({ 'padding': '0.5em' });\n        this.domClose = dom('<button class=\"wmk-button wmk-button-default\">Close</button>').appendTo(tdButtons);\n        this.domClose.onClick(() => this.close());\n        this.populate();\n        this.repositionSize();\n        if (this.callbackShown)\n            this.callbackShown(this);\n    }\n    close() {\n        clearTooltip();\n        this.domObscureBackground.remove();\n        this.domObscureForeground.remove();\n        let body = this.parent || dom(document.body);\n        body.removeClass('wmk-noscroll');\n        if (this.callbackClose)\n            this.callbackClose(this);\n    }\n    bump() {\n        this.repositionSize();\n    }\n    bodyDOM() { return this.domBody; }\n    buttonsDOM() { return this.domTitleButtons; }\n    populate() {\n        this.bodyDOM().setText('Empty dialog box.');\n    }\n    repositionSize() {\n        let docW = window.innerWidth, dlgW = this.domPanelBoundary.width();\n        this.domPanelBoundary.css({ 'left': (0.5 * (docW - dlgW)) + 'px' });\n    }\n}\n//# sourceMappingURL=Dialog.js.map","import { FontData } from './FontData';\nexport class OutlineMeasurement {\n    constructor(offsetX, offsetY, pointScale) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.pointScale = pointScale;\n        this.invScale = 1 / pointScale;\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) { return ax * this.pointScale + this.offsetX; }\n    angToY(ay) { return ay * -this.pointScale + this.offsetY; }\n    xToAng(px) { return (px - this.offsetX) * this.invScale; }\n    yToAng(py) { return (py - this.offsetY) * -this.invScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n}\n//# sourceMappingURL=ArrangeMeasurement.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Vec } from '../util/Vec';\nexport class ClipboardProxyHandler {\n    copyEvent(andCut, proxy) { return false; }\n    pasteEvent(proxy) { return false; }\n}\nexport class ClipboardProxy {\n    constructor() {\n        this.handlers = [new ClipboardProxyHandler()];\n    }\n    pushHandler(handler) {\n        this.handlers.push(handler);\n    }\n    popHandler() {\n        this.handlers.pop();\n    }\n    currentHandler() {\n        return Vec.last(this.handlers);\n    }\n    triggerCopy(andCut) {\n        if (this.currentHandler().copyEvent(andCut, this))\n            return;\n        document.execCommand(andCut ? 'cut' : 'copy');\n    }\n    triggerPaste() {\n        if (this.currentHandler().pasteEvent(this))\n            return;\n        document.execCommand('paste');\n    }\n    getString() { return null; }\n    setString(str) { }\n    setImage(blob) { }\n    canSetHTML() { return false; }\n    setHTML(html) { }\n    canAlwaysGet() { return false; }\n    downloadString(str, fn) { }\n}\nexport class ClipboardProxyWeb extends ClipboardProxy {\n    constructor() {\n        super();\n        this.lastContent = null;\n        this.fakeTextArea = null;\n        this.busy = false;\n        document.addEventListener('copy', (event) => {\n            var _a;\n            if (this.busy)\n                return null;\n            if ((_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.copyEvent(false, this)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n        document.addEventListener('cut', (event) => {\n            var _a;\n            if (this.busy)\n                return null;\n            if ((_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.copyEvent(true, this)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n        document.addEventListener('paste', (event) => {\n            var _a;\n            let wnd = window;\n            this.lastContent = null;\n            if (wnd.clipboardData && wnd.clipboardData.getData)\n                this.lastContent = wnd.clipboardData.getData('Text');\n            else if (event.clipboardData && event.clipboardData.getData)\n                this.lastContent = event.clipboardData.getData('text/plain');\n            let consumed = (_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.pasteEvent(this);\n            this.lastContent = null;\n            if (consumed) {\n                event.preventDefault();\n                return false;\n            }\n            return true;\n        });\n    }\n    getString() {\n        return this.lastContent;\n    }\n    setString(str) {\n        let fallbackWorkaround = () => {\n            if (this.fakeTextArea == null) {\n                this.fakeTextArea = document.createElement('textarea');\n                this.fakeTextArea.style.fontSize = '12pt';\n                this.fakeTextArea.style.border = '0';\n                this.fakeTextArea.style.padding = '0';\n                this.fakeTextArea.style.margin = '0';\n                this.fakeTextArea.style.position = 'fixed';\n                this.fakeTextArea.style['left'] = '-9999px';\n                this.fakeTextArea.style.top = (window.pageYOffset || document.documentElement.scrollTop) + 'px';\n                this.fakeTextArea.setAttribute('readonly', '');\n                document.body.appendChild(this.fakeTextArea);\n            }\n            this.fakeTextArea.value = str;\n            this.fakeTextArea.select();\n            this.busy = true;\n            document.execCommand('copy');\n            this.busy = false;\n        };\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(str).then(() => { }, fallbackWorkaround);\n        }\n        else\n            fallbackWorkaround();\n    }\n    setImage(blob) {\n        let item = new ClipboardItem({ 'image/png': blob });\n        this.busy = true;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            yield navigator.clipboard.write([item]);\n            this.busy = false;\n        }))();\n    }\n}\n//# sourceMappingURL=ClipboardProxy.js.map","import { dom } from '../util/dom';\nimport { hasInlineCSS, installInlineCSS, Theme } from '../util/Theme';\nimport { colourCode } from '../util/util';\nimport { Widget } from './Widget';\nexport class OptionList extends Widget {\n    constructor(options, isVertical = false) {\n        super();\n        this.options = options;\n        this.isVertical = isVertical;\n        this.padding = 6;\n        this.htmlLabels = false;\n        this.numCols = 0;\n        this.selidx = 0;\n        this.buttonDiv = [];\n        this.auxCell = [];\n        this.callbackSelect = null;\n        if (options.length == 0)\n            throw 'molsync.ui.OptionList: must provide a list of option labels.';\n        if (!hasInlineCSS('option'))\n            installInlineCSS('option', this.composeCSS());\n    }\n    getSelectedIndex() {\n        return this.selidx;\n    }\n    getSelectedValue() {\n        return this.options[this.selidx];\n    }\n    getAuxiliaryCell(idx) {\n        return this.auxCell[idx].el;\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    render(parent) {\n        super.render(parent);\n        this.contentDOM.css({ 'display': 'block', 'baseline-shift': '1.5em' });\n        this.buttonDiv = [];\n        this.auxCell = [];\n        let table = dom('<table class=\"wmk-option-table\"/>').appendTo(this.contentDOM);\n        let tr = this.isVertical ? null : dom('<tr/>').appendTo(table);\n        for (let n = 0; n < this.options.length; n++) {\n            if (this.isVertical || (this.numCols > 0 && n > 0 && n % this.numCols == 0))\n                tr = dom('<tr/>').appendTo(table);\n            let td = dom('<td class=\"wmk-option-cell\"/>').appendTo(tr);\n            let div = dom('<div class=\"wmk-option\"/>').appendTo(td);\n            div.css({ 'padding': `${this.padding}px` });\n            div.onClick(() => this.clickButton(n));\n            this.buttonDiv.push(div);\n            if (this.isVertical) {\n                td = dom('<td style=\"vertical-align: middle;\"/>').appendTo(tr);\n                this.auxCell.push(td);\n            }\n        }\n        this.updateButtons();\n    }\n    clickButton(idx) {\n        if (idx == this.selidx)\n            return;\n        this.setSelectedIndex(idx);\n        if (this.callbackSelect)\n            this.callbackSelect(idx, this);\n    }\n    setSelectedIndex(idx) {\n        if (this.selidx == idx)\n            return;\n        this.selidx = idx;\n        this.updateButtons();\n    }\n    setSelectedValue(val) {\n        let idx = this.options.indexOf(val);\n        if (idx >= 0)\n            this.setSelectedIndex(idx);\n    }\n    updateButtons() {\n        for (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++) {\n            let div = this.buttonDiv[n];\n            let txt = this.options[n];\n            if (txt.length == 0 && n == this.selidx)\n                div.setText('\\u00A0\\u2716\\u00A0');\n            else if (txt.length == 0)\n                div.setText('\\u00A0\\u00A0\\u00A0');\n            else if (this.htmlLabels)\n                div.setHTML(txt);\n            else\n                div.setText(txt);\n            div.removeClass('wmk-option-unselected wmk-option-selected');\n            if (n != this.selidx)\n                div.addClass('wmk-option-unselected');\n            else\n                div.addClass('wmk-option-selected');\n        }\n    }\n    composeCSS() {\n        let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n        let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n        return `\n\t\t\t.wmk-option\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tline-height: 1.2em;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-option-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-option-cell\n\t\t\t{\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n    }\n}\n//# sourceMappingURL=OptionList.js.map","import { dom } from '../util/dom';\nimport { hasInlineCSS, installInlineCSS, Theme } from '../util/Theme';\nimport { colourCode } from '../util/util';\nimport { Widget } from './Widget';\nexport class TabBar extends Widget {\n    constructor(options) {\n        super();\n        this.options = options;\n        this.unionHeight = false;\n        this.selidx = 0;\n        this.buttonDiv = [];\n        this.panelDiv = [];\n        this.padding = 6;\n        this.callbackSelect = null;\n        if (!hasInlineCSS('tabbar'))\n            installInlineCSS('tabbar', this.composeCSS());\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    getSelectedIndex() {\n        return this.selidx;\n    }\n    getSelectedValue() {\n        return this.options[this.selidx];\n    }\n    getPanelDOM(idxOrName) {\n        let idx = typeof idxOrName == 'number' ? idxOrName : this.options.indexOf(idxOrName);\n        if (idx < 0)\n            return null;\n        return this.panelDiv[idx];\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'grid' });\n        grid.css({ 'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em' });\n        let columns = '[start] 1fr ';\n        for (let n = 0; n < this.options.length; n++)\n            columns += '[btn' + n + '] auto ';\n        columns += '[btnX] 1fr [end]';\n        grid.css({ 'grid-template-columns': columns });\n        let underline = dom('<div/>').appendTo(grid);\n        underline.css({ 'grid-column': 'start / end', 'grid-row': '1', 'height': '100%' });\n        underline.css({ 'border-bottom': '1px solid #C0C0C0' });\n        for (let n = 0; n < this.options.length; n++) {\n            let outline = dom('<div class=\"wmk-tabbar-cell\"/>').appendTo(grid);\n            outline.css({ 'grid-column': 'btn' + n, 'grid-row': '1' });\n            let btn = dom('<div class=\"wmk-tabbar\"/>').appendTo(outline);\n            btn.css({ 'padding': `${this.padding}px` });\n            btn.onClick(() => this.clickButton(n));\n            this.buttonDiv.push(btn);\n            let panel = dom('<div/>').appendTo(grid);\n            panel.css({ 'grid-column': 'start / end', 'grid-row': '2' });\n            panel.css({ 'align-self': 'start', 'justify-self': 'center', 'width': '100%' });\n            this.panelDiv.push(panel);\n        }\n        this.updateButtons();\n    }\n    clickButton(idx) {\n        if (idx == this.selidx)\n            return;\n        this.setSelectedIndex(idx);\n        if (this.callbackSelect)\n            this.callbackSelect(idx, this);\n    }\n    setSelectedIndex(idx) {\n        if (this.selidx == idx)\n            return;\n        this.selidx = idx;\n        let dom = this.contentDOM;\n        dom.setCSS('min-width', `${dom.width()}px`);\n        this.updateButtons();\n    }\n    setSelectedValue(val) {\n        let idx = this.options.indexOf(val);\n        if (idx >= 0)\n            this.setSelectedIndex(idx);\n    }\n    rotateSelected(dir) {\n        this.setSelectedIndex((this.selidx + dir + this.options.length) % this.options.length);\n    }\n    updateButtons() {\n        for (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++) {\n            let div = this.buttonDiv[n];\n            let txt = this.options[n];\n            if (txt.length == 0 && n == this.selidx)\n                div.setText('\\u00A0\\u2716\\u00A0');\n            else if (txt.length == 0)\n                div.setText('\\u00A0\\u00A0\\u00A0');\n            else\n                div.setText(txt);\n            div.removeClass('wmk-tabbar-unselected wmk-tabbar-selected');\n            if (n != this.selidx)\n                div.addClass('wmk-tabbar-unselected');\n            else\n                div.addClass('wmk-tabbar-selected');\n            if (this.unionHeight)\n                this.panelDiv[n].setCSS('visibility', n == this.selidx ? 'visible' : 'hidden');\n            else\n                this.panelDiv[n].setCSS('display', n == this.selidx ? 'block' : 'none');\n        }\n    }\n    composeCSS() {\n        let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n        let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n        return `\n\t\t\t.wmk-tabbar\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-tabbar-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-tabbar-cell\n\t\t\t{\n\t\t\t\tmargin: 0 -1px -1px 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n    }\n}\n//# sourceMappingURL=TabBar.js.map","import { Molecule } from '../data/Molecule';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nexport class ExtraFieldsWidget extends Widget {\n    constructor(fields) {\n        super();\n        this.fields = fields;\n    }\n    render(parent) {\n        super.render(parent);\n        this.divFields = dom('<div/>').appendTo(this.contentDOM);\n        this.fillTable();\n        let divButtons = dom('<div/>').appendTo(this.contentDOM).css({ 'text-align': 'center' });\n        let btnExtra = dom('<button class=\"wmk-button wmk-button-default\">Extra</button>').appendTo(divButtons);\n        btnExtra.onClick(() => {\n            this.fields.push(Molecule.PREFIX_EXTRA);\n            this.fillTable();\n        });\n        let btnTransient = dom('<button class=\"wmk-button wmk-button-default\">Transient</button>').appendTo(divButtons).css({ 'margin-left': '0.5em' });\n        btnTransient.onClick(() => {\n            this.fields.push(Molecule.PREFIX_TRANSIENT);\n            this.fillTable();\n        });\n    }\n    getExtraFields() {\n        let extra = [];\n        for (let field of this.fields)\n            if (!field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1)\n                extra.push(field);\n        return extra;\n    }\n    getTransientFields() {\n        let transient = [];\n        for (let field of this.fields)\n            if (field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1)\n                transient.push(field);\n        return transient;\n    }\n    fillTable() {\n        this.divFields.empty();\n        if (this.fields.length == 0)\n            return;\n        let table = dom('<table/>').appendTo(this.divFields).css({ 'width': '100%' });\n        let tr = dom('<tr/>').appendTo(table);\n        dom('<td/>').appendTo(tr).css({ 'text-align': 'right', 'font-weight': 'bold', 'text-decoration': 'underline' }).setText('Type');\n        dom('<td/>').appendTo(tr).css({ 'font-weight': 'bold', 'text-decoration': 'underline' }).setText('Value');\n        for (let n = 0; n < this.fields.length; n++) {\n            let strType = '?', strValue = '';\n            if (this.fields[n].length > 0) {\n                strType = this.fields[n].charAt(0);\n                strValue = this.fields[n].substring(1);\n            }\n            tr = dom('<tr/>').appendTo(table);\n            let tdType = dom('<td/>').appendTo(tr).css({ 'text-align': 'right' }), tdValue = dom('<td/>').appendTo(tr), tdButton = dom('<td/>').appendTo(tr);\n            dom('<span/>').appendTo(tdType).css({ 'padding': '0.2em', 'border': '1px solid black', 'background-color': '#C0C0C0' }).setText(strType);\n            let input = dom('<input size=\"20\"/>').appendTo(tdValue).css({ 'width': '100%', 'font': 'inherit' });\n            input.setValue(strValue);\n            input.onInput(() => { this.fields[n] = strType + input.getValue(); });\n            let btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">\\u{2716}</button>').appendTo(tdButton).css({ 'margin-left': '0.5em' });\n            btnDelete.onClick(() => {\n                this.fields.splice(n, 1);\n                this.fillTable();\n            });\n        }\n    }\n}\n//# sourceMappingURL=ExtraFieldsWidget.js.map","import { Chemistry } from '../data/Chemistry';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst POSITION_TABLE_Y = [\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nconst POSITION_TABLE_X = [\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nconst CSS_PERIODICTABLE = `\n\t*.wmk-periodictable-element\n\t{\n\t\tborder: 1px solid black;\n\t\tborder-radius: 2px;\n\t\tmargin: 0;\n\t\tmin-width: 2em;\n\t\tpadding: 0.4em 0 0.3em 0;\n\t\ttext-align: center;\n\t\tcolor: #FFFFFF;\n\t\tcursor: pointer;\n\t}\n\t*.wmk-periodictable-block1\n\t{\n\t\tbackground-color: #313062;\n\t}\n\t*.wmk-periodictable-block1:hover\n\t{\n\t\tbackground-color: #414072;\n\t}\n\t*.wmk-periodictable-block2\n\t{\n\t\tbackground-color: #205224;\n\t}\n\t*.wmk-periodictable-block2:hover\n\t{\n\t\tbackground-color: #306234;\n\t}\n\t*.wmk-periodictable-block3\n\t{\n\t\tbackground-color: #522818;\n\t}\n\t*.wmk-periodictable-block3:hover\n\t{\n\t\tbackground-color: #623828;\n\t}\n\t*.wmk-periodictable-block4\n\t{\n\t\tbackground-color: #575212;\n\t}\n\t*.wmk-periodictable-block4:block\n\t{\n\t\tbackground-color: #676222;\n\t}\n\t*.wmk-periodictable-selected\n\t{\n\t\tbackground-color: #FFFFFF !important;\n\t\tcolor: #000000 !important;\n\t\tcursor: default;\n\t}\n`;\nexport class PeriodicTableWidget extends Widget {\n    constructor() {\n        super();\n        this.divList = [];\n        this.selectedAtno = [];\n        installInlineCSS('periodictable', CSS_PERIODICTABLE);\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'grid' });\n        grid.css({ 'align-items': 'center', 'justify-content': 'start', 'gap': '1px' });\n        let row = POSITION_TABLE_Y.map((y) => Math.round(2 * y) + 1);\n        let col = POSITION_TABLE_X.map((x) => Math.round(2 * x) + 1);\n        let num = row.length;\n        for (let n = 0; n < num; n++) {\n            let div = dom('<div/>').appendTo(grid);\n            div.css({ 'grid-row': `${row[n]} / span 2`, 'grid-column': `${col[n]} / span 2` });\n            div.addClass('wmk-periodictable-element');\n            let blk = Chemistry.ELEMENT_BLOCKS[n + 1];\n            if (blk == 1)\n                div.addClass('wmk-periodictable-block1');\n            else if (blk == 2)\n                div.addClass('wmk-periodictable-block2');\n            else if (blk == 3)\n                div.addClass('wmk-periodictable-block3');\n            else if (blk == 4)\n                div.addClass('wmk-periodictable-block4');\n            let el = Chemistry.ELEMENTS[n + 1];\n            div.setText(el);\n            this.divList.push(div);\n            div.onClick(() => {\n                this.changeElement(el);\n                this.callbackSelect(el);\n            });\n            div.onDblClick((event) => {\n                this.callbackDoubleClick();\n                event.preventDefault();\n                event.stopPropagation();\n            });\n        }\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    onDoubleClick(callback) {\n        this.callbackDoubleClick = callback;\n    }\n    changeElement(element) {\n        let atno = Chemistry.ELEMENTS.indexOf(element);\n        this.selectedAtno = [atno];\n        this.updateSelected();\n    }\n    setSelectedElements(elementList) {\n        this.selectedAtno = elementList.map((el) => Chemistry.ELEMENTS.indexOf(el)).filter((atno) => atno > 0);\n        this.updateSelected();\n    }\n    updateSelected() {\n        for (let n = 1; n <= this.divList.length; n++) {\n            if (this.selectedAtno.includes(n))\n                this.divList[n - 1].addClass('wmk-periodictable-selected');\n            else\n                this.divList[n - 1].removeClass('wmk-periodictable-selected');\n        }\n    }\n}\n//# sourceMappingURL=PeriodicTableWidget.js.map","import { QueryUtil } from '../data/QueryUtil';\nimport { OptionList } from '../ui/OptionList';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { Vec } from '../util/Vec';\nexport class QueryFieldsWidget extends Widget {\n    constructor(mol, atom, bond) {\n        super();\n        this.mol = mol;\n        this.atom = atom;\n        this.bond = bond;\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[title] auto [value] auto [end]' });\n        let row = 0;\n        let makeInput = () => {\n            let input = dom('<input size=\"20\"/>').appendTo(grid).css({ 'grid-area': `${row} / value` });\n            return input;\n        };\n        let makeToggleInput = () => {\n            let div = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value`, 'dispkay': 'flex' });\n            let lbl = dom('<label/>').appendTo(div).css({ 'margin-right': '0.5em' });\n            let chk = dom('<input type=\"checkbox\"/>').appendTo(lbl);\n            lbl.appendText('Not');\n            let input = dom('<input size=\"20\"/>').appendTo(div).css({ 'flex-grow': '1' });\n            return [chk, input];\n        };\n        if (this.atom > 0) {\n            dom('<div>Charges</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputCharges = makeInput();\n            dom('<div>Aromatic</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optAromatic = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optAromatic.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div>Unsaturated</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optUnsaturated = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optUnsaturated.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div>Elements</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotElements, this.inputElements] = makeToggleInput();\n            dom('<div>Ring Sizes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n            dom('<div>Ring Block</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optRingBlock.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div># Small Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div># Ring Bonds</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputRingBonds = makeInput();\n            dom('<div>Adjacency</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputAdjacency = makeInput();\n            dom('<div>Bond Sums</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputBondSums = makeInput();\n            dom('<div>Valences</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputValences = makeInput();\n            dom('<div>Hydrogens</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputHydrogens = makeInput();\n            dom('<div>Isotopes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputIsotopes = makeInput();\n            this.setupAtom();\n        }\n        else {\n            dom('<div>Ring Sizes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n            dom('<div>Ring Block</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optRingBlock.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div># Small Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div>Num Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div>Bond Orders</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputOrders = makeInput();\n            this.setupBond();\n        }\n    }\n    updateAtom() {\n        const { mol, atom } = this;\n        QueryUtil.deleteQueryAtomAll(mol, atom);\n        let chg = this.splitNumbers(this.inputCharges.getValue());\n        if (chg)\n            QueryUtil.setQueryAtomCharges(mol, atom, chg);\n        let arom = this.optAromatic.getSelectedIndex();\n        if (arom > 0)\n            QueryUtil.setQueryAtomAromatic(mol, atom, arom == 1);\n        let unsat = this.optUnsaturated.getSelectedIndex();\n        if (unsat > 0)\n            QueryUtil.setQueryAtomUnsaturated(mol, atom, unsat == 1);\n        let elem = this.splitStrings(this.inputElements.getValue());\n        if (elem) {\n            if (!this.chkNotElements.elInput.checked)\n                QueryUtil.setQueryAtomElements(mol, atom, elem);\n            else\n                QueryUtil.setQueryAtomElementsNot(mol, atom, elem);\n        }\n        let ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n        if (ringsz) {\n            if (!this.chkNotRingSizes.elInput.checked)\n                QueryUtil.setQueryAtomRingSizes(mol, atom, ringsz);\n            else\n                QueryUtil.setQueryAtomRingSizesNot(mol, atom, ringsz);\n        }\n        let ringblk = this.optRingBlock.getSelectedIndex();\n        if (ringblk > 0)\n            QueryUtil.setQueryAtomRingBlock(mol, atom, ringblk == 1);\n        let nring = this.splitNumbers(this.inputNumRings.getValue());\n        if (nring)\n            QueryUtil.setQueryAtomNumRings(mol, atom, nring);\n        let rbc = this.splitNumbers(this.inputRingBonds.getValue());\n        if (rbc)\n            QueryUtil.setQueryAtomRingBonds(mol, atom, rbc);\n        let adj = this.splitNumbers(this.inputAdjacency.getValue());\n        if (adj)\n            QueryUtil.setQueryAtomAdjacency(mol, atom, adj);\n        let bond = this.splitNumbers(this.inputBondSums.getValue());\n        if (bond)\n            QueryUtil.setQueryAtomBondSums(mol, atom, bond);\n        let val = this.splitNumbers(this.inputValences.getValue());\n        if (val)\n            QueryUtil.setQueryAtomValences(mol, atom, val);\n        let hyd = this.splitNumbers(this.inputHydrogens.getValue());\n        if (hyd)\n            QueryUtil.setQueryAtomHydrogens(mol, atom, hyd);\n        let iso = this.splitNumbers(this.inputIsotopes.getValue());\n        if (iso)\n            QueryUtil.setQueryAtomIsotope(mol, atom, iso);\n    }\n    updateBond() {\n        const { mol, bond } = this;\n        QueryUtil.deleteQueryBondAll(mol, bond);\n        let ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n        if (ringsz) {\n            if (!this.chkNotRingSizes.elInput.checked)\n                QueryUtil.setQueryBondRingSizes(mol, bond, ringsz);\n            else\n                QueryUtil.setQueryBondRingSizesNot(mol, bond, ringsz);\n        }\n        let ringblk = this.optRingBlock.getSelectedIndex();\n        if (ringblk > 0)\n            QueryUtil.setQueryBondRingBlock(mol, bond, ringblk == 1);\n        let nring = this.splitNumbers(this.inputNumRings.getValue());\n        if (nring)\n            QueryUtil.setQueryBondNumRings(mol, bond, nring);\n        let order = this.splitNumbers(this.inputOrders.getValue());\n        if (order)\n            QueryUtil.setQueryBondOrders(mol, bond, order);\n    }\n    setupAtom() {\n        const { mol, atom } = this;\n        let chg = QueryUtil.queryAtomCharges(mol, atom);\n        let arom = QueryUtil.queryAtomAromatic(mol, atom);\n        let unsat = QueryUtil.queryAtomUnsaturated(mol, atom);\n        let elem = QueryUtil.queryAtomElements(mol, atom);\n        let elemNot = QueryUtil.queryAtomElementsNot(mol, atom);\n        let ringsz = QueryUtil.queryAtomRingSizes(mol, atom);\n        let ringszNot = QueryUtil.queryAtomRingSizesNot(mol, atom);\n        let ringblk = QueryUtil.queryAtomRingBlock(mol, atom);\n        let nring = QueryUtil.queryAtomNumRings(mol, atom);\n        let rbc = QueryUtil.queryAtomRingBonds(mol, atom);\n        let adj = QueryUtil.queryAtomAdjacency(mol, atom);\n        let bond = QueryUtil.queryAtomBondSums(mol, atom);\n        let val = QueryUtil.queryAtomValences(mol, atom);\n        let hyd = QueryUtil.queryAtomHydrogens(mol, atom);\n        let iso = QueryUtil.queryAtomIsotope(mol, atom);\n        let frag = QueryUtil.queryAtomSubFrags(mol, atom);\n        let fragNot = QueryUtil.queryAtomSubFragsNot(mol, atom);\n        this.inputCharges.setValue(Vec.notBlank(chg) ? chg.join(',') : '');\n        this.optAromatic.setSelectedIndex(arom == null ? 0 : arom ? 1 : 2);\n        this.optUnsaturated.setSelectedIndex(unsat == null ? 0 : unsat ? 1 : 2);\n        this.chkNotElements.elInput.checked = Vec.isBlank(elem) && Vec.notBlank(elemNot);\n        this.inputElements.setValue(Vec.notBlank(elem) ? elem.join(',') : Vec.notBlank(elemNot) ? elemNot.join(',') : '');\n        this.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n        this.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n        this.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n        this.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n        this.inputRingBonds.setValue(Vec.notBlank(rbc) ? rbc.join(',') : '');\n        this.inputAdjacency.setValue(Vec.notBlank(adj) ? adj.join(',') : '');\n        this.inputBondSums.setValue(Vec.notBlank(bond) ? bond.join(',') : '');\n        this.inputValences.setValue(Vec.notBlank(val) ? val.join(',') : '');\n        this.inputHydrogens.setValue(Vec.notBlank(hyd) ? hyd.join(',') : '');\n        this.inputIsotopes.setValue(Vec.notBlank(iso) ? iso.join(',') : '');\n    }\n    setupBond() {\n        const { mol, bond } = this;\n        let ringsz = QueryUtil.queryBondRingSizes(mol, bond);\n        let ringszNot = QueryUtil.queryBondRingSizesNot(mol, bond);\n        let ringblk = QueryUtil.queryBondRingBlock(mol, bond);\n        let nring = QueryUtil.queryBondNumRings(mol, bond);\n        let order = QueryUtil.queryBondOrders(mol, bond);\n        this.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n        this.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n        this.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n        this.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n        this.inputOrders.setValue(Vec.notBlank(order) ? order.join(',') : '');\n    }\n    splitStrings(str) {\n        let list = [];\n        if (str)\n            for (let bit of str.split(/[\\s\\,\\;]+/))\n                if (bit)\n                    list.push(bit);\n        return list.length ? list : null;\n    }\n    splitNumbers(str) {\n        let list = [];\n        if (str)\n            for (let bit of str.split(/[\\s\\,\\;]+/)) {\n                if (bit.startsWith('+'))\n                    bit = bit.substring(1);\n                let num = parseInt(bit);\n                if (!isNaN(num))\n                    list.push(num);\n            }\n        return list.length ? list : null;\n    }\n}\n//# sourceMappingURL=QueryFieldsWidget.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { Molecule } from '../data/Molecule';\nimport { MolUtil } from '../data/MolUtil';\nimport { Dialog } from '../dialog/Dialog';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { TabBar } from '../ui/TabBar';\nimport { dom } from '../util/dom';\nimport { Theme } from '../util/Theme';\nimport { angleDiffPos, colourCode, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { ExtraFieldsWidget } from './ExtraFieldsWidget';\nimport { GeomWidget, GeomWidgetSelType, GeomWidgetType } from './GeomWidget';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { PeriodicTableWidget } from './PeriodicTableWidget';\nimport { QueryFieldsWidget } from './QueryFieldsWidget';\nexport class EditAtom extends Dialog {\n    constructor(mol, atom, proxyClip, callbackApply) {\n        super();\n        this.atom = atom;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.newX = 0;\n        this.newY = 0;\n        this.tabs = null;\n        this.abbrevList = null;\n        this.svgAbbrev = null;\n        this.abbrevIndices = [];\n        this.currentAbbrev = -1;\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Edit Atom';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnApply.onClick(() => this.applyChanges());\n        if (this.atom > 0) {\n            this.tabs = new TabBar(['Atom', 'Abbreviation', 'Geometry', 'Query', 'Extra']);\n            this.tabs.render(body);\n            this.tabs.onSelect((idx) => this.selectedTab(idx));\n            this.populateAtom(this.tabs.getPanelDOM('Atom'));\n            this.populateAbbreviation(this.tabs.getPanelDOM('Abbreviation'));\n            if (this.atom > 0)\n                this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n            this.populateQuery(this.tabs.getPanelDOM('Query'));\n            this.populateExtra(this.tabs.getPanelDOM('Extra'));\n        }\n        else {\n            this.populateAtom(body);\n        }\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                if (event.key == \"Enter\")\n                    this.applyChanges();\n                else if (event.key == \"Escape\")\n                    this.close();\n                else if (event.key == \"PageUp\") {\n                    this.tabs.rotateSelected(-1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                else if (event.key == \"PageDown\") {\n                    this.tabs.rotateSelected(1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                event.stopPropagation();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    applyChanges() {\n        this.mol.keepTransient = true;\n        this.updateMolecule();\n        let selTab = this.tabs ? this.tabs.getSelectedValue() : null;\n        if (selTab == 'Abbreviation')\n            this.updateAbbrev();\n        if (selTab == 'Geometry')\n            this.updateGeometry();\n        if (selTab == 'Query')\n            this.updateQuery();\n        if (selTab == 'Extra')\n            this.updateExtra();\n        this.mol.keepTransient = false;\n        if (this.callbackApply)\n            this.callbackApply(this);\n    }\n    populateAtom(panel) {\n        let grid = dom('<div/>').appendTo(panel);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        grid.appendHTML('<div style=\"grid-area: 1 / col0;\">Symbol</div>');\n        this.inputSymbol = dom('<input size=\"20\"/>').appendTo(grid);\n        this.inputSymbol.css({ 'grid-area': '1 / col1 / auto / col4}' });\n        this.inputSymbol.onInput(() => this.periodicWidget.changeElement(this.inputSymbol.getValue()));\n        grid.appendHTML('<div style=\"grid-area: 2 / col0;\">Charge</div>');\n        this.inputCharge = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputCharge.css({ 'grid-area': '2 / col1' });\n        grid.appendHTML('<div style=\"grid-area: 2 / col2;\">Unpaired</div>');\n        this.inputUnpaired = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputUnpaired.css({ 'grid-area': '2 / col3' });\n        grid.appendHTML('<div style=\"grid-area: 3 / col0;\">Hydrogens</div>');\n        this.optionHydrogen = new OptionList(['Auto', 'None', '1', '2', '3', '4', 'Other']);\n        this.optionHydrogen.render(dom('<div style=\"grid-area: 3 / col1 / auto / col3\"/>').appendTo(grid));\n        this.optionHydrogen.onSelect((idx) => this.inputHydrogen.elInput.disabled = idx != 6);\n        this.inputHydrogen = dom('<input type=\"number\" size=\"4\"/>').appendTo(grid);\n        this.inputHydrogen.css({ 'grid-area': '3 / col3' });\n        this.inputHydrogen.elInput.disabled = true;\n        grid.appendHTML('<div style=\"grid-area: 4 / col0;\">Isotope</div>');\n        this.optionIsotope = new OptionList(['Natural', 'Enriched']);\n        this.optionIsotope.render(dom('<div style=\"grid-area: 4 / col1 / auto / col3\"/>').appendTo(grid));\n        this.optionIsotope.onSelect((idx) => this.inputIsotope.elInput.disabled = idx == 0);\n        this.inputIsotope = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputIsotope.css({ 'grid-area': '4 / col3' });\n        this.inputIsotope.elInput.disabled = true;\n        grid.appendHTML('<div style=\"grid-area: 5 / col0;\">Mapping</div>');\n        this.inputMapping = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputMapping.css({ 'grid-area': '5 / col1' });\n        grid.appendHTML('<div style=\"grid-area: 5 / col2;\">Index</div>');\n        this.inputIndex = dom('<input type=\"number\" size=\"6\" readonly=\"readonly\"/>').appendTo(grid);\n        this.inputIndex.css({ 'grid-area': '5 / col3' });\n        let divPeriodic = dom('<div/>').appendTo(grid).css({ 'grid-area': '6 / start / 6 / end' });\n        this.periodicWidget = new PeriodicTableWidget();\n        this.periodicWidget.onSelect((element) => this.inputSymbol.setValue(element));\n        this.periodicWidget.onDoubleClick(() => this.applyChanges());\n        this.periodicWidget.render(divPeriodic);\n        const mol = this.mol, atom = this.atom;\n        if (atom > 0) {\n            this.inputSymbol.setValue(mol.atomElement(atom));\n            this.inputCharge.setValue(mol.atomCharge(atom).toString());\n            this.inputUnpaired.setValue(mol.atomUnpaired(atom).toString());\n            let hc = mol.atomHExplicit(atom);\n            if (hc == Molecule.HEXPLICIT_UNKNOWN) {\n                this.optionHydrogen.setSelectedIndex(0);\n                this.inputHydrogen.setValue(mol.atomHydrogens(atom).toString());\n                this.inputHydrogen.elInput.disabled = true;\n            }\n            else if (hc <= 4) {\n                this.optionHydrogen.setSelectedIndex(hc + 1);\n                this.inputHydrogen.setValue(hc.toString());\n                this.inputHydrogen.elInput.disabled = true;\n            }\n            else {\n                this.optionHydrogen.setSelectedIndex(6);\n                this.inputHydrogen.setValue(hc.toString());\n                this.inputHydrogen.elInput.disabled = false;\n            }\n            this.optionIsotope.setSelectedIndex(mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL ? 0 : 1);\n            if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n                this.inputIsotope.setValue(mol.atomIsotope(atom).toString());\n            this.inputIsotope.elInput.disabled = mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL;\n            this.inputMapping.setValue(mol.atomMapNum(atom).toString());\n            this.inputIndex.setValue(atom.toString());\n            this.periodicWidget.changeElement(mol.atomElement(atom));\n        }\n    }\n    populateAbbreviation(panel) {\n        let divFlex = dom('<div/>').appendTo(panel).css({ 'display': 'flex', 'align-items': 'flex-start' });\n        divFlex.css({ 'max-width': '60vw', 'max-height': '50vh', 'overflow-y': 'scroll' });\n        let spanSearch = dom('<div/>').appendTo(divFlex).css({ 'margin-right': '0.5em', 'flex': '0 0' });\n        let spanList = dom('<div/>').appendTo(divFlex).css({ 'flex': '1 1 100%' });\n        this.inputAbbrevSearch = dom('<input size=\"10\"/>').appendTo(spanSearch);\n        this.inputAbbrevSearch.setAttr('placeholder', 'Search');\n        let lastSearch = '';\n        this.inputAbbrevSearch.onKeyDown((event) => {\n            if (event.key == \"ArrowUp\")\n                this.cycleAbbreviation(-1);\n            else if (event.key == \"ArrowDown\")\n                this.cycleAbbreviation(1);\n        });\n        this.inputAbbrevSearch.onInput(() => {\n            let search = this.inputAbbrevSearch.getValue();\n            if (search == lastSearch)\n                return;\n            lastSearch = search;\n            this.fillAbbreviations();\n        });\n        let divButtons = dom('<div/>').appendTo(spanSearch).css({ 'margin-top': '0.5em' });\n        let btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(divButtons);\n        btnClear.onClick(() => {\n            this.selectAbbreviation(-1);\n            if (this.atom > 0 && MolUtil.hasAbbrev(this.mol, this.atom))\n                this.applyChanges();\n        });\n        this.tableAbbrev = dom('<table/>').appendTo(spanList).css({ 'border-collapse': 'collapse', 'width': '100%' });\n        this.fillAbbreviations();\n    }\n    populateGeometry(panel) {\n        const { mol, atom } = this;\n        let divContainer1 = dom('<div/>').appendTo(panel).css({ 'text-align': 'center' });\n        let divContainer2 = dom('<div/>').appendTo(divContainer1).css({ 'display': 'inline-block' });\n        let grid = dom('<div/>').appendTo(divContainer2);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        this.geomWidget = new GeomWidget(GeomWidgetType.Atom, mol, atom);\n        this.geomWidget.render(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0 / auto / col4', 'text-align': 'center' }));\n        let label1 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' });\n        this.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col1' });\n        let label2 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col2' });\n        this.inputGeom2 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col3' });\n        this.geomWidget.callbackSelect = (sel) => {\n            let atoms = this.geomWidget.selectionAtoms(sel);\n            if (sel.type == GeomWidgetSelType.Position) {\n                label1.setText('Position X');\n                label2.setText('Y');\n                this.inputGeom1.setValue(this.refGeom1 = mol.atomX(atoms[0]).toFixed(3));\n                this.inputGeom2.setValue(this.refGeom2 = mol.atomY(atoms[0]).toFixed(3));\n            }\n            else if (sel.type == GeomWidgetSelType.Link) {\n                let dx = mol.atomX(atoms[1]) - mol.atomX(atoms[0]), dy = mol.atomY(atoms[1]) - mol.atomY(atoms[0]);\n                label1.setText('Distance');\n                label2.setText('Angle');\n                this.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n                this.inputGeom2.setValue(this.refGeom2 = (Math.atan2(dy, dx) * RADDEG).toFixed(1));\n            }\n            else if (sel.type == GeomWidgetSelType.Torsion) {\n                let cx = mol.atomX(atoms[0]), cy = mol.atomY(atoms[0]);\n                let th2 = Math.atan2(mol.atomY(atoms[1]) - cy, mol.atomX(atoms[1]) - cx);\n                let th1 = Math.atan2(mol.atomY(atoms[2]) - cy, mol.atomX(atoms[2]) - cx);\n                label1.setText('Angle');\n                label2.setText('');\n                this.inputGeom1.setValue(this.refGeom1 = (angleDiffPos(th2, th1) * RADDEG).toFixed(1));\n                this.inputGeom2.setValue(this.refGeom2 = '');\n            }\n            label2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n            this.inputGeom2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n        };\n        this.geomWidget.callbackSelect(this.geomWidget.selected);\n    }\n    populateQuery(panel) {\n        this.queryWidget = new QueryFieldsWidget(this.mol, this.atom, 0);\n        this.queryWidget.render(panel);\n    }\n    populateExtra(panel) {\n        let fields = [...this.mol.atomExtra(this.atom), ...this.mol.atomTransient(this.atom)];\n        this.fieldsWidget = new ExtraFieldsWidget(fields);\n        this.fieldsWidget.render(panel);\n    }\n    updateMolecule() {\n        let { mol, atom } = this;\n        if (atom == 0)\n            atom = this.atom = mol.addAtom('C', this.newX, this.newY);\n        let sym = this.inputSymbol.getValue();\n        if (sym != '')\n            mol.setAtomElement(atom, sym);\n        let chg = parseInt(this.inputCharge.getValue());\n        if (chg > -20 && chg < 20)\n            mol.setAtomCharge(atom, chg);\n        let unp = parseInt(this.inputUnpaired.getValue());\n        if (unp >= 0 && unp < 20)\n            mol.setAtomUnpaired(atom, unp);\n        let hcidx = this.optionHydrogen.getSelectedIndex();\n        if (hcidx == 0)\n            mol.setAtomHExplicit(atom, Molecule.HEXPLICIT_UNKNOWN);\n        else if (hcidx <= 5)\n            mol.setAtomHExplicit(atom, hcidx - 1);\n        else {\n            let hyd = parseInt(this.inputHydrogen.getValue());\n            if (hyd >= 0 && hyd < 20)\n                mol.setAtomHExplicit(atom, hyd);\n        }\n        if (this.optionIsotope.getSelectedIndex() == 1) {\n            let iso = parseInt(this.inputIsotope.getValue());\n            if (iso >= 0 && iso < 300)\n                mol.setAtomIsotope(atom, iso);\n        }\n        else\n            mol.setAtomIsotope(atom, Molecule.ISOTOPE_NATURAL);\n        let map = parseInt(this.inputMapping.getValue());\n        if (!isNaN(map))\n            mol.setAtomMapNum(atom, map);\n    }\n    updateAbbrev() {\n        const { mol, atom } = this;\n        if (this.currentAbbrev < 0) {\n            let el = mol.atomElement(atom);\n            MolUtil.clearAbbrev(mol, atom);\n            mol.setAtomElement(atom, el);\n        }\n        else {\n            let abbrev = this.abbrevList[this.currentAbbrev];\n            mol.setAtomElement(atom, abbrev.name);\n            MolUtil.setAbbrev(mol, atom, abbrev.frag);\n        }\n    }\n    updateGeometry() {\n        let strval1 = this.inputGeom1.getValue(), strval2 = this.inputGeom2.getValue();\n        if (this.refGeom1 == strval1 && this.refGeom2 == strval2)\n            return;\n        const { mol } = this;\n        let sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n        if (sel.type == GeomWidgetSelType.Position) {\n            let x = parseFloat(strval1), y = parseFloat(strval2);\n            if (isNaN(x) || isNaN(y) || Math.abs(x) > 1E6 || Math.abs(y) > 1E6)\n                return;\n            mol.setAtomPos(atoms[0], x, y);\n        }\n        else if (sel.type == GeomWidgetSelType.Link) {\n            if (this.refGeom1 != strval1) {\n                let dist = parseFloat(strval1);\n                if (isNaN(dist) || Math.abs(dist) > 100)\n                    return;\n                let mask = Vec.booleanArray(false, mol.numAtoms);\n                mask[atoms[1] - 1] = true;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), 'selectedMask': mask };\n                let molact = new MoleculeActivity(instate, ActivityType.BondDist, { dist });\n                molact.execute();\n                if (molact.output.mol)\n                    this.mol = molact.output.mol;\n                return;\n            }\n            else if (this.refGeom2 != strval2) {\n                let angle = parseFloat(strval2);\n                if (isNaN(angle))\n                    return;\n                let mask = Vec.booleanArray(false, mol.numAtoms);\n                mask[atoms[1] - 1] = true;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: mask };\n                let molact = new MoleculeActivity(instate, ActivityType.AlignAngle, { angle: angle * DEGRAD });\n                molact.execute();\n                if (molact.output.mol)\n                    this.mol = molact.output.mol;\n                return;\n            }\n        }\n        else if (sel.type == GeomWidgetSelType.Torsion) {\n            let angle = parseFloat(strval1);\n            if (isNaN(angle))\n                return;\n            let mask = Vec.booleanArray(false, mol.numAtoms);\n            for (let a of atoms)\n                mask[a - 1] = true;\n            let instate = { mol, currentAtom: atoms[2], currentBond: 0, selectedMask: mask };\n            let molact = new MoleculeActivity(instate, ActivityType.AdjustTorsion, { angle: angle * DEGRAD });\n            molact.execute();\n            if (molact.output.mol)\n                this.mol = molact.output.mol;\n            return;\n        }\n    }\n    updateQuery() {\n        this.queryWidget.updateAtom();\n    }\n    updateExtra() {\n        this.mol.setAtomExtra(this.atom, this.fieldsWidget.getExtraFields());\n        this.mol.setAtomTransient(this.atom, this.fieldsWidget.getTransientFields());\n    }\n    fillAbbreviations() {\n        if (AbbrevContainer.needsSetup()) {\n            setTimeout(() => AbbrevContainer.setupData().then(() => this.fillAbbreviations()), 1);\n            return;\n        }\n        this.tableAbbrev.empty();\n        AbbrevContainer.main.submitMolecule(this.mol, true);\n        this.abbrevList = AbbrevContainer.main.getAbbrevs();\n        if (!this.svgAbbrev) {\n            this.svgAbbrev = [];\n            let policy = RenderPolicy.defaultColourOnWhite(10);\n            let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n            for (let abbrev of this.abbrevList) {\n                let effects = new RenderEffects();\n                let mol = abbrev.frag.clone();\n                effects.atomCircleSz = Vec.numberArray(0, mol.numAtoms);\n                effects.atomCircleCol = Vec.numberArray(0, mol.numAtoms);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    if (mol.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                        mol.setAtomElement(n, 'C');\n                        effects.atomCircleSz[n - 1] = 0.2;\n                        effects.atomCircleCol[n - 1] = 0x00C000;\n                    }\n                let layout = new ArrangeMolecule(mol, measure, policy, effects);\n                layout.arrange();\n                let gfx = new MetaVector();\n                new DrawMolecule(layout, gfx).draw();\n                gfx.normalise();\n                this.svgAbbrev.push(gfx.createSVG());\n            }\n            const { mol, atom } = this;\n            if (atom > 0 && MolUtil.hasAbbrev(mol, atom)) {\n                let name = mol.atomElement(atom), mf = MolUtil.molecularFormula(MolUtil.getAbbrev(mol, atom));\n                for (let n = 0; n < this.abbrevList.length; n++)\n                    if (name == this.abbrevList[n].name) {\n                        if (mf == MolUtil.molecularFormula(this.abbrevList[n].frag))\n                            this.currentAbbrev = n;\n                        break;\n                    }\n            }\n        }\n        let tr = dom('<tr/>').appendTo(this.tableAbbrev);\n        tr.appendHTML('<td><u>Label</u></td>');\n        tr.appendHTML('<td><u>Structure</u></td>');\n        this.abbrevEntries = [];\n        this.abbrevIndices = [];\n        let search = this.inputAbbrevSearch.getValue().toLowerCase();\n        for (let n = 0; n < this.abbrevList.length; n++) {\n            if (this.currentAbbrev != n && !this.abbrevList[n].nameSearch.includes(search))\n                continue;\n            let entry = {\n                tr: dom('<tr/>').appendTo(this.tableAbbrev),\n                idx: n,\n                bgcol: this.abbrevEntries.length % 2 == 0 ? '#FFFFFF' : '#F8F8F8'\n            };\n            entry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n            let tdLabel = dom('<td/>').appendTo(entry.tr), tdStruct = dom('<td/>').appendTo(entry.tr);\n            tdLabel.setHTML(this.abbrevList[n].nameHTML);\n            dom(this.svgAbbrev[n]).appendTo(tdStruct).css({ 'display': 'block', 'pointer-events': 'none' });\n            entry.tr.css({ 'cursor': 'pointer' });\n            entry.tr.onClick(() => this.selectAbbreviation(n));\n            entry.tr.onDblClick((event) => this.applyChanges());\n            this.abbrevEntries.push(entry);\n            this.abbrevIndices.push(n);\n        }\n    }\n    selectAbbreviation(idx) {\n        if (this.currentAbbrev == idx)\n            return;\n        this.currentAbbrev = idx;\n        for (let entry of this.abbrevEntries) {\n            entry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n            if (this.currentAbbrev == entry.idx)\n                entry.tr.el.scrollIntoView({ 'block': 'nearest' });\n        }\n    }\n    cycleAbbreviation(dir) {\n        let sz = this.abbrevIndices.length;\n        if (sz == 0)\n            return;\n        let idx = this.abbrevIndices.indexOf(this.currentAbbrev);\n        if (idx < 0) {\n            if (dir < 0)\n                idx = sz - 1;\n            else\n                idx = 0;\n        }\n        else\n            idx = (idx + sz + dir) % sz;\n        this.selectAbbreviation(this.abbrevIndices[idx]);\n    }\n    selectedTab(idx) {\n        if (idx == 0)\n            this.inputSymbol.grabFocus();\n        else if (idx == 1)\n            this.inputAbbrevSearch.grabFocus();\n        else if (idx == 2)\n            this.inputGeom1.grabFocus();\n    }\n}\n//# sourceMappingURL=EditAtom.js.map","import { Dialog } from '../dialog/Dialog';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { TabBar } from '../ui/TabBar';\nimport { dom } from '../util/dom';\nimport { norm_xy } from '../util/util';\nimport { ExtraFieldsWidget } from './ExtraFieldsWidget';\nimport { GeomWidget, GeomWidgetSelType, GeomWidgetType } from './GeomWidget';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { QueryFieldsWidget } from './QueryFieldsWidget';\nexport class EditBond extends Dialog {\n    constructor(mol, bond, proxyClip, callbackApply) {\n        super();\n        this.bond = bond;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Edit Bond';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnApply.onClick(() => this.applyChanges());\n        this.tabs = new TabBar(['Bond', 'Geometry', 'Query', 'Extra']);\n        this.tabs.render(body);\n        this.tabs.onSelect((idx) => this.selectedTab(idx));\n        this.populateBond(this.tabs.getPanelDOM('Bond'));\n        this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n        this.populateQuery(this.tabs.getPanelDOM('Query'));\n        this.populateExtra(this.tabs.getPanelDOM('Extra'));\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                if (event.key == \"Enter\")\n                    this.applyChanges();\n                else if (event.key == \"Escape\")\n                    this.close();\n                else if (event.key == \"PageUp\") {\n                    this.tabs.rotateSelected(-1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                else if (event.key == \"PageDown\") {\n                    this.tabs.rotateSelected(1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                event.stopPropagation();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    applyChanges() {\n        this.mol.keepTransient = true;\n        this.updateMolecule();\n        if (this.tabs.getSelectedValue() == 'Geometry')\n            this.updateGeometry();\n        if (this.tabs.getSelectedValue() == 'Query')\n            this.updateQuery();\n        if (this.tabs.getSelectedValue() == 'Extra')\n            this.updateExtra();\n        this.mol.keepTransient = false;\n        if (this.callbackApply)\n            this.callbackApply(this);\n    }\n    populateBond(panel) {\n        const { mol, bond } = this;\n        let grid = dom('<div/>').appendTo(panel);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0' }).setText('Order');\n        let ordersHTML = [];\n        for (let o = 0; o <= 4; o++)\n            ordersHTML.push(`&nbsp;&nbsp;${o}&nbsp;&nbsp;`);\n        this.optionOrder = new OptionList(ordersHTML);\n        this.optionOrder.htmlLabels = true;\n        this.optionOrder.setSelectedIndex(mol.bondOrder(bond));\n        this.optionOrder.render(dom('<div/>').appendTo(grid).css({ 'grid-column': 'col1 / col4', 'grid-row': '1' }));\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' }).setText('Stereo');\n        this.optionStereo = new OptionList(['None', 'Up', 'Down', 'Unknown']);\n        this.optionStereo.setSelectedIndex(mol.bondType(bond));\n        this.optionStereo.render(dom('<div/>').appendTo(grid).css({ 'grid-column': 'col1 / col4', 'grid-row': '2' }));\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '3 / col0' }).setText('From');\n        this.inputFrom = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '3 / col1', 'font': 'inherit' });\n        this.inputFrom.elInput.readOnly = true;\n        this.inputFrom.setValue(mol.bondFrom(bond).toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '3 / col2' }).setText('To');\n        this.inputTo = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '3 / col3', 'font': 'inherit' });\n        this.inputTo.elInput.readOnly = true;\n        this.inputTo.setValue(mol.bondTo(bond).toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '4 / col2' }).setText('Index');\n        this.inputIndex = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '4 / col3', 'font': 'inherit' });\n        this.inputIndex.elInput.readOnly = true;\n        this.inputIndex.setValue(bond.toString());\n    }\n    populateGeometry(panel) {\n        const { mol, bond } = this;\n        let divContainer1 = dom('<div/>').appendTo(panel).css({ 'text-align': 'center' });\n        let divContainer2 = dom('<div/>').appendTo(divContainer1).css({ 'display': 'inline-block' });\n        let grid = dom('<div/>').appendTo(divContainer2);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2]' });\n        this.geomWidget = new GeomWidget(GeomWidgetType.Bond, mol, bond);\n        this.geomWidget.render(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0 / auto / col2', 'text-align': 'center' }));\n        let label1 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' });\n        this.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col1' });\n        this.geomWidget.callbackSelect = (sel) => {\n            if (sel.type == GeomWidgetSelType.Link) {\n                let a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n                let dx = mol.atomX(a2) - mol.atomX(a1), dy = mol.atomY(a2) - mol.atomY(a1);\n                label1.setText('Distance');\n                this.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n            }\n        };\n        this.geomWidget.callbackSelect(this.geomWidget.selected);\n    }\n    populateQuery(panel) {\n        this.queryWidget = new QueryFieldsWidget(this.mol, 0, this.bond);\n        this.queryWidget.render(panel);\n    }\n    populateExtra(panel) {\n        let fields = [...this.mol.bondExtra(this.bond), ...this.mol.bondTransient(this.bond)];\n        this.fieldsWidget = new ExtraFieldsWidget(fields);\n        this.fieldsWidget.render(panel);\n    }\n    updateMolecule() {\n        let { mol, bond } = this;\n        mol.setBondOrder(bond, this.optionOrder.getSelectedIndex());\n        mol.setBondType(bond, this.optionStereo.getSelectedIndex());\n    }\n    updateGeometry() {\n        let strval1 = this.inputGeom1.getValue();\n        if (this.refGeom1 == strval1)\n            return;\n        const { mol } = this;\n        let sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n        if (sel.type == GeomWidgetSelType.Link) {\n            if (this.refGeom1 != strval1) {\n                let dist = parseFloat(strval1);\n                if (isNaN(dist) || Math.abs(dist) > 100)\n                    return;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: null };\n                let molact = new MoleculeActivity(instate, ActivityType.BondDist, { dist });\n                molact.execute();\n                this.mol = molact.output.mol;\n                return;\n            }\n        }\n    }\n    updateQuery() {\n        this.queryWidget.updateBond();\n    }\n    updateExtra() {\n        this.mol.setBondExtra(this.bond, this.fieldsWidget.getExtraFields());\n        this.mol.setBondTransient(this.bond, this.fieldsWidget.getTransientFields());\n    }\n    selectedTab(idx) {\n        if (idx == 0)\n            this.inputFrom.grabFocus();\n        else if (idx == 1)\n            this.inputGeom1.grabFocus();\n    }\n}\n//# sourceMappingURL=EditBond.js.map","import { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from '../data/PolymerBlock';\nimport { Dialog } from '../dialog/Dialog';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { dom } from '../util/dom';\nimport { Vec } from '../util/Vec';\nconst CHAR_LOW_A = 'a'.charCodeAt(0), CHAR_UP_A = 'A'.charCodeAt(0);\nfunction indexToAtomLabel(idx) { return String.fromCharCode(CHAR_UP_A + Math.min(26, Math.max(0, idx)) - 1); }\nfunction indexToBondLabel(idx) { return String.fromCharCode(CHAR_LOW_A + Math.min(26, Math.max(0, idx)) - 1); }\nexport class EditPolymer extends Dialog {\n    constructor(mol, atoms, proxyClip, callbackApply) {\n        super();\n        this.atoms = atoms;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.optionConnect = null;\n        this.optionBondConn = null;\n        this.currentID = 0;\n        this.unit = null;\n        this.borderAtoms = [];\n        this.outBonds = [];\n        this.outAtoms = [];\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Polymer Block';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n        this.polymer = new PolymerBlock(this.mol);\n        atoms = Vec.sorted(atoms);\n        for (let id of this.polymer.getIDList()) {\n            let look = this.polymer.getUnit(id);\n            if (Vec.equals(atoms, look.atoms)) {\n                this.currentID = id;\n                this.unit = look;\n                break;\n            }\n        }\n        if (!this.unit)\n            this.unit = new PolymerBlockUnit(atoms);\n        let umol = this.umol = this.mol.clone();\n        let mask = Vec.booleanArray(false, this.umol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n            let in1 = this.atoms.includes(bfr), in2 = this.atoms.includes(bto);\n            if (in1 || in2)\n                mask[bfr - 1] = mask[bto - 1] = true;\n            if (in1 && !in2) {\n                this.borderAtoms.push(bfr);\n                this.outBonds.push(n);\n                this.outAtoms.push(bto);\n            }\n            if (in2 && !in1) {\n                this.borderAtoms.push(bto);\n                this.outBonds.push(n);\n                this.outAtoms.push(bfr);\n            }\n        }\n        this.borderAtoms = Vec.sortedUnique(this.borderAtoms);\n        this.umap = Vec.maskMap(mask);\n        this.umol = MolUtil.subgraphMask(this.umol, mask);\n        new PolymerBlock(this.umol).removeAll();\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        if (this.currentID == 0)\n            this.btnApply.setText('Create');\n        this.btnApply.onClick(() => this.applyChanges());\n        if (this.currentID > 0) {\n            this.btnRemove = dom('<button class=\"wmk-button wmk-button-default\">Remove</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n            this.btnRemove.onClick(() => this.applyRemove());\n        }\n        let grid = dom('<div/>').appendTo(body);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4] auto [end]' });\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0' }).setText('# Atoms');\n        let inputNAtoms = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col1' }));\n        inputNAtoms.elInput.readOnly = true;\n        inputNAtoms.setValue(this.unit.atoms.length.toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col2' }).setText('Out-bonds');\n        let inputNBond = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col3' }));\n        inputNBond.elInput.readOnly = true;\n        inputNBond.setValue(this.outBonds.length.toString());\n        let row = 1;\n        if (this.outBonds.length == 2) {\n            row++;\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0` }).setText('Connectivity');\n            this.optionConnect = new OptionList(['Unknown', 'Head-to-Tail', 'Head-to-Head', 'Random']);\n            this.optionConnect.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / col4` }));\n            if (this.unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.optionConnect.setSelectedIndex(1);\n            else if (this.unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.optionConnect.setSelectedIndex(2);\n            else if (this.unit.connect == PolymerBlockConnectivity.Random)\n                this.optionConnect.setSelectedIndex(3);\n        }\n        if (this.outBonds.length == 4 && Vec.uniqueUnstable(this.outAtoms).length == 4) {\n            row++;\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0` }).setText('2x2 Connectivity');\n            this.populate2x2Conn(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / end` }));\n        }\n        let getList = (str) => {\n            if (!str)\n                return null;\n            let list = [];\n            for (let bit of str.split(',')) {\n                let v = parseInt(bit);\n                if (v > 0)\n                    list.push(v);\n                else\n                    return undefined;\n            }\n            return list;\n        };\n        for (let n = 0; n < this.borderAtoms.length; n++) {\n            row++;\n            let domLabel = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em' });\n            if (n == 0)\n                domLabel.setText('Name ');\n            dom('<span/>').appendTo(domLabel).css({ 'color': '#008000' }).setText(indexToAtomLabel(n + 1));\n            let input = dom('<input size=\"20\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / end`, 'width': '100%' }));\n            let atom = this.borderAtoms[n];\n            let nvals = this.unit.atomName.get(atom);\n            if (nvals)\n                input.setValue(nvals.join(','));\n            input.onInput(() => {\n                let list = getList(input.getValue());\n                if (list !== undefined)\n                    this.unit.atomName.set(atom, list);\n            });\n        }\n        for (let n = 0; n < this.outAtoms.length; n++) {\n            row++;\n            let domLabel = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em' });\n            if (n == 0)\n                domLabel.setText('Link ');\n            dom('<span/>').appendTo(domLabel).css({ 'color': '#800080' }).setText(indexToBondLabel(n + 1));\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1` }).setText('Include');\n            let inputIncl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col2`, 'width': '100%' }));\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col3` }).setText('Exclude');\n            let inputExcl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col4`, 'width': '100%' }));\n            let bond = this.outBonds[n];\n            let ivals = this.unit.bondIncl.get(bond), evals = this.unit.bondExcl.get(bond);\n            if (ivals)\n                inputIncl.setValue(ivals.join(','));\n            if (evals)\n                inputExcl.setValue(evals.join(','));\n            inputIncl.onInput(() => {\n                let list = getList(inputIncl.getValue());\n                if (list !== undefined)\n                    this.unit.bondIncl.set(bond, list);\n            });\n            inputExcl.onInput(() => {\n                let list = getList(inputExcl.getValue());\n                if (list !== undefined)\n                    this.unit.bondExcl.set(bond, list);\n            });\n        }\n        row++;\n        this.populateUncap(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center' }));\n        row++;\n        this.divPreview = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center' });\n        this.renderUnit();\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                let keyCode = event.keyCode || event.which;\n                if (keyCode == 13)\n                    this.applyChanges();\n                if (keyCode == 27)\n                    this.close();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    populate2x2Conn(div) {\n        const perms = [[0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1]];\n        let bondConnOptions = [null];\n        let optionList = ['None'];\n        let selidx = 0;\n        for (let perm of perms) {\n            let bonds = Vec.idxGet(this.outBonds, perm);\n            if (Vec.equals(bonds, this.unit.bondConn))\n                selidx = optionList.length;\n            bondConnOptions.push(bonds);\n            optionList.push(`${perm[0] + 1},${perm[1] + 1}:${perm[2] + 1},${perm[3] + 1}`);\n        }\n        this.optionBondConn = new OptionList(optionList);\n        this.optionBondConn.setSelectedIndex(selidx);\n        this.optionBondConn.render(div);\n        this.optionBondConn.onSelect((idx) => {\n            this.unit.bondConn = bondConnOptions[idx];\n            this.renderUnit();\n        });\n    }\n    populateUncap(div) {\n        let uncapAtoms = [];\n        skip: for (let a of this.outAtoms)\n            if (this.mol.atomAdjCount(a) == 1 && this.mol.atomElement(a) != '*') {\n                for (let unit of this.polymer.getUnits())\n                    if (unit.atoms.includes(a))\n                        continue skip;\n                uncapAtoms.push(a);\n            }\n        if (uncapAtoms.length == 0)\n            return;\n        let btnUncap = dom('<button class=\"wmk-button wmk-button-default\">Uncap Exterior</button>').appendTo(div);\n        btnUncap.onClick(() => {\n            btnUncap.elInput.disabled = true;\n            for (let a of uncapAtoms)\n                this.mol.setAtomElement(a, '*');\n        });\n    }\n    applyChanges() {\n        if (this.optionConnect) {\n            let sel = this.optionConnect.getSelectedIndex();\n            if (sel == 0)\n                this.unit.connect = null;\n            else if (sel == 1)\n                this.unit.connect = PolymerBlockConnectivity.HeadToTail;\n            else if (sel == 2)\n                this.unit.connect = PolymerBlockConnectivity.HeadToHead;\n            else if (sel == 3)\n                this.unit.connect = PolymerBlockConnectivity.Random;\n        }\n        if (this.currentID)\n            this.polymer.removeUnit(this.currentID);\n        this.currentID = this.polymer.createUnit(this.unit.clone());\n        this.polymer.rewriteMolecule();\n        this.callbackApply(this);\n    }\n    applyRemove() {\n        if (this.currentID)\n            this.polymer.removeUnit(this.currentID);\n        this.callbackApply(this);\n    }\n    renderUnit() {\n        let umol = this.umol.clone();\n        let policy = RenderPolicy.defaultColourOnWhite(20);\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        let effects = new RenderEffects();\n        effects.atomCircleSz = Vec.numberArray(0, umol.numAtoms);\n        effects.atomCircleCol = Vec.numberArray(0, umol.numAtoms);\n        effects.atomDecoText = Vec.stringArray(null, umol.numAtoms);\n        effects.atomDecoCol = Vec.numberArray(null, umol.numAtoms);\n        effects.atomDecoSize = Vec.numberArray(null, umol.numAtoms);\n        let borderAtoms = this.borderAtoms.map((atom) => this.umap[atom - 1] + 1);\n        let outAtoms = this.outAtoms.map((atom) => this.umap[atom - 1] + 1);\n        for (let n = 1; n <= umol.numAtoms; n++) {\n            let bidx = borderAtoms.indexOf(n), oidx = outAtoms.indexOf(n);\n            if (bidx >= 0) {\n                effects.atomDecoText[n - 1] = indexToAtomLabel(bidx + 1);\n                effects.atomDecoCol[n - 1] = 0x008000;\n                effects.atomDecoSize[n - 1] = 0.5;\n            }\n            if (oidx >= 0) {\n                umol.setAtomCharge(n, 0);\n                umol.setAtomUnpaired(n, 0);\n                umol.setAtomIsotope(n, 0);\n                effects.atomCircleSz[n - 1] = 0.1;\n                effects.atomCircleCol[n - 1] = 0xFF00FF;\n                effects.atomDecoText[n - 1] = indexToBondLabel(oidx + 1);\n                effects.atomDecoCol[n - 1] = 0x800080;\n                effects.atomDecoSize[n - 1] = 0.5;\n                umol.setAtomElement(n, 'C');\n            }\n        }\n        let layout = new ArrangeMolecule(umol, measure, policy, effects);\n        layout.arrange();\n        layout.squeezeInto(0, 0, 300, 300);\n        let gfx = new MetaVector();\n        if (this.unit.bondConn) {\n            const LINES = [\n                [0, 1, 0xC86D08, 2, false], [2, 3, 0xC86D08, 2, false],\n                [0, 2, 0xC0C86D08, 1, true], [1, 3, 0xC0C86D08, 1, true]\n            ];\n            for (let [i1, i2, col, sz, circle] of LINES) {\n                let a1 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i1])];\n                let a2 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i2])];\n                let p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n                gfx.drawLine(p1.oval.cx, p1.oval.cy, p2.oval.cx, p2.oval.cy, col, sz);\n                if (circle) {\n                    for (let f of [0.2, 0.4, 0.6, 0.8]) {\n                        let mx = p1.oval.cx + f * (p2.oval.cx - p1.oval.cx), my = p1.oval.cy + f * (p2.oval.cy - p1.oval.cy);\n                        gfx.drawOval(mx, my, 2, 2, col, sz, null);\n                    }\n                }\n            }\n        }\n        new DrawMolecule(layout, gfx).draw();\n        gfx.normalise();\n        this.divPreview.empty();\n        dom(gfx.createSVG()).appendTo(this.divPreview).css({ 'pointer-events': 'none' });\n    }\n}\n//# sourceMappingURL=EditPolymer.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { TEMPLATE_FILES } from '../data/AbbrevContainer';\nimport { DataSheetStream } from '../data/DataSheetStream';\nimport { MolUtil } from '../data/MolUtil';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ButtonBank } from '../ui/ButtonBank';\nimport { Theme } from '../util/Theme';\nimport { readTextURL } from '../util/util';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nclass TemplateBank extends ButtonBank {\n    constructor(owner, group) {\n        super();\n        this.owner = owner;\n        this.group = group;\n        this.subgroups = null;\n        this.templates = null;\n    }\n    init() {\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 10;\n        policy.data.lineSize *= 1.5;\n        policy.data.bondSep *= 1.5;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            if (TemplateBank.resourceData.length == 0)\n                yield this.loadResourceData();\n            if (this.group == null)\n                this.prepareSubGroups();\n            else\n                this.prepareTemplates();\n        }))();\n    }\n    update() {\n        if (this.subgroups == null && this.templates == null)\n            return;\n        this.buttons = [];\n        if (this.group == null)\n            this.populateGroups();\n        else\n            this.populateTemplates();\n    }\n    populateGroups() {\n        let groups = this.subgroups.groups, titles = this.subgroups.titles, preview = this.subgroups.preview;\n        for (let n = 0; n < groups.length; n++) {\n            this.buttons.push({ id: groups[n], metavec: preview[n], helpText: titles[n] });\n        }\n    }\n    populateTemplates() {\n        let names = this.templates.names, abbrev = this.templates.abbrev, mnemonic = this.templates.mnemonic, preview = this.templates.preview;\n        for (let n = 0; n < names.length; n++) {\n            this.buttons.push({ id: n.toString(), metavec: preview[n], helpText: names[n] });\n        }\n    }\n    hitButton(id) {\n        if (this.group == null) {\n            this.buttonView.pushBank(new TemplateBank(this.owner, id));\n        }\n        else {\n            let idx = parseInt(id);\n            let param = { fragNative: this.templates.molecules[idx] };\n            new MoleculeActivity(this.owner.getState(), ActivityType.TemplateFusion, param, this.owner).execute();\n        }\n    }\n    loadResourceData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let fn of TEMPLATE_FILES) {\n                let url = Theme.RESOURCE_URL + '/data/templates/' + fn + '.ds';\n                let dsstr = yield readTextURL(url);\n                TemplateBank.resourceList.push(fn);\n                TemplateBank.resourceData.push(DataSheetStream.readXML(dsstr));\n            }\n        });\n    }\n    prepareSubGroups() {\n        this.subgroups = { groups: TemplateBank.resourceList, titles: [], preview: [] };\n        let sz = this.buttonView.idealSize, msz = 0.5 * (sz - 2);\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 10;\n        let effects = new RenderEffects();\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        for (let ds of TemplateBank.resourceData) {\n            this.subgroups.titles.push(ds.title);\n            let colMol = ds.firstColOfType(\"molecule\");\n            let metavec = new MetaVector();\n            for (let n = 0, idx = 0; idx < 4 && n < ds.numRows; n++) {\n                let mol = ds.getMolecule(n, colMol);\n                if (MolUtil.isBlank(mol))\n                    continue;\n                let layout = new ArrangeMolecule(mol, measure, policy, effects);\n                layout.arrange();\n                let col = (idx % 2), row = Math.floor(idx / 2);\n                layout.squeezeInto(1 + col * msz, 1 + row * msz, msz, msz, 1);\n                new DrawMolecule(layout, metavec).draw();\n                idx++;\n            }\n            metavec.width = sz;\n            metavec.height = sz;\n            this.subgroups.preview.push(metavec);\n        }\n        this.buttonView.refreshBank();\n    }\n    prepareTemplates() {\n        let idx = TemplateBank.resourceList.indexOf(this.group);\n        let ds = TemplateBank.resourceData[idx];\n        this.templates = { molecules: [], names: [], abbrev: [], mnemonic: [], preview: [] };\n        let sz = this.buttonView.idealSize;\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 12;\n        let effects = new RenderEffects();\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        let colMol = ds.findColByName('Molecule');\n        let colName = ds.findColByName('Name');\n        let colAbbrev = ds.findColByName('Abbrev');\n        let colMnemonic = ds.findColByName('Mnemonic');\n        for (let n = 0; n < ds.numRows; n++) {\n            let mol = ds.getMolecule(n, colMol);\n            this.templates.molecules.push(mol.toString());\n            this.templates.names.push(ds.getString(n, colName));\n            this.templates.abbrev.push(ds.getString(n, colAbbrev));\n            this.templates.mnemonic.push(ds.getString(n, colMnemonic));\n            let layout = new ArrangeMolecule(mol, measure, policy, effects);\n            layout.arrange();\n            layout.squeezeInto(0, 0, sz, sz, 2);\n            let metavec = new MetaVector();\n            new DrawMolecule(layout, metavec).draw();\n            metavec.width = sz;\n            metavec.height = sz;\n            this.templates.preview.push(metavec);\n        }\n        this.buttonView.refreshBank();\n    }\n}\nTemplateBank.resourceList = [];\nTemplateBank.resourceData = [];\nexport { TemplateBank };\nexport class FusionBank extends ButtonBank {\n    constructor(owner) {\n        super();\n        this.owner = owner;\n    }\n    update() {\n        this.buttons = [];\n        this.buttons.push({ id: 'accept', imageFN: 'GenericAccept', helpText: 'Apply this template.' });\n        this.buttons.push({ id: 'prev', imageFN: 'TemplatePrev', helpText: 'Show previous fusion option.' });\n        this.buttons.push({ id: 'next', imageFN: 'TemplateNext', helpText: 'Show next fusion option.' });\n    }\n    hitButton(id) {\n        if (id == 'accept')\n            this.owner.templateAccept();\n        else if (id == 'prev')\n            this.owner.templateRotate(-1);\n        else if (id == 'next')\n            this.owner.templateRotate(1);\n    }\n    bankClosed() {\n        this.owner.clearPermutations();\n    }\n}\n//# sourceMappingURL=TemplateBank.js.map","import { ButtonBank } from '../ui/ButtonBank';\nexport var ToolBankItem;\n(function (ToolBankItem) {\n    ToolBankItem[\"Arrow\"] = \"arrow\";\n    ToolBankItem[\"Rotate\"] = \"rotate\";\n    ToolBankItem[\"Pan\"] = \"pan\";\n    ToolBankItem[\"Drag\"] = \"drag\";\n    ToolBankItem[\"Erasor\"] = \"erasor\";\n    ToolBankItem[\"BondOrder0\"] = \"bond:Order0\";\n    ToolBankItem[\"BondOrder1\"] = \"bond:Order1\";\n    ToolBankItem[\"BondOrder2\"] = \"bond:Order2\";\n    ToolBankItem[\"BondOrder3\"] = \"bond:Order3\";\n    ToolBankItem[\"BondUnknown\"] = \"bond:Unknown\";\n    ToolBankItem[\"BondInclined\"] = \"bond:Inclined\";\n    ToolBankItem[\"BondDeclined\"] = \"bond:Declined\";\n    ToolBankItem[\"RingAliph\"] = \"ringAliph\";\n    ToolBankItem[\"RingArom\"] = \"ringArom\";\n    ToolBankItem[\"AtomPlus\"] = \"atomPlus\";\n    ToolBankItem[\"AtomMinus\"] = \"atomMinus\";\n    ToolBankItem[\"BondPfx\"] = \"bond:\";\n    ToolBankItem[\"ElementPfx\"] = \"element:\";\n})(ToolBankItem || (ToolBankItem = {}));\nconst TOOLS_MAIN = [\n    { id: ToolBankItem.Arrow, imageFN: 'ToolSelect', helpText: 'Selection tool.', mnemonic: 'Escape' },\n    { id: ToolBankItem.Rotate, imageFN: 'ToolRotate', helpText: 'Rotate subject atoms.', mnemonic: '' },\n    { id: ToolBankItem.Pan, imageFN: 'ToolPan', helpText: 'Pan the viewport around the screen.', mnemonic: '' },\n    { id: ToolBankItem.Drag, imageFN: 'ToolDrag', helpText: 'Drag selected atoms to new positions.', mnemonic: '' },\n    { id: ToolBankItem.Erasor, imageFN: 'ToolErasor', helpText: 'Delete atoms or bonds by selecting.', mnemonic: 'Delete' },\n    { id: ToolBankItem.BondOrder0, imageFN: 'BondZero', helpText: 'Create or change a bond to zero order.', mnemonic: 'Shift+0', 'key': ')' },\n    { id: ToolBankItem.BondOrder1, imageFN: 'BondOne', helpText: 'Create or change a bond to single.', mnemonic: 'Shift+1', 'key': '!' },\n    { id: ToolBankItem.BondOrder2, imageFN: 'BondTwo', helpText: 'Create or change a bond to double.', mnemonic: 'Shift+2', 'key': '@' },\n    { id: ToolBankItem.BondOrder3, imageFN: 'BondThree', helpText: 'Create or change a bond to triple.', mnemonic: 'Shift+3', 'key': '#' },\n    { id: ToolBankItem.BondUnknown, imageFN: 'BondSquig', helpText: 'Create or change a bond to unknown stereochemistry.', mnemonic: 'Shift+4', 'key': '$' },\n    { id: ToolBankItem.BondInclined, imageFN: 'BondUp', helpText: 'Create or change a bond to up-wedge.', mnemonic: 'Shift+5', 'key': '%' },\n    { id: ToolBankItem.BondDeclined, imageFN: 'BondDown', helpText: 'Create or change a bond to down-wedge.', mnemonic: 'Shift+6', 'key': '^' },\n    { id: ToolBankItem.RingAliph, imageFN: 'ToolRing', helpText: 'Create plain ring.', mnemonic: 'Shift+7', 'key': '&' },\n    { id: ToolBankItem.RingArom, imageFN: 'ToolArom', helpText: 'Create aromatic ring.', mnemonic: 'Shift+8', 'key': '*' },\n    { id: ToolBankItem.AtomPlus, imageFN: 'AtomPlus', helpText: 'Increase charge on atom.', mnemonic: '' },\n    { id: ToolBankItem.AtomMinus, imageFN: 'AtomMinus', helpText: 'Decrease charge on atom.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'C', 'text': 'C', helpText: 'Change elements to Carbon.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'N', 'text': 'N', helpText: 'Change elements to Nitrogen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'O', 'text': 'O', helpText: 'Change elements to Oxygen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'S', 'text': 'S', helpText: 'Change elements to Sulfur.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'P', 'text': 'P', helpText: 'Change elements to Phosphorus.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'H', 'text': 'H', helpText: 'Change elements to Hydrogen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'F', 'text': 'F', helpText: 'Change elements to Fluorine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'Cl', 'text': 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'Br', 'text': 'Br', helpText: 'Change elements to Bromine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'A', 'text': 'A', helpText: 'Pick other element.', mnemonic: '' }\n];\nexport class ToolBank extends ButtonBank {\n    constructor(owner) {\n        super();\n        this.owner = owner;\n    }\n    update() {\n        for (let btn of TOOLS_MAIN)\n            this.buttons.push(btn);\n        this.buttonView.setSelectedButton('arrow');\n    }\n    hitButton(id) {\n        this.buttonView.setSelectedButton(id);\n    }\n    claimKey(event) {\n        for (let item of TOOLS_MAIN) {\n            if (ButtonBank.matchKey(event, item.mnemonic, item.key)) {\n                this.hitButton(item.id);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=ToolBank.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CoordUtil } from '../data/CoordUtil';\nimport { DataSheetStream } from '../data/DataSheetStream';\nimport { Molecule } from '../data/Molecule';\nimport { MoleculeStream } from '../data/MoleculeStream';\nimport { MolUtil } from '../data/MolUtil';\nimport { PolymerBlock } from '../data/PolymerBlock';\nimport { SketchUtil } from '../data/SketchUtil';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ButtonView, ButtonViewPosition } from '../ui/ButtonView';\nimport { angleDiff, clone, DEGRAD, eventCoords, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CommandBank } from './CommandBank';\nimport { ContextSketch } from './ContextSketch';\nimport { DraggingTool, DrawCanvas } from './DrawCanvas';\nimport { EditAtom } from './EditAtom';\nimport { EditBond } from './EditBond';\nimport { EditPolymer } from './EditPolymer';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { FusionBank, TemplateBank } from './TemplateBank';\nimport { ToolBank, ToolBankItem } from './ToolBank';\nclass Sketcher extends DrawCanvas {\n    constructor() {\n        super();\n        this.callbackSpecialPaste = null;\n        this.inDialog = false;\n        this.initialFocus = true;\n        this.useToolBank = true;\n        this.lowerToolBank = false;\n        this.useCommandBank = true;\n        this.lowerCommandBank = false;\n        this.useTemplateBank = true;\n        this.lowerTemplateBank = false;\n        this.debugOutput = undefined;\n        this.beenSetup = false;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.fadeWatermark = 0;\n        this.toolView = null;\n        this.commandView = null;\n        this.templateView = null;\n        this.proxyClip = null;\n        this.proxyMenu = null;\n    }\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    defineMolecule(mol, withAutoScale = true, withStashUndo = false, keepSelect = false) {\n        if (mol.compareTo(this.mol) == 0)\n            return;\n        if (withStashUndo)\n            this.stashUndo();\n        this.stopTemplateFusion();\n        this.mol = mol.clone();\n        if (this.callbackChangeMolecule)\n            this.callbackChangeMolecule(this.mol);\n        this.guidelines = [];\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let sprout of SketchUtil.guidelineSprouts(this.mol, n))\n                this.guidelines.push(sprout);\n        }\n        if (!this.beenSetup)\n            return;\n        if (!keepSelect) {\n            this.currentAtom = this.currentBond = 0;\n            this.selectedMask = null;\n        }\n        this.stereo = null;\n        this.hoverAtom = 0;\n        this.hoverBond = 0;\n        if (!withAutoScale)\n            this.renderMolecule();\n        else\n            this.autoScale();\n    }\n    defineClipboard(proxy) {\n        this.proxyClip = proxy;\n    }\n    defineContext(proxy) {\n        this.proxyMenu = proxy;\n    }\n    defineMoleculeString(molsk, withAutoScale, withStashUndo) {\n        this.defineMolecule(Molecule.fromString(molsk), withAutoScale, withStashUndo);\n    }\n    defineRenderPolicy(policy) {\n        this.policy = policy;\n        this.pointScale = policy.data.pointScale;\n    }\n    defineBackground(borderCol, borderRad, bgCol) {\n        if (borderCol != null)\n            this.border = borderCol;\n        if (borderRad != null)\n            this.borderRadius = borderRad;\n        if (bgCol != null)\n            this.background = bgCol;\n    }\n    clearMolecule() { this.defineMolecule(new Molecule(), true, true); }\n    getMolecule() { return this.mol.clone(); }\n    setup(callback) {\n        this.beenSetup = true;\n        if (this.mol == null)\n            this.mol = new Molecule();\n        if (this.policy == null) {\n            this.policy = RenderPolicy.defaultColourOnWhite();\n            this.pointScale = this.policy.data.pointScale;\n        }\n        this.layoutMolecule();\n        this.centreAndShrink();\n        this.redrawMetaVector();\n        if (callback)\n            callback();\n    }\n    setupAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => this.setup(() => resolve()));\n        });\n    }\n    render(parent) {\n        super.render(parent);\n        this.centreAndShrink();\n        this.redraw();\n        let reserveHeight = 0;\n        if (this.useCommandBank) {\n            this.commandView = new ButtonView(ButtonViewPosition.Bottom, 0, 0, this.width, this.height);\n            if (this.lowerCommandBank)\n                this.commandView.lowerBank();\n            this.commandView.setHasBigButtons(false);\n            this.commandView.pushBank(new CommandBank(this));\n            this.commandView.render(this.container);\n            reserveHeight = this.commandView.height;\n        }\n        if (this.useToolBank) {\n            this.toolView = new ButtonView(ButtonViewPosition.Left, 0, 0, this.width, this.height - reserveHeight);\n            if (this.lowerToolBank)\n                this.toolView.lowerBank();\n            this.toolView.setHasBigButtons(false);\n            this.toolView.pushBank(new ToolBank(this));\n            this.toolView.render(this.container);\n        }\n        if (this.useTemplateBank) {\n            this.templateView = new ButtonView(ButtonViewPosition.Right, 0, 0, this.width, this.height - reserveHeight);\n            if (this.lowerTemplateBank)\n                this.templateView.lowerBank();\n            this.templateView.setHasBigButtons(true);\n            this.templateView.pushBank(new TemplateBank(this, null));\n            this.templateView.render(this.container);\n        }\n        this.container.onClick((event) => this.mouseClick(event));\n        this.container.onDblClick((event) => this.mouseDoubleClick(event));\n        this.container.onMouseDown((event) => this.mouseDown(event));\n        this.container.onMouseUp((event) => this.mouseUp(event));\n        this.container.onMouseOver((event) => this.mouseOver(event));\n        this.container.onMouseLeave((event) => this.mouseOut(event));\n        this.container.onMouseMove((event) => this.mouseMove(event));\n        this.container.onKeyPress((event) => this.keyPressed(event));\n        this.container.onKeyDown((event) => this.keyDown(event));\n        this.container.onKeyUp((event) => this.keyUp(event));\n        this.container.onTouchStart((event) => this.touchStart(event));\n        this.container.onTouchMove((event) => this.touchMove(event));\n        this.container.onTouchCancel((event) => this.touchCancel(event));\n        this.container.onTouchEnd((event) => this.touchEnd(event));\n        this.contentDOM.onContextMenu((event) => this.contextMenu(event));\n        this.container.el.addEventListener('dragover', (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            event.dataTransfer.dropEffect = 'copy';\n        });\n        this.container.el.addEventListener('drop', (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            this.dropInto(event.dataTransfer);\n        });\n        if (this.initialFocus)\n            this.grabFocus();\n    }\n    get decoration() { return this.viewOpt.decoration; }\n    set decoration(decoration) { if (this.viewOpt.decoration != decoration) {\n        this.viewOpt.decoration = decoration;\n        this.renderMolecule();\n    } }\n    get showOxState() { return this.viewOpt.showOxState; }\n    set showOxState(showOxState) { if (this.viewOpt.showOxState != showOxState) {\n        this.viewOpt.showOxState = showOxState;\n        this.renderMolecule();\n    } }\n    get showQuery() { return this.viewOpt.showQuery; }\n    set showQuery(showQuery) { if (this.viewOpt.showQuery != showQuery) {\n        this.viewOpt.showQuery = showQuery;\n        this.renderMolecule();\n    } }\n    get showArtifacts() { return this.viewOpt.showArtifacts; }\n    set showArtifacts(showArtifacts) { if (this.viewOpt.showArtifacts != showArtifacts) {\n        this.viewOpt.showArtifacts = showArtifacts;\n        this.renderMolecule();\n    } }\n    changeSize(width, height) {\n        if (width == this.width && height == this.height)\n            return;\n        this.width = width;\n        this.height = height;\n        for (let widget of [this.container, this.canvasUnder, this.canvasMolecule, this.canvasOver]) {\n            widget.css({ 'width': `${width}px`, 'height': `${height}px` });\n        }\n        for (let btnv of [this.commandView, this.toolView, this.templateView])\n            if (btnv) {\n                btnv.setParentSize(width, height);\n                btnv.refreshBank();\n            }\n        this.autoScale();\n    }\n    showMessage(msg, isError = false) {\n        let watermark = ++this.fadeWatermark;\n        this.divMessage.css({ 'color': isError ? '#FF0000' : '#008000' });\n        this.divMessage.setText(msg);\n        let szLeft = (this.toolView == null ? 0 : this.toolView.width) + 2;\n        let szRight = (this.templateView == null ? 0 : this.templateView.width) + 2;\n        let szBottom = (this.commandView == null ? 0 : this.commandView.height) + 2;\n        this.divMessage.css({ 'left': szLeft + 'px' });\n        this.divMessage.css({ 'width': (this.width - szLeft - szRight) + 'px' });\n        this.divMessage.css({ 'height': (this.height - szBottom) + 'px' });\n        window.setTimeout(() => {\n            if (watermark == this.fadeWatermark)\n                this.divMessage.setText('');\n        }, 5000);\n    }\n    clearMessage() {\n        if (this.divMessage.getText() == '')\n            return;\n        this.fadeWatermark++;\n        this.divMessage.setText('');\n    }\n    autoScale() {\n        this.pointScale = this.policy.data.pointScale;\n        this.layoutMolecule();\n        this.centreAndShrink();\n        this.redrawMetaVector();\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    anySelected() {\n        if (this.selectedMask == null)\n            return false;\n        for (let n = 0; n < this.selectedMask.length; n++)\n            if (this.selectedMask[n])\n                return true;\n        return false;\n    }\n    setSelected(atom, sel) {\n        if (this.selectedMask == null) {\n            this.selectedMask = new Array(this.mol.numAtoms);\n            for (let n = this.selectedMask.length - 1; n >= 0; n--)\n                this.selectedMask[n] = false;\n        }\n        while (this.selectedMask.length < this.mol.numAtoms) {\n            this.selectedMask.push(false);\n        }\n        this.selectedMask[atom - 1] = sel;\n        this.delayedRedraw();\n    }\n    changeCurrentAtom(atom) {\n        if (this.currentAtom == atom)\n            return;\n        this.currentAtom = atom;\n        this.currentBond = 0;\n        this.delayedRedraw();\n    }\n    changeCurrentBond(bond) {\n        if (this.currentBond == bond)\n            return;\n        this.currentBond = bond;\n        this.currentAtom = 0;\n        this.delayedRedraw();\n    }\n    clearSubject() {\n        if (this.currentAtom == 0 && this.currentBond == 0 && Vec.allFalse(this.selectedMask))\n            return;\n        this.currentAtom = 0;\n        this.currentBond = 0;\n        this.selectedMask = Vec.booleanArray(false, this.mol.numAtoms);\n        this.delayedRedraw();\n    }\n    setState(state, withStashUndo = true) {\n        this.stopTemplateFusion();\n        if (state.mol != null)\n            this.defineMolecule(state.mol.clone(), false, withStashUndo, true);\n        if (state.currentAtom >= 0)\n            this.currentAtom = state.currentAtom;\n        if (state.currentBond >= 0)\n            this.currentBond = state.currentBond;\n        if (state.selectedMask != null)\n            this.selectedMask = state.selectedMask == null ? null : state.selectedMask.slice(0);\n        this.delayedRedraw();\n    }\n    stashUndo() {\n        let state = this.getState();\n        this.undoStack.push(state);\n        while (this.undoStack.length > Sketcher.UNDO_SIZE) {\n            this.undoStack.splice(0, 1);\n        }\n        this.redoStack = [];\n    }\n    setPermutations(perms) {\n        this.templatePerms = perms;\n        this.pickTemplatePermutation(0);\n        this.fusionBank = new FusionBank(this);\n        this.templateView.pushBank(this.fusionBank);\n        if (this.mol.numAtoms == 0)\n            this.centreAndShrink();\n    }\n    stopTemplateFusion() {\n        if (this.fusionBank != null)\n            this.templateView.popBank();\n    }\n    clearPermutations() {\n        if (this.templatePerms == null)\n            return;\n        this.templatePerms = null;\n        this.delayedRedraw();\n        this.fusionBank = null;\n    }\n    templateAccept() {\n        let mol = Molecule.fromString(this.templatePerms[this.currentPerm].mol);\n        this.templateView.popBank();\n        this.defineMolecule(mol, false, true, false);\n    }\n    templateRotate(dir) {\n        let idx = (this.currentPerm + dir) % this.templatePerms.length;\n        if (idx < 0)\n            idx += this.templatePerms.length;\n        this.pickTemplatePermutation(idx);\n    }\n    canUndo() { return this.undoStack.length > 0; }\n    canRedo() { return this.redoStack.length > 0; }\n    performUndo() {\n        if (this.undoStack.length == 0)\n            return;\n        let state = this.getState();\n        this.redoStack.push(state);\n        this.setState(this.undoStack.pop(), false);\n    }\n    performRedo() {\n        if (this.redoStack.length == 0)\n            return;\n        let state = this.getState();\n        this.undoStack.push(state);\n        this.setState(this.redoStack.pop(), false);\n    }\n    performCopy(mol) {\n        if (!mol)\n            mol = this.getMolecule();\n        if (this.proxyClip)\n            this.proxyClip.setString(mol.toString());\n    }\n    performCopySelection(andCut) {\n        new MoleculeActivity(this.getState(), andCut ? ActivityType.Cut : ActivityType.Copy, {}, this).execute();\n    }\n    performPaste() {\n        if (this.proxyClip && this.proxyClip.canAlwaysGet()) {\n            let txt = this.proxyClip.getString();\n            this.pasteText(txt);\n        }\n    }\n    performActivity(activity, param = {}) {\n        new MoleculeActivity(this.getState(), activity, param, this).execute();\n    }\n    zoom(mag) {\n        let cx = 0.5 * this.width, cy = 0.5 * this.height;\n        let newScale = Math.min(10 * this.policy.data.pointScale, Math.max(0.1 * this.policy.data.pointScale, this.pointScale * mag));\n        if (newScale == this.pointScale)\n            return;\n        this.offsetX = cx - (newScale / this.pointScale) * (cx - this.offsetX);\n        this.offsetY = cy - (newScale / this.pointScale) * (cy - this.offsetY);\n        this.pointScale = newScale;\n        this.layoutMolecule();\n        this.redrawMetaVector();\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    editCurrent() {\n        if (this.currentBond > 0)\n            this.editBond(this.currentBond);\n        else\n            this.editAtom(this.currentAtom);\n    }\n    pasteText(str) {\n        const pasteLocal = () => {\n            let mol = MoleculeStream.readUnknown(str);\n            if (!mol) {\n                let ds = DataSheetStream.readXML(str);\n                if (ds) {\n                    outer: for (let r = 0; r < ds.numRows; r++)\n                        for (let c = 0; c < ds.numCols; c++)\n                            if (ds.colType(c) == \"molecule\" && ds.notNull(r, c)) {\n                                mol = ds.getMolecule(r, c);\n                                break outer;\n                            }\n                }\n            }\n            if (mol != null)\n                this.pasteMolecule(mol);\n            else\n                alert('Text from clipboard is not a valid molecule.');\n        };\n        if (this.callbackSpecialPaste) {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                let mol = yield this.callbackSpecialPaste(str);\n                if (mol)\n                    this.pasteMolecule(mol);\n                else\n                    pasteLocal();\n            }))();\n        }\n        else\n            pasteLocal();\n    }\n    pasteMolecule(mol) {\n        if (this.mol.numAtoms == 0) {\n            this.defineMolecule(mol, true, true, true);\n            return;\n        }\n        let molact = new MoleculeActivity(this.getState(), ActivityType.QueryPaste, { qmol: mol });\n        molact.execute();\n        if (molact.output.mol) {\n            this.defineMolecule(molact.output.mol, false, true, true);\n            return;\n        }\n        let param = { fragNative: mol.toString() };\n        new MoleculeActivity(this.getState(), ActivityType.TemplateFusion, param, this).execute();\n    }\n    pickTemplatePermutation(idx) {\n        let perm = this.templatePerms[idx];\n        this.currentPerm = idx;\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    performPolymerBlock(atoms) {\n        let dlg = new EditPolymer(this.mol, atoms, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        this.inDialog = true;\n        dlg.open();\n    }\n    grabFocus() {\n        this.container.grabFocus();\n    }\n    hasFocus() {\n        return this.container.hasFocus();\n    }\n    centreAndShrink() {\n        if (this.mol.numAtoms == 0 || this.layout == null) {\n            this.offsetX = 0.5 * this.width;\n            this.offsetY = 0.5 * this.height;\n            this.pointScale = this.policy.data.pointScale;\n            return;\n        }\n        let bounds = this.layout.determineBoundary(0);\n        let limW = this.width - 6, limH = this.height - 6;\n        let natW = bounds[2] - bounds[0], natH = bounds[3] - bounds[1];\n        let scale = 1;\n        if (natW > limW) {\n            let down = limW / natW;\n            scale *= down;\n            natW *= down;\n            natH *= down;\n        }\n        if (natH > limH) {\n            let down = limH / natH;\n            scale *= down;\n            natW *= down;\n            natH *= down;\n        }\n        if (scale < 1) {\n            this.pointScale *= scale;\n            this.layout.offsetEverything(this.offsetX * scale, this.offsetY * scale);\n            this.layout.scaleEverything(scale);\n            bounds = this.layout.determineBoundary(0);\n        }\n        let dx = 0.5 * (limW - natW) - bounds[0], dy = 0.5 * (limH - natH) - bounds[1];\n        this.offsetX += dx;\n        this.offsetY += dy;\n        this.layout.offsetEverything(dx, dy);\n    }\n    layoutTemplatePerm() {\n        if (this.currentPerm < 0 || this.templatePerms == null)\n            return;\n        let perm = this.templatePerms[this.currentPerm];\n        let tpolicy = new RenderPolicy(this.policy.data);\n        tpolicy.data.foreground = 0x808080;\n        tpolicy.data.atomCols = tpolicy.data.atomCols.slice(0);\n        for (let n in tpolicy.data.atomCols)\n            tpolicy.data.atomCols[n] = 0x808080;\n        let effects = new RenderEffects();\n        let layout = new ArrangeMolecule(Molecule.fromString(perm.display), this, tpolicy, effects);\n        layout.arrange();\n        perm.metavec = new MetaVector();\n        new DrawMolecule(layout, perm.metavec).draw();\n    }\n    renderMolecule() {\n        this.layoutMolecule();\n        this.redrawMetaVector();\n        this.delayedRedraw();\n    }\n    pickObjectCanvas(x, y) {\n        if (this.layout == null)\n            return 0;\n        if (this.toolView != null) {\n            let pos1 = this.container.offset(), pos2 = this.toolView.contentDOM.offset();\n            if (this.toolView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        if (this.commandView != null) {\n            let pos1 = this.container.offset(), pos2 = this.commandView.contentDOM.offset();\n            if (this.commandView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        if (this.templateView != null) {\n            let pos1 = this.container.offset(), pos2 = this.templateView.contentDOM.offset();\n            if (this.templateView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        return super.pickObjectCanvas(x, y);\n    }\n    updateHoverCursor(x, y) {\n        let tool = this.toolView ? this.toolView.selectedButton : '';\n        let toolApplies = tool && tool != ToolBankItem.Pan && tool != ToolBankItem.Rotate;\n        let mouseObj = 0;\n        if (this.dragType == DraggingTool.None && toolApplies) {\n            mouseObj = this.pickObject(x, y);\n        }\n        let mouseAtom = mouseObj > 0 ? mouseObj : 0, mouseBond = mouseObj < 0 ? -mouseObj : 0;\n        let abbrevThen = this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom) ? this.hoverAtom : 0;\n        let abbrevNow = mouseAtom > 0 && MolUtil.hasAbbrev(this.mol, mouseAtom) ? mouseAtom : 0;\n        if (mouseAtom != this.hoverAtom || mouseBond != this.hoverBond) {\n            this.hoverAtom = mouseAtom;\n            this.hoverBond = mouseBond;\n            if (abbrevThen != abbrevNow) {\n                this.layoutMolecule();\n                this.redrawMetaVector();\n            }\n            this.delayedRedraw();\n        }\n    }\n    determineDragGuide(order) {\n        if (this.opAtom == 0 || this.mol.atomAdjCount(this.opAtom) == 0) {\n            let g = {\n                atom: this.opAtom,\n                orders: [order],\n                x: [],\n                y: [],\n                sourceX: this.opAtom == 0 ? this.clickX : this.angToX(this.mol.atomX(this.opAtom)),\n                sourceY: this.opAtom == 0 ? this.clickY : this.angToY(this.mol.atomY(this.opAtom)),\n                destX: [],\n                destY: []\n            };\n            let mx = this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom);\n            let my = this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom);\n            for (let n = 0; n < 12; n++) {\n                let theta = TWOPI * n / 12;\n                let dx = Molecule.IDEALBOND * Math.cos(theta), dy = Molecule.IDEALBOND * Math.sin(theta);\n                g.x.push(mx + dx);\n                g.y.push(my + dy);\n                g.destX.push(g.sourceX + dx * this.pointScale);\n                g.destY.push(g.sourceY - dy * this.pointScale);\n            }\n            return [g];\n        }\n        if (this.guidelines == null)\n            return null;\n        let best = null, single = null;\n        for (let n = 0; n < this.guidelines.length; n++) {\n            let g = this.guidelines[n];\n            if (g.atom != this.opAtom)\n                continue;\n            if (g.orders.indexOf(order) >= 0) {\n                best = g;\n                break;\n            }\n            if (g.orders.indexOf(1) >= 0)\n                single = g;\n        }\n        if (best == null)\n            best = single;\n        if (best == null)\n            return [];\n        let g = clone(best);\n        g.sourceX = this.angToX(this.mol.atomX(g.atom));\n        g.sourceY = this.angToY(this.mol.atomY(g.atom));\n        g.destX = [];\n        g.destY = [];\n        for (let n = 0; n < g.x.length; n++) {\n            g.destX.push(this.angToX(g.x[n]));\n            g.destY.push(this.angToY(g.y[n]));\n        }\n        return [g];\n    }\n    determineMoveGuide() {\n        let subj = this.subjectAtoms(false, true);\n        if (subj.length == 0 || subj.length == this.mol.numAtoms)\n            return null;\n        let guides = [];\n        for (let n = 0; n < this.guidelines.length; n++) {\n            let g = this.guidelines[n];\n            if (g.orders.indexOf(1) < 0 || subj.indexOf(g.atom) >= 0)\n                continue;\n            g = clone(g);\n            g.sourceX = this.angToX(this.mol.atomX(g.atom));\n            g.sourceY = this.angToY(this.mol.atomY(g.atom));\n            g.destX = [];\n            g.destY = [];\n            for (let i = 0; i < g.x.length; i++) {\n                g.destX.push(this.angToX(g.x[i]));\n                g.destY.push(this.angToY(g.y[i]));\n            }\n            guides.push(g);\n        }\n        return guides;\n    }\n    editAtom(atom) {\n        let dlg = new EditAtom(this.mol, atom, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        if (atom == 0 && this.mol.numAtoms > 0) {\n            let box = this.mol.boundary();\n            dlg.newX = box.maxX() + Molecule.IDEALBOND;\n            dlg.newY = box.midY();\n        }\n        this.inDialog = true;\n        dlg.open();\n    }\n    editBond(bond) {\n        if (bond == 0)\n            return;\n        let dlg = new EditBond(this.mol, bond, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        this.inDialog = true;\n        dlg.open();\n    }\n    hitArrowKey(dx, dy) {\n        let watermark = ++this.cursorWatermark;\n        this.cursorDX += dx;\n        this.cursorDY += dy;\n        setTimeout(() => {\n            if (watermark == this.cursorWatermark)\n                this.cursorJumpDirection();\n        }, 100);\n    }\n    cursorJumpDirection() {\n        let theta = Math.atan2(this.cursorDY, this.cursorDX);\n        if (this.currentAtom > 0)\n            this.jumpFromCurrentAtom(theta);\n        else if (this.currentBond > 0)\n            this.jumpFromCurrentBond(theta);\n        else\n            this.jumpFromNowhere(theta);\n        this.cursorDX = 0;\n        this.cursorDY = 0;\n        this.cursorWatermark = 0;\n    }\n    jumpFromCurrentAtom(theta) {\n        let adj = this.mol.atomAdjList(this.currentAtom);\n        let closest = 0, closestDelta = Number.MAX_VALUE;\n        for (let a of adj) {\n            let dx = this.mol.atomX(a) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(a) - this.mol.atomY(this.currentAtom);\n            let adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n            if (delta < 35.0 * DEGRAD && delta < closestDelta)\n                [closest, closestDelta] = [a, delta];\n        }\n        if (closest > 0) {\n            this.changeCurrentBond(this.mol.findBond(this.currentAtom, closest));\n            return;\n        }\n        let best = 0, bestScore = Number.MIN_VALUE;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (n != this.currentAtom && adj.indexOf(n) < 0) {\n                let dx = this.mol.atomX(n) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(n) - this.mol.atomY(this.currentAtom);\n                let adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n                if (delta > 45.0 * DEGRAD)\n                    continue;\n                let cosdelta = Math.cos(delta);\n                let score = Math.pow(cosdelta, 2) / (norm2_xy(dx, dy) + 0.001);\n                if (score > bestScore)\n                    [best, bestScore] = [n, score];\n            }\n        if (best > 0)\n            this.changeCurrentAtom(best);\n    }\n    jumpFromCurrentBond(theta) {\n        let [bfr, bto] = this.mol.bondFromTo(this.currentBond);\n        let bondTheta = Math.atan2(this.mol.atomY(bto) - this.mol.atomY(bfr), this.mol.atomX(bto) - this.mol.atomX(bfr));\n        if (Math.abs(angleDiff(theta, bondTheta)) < 50.0 * DEGRAD)\n            this.changeCurrentAtom(bto);\n        if (Math.abs(angleDiff(theta, bondTheta + Math.PI)) < 50.0 * DEGRAD)\n            this.changeCurrentAtom(bfr);\n    }\n    jumpFromNowhere(theta) {\n        if (this.mol.numAtoms == 0)\n            return;\n        if (this.mol.numAtoms == 1) {\n            this.changeCurrentAtom(1);\n            return;\n        }\n        let cx = 0, cy = 0;\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            cx += this.mol.atomX(n);\n            cy += this.mol.atomY(n);\n        }\n        let inv = 1.0 / this.mol.numAtoms;\n        cx *= inv;\n        cy *= inv;\n        let best = 0, bestScore = Number.MIN_VALUE;\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let dx = this.mol.atomX(n) - cx, dy = this.mol.atomY(n) - cy, atheta = Math.atan2(dy, dx);\n            let cosdelta = Math.cos(Math.abs(angleDiff(theta + Math.PI, atheta)));\n            let score = cosdelta * norm_xy(dx, dy);\n            if (score > bestScore)\n                [best, bestScore] = [n, score];\n        }\n        if (best > 0)\n            this.changeCurrentAtom(best);\n    }\n    createRing(rsz, aromatic) {\n        const { mol } = this;\n        let rx = null, ry = null;\n        if (this.currentAtom > 0) {\n            let dx = 0, dy = 0, adj = mol.atomAdjList(this.currentAtom);\n            let x0 = mol.atomX(this.currentAtom), y0 = mol.atomY(this.currentAtom);\n            for (let a of adj) {\n                dx -= mol.atomX(a) - x0;\n                dy -= mol.atomY(a) - y0;\n            }\n            if (Math.abs(dx) < 0.001 && Math.abs(dy) < 0.001) {\n                if (adj.length >= 2) {\n                    let theta = adj.map((a) => Math.atan2(mol.atomY(a) - x0, mol.atomX(a) - y0));\n                    Vec.sort(theta);\n                    let best = Number.POSITIVE_INFINITY;\n                    for (let n = 0; n < theta.length; n++) {\n                        let th = angleDiff(theta[(n + 1) % theta.length], theta[n]);\n                        let lx = Math.cos(th), ly = Math.sin(th), score = CoordUtil.congestionPoint(mol, x0 + lx, y0 + ly);\n                        if (score < best)\n                            [best, dx, dy] = [score, lx, ly];\n                    }\n                }\n                else\n                    [dx, dy] = [1, 0];\n            }\n            [rx, ry] = SketchUtil.proposeAtomRing(this.mol, rsz, this.currentAtom, dx, dy);\n        }\n        else if (this.currentBond > 0) {\n            let a1 = mol.bondFrom(this.currentBond), a2 = mol.bondTo(this.currentBond);\n            let x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), ox = y1 - y2, oy = x2 - x1;\n            let [dx, dy] = CoordUtil.congestionPoint(mol, cx - ox, cy - oy) < CoordUtil.congestionPoint(mol, cx + ox, cy + oy) ? [-ox, -oy] : [ox, oy];\n            [rx, ry] = SketchUtil.proposeBondRing(this.mol, rsz, this.currentBond, dx, dy);\n        }\n        else {\n            let x = 0, y = 0;\n            if (mol.numAtoms > 0) {\n                let bound = mol.boundary();\n                [x, y] = [bound.maxX() + Molecule.IDEALBOND, bound.midY()];\n            }\n            [rx, ry] = SketchUtil.proposeNewRing(this.mol, rsz, x, y, 0, -1, false);\n        }\n        if (!rx)\n            return;\n        let param = {\n            ringX: rx,\n            ringY: ry,\n            aromatic: aromatic\n        };\n        let molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n        molact.execute();\n    }\n    ctrlArrowKey(dx, dy) {\n        let watermark = ++this.cursorWatermark;\n        this.cursorDX += dx;\n        this.cursorDY += dy;\n        setTimeout(() => {\n            if (watermark == this.cursorWatermark) {\n                this.sproutDirection(this.cursorDX, this.cursorDY);\n                this.cursorDX = this.cursorDY = 0;\n            }\n        }, 100);\n    }\n    sproutDirection(deltaX, deltaY) {\n        new MoleculeActivity(this.getState(), ActivityType.SproutDirection, { deltaX, deltaY }, this).execute();\n    }\n    mouseClick(event) {\n        event.stopPropagation();\n        this.grabFocus();\n        return false;\n    }\n    mouseDoubleClick(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (this.toolView.selectedButton != ToolBankItem.Arrow)\n            return;\n        let xy = eventCoords(event, this.container);\n        let clickObj = this.pickObject(xy[0], xy[1]);\n        if (clickObj > 0) {\n            let atom = clickObj;\n            this.editAtom(atom);\n        }\n        else {\n            let bond = -clickObj;\n            this.editBond(bond);\n        }\n        return false;\n    }\n    mouseDown(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.clearMessage();\n        if (event.ctrlKey && !event.shiftKey && !event.altKey) {\n            this.contextMenu(event);\n            return;\n        }\n        let [x, y] = eventCoords(event, this.container);\n        this.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n        return false;\n    }\n    mouseUp(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.interactEnd(x, y);\n        return false;\n    }\n    mouseOver(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        this.updateLasso(x, y);\n        return false;\n    }\n    mouseOut(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        this.updateLasso(x, y);\n        return false;\n    }\n    mouseMove(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        if (this.dragType == DraggingTool.None)\n            return;\n        this.interactDrag(x, y);\n        return false;\n    }\n    keyPressed(event) {\n    }\n    keyDown(event) {\n        let key = event.key;\n        if (key == \"Escape\") {\n            for (let view of [this.templateView, this.commandView, this.toolView])\n                if (view != null && view.stackSize > 1) {\n                    view.popBank();\n                    event.preventDefault();\n                    event.stopPropagation();\n                    return;\n                }\n        }\n        let mod = (event.shiftKey ? 'S' : '') + (event.ctrlKey || event.metaKey ? 'C' : '') + (event.altKey ? 'A' : '');\n        let nomod = !event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey;\n        if (key == \"Enter\")\n            this.editCurrent();\n        else if (key == \"ArrowLeft\" && nomod)\n            this.hitArrowKey(-1, 0);\n        else if (key == \"ArrowRight\" && nomod)\n            this.hitArrowKey(1, 0);\n        else if (key == \"ArrowUp\" && nomod)\n            this.hitArrowKey(0, 1);\n        else if (key == \"ArrowDown\" && nomod)\n            this.hitArrowKey(0, -1);\n        else if (key == 'z' && mod == 'C')\n            this.performUndo();\n        else if (key == 'Z' && mod == 'SC')\n            this.performRedo();\n        else if (key == 'z' && nomod)\n            this.toolView.cycleSelected(-1);\n        else if (key == 'x' && nomod)\n            this.toolView.cycleSelected(1);\n        else if (this.toolView != null && this.toolView.topBank.claimKey(event)) { }\n        else if (this.commandView != null && this.commandView.topBank.claimKey(event)) { }\n        else if (this.templateView != null && this.templateView.topBank.claimKey(event)) { }\n        else if (key == '#' && mod == 'SC')\n            this.createRing(3, false);\n        else if (key == '$' && mod == 'SC')\n            this.createRing(4, false);\n        else if (key == '%' && mod == 'SC')\n            this.createRing(5, false);\n        else if (key == '^' && mod == 'SC')\n            this.createRing(6, false);\n        else if (key == '&' && mod == 'SC')\n            this.createRing(7, false);\n        else if (key == '3' && mod == 'CA')\n            this.createRing(3, true);\n        else if (key == '4' && mod == 'CA')\n            this.createRing(4, true);\n        else if (key == '5' && mod == 'CA')\n            this.createRing(5, true);\n        else if (key == '6' && mod == 'CA')\n            this.createRing(6, true);\n        else if (key == '7' && mod == 'CA')\n            this.createRing(7, true);\n        else if (key == 'c' && mod == 'C' && this.proxyClip)\n            this.proxyClip.triggerCopy(false);\n        else if (key == 'x' && mod == 'C' && this.proxyClip)\n            this.proxyClip.triggerCopy(true);\n        else if (key == 'v' && mod == 'C' && this.proxyClip && this.proxyClip.canAlwaysGet())\n            this.proxyClip.triggerPaste();\n        else if (key == \"ArrowLeft\" && mod == 'C')\n            this.ctrlArrowKey(-1, 0);\n        else if (key == \"ArrowRight\" && mod == 'C')\n            this.ctrlArrowKey(1, 0);\n        else if (key == \"ArrowUp\" && mod == 'C')\n            this.ctrlArrowKey(0, 1);\n        else if (key == \"ArrowDown\" && mod == 'C')\n            this.ctrlArrowKey(0, -1);\n        else if (key == '1' && mod == 'C')\n            this.sproutDirection(-1, -1);\n        else if (key == '2' && mod == 'C')\n            this.sproutDirection(0, -1);\n        else if (key == '3' && mod == 'C')\n            this.sproutDirection(1, -1);\n        else if (key == '4' && mod == 'C')\n            this.sproutDirection(-1, 0);\n        else if (key == '6' && mod == 'C')\n            this.sproutDirection(1, 0);\n        else if (key == '7' && mod == 'C')\n            this.sproutDirection(-1, 1);\n        else if (key == '8' && mod == 'C')\n            this.sproutDirection(0, 1);\n        else if (key == '9' && mod == 'C')\n            this.sproutDirection(1, 1);\n        else\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    keyUp(event) {\n    }\n    touchStart(event) {\n        let [x, y] = eventCoords(event.touches[0], this.container);\n        if (this.pickObjectCanvas(x, y) == null)\n            return;\n        this.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n        event.preventDefault();\n    }\n    touchMove(event) {\n        if (this.dragType != DraggingTool.None) {\n            let [x, y] = eventCoords(event.touches[0], this.container);\n            this.interactDrag(x, y);\n        }\n        event.preventDefault();\n    }\n    touchCancel(event) {\n    }\n    touchEnd(event) {\n        if (this.dragType != DraggingTool.None) {\n            let [x, y] = [this.mouseX, this.mouseY];\n            this.interactEnd(x, y);\n            event.preventDefault();\n        }\n    }\n    mouseWheel(event) {\n    }\n    contextMenu(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.dragType = DraggingTool.None;\n        if (!this.proxyMenu)\n            return;\n        let [x, y] = eventCoords(event, this.container);\n        let clickObj = this.pickObject(x, y);\n        if (clickObj > 0)\n            this.changeCurrentAtom(clickObj);\n        else if (clickObj < 0)\n            this.changeCurrentBond(-clickObj);\n        let state = this.getState();\n        let ctx = new ContextSketch(state, this, this.proxyClip);\n        let menu = ctx.populate();\n        this.proxyMenu.openContextMenu(menu, event);\n    }\n    interactStart(x, y, shiftKey, ctrlKey, altKey) {\n        this.dragType = DraggingTool.Press;\n        this.opBudged = false;\n        this.dragGuides = null;\n        this.mouseX = x;\n        this.mouseY = y;\n        this.clickX = x;\n        this.clickY = y;\n        let clickObj = this.pickObject(x, y);\n        this.opAtom = clickObj > 0 ? clickObj : 0;\n        this.opBond = clickObj < 0 ? -clickObj : 0;\n        this.opShift = shiftKey;\n        this.opCtrl = ctrlKey;\n        this.opAlt = altKey;\n        let tool = '';\n        if (this.toolView != null)\n            tool = this.toolView.selectedButton;\n        if (tool == ToolBankItem.Arrow) {\n            if (!this.opShift && !this.opCtrl && !this.opAlt) {\n                this.dragType = DraggingTool.Press;\n            }\n            else if (!this.opShift && !this.opCtrl && this.opAlt) {\n                this.dragType = DraggingTool.Pan;\n            }\n            else if (!this.opShift && this.opCtrl && this.opAlt) {\n                this.dragType = DraggingTool.Zoom;\n            }\n        }\n        else if (tool == ToolBankItem.Rotate) {\n            this.dragType = DraggingTool.Rotate;\n            this.toolRotateIncr = this.opShift ? 0 : 15 * DEGRAD;\n        }\n        else if (tool == ToolBankItem.Pan) {\n            this.dragType = DraggingTool.Pan;\n        }\n        else if (tool == ToolBankItem.Drag) {\n            this.dragType = DraggingTool.Move;\n            if (this.opAtom > 0)\n                this.dragGuides = this.determineMoveGuide();\n            this.delayedRedraw();\n        }\n        else if (tool == ToolBankItem.Erasor) {\n            this.dragType = DraggingTool.Erasor;\n            this.lassoX = [x];\n            this.lassoY = [y];\n            this.lassoMask = [];\n        }\n        else if (tool == ToolBankItem.RingAliph) {\n            this.dragType = DraggingTool.Ring;\n            this.toolRingArom = false;\n            this.toolRingFreeform = this.opShift;\n        }\n        else if (tool == ToolBankItem.RingArom) {\n            this.dragType = DraggingTool.Ring;\n            this.toolRingArom = true;\n            this.toolRingFreeform = this.opShift;\n        }\n        else if (tool == ToolBankItem.AtomPlus) {\n            this.dragType = DraggingTool.Charge;\n            this.toolChargeDelta = 1;\n        }\n        else if (tool == ToolBankItem.AtomMinus) {\n            this.dragType = DraggingTool.Charge;\n            this.toolChargeDelta = -1;\n        }\n        else if (tool.startsWith(ToolBankItem.BondPfx)) {\n            this.dragType = DraggingTool.Bond;\n            this.toolBondOrder = 1;\n            this.toolBondType = Molecule.BONDTYPE_NORMAL;\n            if (tool == ToolBankItem.BondOrder0)\n                this.toolBondOrder = 0;\n            else if (tool == ToolBankItem.BondOrder2)\n                this.toolBondOrder = 2;\n            else if (tool == ToolBankItem.BondOrder3)\n                this.toolBondOrder = 3;\n            else if (tool == ToolBankItem.BondUnknown)\n                this.toolBondType = Molecule.BONDTYPE_UNKNOWN;\n            else if (tool == ToolBankItem.BondInclined)\n                this.toolBondType = Molecule.BONDTYPE_INCLINED;\n            else if (tool == ToolBankItem.BondDeclined)\n                this.toolBondType = Molecule.BONDTYPE_DECLINED;\n            if (this.opBond > 0) {\n                let [bfr, bto] = this.mol.bondFromTo(this.opBond), inPoly = false;\n                for (let poly of new PolymerBlock(this.mol).getUnits()) {\n                    let in1 = poly.atoms.includes(bfr), in2 = poly.atoms.includes(bto);\n                    if ((in1 && !in2) || (in2 && !in1)) {\n                        inPoly = true;\n                        break;\n                    }\n                }\n                if (inPoly) {\n                    this.toolBondOrder = 0;\n                    this.toolBondType = Molecule.BONDTYPE_NORMAL;\n                }\n            }\n            if (this.opBond == 0)\n                this.dragGuides = this.determineDragGuide(this.toolBondOrder);\n        }\n        else if (tool.startsWith(ToolBankItem.ElementPfx)) {\n            this.dragType = DraggingTool.Atom;\n            this.toolAtomSymbol = tool.substring(ToolBankItem.ElementPfx.length);\n            this.dragGuides = this.determineDragGuide(1);\n        }\n    }\n    interactDrag(x, y) {\n        if (!this.opBudged) {\n            let dx = x - this.clickX, dy = y - this.clickY;\n            if (dx * dx + dy * dy > 2 * 2)\n                this.opBudged = true;\n        }\n        if (this.dragType == DraggingTool.Press && this.opAtom == 0 && this.opBond == 0 && this.opBudged) {\n            this.dragType = DraggingTool.Lasso;\n            this.lassoX = [x];\n            this.lassoY = [y];\n            this.lassoMask = [];\n        }\n        if (this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) {\n            this.updateLasso(x, y);\n        }\n        else if (this.dragType == DraggingTool.Pan) {\n            let dx = x - this.mouseX, dy = y - this.mouseY;\n            if (dx != 0 || dy != 0) {\n                this.offsetX += dx;\n                this.offsetY += dy;\n                this.layout.offsetEverything(dx, dy);\n                this.metavec.transformPrimitives(dx, dy, 1, 1);\n                if (this.currentPerm >= 0 && this.templatePerms != null) {\n                    let perm = this.templatePerms[this.currentPerm];\n                    perm.metavec.transformPrimitives(dx, dy, 1, 1);\n                }\n                this.delayedRedraw();\n            }\n            this.mouseX = x;\n            this.mouseY = y;\n        }\n        else if (this.dragType == DraggingTool.Zoom) {\n            let dy = y - this.mouseY;\n            if (dy != 0) {\n                dy = Math.min(50, Math.max(-50, dy));\n                let newScale = this.pointScale * (1 - dy * 0.01);\n                newScale = Math.min(10, Math.max(0.1, newScale));\n                let newOX = this.clickX - (newScale / this.pointScale) * (this.clickX - this.offsetX);\n                let newOY = this.clickY - (newScale / this.pointScale) * (this.clickY - this.offsetY);\n                this.pointScale = newScale;\n                this.offsetX = newOX;\n                this.offsetY = newOY;\n                this.delayedRedraw();\n            }\n            this.mouseX = x;\n            this.mouseY = y;\n        }\n        else if (this.dragType == DraggingTool.Rotate ||\n            this.dragType == DraggingTool.Move ||\n            this.dragType == DraggingTool.Atom ||\n            this.dragType == DraggingTool.Bond ||\n            this.dragType == DraggingTool.Ring) {\n            this.mouseX = x;\n            this.mouseY = y;\n            this.delayedRedraw();\n        }\n    }\n    interactEnd(x, y) {\n        if (this.opBudged)\n            this.interactEndDrag(x, y);\n        else\n            this.interactEndClick(x, y);\n        this.dragType = DraggingTool.None;\n        this.lassoX = null;\n        this.lassoY = null;\n        this.lassoMask = null;\n        this.dragGuides = null;\n        this.delayedRedraw();\n    }\n    interactEndClick(x, y) {\n        let clickObj = this.pickObject(x, y);\n        let clickAtom = clickObj > 0 ? clickObj : 0, clickBond = clickObj < 0 ? -clickObj : 0;\n        if (this.dragType == DraggingTool.Press) {\n            if (!this.opShift && !this.opCtrl && !this.opAlt) {\n                if (clickAtom == 0 && clickBond == 0) {\n                    if (Vec.anyTrue(this.selectedMask))\n                        this.selectedMask = null;\n                    else if (this.currentAtom > 0)\n                        this.currentAtom = 0;\n                    else if (this.currentBond > 0)\n                        this.currentBond = 0;\n                }\n                else if (clickAtom != this.currentAtom || clickBond != this.currentBond) {\n                    this.currentAtom = clickAtom;\n                    this.currentBond = clickBond;\n                }\n                else if (clickAtom == 0 && clickBond == 0 && this.anySelected()) {\n                    this.selectedMask = null;\n                }\n            }\n            else if (this.opShift && !this.opCtrl && !this.opAlt) {\n                if (clickAtom > 0)\n                    this.setSelected(clickAtom, !this.getSelected(clickAtom));\n            }\n        }\n        else if (this.dragType == DraggingTool.Move) {\n            if (clickObj == 0) {\n                if (Vec.anyTrue(this.selectedMask))\n                    this.selectedMask = null;\n                else if (this.currentAtom > 0)\n                    this.currentAtom = 0;\n                else if (this.currentBond > 0)\n                    this.currentBond = 0;\n            }\n        }\n        else if (this.dragType == DraggingTool.Erasor) {\n            if (this.opAtom > 0 || this.opBond > 0) {\n                let state = Object.assign(Object.assign({}, this.getState()), { 'currentAtom': this.opAtom, 'currentBond': this.opBond, 'selectedMask': [] });\n                let molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Atom) {\n            let element = this.toolAtomSymbol;\n            if (element == 'A') {\n                let dlg = new EditAtom(this.mol, this.opAtom, this.proxyClip, () => {\n                    let autoscale = this.mol.numAtoms == 0;\n                    if (this.mol.compareTo(dlg.mol) != 0)\n                        this.defineMolecule(dlg.mol, autoscale, true);\n                    dlg.close();\n                });\n                if (this.opAtom == 0) {\n                    dlg.newX = this.xToAng(this.clickX);\n                    dlg.newY = this.yToAng(this.clickY);\n                }\n                dlg.callbackClose = () => {\n                    this.inDialog = false;\n                    this.grabFocus();\n                };\n                this.inDialog = true;\n                dlg.open();\n            }\n            else if (element) {\n                let param = { element, keepAbbrev: true };\n                if (this.opAtom == 0) {\n                    let x = this.xToAng(this.clickX), y = this.yToAng(this.clickY);\n                    if (this.mol.numAtoms == 0) {\n                        this.offsetX = this.clickX;\n                        this.offsetY = this.clickY;\n                        x = 0;\n                        y = 0;\n                    }\n                    param.positionX = x;\n                    param.positionY = y;\n                }\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: 0, selectedMask: null });\n                let molact = new MoleculeActivity(state, ActivityType.Element, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Charge) {\n            if (this.opAtom > 0 || this.opBond > 0) {\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: this.opBond, selectedMask: null });\n                let molact = new MoleculeActivity(state, ActivityType.Charge, { delta: this.toolChargeDelta }, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Bond) {\n            let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: this.opBond, selectedMask: null });\n            let molact;\n            if (this.toolBondType == Molecule.BONDTYPE_NORMAL)\n                molact = new MoleculeActivity(state, ActivityType.BondOrder, { order: this.toolBondOrder }, this);\n            else\n                molact = new MoleculeActivity(state, ActivityType.BondType, { type: this.toolBondType }, this);\n            molact.execute();\n        }\n    }\n    interactEndDrag(x, y) {\n        if (this.dragType == DraggingTool.Lasso) {\n            if (this.lassoX.length >= 2) {\n                this.calculateLassoMask();\n                for (let n = 1; n <= this.mol.numAtoms; n++)\n                    if (this.getLassoed(n) && !this.getSelected(n))\n                        this.setSelected(n, true);\n            }\n            this.lassoX = null;\n            this.lassoY = null;\n            this.lassoMask = null;\n            this.delayedRedraw();\n        }\n        else if (this.dragType == DraggingTool.Erasor) {\n            let any = false;\n            for (let n = 0; n < this.lassoMask.length; n++)\n                if (this.lassoMask[n]) {\n                    any = true;\n                    break;\n                }\n            if (any) {\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: 0, currentBond: 0, selectedMask: this.lassoMask });\n                let molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Rotate) {\n            let [x0, y0, theta, magnitude] = this.determineDragTheta();\n            let degrees = -theta * RADDEG;\n            let mx = this.xToAng(x0), my = this.yToAng(y0);\n            let molact = new MoleculeActivity(this.getState(), ActivityType.Rotate, { theta: degrees, centreX: mx, centreY: my }, this);\n            molact.execute();\n        }\n        else if (this.dragType == DraggingTool.Move) {\n            let [dx, dy] = this.determineMoveDelta();\n            let scale = this.pointScale;\n            let molact = new MoleculeActivity(this.getState(), ActivityType.Move, { refAtom: this.opAtom, deltaX: dx / scale, deltaY: -dy / scale }, this);\n            molact.execute();\n        }\n        else if (this.dragType == DraggingTool.Ring) {\n            let [ringX, ringY] = this.determineFauxRing();\n            if (ringX != null) {\n                let param = {\n                    ringX: ringX,\n                    ringY: ringY,\n                    aromatic: this.toolRingArom\n                };\n                let molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Atom && this.opAtom > 0) {\n            let x2 = this.mouseX, y2 = this.mouseY;\n            let snapTo = this.snapToGuide(x2, y2);\n            if (snapTo != null)\n                [x2, y2] = snapTo;\n            let param = {\n                order: 1,\n                type: Molecule.BONDTYPE_NORMAL,\n                element: this.toolAtomSymbol,\n                x1: this.mol.atomX(this.opAtom),\n                y1: this.mol.atomY(this.opAtom),\n                x2: this.xToAng(x2),\n                y2: this.yToAng(y2)\n            };\n            if (this.toolAtomSymbol == 'A')\n                param.element = window.prompt('Enter element symbol:', '');\n            if (param.element != '') {\n                let molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Bond) {\n            let x2 = this.mouseX, y2 = this.mouseY;\n            let snapTo = this.snapToGuide(x2, y2);\n            if (snapTo != null) {\n                [x2, y2] = snapTo;\n                if (this.opBond > 0) {\n                    let toObj = this.pickObject(x2, y2, { noAtoms: true });\n                    if (toObj < 0) {\n                        this.connectPolymerBlock(this.opBond, -toObj);\n                        return;\n                    }\n                }\n            }\n            let param = {\n                order: this.toolBondOrder,\n                type: this.toolBondType,\n                element: 'C',\n                x1: this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom),\n                y1: this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom),\n                x2: this.xToAng(x2),\n                y2: this.yToAng(y2)\n            };\n            let molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n            molact.execute();\n        }\n    }\n    dropInto(transfer) {\n        let items = transfer.items, files = transfer.files;\n        const SUFFIXES = ['.el', '.mol'];\n        const MIMES = ['text/plain', 'chemical/x-sketchel', 'x-mdl-molfile'];\n        for (let n = 0; n < items.length; n++) {\n            if (items[n].kind == 'string' && MIMES.indexOf(items[n].type) >= 0) {\n                items[n].getAsString((str) => {\n                    let mol = Molecule.fromString(str);\n                    if (mol != null) {\n                        this.defineMolecule(mol, true, true, true);\n                    }\n                    else\n                        console.log('Dragged data is not a SketchEl molecule: ' + str);\n                });\n                return;\n            }\n        }\n        for (let n = 0; n < files.length; n++) {\n            for (let sfx of SUFFIXES)\n                if (files[n].name.endsWith(sfx)) {\n                    let reader = new FileReader();\n                    reader.onload = (event) => {\n                        let str = reader.result;\n                        let mol = MoleculeStream.readUnknown(str.toString());\n                        if (mol != null) {\n                            this.defineMolecule(mol, true, true);\n                        }\n                        else\n                            console.log('Dragged file is not a recognised molecule: ' + str);\n                    };\n                    reader.readAsText(files[n]);\n                    return;\n                }\n        }\n    }\n    connectPolymerBlock(bond1, bond2) {\n        let [atomIn1, atomOut1] = this.mol.bondFromTo(bond1), [atomIn2, atomOut2] = this.mol.bondFromTo(bond2);\n        let state = this.getState();\n        let polymer = new PolymerBlock(state.mol);\n        let poly1 = null, poly2 = null;\n        let highName = 0;\n        for (let poly of polymer.getUnits()) {\n            if (!poly1 || poly.atoms.length < poly1.atoms.length) {\n                let ina = poly.atoms.includes(atomIn1), inb = poly.atoms.includes(atomOut1);\n                if (ina && !inb)\n                    poly1 = poly;\n                else if (inb && !ina)\n                    [poly1, atomIn1, atomOut1] = [poly, atomOut1, atomIn1];\n            }\n            if (!poly2 || poly.atoms.length < poly2.atoms.length) {\n                let ina = poly.atoms.includes(atomIn2), inb = poly.atoms.includes(atomOut2);\n                if (ina && !inb)\n                    poly2 = poly;\n                else if (inb && !ina)\n                    [poly2, atomIn2, atomOut2] = [poly, atomOut2, atomIn2];\n            }\n            for (let nameList of poly.atomName.values())\n                highName = Math.max(highName, Vec.max(nameList));\n        }\n        if (!poly1 || !poly2)\n            return false;\n        let name1 = Vec.first(poly1.atomName.get(atomIn1));\n        if (!name1) {\n            name1 = ++highName;\n            poly1.atomName.set(atomIn1, [name1]);\n        }\n        let name2 = Vec.first(poly2.atomName.get(atomIn2));\n        if (!name2) {\n            name2 = ++highName;\n            poly2.atomName.set(atomIn2, [name2]);\n        }\n        poly1.bondIncl.set(bond1, Vec.append(poly1.bondIncl.get(bond1), name2));\n        poly2.bondIncl.set(bond2, Vec.append(poly2.bondIncl.get(bond2), name1));\n        polymer.rewriteMolecule();\n        this.setState(state);\n    }\n}\nSketcher.UNDO_SIZE = 20;\nexport { Sketcher };\n//# sourceMappingURL=Sketcher.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\n\tUnit definitions and conversions. Units are preferentially stored by URI, displayed by common name, and interconverted\n\tas necessary to other schemes, such as MInChI mnemonics.\n*/\n\nexport enum StandardUnits\n{\n\t// concentration units (these are favoured for most purposes)\n\tpc = 'http://purl.obolibrary.org/obo/UO_0000187', // percent (of arbitrary type)\n\tpcWV = 'http://purl.obolibrary.org/obo/UO_0000164', // percent (weight per volume),\n\tpcWW = 'http://purl.obolibrary.org/obo/UO_0000163', // percent (weight per weight),\n\tpcVV = 'http://purl.obolibrary.org/obo/UO_0000205', // percent (volume per volume),\n\tpcMM = 'http://purl.obolibrary.org/obo/UO_0000076', // percent (mole per mole)\n\tratio = 'http://purl.obolibrary.org/obo/UO_0000190', // ratio (numerator only; nominally by volume)\n\tmol_L = 'http://purl.obolibrary.org/obo/UO_0000062', // moles per litre (mol/L)\n\tmmol_L = 'http://purl.obolibrary.org/obo/UO_0000063', // milli-moles per litre\n\tumol_L = 'http://purl.obolibrary.org/obo/UO_0000064', // micro-moles per litre\n\tnmol_L = 'http://purl.obolibrary.org/obo/UO_0000065', // nano-moles per litre\n\tpmol_L = 'http://purl.obolibrary.org/obo/UO_0000066', // pico-moles per litre\n\t/* could be handy to allow these... maybe\n\tlogM = 'http://www.bioassayontology.org/bao#BAO_0000101', // log10 of mol/L\n\tperM = 'http://www.bioassayontology.org/bao#BAO_0000102', // -log10 of mol/L */\n\tg_L = 'http://purl.obolibrary.org/obo/UO_0000175', // grams per litre (g/L)\n\tmg_L = 'http://purl.obolibrary.org/obo/UO_0000273', // milligrams per litre (aka micrograms per mL)\n\tug_L = 'http://purl.obolibrary.org/obo/UO_0000275', // micrograms per litre (aka nanograms per mL)\n\tmol_kg = 'http://purl.obolibrary.org/obo/UO_0000068', // moles per kilogram\n\n\t// absolute units (these are often converted to concentrations when possible)\n\tkg = 'http://purl.obolibrary.org/obo/UO_0000009', // kilogram\n\tg = 'http://purl.obolibrary.org/obo/UO_0000021', // gram\n\tmg = 'http://purl.obolibrary.org/obo/UO_0000022', // milligram\n\tug = 'http://purl.obolibrary.org/obo/UO_0000023', // microgram\n\tng = 'http://purl.obolibrary.org/obo/UO_0000024', // nanogram\n\tL = 'http://purl.obolibrary.org/obo/UO_0000099', // litre\n\tmL = 'http://purl.obolibrary.org/obo/UO_0000098', // millilitre\n\tuL = 'http://purl.obolibrary.org/obo/UO_0000101', // microlitre\n\tnL = 'http://purl.obolibrary.org/obo/UO_0000102', // nanolitre\n\tmol = 'http://purl.obolibrary.org/obo/UO_0000013', // mole\n\tmmol = 'http://purl.obolibrary.org/obo/UO_0000040', // millimole\n\tumol = 'http://purl.obolibrary.org/obo/UO_0000039', // micromole\n\tnmol = 'http://purl.obolibrary.org/obo/UO_0000041', // nanomole\n\n\t// other\n\tppm = 'placeholder1',\n\tppb = 'placeholder2',\n}\n\nconst PAIR_UNIT_NAMES:any[] =\n[\n\t// form: [reference URI, primary display name, ...optional alternative names]\n\n\t[StandardUnits.pc, '%'],\n\t[StandardUnits.pcWV, 'w/v%'],\n\t[StandardUnits.pcWW, 'w/w%'],\n\t[StandardUnits.pcVV, 'v/v%'],\n\t[StandardUnits.pcMM, 'mol/mol%'],\n\t[StandardUnits.ratio, 'ratio'],\n\t[StandardUnits.mol_L, 'mol/L', 'M'],\n\t[StandardUnits.mmol_L, 'mmol/L', 'mM'],\n\t[StandardUnits.umol_L, '\\u{03BC}mol/L', 'umol/L', 'uM'],\n\t[StandardUnits.nmol_L, 'nmol/L', 'nM'],\n\t[StandardUnits.pmol_L, 'pmol/L', 'pM'],\n\t/*[StandardUnits.logM, ''],\n\t[StandardUnits.perM, ''],*/\n\t[StandardUnits.g_L, 'g/L'],\n\t[StandardUnits.mg_L, 'mg/L'],\n\t[StandardUnits.ug_L, '\\u{03BC}g/L', 'ug/L'],\n\t[StandardUnits.mol_kg, 'mol/kg'],\n\n\t[StandardUnits.kg, 'kg'],\n\t[StandardUnits.g, 'g'],\n\t[StandardUnits.mg, 'mg'],\n\t[StandardUnits.ug, '\\u{03BC}g', 'ug'],\n\t[StandardUnits.ng, 'ng'],\n\t[StandardUnits.L, 'L'],\n\t[StandardUnits.mL, 'mL'],\n\t[StandardUnits.uL, '\\u{03BC}L', 'uL'],\n\t[StandardUnits.nL, 'nL'],\n\t[StandardUnits.mol, 'mol'],\n\t[StandardUnits.mmol, 'mmol'],\n\t[StandardUnits.umol, '\\u{03BC}mol', 'umol'],\n\t[StandardUnits.nmol, 'nmol'],\n\n\t[StandardUnits.ppm, 'ppm'],\n\t[StandardUnits.ppb, 'ppb'],\n];\n\nconst PAIR_UNIT_MINCHI:any[] =\n[\n\t// [enum type, MInChI type, scaling] ... scaling factor is for going from standard to MInChI\n\t[StandardUnits.pc, 'pp', 1],\n\t[StandardUnits.pcWV, 'wv', 0.01],\n\t[StandardUnits.pcWW, 'wf', 0.01],\n\t[StandardUnits.pcVV, 'vf', 0.01],\n\t[StandardUnits.pcMM, 'mf', 0.01],\n\t[StandardUnits.ratio, 'rt', 1],\n\t[StandardUnits.mol_L, 'mr', 1],\n\t[StandardUnits.mmol_L, 'mr', 1E-3],\n\t[StandardUnits.umol_L, 'mr', 1E-6],\n\t[StandardUnits.nmol_L, 'mr', 1E-9],\n\t[StandardUnits.pmol_L, 'mr', 1E-12],\n\t/*[StandardUnits.logM, '', ],\n\t[StandardUnits.perM, '', ],*/\n\t[StandardUnits.g_L, 'wv', 1E-3],\n\t[StandardUnits.mg_L, 'wv', 1E-6],\n\t[StandardUnits.ug_L, 'wv', 1E-9],\n\t[StandardUnits.mol_kg, 'mb', 1],\n\t[StandardUnits.ppm, 'pp', 1E-6],\n\t[StandardUnits.ppb, 'pp', 1E-9],\n];\n\nexport class Units\n{\n\tpublic static STANDARD_LIST:string[] = []; // all of the applicable unit URIs\n\tpublic static COMMON_NAMES:string[] = []; // all of the preferred names (same order as above)\n\tpublic static URI_TO_NAME:Record<string, string> = {}; // each URI has one preferred display name\n\tpublic static NAME_TO_URI:Record<string, string> = {}; // multiple unit forms can point to the same URI\n\tpublic static URI_TO_MINCHI:Record<string, [string, number]> = {}; // URI to MInChI, when applicable\n\n\tpublic static setup():void\n\t{\n\t\tfor (let pair of PAIR_UNIT_NAMES)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1];\n\t\t\tthis.STANDARD_LIST.push(uri);\n\t\t\tthis.COMMON_NAMES.push(name);\n\t\t\tthis.URI_TO_NAME[uri] = name;\n\t\t\t\n\t\t\t//this.NAME_TO_URI[name] = uri; (some of them have alternate names)\n\t\t\tfor (let n = 1; n <= pair.length; n++) this.NAME_TO_URI[pair[n]] = uri;\n\t\t}\n\t\tfor (let pair of PAIR_UNIT_MINCHI)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1], scale:number = pair[2];\n\t\t\tthis.URI_TO_MINCHI[uri] = [name, scale];\n\t\t}\n\t\tthis.setup = () => {}; // calling it again is a nop\n\t}\n\n\tpublic static standardList():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.STANDARD_LIST;\n\t}\n\tpublic static commonNames():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.COMMON_NAMES;\n\t}\n\tpublic static uriToName(uri:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.URI_TO_NAME[uri];\n\t}\n\tpublic static nameToURI(name:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.NAME_TO_URI[name];\n\t}\n\n\t// converts a uri/value pair into mnemonic/value, ready to be exported to MInChI-style units; if the URI is not in the list of\n\t// things that can be converted, returns nulls\n\tpublic static convertToMInChI(uri:string, values:number[]):[string, number[]]\n\t{\n\t\tlet [mnemonic, scale] = this.URI_TO_MINCHI[uri] || [null, null];\n\t\tif (!mnemonic) return [null, null];\n\t\treturn [mnemonic, Vec.mul(values, scale)];\n\t}\n}\n\n","import { Sketcher } from '../sketcher/Sketcher';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { dom } from '../util/dom';\nimport { Dialog } from './Dialog';\nexport class EditCompound extends Dialog {\n    constructor(mol, parent = null) {\n        super(parent);\n        this.mol = mol;\n        this.sketcher = new Sketcher();\n        this.proxyClip = null;\n        this.proxyMenu = null;\n        this.callbackSave = null;\n        this.title = 'Edit Compound';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    onSave(callback) {\n        this.callbackSave = callback;\n    }\n    getMolecule() { return this.sketcher.getMolecule(); }\n    getSketcher() { return this.sketcher; }\n    defineClipboard(proxy) {\n        this.proxyClip = proxy;\n        let handler = new ClipboardProxyHandler();\n        handler.copyEvent = (andCut, proxy) => {\n            this.sketcher.performCopySelection(andCut);\n            return true;\n        };\n        handler.pasteEvent = (proxy) => {\n            this.sketcher.pasteText(proxy.getString());\n            return true;\n        };\n        proxy.pushHandler(handler);\n        this.sketcher.defineClipboard(proxy);\n    }\n    defineContext(proxy) {\n        this.proxyMenu = proxy;\n        this.sketcher.defineContext(this.proxyMenu);\n    }\n    close() {\n        if (this.proxyClip)\n            this.proxyClip.popHandler();\n        super.close();\n    }\n    populate() {\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnClear.onClick(() => this.sketcher.clearMolecule());\n        this.btnCopy = dom('<button class=\"wmk-button wmk-button-default\">Copy</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnCopy.onClick(() => this.actionCopy());\n        buttons.append(this.domClose);\n        this.domClose.css({ 'margin-left': '0.5em' });\n        this.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnSave.onClick(() => { if (this.callbackSave)\n            this.callbackSave(this); });\n        let skw = 800, skh = 650;\n        let skdiv = dom('<div/>').appendTo(body).css({ 'width': `${skw}px`, 'height': `${skh}px` });\n        this.sketcher.setSize(skw, skh);\n        this.sketcher.defineMolecule(this.mol);\n        this.sketcher.setup(() => this.sketcher.render(skdiv));\n    }\n    actionCopy() {\n        this.sketcher.performCopySelection(false);\n    }\n    actionCut() {\n        this.sketcher.performCopySelection(true);\n    }\n    actionPaste() {\n        this.sketcher.performPaste();\n    }\n    actionUndo() {\n        this.sketcher.performUndo();\n    }\n    actionRedo() {\n        this.sketcher.performRedo();\n    }\n}\n//# sourceMappingURL=EditCompound.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {dom, DOM} from 'webmolkit/util/dom';\n\n/*\n\tWidget for editing a key/value pattern, whereby key/value pairs can be added and edited individually.\n*/\n\ninterface KeyValueWidgetLine\n{\n\tkey:string;\n\tvalue:string;\n\tinputKey?:DOM;\n\tinputValue?:DOM;\n}\n\nexport class KeyValueWidget extends Widget\n{\n\tprivate lines:KeyValueWidgetLine[] = [];\n\n\tprivate divGrid:DOM;\n\n\t// ------------ public methods ------------\n\n\tconstructor(dict:Record<string, string | string[]>, private callbackChange:(dict:Record<string, string | string[]>) => void)\n\t{\n\t\tsuper();\n\n\t\tfor (let key in dict)\n\t\t{\n\t\t\tlet value = dict[key];\n\t\t\tif (typeof value == 'string') this.lines.push({key, value});\n\t\t\telse if (Array.isArray(value)) for (let v of value) this.lines.push({key, 'value': v});\n\t\t}\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\t\t\n\t\tthis.divGrid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid', 'width': '100%', 'margin': '0'});\n\t\tthis.divGrid.css({'align-items': 'baseline', 'justify-content': 'start'});\n\t\tthis.divGrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tthis.divGrid.css({'grid-template-columns': '[start key] 1fr [value] 1fr [button] auto [end]'});\n\n\t\tthis.rebuildGrid();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate rebuildGrid():void\n\t{\n\t\tthis.divGrid.empty();\n\n\t\tlet row = 0;\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tlet line = this.lines[n];\n\n\t\t\trow++;\n\t\t\tlet divKey = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / key`});\n\t\t\tlet divValue = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / value`});\n\t\t\tlet divButton = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / button`});\n\n\t\t\tline.inputKey = dom('<input/>').appendTo(divKey).css({'width': '100%', 'padding': '0', 'font': 'inherit'});\n\t\t\tline.inputKey.setValue(line.key);\n\t\t\tline.inputKey.onInput(() => this.scrapeData());\n\n\t\t\tline.inputValue = dom('<input/>').appendTo(divValue).css({'width': '100%', 'padding': '0', 'font': 'inherit'});\n\t\t\tline.inputValue.setValue(line.value);\n\t\t\tline.inputValue.onInput(() => this.scrapeData());\n\n\t\t\tlet btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divButton);\n\t\t\tbtnDelete.setText('\\u{2716}');\n\t\t\tbtnDelete.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.lines.splice(n, 1);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.scrapeData();\n\t\t\t});\n\t\t}\n\n\t\trow++;\n\t\tlet divAdd = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / start / ${row} / end`, 'text-align': this.lines.length > 0 ? 'center' : 'left'});\n\t\tlet btnAdd = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divAdd);\n\t\tbtnAdd.setText('\\u{271A}');\n\t\tbtnAdd.onClick(() =>\n\t\t{\n\t\t\tthis.lines.push({key: '', value: ''});\n\t\t\tthis.rebuildGrid();\n\t\t\tthis.scrapeData();\n\t\t});\n\t}\n\n\tprivate scrapeData():void\n\t{\n\t\tlet dict:Record<string, string | string[]> = {};\n\t\tfor (let line of this.lines)\n\t\t{\n\t\t\tline.key = line.inputKey.getValue();\n\t\t\tline.value = line.inputValue.getValue();\n\t\t\tif (!line.key || !line.value) continue;\n\n\t\t\tlet dval = dict[line.key];\n\t\t\tif (!dval) dict[line.key] = line.value;\n\t\t\telse if (typeof dval == 'string') dict[line.key] = [dval, line.value];\n\t\t\telse if (Array.isArray(dval)) dval.push(line.value);\n\t\t}\n\t\t\n\t\tthis.callbackChange(dict);\n\t}\n}\n\n","import { dom, domLegacy } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nimport { empiricalScrollerSize, setBoundaryPixels } from '../util/util';\nimport { clearTooltip } from './Tooltip';\nconst CSS_POPUP = `\n\t*.wmk-popup\n\t{\n\t\tfont-family: 'Open Sans', sans-serif;\n\t}\n`;\nexport class Popup {\n    constructor(parent) {\n        this.popupBackground = 'white';\n        this.obscureOpacity = 0.2;\n        this.zindex = null;\n        this.callbackClose = null;\n        this.callbackPopulate = null;\n        this.parent = domLegacy(parent);\n        installInlineCSS('popup', CSS_POPUP);\n    }\n    onClose(callback) {\n        this.callbackClose = callback;\n    }\n    open() {\n        clearTooltip();\n        let body = dom(document.body);\n        let bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n        bg.css({ 'position': 'fixed' });\n        bg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        bg.css({ 'background-color': 'black', 'opacity': this.obscureOpacity });\n        let fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n        fg.css({ 'position': 'fixed' });\n        fg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        fg.onClick(() => this.close());\n        if (this.zindex > 0) {\n            bg.setCSS('z-index', this.zindex);\n            fg.setCSS('z-index', this.zindex + 1);\n        }\n        let pb = this.domPanelBoundary = dom('<div class=\"wmk-popup\"/>').appendTo(fg).css({ 'visibility': 'hidden' });\n        pb.onClick((event) => event.stopPropagation());\n        pb.css({ 'background-color': this.popupBackground, 'border': '1px solid black' });\n        pb.css({ 'position': 'absolute', 'overflow': 'auto' });\n        this.domBody = dom('<div/>').appendTo(pb).css({ 'padding': '5px' });\n        this.populate();\n        this.positionAndShow();\n    }\n    close() {\n        clearTooltip();\n        this.domPanelBoundary.remove();\n        this.domObscureBackground.remove();\n        this.domObscureForeground.remove();\n        if (this.callbackClose)\n            this.callbackClose(this);\n        clearTooltip();\n    }\n    bump() {\n        this.positionAndShow();\n    }\n    bodyDOM() { return this.domBody; }\n    populate() {\n        if (this.callbackPopulate)\n            this.callbackPopulate(this);\n        else\n            this.bodyDOM().setText('Empty popup.');\n    }\n    positionAndShow() {\n        clearTooltip();\n        let winW = window.innerWidth, winH = window.innerHeight;\n        const GAP = 2;\n        let client = this.parent.el.getBoundingClientRect();\n        let wx1 = client.left, wy1 = client.top, wx2 = client.right, wy2 = client.bottom;\n        let pb = this.domPanelBoundary;\n        let maxW = Math.max(wx1, winW - wx2) - 4;\n        pb.css({ 'max-width': maxW + 'px' });\n        let scrollSize = empiricalScrollerSize();\n        let setPosition = () => {\n            let popW = this.domBody.width(), popH = this.domBody.height();\n            let posX = 0, posY = 0;\n            if (wy2 + GAP + popH < winH)\n                posY = wy2 + GAP;\n            else if (wy1 - GAP - popH > 0)\n                posY = wy1 - GAP - popH;\n            else if (winH - wy2 > wy1) {\n                posY = wy2 + GAP;\n                popH = winH - posY - GAP;\n            }\n            else {\n                posY = GAP;\n                popH = wy1 - posY - GAP;\n            }\n            if (pb.height() > popH)\n                popW += scrollSize.w + 10;\n            if (wx1 + popW < winW)\n                posX = wx1;\n            else if (popW < wx2)\n                posX = wx2 - popW;\n            setBoundaryPixels(pb, posX, posY, popW, popH);\n            pb.css({ 'visibility': 'visible' });\n        };\n        setTimeout(() => setPosition());\n    }\n}\n//# sourceMappingURL=Popup.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {MixfileMetadatum} from '../data/Mixfile';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {installInlineCSS} from 'webmolkit/util/Theme';\nimport {OntologyTree, OntologyTreeTerm} from 'webmolkit/data/OntologyTree';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {addTooltip, clearTooltip} from 'webmolkit/ui/Tooltip';\nimport {escapeHTML} from 'webmolkit/util/util';\nimport {Popup} from 'webmolkit/ui/Popup';\n\n/*\n\tWidget for editing a list of metadata items.\n*/\n\nconst CSS_METADATAWIDGET = `\n\t*.wmk-metadataitem:hover\n\t{\n\t\tbackground-color: #C0C0FF;\n\t\tcursor: pointer;\n\t}\n`;\n\ninterface MetadataWidgetLine\n{\n\tdatum:MixfileMetadatum;\n}\n\nexport class MetadataWidget extends Widget\n{\n\tprivate lines:MetadataWidgetLine[] = [];\n\n\tprivate divGrid:DOM;\n\n\t// ------------ public methods ------------\n\n\tconstructor(metadata:MixfileMetadatum[], private callbackChange:(metadata:MixfileMetadatum[]) => void)\n\t{\n\t\tsuper();\n\n\t\tif (metadata) for (let datum of metadata) this.lines.push({'datum': datum});\n\n\t\tinstallInlineCSS('metadatawidget', CSS_METADATAWIDGET);\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.divGrid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid', 'width': '100%', 'margin': '0'});\n\t\tthis.divGrid.css({'align-items': 'baseline', 'justify-content': 'start'});\n\t\tthis.divGrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tthis.divGrid.css({'grid-template-columns': '[start content] 1fr [button] auto [end]'});\n\n\t\tthis.rebuildGrid();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate rebuildGrid():void\n\t{\n\t\tthis.divGrid.empty();\n\n\t\tlet renderTerm = (parent:DOM, item:number | string, line:MetadataWidgetLine, idx:number):void =>\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(parent);\n\t\t\tdiv.css({'padding': '0.2em', 'margin-right': '0.5em'});\n\t\t\tif (typeof item == 'string')\n\t\t\t{\n\t\t\t\tdiv.css({'background-color': idx == 0 ? '#D0D0D0' : '#D0D0FF', 'border-radius': '3px'});\n\t\t\t\tlet branch = OntologyTree.main.getBranch(item);\n\t\t\t\tif (Vec.notBlank(branch))\n\t\t\t\t{\n\t\t\t\t\tdiv.setText(branch[0].label);\n\t\t\t\t\taddTooltip(div, escapeHTML(branch[0].uri), null, 1000);\n\t\t\t\t}\n\t\t\t\telse div.setText(item);\n\t\t\t}\n\t\t\telse // number (or null, which is a pre-number)\n\t\t\t{\n\t\t\t\tlet input = dom('<input type=\"number\"/>').appendTo(div).css({'width': '5em', 'padding': '0', 'font': 'inherit'});\n\t\t\t\tif (item != null)\n\t\t\t\t{\n\t\t\t\t\tinput.css({'width': Math.max(5, item.toString().length) + 'em'});\n\t\t\t\t\tinput.setValue(item.toString());\n\t\t\t\t}\n\t\t\t\tinput.onInput(() =>\n\t\t\t\t{\n\t\t\t\t\tlet num = parseFloat(input.getValue());\n\t\t\t\t\tif (!isNaN(num)) (line.datum as number[])[idx] = num;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tlet row = 0;\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tlet line = this.lines[n];\n\n\t\t\trow++;\n\t\t\tlet divContent = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / content`});\n\t\t\tlet divButton = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / button`});\n\n\t\t\tdivContent.css({'display': 'flex', 'flex-wrap': 'wrap', 'justify-content': 'flex-start', 'align-items': 'baseline'});\n\t\t\tif (Array.isArray(line.datum))\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < line.datum.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet item = line.datum[i];\n\t\t\t\t\trenderTerm(divContent, item, line, i);\n\t\t\t\t}\n\n\t\t\t\tif (line.datum.length > 1)\n\t\t\t\t{\n\t\t\t\t\tlet btnBack = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\t\t\tbtnBack.setText('\\u{21E6}');\n\t\t\t\t\tbtnBack.css({'margin-right': '0.5em'});\n\t\t\t\t\tbtnBack.onClick(() =>\n\t\t\t\t\t{\n\t\t\t\t\t\tlet list = line.datum as any[];\n\t\t\t\t\t\tlist.splice(list.length - 1, 1);\n\t\t\t\t\t\tif (typeof Vec.last(list) != 'string') list.splice(list.length - 1, 1);\n\t\t\t\t\t\tthis.rebuildGrid();\n\t\t\t\t\t\tthis.triggerModified();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse renderTerm(divContent, line.datum, line, 0);\n\n\t\t\tlet btnAssert = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\tbtnAssert.setText('\\u{21E9}');\n\t\t\tbtnAssert.css({'margin-right': '0.5em'});\n\t\t\tbtnAssert.onClick(() => this.pickExtraTerm(btnAssert, line, false));\n\t\t\tlet btnProp = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\tbtnProp.setText('\\u{21E8}');\n\t\t\tbtnProp.css({'margin-right': '0.5em'});\n\t\t\tbtnProp.onClick(() => this.pickExtraTerm(btnProp, line, true));\n\n\t\t\tlet btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divButton);\n\t\t\tbtnDelete.setText('\\u{2716}');\n\t\t\tbtnDelete.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.lines.splice(n, 1);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t}\n\n\t\trow++;\n\t\tlet divAdd = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / start / ${row} / end`, 'text-align': this.lines.length > 0 ? 'center' : 'left'});\n\t\tlet btnAdd = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divAdd);\n\t\tbtnAdd.setText('\\u{271A}');\n\t\tbtnAdd.onClick(() => this.pickNewTerm(btnAdd));\n\t}\n\n\tprivate triggerModified():void\n\t{\n\t\tlet metadata = this.lines.map((line) => line.datum);\n\t\tthis.callbackChange(metadata);\n\t}\n\n\tprivate pickNewTerm(divParent:DOM):void\n\t{\n\t\tlet branchList:OntologyTreeTerm[] = [];\n\t\tconst ROOTS = ['http://mixtures.io/rdf#MixtureMetadata'];\n\t\tfor (let rootURI of ROOTS) branchList.push(...OntologyTree.main.getBranchList(rootURI));\n\t\tlet popup = new Popup(divParent);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tthis.populateBranch(popup, branchList, (term) =>\n\t\t\t{\n\t\t\t\tthis.lines.push({datum: term.uri});\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t};\n\t\tpopup.open();\n\t}\n\n\tprivate pickExtraTerm(divParent:DOM, line:MetadataWidgetLine, isProperty:boolean):void\n\t{\n\t\tlet branchList:OntologyTreeTerm[] = [];\n\t\tconst ROOTS_ASSERT = ['http://mixtures.io/rdf#MixtureMetadata'];\n\t\tconst ROOTS_PROP = ['http://purl.obolibrary.org/obo/UO_0000000'];\n\t\tfor (let rootURI of (isProperty ? ROOTS_PROP : ROOTS_ASSERT)) branchList.push(...OntologyTree.main.getBranchList(rootURI));\n\t\tlet popup = new Popup(divParent);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tthis.populateBranch(popup, branchList, (term) =>\n\t\t\t{\n\t\t\t\tif (typeof line.datum == 'string') line.datum = [line.datum];\n\t\t\t\tif (isProperty) line.datum.push(null);\n\t\t\t\tline.datum.push(term.uri);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t};\n\t\tpopup.open();\n\t}\n\n\t// enumerates a list of clickable ontology tree items\n\tprivate populateBranch(popup:Popup, branchList:OntologyTreeTerm[], callbackClicked:(term:OntologyTreeTerm) => void):void\n\t{\n\t\tlet body = popup.bodyDOM();\n\n\t\tfor (let term of branchList)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(body);\n\t\t\tif (term.depth > 0)\n\t\t\t{\n\t\t\t\tdiv.css({'margin-left': (term.depth - 0.5) + 'em'});\n\t\t\t\tdom('<span>\\u{279E}</span>').appendTo(div).css({'color': '#A0A0A0', 'margin-right': '0.5em'});\n\t\t\t}\n\t\t\tlet span = dom('<span/>').appendTo(div).class('wmk-metadataitem');\n\t\t\tspan.setText(term.label);\n\t\t\taddTooltip(span, escapeHTML(term.uri), null, 2000);\n\t\t\tspan.onClick(() =>\n\t\t\t{\n\t\t\t\tclearTooltip();\n\t\t\t\tpopup.close();\n\t\t\t\tcallbackClicked(term);\n\t\t\t});\n\t\t}\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {ClipboardProxy, ClipboardProxyHandler} from 'webmolkit/ui/ClipboardProxy';\nimport {MixfileComponent} from '../data/Mixfile';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {OptionList} from 'webmolkit/ui/OptionList';\nimport {deepClone} from 'webmolkit/util/util';\nimport {installInlineCSS} from 'webmolkit/util/Theme';\nimport {InChI} from '../data/InChI';\nimport {KeyValueWidget} from './KeyValueWidget';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {MetadataWidget} from './MetadataWidget';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from '../data/Mixture';\nimport {Popup} from 'webmolkit/ui/Popup';\nimport {Units} from '../data/Units';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {Chemistry} from 'webmolkit/data/Chemistry';\n\n/*\n\tHigh level widget for the editing area for a mixture.\n*/\n\nconst CSS_EDITCOMPONENT = `\n\t*.wmk-editcomponent-input\n\t{\n\t}\n\t*.wmk-editcomponent-input::placeholder\n\t{\n\t\tfont-size: 70%;\n\t\tcolor: #D0D0D0;\n\t}\n\t*.wmk-editcomponent-units\n\t{\n\t\tcursor: pointer;\n\t}\n\t*.wmk-editcomponent-units:hover\n\t{\n\t\tbackground-color: #C0C0FF;\n\t\tcursor: pointer;\n\t}\n`;\n\nenum QuantityType\n{\n\tValue = 'Value',\n\tRange = 'Range',\n\tRatio = 'Ratio'\n}\nconst RELATION_VALUES:string[] = ['=', '~', '<', '<=', '>', '>='];\nconst RELATION_LABELS:string[] = ['=', '~', '&lt;', '&le;', '&gt;', '&ge;'];\n\nexport class EditComponent extends Dialog\n{\n\tpublic proxyClip:ClipboardProxy = null;\n\n\tprivate component:MixfileComponent;\n\n\tprivate btnSketch:DOM;\n\tprivate btnSave:DOM;\n\n\tprivate lineName:DOM;\n\tprivate optQuantType:OptionList;\n\tprivate dropQuantRel:DOM;\n\tprivate lineQuantVal1:DOM;\n\tprivate lineQuantVal2:DOM;\n\tprivate lineQuantUnits:DOM;\n\tprivate btnQuantUnits:DOM;\n\tprivate areaDescr:DOM = null;\n\tprivate areaSyn:DOM = null;\n\tprivate lineFormula:DOM;\n\tprivate divWeight:DOM;\n\tprivate lineInChI:DOM;\n\tprivate lineSMILES:DOM;\n\n\tprivate callbackSave:(source?:EditComponent) => void = null;\n\tprivate callbackSketch:(source?:EditComponent) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(component:MixfileComponent, private parentSize:[number, number], parent:DOM = null)\n\t{\n\t\tsuper(parent);\n\n\t\tthis.component = deepClone(component);\n\n\t\tthis.title = 'Edit Component';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t\t//this.maximumWidth = parentSize[0];\n\t\t//this.maximumHeight = parentSize[1];\n\n\t\tinstallInlineCSS('editcomponent', CSS_EDITCOMPONENT);\n\t}\n\n\tpublic onSave(callback:(source?:EditComponent) => void):void\n\t{\n\t\tthis.callbackSave = callback;\n\t}\n\tpublic onSketch(callback:(source?:EditComponent) => void):void\n\t{\n\t\tthis.callbackSketch = callback;\n\t}\n\n\tpublic getComponent():MixfileComponent {return this.component;}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\t// top section\n\n\t\tif (this.callbackSketch)\n\t\t{\n\t\t\tthis.btnSketch = dom('<button class=\"wmk-button wmk-button-default\">Sketch</button>').appendTo(buttons);\n\t\t\tthis.btnSketch.onClick(() => this.invokeSketcher());\n\t\t}\n\n\t\tbuttons.appendText(' ');\n\t\tbuttons.append(this.domClose); // easy way to reorder\n\n\t\tbuttons.appendText(' ');\n\t\tthis.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons);\n\t\tthis.btnSave.onClick(() => this.saveAndClose());\n\n\t\t// main section\n\n\t\tbody.css({'padding': '0 0 0 1em'});\n\t\tlet vertical = dom('<div/>').appendTo(body);\n\t\tvertical.css({'overflow-y': 'scroll', 'height': '100%'});\n\t\tvertical.css({'max-height': this.parentSize[1] + 'px'});\n\t\tvertical.css({'padding-right': '18px', 'padding-bottom': '10px'});\n\n\t\t// first batch of fields\n\n\t\tlet grid1 = this.fieldGrid().appendTo(vertical);\n\n\t\tthis.createFieldName(grid1, 1, 'Name', false);\n\t\tthis.lineName = this.createValueLine(grid1, 1);\n\t\tthis.lineName.setValue(this.component.name);\n\n\t\tthis.createFieldName(grid1, 2, 'Quantity', false);\n\t\tlet divQuant = dom('<div/>').appendTo(grid1);\n\t\tdivQuant.css({'grid-column': 'value', 'grid-row': '2'});\n\t\tthis.createQuantity(divQuant);\n\n\t\tthis.createFieldName(grid1, 3, 'Description', true);\n\t\tthis.areaDescr = this.createValueMultiline(grid1, 3);\n\n\t\tthis.createFieldName(grid1, 4, 'Synonyms', true);\n\t\tthis.areaSyn = this.createValueMultiline(grid1, 4);\n\n\t\tthis.areaDescr.setValue(this.component.description);\n\t\tif (this.component.synonyms) this.areaSyn.setValue(this.component.synonyms.join('\\n'));\n\n\t\t// second batch of fields\n\n\t\tlet grid2 = this.fieldGrid().appendTo(vertical);\n\t\tlet row = 0;\n\n\t\t//this.createFieldName(grid2, ++row, 'Formula', false);\n\t\trow++;\n\t\tthis.createFieldName(grid2, ++row, 'Formula', false);\n\t\tlet divFormula = this.createDiv(grid2, row).css({'display': 'flex', 'align-items': 'center'});\n\t\tthis.lineFormula = dom('<input/>').appendTo(divFormula).css({'flex-grow': '1', 'font': 'inherit'});\n\t\tthis.lineFormula.setValue(this.component.formula);\n\t\tthis.lineFormula.elInput.placeholder = this.calculateFormula();\n\t\tthis.lineFormula.onInput(() => this.calculateWeight());\n\t\tthis.divWeight = dom('<div/>').appendTo(divFormula).css({'flex-grow': '0'});\n\t\tthis.calculateWeight();\n\n\t\tthis.createFieldName(grid2, ++row, 'InChI', false);\n\t\tthis.lineInChI = this.createValueLine(grid2, row);\n\t\tthis.lineInChI.setValue(this.component.inchi);\n\n\t\tif (InChI.isAvailable() && this.component.molfile)\n\t\t{\n\t\t\tlet div = this.createDiv(grid2, ++row);\n\t\t\tlet btn = dom('<button class=\"wmk-button wmk-button-default\">Calculate from Structure</button>').appendTo(div);\n\t\t\tbtn.onClick(() => {this.calculateInChI().then();});\n\t\t}\n\n\t\tthis.createFieldName(grid2, ++row, 'SMILES', false);\n\t\tthis.lineSMILES = this.createValueLine(grid2, row);\n\t\tthis.lineSMILES.setValue(this.component.smiles);\n\n\t\tthis.createFieldName(grid2, ++row, 'Identifiers', true);\n\t\tlet editIdentifiers = new KeyValueWidget(this.component.identifiers, (dict) =>\n\t\t{\n\t\t\tthis.component.identifiers = dict;\n\t\t});\n\t\teditIdentifiers.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\n\t\tthis.createFieldName(grid2, ++row, 'Links', true);\n\t\tlet editLinks = new KeyValueWidget(this.component.links, (dict) =>\n\t\t{\n\t\t\tthis.component.links = dict;\n\t\t});\n\t\teditLinks.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\n\t\tif (OntologyTree.main && OntologyTree.main.getRoots().length > 0)\n\t\t{\n\t\t\tthis.createFieldName(grid2, ++row, 'Metadata', true);\n\t\t\tlet editMetadata = new MetadataWidget(this.component.metadata, (metadata) =>\n\t\t\t{\n\t\t\t\tthis.component.metadata = Vec.notBlank(metadata) ? metadata : undefined;\n\t\t\t});\n\t\t\teditMetadata.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\t\t}\n\n\t\tthis.lineName.grabFocus();\n\n\t\tfor (let dom of body.findAll('input')) dom.onKeyDown((event) => this.trapEscape(event, true));\n\t\tfor (let dom of body.findAll('textarea')) dom.onKeyDown((event) => this.trapEscape(event, false));\n\t\tfor (let dom of body.findAll('input,textarea')) dom.elInput.spellcheck = false;\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// assuming that something is different, refreshes the current component information and closes\n\tprivate saveAndClose():void\n\t{\n\t\tlet nullifyBlank = (str:string):string => str === '' ? null : str;\n\t\tlet splitLines = (str:string):string[] =>\n\t\t{\n\t\t\tlet lines = str.split('\\n').filter((line) => line.length > 0);\n\t\t\treturn lines.length > 0 ? lines : null;\n\t\t};\n\t\tlet splitKeys = (str:string):Record<string, any> =>\n\t\t{\n\t\t\tlet dict:Record<string, any> = null;\n\t\t\tfor (let line of str.split('\\n'))\n\t\t\t{\n\t\t\t\tlet eq = line.indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tif (dict == null) dict = {};\n\t\t\t\tdict[line.substring(0, eq)] = line.substring(eq + 1);\n\t\t\t}\n\t\t\treturn dict;\n\t\t};\n\n\t\tthis.component.name = nullifyBlank(this.lineName.getValue());\n\n\t\tlet qtype = this.optQuantType.getSelectedValue();\n\t\t[this.component.ratio, this.component.quantity, this.component.error] = [null, null, null];\n\t\tlet strQuant1 = this.lineQuantVal1.getValue().trim(), strQuant2 = this.lineQuantVal2.getValue().trim();\n\t\tif (qtype == QuantityType.Value)\n\t\t{\n\t\t\tif (strQuant1) this.component.quantity = parseFloat(strQuant1);\n\t\t\tif (strQuant2) this.component.error = parseFloat(strQuant2);\n\t\t\tthis.component.units = this.lineQuantUnits.getValue().trim();\n\t\t}\n\t\telse if (qtype == QuantityType.Range)\n\t\t{\n\t\t\tthis.component.quantity = [parseFloat(strQuant1), parseFloat(strQuant2)];\n\t\t\tthis.component.relation = null;\n\t\t\tthis.component.units = this.lineQuantUnits.getValue().trim();\n\t\t}\n\t\telse if (qtype == QuantityType.Ratio)\n\t\t{\n\t\t\tthis.component.ratio = [parseFloat(strQuant1), parseFloat(strQuant2)];\n\t\t\tthis.component.relation = null;\n\t\t\tthis.component.units = null;\n\t\t}\n\n\t\tif (!Mixture.hasQuantity(this.component))\n\t\t{\n\t\t\tthis.component.quantity = null;\n\t\t\tthis.component.error = null;\n\t\t\tthis.component.ratio = null;\n\t\t\tthis.component.units = null;\n\t\t\tthis.component.relation = null;\n\t\t}\n\n\t\tif (this.areaDescr) this.component.description = nullifyBlank(this.areaDescr.getValue());\n\n\t\tthis.component.synonyms = splitLines(this.areaSyn.getValue());\n\n\t\tthis.component.formula = nullifyBlank(this.lineFormula.getValue());\n\t\tthis.component.inchi = nullifyBlank(this.lineInChI.getValue());\n\t\tthis.component.smiles = nullifyBlank(this.lineSMILES.getValue());\n\n\t\t// remove explicit nulls, for clarity\n\t\t//Object.keys(this.component).forEach((key:string) => {if ((<any>this.component)[key] == null) delete (<any>this.component)[key];});\n\n\t\t//console.log(JSON.stringify(this.component));\n\t\tthis.callbackSave(this);\n\t}\n\n\t// change to sketch mode: close this dialog, save everything, then tell the parent to sketch instead\n\tprivate invokeSketcher():void\n\t{\n\t\tthis.saveAndClose();\n\t\tthis.callbackSketch(this);\n\t}\n\n\t// creates a 2-column grid for field/value entry\n\tprivate fieldGrid():DOM\n\t{\n\t\tlet div = dom('<div/>').css({'display': 'grid', 'width': '100%', 'margin': '1em 0 1em 0'});\n\t\tdiv.css({'align-items': 'center'}); // would be 'baseline', but breaks with textarea\n\t\tdiv.css({'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tdiv.css({'grid-template-columns': '[start field] max-content [value] 1fr [end]'});\n\t\treturn div;\n\t}\n\n\t// creates a field name for inclusion in the grid\n\tprivate createFieldName(parent:DOM, row:number, text:string, topAlign:boolean):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent);\n\t\tdiv.css({'grid-column': 'field', 'grid-row': row.toString(), 'align-self': topAlign ? 'baseline' : 'center'});\n\t\tif (topAlign) div.css({'padding-top': '0.2em'}); // baseline fudge\n\t\tdiv.css({'padding-right': '0.5em', 'font-weight': 'bold'});\n\t\tdiv.setText(text);\n\t\treturn div;\n\t}\n\n\t// returns single/multi-line editors\n\tprivate createValueLine(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent).css({'grid-area': `${row} / value`});\n\t\tlet input = dom('<input/>').appendTo(div);\n\t\tinput.css({'width': 'calc(100% - 4px)', 'padding': '0', 'font': 'inherit'});\n\t\treturn input;\n\t}\n\tprivate createValueMultiline(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent).css({'grid-area': `${row} / value`});\n\t\tlet area = dom('<textarea/>').appendTo(div);\n\t\tarea.attr({'rows': '5'});\n\t\tarea.css({'width': 'calc(100% - 4px)', 'padding': '0', 'font': 'inherit'});\n\t\treturn area;\n\t}\n\n\tprivate createDiv(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent);\n\t\tdiv.css({'grid-column': 'value', 'grid-row': row.toString()});\n\t\treturn div;\n\t}\n\n\t// make it so that line/text entry boxes trap the escape key to close the dialog box\n\tprivate trapEscape(event:KeyboardEvent, andEnter:boolean):void\n\t{\n\t\tif (event.keyCode == 27)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.close();\n\t\t}\n\t\telse if (andEnter && event.keyCode == 13)\n\t\t{\n\t\t\tif (this.interpretQuantString()) return;\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.saveAndClose();\n\t\t}\n\t}\n\n\t// creates the quantity data entry objects, which are somewhat fiddly and multistate\n\tprivate createQuantity(parent:DOM):void\n\t{\n\t\tlet flex = dom('<div/>').appendTo(parent);\n\t\tflex.css({'display': 'flex', 'align-items': 'center'});\n\t\tlet box = ():DOM => dom('<div style=\"padding-left: 0.5em;\"/>').appendTo(flex);\n\n\t\tthis.optQuantType = new OptionList([QuantityType.Value, QuantityType.Range, QuantityType.Ratio]);\n\t\tthis.optQuantType.render(flex);\n\n\t\tthis.dropQuantRel = this.makeDropdownGroup(box(), this.component.relation, RELATION_VALUES, RELATION_LABELS,\n\t\t\t\t\t\t\t\t\t(value:string, label:string) => {this.component.relation = value;});\n\n\t\tthis.lineQuantVal1 = dom('<input/>').appendTo(box()).class('wmk-editcomponent-input');\n\t\tthis.lineQuantVal1.attr({'size': '10'});\n\t\tthis.lineQuantVal1.onChange(() => this.interpretQuantString());\n\n\t\tlet spanGap = dom('<span/>').appendTo(flex).css({'padding': '0 0.5em 0 0.5em'});\n\n\t\tthis.lineQuantVal2 = dom('<input/>').appendTo(box()).class('wmk-editcomponent-input');\n\t\tthis.lineQuantVal2.attr({'size': '10'});\n\n\t\tlet qubox = box();\n\t\tthis.lineQuantUnits = dom('<input/>').appendTo(qubox).class('wmk-editcomponent-input');\n\t\tthis.lineQuantUnits.attr({'size': '10', 'placeholder': 'units'});\n\t\tthis.btnQuantUnits = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(qubox).css({'margin-left': '0.2em'});\n\t\tthis.btnQuantUnits.setText('\\u{25BC}');\n\t\tthis.btnQuantUnits.onClick(() => this.selectDropUnits());\n\n\t\tlet changeToValue = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'block');\n\t\t\tspanGap.setHTML('&plusmn;');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'inline-block');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'inline-block');\n\t\t};\n\t\tlet changeToRange = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'none');\n\t\t\tspanGap.setHTML('to');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'inline-block');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'inline-block');\n\t\t};\n\t\tlet changeToRatio = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'none');\n\t\t\tspanGap.setHTML('/');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'none');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'none');\n\t\t};\n\n\t\tif (this.component.ratio != null)\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Ratio);\n\t\t\tif (this.component.ratio)\n\t\t\t{\n\t\t\t\tlet [numer, denom] = this.component.ratio;\n\t\t\t\tthis.lineQuantVal1.setValue(numer.toString());\n\t\t\t\tthis.lineQuantVal2.setValue(denom.toString());\n\t\t\t}\n\t\t\tchangeToRatio();\n\t\t}\n\t\telse if (Array.isArray(this.component.quantity))\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Range);\n\t\t\tlet [low, high] = this.component.quantity;\n\t\t\tif (low != null) this.lineQuantVal1.setValue(low.toString());\n\t\t\tif (high != null) this.lineQuantVal2.setValue(high.toString());\n\t\t\tthis.lineQuantUnits.setValue(this.component.units);\n\t\t\tchangeToRange();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Value);\n\t\t\tif (this.component.quantity != null) this.lineQuantVal1.setValue(this.component.quantity.toString());\n\t\t\tif (this.component.error != null) this.lineQuantVal2.setValue(this.component.error.toString());\n\t\t\tthis.lineQuantUnits.setValue(this.component.units);\n\t\t\tchangeToValue();\n\t\t}\n\n\t\tthis.optQuantType.callbackSelect = (idx:number) =>\n\t\t{\n\t\t\tif (idx == 0) changeToValue();\n\t\t\telse if (idx == 1) changeToRange();\n\t\t\telse if (idx == 2) changeToRatio();\n\t\t};\n\t}\n\n\t// creates a dropdown list with a prescribed list of choices; the first one will be selected if current matches nothing\n\tprivate makeDropdownGroup(parent:DOM, current:string, values:string[], labels:string[], changeFunc:(value:string, label:string) => void):DOM\n\t{\n\t\tlet drop = dom('<select/>').appendTo(parent);\n\t\tdrop.css({'height': '2.3em'});\n\t\tfor (let n = 0; n < values.length; n++)\n\t\t{\n\t\t\tlet opt = dom('<option/>').appendTo(drop);\n\t\t\topt.setAttr('value', n.toString());\n\t\t\topt.setHTML(labels[n]);\n\t\t\tif (current == values[n] || current == labels[n]) opt.setAttr('selected', 'true');\n\t\t}\n\t\tdrop.onChange(() => {let idx = parseInt(drop.getValue()); changeFunc(values[idx], labels[idx]);});\n\t\treturn drop;\n\t}\n\n\tprivate selectDropUnits():void\n\t{\n\t\tlet popup = new Popup(this.btnQuantUnits);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tlet body = popup.bodyDOM();\n\t\t\tfor (let label of Units.commonNames())\n\t\t\t{\n\t\t\t\tlet div = dom('<div/>').appendTo(body).class('wmk-editcomponent-units');\n\t\t\t\tdiv.setText(label);\n\t\t\t\tdiv.onClick(() =>\n\t\t\t\t{\n\t\t\t\t\tthis.lineQuantUnits.setValue(label);\n\t\t\t\t\tpopup.close();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tpopup.open();\n\t}\n\n\t// special deal: when typing in extended content to the regular value entry box, optionally break up strings that contain\n\t// a more complete description, e.g. quantity *and* units; returns true if it did something interesting\n\tprivate interpretQuantString():boolean\n\t{\n\t\tlet qstr = this.lineQuantVal1.getValue().trim();\n\n\t\t// scrape out any \"relation\" properties from the beginning first of all\n\t\tlet rel = '';\n\t\tfor (let pfx of RELATION_VALUES) if (qstr.startsWith(pfx) && pfx.length > rel.length) rel = pfx;\n\t\tif (rel) qstr = qstr.substring(rel.length);\n\t\telse if (qstr.startsWith('\\u{2264}')) [rel, qstr] = ['<=', qstr.substring(1)];\n\t\telse if (qstr.startsWith('\\u{2265}')) [rel, qstr] = ['>=', qstr.substring(1)];\n\n\t\t// scrape off units from the end\n\t\tlet units = '';\n\t\tfor (let [name, uri] of Object.entries(Units.NAME_TO_URI))\n\t\t{\n\t\t\tlet regname = name.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // regexify the unit name\n\t\t\tlet regex = new RegExp(`^(.*[\\\\d\\\\s\\)])(${regname})$`);\n\t\t\tlet match = regex.exec(qstr);\n\t\t\tif (!match) continue;\n\t\t\tqstr = match[1];\n\t\t\tunits = Units.URI_TO_NAME[uri];\n\t\t\tbreak;\n\t\t}\n\n\t\tlet isNum = (str:string):boolean =>\n\t\t{\n\t\t\tif (str.startsWith('.')) str = '0' + str;\n\t\t\tif (!/^-?[0-9]+\\.?[0-9eE]*$/.test(str)) return false;\n\t\t\treturn !isNaN(parseFloat(str));\n\t\t};\n\n\t\tqstr = qstr.trim();\n\t\tlet qtype:QuantityType = null;\n\t\tlet qnum1 = '', qnum2 = '';\n\t\tlet match = /^([0-9\\-\\.eE]+)-([0-9\\-\\.eE]+)$/.exec(qstr); // A-B\n\t\tif (match)\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Range, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\.\\.([0-9\\-\\.eE]+)$/.exec(qstr)) // A..B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Range, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\(([0-9\\-\\.eE]+)\\)$/.exec(qstr)) // A(B)\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Value, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\:([0-9\\-\\.eE]+)$/.exec(qstr)) // A:B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Ratio, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2)) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\/([0-9\\-\\.eE]+)$/.exec(qstr)) // A/B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Ratio, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2)) return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!isNum(qstr) || !units) return false;\n\t\t\t[qtype, qnum1] = [QuantityType.Value, qstr];\n\t\t}\n\n\t\tthis.optQuantType.setSelectedValue(qtype);\n\t\tthis.dropQuantRel.setValue(Math.max(0, RELATION_VALUES.indexOf(rel)).toString());\n\t\tthis.lineQuantVal1.setValue(qnum1);\n\t\tthis.lineQuantVal2.setValue(qnum2);\n\t\tthis.lineQuantUnits.setValue(units);\n\t\tthis.component.units = units;\n\t\treturn true;\n\t}\n\n\t// uses the structure (if any) to calculate the InChI, and fill in the field value\n\tprivate async calculateInChI():Promise<void>\n\t{\n\t\tif (!InChI.isAvailable()) return;\n\t\t//let mol = this.sketcher.getMolecule();\n\t\tlet mol = MoleculeStream.readUnknown(this.component.molfile);\n\t\tif (MolUtil.isBlank(mol))\n\t\t{\n\t\t\t//alert('Draw a molecule first, then calculate the InChI.');\n\t\t\treturn;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tlet inchi = Vec.first(await InChI.makeInChI(mol));\n\t\t\tthis.lineInChI.setValue(inchi);\n\t\t}\n\t\tcatch (ex) {alert('InChI generation failed: ' + ex);}\n\t}\n\n\t// if there is a structure, calculate MF\n\tprivate calculateFormula():string\n\t{\n\t\tif (!this.component.molfile) return '';\n\t\tlet mol = MoleculeStream.readUnknown(this.component.molfile);\n\t\tif (MolUtil.isBlank(mol)) return '';\n\t\tfor (let n = mol.numAtoms; n >= 1; n--) if (mol.atomicNumber(n) == 0) mol.deleteAtomAndBonds(n);\n\t\treturn MolUtil.molecularFormula(mol);\n\t}\n\n\t// derive from MF field, if any\n\tprivate calculateWeight():void\n\t{\n\t\tlet mw = 0;\n\n\t\tlet mf = this.lineFormula.getValue();\n\t\tif (!mf) mf = this.lineFormula.elInput.placeholder;\n\n\t\twhile (mf)\n\t\t{\n\t\t\tlet match = mf.match(/^([A-Z][a-z]?)(\\d*)(.*?)$/);\n\t\t\tif (!match) {mw = 0; break;}\n\t\t\tlet atno = Chemistry.ELEMENTS.indexOf(match[1]);\n\t\t\tif (atno <= 0) {mw = 0; break;}\n\t\t\tlet num = 1;\n\t\t\tif (match[2])\n\t\t\t{\n\t\t\t\tnum = parseInt(match[2]);\n\t\t\t\tif (num <= 0) {mw = 0; break;}\n\t\t\t}\n\t\t\tmw += Chemistry.NATURAL_ATOMIC_WEIGHTS[atno] * num;\n\t\t\tmf = match[3];\n\t\t}\n\n\t\tif (mw > 0)\n\t\t{\n\t\t\tthis.divWeight.css({'padding-left': '0.5em'});\n\t\t\tthis.divWeight.setText(mw.toFixed(3) + ' g/mol');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.divWeight.css({'padding-left': '0'});\n\t\t\tthis.divWeight.setText('');\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet} from 'webmolkit/data/DataSheet';\nimport {MDLSDFReader} from 'webmolkit/data/MDLReader';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {CoordUtil} from 'webmolkit/data/CoordUtil';\n\n/*\n\tSearching PubChem via the REST API, using names to track down other information, primarily structure.\n*/\n\nconst BASE_COMPOUND = 'https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound';\n\nexport interface PubChemSearchResult\n{\n\tmol:Molecule;\n\tnames:string[];\n\tformula:string;\n\tinchi:string;\n\tinchiKey:string;\n}\n\nexport class PubChemSearch\n{\n\tprivate stopped = false;\n\tprivate cidList:number[] = [];\n\n\t// ------------ public methods ------------\n\n\tpublic static async find(searchText:string):Promise<PubChemSearchResult[]>\n\t{\n\t\treturn new Promise<PubChemSearchResult[]>((resolve, reject) =>\n\t\t{\n\t\t\tlet results:PubChemSearchResult[] = [];\n\t\t\tlet callbackResult = (result:PubChemSearchResult):void =>\n\t\t\t{\n\t\t\t\tresults.push(result);\n\t\t\t};\n\t\t\tlet callbackFinished = (err?:string):void =>\n\t\t\t{\n\t\t\t\tif (err) reject(err); else resolve(results);\n\t\t\t};\n\t\t\tnew PubChemSearch(searchText, callbackResult, callbackFinished).start();\n\t\t});\n\t}\n\n\tconstructor(private searchText:string, private callbackResult:(result:PubChemSearchResult) => void, private callbackFinished:(err?:string) => void)\n\t{\n\t}\n\n\t// initiates the search: callback results are to be expected afterward\n\tpublic start():void\n\t{\n\t\tlet url = BASE_COMPOUND + '/name/' + encodeURIComponent(this.searchText) + '/cids/JSON';\n\n\t\tconst https = require('https');\n\t\thttps.get(url, (resp:any) =>\n\t\t{\n\t\t\tlet data = '';\n\t\t\tresp.on('data', (chunk:string) => data += chunk);\n\t\t\tresp.on('end', () => this.receivedList(data));\n\t\t}).on('error', (err:any) => {if (!this.stopped) this.callbackFinished(err.toString());});\n\t}\n\n\t// premature cessation: action ceases, no more callbacks\n\tpublic stop():void\n\t{\n\t\tthis.stopped = true;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// obtained the list of compounds, so proceed from there\n\tprivate receivedList(data:string):void\n\t{\n\t\tif (this.stopped) return;\n\n\t\tlet obj = null;\n\t\ttry\n\t\t{\n\t\t\tobj = JSON.parse(data);\n\t\t}\n\t\tcatch (ex)\n\t\t{\n\t\t\tconsole.log('Received unparseable result: ' + data);\n\t\t\tthis.callbackFinished('Unparseable result from name query: ' + ex.toString());\n\t\t}\n\n\t\tif (!obj.IdentifierList)\n\t\t{\n\t\t\t// found nothing\n\t\t\tthis.callbackFinished();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cidList = obj.IdentifierList.CID;\n\t\tthis.fetchNext();\n\t}\n\n\tprivate fetchNext():void\n\t{\n\t\tif (this.stopped) return;\n\t\tif (this.cidList.length == 0)\n\t\t{\n\t\t\tthis.callbackFinished();\n\t\t\treturn;\n\t\t}\n\n\t\tlet cid = this.cidList.shift();\n\t\tlet url = BASE_COMPOUND + '/cid/' + cid + '/SDF';\n\n\t\tconst https = require('https');\n\t\thttps.get(url, (resp:any) =>\n\t\t{\n\t\t\tlet data = '';\n\t\t\tresp.on('data', (chunk:string) => data += chunk);\n\t\t\tresp.on('end', () => this.receivedCompound(data));\n\t\t}).on('error', (err:any) => {if (!this.stopped) this.callbackFinished(err.toString());});\n\t}\n\n\tprivate receivedCompound(data:string):void\n\t{\n\t\tif (this.stopped) return;\n\n\t\tlet ds = new MDLSDFReader(data).parse();\n\t\tfor (let n = 0; n < ds.numRows; n++) this.unpackCompound(ds, n);\n\n\t\tthis.fetchNext();\n\t}\n\n\tprivate unpackCompound(ds:DataSheet, row:number):void\n\t{\n\t\tlet result:PubChemSearchResult =\n\t\t{\n\t\t\t'mol': ds.getMolecule(row, 'Molecule'),\n\t\t\t'names': [],\n\t\t\t'formula': ds.getString(row, 'PUBCHEM_MOLECULAR_FORMULA'),\n\t\t\t'inchi': ds.getString(row, 'PUBCHEM_IUPAC_INCHI'),\n\t\t\t'inchiKey': ds.getString(row, 'PUBCHEM_IUPAC_INCHIKEY'),\n\t\t};\n\n\t\tif (result.mol)\n\t\t{\n\t\t\tMolUtil.stripHydrogens(result.mol);\n\t\t\tCoordUtil.normaliseBondDistances(result.mol);\n\t\t}\n\n\t\tconst NAMECOLS = ['PUBCHEM_IUPAC_TRADITIONAL_NAME', 'PUBCHEM_IUPAC_SYSTEMATIC_NAME',\n\t\t\t\t\t\t  'PUBCHEM_IUPAC_OPENEYE_NAME', 'PUBCHEM_IUPAC_CAS_NAME', 'PUBCHEM_IUPAC_NAME'];\n\t\tfor (let colName of NAMECOLS)\n\t\t{\n\t\t\tlet names = ds.getString(row, colName);\n\t\t\tif (!names || typeof names != 'string') continue;\n\t\t\tfor (let name of names.split('\\n')) if (name && result.names.indexOf(name) < 0) result.names.push(name);\n\t\t}\n\n\t\tthis.callbackResult(result);\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {PubChemSearch, PubChemSearchResult} from './PubChemSearch';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {hasInlineCSS, installInlineCSS} from 'webmolkit/util/Theme';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\n\n/*\n\tDialog for finding a compound by name using remote webservices.\n*/\n\nexport class LookupCompoundDialog extends Dialog\n{\n\tprivate spanStatus:DOM;\n\tprivate btnSearch:DOM;\n\tprivate btnApply:DOM;\n\tprivate vertical:DOM;\n\tprivate searchInput:DOM;\n\tprivate resultArea:DOM;\n\n\tprivate pubchem:PubChemSearch = null;\n\tprivate resultList:PubChemSearchResult[] = [];\n\n\tprivate nameSelected = -1;\n\tprivate nameList:string[] = [];\n\tprivate nameDOM:DOM[] = [];\n\tprivate molSelected = -1;\n\tprivate molList:Molecule[] = [];\n\tprivate molDOM:DOM[] = [];\n\n\tprivate callbackSelect:(source?:LookupCompoundDialog) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private searchText:string, private parentSize:[number, number])\n\t{\n\t\tsuper();\n\n\t\tif (!hasInlineCSS('mixtures-lookupcompound')) installInlineCSS('mixtures-lookupcompound', this.composeCSS());\n\n\t\tthis.title = 'Lookup Compound';\n\t\tthis.minPortionWidth = 95;\n\t\tthis.maxPortionWidth = 95;\n\t\tthis.maximumHeight = parentSize[1];\n\t}\n\n\tpublic onSelect(callback:(source?:LookupCompoundDialog) => void):void\n\t{\n\t\tthis.callbackSelect = callback;\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\t// top section\n\n\t\tthis.spanStatus = dom('<span/>').appendTo(buttons);\n\t\tbuttons.appendText(' ');\n\n\t\tbuttons.append(this.domClose);\n\n\t\tbuttons.appendText(' ');\n\n\t\tthis.btnSearch = dom('<button class=\"wmk-button wmk-button-primary\">Search</button>').appendTo(buttons);\n\t\tthis.btnSearch.onClick(() => this.runSearch());\n\n\t\tbuttons.appendText(' ');\n\n\t\tthis.btnApply = dom('<button class=\"wmk-button wmk-button-default\">Apply</button>').appendTo(buttons);\n\t\tthis.btnApply.onClick(() => this.applyResult());\n\t\tthis.btnApply.elInput.disabled = true;\n\n\t\t// main section\n\n\t\tbody.css({'padding': '0 0 0 0.5em'});\n\t\tthis.vertical = dom('<div/>').appendTo(body);\n\t\tthis.vertical.css({'overflow-y': 'scroll', 'height': '100%'});\n\t\tthis.vertical.css({'max-height': (this.parentSize[1] - 200) + 'px'});\n\t\tthis.vertical.css({'padding-right': '18px', 'padding-bottom': '10px'});\n\n\t\tthis.populateSearchEntry();\n\n\t\tthis.resultArea = dom('<div/>').appendTo(this.vertical);\n\n\t\tif (this.searchText) this.runSearch(); // auto-start\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.pubchem) this.pubchem.stop();\n\t\tsuper.close();\n\t}\n\n\t// access to selected results: null = nothing selected\n\tpublic getName():string\n\t{\n\t\treturn this.nameSelected < 0 ? null : this.nameList[this.nameSelected];\n\t}\n\tpublic getMolecule():Molecule\n\t{\n\t\treturn this.molSelected < 0 ? null : this.molList[this.molSelected];\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate populateSearchEntry():void\n\t{\n\t\tlet grid = dom('<div/>').appendTo(this.vertical).css({'display': 'grid'});\n\t\tgrid.css({'width': '100%', 'margin': '0.5em 0 0.5em 0'});\n\t\tgrid.css({'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start field] max-content [value] 1fr [end]'});\n\n\t\tlet divLabel = dom('<div/>').appendTo(grid).css({'grid-column': 'field', 'grid-row': '1', 'padding-right': '0.5em'});\n\t\tdivLabel.setText('Name:');\n\n\t\tlet divInput = dom('<div/>').appendTo(grid).css({'grid-column': 'value', 'grid-row': '1'});\n\t\tthis.searchInput = dom('<input/>').appendTo(divInput).css({'width': '100%', 'font': 'inherit'});\n\t\tthis.searchInput.setValue(this.searchText);\n\t\tthis.searchInput.onKeyDown((event) => this.trapKeys(event));\n\n\t\tthis.searchInput.grabFocus();\n\t}\n\n\tprivate runSearch():void\n\t{\n\t\tif (this.pubchem) this.pubchem.stop();\n\t\tthis.resultArea.empty();\n\t\tthis.resultList = [];\n\n\t\tthis.spanStatus.setText('Searching...');\n\n\t\tlet text = this.searchInput.getValue();\n\t\tif (!text) return;\n\t\tthis.pubchem = new PubChemSearch(text,\n\t\t\t(result:PubChemSearchResult):void => this.gotResult(result),\n\t\t\t(err:string):void => this.finishedSearch(err));\n\t\tthis.pubchem.start();\n\t}\n\n\tprivate applyResult():void\n\t{\n\t\tthis.callbackSelect(this);\n\t\tthis.close();\n\t}\n\n\tprivate gotResult(result:PubChemSearchResult):void\n\t{\n\t\tthis.resultList.push(result);\n\n\t\tlet grid = dom('<div/>').appendTo(this.resultArea).css({'display': 'grid'});\n\t\tgrid.css({'width': '100%', 'margin': '0.5em 0 0.5em 0', 'align-items': 'top', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start molecule] max-content [names] 1fr [end]'});\n\n\t\tlet divMol = dom('<div/>').appendTo(grid).css({'grid-column': 'molecule', 'grid-row': '1', 'padding-right': '0.5em'});\n\n\t\tif (result.mol)\n\t\t{\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMolecule(result.mol, measure, policy);\n\t\t\tlayout.arrange();\n\t\t\tlayout.squeezeInto(0, 0, 300, 300);\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMolecule(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\n\t\t\tlet svg = dom(gfx.createSVG()).appendTo(divMol).css({'display': 'inline-block'});\n\t\t\tsvg.addClass('mixtures-lookupcompound-unselected');\n\n\t\t\tconst idx = this.molList.length;\n\t\t\tsvg.onClick(() => this.selectMolecule(idx));\n\n\t\t\tthis.molList.push(result.mol);\n\t\t\tthis.molDOM.push(svg);\n\t\t}\n\t\telse divMol.setText('(no structure)');\n\n\t\tlet divName = dom('<div/>').appendTo(grid).css({'grid-column': 'names', 'grid-row': '1', 'padding-right': '0.5em'});\n\n\t\tif (result.names.length == 0) divName.setText('(no names)');\n\t\telse for (let name of result.names)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(divName);\n\t\t\tlet span = dom('<span/>').appendTo(div);\n\t\t\tspan.addClass('mixtures-lookupcompound-unselected');\n\t\t\tspan.setText(name);\n\n\t\t\tconst idx = this.nameList.length;\n\t\t\tdiv.onClick(() => this.selectName(idx));\n\n\t\t\tthis.nameList.push(name);\n\t\t\tthis.nameDOM.push(span);\n\t\t}\n\t}\n\n\tprivate finishedSearch(err:string):void\n\t{\n\t\tthis.spanStatus.setText('');\n\n\t\tif (err) alert('Search failed: ' + err);\n\t\telse if (this.resultList.length == 0)\n\t\t{\n\t\t\tthis.resultArea.empty();\n\t\t\tthis.resultArea.setText('Nothing found.');\n\t\t}\n\t}\n\n\tprivate trapKeys(event:KeyboardEvent):void\n\t{\n\t\tif (event.keyCode == 27)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.close();\n\t\t}\n\t\telse if (event.keyCode == 13)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.runSearch();\n\t\t}\n\t}\n\n\tprivate selectName(idx:number):void\n\t{\n\t\tlet prev = this.nameSelected;\n\t\tif (prev == idx) idx = -1;\n\n\t\tif (prev >= 0) this.nameDOM[prev].removeClass('mixtures-lookupcompound-selected');\n\t\tif (idx >= 0) this.nameDOM[idx].addClass('mixtures-lookupcompound-selected');\n\t\tthis.nameSelected = idx;\n\n\t\tthis.btnApply.elInput.disabled = this.nameSelected < 0 && this.molSelected < 0;\n\t}\n\n\tprivate selectMolecule(idx:number):void\n\t{\n\t\tlet prev = this.molSelected;\n\t\tif (prev == idx) idx = -1;\n\n\t\tif (prev >= 0) this.molDOM[prev].removeClass('mixtures-lookupcompound-selected');\n\t\tif (idx >= 0) this.molDOM[idx].addClass('mixtures-lookupcompound-selected');\n\t\tthis.molSelected = idx;\n\n\t\tthis.btnApply.elInput.disabled = this.nameSelected < 0 && this.molSelected < 0;\n\t}\n\n\t// one-time instantiation of necessary styles\n\tprivate composeCSS():string\n\t{\n\t\treturn `\n\t\t\t.mixtures-lookupcompound-unselected\n\t\t\t{\n\t\t\t\tcursor: pointer;\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder: 1px solid transparent;\n\t\t\t\tpadding: 3px;\n\t\t\t\tborder-radius: 4px;\n\t\t\t}\n\t\t\t.mixtures-lookupcompound-selected\n\t\t\t{\n\t\t\t\tcursor: default;\n\t\t\t\tbackground-color: #E0E0E0;\n\t\t\t\tborder: 1px solid #808080;\n\t\t\t}\n\t\t`;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MDLMOLReader, MDLReaderGroupMixture, MDLReaderLinkNode} from 'webmolkit/data/MDLReader';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MixfileComponent} from '../data/Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {deepClone} from 'webmolkit/util/util';\n\n/*\n\tChecks the supplied string to see if it is a CTAB (V2000/V3000) with features that make enumerable. If so,\n\treturns a list of molecules.\n*/\n\ninterface ProtoMolecule\n{\n\tmol:Molecule;\n\tchildren:ProtoMolecule[];\n\tattachAny:Map<number, number[]>; // bond -> list of atom indices\n\tstereoRacemic:number[][]; // blocks of atoms which are racemic\n\tstereoRelative:number[][]; // blocks of atoms which exist in their drawn configuration OR the opposite\n\tlinkNodes:MDLReaderLinkNode[]; // so-called link nodes, aka repeating atom\n\tmixtures:MDLReaderGroupMixture[]; // mixture collections, which may overlap\n}\n\nexport class ExtractCTABComponent\n{\n\t// ------------ public methods ------------\n\n\tconstructor(private text:string)\n\t{\n\t}\n\n\t// returns a component instance if and only when the underlying CTAB has something mixture-esque; if it's not a molecule,\n\t// or is just a plain ordinary single molecule, returns null\n\tpublic extract():MixfileComponent\n\t{\n\t\tlet ctab = new MDLMOLReader(this.text);\n\t\ttry {ctab.parse();}\n\t\tcatch (ex) {return null;}\n\n\t\tif (!ctab.mol) return null;\n\n\t\tlet seed:Partial<ProtoMolecule> = {mol: ctab.mol};\n\t\tif (ctab.groupAttachAny.size > 0) seed.attachAny = ctab.groupAttachAny;\n\t\tif (ctab.groupStereoRacemic.length > 0) seed.stereoRacemic = ctab.groupStereoRacemic;\n\t\tif (ctab.groupStereoRelative.length > 0) seed.stereoRelative = ctab.groupStereoRelative;\n\t\tif (ctab.groupLinkNodes.length > 0) seed.linkNodes = ctab.groupLinkNodes;\n\t\tif (ctab.groupMixtures.length > 0) seed.mixtures = ctab.groupMixtures;\n\n\t\tif (!seed.attachAny && !seed.stereoRacemic && !seed.stereoRelative &&\n\t\t\t!seed.linkNodes && !seed.mixtures) return null;\n\n\t\tconst SANITY = 100; // stop enumerating after this many\n\n\t\tlet prototypes:ProtoMolecule[] = [seed as ProtoMolecule];\n\t\tfor (let n = 0; n < prototypes.length;)\n\t\t{\n\t\t\tlet proto = prototypes[n];\n\t\t\tlet list:ProtoMolecule[] = this.enumerateAttachAny(proto);\n\t\t\tif (!list) list = this.enumerateStereoRacemic(proto);\n\t\t\tif (!list) list = this.enumerateStereoRelative(proto);\n\t\t\tif (!list) list = this.enumerateLinkNodes(proto);\n\t\t\tif (!list) list = this.enumerateMixtures(proto);\n\n\t\t\tif (list)\n\t\t\t{\n\t\t\t\tprototypes[n] = list[0];\n\t\t\t\tfor (let i = 1; i < list.length; i++) prototypes.splice(n + i, 0, list[i]);\n\t\t\t}\n\t\t\telse n++;\n\n\t\t\tif (prototypes.length > SANITY) break;\n\t\t}\n\n\t\tif (prototypes.length == 0) return null;\n\t\tif (prototypes.length == 1 && Vec.isBlank(prototypes[0].children)) return null;\n\n\t\tlet emit = (comp:MixfileComponent, proto:ProtoMolecule):void =>\n\t\t{\n\t\t\tlet subComp:MixfileComponent = {};\n\t\t\tif (proto.mol) subComp.molfile = new MDLMOLWriter(proto.mol).write();\n\t\t\tcomp.contents.push(subComp);\n\t\t\tif (proto.children)\n\t\t\t{\n\t\t\t\tsubComp.contents = [];\n\t\t\t\tfor (let child of proto.children) emit(subComp, child);\n\t\t\t}\n\t\t};\n\n\t\tlet comp:MixfileComponent = {contents: []};\n\t\tif (ctab.molName) comp.name = ctab.molName;\n\t\tfor (let proto of prototypes) emit(comp, proto);\n\n\t\treturn comp;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate enumerateAttachAny(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (!proto.attachAny) return null;\n\t\tlet bond:number = null;\n\t\tfor (let look of proto.attachAny.keys()) {bond = look; break;}\n\t\tif (bond == null) return null;\n\t\tlet atoms = proto.attachAny.get(bond);\n\t\tproto.attachAny.delete(bond);\n\t\tif (Vec.isBlank(atoms)) return null;\n\n\t\tlet mol = proto.mol;\n\t\tlet atomKeep = mol.bondFrom(bond), atomChop = mol.bondTo(bond);\n\t\tif (mol.atomElement(atomChop) == '*') {}\n\t\telse if (mol.atomElement(atomKeep) == '*') [atomKeep, atomChop] = [atomChop, atomKeep];\n\t\telse if (mol.atomAdjCount(atomKeep) < mol.atomAdjCount(atomChop)) [atomKeep, atomChop] = [atomChop, atomKeep];\n\n\t\t// update the baseline prototype in lieu of the atom sacrificial atom getting deleted\n\t\tfor (let look of proto.attachAny.keys()) this.removeAtom(proto.attachAny.get(look), atomChop);\n\t\tif (proto.stereoRelative) for (let look of proto.stereoRelative) this.removeAtom(look, atomChop);\n\t\tif (proto.stereoRacemic) for (let look of proto.stereoRacemic) this.removeAtom(look, atomChop);\n\t\tif (proto.linkNodes) for (let n = proto.linkNodes.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (proto.linkNodes[n].atom == atomChop) {proto.linkNodes.splice(n, 1); continue;}\n\t\t\tif (proto.linkNodes[n].atom > atomChop) proto.linkNodes[n].atom--;\n\t\t\tthis.removeAtom(proto.linkNodes[n].nbrs, atomChop);\n\t\t}\n\t\tif (proto.mixtures) for (let look of proto.mixtures) this.removeAtom(look.atoms, atomChop);\n\n\t\tlet list:ProtoMolecule[] = [];\n\t\tfor (let connAtom of atoms)\n\t\t{\n\t\t\tlet cmol = mol.clone();\n\t\t\tif (atomChop == cmol.bondFrom(bond)) cmol.setBondFrom(bond, connAtom); else cmol.setBondTo(bond, connAtom);\n\t\t\tcmol.deleteAtomAndBonds(atomChop);\n\t\t\t// TODO: ideally a little redepiction of the connecting bond would be in order, but the connectivity is right, and\n\t\t\t// in most cases it will be possible to see what it is\n\t\t\tlist.push(this.protoClone(proto, cmol));\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t// groups of racemic stereocentres: enumerate all combinations (2^group size)\n\tprivate enumerateStereoRacemic(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.stereoRacemic)) return null;\n\n\t\tlet blk = proto.stereoRacemic.shift();\n\t\tlet mol = proto.mol;\n\n\t\tlet affected = new Set<number>();\n\t\tfor (let atom of blk) affected.add(atom);\n\t\tlet bonds:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (affected.has(mol.bondFrom(n)) || affected.has(mol.bondTo(n)))\n\t\t{\n\t\t\tlet bt = mol.bondType(n);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) bonds.push(n);\n\t\t}\n\n\t\tlet nperm = Math.min(256, 1 << bonds.length);\n\t\tlet list = [this.protoClone(proto, mol)];\n\t\tfor (let n = 1; n < nperm; n++)\n\t\t{\n\t\t\tlet rmol = mol.clone();\n\t\t\tfor (let i = 0, bitand = 1; i < bonds.length; i++)\n\t\t\t{\n\t\t\t\tif (n & bitand)\n\t\t\t\t{\n\t\t\t\t\tlet bt = rmol.bondType(bonds[i]);\n\t\t\t\t\tbt = bt == Molecule.BONDTYPE_INCLINED ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_INCLINED;\n\t\t\t\t\trmol.setBondType(bonds[i], bt);\n\t\t\t\t}\n\t\t\t\tbitand = bitand << 1;\n\t\t\t}\n\t\t\tlist.push(this.protoClone(proto, rmol));\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t// relative stereocentres: add the original + the inversion for that group\n\tprivate enumerateStereoRelative(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.stereoRelative)) return null;\n\n\t\tlet blk = proto.stereoRelative.shift();\n\t\tlet affected = new Set<number>();\n\t\tfor (let atom of blk) affected.add(atom);\n\n\t\tlet molinv = proto.mol.clone();\n\t\tfor (let n = 1; n <= molinv.numBonds; n++) if (affected.has(molinv.bondFrom(n)) || affected.has(molinv.bondTo(n)))\n\t\t{\n\t\t\tlet bt = molinv.bondType(n);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED) molinv.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED) molinv.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t}\n\n\t\treturn [proto, this.protoClone(proto, molinv)];\n\t}\n\tprivate enumerateLinkNodes(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.linkNodes)) return null;\n\n\t\tlet link = proto.linkNodes.shift();\n\n\t\tlet mol = proto.mol, a1 = link.atom;\n\t\tlet nbr1 = link.nbrs.length >= 1 ? link.nbrs[0] : 0;\n\n\t\tlet list:ProtoMolecule[] = [];\n\t\tfor (let n = link.minRep; n <= link.maxRep; n++)\n\t\t{\n\t\t\tif (n == 1)\n\t\t\t{\n\t\t\t\tlist.push(this.protoClone(proto, mol));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet rmol = mol.clone();\n\t\t\tlet addedAtoms:number[] = [];\n\t\t\tfor (let i = 2; i <= n; i++)\n\t\t\t{\n\t\t\t\tlet a2 = rmol.addAtom(rmol.atomElement(a1), rmol.atomX(a1), rmol.atomY(a1));\n\t\t\t\trmol.setAtomCharge(a2, rmol.atomCharge(a1));\n\t\t\t\trmol.setAtomUnpaired(a2, rmol.atomUnpaired(a2));\n\t\t\t\trmol.addBond(a1, a2, 1);\n\t\t\t\tif (nbr1 > 0)\n\t\t\t\t{\n\t\t\t\t\tlet a3 = 0;\n\t\t\t\t\tfor (let adj of rmol.atomAdjList(a1)) if (adj != a2 && adj != nbr1) {a3 = adj; break;}\n\t\t\t\t\tif (a3 > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet b = rmol.findBond(a1, a3);\n\t\t\t\t\t\tif (rmol.bondFrom(b) == a1) rmol.setBondFrom(b, a2); else rmol.setBondTo(b, a2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\taddedAtoms.push(a1);\n\t\t\t}\n\t\t\t// TODO: depiction would be nice; the atoms are just overlayed on top of each other\n\n\t\t\tlet rproto = this.protoClone(proto, rmol);\n\t\t\tif (rproto.mixtures) for (let mix of rproto.mixtures)\n\t\t\t{\n\t\t\t\tif (mix.atoms.includes(a1)) mix.atoms.push(...addedAtoms);\n\t\t\t}\n\t\t\tlist.push(rproto);\n\t\t}\n\n\t\treturn list;\n\t}\n\tprivate enumerateMixtures(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.mixtures)) return null;\n\n\t\t// NOTE: currently assuming that this enumeration step happens last, and is done in one fell swoop; the protomolecule hierarchy\n\t\t// that gets returned discards any remaining enumeration materials\n\n\t\tlet mol = proto.mol, mixtures = proto.mixtures;\n\n\t\tlet identity = mixtures.map((mix) => mix.index);\n\t\tlet leafmask = Vec.booleanArray(true, mixtures.length);\n\t\tfor (let mix of mixtures) if (mix.parent > 0)\n\t\t{\n\t\t\tlet i = identity.indexOf(mix.parent);\n\t\t\tif (i >= 0) leafmask[i] = false;\n\t\t}\n\n\t\tlet root = {children: []} as ProtoMolecule;\n\t\tlet mapTree = new Map<number, ProtoMolecule>();\n\t\tmapTree.set(0, root);\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tfor (let n = 0; n < mixtures.length; n++) if (!leafmask[n] && !mapTree.has(mixtures[n].index))\n\t\t\t{\n\t\t\t\tlet parent = mapTree.get(mixtures[n].parent);\n\t\t\t\tif (!parent) continue;\n\t\t\t\tlet node = {children: []} as ProtoMolecule;\n\t\t\t\tparent.children.push(node);\n\t\t\t\tmapTree.set(mixtures[n].index, node);\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (!anything) break;\n\t\t}\n\n\t\tlet nonemask = Vec.booleanArray(true, mol.numAtoms); // atoms not mentioned in any mixture block\n\t\tfor (let mix of mixtures) for (let a of mix.atoms) nonemask[a - 1] = false;\n\n\t\tfor (let n = 0; n < mixtures.length; n++) if (leafmask[n])\n\t\t{\n\t\t\tlet atommask = nonemask.slice(0);\n\t\t\tfor (let a of mixtures[n].atoms) atommask[a - 1] = true;\n\n\t\t\tlet mixmol = MolUtil.subgraphMask(mol, atommask);\n\t\t\tlet node = {mol: mixmol} as ProtoMolecule;\n\t\t\tmapTree.get(mixtures[n].parent).children.push(node);\n\t\t}\n\n\t\tif (root.children.length == 1) root = root.children[0];\n\t\treturn root.children;\n\t}\n\n\t// makes a copy of the prototype's fields, and copies over the replacement molecule\n\tprivate protoClone(proto:ProtoMolecule, mol:Molecule):ProtoMolecule\n\t{\n\t\tlet dup:ProtoMolecule =\n\t\t{\n\t\t\t'mol': mol,\n\t\t\t'children': [],\n\t\t\t'attachAny': proto.attachAny ? new Map(proto.attachAny) : null,\n\t\t\t'stereoRacemic': deepClone(proto.stereoRacemic),\n\t\t\t'stereoRelative': deepClone(proto.stereoRelative),\n\t\t\t'linkNodes': deepClone(proto.linkNodes),\n\t\t\t'mixtures': deepClone(proto.mixtures),\n\t\t};\n\t\treturn dup;\n\t}\n\n\t// updates a list given that a certain atom has been deleted: decrements or removes any atoms that are affected\n\tprivate removeAtom(list:number[], atom:number):void\n\t{\n\t\tfor (let n = list.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (list[n] == atom) list.splice(n, 1);\n\t\t\telse if (list[n] > atom) list[n]--;\n\t\t}\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from './Mixture';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {StandardUnits, Units} from './Units';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {ActivityType, MoleculeActivity, SketchState} from 'webmolkit/sketcher/MoleculeActivity';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tMixture normalisation options: recommendations for how to make a mixture more conformant. It is up to the caller\n\tto decide what to do with this information.\n*/\n\nexport interface NormMixtureNote\n{\n\torigin:number[];\n\n\tstereoEnum?:string[]; // if defined, contains stereo-enumerated versions of current\n\n\t// units converted into concentration, if both possible & necessary\n\tconcQuantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\tconcError?:number; // optional standard error (applies to quantity when it's a scalar)\n\tconcUnits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\tconcRelation?:string;\n}\n\nenum AbsType\n{\n\tNone,\n\tMass, // reference scale: g\n\tVolume, // reference scale: L\n\tMoles, // reference scale: mol\n}\n\nexport class NormMixture\n{\n\tpublic notes:NormMixtureNote[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mixture:Mixture)\n\t{\n\t}\n\n\tpublic analyse():void\n\t{\n\t\tlet origins = this.mixture.getOrigins();\n\t\tlet compList = origins.map((origin) => this.mixture.getComponent(origin));\n\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tlet note:NormMixtureNote = {origin: origins[n]};\n\n\t\t\t// stereocentres get expanded out\n\t\t\tlet comp = compList[n];\n\t\t\tif (comp.molfile && Vec.isBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet mol = MoleculeStream.readUnknown(comp.molfile);\n\t\t\t\tif (!mol) continue;\n\t\t\t\tlet stereo = this.enumerateStereo(mol);\n\t\t\t\tif (Vec.notBlank(stereo)) note.stereoEnum = stereo.map((mol) => MoleculeStream.writeMDLMOL(mol));\n\t\t\t}\n\n\t\t\tthis.notes.push(note);\n\t\t}\n\n\t\tlet childIndexes:number[][] = [];\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tchildIndexes[n] = [];\n\t\t\tlet o = origins[n];\n\t\t\tfor (let i = n + 1; i < origins.length; i++)\n\t\t\t\tif (origins[i].length == o.length + 1 && Vec.equals(o, origins[i].slice(0, o.length))) childIndexes[n].push(i);\n\t\t}\n\n\t\t// conversion of \"absolute units\" to concentrations, where possible\n\t\tlet sumType = new Array(origins.length).fill(AbsType.None);\n\t\tlet sumAmount1 = Vec.numberArray(null, origins.length);\n\t\tlet sumAmount2 = Vec.numberArray(null, origins.length);\n\t\tlet sumError = Vec.numberArray(null, origins.length);\n\t\twhile (true)\n\t\t{\n\t\t\tlet modified = false;\n\n\t\t\tfor (let n = 0; n < origins.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = compList[n], note = this.notes[n];\n\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\t[sumType[n], sumAmount1[n], sumAmount2[n], sumError[n]] = this.toAbsoluteUnits(comp);\n\t\t\t\t\tif (sumType[n] != AbsType.None) modified = true;\n\t\t\t\t}\n\n\t\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\n\t\t\t\t// if there's no absolute quantity presently available, see if we can add up the sub-components\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\tlet amount = 0, childType = AbsType.None;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None || sumAmount2[i] != null ||\n\t\t\t\t\t\t\t(childType != AbsType.None && sumType[i] != childType))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildType = AbsType.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchildType = sumType[i];\n\t\t\t\t\t\tamount += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childType != AbsType.None)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[n] = childType;\n\t\t\t\t\t\tsumAmount1[n] = amount;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if current type is an absolute unit, see if all-but-one of the children have that same type\n\t\t\t\tif (sumType[n] != AbsType.None && childIndexes[n].length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet idxOne = -1, sum = 0;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (idxOne >= 0) {idxOne = -1; break;} // only one allowed\n\t\t\t\t\t\t\tidxOne = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sumType[i] != sumType[n]) {idxOne = -1; break;} // can't be defined-but-different\n\t\t\t\t\t\telse if (sumAmount2[i] != null) {idxOne = -1; break;} // ranges disqualify\n\t\t\t\t\t\telse sum += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (idxOne >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[idxOne] = sumType[n];\n\t\t\t\t\t\tsumAmount1[idxOne] = sumAmount1[n] - sum;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!modified) break;\n\t\t}\n\n\t\t// now use derived absolute units to infer concentration-types\n\t\tfor (let n = 0; n < origins.length; n++) if (sumType[n] != AbsType.None)\n\t\t{\n\t\t\tfor (let i of childIndexes[n]) if (sumType[i] != AbsType.None)\n\t\t\t{\n\t\t\t\tlet scale = 0, denom = sumAmount1[n], uri:string = null;\n\t\t\t\tif (sumType[i] == AbsType.Mass)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) [scale, uri] = [100 / denom, StandardUnits.pcWW];\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcWV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Volume)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcVV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Moles)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [1.0 / denom, StandardUnits.mol_L];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) [scale, uri] = [100 / denom, StandardUnits.pcMM];\n\t\t\t\t}\n\n\t\t\t\tif (uri != null)\n\t\t\t\t{\n\t\t\t\t\tif (sumAmount2[i] == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = sumAmount1[i] * scale;\n\t\t\t\t\t\tthis.notes[i].concError = sumError[i] == null ? null : sumError[i] * scale;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = [sumAmount1[i] * scale, sumAmount2[i] * scale];\n\t\t\t\t\t}\n\t\t\t\t\tthis.notes[i].concUnits = Units.uriToName(uri);\n\t\t\t\t\tthis.notes[i].concRelation = compList[n].relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic findNote(origin:number[]):NormMixtureNote\n\t{\n\t\tfor (let note of this.notes) if (Vec.equals(origin, note.origin)) return note;\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// if the given molecule has stereogenic centres (i.e. wavy bonds), enumerate them explicitly\n\tprivate enumerateStereo(mol:Molecule):Molecule[]\n\t{\n\t\tlet splitMolecule = (mol:Molecule):Molecule[] =>\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tlet mol1 = mol.clone(), mol2 = mol.clone();\n\t\t\t\tif (mol.bondOrder(n) == 1)\n\t\t\t\t{\n\t\t\t\t\t// make up & down versions of the bond\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\t\t\tmol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\t\t\treturn [mol1, mol2];\n\t\t\t\t}\n\t\t\t\telse if (mol.bondOrder(n) == 2)\n\t\t\t\t{\n\t\t\t\t\t// for a cis/trans double bond, use the sketcher algorithm to rotate it; if the rotation is rejected,\n\t\t\t\t\t// it'll just return the input molecule, with the stereolabel removed\n\t\t\t\t\tlet mol1 = mol.clone();\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_NORMAL);\n\n\t\t\t\t\tlet mol2:Molecule = null;\n\t\t\t\t\tif (!mol.bondInRing(n))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet state:SketchState = {mol: mol1, currentAtom: 0, currentBond: n, selectedMask: null};\n\t\t\t\t\t\tlet activ = new MoleculeActivity(state, ActivityType.BondRotate, {});\n\t\t\t\t\t\tactiv.execute();\n\t\t\t\t\t\tif (!activ.errmsg && activ.output.mol) mol2 = activ.output.mol;\n\t\t\t\t\t}\n\t\t\t\t\treturn mol2 ? [mol1, mol2] : [mol1];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tlet list:Molecule[] = [mol];\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tlet emols = splitMolecule(list[n]);\n\t\t\tif (!emols) continue;\n\n\t\t\tlist[n] = emols[0];\n\t\t\tfor (let i = emols.length - 1; i >= 1; i--) list.splice(n + 1, 0, emols[i]);\n\t\t\tn--;\n\t\t}\n\n\t\treturn list.length > 1 ? list : null;\n\t}\n\n\t// converts the units within the component to \"absolute\" form, at a singular scale; return is type followed by\n\t// quantity1, quantity2, error (to capture ranges & errors, where applicable)\n\tprivate toAbsoluteUnits(comp:MixfileComponent):[AbsType, number, number, number]\n\t{\n\t\tif (!comp.units || comp.quantity == null /*|| typeof comp.quantity != 'number'*/) return [AbsType.None, null, null, null];\n\t\tlet uri = Units.nameToURI(comp.units);\n\t\tif (!uri) return [AbsType.None, null, null, null];\n\n\t\tlet scale = 0, type = AbsType.None;\n\n\t\tif (uri == StandardUnits.kg) [scale, type] = [1E3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.g) [scale, type] = [1, AbsType.Mass];\n\t\telse if (uri == StandardUnits.mg) [scale, type] = [1E-3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ug) [scale, type] = [1E-6, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ng) [scale, type] = [1E-9, AbsType.Mass];\n\t\telse if (uri == StandardUnits.L) [scale, type] = [1, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mL) [scale, type] = [1E-3, AbsType.Volume];\n\t\telse if (uri == StandardUnits.uL) [scale, type] = [1E-6, AbsType.Volume];\n\t\telse if (uri == StandardUnits.nL) [scale, type] = [1E-9, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mol) [scale, type] = [1, AbsType.Moles];\n\t\telse if (uri == StandardUnits.mmol) [scale, type] = [1E-3, AbsType.Moles];\n\t\telse if (uri == StandardUnits.umol) [scale, type] = [1E-6, AbsType.Moles];\n\t\telse if (uri == StandardUnits.nmol) [scale, type] = [1E-9, AbsType.Moles];\n\t\telse return [AbsType.None, null, null, null];\n\n\t\tif (typeof comp.quantity == 'number')\n\t\t{\n\t\t\tlet error = comp.error == null ? null : comp.error * scale;\n\t\t\treturn [type, (comp.quantity as number) * scale, null, error];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet [lo, hi] = comp.quantity as number[];\n\t\t\treturn [type, lo * scale, hi * scale, null];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {ArrangeMixture, ArrangeMixtureComponent, ArrangeMixtureLine} from './ArrangeMixture';\nimport {Box} from 'webmolkit/util/Geom';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\n\n/*\n\tDrawing a Mixfile, which has been rendered.\n*/\n\nexport class DrawMixture\n{\n\tpublic hoverIndex = -1; // component to give a faint tinting to (for hover-over effect)\n\tpublic activeIndex = -1; // component that is actively engaged with UI\n\tpublic selectedIndex = -1; // component that is passively selected\n\n\tpublic callbackDrawNameLine:(comp:ArrangeMixtureComponent, line:ArrangeMixtureLine, gfx:MetaVector, box:Box) => boolean = null;\n\n\tprivate measure:ArrangeMeasurement;\n\tprivate policy:RenderPolicy;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private layout:ArrangeMixture, private vg:MetaVector)\n\t{\n\t\tthis.measure = layout.measure;\n\t\tthis.policy = layout.policy;\n\t\tthis.scale = layout.scale;\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// renders the experiment, one component at a time\n\tpublic draw():void\n\t{\n\t\tfor (let comp of this.layout.components) if (comp.parentIdx >= 0)\n\t\t\tthis.drawConnection(this.layout.components[comp.parentIdx], comp);\n\n\t\tfor (let n = 0; n < this.layout.components.length; n++) this.drawComponent(n);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate drawConnection(parent:ArrangeMixtureComponent, child:ArrangeMixtureComponent):void\n\t{\n\t\tlet x1 = parent.boundary.maxX(), x2 = child.boundary.minX();\n\t\tlet y1 = parent.boundary.midY(), y2 = child.boundary.midY();\n\t\t//let xm = 0.5 * (x1 + x2);\n\t\tlet xm = x1 + 0.25 * this.scale;\n\t\tlet ym = 0.5 * (y1 + y2);\n\t\tlet d = 4, xd = d, yd = y1 < y2 - 1 ? -d : y1 > y2 + 1 ? d : 0;\n\n\t\tlet px = [x1, xm - xd, xm, xm, xm, xm, xm + xd, x2];\n\t\tlet py = [y1, y1, y1, y1 - yd, y2 + yd, y2, y2, y2];\n\t\tlet lsz = this.scale * 0.1;\n\t\tthis.vg.drawPath(px, py, [false, false, true, false, false, true, false, false], false, 0x000000, lsz, MetaVector.NOCOLOUR, false);\n\t}\n\n\tprivate drawComponent(idx:number):void\n\t{\n\t\tlet comp = this.layout.components[idx];\n\n\t\tlet box = comp.outline.clone();\n\t\tbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\tlet bg = 0xF8F8F8;\n\t\tif (idx == this.activeIndex) bg = 0x8296E4;\n\t\telse if (idx == this.selectedIndex) bg = 0xA9BBFF;\n\t\telse if (idx == this.hoverIndex) bg = 0xE0E0E0;\n\n\t\tthis.vg.drawRect(box.x, box.y, box.w, box.h, 0x808080, 1, bg);\n\n\t\tif (comp.molLayout) new DrawMolecule(comp.molLayout, this.vg).draw();\n\n\t\tif (comp.nameLines.length > 0)\n\t\t{\n\t\t\tlet x = box.x, cx = x + comp.nameBox.midX(), y = box.y + comp.nameBox.y;\n\t\t\tfor (let line of comp.nameLines)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(line.text, comp.fontSize), h = wad[1] + 2 * wad[2];\n\t\t\t\tlet override = this.callbackDrawNameLine && this.callbackDrawNameLine(comp, line, this.vg, new Box(x, y, box.w, h));\n\t\t\t\tif (!override) this.vg.drawText(cx, y, line.text, comp.fontSize, line.col, TextAlign.Centre | TextAlign.Top);\n\t\t\t\ty += h;\n\t\t\t}\n\t\t}\n\n\t\tif (comp.collapseBox)\n\t\t{\n\t\t\tlet cbox = comp.collapseBox.clone();\n\t\t\tcbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\t\tthis.vg.drawRect(cbox.x, cbox.y, cbox.w, cbox.h, 0x808080, 1, 0xF8F8F8);\n\t\t\tlet cx = cbox.midX(), cy = cbox.midY(), d = Math.min(cbox.w, cbox.h) * 0.4, sz = d * 0.2;\n\t\t\tthis.vg.drawLine(cx - d, cy, cx + d, cy, 0x000000, sz);\n\t\t\tif (comp.isCollapsed) this.vg.drawLine(cx, cy - d, cx, cy + d, 0x000000, sz);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {Mixture} from '../data/Mixture';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ArrangeMixture} from './ArrangeMixture';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {deepClone, eventCoords, newElement, pixelDensity} from 'webmolkit/util/util';\nimport {EditCompound} from 'webmolkit/dialog/EditCompound';\nimport {MixfileComponent} from '../data/Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {EditComponent} from './EditComponent';\nimport {LookupCompoundDialog} from '../lookup/LookupCompoundDialog';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {ExtractCTABComponent} from '../lookup/ExtractCTABComponent';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {NormMixture} from '../data/NormMixture';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from './DrawMixture';\nimport {CoordUtil} from 'webmolkit/data/CoordUtil';\nimport {Menu as ElectronMenu, MenuItem as ElectronMenuItem, getCurrentWindow} from '@electron/remote';\n\n/*\n\tHigh level widget for the editing area for a mixture.\n*/\n\nconst DEFAULT_SCALE = 25;\nconst UNDO_SIZE = 10;\n\nenum DragReason\n{\n\tNone,\n\tAny,\n\tPan,\n}\n\nexport class EditMixture extends Widget\n{\n\tpublic callbackUpdateTitle:() => void = null;\n\tpublic callbackInteraction:() => void = null;\n\n\tpublic monochrome = false;\n\n\tprotected mixture = new Mixture();\n\tprotected policy:RenderPolicy = null\n\tprotected canvasMixture:HTMLCanvasElement;\n\tprotected canvasOver:HTMLCanvasElement;\n\n\tprotected undoStack:Mixture[] = [];\n\tprotected redoStack:Mixture[] = [];\n\n\tprotected offsetX = 0;\n\tprotected offsetY = 0;\n\tprotected pointScale = DEFAULT_SCALE;\n\tprotected filthy = true; // filthy: screen is out of date, needs to be redrawn\n\tprotected dirty = false; // dirty: data has changed since last save\n\tprotected layout:ArrangeMixture = null;\n\tprotected collapsedBranches:number[][] = [];\n\tprotected hoverIndex = -1; // component over which the mouse is hovering\n\tprotected activeIndex = -1; // component that is currently being clicked upon\n\tprotected selectedIndex = 0; // selected component (having been previously clicked)\n\tprotected delayedSelect:number[] = null; // if set to an origin vector: to rederive selectedIndex next time the layout is evaluated\n\n\tprotected dragReason = DragReason.None;\n\tprotected dragIndex = -1;\n\tprotected dragX = 0;\n\tprotected dragY = 0;\n\tprotected isEditing = false;\n\tprotected dlgCompound:EditCompound = null;\n\n\tprotected structureIntegrity:Record<string, string> = {}; // metadata key -> name for those which are sensitive to changes to structure\n\n\t// ------------ public methods ------------\n\n\tconstructor(protected proxyClip:ClipboardProxy, protected proxyMenu:MenuProxy)\n\t{\n\t\tsuper();\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet content = this.contentDOM;\n\n\t\tcontent.css({'width': '100%', 'height': '100%'});\n\t\tcontent.css({'background-color': '#F0F0F0'});\n\t\tcontent.css({'position': 'relative', 'outline-width': '0'});\n\n\t\tlet canvasStyle = 'position: absolute; left: 0; top: 0; pointer-events: none;';\n\t\tthis.canvasMixture = newElement(content, 'canvas', {style: canvasStyle}) as HTMLCanvasElement;\n\t\tthis.canvasOver = newElement(content, 'canvas', {style: canvasStyle}) as HTMLCanvasElement;\n\n\t\t//content.onResize(() => this.redraw());\n\n\t\t// setup all the interactive events\n\t\tcontent.onClick((event) => this.mouseClick(event));\n\t\tcontent.onDblClick((event) => this.mouseDoubleClick(event));\n\t\tcontent.onMouseDown((event) => this.mouseDown(event));\n\t\tcontent.onMouseUp((event) => this.mouseUp(event));\n\t\tcontent.onMouseOver((event) => this.mouseOver(event));\n\t\tcontent.onMouseLeave((event) => this.mouseOut(event));\n\t\tcontent.onMouseMove((event) => this.mouseMove(event));\n\t\t// (maybe have mousewheel as an option: in Electron mode it makes some sense, but embedded\n\t\t// on a web page it' not good...)\n\t\t//content.on('mousewheel', (event:JQueryEventObject) => this.mouseWheel(event));\n\t\tcontent.onKeyPress((event) => this.keyPressed(event));\n\t\tcontent.onKeyDown((event) => this.keyDown(event));\n\t\tcontent.onKeyUp((event) => this.keyUp(event));\n\t\tcontent.onContextMenu((event) => this.contextMenu(event));\n\n\t\tcontent.attr({'id': 'mixtureEditor_main', 'tabindex': '0'});\n\t\tthis.refocus();\n\t\tthis.redraw(true, false);\n\t}\n\n\t// whether or not menu commands are being received; no means that it's in dialog/editing mode\n\tpublic isReceivingCommands():boolean {return !this.isEditing;}\n\tpublic setEditing(isEditing:boolean):void {this.isEditing = isEditing;}\n\tpublic compoundEditor():EditCompound {return this.dlgCompound;}\n\n\t// add a metadata key that can potentially stop being valid when the structure is changed\n\tpublic addStructureIntegrityKey(key:string, description:string):void\n\t{\n\t\tthis.structureIntegrity[key] = description;\n\t}\n\n\t// access to current state\n\tpublic getMixture():Mixture {return this.mixture;}\n\tpublic setMixture(mixture:Mixture, withAutoScale:boolean = false, withStashUndo:boolean = true):void\n\t{\n\t\t// NOTE: the \"withAutoScale\" parameter is currently not very meaningful since the modified mixture gets a re-layout\n\t\twithAutoScale = true;\n\n\t\tif (this.delayedSelect == null && this.selectedIndex >= 0 && this.layout != null) this.delayedSelect = this.layout.components[this.selectedIndex].origin;\n\n\t\tif (withStashUndo) this.stashUndo();\n\t\tthis.mixture = mixture;\n\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t\tthis.pointScale = this.policy.data.pointScale;\n\t\tthis.filthy = true;\n\t\tthis.layout = null;\n\t\tthis.hoverIndex = -1;\n\t\tthis.activeIndex = -1;\n\t\tthis.selectedIndex = -1;\n\t\tthis.redraw(withAutoScale);\n\n\t\tthis.dirty = true;\n\t\tif (this.callbackUpdateTitle) this.callbackUpdateTitle();\n\t}\n\n\t// returns the selected origin indices & component, or null if nothing selected\n\tpublic getSelected():[number[], MixfileComponent]\n\t{\n\t\tif (this.selectedIndex < 0 || this.layout == null) return [null, null];\n\t\tlet comp = this.layout.components[this.selectedIndex];\n\t\treturn [comp.origin, comp.content];\n\t}\n\n\tpublic getCollapsedBranches():number[][] {return this.collapsedBranches;}\n\n\t// wipes the undo & redo stacks\n\tpublic clearHistory():void\n\t{\n\t\tthis.undoStack = [];\n\t\tthis.redoStack = [];\n\t}\n\n\t// appends the current state to the undo-stack\n\tpublic stashUndo():void\n\t{\n\t\t//if (this.undoStack.length == 0 && this.mixture.isEmpty()) return; // don't put empty stuff at the beginning\n\t\tthis.undoStack.push(this.mixture.clone());\n\t\twhile (this.undoStack.length > UNDO_SIZE) this.undoStack.splice(0, 1);\n\t\tthis.redoStack = [];\n\t}\n\n\t// reports on the state of the undo/redo buffers\n\tpublic canUndo():boolean {return this.undoStack.length > 0;}\n\tpublic canRedo():boolean {return this.redoStack.length > 0;}\n\n\t// actually does the undo/redo operation\n\tpublic performUndo():void\n\t{\n\t\tif (this.undoStack.length == 0) return;\n\t\tthis.redoStack.push(this.mixture.clone());\n\t\tthis.setMixture(this.undoStack.pop(), false, false);\n\t}\n\tpublic performRedo():void\n\t{\n\t\tif (this.redoStack.length == 0) return;\n\t\tthis.undoStack.push(this.mixture.clone());\n\t\tthis.setMixture(this.redoStack.pop(), false, false);\n\t}\n\n\t// need-save status\n\tpublic isDirty():boolean {return this.dirty;}\n\tpublic setDirty(dirty:boolean):void {this.dirty = dirty;}\n\n\t// returns true if the mixture content is empty\n\tpublic isBlank():boolean {return this.mixture.isEmpty();}\n\n\t// makes sure the content gets redrawn imminently; calling many times is not a performance issue\n\tpublic delayedRedraw():void\n\t{\n\t\tthis.filthy = true;\n\t\twindow.setTimeout(() => {if (this.filthy) this.redraw();}, 10);\n\t}\n\n\t// alter zoom level by a factor\n\tpublic zoom(scale:number):void\n\t{\n\t\tthis.pointScale *= scale;\n\t\tthis.layout = null;\n\t\tthis.redraw();\n\t}\n\n\t// rescale to fit & recentre\n\tpublic zoomFull():void\n\t{\n\t\tthis.layout = null;\n\t\tthis.pointScale = DEFAULT_SCALE;\n\t\tthis.redraw(true, true);\n\t}\n\n\t// rescale to fit & recentre/with a limit to the size\n\tpublic zoomNormal():void\n\t{\n\t\tthis.layout = null;\n\t\tthis.pointScale = DEFAULT_SCALE;\n\t\tthis.redraw(true, false);\n\t}\n\n\t// select the given component index (programmatically)\n\tpublic selectComponent(idx:number):void\n\t{\n\t\tif (this.selectedIndex == idx) return;\n\t\tthis.selectedIndex = idx;\n\t\tthis.activeIndex = -1;\n\t\tthis.delayedRedraw();\n\t}\n\n\t// convenient overload for selecting whichever numbered component matches the origin sequence\n\tpublic selectOrigin(origin:number[]):void\n\t{\n\t\tlet complist = this.layout.components;\n\t\tfor (let n = 0; n < complist.length; n++) if (Vec.equals(complist[n].origin, origin))\n\t\t{\n\t\t\tthis.selectComponent(n);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// bring up the structure-editing panel, which uses the generic sketching dialog\n\tpublic editStructure():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\n\t\tlet mol = comp.molfile ? MoleculeStream.readUnknown(comp.molfile) : null;\n\n\t\tthis.dlgCompound = new EditCompound(mol ? mol : new Molecule(), this.contentDOM);\n\t\tthis.dlgCompound.onSave(() =>\n\t\t{\n\t\t\tlet mol = this.dlgCompound.getMolecule();\n\t\t\tcomp = deepClone(comp);\n\t\t\tthis.checkStructureIntegrity(comp, mol);\n\n\t\t\tlet molfile = MoleculeStream.writeMDLMOL(mol);\n\t\t\tif (!molfile) molfile = null;\n\n\t\t\tcomp.molfile = molfile;\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tif (modmix.setComponent(origin, comp))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\n\t\t\tthis.dlgCompound.close();\n\t\t});\n\t\tthis.dlgCompound.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.dlgCompound = null;\n\t\t\tthis.refocus();\n\t\t});\n\t\tthis.dlgCompound.defineClipboard(this.proxyClip);\n\t\tthis.dlgCompound.defineContext(this.proxyMenu);\n\t\tthis.isEditing = true;\n\t\tthis.dlgCompound.open();\n\t}\n\n\t// invoke the editor dialog for the current component - basically everything except the structure\n\tpublic editDetails():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\n\t\tlet w = window.innerWidth * 0.8, h = window.innerHeight * 0.8;\n\n\t\tlet dlg = new EditComponent(deepClone(comp), [w, h], this.contentDOM);\n\t\tdlg.proxyClip = this.proxyClip;\n\t\tdlg.onSave(() =>\n\t\t{\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tif (modmix.setComponent(origin, dlg.getComponent()))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.onSketch(() =>\n\t\t{\n\t\t\tthis.selectOrigin(origin);\n\t\t\tthis.editStructure();\n\t\t});\n\t\tdlg.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.refocus();\n\t\t});\n\t\tthis.isEditing = true;\n\t\tdlg.open();\n\t}\n\n\t// lookup: searches for compound information based on name, prespecified or otherwise\n\tpublic lookupCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\t\tlet curX = this.contentDOM.width(), curY = this.contentDOM.height();\n\t\tlet dlg = new LookupCompoundDialog(comp.name, [curX, curY]);\n\t\tdlg.onSelect(() =>\n\t\t{\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tcomp = deepClone(modmix.getComponent(origin));\n\t\t\tlet name = dlg.getName(), mol = dlg.getMolecule();\n\t\t\tif (name != null) comp.name = name;\n\t\t\tif (mol != null) comp.molfile = new MDLMOLWriter(mol).write();\n\t\t\tif (modmix.setComponent(origin, comp))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.refocus();\n\t\t});\n\t\tdlg.open();\n\t}\n\n\t// deletes selected component, if any\n\tpublic deleteCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (origin.length == 0) return;\n\n\t\tlet modmix = this.mixture.clone();\n\t\tmodmix.deleteComponent(origin);\n\t\tthis.delayedSelect = null;\n\t\tthis.setMixture(modmix);\n\n\t\torigin = origin.slice(0);\n\t\tif (modmix.getComponent(origin)) {}\n\t\telse if (Vec.last(origin) > 0) origin[origin.length - 1]--;\n\t\telse origin.pop();\n\t\tthis.selectOrigin(origin);\n\t}\n\n\t// append a new sub-item to the end of the current component's list\n\tpublic appendToCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet comp = modmix.getComponent(origin);\n\t\tif (!comp.contents) comp.contents = [];\n\t\tcomp.contents.push({});\n\t\tthis.delayedSelect = Vec.concat(origin, [comp.contents.length - 1]);\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// inserts an empty component before the current one\n\tpublic prependBeforeCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet modmix = this.mixture.clone();\n\t\tmodmix.prependBefore(origin, {});\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// insert above/below the current component\n\tpublic insertBeforeCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (Vec.isBlank(origin)) return;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet pos = origin.pop();\n\t\tlet parent = modmix.getComponent(origin);\n\t\tparent.contents.splice(pos, 0, {});\n\t\torigin.push(pos);\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\tpublic insertAfterCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (Vec.isBlank(origin)) return;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet pos = origin.pop();\n\t\tlet parent = modmix.getComponent(origin);\n\t\tparent.contents.splice(pos + 1, 0, {});\n\t\torigin.push(pos + 1);\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// move the current component up or down the hierarchy\n\tpublic reorderCurrent(dir:number):void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (origin.length == 0) return;\n\n\t\tlet modmix = this.mixture.clone();\n\t\tlet [parent, idx] = Mixture.splitOrigin(origin);\n\t\tlet comp = modmix.getComponent(parent);\n\t\tif (idx + dir < 0 || idx + dir >= comp.contents.length) return;\n\t\tVec.swap(comp.contents, idx, idx + dir);\n\t\tthis.delayedSelect = Vec.concat(parent, [idx + dir]);\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// copy current to clipboard, and optionally excise it\n\tpublic clipboardCopy(andCut:boolean, wholeBranch:boolean = false):void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\n\t\tlet comp = deepClone(this.mixture.getComponent(origin));\n\t\tdelete (comp as any).mixfileVersion;\n\t\tif (!wholeBranch) comp.contents = [];\n\t\tlet str = Mixture.serialiseComponent(comp);\n\n\t\t/*let clipboard = require('electron').clipboard;\n\t\tclipboard.writeText(str);*/\n\t\tthis.proxyClip.setString(str);\n\n\t\tif (origin.length > 0 && andCut) this.deleteCurrent();\n\t}\n\n\t// paste from clipboard, if possible\n\tpublic clipboardPaste():void\n\t{\n\t\t/*let clipboard = require('electron').clipboard;\n\t\tlet str = clipboard.readText();*/\n\t\tlet str = this.proxyClip.getString();\n\n\t\tlet json:any = null;\n\t\ttry {json = JSON.parse(str);}\n\t\tcatch (e) {} // silent failure\n\n\t\tlet origin:number[] = [];\n\t\tif (this.selectedIndex >= 0) origin = this.layout.components[this.selectedIndex].origin;\n\n\t\t// see if it's a Molfile CTAB that has enumeration flags set (stays null if nothing component-ish)\n\t\tif (!json) json = new ExtractCTABComponent(str).extract();\n\n\t\t// see if it's just a regular singular molecule\n\t\tif (!json)\n\t\t{\n\t\t\tlet mol = MoleculeStream.readUnknown(str);\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet modmix = this.mixture.clone();\n\t\t\t\tlet comp = modmix.getComponent(origin);\n\t\t\t\tif (comp)\n\t\t\t\t{\n\t\t\t\t\tcomp.molfile = new MDLMOLWriter(mol).write();\n\t\t\t\t\tthis.setMixture(modmix);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse alert('Clipboard does not contain a mixture component.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!json.name && !json.molfile && !json.quantity && Vec.isBlank(json.contents))\n\t\t{\n\t\t\talert('Clipboard content is either not a component, or has no interesting content.');\n\t\t\treturn;\n\t\t}\n\n\t\t// special deal when pasting into nothing: just replace it\n\t\tif (this.selectedIndex < 0 && this.mixture.isEmpty())\n\t\t{\n\t\t\tlet modmix = new Mixture(json);\n\t\t\tthis.delayedSelect = [];\n\t\t\tthis.setMixture(modmix);\n\t\t\treturn;\n\t\t}\n\n\t\t// append to or replace some piece, preferably selected\n\t\tlet modmix = this.mixture.clone();\n\t\tlet comp = modmix.getComponent(origin);\n\t\tif (Mixture.isComponentEmpty(comp))\n\t\t{\n\t\t\tObject.keys(comp).forEach((key:string) => delete (comp as any)[key]);\n\t\t\tObject.keys(json).forEach((key:string) => (comp as any)[key] = json[key]);\n\t\t\tthis.delayedSelect = origin;\n\t\t}\n\t\telse // append\n\t\t{\n\t\t\tif (!comp.contents) comp.contents = [];\n\t\t\tcomp.contents.push(json);\n\t\t\tthis.delayedSelect = Vec.concat(origin, [comp.contents.length - 1]);\n\t\t}\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// call this anytime the focus could have wandered\n\tpublic refocus():void\n\t{\n\t\tthis.contentDOM.grabFocus();\n\t}\n\n\t// return the layout around onscreen for an indicated component\n\tpublic getComponentPosition(origin:number[]):Box\n\t{\n\t\tfor (let comp of this.layout.components) if (Vec.equals(origin, comp.origin))\n\t\t{\n\t\t\tlet box = comp.boundary.clone();\n\t\t\tbox.x += this.offsetX;\n\t\t\tbox.y += this.offsetY;\n\t\t\treturn box;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprotected redraw(rescale = false, fit = false):void\n\t{\n\t\tthis.filthy = false;\n\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height();\n\t\tlet density = pixelDensity();\n\n\t\tfor (let canvas of [this.canvasMixture, this.canvasOver])\n\t\t{\n\t\t\tcanvas.width = width * density;\n\t\t\tcanvas.height = height * density;\n\t\t\tcanvas.style.width = width + 'px';\n\t\t\tcanvas.style.height = height + 'px';\n\t\t}\n\n\t\tif (!this.layout)\n\t\t{\n\t\t\tlet measure = new OutlineMeasurement(0, 0, this.pointScale);\n\t\t\tthis.policy = this.monochrome ? RenderPolicy.defaultBlackOnWhite(this.pointScale) : RenderPolicy.defaultColourOnWhite(this.pointScale);\n\t\t\tthis.layout = new ArrangeMixture(this.mixture, measure, this.policy);\n\t\t\tthis.layout.showCollapsors = true;\n\t\t\tthis.layout.collapsedBranches = this.collapsedBranches;\n\t\t\tthis.layout.packBranches = new Size(0.8 * this.contentDOM.width(), 0.8 * this.contentDOM.height());\n\t\t\tthis.layout.norm = new NormMixture(this.mixture);\n\t\t\tthis.layout.norm.analyse();\n\t\t\tthis.layout.arrange();\n\t\t\tif (rescale) this.scaleToFit(fit);\n\t\t}\n\n\t\tif (this.delayedSelect)\n\t\t{\n\t\t\tfor (let n = 0; n < this.layout.components.length; n++) if (Vec.equals(this.delayedSelect, this.layout.components[n].origin))\n\t\t\t{\n\t\t\t\tthis.selectedIndex = n;\n\t\t\t\tthis.ensureComponentVisible(n);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.delayedSelect = null;\n\t\t}\n\n\t\tlet gfx = new MetaVector();\n\t\tlet draw = new DrawMixture(this.layout, gfx);\n\t\tdraw.hoverIndex = this.hoverIndex;\n\t\tdraw.activeIndex = this.activeIndex;\n\t\tdraw.selectedIndex = this.selectedIndex;\n\t\tdraw.draw();\n\n\t\tgfx.offsetX = this.offsetX;\n\t\tgfx.offsetY = this.offsetY;\n\t\tgfx.setSize(width, height);\n\t\tgfx.renderCanvas(this.canvasMixture, true);\n\n\t}\n\n\t// assuming that layout is already defined, modifies the offset/scale so that\n\tprotected scaleToFit(mustFit:boolean):void\n\t{\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height(), pad = 4;\n\t\tif (mustFit)\n\t\t{\n\t\t\tif (this.layout.width > width - pad || this.layout.height > height - pad)\n\t\t\t{\n\t\t\t\tlet scale = Math.min((width - pad) / this.layout.width, (height - pad) / this.layout.height);\n\t\t\t\tthis.pointScale *= scale;\n\t\t\t\tthis.layout.scaleComponents(scale);\n\t\t\t}\n\t\t\tthis.offsetX = 0.5 * (width - this.layout.width);\n\t\t\tthis.offsetY = 0.5 * (height - this.layout.height);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.offsetX = Math.max(pad, 0.5 * (width - this.layout.width));\n\t\t\tthis.offsetY = 0.5 * (height - this.layout.height);\n\t\t}\n\t}\n\n\t// make sure the indicated component is fully visible onscreen\n\tprivate ensureComponentVisible(idx:number):void\n\t{\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height(), pad = 4;\n\t\tlet comp = this.layout.components[idx];\n\t\tlet box = comp.boundary.withOffsetBy(this.offsetX, this.offsetY);\n\n\t\tif (box.minX() < pad) this.offsetX -= box.minX() - pad;\n\t\telse if (box.maxX() > width - pad) this.offsetX += width - pad - box.maxX();\n\n\t\tif (box.minY() < pad) this.offsetY -= box.minY() - pad;\n\t\telse if (box.maxY() > height - pad) this.offsetY += height - pad - box.maxY();\n\t}\n\n\t// mouse has moved: see if we need to update the hover\n\tprotected updateHoverCursor(event:MouseEvent):void\n\t{\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.activeIndex >= 0 ? -1 : this.pickComponent(x, y);\n\t\tif (idx != this.hoverIndex)\n\t\t{\n\t\t\tthis.hoverIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// finds the index of a component at a given position, or -1 if none\n\tprotected pickComponent(x:number, y:number):number\n\t{\n\t\tlet pick = this.pickComponentSection(x, y);\n\t\treturn pick == null || pick[1] ? -1 : pick[0];\n\t}\n\n\t// more detailed pick: nothing = null, something = [compidx, collapsebox]\n\tprotected pickComponentSection(x:number, y:number):[number, boolean]\n\t{\n\t\tif (!this.layout) return null;\n\t\tfor (let n = 0; n < this.layout.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.layout.components[n];\n\t\t\tlet ux = x - this.offsetX - comp.boundary.x, uy = y - this.offsetY - comp.boundary.y;\n\t\t\tif (comp.outline.contains(ux, uy)) return [n, false];\n\t\t\tif (comp.collapseBox && comp.collapseBox.contains(ux, uy)) return [n, true];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// cursor key wandering\n\tprotected navigateDirection(dir:string):void\n\t{\n\t\tlet newIndex = -1;\n\t\tif (this.selectedIndex < 0) newIndex = 0;\n\t\telse\n\t\t{\n\t\t\tlet origin = this.layout.components[this.selectedIndex].origin.slice(0);\n\n\t\t\tif (dir == 'tab')\n\t\t\t{\n\t\t\t\tif (Vec.isBlank(origin))\n\t\t\t\t{\n\t\t\t\t\tlet comp = this.mixture.getComponent(origin);\n\t\t\t\t\tif (Vec.isBlank(comp.contents))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.delayedSelect = [0];\n\t\t\t\t\t\tthis.appendToCurrent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdir = 'right';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet parent = this.mixture.getComponent(origin.slice(0, origin.length - 1)), pos = Vec.last(origin);\n\t\t\t\t\tif (pos == parent.contents.length - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.insertAfterCurrent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdir = 'down';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dir == 'left')\n\t\t\t{\n\t\t\t\tif (origin.length == 0) return;\n\t\t\t\torigin.pop();\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'right')\n\t\t\t{\n\t\t\t\torigin.push(0);\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'up')\n\t\t\t{\n\t\t\t\tif (origin.length == 0 || origin[origin.length - 1] == 0) return;\n\t\t\t\torigin[origin.length - 1]--;\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'down')\n\t\t\t{\n\t\t\t\tif (origin.length == 0) return;\n\t\t\t\torigin[origin.length - 1]++;\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t}\n\n\t\tif (newIndex >= 0 && newIndex < this.layout.components.length)\n\t\t{\n\t\t\tthis.delayedSelect = this.layout.components[newIndex].origin;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// collapses or un-collapses the indicated position\n\tprotected toggleCollapsed(idx:number):void\n\t{\n\t\tlet origin = this.layout.components[idx].origin;\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.collapsedBranches.length; n++) if (Vec.equals(origin, this.collapsedBranches[n]))\n\t\t{\n\t\t\tthis.collapsedBranches.splice(n, 1);\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\t\tif (!got) this.collapsedBranches.push(origin);\n\t\tthis.layout = null;\n\t\tthis.redraw();\n\t}\n\n\t// interactivity\n\tprotected mouseClick(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet picked = this.pickComponentSection(x, y);\n\t\tif (picked && picked[1]) this.toggleCollapsed(picked[0]);\n\t}\n\tprotected mouseDoubleClick(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tevent.stopImmediatePropagation();\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tthis.hoverIndex = -1;\n\t\t\tthis.activeIndex = -1;\n\t\t\tthis.selectedIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t\tthis.editDetails();\n\t\t}\n\t}\n\tprotected mouseDown(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\t\t//event.preventDefault();\n\n\t\tif (event.which != 1) return;\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\t//this.contextMenu(event);\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\n\t\tthis.dragReason = DragReason.Any;\n\t\tthis.dragIndex = idx;\n\t\tthis.dragX = x;\n\t\tthis.dragY = y;\n\n\t\tif (idx != this.activeIndex)\n\t\t{\n\t\t\tthis.activeIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\tprotected mouseUp(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.dragReason != DragReason.Pan)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\t\tlet idx = this.pickComponent(x, y);\n\t\t\tif (idx == this.activeIndex) this.selectedIndex = idx;\n\t\t\tthis.activeIndex = -1;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\n\t\tthis.dragReason = DragReason.None;\n\t}\n\tprotected mouseOver(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\t}\n\tprotected mouseOut(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\t\tthis.dragReason = DragReason.None;\n\t}\n\tprotected mouseMove(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\n\t\tif (this.dragReason == DragReason.Any && this.dragIndex < 0)\n\t\t{\n\t\t\tthis.dragReason = DragReason.Pan;\n\t\t}\n\n\t\tif (this.dragReason == DragReason.Pan)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\t\tlet dx = x - this.dragX, dy = y - this.dragY;\n\t\t\tif (dx != 0 && dy != 0)\n\t\t\t{\n\t\t\t\tthis.offsetX += dx;\n\t\t\t\tthis.offsetY += dy;\n\t\t\t\tthis.delayedRedraw();\n\t\t\t\t[this.dragX, this.dragY] = [x, y];\n\t\t\t}\n\t\t}\n\t}\n\tprotected keyPressed(event:KeyboardEvent):void\n\t{\n\t\t//let ch = String.fromCharCode(event.keyCode || event.charCode);\n\t\t//console.log('PRESSED['+ch+'] key='+event.keyCode+' chcode='+event.charCode);\n\t}\n\tprotected keyDown(event:KeyboardEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tif (!this.isReceivingCommands()) return;\n\n\t\tlet key = event.key;\n\t\t//console.log('DOWN: key='+key);\n\n\t\tif (!event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey)\n\t\t{\n\t\t\tif (key == 'Enter')\n\t\t\t{\n\t\t\t\tif (this.selectedIndex >= 0) this.editDetails();\n\t\t\t}\n\t\t\telse if (key == 'Escape') {} // escape\n\t\t\telse if (key == 'ArrowLeft') this.navigateDirection('left');\n\t\t\telse if (key == 'ArrowRight') this.navigateDirection('right');\n\t\t\telse if (key == 'ArrowUp') this.navigateDirection('up');\n\t\t\telse if (key == 'ArrowDown') this.navigateDirection('down');\n\t\t\telse if (key == 'Tab') this.navigateDirection('tab');\n\t\t\telse return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\tprotected keyUp(event:KeyboardEvent):void\n\t{\n\t\t// !!\n\t}\n\tprotected mouseWheel(event:WheelEvent):void\n\t{\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet delta = Math.abs(event.deltaX) > Math.abs(event.deltaY) ? event.deltaX : event.deltaY;\n\t\tlet scale = 1 + Math.abs(delta) * 0.05;\n\t\tif (delta < 0) scale = 1.0 / scale;\n\n\t\tlet newScale = this.pointScale * scale;\n\t\tthis.offsetX = x - (newScale / this.pointScale) * (x - this.offsetX);\n\t\tthis.offsetY = y - (newScale / this.pointScale) * (y - this.offsetY);\n\t\t//if (this.layout) this.layout.scaleComponents(newScale / this.pointScale);\n\t\tthis.pointScale = newScale;\n\n\t\tthis.layout = null;\n\t\tthis.delayedRedraw();\n\t\tevent.preventDefault();\n\t}\n\tprotected contextMenu(event:MouseEvent):void\n\t{\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tevent.preventDefault();\n\t\tif (!this.isReceivingCommands()) return;\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\n\t\tthis.selectedIndex = idx;\n\t\tthis.activeIndex = -1;\n\t\tthis.delayedRedraw();\n\n\t\tlet menu = new ElectronMenu();\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tlet comp = this.layout.components[idx].content, origin = this.layout.components[idx].origin;\n\t\t\tlet sel = ():void => this.selectComponent(idx);\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Edit Structure', click: () => {sel(); this.editStructure();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Edit Details', click: () => {sel(); this.editDetails();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Lookup Name', click: () => {sel(); this.lookupCurrent();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Append', click: () => {sel(); this.appendToCurrent();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Prepend', click: () => {sel(); this.prependBeforeCurrent();}}));\n\t\t\tif (origin.length > 0)\n\t\t\t{\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Insert Before', click: () => {sel(); this.insertBeforeCurrent();}}));\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Insert After', click: () => {sel(); this.insertAfterCurrent();}}));\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Delete', click: () => {this.selectComponent(idx); this.deleteCurrent();}}));\n\n\t\t\t\tif (origin[origin.length - 1] > 0)\n\t\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Move Up', click: () => {sel(); this.reorderCurrent(-1);}}));\n\t\t\t\tif (origin[origin.length - 1] < Vec.arrayLength(this.mixture.getParentComponent(origin).contents) - 1)\n\t\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Move Down', click: () => {sel(); this.reorderCurrent(1);}}));\n\t\t\t}\n\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Copy', click: () => {sel(); this.clipboardCopy(false);}}));\n\t\t\tif (Vec.arrayLength(comp.contents) > 0)\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Copy Branch', click: () => {sel(); this.clipboardCopy(false, true);}}));\n\t\t\tif (origin.length > 0)\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Cut', click: () => {sel(); this.clipboardCopy(true);}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Paste', click: () => {sel(); this.clipboardPaste();}}));\n\n\t\t\tif (Vec.notBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet label = this.layout.components[idx].isCollapsed ? 'Expand Branch' : 'Collapse Branch';\n\t\t\t\tmenu.append(new ElectronMenuItem({label: label, click: () => this.toggleCollapsed(idx)}));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Zoom In', click: () => this.zoom(1.25)}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Zoom Out', click: () => this.zoom(0.8)}));\n\t\t}\n\n\t\tmenu.popup({window: getCurrentWindow()});\n\t}\n\n\t// given that the structure may have changed, see if any metadata is potentially invalidated - and ask the user; the component parameter\n\t// may be modified\n\tprotected checkStructureIntegrity(comp:MixfileComponent, newMol:Molecule):void\n\t{\n\t\tlet integKeys = Object.keys(this.structureIntegrity).filter((key) => (comp.identifiers && comp.identifiers[key]) || (comp.links && comp.links[key]));\n\t\tif (integKeys.length == 0) return;\n\n\t\tlet oldMol = comp.molfile ? MoleculeStream.readUnknown(comp.molfile) : null;\n\t\tif (MolUtil.isBlank(oldMol) && MolUtil.isBlank(newMol)) return;\n\t\tif (oldMol && newMol && CoordUtil.sketchMappable(oldMol, newMol)) return;\n\n\t\tlet msg = MolUtil.isBlank(newMol) ? 'Structure has been removed.' : 'Structure has changed.';\n\t\tmsg += `\\nThe following reference${integKeys.length == 1 ? '' : 's'} may have become stale:`;\n\t\tfor (let key of integKeys) msg += '\\n    ' + this.structureIntegrity[key];\n\t\tmsg += integKeys.length == 1 ? '\\nRemove this reference?' : '\\nRemove these references?';\n\t\tif (!confirm(msg)) return;\n\n\t\tfor (let key of integKeys)\n\t\t{\n\t\t\tif (comp.identifiers) delete comp.identifiers[key];\n\t\t\tif (comp.links) delete comp.links[key];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {Box} from 'webmolkit/util/Geom';\nimport {installInlineCSS, Theme} from 'webmolkit/util/Theme';\nimport {addTooltip} from 'webmolkit/ui/Tooltip';\nimport {escapeHTML} from 'webmolkit/util/util';\n\n/*\n\tA banner that goes along the top of the screen and fills up with clickable icons.\n*/\n\nexport enum MenuBannerCommand\n{\n\tNewMixture = 'newMixture',\n\tNewCollection = 'newCollection',\n\tOpen = 'open',\n\tSave = 'save',\n\tSaveAs = 'saveAs',\n\tEditDetails = 'editDetails',\n\tEditStructure = 'editStructure',\n\tLookup = 'lookup',\n\tExportSVG = 'exportSVG',\n\tExportSDF = 'exportSDF',\n\tCreateMInChI = 'createMInChI',\n\tAppend = 'append',\n\tPrepend = 'prepend',\n\tInsertBefore = 'insertBefore',\n\tInsertAfter = 'insertAfter',\n\tDelete = 'delete',\n\tMoveUp = 'moveUp',\n\tMoveDown = 'moveDown',\n\tUndo = 'undo',\n\tRedo = 'redo',\n\tCopy = 'copy',\n\tCopyBranch = 'copyBranch',\n\tCut = 'cut',\n\tPaste = 'paste',\n\tZoomFull = 'zoomFull',\n\tZoomNormal = 'zoomNormal',\n\tZoomIn = 'zoomIn',\n\tZoomOut = 'zoomOut',\n\tViewDetail = 'viewDetail',\n\tViewCard = 'viewCard',\n\tBack = 'back',\n}\n\nexport interface MenuBannerButton\n{\n\ticon:string; // filename\n\ttip:string; // popup tooltip\n\tcmd:string;\n\twidth?:number; // optional width override\n}\n\nconst CSS_MENUBANNER = `\n\t*.mixtures-menubanner-button:hover\n\t{\n\t\tbackground-color: #D0D0D0;\n\t}\n\t*.mixtures-menubanner-button:active\n\t{\n\t\tbackground-color: #C0C0C0;\n\t}\n`;\nexport class MenuBanner\n{\n\tpublic callbackRefocus:() => void = null;\n\n\tprivate divFlex:DOM;\n\tprivate mapDiv:Record<string, DOM> = {};\n\tprivate mapSVG:Record<string, DOM> = {};\n\tprivate mapActive:Record<string, boolean> = {};\n\tprivate selected = new Set<string>();\n\n\t// ------------ public methods ------------\n\n\tconstructor(private commands:MenuBannerButton[][], private callbackAction:(cmd:string) => void)\n\t{\n\t\tinstallInlineCSS('mixtures-menubanner', CSS_MENUBANNER);\n\t}\n\n\tpublic render(domParent:DOM):void\n\t{\n\t\tdomParent.empty();\n\t\tthis.divFlex = dom('<div/>').appendTo(domParent).css({'display': 'flex', 'width': '100%', 'height': '100%'});\n\t\tthis.divFlex.css({'flex-direction': 'row', 'flex-wrap': 'nowrap', 'justify-content': 'space-around', 'align-items': 'center'});\n\t\t//this.divFlex.css({'linear-gradient': '90deg, #F0F0F0, #808080'});\n\t\tthis.divFlex.css({'background': 'linear-gradient(to bottom, #FFFFFF, #C0C0C0)'});\n\t\tthis.divFlex.css({'user-select': 'none' /*, 'pointer-events': 'none'*/});\n\n\t\t//this.divFlex.click(() => {if (this.callbackRefocus) this.callbackRefocus();});\n\n\t\tfor (let blk of this.commands)\n\t\t{\n\t\t\tlet divBlk = dom('<div/>').appendTo(this.divFlex);\n\t\t\tfor (let btn of blk)\n\t\t\t{\n\t\t\t\tlet [div, svg] = this.createCommand(btn);\n\t\t\t\tdivBlk.append(div);\n\t\t\t\tthis.mapDiv[btn.cmd] = div;\n\t\t\t\tthis.mapSVG[btn.cmd] = svg;\n\t\t\t\tthis.mapActive[btn.cmd] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// switch on/off specific buttons\n\tpublic activateButtons(map:Record<string, boolean>):void\n\t{\n\t\tfor (let cmd in map)\n\t\t{\n\t\t\tlet active = this.mapActive[cmd] = map[cmd];\n\t\t\tthis.mapSVG[cmd].css({'opacity': active ? 1 : 0.5});\n\t\t}\n\t}\n\n\t// control over which button(s) are selected\n\tpublic addSelected(cmd:string):void\n\t{\n\t\tif (this.selected.has(cmd)) return;\n\t\tthis.selected.add(cmd);\n\t\tthis.mapDiv[cmd].css({'background-color': '#D0D0D0'});\n\t}\n\tpublic removeSelected(cmd:string):void\n\t{\n\t\tif (!this.selected.has(cmd)) return;\n\t\tthis.selected.delete(cmd);\n\t\tthis.mapDiv[cmd].css({'background-color': 'transparent'});\n\t}\n\n\t// fetch the position of the given icon, relative to the banner overall\n\tpublic iconPosition(cmd:MenuBannerCommand):Box\n\t{\n\t\tlet div = this.mapDiv[cmd];\n\t\tif (!div) return null;\n\t\treturn new Box(div.elHTML.offsetLeft, div.elHTML.offsetTop, div.width(), div.height());\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate createCommand(btn:MenuBannerButton):DOM[]\n\t{\n\t\tlet div = dom('<div/>').css({'display': 'inline-block'});\n\t\tdiv.setAttr('id', 'mixtureEditor_btn_' + btn.icon.substring(0, btn.icon.lastIndexOf('.')));\n\t\tlet width = btn.width ? btn.width : 20;\n\t\tdiv.css({'width': `${width}px`, 'height': '20px', 'margin': '2px', 'padding': '5px'});\n\t\tdiv.css({'border-radius': '4px'});\n\t\tif (this.selected.has(btn.cmd)) div.css({'background-color': '#D0D0D0'});\n\n\t\tlet imgURL = Theme.RESOURCE_URL + '/img/icons/' + btn.icon;\n\t\tlet svg = dom('<img/>').appendTo(div).attr({'src': imgURL});\n\n\t\tdiv.addClass('mixtures-menubanner-button');\n\t\t/*div.onHover(\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet col = this.selected.has(btn.cmd) ? '#D0D0D0' : this.mapActive[btn.cmd] ? '#C0C0C0' : 'transparent';\n\t\t\t\tdiv.setCSS('background-color', col);\n\t\t\t},\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet col = this.selected.has(btn.cmd) ? '#D0D0D0' : 'transparent';\n\t\t\t\tdiv.setCSS('background-color', col);\n\t\t\t});*/\n\t\tdiv.onClick(() =>\n\t\t{\n\t\t\tif (this.callbackRefocus) this.callbackRefocus();\n\t\t\tif (!this.mapActive[btn.cmd]) return;\n\t\t\tthis.callbackAction(btn.cmd);\n\t\t});\n\t\tif (btn.tip) addTooltip(div, escapeHTML(btn.tip));\n\n\t\treturn [div, svg];\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {MenuBannerCommand} from './MenuBanner';\nimport {openNewWindow} from '../startup';\n\n/*\n\tBase class for \"main windows\": an object that takes up the entire browser window document, responds to resizing, etc.\n*/\n\nexport abstract class MainPanel\n{\n\t// ------------ public methods ------------\n\n\tconstructor(public root:DOM)\n\t{\n\t\tdom('body').css({'overflow': 'hidden'});\n\n\t\troot.css({'width': '100%', 'height': document.documentElement.clientHeight + 'px'});\n\t\twindow.addEventListener('resize', () => this.onResize());\n\t\troot.css({'user-select': 'none'});\n\n\t\t(this.root.el as any).addEventListener('menuAction', (event:any, cmd:string) => this.menuAction(cmd as MenuBannerCommand));\n\t}\n\n\t// stub: may be called early on to provide a source file upon which to work\n\tpublic loadFile(filename:string):void\n\t{\n\t}\n\n\t// minimum required functionality for resizing windows; override to capture\n\tprotected onResize():void\n\t{\n\t\tthis.root.css({'height': document.documentElement.clientHeight + 'px'});\n\t}\n\n\t// optionally override this to pre-empt menu actions\n\tpublic menuAction(cmd:string):void\n\t{\n\t\tif (cmd == MenuBannerCommand.NewMixture) openNewWindow('MixturePanel');\n\t\telse if (cmd == MenuBannerCommand.NewCollection) openNewWindow('CollectionPanel');\n\t\telse if (cmd == MenuBannerCommand.Open) this.actionFileOpen();\n\t\telse if (cmd == MenuBannerCommand.Save) this.actionFileSave();\n\t\telse if (cmd == MenuBannerCommand.SaveAs) this.actionFileSaveAs();\n\t\telse this.customMenuAction(cmd);\n\t}\n\n\t// override this to interpret menu non-default menu actions\n\tpublic customMenuAction(cmd:string):void\n\t{\n\t\tconsole.log('MENU:' + cmd);\n\t}\n\n\t// standard actions that must be implemented\n\tprotected abstract actionFileOpen():void;\n\tprotected abstract actionFileSave():void;\n\tprotected abstract actionFileSaveAs():void;\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Mixfile, MixfileComponent} from '../data/Mixfile';\nimport {Mixture} from '../data/Mixture';\nimport {NormMixture, NormMixtureNote} from '../data/NormMixture';\nimport {InChI} from '../data/InChI';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MoleculeStream} from 'webmolkit/data/MoleculeStream';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Units} from '../data/Units';\n\n// quick implementation of CRC hash codes\nlet crc_table:number[] = [];\nfunction make_crc_table():void\n{\n\tif (crc_table.length > 0) return;\n\tfor (let n = 0; n < 256; n++)\n\t{\n\t\tlet c = n;\n\t\tfor (let i = 0; i < 8; i++) if ((c & 1) != 0) c = 0xEDB88320 ^ (c >>> 1); else c = (c >>> 1);\n\t\tcrc_table.push(c);\n\t}\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc():number {return BOOT_CRC;}\nfunction feed_crc(crc:number, byte:number):number\n{\n\tlet idx = (crc ^ byte) & 0xFF;\n\treturn crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc:number):number {return crc ^ BOOT_CRC;}\n\n// work-in-progress placeholder for the recursive MInChI assembler\ninterface MInChIBuilder\n{\n\tlayerN:string; // N-layer is the hierarchical form\n\tlayerG:string; // G-layer has the concentrations\n}\n\n// for marking the segments of the outgoing MInChI string according to category\nexport enum MInChISegment\n{\n\tNone = 0,\n\tHeader, // the initial recognition string\n\tComponent, // the components (of which there can be multiple contiguous instances)\n\tHierarchy, // the /n layer\n\tConcentration, // the /g layer\n}\n\n// augmented version of a component used to stash some MInChI-specific derived content\ninterface MInChIComponent extends MixfileComponent\n{\n\tinchiFrag:string;\n\tuseRatio:number;\n\tnote:NormMixtureNote;\n}\n\nconst MINCHI_VERSION = 'MInChI=0.99.1S';\n\n/*\n\tFormulates a MInChI string out of the given mixture.\n*/\n\nexport class ExportMInChI\n{\n\tprivate mixture:Mixture;\n\tprivate norm:NormMixture;\n\tprivate minchi = '?';\n\tprivate segment:MInChISegment[] = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixfile:Mixfile)\n\t{\n\t\tthis.mixture = new Mixture(deepClone(mixfile));\n\t\tthis.norm = new NormMixture(this.mixture);\n\t\tthis.norm.analyse();\n\t}\n\n\t// this should generally be called first: any component that has a structure but not an InChI string gets one calculated,\n\t// which presumes that the external environment has been configured to allow this; returns true if anything was done, i.e.\n\t// the parameter mixture was modified; note that if any components have an InChI that is wrong, this will be believed\n\tpublic async fillInChI():Promise<boolean>\n\t{\n\t\tif (!InChI.isAvailable()) return false; // silent failure: the caller should check if specific action is required\n\n\t\tlet modified = false;\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile || comp.inchi) continue;\n\t\t\tlet mol:Molecule = null;\n\t\t\ttry {mol = MoleculeStream.readUnknown(comp.molfile);}\n\t\t\tcatch (e) {continue;} // silent failure if it's an invalid molecule\n\t\t\tif (MolUtil.isBlank(mol)) continue;\n\t\t\tlet [inchi, inchiKey] = await InChI.makeInChI(mol);\n\t\t\tcomp.inchi = inchi;\n\t\t\tcomp.inchiKey = inchiKey;\n\t\t\tmodified = true;\n\t\t}\n\t\treturn modified;\n\t}\n\n\t// assembles the MInChI string: once this has completed, the result is available\n\tpublic formulate():void\n\t{\n\t\tlet modmix = this.mixture.clone();\n\t\t//this.sortContents(sortmix.contents);\n\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet note = this.norm.findNote(origin);\n\t\t\tif (note) (modmix.getComponent(origin) as MInChIComponent).note = note;\n\t\t}\n\n\t\t// special deal: any component with >2 mixtures that has a consistent ratio definition needs to be marked\n\t\t// at the parent-component level\n\t\tskip: for (let comp of modmix.getComponents()) if (Vec.len(comp.contents) >= 2)\n\t\t{\n\t\t\tif (Vec.len(comp.contents[0].ratio) != 2) continue;\n\t\t\tlet [numer, denom] = comp.contents[0].ratio;\n\t\t\tfor (let n = 1; n < comp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet ratio = comp.contents[n].ratio;\n\t\t\t\tif (Vec.len(ratio) != 2 || ratio[1] != denom) continue skip;\n\t\t\t\tnumer += ratio[0];\n\t\t\t}\n\t\t\tif (numer != denom) continue;\n\t\t\tfor (let sub of comp.contents) (sub as MInChIComponent).useRatio = sub.ratio[0];\n\t\t}\n\n\t\t// assemble the InChI fragments - which is sorted and unique and devoid of blanks; same for \"placenames\", which are\n\t\t// terminal components that have name and concentration information, but no InChI\n\t\tlet inchiList:string[] = [];\n\t\tconst PFX = 'InChI=1S/'; // if it doesn't start with this, we don't consider it a valid InChI\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet mcomp = modmix.getComponent(origin) as MInChIComponent;\n\t\t\tif (Vec.len(mcomp.contents) > 0) continue; // leaf nodes only need apply\n\n\t\t\tmcomp.inchiFrag = mcomp.inchi || '';\n\t\t\tif (mcomp.inchiFrag.startsWith(PFX)) mcomp.inchiFrag = mcomp.inchiFrag.substring(PFX.length);\n\t\t\tif (!inchiList.includes(mcomp.inchiFrag)) inchiList.push(mcomp.inchiFrag);\n\t\t}\n\t\tinchiList.sort();\n\n\t\tlet root = modmix.mixfile as any as MInChIComponent;\n\t\tlet builder = this.assembleContents(root, inchiList);\n\n\t\tthis.minchi = '';\n\t\tthis.segment = [];\n\n\t\tlet appendSegment = (str:string, type:MInChISegment):void =>\n\t\t{\n\t\t\tthis.minchi += str;\n\t\t\tfor (let n = 0; n < str.length; n++) this.segment.push(type);\n\t\t};\n\n\t\tappendSegment(MINCHI_VERSION, MInChISegment.Header);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tfor (let n = 0; n < inchiList.length; n++)\n\t\t{\n\t\t\tif (n > 0) appendSegment('&', MInChISegment.None);\n\t\t\tappendSegment(inchiList[n], MInChISegment.Component);\n\t\t}\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('n' + builder.layerN, MInChISegment.Hierarchy);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('g' + builder.layerG, MInChISegment.Concentration);\n\t}\n\n\t// returns the MInChI notationstring formulated as above\n\tpublic getResult():string\n\t{\n\t\treturn this.minchi;\n\t}\n\n\t// return the segmentation values that mark the type for each character (corresponding to the notation string)\n\tpublic getSegment():MInChISegment[]\n\t{\n\t\treturn this.segment;\n\t}\n\n\t// prepares a \"hash key\" for the mixture: this is basically a sorted unique list of the InChI keys for the structures; it has no concentration or hierarchy\n\t// information because these things are not canonical\n\tpublic makeLongHashKey():string\n\t{\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tbits = Vec.sortedUnique(bits);\n\t\treturn 'Long-MInChIKey=' + bits.join(';');\n\t}\n\n\t// similar to above except fixed length and quite short\n\tpublic makeShortHashKey():string\n\t{\n\t\tmake_crc_table();\n\t\tconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\tconst NCRC = 4;\n\t\tlet crclist:number[] = [], pos = 0;\n\t\tfor (let n = 0; n < NCRC; n++) crclist.push(start_crc());\n\n\t\tlet feedCharacter = (letter:string) =>\n\t\t{\n\t\t\tlet idx = LETTERS.indexOf(letter);\n\t\t\tif (idx < 0) return;\n\t\t\tcrclist[pos] = feed_crc(crclist[pos], idx);\n\t\t\tpos = pos < NCRC - 1 ? pos + 1 : 0;\n\t\t};\n\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tfor (let bit of Vec.sortedUnique(bits)) for (let letter of bit)\n\t\t{\n\t\t\tfeedCharacter(letter);\n\t\t}\n\n\t\tlet key = 'Short-MInChIKey=';\n\n\t\tfor (let crc of crclist)\n\t\t{\n\t\t\tcrc = end_crc(crc) >>> 1; // clear the least significant bit and the sign as well\n\t\t\tfor (let n = 0; n < 7; n++)\n\t\t\t{\n\t\t\t\tlet idx = crc % 26;\n\t\t\t\tkey += LETTERS[idx];\n\t\t\t\tcrc = Math.trunc(crc / 26);\n\t\t\t}\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tpublic static formatConcentration(quantity:number | number[], error:number, useRatio:number, units:string, relation:string):string\n\t{\n\t\tlet mantissa = (value:number, exp:number):string => Math.round(value * Math.pow(10, -exp)).toString();\n\n\t\t// check for special deal: the \"useRatio\" property is defined if everything in this peer group has a ratio with\n\t\t// the same denominator and they add up correctly; when this isn't the case, it will fall through and convert to\n\t\t// a percentage\n\t\tif (useRatio != null)\n\t\t{\n\t\t\tlet exp = this.determineExponent([useRatio], 4);\n\t\t\treturn mantissa(useRatio, exp) + 'rt' + exp;\n\t\t}\n\n\t\t/*if (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\tlet value = 100 * numer / denom, exp = this.determineExponent([value], 4);\n\t\t\treturn mantissa(value, exp) + 'pp' + exp;\n\t\t}*/\n\n\t\tif (quantity == null || units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (relation != null) bits.push(relation);\n\n\t\tlet values:number[] = typeof quantity == 'number' ? [quantity as number] : quantity;\n\t\tif (error != null) values.push(error);\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\n\t\tlet exp = this.determineExponent(scaled, 4);\n\n\t\tbits.push(mantissa(scaled[0], exp));\n\t\tif (scaled.length > 1)\n\t\t{\n\t\t\tif (Array.isArray(quantity)) bits.push(':'); else bits.push('?');\n\t\t\tbits.push(mantissa(scaled[1], exp));\n\t\t}\n\t\tbits.push(mnemonic);\n\t\tbits.push(exp.toString());\n\n\t\treturn bits.join('');\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate assembleContents(mcomp:MInChIComponent, inchiList:string[]):MInChIBuilder\n\t{\n\t\tlet tree:MInChIBuilder = {layerN: '', layerG: ''};\n\t\tlet builder:MInChIBuilder = {layerN: '', layerG: ''};\n\n\t\t// emit sub-contents recursively\n\t\tif (Vec.len(mcomp.contents) > 0)\n\t\t{\n\t\t\tif (mcomp.contents != null) for (let subComp of mcomp.contents)\n\t\t\t{\n\t\t\t\tlet subTree = this.assembleContents(subComp as MInChIComponent, inchiList);\n\t\t\t\t//if (!subTree.layerN && !subTree.layerG) continue;\n\t\t\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttree.layerN += '&';\n\t\t\t\t\ttree.layerG += '&';\n\t\t\t\t}\n\t\t\t\ttree.layerN += subTree.layerN;\n\t\t\t\ttree.layerG += subTree.layerG;\n\t\t\t}\n\t\t}\n\n\t\t// append the current information\n\t\tlet idx = mcomp.inchiFrag != null ? inchiList.indexOf(mcomp.inchiFrag) + 1 : 0;\n\t\tif (idx > 0) builder.layerN += idx.toString();\n\n\t\tlet conc = ExportMInChI.formatConcentration(mcomp.quantity, mcomp.error, mcomp.useRatio, mcomp.units, mcomp.relation);\n\t\tif (!conc && mcomp.note)\n\t\t{\n\t\t\tlet {concQuantity, concError, concUnits, concRelation} = mcomp.note;\n\t\t\tconc = ExportMInChI.formatConcentration(concQuantity, concError, null, concUnits, concRelation);\n\t\t}\n\t\tif (conc) builder.layerG += conc;\n\n\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t{\n\t\t\tbuilder.layerN = '{' + tree.layerN + '}' + builder.layerN;\n\t\t\tbuilder.layerG = '{' + tree.layerG + '}' + builder.layerG;\n\t\t\tthis.shaveBeard(builder);\n\t\t}\n\n\t\treturn builder;\n\t}\n\n\t// removes unnecessary nesting stubble\n\tprivate shaveBeard(builder:MInChIBuilder):void\n\t{\n\t\twhile (builder.layerN.startsWith('{{') && builder.layerN.endsWith('}}') &&\n\t\t\t   builder.layerG.startsWith('{{') && builder.layerG.endsWith('}}'))\n\t\t{\n\t\t\tbuilder.layerN = builder.layerN.substring(1, builder.layerN.length - 1);\n\t\t\tbuilder.layerG = builder.layerG.substring(1, builder.layerG.length - 1);\n\t\t}\n\t}\n\n\t// given a positive number, gives out an appropriate exponent to scale it to, such that the mantissa can be an integer that accommodates\n\t// the required number of significant figures\n\tprivate static determineExponent(values:number[], sigfig:number):number\n\t{\n\t\tlet minval = Number.POSITIVE_INFINITY;\n\t\tfor (let v of values) minval = Math.min(minval, Math.abs(v));\n\n\t\tif (!Number.isFinite(minval) || Number.isNaN(minval) || minval <= 0) return 0;\n\n\t\tlet exp = Math.round(Math.log10(minval)) - sigfig;\n\t\t//let man = Math.round(minval * Math.pow(10, -exp));\n\n\t\tlet str:string[] = [];\n\t\tfor (let v of values) str.push(Math.round(v * Math.pow(10, -exp)).toString());\n\n\t\touter: while (true)\n\t\t{\n\t\t\tfor (let n = 0; n < str.length; n++)\n\t\t\t{\n\t\t\t\tif (!str[n].endsWith('0')) break outer;\n\t\t\t\tstr[n] = str[n].substring(0, str[n].length - 1);\n\t\t\t}\n\t\t\texp++;\n\t\t}\n\n\t\treturn exp;\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2020 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet, DataSheetColumn} from 'webmolkit/data/DataSheet';\nimport {Mixfile, MixfileComponent} from '../data/Mixfile';\nimport {MDLSDFWriter} from 'webmolkit/data/MDLWriter';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {MDLMOLReader} from 'webmolkit/data/MDLReader';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {ExportMInChI} from './ExportMInChI';\n\n/*\n\tInteroperability with SDfiles: conversion of the Mixfile hierarchy into a flattened SDfile is useful for presenting to\n\tsoftware that can read this format, and is also a waypoint en route to a MInChI string.\n*/\n\nexport class ExportSDFile\n{\n\tprivate ds = new DataSheet();\n\tprivate colMol:number;\n\tprivate colName:number;\n\tprivate colHier:number;\n\tprivate colConc:number;\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tthis.colMol = this.ds.appendColumn('Molecule', DataSheetColumn.Molecule, '');\n\t\tthis.colName = this.ds.appendColumn('Name', DataSheetColumn.String, '');\n\t\tthis.colHier = this.ds.appendColumn('MINCHI$N', DataSheetColumn.String, '');\n\t\tthis.colConc = this.ds.appendColumn('MINCHI$C', DataSheetColumn.String, '');\n\t}\n\n\t// can add any number of mixtures, which will be numbered automatically\n\tpublic append(mixfile:Mixfile):void\n\t{\n\t\t// if the root node is something other than a pure placeholder, then add it explicitly\n\t\tif (mixfile.name || mixfile.molfile || mixfile.inchi)\n\t\t{\n\t\t\tthis.appendComponent(mixfile, [1]);\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, add all of contents of the root node as a series with incrementing primary indexes\n\t\tif (!mixfile.contents) return;\n\t\tfor (let n = 0; n < mixfile.contents.length; n++) this.appendComponent(mixfile.contents[n], [n + 1]);\n\t}\n\n\t// return the SDF-serialised representation\n\tpublic write():string\n\t{\n\t\treturn new MDLSDFWriter(this.ds).write();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// recursively add a component, and all of its subcomponents\n\tprivate appendComponent(comp:MixfileComponent, seq:number[]):void\n\t{\n\t\tlet row = this.ds.appendRow();\n\n\t\tlet mol:Molecule = null;\n\t\tif (comp.molfile)\n\t\t{\n\t\t\tmol = Molecule.fromString(comp.molfile);\n\t\t\tif (!mol)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmol = new MDLMOLReader(comp.molfile).parse();\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\t\t}\n\t\t}\n\t\tif (!mol) mol = new Molecule();\n\n\t\tthis.ds.setMolecule(row, this.colMol, mol);\n\t\tif (comp.name) this.ds.setString(row, this.colName, comp.name);\n\t\tthis.ds.setString(row, this.colHier, seq.join('.'));\n\t\tthis.ds.setString(row, this.colConc, this.formatConcentration(comp));\n\n\t\tif (comp.contents) for (let n = 0; n < comp.contents.length; n++)\n\t\t{\n\t\t\tlet subseq = seq.slice(0);\n\t\t\tsubseq.push(n + 1);\n\t\t\tthis.appendComponent(comp.contents[n], subseq);\n\t\t}\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tprivate formatConcentration(comp:MixfileComponent):string\n\t{\n\t\t/* ... this is a pseudo-MInChI approach ...\n\t\t// TODO: need special deal for ratio without denominator - can sometimes add them up to form an implicit denominator\n\n\t\tif (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\treturn (100 * numer / denom) + ' pp';\n\t\t}\n\n\t\tif (comp.quantity == null || comp.units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = comp.units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (comp.relation != null) bits.push(comp.relation);\n\n\t\tlet values:number[] = typeof comp.quantity == 'number' ? [comp.quantity as number] : comp.quantity;\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\t\tbits.push(scaled[0].toString());\n\t\tif (scaled.length > 1) {bits.push('..'); bits.push(scaled[1].toString());}\n\t\tbits.push(mnemonic);\n\n\t\treturn bits.join(' ');*/\n\n\t\tlet useRatio:number = null;\n\t\tif (Vec.len(comp.ratio) == 2) useRatio = comp.ratio[0]; // mixfile ratios are stored as [numer, denom] where denom is checksum; could verify that this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// is consistent before deigning to use it, but we're just passing it through\n\t\treturn ExportMInChI.formatConcentration(comp.quantity, comp.error, useRatio, comp.units, comp.relation);\n\t}\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {EditMixture} from '../mixture/EditMixture';\nimport {MainPanel} from './MainPanel';\nimport {MenuBanner, MenuBannerButton, MenuBannerCommand} from './MenuBanner';\nimport {ClipboardProxy, ClipboardProxyHandler} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {Mixture} from '../data/Mixture';\nimport {MIXFILE_VERSION} from '../data/Mixfile';\nimport {openNewWindow} from '../startup';\nimport {ExportSDFile} from '../mixture/ExportSDFile';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {Size} from 'webmolkit/util/Geom';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {InChI} from '../data/InChI';\nimport {ExportMInChI, MInChISegment} from '../mixture/ExportMInChI';\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {yieldDOM} from 'webmolkit/util/util';\nimport {Dialog as ElectronDialog, OpenDialogOptions, SaveDialogOptions, clipboard as electronClipboard, ipcRenderer} from 'electron';\nimport {dialog as electronDialog, getCurrentWindow} from '@electron/remote';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\n/*\n\tViewing/editing window: dedicated entirely to the sketching of a mixture.\n*/\n\nconst BANNER:MenuBannerButton[][] =\n[\n\t[\n\t\t{icon: 'CommandSave.svg', tip: 'Save', cmd: MenuBannerCommand.Save},\n\t],\n\t[\n\t\t{icon: 'CommandEdit.svg', tip: 'Edit component', cmd: MenuBannerCommand.EditDetails},\n\t\t{icon: 'CommandStructure.svg', tip: 'Edit structure', cmd: MenuBannerCommand.EditStructure},\n\t\t{icon: 'CommandLookup.svg', tip: 'Lookup compound', cmd: MenuBannerCommand.Lookup},\n\t\t{icon: 'CommandPicture.svg', tip: 'Export graphics', cmd: MenuBannerCommand.ExportSVG},\n\t],\n\t[\n\t\t{icon: 'CommandAppend.svg', tip: 'Append component to the right', cmd: MenuBannerCommand.Append},\n\t\t{icon: 'CommandPrepend.svg', tip: 'Prepend component to the left', cmd: MenuBannerCommand.Prepend},\n\t\t{icon: 'CommandInsertBefore.svg', tip: 'Insert component above', cmd: MenuBannerCommand.InsertBefore},\n\t\t{icon: 'CommandInsertAfter.svg', tip: 'Append component below', cmd: MenuBannerCommand.InsertAfter},\n\t\t{icon: 'CommandDelete.svg', tip: 'Delete', cmd: MenuBannerCommand.Delete},\n\t\t{icon: 'CommandMoveUp.svg', tip: 'Move Up', cmd: MenuBannerCommand.MoveUp},\n\t\t{icon: 'CommandMoveDown.svg', tip: 'Move Down', cmd: MenuBannerCommand.MoveDown},\n\t],\n\t[\n\t\t{icon: 'CommandUndo.svg', tip: 'Undo', cmd: MenuBannerCommand.Undo},\n\t\t{icon: 'CommandRedo.svg', tip: 'Redo', cmd: MenuBannerCommand.Redo},\n\t],\n\t[\n\t\t{icon: 'CommandCopy.svg', tip: 'Copy', cmd: MenuBannerCommand.Copy},\n\t\t{icon: 'CommandCut.svg', tip: 'Cut', cmd: MenuBannerCommand.Cut},\n\t\t{icon: 'CommandPaste.svg', tip: 'Paste', cmd: MenuBannerCommand.Paste},\n\t],\n\t[\n\t\t{icon: 'CommandZoomNormal.svg', tip: 'Zoom full', cmd: MenuBannerCommand.ZoomFull},\n\t\t{icon: 'CommandZoomIn.svg', tip: 'Zoom in', cmd: MenuBannerCommand.ZoomIn},\n\t\t{icon: 'CommandZoomOut.svg', tip: 'Zoom out', cmd: MenuBannerCommand.ZoomOut},\n\t],\n];\n\nexport class MixturePanel extends MainPanel\n{\n\tprivate filename:string = null;\n\tprivate banner:MenuBanner;\n\tprivate editor = new EditMixture(this.proxyClip, this.proxyMenu);\n\n\t// ------------ public methods ------------\n\n\tconstructor(root:DOM, private proxyClip:ClipboardProxy, private proxyMenu:MenuProxy)\n\t{\n\t\tsuper(root);\n\n\t\tthis.banner = new MenuBanner(BANNER, (cmd:MenuBannerCommand) => this.menuAction(cmd));\n\n\t\tthis.editor.callbackUpdateTitle = () => this.updateTitle();\n\n\t\tlet divFlex = dom('<div/>').appendTo(root).css({'display': 'flex'});\n\t\tdivFlex.css({'flex-direction': 'column', 'width': '100%', 'height': '100%'});\n\t\tlet divBanner = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\t\tlet divEditor = dom('<div/>').appendTo(divFlex).css({'flex-grow': '1'});\n\n\t\tthis.banner.render(divBanner);\n\t\tthis.editor.render(divEditor);\n\n\t\tthis.banner.callbackRefocus = () => this.editor.refocus();\n\t}\n\n\tpublic setMixture(mixture:Mixture):void\n\t{\n\t\tthis.editor.clearHistory();\n\t\tthis.editor.setMixture(mixture, true, false);\n\t\tthis.editor.setDirty(false);\n\t}\n\n\tpublic loadFile(filename:string):void\n\t{\n\t\tif (!filename)\n\t\t{\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(new Mixture(), true, true);\n\t\t\tthis.updateTitle();\n\t\t\tthis.filename = null;\n\t\t\treturn;\n\t\t}\n\n\t\tfs.readFile(filename, 'utf-8', (err:any, data:string):void =>\n\t\t{\n\t\t\tif (err) throw err;\n\n\t\t\tlet mixture:Mixture;\n\t\t\ttry {mixture = Mixture.deserialise(data);}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tconsole.log('Invalid mixture file: ' + e + '\\n' + data);\n\t\t\t\talert('Not a valid mixture file.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmixture.mixfile.mixfileVersion = MIXFILE_VERSION; // as good a time as any to set latest version\n\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(mixture, true, false);\n\t\t\tthis.editor.setDirty(false);\n\t\t\tthis.filename = filename;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic saveFile(filename:string):void\n\t{\n\t\tlet mixture = this.editor.getMixture();\n\t\tlet content = mixture.serialise();\n\n\t\tfs.writeFile(filename, content, (err:any):void =>\n\t\t{\n\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t});\n\t}\n\n\tprotected onResize():void\n\t{\n\t\tsuper.onResize();\n\t\tthis.editor.delayedRedraw();\n\n\t\t//let w = document.documentElement.clientWidth, h = document.documentElement.clientHeight;\n\t\t//this.sketcher.changeSize(w, h); // force a re-layout to match the new size\n\t}\n\n\tpublic menuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tlet dlg = this.editor.compoundEditor();\n\t\tif (dlg)\n\t\t{\n\t\t\tif (cmd == MenuBannerCommand.Cut) dlg.actionCut();\n\t\t\telse if (cmd == MenuBannerCommand.Copy) dlg.actionCopy();\n\t\t\telse if (cmd == MenuBannerCommand.Paste) dlg.actionPaste();\n\t\t\telse if (cmd == MenuBannerCommand.Undo) dlg.actionUndo();\n\t\t\telse if (cmd == MenuBannerCommand.Redo) dlg.actionRedo();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.editor.isReceivingCommands())\n\t\t{\n\t\t\t// certain common menu/shortcut commands are passed through to standard behaviour, the rest are stopped\n\t\t\tif ([MenuBannerCommand.Cut, MenuBannerCommand.Copy, MenuBannerCommand.Paste,\n\t\t\t\t MenuBannerCommand.Undo, MenuBannerCommand.Redo].indexOf(cmd) >= 0) document.execCommand(cmd);\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.menuAction(cmd);\n\t}\n\n\tpublic customMenuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\telse if (cmd == MenuBannerCommand.Undo) this.editor.performUndo();\n\t\telse if (cmd == MenuBannerCommand.Redo) this.editor.performRedo();\n\t\telse if (cmd == MenuBannerCommand.Cut) this.editor.clipboardCopy(true);\n\t\telse if (cmd == MenuBannerCommand.Copy) this.editor.clipboardCopy(false);\n\t\telse if (cmd == MenuBannerCommand.CopyBranch) this.editor.clipboardCopy(false, true);\n\t\telse if (cmd == MenuBannerCommand.Paste) this.editor.clipboardPaste();\n\t\telse if (cmd == MenuBannerCommand.EditStructure) this.editor.editStructure();\n\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editor.editDetails();\n\t\telse if (cmd == MenuBannerCommand.Lookup) this.editor.lookupCurrent();\n\t\telse if (cmd == MenuBannerCommand.Delete) this.editor.deleteCurrent();\n\t\telse if (cmd == MenuBannerCommand.Append) this.editor.appendToCurrent();\n\t\telse if (cmd == MenuBannerCommand.Prepend) this.editor.prependBeforeCurrent();\n\t\telse if (cmd == MenuBannerCommand.InsertBefore) this.editor.insertBeforeCurrent();\n\t\telse if (cmd == MenuBannerCommand.InsertAfter) this.editor.insertAfterCurrent();\n\t\telse if (cmd == MenuBannerCommand.MoveUp) this.editor.reorderCurrent(-1);\n\t\telse if (cmd == MenuBannerCommand.MoveDown) this.editor.reorderCurrent(1);\n\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.editor.zoomFull();\n\t\telse if (cmd == MenuBannerCommand.ZoomNormal) this.editor.zoomNormal();\n\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.editor.zoom(1.25);\n\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.editor.zoom(0.8);\n\t\telse super.customMenuAction(cmd);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprotected actionFileOpen():void\n\t{\n\t\tlet filedir = this.filename && this.filename.indexOf(path.sep) ? this.filename.substring(0, this.filename.lastIndexOf(path.sep)) : undefined;\n\t\tlet params:OpenDialogOptions =\n\t\t{\n\t\t\ttitle: 'Open Mixture',\n\t\t\tproperties: ['openFile'],\n\t\t\tdefaultPath: filedir,\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile', extensions: ['mixfile']},\n\t\t\t\t{name: 'Mixfile Collection', extensions: ['json']},\n\t\t\t]\n\t\t};\n\t\telectronDialog.showOpenDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tlet inPlace = this.editor.getMixture().isEmpty();\n\t\t\tfor (let fn of value.filePaths)\n\t\t\t{\n\t\t\t\tif (inPlace && fn.endsWith('.mixfile'))\n\t\t\t\t{\n\t\t\t\t\tthis.loadFile(fn);\n\t\t\t\t\tinPlace = false;\n\t\t\t\t}\n\t\t\t\telse if (fn.endsWith('.json'))\n\t\t\t\t\topenNewWindow('CollectionPanel', fn);\n\t\t\t\telse\n\t\t\t\t\topenNewWindow('MixturePanel', fn);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected actionFileSave():void\n\t{\n\t\tif (this.editor.isBlank()) return;\n\t\tif (!this.filename) {this.actionFileSaveAs(); return;}\n\n\t\tthis.saveFile(this.filename);\n\t\tthis.editor.setDirty(false);\n\t\tthis.updateTitle();\n\t}\n\n\tprotected actionFileSaveAs():void\n\t{\n\t\tif (this.editor.isBlank()) return;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Save Mixfile',\n\t\t\t//defaultPath...\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile', extensions: ['mixfile']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tthis.saveFile(value.filePath);\n\t\t\tthis.filename = value.filePath;\n\t\t\tthis.editor.setDirty(false);\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tprivate actionExportSDF():void\n\t{\n\t\tlet mixture = this.editor.getMixture();\n\t\tif (mixture.isEmpty()) return;\n\n\t\tlet exportSDF = new ExportSDFile();\n\t\texportSDF.append(mixture.mixfile);\n\t\tlet sdfile = exportSDF.write();\n\n\t\tlet defPath = this.filename;\n\t\tif (defPath)\n\t\t{\n\t\t\tlet lastDot = defPath.lastIndexOf('.');\n\t\t\tif (lastDot > 0 && lastDot > defPath.lastIndexOf('/') && lastDot > defPath.lastIndexOf('\\\\')) defPath = defPath.substring(0, lastDot);\n\t\t\tdefPath += '.sdf';\n\t\t}\n\t\telse defPath = undefined;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Export as SDfile',\n\t\t\tdefaultPath: defPath,\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'SDfile', extensions: ['sdf']}\n\t\t\t]\n\t\t};\n\t\tif (this.filename && this.filename.endsWith('.mixfile'))\n\t\t\tparams.defaultPath = (this.filename.substring(0, this.filename.length - 8) + '.sdf').split(/[\\/\\\\]/).pop();\n\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tfs.writeFile(value.filePath, sdfile, (err:any):void =>\n\t\t\t{\n\t\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate actionFileExportSVG():void\n\t{\n\t\tlet defPath = this.filename;\n\t\tif (defPath)\n\t\t{\n\t\t\tlet lastDot = defPath.lastIndexOf('.');\n\t\t\tif (lastDot > 0 && lastDot > defPath.lastIndexOf('/') && lastDot > defPath.lastIndexOf('\\\\')) defPath = defPath.substring(0, lastDot);\n\t\t\tdefPath += '.svg';\n\t\t}\n\t\telse defPath = undefined;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\t'title': 'Save SVG Diagram',\n\t\t\t'defaultPath': defPath,\n\t\t\t'filters':\n\t\t\t[\n\t\t\t\t{'name': 'Scalable Vector Graphics', 'extensions': ['svg']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMixture(this.editor.getMixture(), measure, policy);\n\t\t\tlayout.collapsedBranches = this.editor.getCollapsedBranches();\n\t\t\t// TODO: decide whether to pack the branches...\n\t\t\tlayout.packBranches = new Size(0.8 * this.editor.contentDOM.width(), 0.8 * this.editor.contentDOM.height());\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMixture(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\t\t\tlet svg = gfx.createSVG(true, true);\n\n\t\t\tfs.writeFile(value.filePath, svg, (err:any):void =>\n\t\t\t{\n\t\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate actionFileCreateMInChI():void\n\t{\n\t\tif (!InChI.isAvailable())\n\t\t{\n\t\t\talert('InChI executable has not been configured. Specify with --inchi parameter.');\n\t\t\treturn;\n\t\t}\n\n\t\tlet maker = new ExportMInChI(this.editor.getMixture().mixfile);\n\t\tlet self = this;\n\t\tclass MInChIDialog extends Dialog\n\t\t{\n\t\t\tconstructor()\n\t\t\t{\n\t\t\t\tsuper();\n\t\t\t\tthis.title = 'MInChI';\n\t\t\t}\n\t\t\tprotected populate():void\n\t\t\t{\n\t\t\t\tself.proxyClip.pushHandler(new ClipboardProxyHandler());\n\t\t\t\tthis.bodyDOM().setText('Calculating...');\n\t\t\t\t(async () => await this.renderResult())();\n\t\t\t}\n\t\t\tpublic close():void\n\t\t\t{\n\t\t\t\tself.proxyClip.popHandler();\n\t\t\t\tsuper.close();\n\t\t\t}\n\t\t\tprivate async renderResult():Promise<void>\n\t\t\t{\n\t\t\t\tawait yieldDOM();\n\t\t\t\tawait maker.fillInChI();\n\t\t\t\tmaker.formulate();\n\n\t\t\t\tlet body = this.bodyDOM();\n\t\t\t\tbody.empty();\n\n\t\t\t\tlet divOuter = dom('<div/>').appendTo(body);\n\t\t\t\tlet pre = dom('<span/>').appendTo(divOuter).css({'font-family': 'monospace', 'padding-top': '0.5em', 'word-break': 'break-all'});\n\t\t\t\tlet minchi = maker.getResult(), segment = maker.getSegment();\n\t\t\t\tfor (let n = 0; n < minchi.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet span = dom('<span/>').appendTo(pre);\n\t\t\t\t\tspan.setText(minchi[n]);\n\t\t\t\t\tif (segment[n] == MInChISegment.Header) span.setCSS('background-color', '#FFC0C0');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Component) span.setCSS('background-color', '#C0C0FF');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Hierarchy) span.setCSS('background-color', '#E0E080');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Concentration) span.setCSS('background-color', '#80E080');\n\t\t\t\t\tpre.appendHTML('<wbr/>');\n\t\t\t\t}\n\n\t\t\t\tlet btnCopy = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">Copy</button>').appendTo(divOuter).css({'margin-left': '0.5em'});\n\t\t\t\tbtnCopy.onClick(() => self.proxyClip.setString(minchi));\n\t\t\t}\n\t\t}\n\t\tnew MInChIDialog().open();\n\t}\n\n\tprivate updateTitle():void\n\t{\n\t\tif (this.filename == null) {document.title = 'Mixtures'; return;}\n\n\t\tlet slash = Math.max(this.filename.lastIndexOf('/'), this.filename.lastIndexOf('\\\\'));\n\t\tlet title = 'Mixtures - ' + this.filename.substring(slash + 1);\n\t\tif (this.editor.isDirty() && !this.editor.isBlank()) title += '*';\n\t\tdocument.title = title;\n\t}\n}\n\n","import { dom } from '../util/dom';\nimport { eventCoords, setBoundaryPixels } from '../util/util';\nimport { Popup } from './Popup';\nexport class MenuProxy {\n    hasContextMenu() { return false; }\n    openContextMenu(menuItems, event, opt) { }\n}\nexport class MenuProxyWeb extends MenuProxy {\n    hasContextMenu() { return true; }\n    openContextMenu(menuItems, event, opt) {\n        let [x, y] = eventCoords(event, document.body);\n        let divCursor = dom('<div/>').appendTo(document.body).css({ 'position': 'absolute', 'user-select': 'none' });\n        setBoundaryPixels(divCursor, x - 5, y - 5, 10, 10);\n        let currentFocus = dom(document.activeElement);\n        let popup = new Popup(divCursor);\n        if ((opt === null || opt === void 0 ? void 0 : opt.overrideObscureOpacity) != null)\n            popup.obscureOpacity = opt === null || opt === void 0 ? void 0 : opt.overrideObscureOpacity;\n        popup.callbackPopulate = () => {\n            popup.bodyDOM().css({ 'user-select': 'none', 'font-size': '16px' });\n            for (let menuItem of menuItems) {\n                let div = dom('<div/>').appendTo(popup.bodyDOM());\n                if (menuItem == null) {\n                    div.appendHTML('<hr/>');\n                }\n                else if (menuItem.subMenu) {\n                    div.setText(menuItem.label + ' \\u{25B8}');\n                    div.css({ 'cursor': 'pointer' });\n                    let fcn = (event) => {\n                        event.preventDefault();\n                        popup.close();\n                        this.openContextMenu(menuItem.subMenu, event);\n                    };\n                    div.onClick(fcn);\n                    div.onContextMenu(fcn);\n                }\n                else if (menuItem.click) {\n                    div.setText(menuItem.label);\n                    div.onMouseEnter(() => { div.css({ 'background-color': '#D0D0D0' }); });\n                    div.onMouseLeave(() => { div.css({ 'background-color': 'transparent' }); });\n                    div.css({ 'cursor': 'pointer' });\n                    div.onClick(() => {\n                        popup.close();\n                        menuItem.click();\n                    });\n                }\n                else {\n                    div.css({ 'color': '#808080' });\n                    div.setText(menuItem.label);\n                }\n            }\n        };\n        popup.callbackClose = () => {\n            divCursor.remove();\n            currentFocus.grabFocus();\n            if (opt === null || opt === void 0 ? void 0 : opt.callbackClose)\n                opt === null || opt === void 0 ? void 0 : opt.callbackClose();\n        };\n        popup.open();\n    }\n}\n//# sourceMappingURL=MenuProxy.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MainPanel} from './main/MainPanel';\nimport {MixturePanel} from './main/MixturePanel';\nimport {DOM} from 'webmolkit/util/dom';\nimport {initWebMolKit, Theme} from 'webmolkit/util/Theme';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy, MenuProxyContext} from 'webmolkit/ui/MenuProxy';\nimport * as path from 'path';\nimport * as process from 'process';\nimport {ipcRenderer} from 'electron';\nimport {BrowserWindow, Menu as ElectronMenu, MenuItem as ElectronMenuItem, clipboard as electronClipboard, getCurrentWindow} from '@electron/remote';\n\nexport let ON_DESKTOP = false; // by default assume it's running in a regular web page; switch to true if it's the locally\n\t\t\t\t\t\t\t   // executed window version\nexport function setOnDesktop(onDesktop:boolean):void {ON_DESKTOP = onDesktop;}\n\n/*\n\tStartup: gets the ball rolling, and provide some high level window handling.\n*/\n\nexport async function runMixfileEditor(resURL:string, rootID:string):Promise<void>\n{\n\tlet root = DOM.find('#' + rootID);\n\n\tON_DESKTOP = true;\n\tinitWebMolKit(resURL);\n\tawait OntologyTree.init();\n\tawait OntologyTree.main.loadFromURL(resURL + '/data/ontology/metacategory.onto');\n\n\tprocess.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true';\n\n\tlet url = window.location.href.substring(0, window.location.href.lastIndexOf('/'));\n\tTheme.RESOURCE_URL = path.normalize(url + '/res');\n\n\t// unpack web params: if present, they determine where to go from here\n \tlet params = window.location.search.substring(1).split('&');\n\tlet panelClass:string = null; // default is straight to molecule editing\n\tlet filename:string = null;\n\tfor (let p of params)\n\t{\n\t\tlet eq = p.indexOf('=');\n\t\tif (eq < 0) continue;\n\t\tlet key = p.substring(0, eq), val = decodeURIComponent(p.substring(eq + 1));\n\t\tif (key == 'panel') panelClass = val;\n\t\telse if (key == 'fn') filename = val;\n\t}\n\n\tif (!panelClass && filename && filename.endsWith('.json')) panelClass = 'CollectionPanel';\n\n\tlet proxyClip = new ClipboardProxy();\n\tproxyClip.getString = ():string => electronClipboard.readText();\n\tproxyClip.setString = (str:string):void => electronClipboard.writeText(str);\n\tproxyClip.setHTML = (html:string):void => electronClipboard.writeHTML(html);\n\tproxyClip.canSetHTML = ():boolean => true;\n\tproxyClip.canAlwaysGet = ():boolean => true;\n\n\tlet proxyMenu = new MenuProxy();\n\tproxyMenu.hasContextMenu = () => true;\n\tproxyMenu.openContextMenu = (menuItems:MenuProxyContext[], event:MouseEvent) =>\n\t{\n\t\tlet populate = (emenu:Electron.Menu, itemList:MenuProxyContext[]):void =>\n\t\t{\n\t\t\tfor (let item of itemList)\n\t\t\t{\n\t\t\t\tif (!item || !item.label) emenu.append(new ElectronMenuItem({type: 'separator'}));\n\t\t\t\telse if (item.click) emenu.append(new ElectronMenuItem(item));\n\t\t\t\telse if (item.subMenu)\n\t\t\t\t{\n\t\t\t\t\tlet subMenu = new ElectronMenu();\n\t\t\t\t\tpopulate(subMenu, item.subMenu);\n\t\t\t\t\temenu.append(new ElectronMenuItem({label: item.label, submenu: subMenu}));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet menu = new ElectronMenu();\n\t\tpopulate(menu, menuItems);\n\n\t\tmenu.popup({window: getCurrentWindow()});\n\t};\n\n\tlet main:MainPanel;\n\tif (!panelClass)\n\t{\n\t\tlet dw = main = new MixturePanel(root, proxyClip, proxyMenu);\n\t}\n\telse\n\t{\n\t\t/* !! TODO \n\t\tlet proto = (Mixtures as any)[panelClass];\n\t\tif (!proto) throw 'Unknown class: ' + panelClass;\n\t\tmain = new (proto as any)(root, proxyClip, proxyMenu);*/\n\t}\n\n\tmain.loadFile(filename);\n\n\tipcRenderer.on('menuAction', (event, args) => main.menuAction(args));\t\n}\n\n// high level functionality for opening a window, with a given panel as content\n/*export function openNewWindow(panelClass:string, filename?:string):void\n{\n\tconst WEBPREF = {nodeIntegration: true, contextIsolation: false, enableRemoteModule: true, spellcheck: false};\n\tlet iconFN = __dirname + '/img/icon.png';\n\tlet bw = new BrowserWindow({width: 900, height: 800, icon: iconFN, webPreferences: WEBPREF});\n\tlet baseApp = path.normalize('file:/' + __dirname);\n\tlet url = baseApp + '/index.html?panel=' + panelClass;\n\tif (filename) url += '&fn=' + encodeURIComponent(filename);\n\tbw.loadURL(url);\n}*/\n\n\nexport function openNewWindow(panelClass:string, filename?:string, options:Record<string, string> = {}):void\n{\n\tlet args:Record<string, string> = {...options};\n\tif (panelClass) args['panelClass'] = panelClass;\n\tif (filename) args['filename'] = filename;\n\tipcRenderer.send('openWindow', args);\n}\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {ON_DESKTOP} from '../startup';\nimport {MolUtil} from 'webmolkit/data/MolUtil';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {getGlobal} from '@electron/remote';\n\n/*\n\tInteroperability with InChI technology: the generator program is a native binary, the location of which\n\tneeds to be discovered. Each generation operation involves a trip to the external execution subsystem.\n*/\n\nlet execLocation:string = null;\nlet inchi:InChI = null;\n\nexport class InChI\n{\n\t// optional override: when using the Emscripten-ported version of InChI, set this function to call the\n\t// natively encoded implementation\n\tpublic static nativeMolfileToInChI:(mdlmol:string, options:string) => Promise<string> = null;\n\n\tprivate available = false;\n\tprivate inchiPath = execLocation;\n\n\tconstructor()\n\t{\n\t\tif (!ON_DESKTOP) return;\n\n\t\tif (!this.inchiPath)\n\t\t{\n\t\t\tthis.inchiPath = getGlobal('INCHI_EXEC');\n\t\t}\n\n\t\tif (this.inchiPath)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfs.accessSync(this.inchiPath, fs.constants.X_OK);\n\t\t\t\tthis.available = true;\n\t\t\t}\n\t\t\tcatch (ex) {} // not available\n\t\t}\n\t}\n\n\t// specify where the executable file is (overrides the global option)\n\tpublic static hasExecutable():boolean\n\t{\n\t\treturn !!execLocation;\n\t}\n\tpublic static setExecutable(exec:string):void\n\t{\n\t\texecLocation = exec;\n\t}\n\n\t// returns true if we have reason to believe the InChI executable can be run on demand\n\tpublic static isAvailable():boolean\n\t{\n\t\tif (this.nativeMolfileToInChI != null) return true;\n\t\tif (!inchi) inchi = new InChI();\n\t\treturn inchi.available;\n\t}\n\n\t// converts a molecule to an InChI string, if possible; should check the availability first, for graceful\n\t// rejection; failure results in an exception; note that it is executed synchronously: if the executable takes\n\t// a long time to run, this will be a problem for the UI; the return value is [InChI, InChIKey]\n\tpublic static async makeInChI(mol:Molecule):Promise<[string, string]>\n\t{\n\t\tmol = mol.clone();\n\t\tMolUtil.expandAbbrevs(mol, true);\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondOrder(n) < 1 || mol.bondOrder(n) > 3) mol.setBondOrder(n, 1);\n\n\t\tlet writer = new MDLMOLWriter(mol);\n\t\twriter.enhancedFields = false;\n\t\tlet mdlmol = writer.write();\n\n\t\tif (this.nativeMolfileToInChI != null)\n\t\t{\n\t\t\tlet inchi = await this.nativeMolfileToInChI(mdlmol, '-AuxNone -NoLabels');\n\t\t\treturn [inchi, null]; // NOTE: this version doesn't provide a key; address this in the future\n\t\t}\n\n\t\tif (!inchi) inchi = new InChI();\n\t\tif (!inchi.available) throw 'InChI executable is not available.';\n\n\t\tconst proc = require('child_process');\n\n\t\tlet cmd = inchi.inchiPath.replace(/ /g, '\\\\\\ '); // very crude escaping of spaces\n\t\tlet result = proc.spawnSync(cmd, ['-STDIO', '-AuxNone', '-NoLabels', '-Key'], {input: mdlmol});\n\t\tlet raw = result.stdout.toString(), bits = raw.split('\\n');\n\n\t\tif (bits.length < 2 || !bits[0].startsWith('InChI='))\n\t\t{\n\t\t\tconsole.log('InChI command returned result:\\n' + raw);\n\t\t\tconsole.log('Molecule:\\n' + mol);\n\t\t\tconsole.log('MDL Molfile:\\n' + mdlmol);\n\t\t\tthrow 'Invalid returned by InChI generator: ' + raw;\n\t\t}\n\t\treturn bits;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2020 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Mixfile} from './Mixfile';\nimport {Mixture} from './Mixture';\n\n/*\n\tCollection of mixtures: convenience methods for handling an array thereof, including serialisation.\n\n\tMost of the methods that fetch or modify the mixture content one item at a time make deep clones, so it is safe to\n\tassume that there are no dangling pointers. Exceptions include the constructor, bulk modifications, and methods marked\n\tas providing direct access.\n*/\n\nexport class MixtureCollection\n{\n\tprivate mixtures:Mixture[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixtures?:Mixture[])\n\t{\n\t\tif (mixtures) this.mixtures = mixtures.slice(0);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this.mixtures.length;\n\t}\n\tpublic getMixture(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx].clone();\n\t}\n\tpublic getMixtureDirect(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx];\n\t}\n\tpublic setMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture.clone();\n\t}\n\tpublic setMixtureDirect(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture;\n\t}\n\tpublic deleteMixture(idx:number):void\n\t{\n\t\tthis.mixtures.splice(idx, 1);\n\t}\n\tpublic appendMixture(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture.clone());\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendMixtureDirect(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture);\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.mixtures = this.mixtures.concat(collection.mixtures);\n\t}\n\tpublic insertMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures.splice(idx, 0, mixture.clone());\n\t}\n\tpublic swapMixtures(idx1:number, idx2:number):void\n\t{\n\t\tlet [m1, m2] = [this.mixtures[idx1], this.mixtures[idx2]];\n\t\tthis.mixtures[idx1] = m2;\n\t\tthis.mixtures[idx2] = m1;\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):MixtureCollection\n\t{\n\t\tlet list = JSON.parse(data);\n\t\tif (!Array.isArray(list)) throw 'Input content is not a JSON array.';\n\t\tlet mixtures:Mixture[] = [];\n\t\tfor (let mixfile of list) mixtures.push(new Mixture(mixfile));\n\t\treturn new MixtureCollection(mixtures);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string; note the optional beautification parameter:\n\t// if not specified, small collections will get nice whitespace, whereas large ones will be densely packed for efficiency\n\tpublic serialise(beautify?:boolean):string\n\t{\n\t\tlet list:Mixfile[] = [];\n\t\tfor (let mixture of this.mixtures) list.push(mixture.mixfile);\n\t\t//return beautify || list.length <= 1000 ? Mixture.beautify(list) : JSON.stringify(list);\n\t\tif (beautify || list.length <= 100) return Mixture.beautify(list);\n\t\t\n\t\tlet lines = list.map((mixfile) => JSON.stringify(mixfile));\n\t\treturn '[\\n    ' + lines.join(',\\n    ') + '\\n]\\n';\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {MixtureCollection} from '../data/MixtureCollection';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {ExportMInChI, MInChISegment} from '../mixture/ExportMInChI';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {escapeHTML} from 'webmolkit/util/util';\nimport * as path from 'path';\nimport * as fs from 'fs';\n\n/*\n\tLoads a mixture collection and emits it as visualisable HTML.\n*/\n\nexport class RenderHTML\n{\n\tconstructor(private htmlFile:string, private withMInChI:boolean)\n\t{\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tlet content:string;\n\t\ttry {content = fs.readFileSync(this.htmlFile).toString();}\n\t\tcatch (ex) {throw 'Unable to read file ' + this.htmlFile + ': ' + ex;}\n\n\t\tlet mixlist = MixtureCollection.deserialise(content);\n\t\tif (mixlist.count == 0) throw 'Nothing to render';\n\n\t\tlet emitln = (line:string):void => console.log(line);\n\t\tlet emit = (txt:string):void => {process.stdout.write(txt);};\n\n\t\temitln('<html>');\n\t\temitln('<style>');\n\t\temitln('table {border-collapse: collapse;}');\n\t\temitln('td {border: 1px solid black; padding: 0.2em;}');\n\t\temitln('.header {background-color: #FFC0C0;}');\n\t\temitln('.component {background-color: #C0C0FF;}');\n\t\temitln('.hierarchy {background-color: #E0E080;}');\n\t\temitln('.concentration {background-color: #80E080;}');\n\t\temitln('</style>');\n\t\t\n\t\temitln('<body><table>');\n\n\t\tlet policy = RenderPolicy.defaultColourOnWhite(15);\n\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\n\t\tfor (let n = 0; n < mixlist.count; n++)\n\t\t{\n\t\t\tlet mixture = mixlist.getMixtureDirect(n);\n\n\t\t\temitln('<tr>');\n\t\t\temitln(`<td>${n + 1}</td>`);\n\n\t\t\tlet layout = new ArrangeMixture(mixture, measure, policy);\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tlet draw = new DrawMixture(layout, gfx);\n\t\t\tdraw.draw();\n\t\t\tgfx.normalise();\n\n\t\t\temitln('<td>');\n\t\t\temitln(gfx.createSVG());\n\t\t\temitln('</td>');\n\n\t\t\tif (this.withMInChI)\n\t\t\t{\n\t\t\t\tlet maker = new ExportMInChI(mixture.mixfile);\n\t\t\t\tawait maker.fillInChI();\n\t\t\t\tmaker.formulate();\n\t\t\t\t//let minchi = creator.getResult();\n\t\t\t\t//emitln('<td><pre>' + escapeHTML(minchi) + '</pre></td>');\n\n\t\t\t\temit('<td><pre>');\n\t\t\t\tlet minchi = maker.getResult(), segment = maker.getSegment();\n\t\t\t\tfor (let n = 0; n < minchi.length; n++)\n\t\t\t\t{\n\t\t\t\t\temit('<span');\n\t\t\t\t\tif (segment[n] == MInChISegment.Header) emit(' class=\"header\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Component) emit(' class=\"component\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Hierarchy) emit(' class=\"hierarchy\"');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Concentration) emit(' class=\"concentration\"');\n\t\t\t\t\temit('>' + escapeHTML(minchi[n]) + '</span>');\n\t\t\t\t}\n\t\t\t\temitln('</pre></td>');\n\t\t\t}\n\n\t\t\temitln('</tr>');\n\t\t}\n\n\t\temitln('</table></body></html>');\n\t}\n\n\t// ------------ private methods ------------\n}\n\n","import { DataSheet } from '../data/DataSheet';\nimport { Vec } from '../util/Vec';\nclass Aspect {\n    constructor(code, ds, allowModify) {\n        this.code = code;\n        this.allowModify = true;\n        this.ds = ds ? ds : new DataSheet();\n        if (allowModify != null)\n            this.allowModify = allowModify;\n    }\n    isColumnReserved(colName) { return false; }\n    areColumnsReserved(colNames) {\n        let resMask = Vec.booleanArray(false, colNames.length);\n        for (let n = 0; n < colNames.length; n++)\n            resMask[n] = this.isColumnReserved(colNames[n]);\n        return resMask;\n    }\n    rowFirstBlock(row) { return true; }\n    rowBlockCount(row) { return 1; }\n    aspectUnion(other) { }\n    initiateNewRow(row) { }\n    columnEffectivelyBlank(row) { return []; }\n    numTextRenderings(row) { return 0; }\n    produceTextRendering(row, idx) { return null; }\n    numGraphicRenderings(row) { return 0; }\n    produceGraphicRendering(row, idx, policy) { return null; }\n    numHeaderRenderings() { return 0; }\n    produceHeaderRendering(idx) { return null; }\n}\nAspect.TEXT_PLAIN = 0;\nAspect.TEXT_LINK = 1;\nAspect.TEXT_HTML = 2;\nexport { Aspect };\n//# sourceMappingURL=Aspect.js.map","let supportedAspects = {};\nexport function registerAspect(classdef) {\n    let code = classdef.CODE, name = classdef.NAME;\n    supportedAspects[code] = { code, name, classdef };\n}\nexport class AspectList {\n    constructor(ds) {\n        this.ds = ds;\n    }\n    list() {\n        let present = [], absent = [];\n        let codes = new Set();\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            codes.add(this.ds.getExtType(n));\n        for (let code in supportedAspects)\n            if (codes.has(code))\n                present.push(code);\n            else\n                absent.push(code);\n        return [present, absent];\n    }\n    instantiate(code) {\n        let supp = supportedAspects[code];\n        if (supp)\n            return new supp.classdef(this.ds);\n        return null;\n    }\n    enumerate() {\n        let aspects = [];\n        for (let n = 0; n < this.ds.numExtensions; n++) {\n            let code = this.ds.getExtType(n);\n            if (supportedAspects[code])\n                aspects.push(this.instantiate(code));\n        }\n        return aspects;\n    }\n    aspectName(code) {\n        let supp = supportedAspects[code];\n        return supp ? supp.name : null;\n    }\n}\n//# sourceMappingURL=AspectList.js.map","import { MoleculeStream } from '../data/MoleculeStream';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nexport class AssayProvenanceHeader {\n    constructor() {\n        this.prefixes = {};\n        this.targetName = '';\n        this.targetURI = '';\n        this.organismName = '';\n        this.organismURI = '';\n        this.targetTypeName = '';\n        this.targetTypeURI = '';\n        this.cellName = '';\n        this.cellURI = '';\n        this.assayTypeName = '';\n        this.assayTypeURI = '';\n        this.assayDescription = '';\n        this.sourceName = '';\n        this.sourceURI = '';\n        this.sourceVersion = '';\n        this.documentName = '';\n        this.documentURI = '';\n        this.measureTypeName = '';\n        this.measureTypeURI = '';\n        this.unitNames = [];\n        this.unitURIs = [];\n    }\n}\nclass AssayProvenance extends Aspect {\n    static isAssayProvenance(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == AssayProvenance.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(AssayProvenance.CODE, ds, allowModify);\n        this.setup();\n    }\n    getHeader() {\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE)\n                return this.parseMetaData(this.ds.getExtData(n));\n        return null;\n    }\n    setHeader(header) {\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n    }\n    getMolecule(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n        return col < 0 ? null : this.ds.getMolecule(row, col);\n    }\n    getName(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getValue(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n        return col < 0 ? null : this.ds.isNull(row, col) ? Number.NaN : this.ds.getReal(row, col);\n    }\n    getError(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n        if (col < 0)\n            return null;\n        if (this.ds.isNull(row, col))\n            return Number.NaN;\n        let err = this.ds.getReal(row, col);\n        if (err <= 0)\n            return Number.NaN;\n        return err;\n    }\n    getUnits(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getRelation(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    getSourceURI(row) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n        return col < 0 ? null : this.ds.getString(row, col);\n    }\n    setMolecule(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_MOLECULE);\n        if (col >= 0)\n            this.ds.setMolecule(row, col, v);\n    }\n    setName(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_NAME);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setValue(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_VALUE);\n        if (col < 0) { }\n        else if (Number.isNaN(v))\n            this.ds.setToNull(row, col);\n        else\n            this.ds.setReal(row, col, v);\n    }\n    setError(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_ERROR);\n        if (col < 0) { }\n        else if (Number.isNaN(v))\n            this.ds.setToNull(row, col);\n        else\n            this.ds.setReal(row, col, v);\n    }\n    setUnits(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_UNITS);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setRelation(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_RELATION);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setSourceURI(row, v) {\n        let col = this.ds.findColByName(AssayProvenance.COLNAME_SOURCEURI);\n        if (col >= 0)\n            this.ds.setString(row, col, v);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        let header = new AssayProvenanceHeader();\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == AssayProvenance.CODE) {\n                header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        if (this.allowModify) {\n            this.ds.ensureColumn(AssayProvenance.COLNAME_MOLECULE, \"molecule\", 'Molecular structure of compound being measured');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_NAME, \"string\", 'Name of compound');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_VALUE, \"real\", 'Measured value');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_ERROR, \"real\", 'Experimental error of measurement');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_UNITS, \"string\", 'Units of measurement');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_RELATION, \"string\", 'Relation: exact, greater or less');\n            this.ds.ensureColumn(AssayProvenance.COLNAME_SOURCEURI, \"string\", 'Source identifier for activity measurement');\n        }\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(header);\n            this.ds.appendExtension(AssayProvenance.NAME, AssayProvenance.CODE, content);\n        }\n    }\n    parseMetaData(content) {\n        let header = new AssayProvenanceHeader();\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('pfx:'))\n                header.prefixes[MoleculeStream.skUnescape(line.substring(4, eq))] = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetName='))\n                header.targetName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetURI='))\n                header.targetURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('organismName='))\n                header.organismName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('organismURI='))\n                header.organismURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetTypeName='))\n                header.targetTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('targetTypeURI='))\n                header.targetTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('cellName='))\n                header.cellName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('cellURI='))\n                header.cellURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayTypeName='))\n                header.assayTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayTypeURI='))\n                header.assayTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('assayDescription='))\n                header.assayDescription = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceName='))\n                header.sourceName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceURI='))\n                header.sourceURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('sourceVersion='))\n                header.sourceVersion = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('documentName='))\n                header.documentName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('documentURI='))\n                header.documentURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('measureTypeName='))\n                header.measureTypeName = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('measureTypeURI='))\n                header.measureTypeURI = MoleculeStream.skUnescape(line.substring(eq + 1));\n            else if (line.startsWith('unit:')) {\n                header.unitNames.push(MoleculeStream.skUnescape(line.substring(5, eq)));\n                header.unitURIs.push(MoleculeStream.skUnescape(line.substring(eq + 1)));\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let content = '';\n        for (let pfx in header.prefixes)\n            content += 'pfx:' + MoleculeStream.skEscape(pfx) + '=' + MoleculeStream.skEscape(header.prefixes[pfx]) + '\\n';\n        content += 'targetName=' + MoleculeStream.skEscape(header.targetName) + '\\n';\n        content += 'targetURI=' + MoleculeStream.skEscape(header.targetURI) + '\\n';\n        content += 'organismName=' + MoleculeStream.skEscape(header.organismName) + '\\n';\n        content += 'organismURI=' + MoleculeStream.skEscape(header.organismURI) + '\\n';\n        content += 'targetTypeName=' + MoleculeStream.skEscape(header.targetTypeName) + '\\n';\n        content += 'targetTypeURI=' + MoleculeStream.skEscape(header.targetTypeURI) + '\\n';\n        content += 'cellName=' + MoleculeStream.skEscape(header.cellName) + '\\n';\n        content += 'cellURI=' + MoleculeStream.skEscape(header.cellURI) + '\\n';\n        content += 'assayTypeName=' + MoleculeStream.skEscape(header.assayTypeName) + '\\n';\n        content += 'assayTypeURI=' + MoleculeStream.skEscape(header.assayTypeURI) + '\\n';\n        content += 'assayDescription=' + MoleculeStream.skEscape(header.assayDescription) + '\\n';\n        content += 'sourceName=' + MoleculeStream.skEscape(header.sourceName) + '\\n';\n        content += 'sourceURI=' + MoleculeStream.skEscape(header.sourceURI) + '\\n';\n        content += 'sourceVersion=' + MoleculeStream.skEscape(header.sourceVersion) + '\\n';\n        content += 'documentName=' + MoleculeStream.skEscape(header.documentName) + '\\n';\n        content += 'documentURI=' + MoleculeStream.skEscape(header.documentURI) + '\\n';\n        content += 'measureTypeName=' + MoleculeStream.skEscape(header.measureTypeName) + '\\n';\n        content += 'measureTypeURI=' + MoleculeStream.skEscape(header.measureTypeURI) + '\\n';\n        for (let n = 0, num = Math.min(header.unitNames.length, header.unitURIs.length); n < num; n++)\n            content += 'unit:' + MoleculeStream.skEscape(header.unitNames[n]) + '=' + MoleculeStream.skEscape(header.unitURIs[n]) + '\\n';\n        return content;\n    }\n    plainHeading() { return AssayProvenance.NAME; }\n    isColumnReserved(colName) {\n        return colName == AssayProvenance.COLNAME_VALUE || colName == AssayProvenance.COLNAME_ERROR ||\n            colName == AssayProvenance.COLNAME_UNITS || colName == AssayProvenance.COLNAME_RELATION ||\n            colName == AssayProvenance.COLNAME_SOURCEURI;\n    }\n    numTextRenderings(row) { return 2; }\n    produceTextRendering(row, idx) {\n        let header = this.getHeader();\n        if (idx == 0) {\n            let tr = {\n                name: 'Activity',\n                descr: 'Activity measurement details for this record',\n                text: '',\n                type: Aspect.TEXT_PLAIN\n            };\n            let val = this.getValue(row), error = this.getError(row);\n            let units = this.getUnits(row), rel = this.getRelation(row);\n            tr.text = '';\n            if (!Number.isNaN(val)) {\n                if (rel)\n                    tr.text += rel + ' ';\n                tr.text += val;\n                if (!Number.isNaN(error))\n                    tr.text += ' \\u{00B1} ' + error;\n                if (units)\n                    tr.text += ' ' + units;\n            }\n            return tr;\n        }\n        else if (idx == 1) {\n            let tr = {\n                name: 'Source',\n                descr: 'Origin of the structure and activity measurement',\n                text: '',\n                type: Aspect.TEXT_LINK\n            };\n            let url = this.getSourceURI(row);\n            for (let pfx in header.prefixes)\n                if (url.startsWith(pfx + ':')) {\n                    url = header.prefixes[pfx] + url.substring(pfx.length + 1);\n                    break;\n                }\n            tr.text = url;\n            return tr;\n        }\n        return null;\n    }\n}\nAssayProvenance.CODE = 'org.mmi.aspect.AssayProvenance';\nAssayProvenance.NAME = 'Assay Provenance';\nAssayProvenance.COLNAME_MOLECULE = 'Molecule';\nAssayProvenance.COLNAME_NAME = 'Name';\nAssayProvenance.COLNAME_VALUE = 'Value';\nAssayProvenance.COLNAME_ERROR = 'Error';\nAssayProvenance.COLNAME_UNITS = 'Units';\nAssayProvenance.COLNAME_RELATION = 'Relation';\nAssayProvenance.COLNAME_SOURCEURI = 'SourceURI';\nAssayProvenance.URI_UNIT_M = 'http://purl.obolibrary.org/obo/UO_0000062';\nAssayProvenance.URI_UNIT_mM = 'http://purl.obolibrary.org/obo/UO_0000063';\nAssayProvenance.URI_UNIT_uM = 'http://purl.obolibrary.org/obo/UO_0000064';\nAssayProvenance.URI_UNIT_nM = 'http://purl.obolibrary.org/obo/UO_0000065';\nAssayProvenance.URI_UNIT_pM = 'http://purl.obolibrary.org/obo/UO_0000066';\nAssayProvenance.URI_UNIT_logM = 'http://www.bioassayontology.org/bao#BAO_0000101';\nAssayProvenance.URI_UNIT_perM = 'http://www.bioassayontology.org/bao#BAO_0000102';\nAssayProvenance.URI_UNIT_gL = 'http://purl.obolibrary.org/obo/UO_0000175';\nAssayProvenance.URI_UNIT_mgL = 'http://purl.obolibrary.org/obo/UO_0000273';\nAssayProvenance.URI_UNIT_ugL = 'http://purl.obolibrary.org/obo/UO_0000275';\nAssayProvenance.URI_UNIT_binary = 'http://www.bioassayontology.org/bao#BAO_0080023';\nexport { AssayProvenance };\nregisterAspect(AssayProvenance);\n//# sourceMappingURL=AssayProvenance.js.map","import { MoleculeStream } from '../data/MoleculeStream';\nimport { Vec } from '../util/Vec';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nclass MeasurementData extends Aspect {\n    static isMeasurementData(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == MeasurementData.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(MeasurementData.CODE, ds, allowModify);\n        this.header = { units: [], fields: [] };\n        this.setup();\n    }\n    getHeader() {\n        return this.header;\n    }\n    setHeader(header) {\n        this.header = header;\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == MeasurementData.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n    }\n    effectHeader(header) {\n        this.setHeader(header);\n        this.ensureFields();\n    }\n    rename(fldidx, newName) {\n        let oldName = this.header.fields[fldidx].name;\n        if (oldName == newName)\n            return;\n        this.header.fields[fldidx].name = newName;\n        this.setHeader(this.header);\n        for (let sfx of [MeasurementData.SUFFIX_VALUE, MeasurementData.SUFFIX_ERROR, MeasurementData.SUFFIX_UNITS, MeasurementData.SUFFIX_MOD]) {\n            let col = this.ds.findColByName(oldName + sfx);\n            if (col >= 0)\n                this.ds.changeColumnName(col, newName + sfx, this.ds.colDescr(col));\n        }\n    }\n    reservedColumns(fldidx) {\n        let fieldName = this.header.fields[fldidx].name;\n        return [fieldName + MeasurementData.SUFFIX_VALUE, fieldName + MeasurementData.SUFFIX_ERROR,\n            fieldName + MeasurementData.SUFFIX_UNITS, fieldName + MeasurementData.SUFFIX_MOD];\n    }\n    getValue(row, fldidx) {\n        return this.getValueField(row, this.header.fields[fldidx]);\n    }\n    getValueField(row, field) {\n        let value = { value: Number.NaN, error: Number.NaN, units: '', mod: '' };\n        let colValue = this.ds.findColByName(field.name + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(field.name + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(field.name + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(field.name + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0 && this.ds.notNull(row, colValue))\n            value.value = this.ds.getReal(row, colValue);\n        if (colError >= 0 && this.ds.notNull(row, colError))\n            value.error = this.ds.getReal(row, colError);\n        if (colUnits >= 0)\n            value.units = this.ds.getString(row, colUnits);\n        if (colMod >= 0)\n            value.mod = this.ds.getString(row, colMod);\n        return value;\n    }\n    setValue(row, fldidx, value) {\n        let fieldName = this.header.fields[fldidx].name;\n        let colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0)\n            if (isNaN(value.value))\n                this.ds.setToNull(row, colValue);\n            else\n                this.ds.setReal(row, colValue, value.value);\n        if (colError >= 0)\n            if (isNaN(value.error))\n                this.ds.setToNull(row, colError);\n            else\n                this.ds.setReal(row, colError, value.error);\n        if (colUnits >= 0)\n            this.ds.setString(row, colUnits, value.units);\n        if (colMod >= 0)\n            this.ds.setString(row, colMod, value.mod);\n    }\n    clearValue(row, fldidx) {\n        let fieldName = this.header.fields[fldidx].name;\n        let colValue = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_VALUE, \"real\");\n        let colError = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_ERROR, \"real\");\n        let colUnits = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_UNITS, \"string\");\n        let colMod = this.ds.findColByName(fieldName + MeasurementData.SUFFIX_MOD, \"string\");\n        if (colValue >= 0)\n            this.ds.setToNull(row, colValue);\n        if (colError >= 0)\n            this.ds.setToNull(row, colError);\n        if (colUnits >= 0)\n            this.ds.setToNull(row, colUnits);\n        if (colMod >= 0)\n            this.ds.setToNull(row, colMod);\n    }\n    getDescr(row, fldidx) {\n        let col = this.ds.findColByName(this.header.fields[fldidx].name);\n        return col < 0 ? '' : this.ds.colDescr(col);\n    }\n    setDescr(row, fldidx, descr) {\n        let col = this.ds.findColByName(this.header.fields[fldidx].name);\n        if (col >= 0)\n            this.ds.changeColumnName(col, this.ds.colName(col), descr);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        this.header = { units: [], fields: [] };\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == MeasurementData.CODE) {\n                this.header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        this.ensureFields();\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(this.header);\n            this.ds.appendExtension(MeasurementData.NAME, MeasurementData.CODE, content);\n        }\n    }\n    ensureFields() {\n        for (let f of this.header.fields) {\n            let descr = 'Measurement';\n            let colidx = this.ds.findColByName(f.name);\n            if (colidx >= 0)\n                descr = this.ds.colDescr(colidx);\n            if (this.allowModify) {\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_VALUE, \"real\", descr);\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_ERROR, \"real\", 'Error');\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_UNITS, \"string\", 'Units');\n                this.ds.ensureColumn(f.name + MeasurementData.SUFFIX_MOD, \"string\", 'Modifier');\n            }\n        }\n    }\n    parseMetaData(content) {\n        let header = { units: [], fields: [] };\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('unit=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length >= 2)\n                    header.units.push({ name: MoleculeStream.skUnescape(bits[0]), uri: MoleculeStream.skUnescape(bits[1]) });\n            }\n            else if (line.startsWith('field=')) {\n                let bits = line.substring(eq + 1).split(',');\n                let f = { name: MoleculeStream.skUnescape(bits[0]), units: [], defnURI: [] };\n                for (let n = 1; n < bits.length; n++)\n                    f.units.push(MoleculeStream.skUnescape(bits[n]));\n                header.fields.push(f);\n            }\n            else if (line.startsWith('definition=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length >= 2) {\n                    let f = header.fields.find((f) => f.name == bits[0]);\n                    if (!f)\n                        continue;\n                    for (let n = 1; n < bits.length; n++)\n                        f.defnURI.push(MoleculeStream.skUnescape(bits[n]));\n                }\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let lines = [];\n        for (let u of header.units) {\n            lines.push('unit=' + MoleculeStream.skEscape(u.name) + ',' + MoleculeStream.skEscape(u.uri));\n        }\n        for (let f of header.fields) {\n            let line = 'field=' + MoleculeStream.skEscape(f.name);\n            for (let u of f.units)\n                line += ',' + MoleculeStream.skEscape(u);\n            lines.push(line);\n            if (Vec.notBlank(f.defnURI)) {\n                line = 'definition=' + MoleculeStream.skEscape(f.name);\n                for (let d of f.defnURI)\n                    line += ',' + MoleculeStream.skEscape(d);\n                lines.push(line);\n            }\n        }\n        return lines.join('\\n');\n    }\n    plainHeading() { return MeasurementData.NAME; }\n    isColumnReserved(colName) {\n        return this.areColumnsReserved([colName])[0];\n    }\n    areColumnsReserved(colNames) {\n        let names = new Set();\n        for (let f of this.header.fields) {\n            names.add(f.name + MeasurementData.SUFFIX_VALUE);\n            names.add(f.name + MeasurementData.SUFFIX_ERROR);\n            names.add(f.name + MeasurementData.SUFFIX_UNITS);\n            names.add(f.name + MeasurementData.SUFFIX_MOD);\n        }\n        let resv = [];\n        for (let col of colNames)\n            resv.push(names.has(col));\n        return resv;\n    }\n    numTextRenderings(row) { return this.header.fields.length; }\n    produceTextRendering(row, idx) {\n        let field = this.header.fields[idx];\n        let colField = this.ds.findColByName(field.name);\n        let tr = {\n            name: field.name,\n            descr: colField < 0 ? '' : this.ds.colDescr(colField),\n            text: '',\n            type: Aspect.TEXT_PLAIN\n        };\n        let datum = this.getValue(row, idx);\n        if (!Number.isNaN(datum.value)) {\n            if (datum.mod)\n                tr.text += datum.mod + ' ';\n            tr.text += datum.value;\n            if (!Number.isNaN(datum.error))\n                tr.text += ' \\u{00B1} ' + datum.error;\n            if (datum.units)\n                tr.text += ' ' + datum.units;\n        }\n        return tr;\n    }\n}\nMeasurementData.CODE = 'org.mmi.aspect.MeasurementData';\nMeasurementData.NAME = 'Measurement Data';\nMeasurementData.SUFFIX_VALUE = '';\nMeasurementData.SUFFIX_ERROR = '_error';\nMeasurementData.SUFFIX_UNITS = '_units';\nMeasurementData.SUFFIX_MOD = '_mod';\nexport { MeasurementData };\nregisterAspect(MeasurementData);\n//# sourceMappingURL=MeasurementData.js.map","import { MoleculeStream } from '../data/MoleculeStream';\nimport { Vec } from '../util/Vec';\nimport { Aspect } from './Aspect';\nimport { registerAspect } from './AspectList';\nimport { MeasurementData } from './MeasurementData';\nexport var MixtureAttributeType;\n(function (MixtureAttributeType) {\n    MixtureAttributeType[\"Structure\"] = \"structure\";\n    MixtureAttributeType[\"Name\"] = \"name\";\n    MixtureAttributeType[\"Quantity\"] = \"quantity\";\n    MixtureAttributeType[\"Bound\"] = \"bound\";\n    MixtureAttributeType[\"Error\"] = \"error\";\n    MixtureAttributeType[\"Ratio\"] = \"ratio\";\n    MixtureAttributeType[\"Units\"] = \"units\";\n    MixtureAttributeType[\"Relation\"] = \"relation\";\n    MixtureAttributeType[\"Identifier\"] = \"identifier\";\n    MixtureAttributeType[\"Link\"] = \"link\";\n    MixtureAttributeType[\"Property\"] = \"property\";\n})(MixtureAttributeType || (MixtureAttributeType = {}));\nclass Mixture extends Aspect {\n    static isMixture(ds) {\n        for (let n = 0; n < ds.numExtensions; n++)\n            if (ds.getExtType(n) == Mixture.CODE)\n                return true;\n        return false;\n    }\n    constructor(ds, allowModify) {\n        super(Mixture.CODE, ds, allowModify);\n        this.header = { attributes: [] };\n        this.setup();\n    }\n    getHeader() {\n        return this.header;\n    }\n    setHeader(header) {\n        this.header = header;\n        let content = this.formatMetaData(header);\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == Mixture.CODE) {\n                this.ds.setExtData(n, content);\n                return;\n            }\n        this.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n    }\n    setup() {\n        this.parseAndCorrect();\n    }\n    parseAndCorrect() {\n        this.header = { attributes: [] };\n        let got = false;\n        for (let n = 0; n < this.ds.numExtensions; n++)\n            if (this.ds.getExtType(n) == Mixture.CODE) {\n                this.header = this.parseMetaData(this.ds.getExtData(n));\n                got = true;\n                break;\n            }\n        if (!got && this.allowModify) {\n            let content = this.formatMetaData(this.header);\n            this.ds.appendExtension(Mixture.NAME, Mixture.CODE, content);\n        }\n    }\n    parseMetaData(content) {\n        let header = { attributes: [] };\n        for (let line of content.split(/\\r?\\n/)) {\n            let eq = line.indexOf('=');\n            if (eq < 0)\n                continue;\n            if (line.startsWith('attr=')) {\n                let bits = line.substring(eq + 1).split(',');\n                if (bits.length < 3)\n                    continue;\n                let column = MoleculeStream.skUnescape(bits[0]);\n                let position = [];\n                if (bits[1] != '0')\n                    position = bits[1].split('.').map((str) => parseInt(str));\n                let type = bits[2];\n                let info = [];\n                for (let n = 3; n < bits.length; n++)\n                    info.push(MoleculeStream.skUnescape(bits[n]));\n                header.attributes.push({ column, position, type, info });\n            }\n        }\n        return header;\n    }\n    formatMetaData(header) {\n        let lines = [];\n        for (let a of header.attributes) {\n            let bits = [MoleculeStream.skEscape(a.column)];\n            if (Vec.isBlank(a.position))\n                bits.push('0');\n            else\n                bits.push(a.position.join('.'));\n            bits.push(a.type);\n            if (a.info)\n                for (let str of a.info)\n                    bits.push(MoleculeStream.skEscape(str));\n            lines.push('attr=' + bits.join(','));\n        }\n        return lines.join('\\n');\n    }\n    plainHeading() { return MeasurementData.NAME; }\n    isColumnReserved(colName) {\n        return this.areColumnsReserved([colName])[0];\n    }\n    areColumnsReserved(colNames) {\n        let names = new Set();\n        for (let a of this.header.attributes)\n            names.add(a.column);\n        let resv = [];\n        for (let col of colNames)\n            resv.push(names.has(col));\n        return resv;\n    }\n}\nMixture.CODE = 'org.mmi.aspect.Mixture';\nMixture.NAME = 'Mixture';\nMixture.SUFFIX_VALUE = '';\nexport { Mixture };\nregisterAspect(Mixture);\n//# sourceMappingURL=Mixture.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MixfileComponent} from '../data/Mixfile';\nimport {MixtureCollection} from '../data/MixtureCollection';\nimport {DataSheet} from 'webmolkit/data/DataSheet';\nimport {AssayProvenance} from 'webmolkit/aspect/AssayProvenance';\nimport {MeasurementData} from 'webmolkit/aspect/MeasurementData';\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {DataSheetStream} from 'webmolkit/data/DataSheetStream';\nimport {MDLSDFReader} from 'webmolkit/data/MDLReader';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {Mixture as MixtureAspect} from 'webmolkit/aspect/Mixture';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from '../data/Mixture';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\n/*\n\tTable extraction: create Mixfile instances from tabular data sources, with the help of directions for placing columns into\n\tthe mixture hierarchy.\n*/\n\nexport enum TableExtractType\n{\n\tStructure = 'structure',\n\tName = 'name',\n\tQuantity = 'quantity',\n\tBound = 'bound',\n\tError = 'error',\n\tRatio = 'ratio',\n\tUnits = 'units',\n\tRelation = 'relation',\n\tIdentifier = 'identifier',\n\tLink = 'link',\n\tProperty = 'property',\n}\n\ninterface TableExtractMapping\n{\n\tcolumn:string;\n\torigin:number[];\n\ttype:TableExtractType;\n\tinfo?:string[];\n}\n\nexport class TableExtract\n{\n\tprivate table:DataSheet = null;\n\tprivate aprov:AssayProvenance = null;\n\tprivate mdata:MeasurementData = null;\n\n\tprivate lookup:Map<string, Molecule> = null;\n\tprivate mappings:TableExtractMapping[] = [];\n\n\tconstructor(private tableFile:string, private lookupFile:string, private mappingFile:string, private verbose:boolean)\n\t{\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tlet content:string;\n\t\ttry {content = fs.readFileSync(this.tableFile).toString();}\n\t\tcatch (ex) {throw 'Unable to read file ' + this.tableFile + ': ' + ex;}\n\n\t\tif (this.tableFile.endsWith('.ds')) this.table = DataSheetStream.readXML(content);\n\t\telse if (this.tableFile.endsWith('.sdf')) this.table = new MDLSDFReader(content).parse();\n\t\telse if (this.tableFile.endsWith('.csv')) this.table = this.parseLines(',', true);\n\t\telse if (this.tableFile.endsWith('.tsv') || this.tableFile.endsWith('.tab')) this.table = this.parseLines('\\t', false);\n\t\tif (!this.table) throw 'Unable to parse: ' + this.tableFile;\n\n\t\tif (AssayProvenance.isAssayProvenance(this.table)) this.aprov = new AssayProvenance(this.table, false);\n\t\tif (MeasurementData.isMeasurementData(this.table)) this.mdata = new MeasurementData(this.table, false);\n\n\t\tif (this.lookupFile)\n\t\t{\n\t\t\t// TODO\n\t\t}\n\n\t\tthis.initialMapping();\n\t\tif (this.mappingFile)\n\t\t{\n\t\t\tcontent = fs.readFileSync(this.mappingFile).toString();\n\t\t\tthis.customMapping(JSON.parse(content));\n\t\t}\n\n\t\tif (this.mappings.length == 0) throw 'No column mapping information available.';\n\n\t\tlet mixtures = new MixtureCollection();\n\t\tfor (let n = 0; n < this.table.numRows; n++)\n\t\t{\n\t\t\tlet mixture = this.extractMixture(n);\n\t\t\tif (mixture) mixtures.appendMixtureDirect(mixture);\n\t\t}\n\n\t\tconsole.log(mixtures.serialise(true));\n\t}\n\n\t// ------------ private methods ------------\n\n\t// read TSV/CSV file, which is presumed to have column headings, and may include escape sequences\n\tprivate parseLines(sep:string, escaped:boolean):DataSheet\n\t{\n\t\tlet ds = new DataSheet();\n\n\t\t// !! load each line, split into strings, apply columns then rows...\n\t\t// !! anything that's all {int} or {real} gets changed retroactively\n\n\t\treturn ds;\n\t}\n\n\t// extract column-to-mixture information embedded in the initial datasheet, if possible\n\tprivate initialMapping():void\n\t{\n\t\tif (!MixtureAspect.isMixture(this.table)) return;\n\n\t\tlet aspect = new MixtureAspect(this.table, false);\n\t\tfor (let attr of aspect.getHeader().attributes)\n\t\t{\n\t\t\tlet map:TableExtractMapping =\n\t\t\t{\n\t\t\t\t'column': attr.column,\n\t\t\t\t'origin': Vec.add(attr.position, -1),\n\t\t\t\t'type': attr.type as any as TableExtractType, // same enum values\n\t\t\t\t'info': attr.info,\n\t\t\t};\n\t\t\tthis.mappings.push(map);\n\t\t}\n\t}\n\n\t// merge in user-provided mappings\n\tprivate customMapping(custom:TableExtractMapping[]):void\n\t{\n\t\tfor (let map of custom)\n\t\t{\n\t\t\tlet idx = this.mappings.findIndex((look) => look.column == map.column);\n\t\t\tif (idx >= 0) this.mappings[idx] = map; else this.mappings.push(map);\n\t\t}\n\t}\n\n\t// pull out the content from a row in the table and corral them into a mixture\n\tprivate extractMixture(row:number):Mixture\n\t{\n\t\tlet mixture = new Mixture();\n\n\t\tfor (let map of this.mappings)\n\t\t{\n\t\t\tlet comp = mixture.mixfile as MixfileComponent;\n\t\t\tfor (let idx of map.origin)\n\t\t\t{\n\t\t\t\tif (comp.contents == null) comp.contents = [];\n\t\t\t\twhile (idx >= comp.contents.length) comp.contents.push({});\n\t\t\t\tcomp = comp.contents[idx];\n\t\t\t}\n\t\t}\n\n\t\tlet appendQuant = (quantity:number | number[], val:number):number | number[] =>\n\t\t{\n\t\t\tif (isNaN(val)) return quantity;\n\t\t\tif (quantity == null) return val;\n\t\t\telse if (typeof quantity == 'number' && quantity != val) return [Math.min(quantity, val), Math.max(quantity, val)];\n\t\t\telse return quantity;\n\t\t};\n\n\t\tlet stashRatio = new Map<string, number>();\n\t\tlet fields = this.mdata ? this.mdata.getHeader().fields : [];\n\n\t\tfor (let map of this.mappings)\n\t\t{\n\t\t\tlet col = this.table.findColByName(map.column);\n\t\t\tif (col < 0 || this.table.isNull(row, col)) continue;\n\n\t\t\tlet comp = mixture.getComponent(map.origin);\n\n\t\t\tif (map.type == TableExtractType.Structure)\n\t\t\t{\n\t\t\t\tlet mol = this.table.getMolecule(row, col);\n\t\t\t\tcomp.molfile = new MDLMOLWriter(mol).write();\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Name)\n\t\t\t{\n\t\t\t\tcomp.name = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Quantity)\n\t\t\t{\n\t\t\t\t// if aspected: can extract more information\n\t\t\t\tif (this.aprov && map.column == AssayProvenance.COLNAME_VALUE)\n\t\t\t\t{\n\t\t\t\t\tcomp.quantity = this.aprov.getValue(row);\n\t\t\t\t\tlet error = this.aprov.getError(row);\n\t\t\t\t\tif (!isNaN(error)) comp.error = error;\n\t\t\t\t\tcomp.units = this.aprov.getUnits(row); // TODO: translate based on URI\n\t\t\t\t\tlet relation = this.aprov.getRelation(row);\n\t\t\t\t\tif (relation && relation != '=') comp.relation = relation;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet field = fields.find((f) => f.name == map.column);\n\t\t\t\tif (field)\n\t\t\t\t{\n\t\t\t\t\tlet value = this.mdata.getValueField(row, field);\n\t\t\t\t\tcomp.quantity = value.value;\n\t\t\t\t\tif (!isNaN(value.error)) comp.error = value.error;\n\t\t\t\t\tcomp.units = value.units;\n\t\t\t\t\tif (value.mod && value.mod != '=') comp.relation = value.mod;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tcomp.quantity = appendQuant(comp.quantity, val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Bound)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tcomp.quantity = appendQuant(comp.quantity, val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Error)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tif (!isNaN(val)) comp.error = val;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Ratio)\n\t\t\t{\n\t\t\t\tlet val = parseFloat(this.table.toString(row, col));\n\t\t\t\tif (!isNaN(val)) stashRatio.set(JSON.stringify(map.origin), val);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Units)\n\t\t\t{\n\t\t\t\tlet units = this.table.toString(row, col);\n\t\t\t\t// TODO: correction/mapping...\n\t\t\t\tcomp.units = units;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Relation)\n\t\t\t{\n\t\t\t\tlet relation = this.table.toString(row, col);\n\t\t\t\t// TODO: correction/mapping...\n\t\t\t\tcomp.relation = relation;\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Identifier)\n\t\t\t{\n\t\t\t\tif (comp.identifiers == null) comp.identifiers = {};\n\t\t\t\tcomp.identifiers[map.column] = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Link)\n\t\t\t{\n\t\t\t\tif (comp.links == null) comp.links = {};\n\t\t\t\tcomp.links[map.column] = this.table.toString(row, col);\n\t\t\t}\n\t\t\telse if (map.type == TableExtractType.Property)\n\t\t\t{\n\t\t\t\tconsole.log('TODO: property'); // !! lookup aspects...\n\t\t\t}\n\t\t}\n\n\t\t// fill in any missing ratios\n\t\tfor (let origin of mixture.getOrigins())\n\t\t{\n\t\t\tlet comp = mixture.getComponent(origin);\n\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\t\t\tlet num = 0, total = 0;\n\t\t\tfor (let n = 0; n < comp.contents.length; n++) if (!Mixture.isComponentEmpty(comp.contents[n]))\n\t\t\t{\n\t\t\t\tlet ratio = stashRatio.get(JSON.stringify([...origin, n]));\n\t\t\t\tif (!ratio) {num = 0; break;}\n\t\t\t\tnum++;\n\t\t\t\ttotal += ratio;\n\t\t\t}\n\t\t\tif (num > 0) for (let n = 0; n < comp.contents.length; n++) if (!Mixture.isComponentEmpty(comp.contents[n]))\n\t\t\t{\n\t\t\t\tlet ratio = stashRatio.get(JSON.stringify([...origin, n]));\n\t\t\t\tcomp.contents[n].ratio = [ratio, total];\n\t\t\t}\n\t\t}\n\n\t\t// trim out blank pieces\n\t\tskip: for (let origin of Vec.reverse(mixture.getOrigins()))\n\t\t{\n\t\t\tlet comp = mixture.getComponent(origin);\n\t\t\tif (Mixture.isComponentEmpty(comp))\n\t\t\t{\n\t\t\t\tmixture.deleteComponent(origin);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// may collapse singletons\n\t\t\tif (Vec.arrayLength(comp.contents) != 1) continue;\n\t\t\tfor (let key in comp) if (key != 'contents' && (comp as any)[key]) continue skip;\n\t\t\tlet sub = comp.contents[0];\n\t\t\tcomp.contents = null;\n\t\t\tmixture.setComponent(origin, sub);\n\t\t}\n\n\t\treturn mixture;\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2021 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/data/Molecule';\nimport {Mixfile, MixfileComponent} from '../data/Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MDLSDFReader} from 'webmolkit/data/MDLReader';\nimport {DataSheetColumn} from 'webmolkit/data/DataSheet';\nimport {Mixture} from '../data/Mixture';\nimport {MDLMOLWriter} from 'webmolkit/data/MDLWriter';\nimport {StandardUnits, Units} from '../data/Units';\n\n/*\n\tImporting one or more mixtures from chunks of text that represent an SDfile with special mixture fields.\n*/\n\ninterface ImportComponent\n{\n\tmol:Molecule;\n\tname:string;\n\tconc:string;\n\thier:string;\n}\n\nexport class ImportSDFile\n{\n\tprivate buffer = '';\n\tprivate components:ImportComponent[] = [];\n\tprivate mixfiles:Mixfile[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t}\n\n\t// adds a chunk of text to the buffer, which may cause more SDfile units to be extracted; after calling this, 0-or-more new mixtures will become available\n\t// to be polled\n\tpublic feed(chunk:string):void\n\t{\n\t\tthis.buffer += chunk;\n\t\twhile (true)\n\t\t{\n\t\t\tlet sep = this.buffer.indexOf('$$$$\\n');\n\t\t\tif (sep < 0) break;\n\t\t\tsep += 5;\n\t\t\tthis.processBlock(this.buffer.substring(0, sep));\n\t\t\tthis.buffer = this.buffer.substring(sep);\n\t\t}\n\t}\n\n\t// grab the next assembled mixfile and take it out of the delivery list; if the final flag is true, it means we've reached the end of the input sequence, so\n\t// whatever components remain must be complete\n\tpublic poll(final = false):Mixfile\n\t{\n\t\tif (Vec.notBlank(this.mixfiles)) return this.mixfiles.shift();\n\t\tif (final && Vec.notBlank(this.components))\n\t\t{\n\t\t\tthis.assembleComponents();\n\t\t\treturn this.mixfiles[0];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// have identified one SDfile record (ending in $$$$), so carve it up into an upcoming component\n\tprivate processBlock(sdfile:string):void\n\t{\n\t\tlet reader = new MDLSDFReader(sdfile);\n\t\treader.upcastColumns = false;\n\t\tlet ds = reader.parse();\n\t\tif (!ds || ds.numRows == 0) return;\n\t\tlet colMol = ds.firstColOfType(DataSheetColumn.Molecule);\n\t\tlet colName = ds.findColByName('Name');\n\t\tlet colHier = ds.findColByName('MINCHI$N');\n\t\tlet colConc = ds.findColByName('MINCHI$C');\n\t\tif (colHier < 0) return; // not a valid mixture block\n\n\t\tlet mol = colMol < 0 ? null : ds.getMolecule(0, colMol);\n\t\tlet name = colName < 0 ? null : ds.getString(0, colName);\n\t\tlet hier = ds.getString(0, colHier);\n\t\tlet conc = colConc < 0 ? null : ds.getString(0, colConc);\n\t\tif (Vec.notBlank(this.components) && hier == '1') this.assembleComponents();\n\n\t\tthis.components.push({mol, name, hier, conc});\n\t}\n\n\t// turn the current list of components into a mixfile, based on the assumption that we've reached a dividing point\n\tprivate assembleComponents():void\n\t{\n\t\tlet mixture = new Mixture();\n\n\t\tfor (let incomp of this.components)\n\t\t{\n\t\t\tlet molfile = incomp.mol ? new MDLMOLWriter(incomp.mol).write() : undefined;\n\t\t\tlet origin = incomp.hier.split('.').map((str) => parseInt(str) - 1);\n\t\t\tlet idx = origin.pop();\n\t\t\tlet parent = mixture.getComponent(origin);\n\t\t\tif (!parent.contents) parent.contents = [];\n\t\t\tlet comp:MixfileComponent = {name: incomp.name, molfile: molfile, contents: []};\n\t\t\tif (incomp.conc) this.decodeConcentration(incomp.conc, comp);\n\t\t\tparent.contents[idx] = comp;\n\t\t}\n\n\t\tif (mixture.mixfile.contents.length == 1) mixture = new Mixture(mixture.mixfile.contents[0] as Mixfile);\n\n\t\t// ratios are expressed as the numerator; fill in the denominator as well\n\t\tlet finishRatio = (comp:MixfileComponent):void =>\n\t\t{\n\t\t\tif (Vec.isBlank(comp.contents)) return;\n\t\t\tlet denom = 0;\n\t\t\tfor (let child of comp.contents)\n\t\t\t{\n\t\t\t\t if (!child.ratio || Vec.len(child.ratio) != 2)\n\t\t\t\t {\n\t\t\t\t \tdenom = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t }\n\t\t\t\t denom += child.ratio[0];\n\t\t\t}\n\t\t\tfor (let child of comp.contents)\n\t\t\t{\n\t\t\t\tif (denom > 0)\n\t\t\t\t\tchild.ratio = [child.ratio[0], denom];\n\t\t\t\telse\n\t\t\t\t\tchild.ratio = undefined;\n\t\t\t}\n\t\t\tfor (let child of comp.contents) finishRatio(child);\n\t\t};\n\t\tfinishRatio(mixture.mixfile);\n\n\t\tthis.components = [];\n\t\tthis.mixfiles.push(mixture.mixfile);\n\t}\n\n\t// unpacks the MInChI-style concentration from the SDfile into the dictionary-style used by Mixfile components\n\tprivate decodeConcentration(conc:string, comp:MixfileComponent):void\n\t{\n\t\tlet match = conc.match(/^([\\>\\<\\=\\~]*)([-\\d\\.:]+)(\\w\\w)([-\\d]*)$/);\n\t\tif (!match) return; // this is technically an error: fails silently\n\n\t\tlet relation = match[1], qstr = match[2], mnemonic = match[3], mantissa = parseInt(match[4]) || 0;\n\n\t\tlet quant1:number = null, quant2:number = NaN;\n\t\tif ((match = qstr.match(/^([-\\d\\.]+):([-\\d\\.]+)$/)))\n\t\t{\n\t\t\tquant1 = parseFloat(match[1]);\n\t\t\tquant2 = parseFloat(match[2]);\n\t\t\tif (isNaN(quant1) || isNaN(quant2)) return;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tquant1 = parseFloat(qstr);\n\t\t\tif (isNaN(quant1)) return;\n\t\t}\n\n\t\tlet units = '', scale = 1, isRatio = false;\n\t\tif (mnemonic == 'pp') units = StandardUnits.pc;\n\t\telse if (mnemonic == 'wv') [units, scale] = [StandardUnits.pcWV, 100];\n\t\telse if (mnemonic == 'wf') [units, scale] = [StandardUnits.pcWW, 100];\n\t\telse if (mnemonic == 'vf') [units, scale] = [StandardUnits.pcVV, 100];\n\t\telse if (mnemonic == 'mf') [units, scale] = [StandardUnits.pcMM, 100];\n\t\telse if (mnemonic == 'rt') isRatio = true;\n\t\telse if (mnemonic == 'mr') [units, scale] = [StandardUnits.mol_L, 1];\n\t\telse if (mnemonic == 'wv') [units, scale] = [StandardUnits.g_L, 1E3];\n\t\telse if (mnemonic == 'mb') units = StandardUnits.mol_kg;\n\t\telse return; // not recognised\n\n\t\tcomp.relation = relation || undefined;\n\n\t\tif (isRatio) comp.ratio = [quant1, 0];\n\t\telse if (isNaN(quant2))\n\t\t{\n\t\t\tcomp.quantity = quant1 * Math.pow(10, mantissa) * scale;\n\t\t\tcomp.units = Units.uriToName(units);\n\t\t}\n\t\telse // it's a range\n\t\t{\n\t\t\tcomp.quantity = [quant1 * Math.pow(10, mantissa) * scale, quant2 * Math.pow(10, mantissa) * scale];\n\t\t\tcomp.units = Units.uriToName(units);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {InChI} from '../data/InChI';\nimport {Mixfile} from '../data/Mixfile';\nimport {Mixture} from '../data/Mixture';\nimport {ExportMInChI} from '../mixture/ExportMInChI';\nimport {ExportSDFile} from '../mixture/ExportSDFile';\nimport {ImportSDFile} from '../mixture/ImportSDFile';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {Vec} from 'webmolkit/util/Vec';\nimport * as fs from 'fs';\n\n/*\n\tReads a stream of mixtures and writes it out as a stream, with format transformation as necessary.\n*/\n\nexport enum TransformMixtureFormat\n{\n\tMixfile = 'mixfile', // single mixfile\n\tJSON = 'json', // list of mixtures\n\tSDF = 'sdf', // SDfile with mixture-specific columns\n\tMInChI = 'minchi', // MInChI notation, newline separated\n\tLongMInChIKey = 'longminchikey', // hashed keys of MInChI structure section\n\tShortMInChIKey = 'shortminchikey', // crunched keys of MInChI structure section, fixed length\n\tSVG = 'svg', // graphical rendering\n}\nexport const ALL_TRANSFORMMIXTURE_FORMATS = Object.values(TransformMixtureFormat);\n\nexport class TransformMixtures\n{\n\tprivate process = require('process');\n\n\tprivate inputFormat:TransformMixtureFormat = null;\n\tprivate outputFormat:TransformMixtureFormat = null;\n\n\tprivate instream:any = null;\n\tprivate outstream:any = null;\n\n\tprivate count = 0;\n\n\tprivate nextIndex = 0;\n\tprivate roster:{idx:number; chunk:string}[] = [];\n\n\tconstructor(private inputFile:string, inputFormat:string, private outputFile:string, outputFormat:string)\n\t{\n\t\tif (inputFormat)\n\t\t{\n\t\t\tif (!ALL_TRANSFORMMIXTURE_FORMATS.includes(inputFormat as TransformMixtureFormat)) throw 'Unknown input format: ' + inputFormat;\n\t\t\tthis.inputFormat = inputFormat as TransformMixtureFormat;\n\t\t}\n\t\tif (outputFormat)\n\t\t{\n\t\t\tif (!ALL_TRANSFORMMIXTURE_FORMATS.includes(outputFormat as TransformMixtureFormat)) throw 'Unknown output format: ' + outputFormat;\n\t\t\tthis.outputFormat = outputFormat as TransformMixtureFormat;\n\t\t}\n\t}\n\n\tpublic async exec():Promise<void>\n\t{\n\t\tif (this.inputFile && !this.inputFormat)\n\t\t{\n\t\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) if (this.inputFile.endsWith('.' + fmt))\n\t\t\t{\n\t\t\t\tthis.inputFormat = fmt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.inputFormat) throw 'Unknown input format';\n\t\tif (this.inputFormat == TransformMixtureFormat.MInChI || this.inputFormat == TransformMixtureFormat.SVG ||\n\t\t\tthis.inputFormat == TransformMixtureFormat.LongMInChIKey || this.inputFormat == TransformMixtureFormat.ShortMInChIKey) throw 'Can only write format: ' + this.inputFormat;\n\n\t\tif (this.outputFile && !this.outputFormat)\n\t\t{\n\t\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) if (this.outputFile.endsWith('.' + fmt))\n\t\t\t{\n\t\t\t\tthis.outputFormat = fmt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!this.outputFormat) throw 'Unknown output format';\n\t\tif ((this.outputFormat == TransformMixtureFormat.MInChI || this.outputFormat == TransformMixtureFormat.LongMInChIKey ||\n\t\t\tthis.outputFormat == TransformMixtureFormat.ShortMInChIKey) && !InChI.hasExecutable()) throw 'For MInChI, must specify InChI executable as command line parameter.';\n\n\t\tthis.instream = this.inputFile ? fs.createReadStream(this.inputFile) : this.process.stdin;\n\t\tthis.outstream = this.outputFile ? fs.createWriteStream(this.outputFile) : this.process.stdout;\n\n\t\tif (this.outputFormat == TransformMixtureFormat.JSON) this.outstream.write('[\\n');\n\n\t\tif (this.inputFormat == TransformMixtureFormat.Mixfile) await this.pipeMixfile();\n\t\telse if (this.inputFormat == TransformMixtureFormat.JSON) await this.pipeJSON();\n\t\telse if (this.inputFormat == TransformMixtureFormat.SDF) await this.pipeSDF();\n\n\t\tthis.flushRoster();\n\n\t\tif (this.outputFormat == TransformMixtureFormat.JSON) this.outstream.write(']\\n');\n\n\t\tthis.outstream.end();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate async pipeMixfile():Promise<void>\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet json = '';\n\t\t\tthis.instream.on('data', (chunk:string) => json += chunk);\n\t\t\tthis.instream.on('end', () =>\n\t\t\t{\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mixfile = JSON.parse(json) as Mixfile;\n\t\t\t\t\t\tawait this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async pipeJSON():Promise<void>\n\t{\n\t\tconst StreamArray = require('stream-json/streamers/StreamArray');\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet array = StreamArray.withParser();\n\t\t\tthis.instream.pipe(array.input);\n\t\t\tlet json:Record<string, any> = {};\n\t\t\tarray.on('data', (keyval:Record<string, any>) =>\n\t\t\t{\n\t\t\t\tlet mixfile = keyval['value'] as Mixfile;\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tawait this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t\tarray.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async pipeSDF():Promise<void>\n\t{\n\t\tlet sdfile = new ImportSDFile();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tthis.instream.on('data', (chunk:string) =>\n\t\t\t{\n\t\t\t\tsdfile.feed(chunk);\n\t\t\t\tfor (let mixfile = sdfile.poll(); mixfile; mixfile = sdfile.poll()) this.processMixfile(this.count++, mixfile);\n\t\t\t});\n\t\t\tthis.instream.on('end', () =>\n\t\t\t{\n\t\t\t\t// (explicit blocking would be correct but hard to code in this framework; async tasks are ordered though, so is OK)\n\t\t\t\t(async () =>\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tlet mixfile = sdfile.poll(true);\n\t\t\t\t\t\tif (mixfile) await this.processMixfile(this.count++, mixfile);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {reject(ex);}\n\t\t\t\t})();\n\t\t\t});\n\t\t});\n\t}\n\n\t// a mixfile has been parsed out from the input stream, so deal with it appropriately: this means that something goes into the output roster\n\t// with the given index\n\tprivate async processMixfile(idx:number, mixfile:Mixfile):Promise<void>\n\t{\n\t\tif (mixfile.mixfileVersion == null) throw 'Invalid mixfile';\n\n\t\tlet chunk:string = null;\n\n\t\tif (this.outputFormat == TransformMixtureFormat.Mixfile)\n\t\t{\n\t\t\tlet json = new Mixture(mixfile).serialise(); // makes it nice\n\t\t\tchunk = json + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.JSON)\n\t\t{\n\t\t\tthis.outstream.write(idx == 0 ? ' ' : ',');\n\t\t\tlet json = JSON.stringify(mixfile); // single line compact\n\t\t\tchunk = json + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.SDF)\n\t\t{\n\t\t\tlet sdfile = new ExportSDFile();\n\t\t\tsdfile.append(mixfile);\n\t\t\tlet record = sdfile.write();\n\t\t\tchunk = record + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.MInChI)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile);\n\t\t\tawait minchi.fillInChI();\n\t\t\tminchi.formulate();\n\t\t\tchunk = minchi.getResult() + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.LongMInChIKey)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile);\n\t\t\tawait minchi.fillInChI();\n\t\t\tlet hashkey = minchi.makeLongHashKey();\n\t\t\tchunk = hashkey + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.ShortMInChIKey)\n\t\t{\n\t\t\tif (!InChI.isAvailable()) throw 'InChI unavailable: need to specify executable on command line';\n\t\t\tlet minchi = new ExportMInChI(mixfile);\n\t\t\tawait minchi.fillInChI();\n\t\t\tlet hashkey = minchi.makeShortHashKey();\n\t\t\tchunk = hashkey + '\\n';\n\t\t}\n\t\telse if (this.outputFormat == TransformMixtureFormat.SVG)\n\t\t{\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite(20);\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMixture(new Mixture(mixfile), measure, policy);\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMixture(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\t\t\tlet svg = gfx.createSVG(false);\n\n\t\t\tchunk = svg + '\\n';\n\t\t}\n\n\t\tthis.roster.push({idx, chunk});\n\t\tthis.flushRoster();\n\t}\n\n\t// checks the output roster for content to write out: will only write chunks if they are consecutive with the last emitted index; this is so because the\n\t// async generation methods do not necessarily come in with the same order\n\tprivate flushRoster():void\n\t{\n\t\tif (this.roster.length > 1) this.roster.sort((r1, r2) => r1.idx - r2.idx);\n\n\t\twhile (this.roster.length > 0 && Vec.first(this.roster).idx == this.nextIndex)\n\t\t{\n\t\t\tlet {chunk} = this.roster.shift();\n\t\t\tif (chunk) this.outstream.write(chunk);\n\t\t\tthis.nextIndex++;\n\t\t}\n\t}\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2021 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {InChI} from '../data/InChI';\nimport {setOnDesktop} from '../startup';\nimport {RenderHTML} from './RenderHTML';\nimport {TableExtract} from './TableExtract';\nimport {ALL_TRANSFORMMIXTURE_FORMATS, TransformMixtures} from './TransformMixtures';\nimport {XML} from 'webmolkit/util/XML';\n\n/*\n\tConsole utilities, to be run from NodeJS with command line arguments.\n*/\n\nexport class Console\n{\n\tprivate inputFile:string = null;\n\tprivate inputFormat:string = null;\n\tprivate outputFile:string = null;\n\tprivate outputFormat:string = null;\n\tprivate tableFile:string = null;\n\tprivate lookupFile:string = null;\n\tprivate mappingFile:string = null;\n\tprivate htmlFile:string = null;\n\tprivate withMInChI = false;\n\tprivate justHelp = false;\n\tprivate verbose = false;\n\n\tconstructor(args:string[])\n\t{\n\t\tsetOnDesktop(true);\n\n\t\t// const {DOMParser, XMLSerializer} = require('xmldom/dom-parser.js');\n\t\t// XML.customParser = DOMParser;\n\t\t// XML.customSerial = XMLSerializer;\n\n\t\tfor (let n = 0; n < args.length; n++)\n\t\t{\n\t\t\tif (args[n] == '-i' && n + 1 < args.length) this.inputFile = args[++n];\n\t\t\telse if (args[n] == '-if' && n + 1 < args.length) this.inputFormat = args[++n];\n\t\t\telse if (args[n] == '-o' && n + 1 < args.length) this.outputFile = args[++n];\n\t\t\telse if (args[n] == '-of' && n + 1 < args.length) this.outputFormat = args[++n];\n\t\t\telse if (args[n] == '--table' && n + 1 < args.length) this.tableFile = args[++n];\n\t\t\telse if (args[n] == '--lookup' && n + 1 < args.length) this.lookupFile = args[++n];\n\t\t\telse if (args[n] == '--mapping' && n + 1 < args.length) this.mappingFile = args[++n];\n\t\t\telse if (args[n] == '--html' && n + 1 < args.length) this.htmlFile = args[++n];\n\t\t\telse if (args[n] == '--minchi') this.withMInChI = true;\n\t\t\telse if (args[n] == '--inchi' && n < args.length - 1) InChI.setExecutable(args[++n]);\n\t\t\telse if (args[n] == '-h' || args[n] == '-help' || args[n] == '--help') this.justHelp = true;\n\t\t\telse if (args[n] == '--verbose') this.verbose = true;\n\t\t}\n\t}\n\n\tpublic async run():Promise<void>\n\t{\n\t\tif (this.tableFile) await new TableExtract(this.tableFile, this.lookupFile, this.mappingFile, this.verbose).exec();\n\t\telse if (this.htmlFile) await new RenderHTML(this.htmlFile, this.withMInChI).exec();\n\t\telse if (this.inputFile || this.inputFormat || this.outputFile || this.outputFormat) await new TransformMixtures(this.inputFile, this.inputFormat, this.outputFile, this.outputFormat).exec();\n\t\telse if (this.justHelp) this.printHelp();\n\t\telse\n\t\t{\n\t\t\tthis.log('Nothing to do.');\n\t\t\tthis.printHelp();\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate printHelp():void\n\t{\n\t\tconsole.log('Mixtures console utilities. Arguments:');\n\t\tconsole.log('    -i {fn}          read input file (type guessed from suffix)');\n\t\tconsole.log('    -if {fmt}        specify/override type for input file');\n\t\tconsole.log('    -o {fn}          write output file (type guessed from suffix)');\n\t\tconsole.log('    -of {fmt}        specify/override type for output file');\n\t\tconsole.log('    --table {fn}     convert a tabular datafile to mixfile collection');\n\t\tconsole.log('    --lookup {fn}    (optional) lookup file for name-to-structure');\n\t\tconsole.log('    --mapping {fn}   (optional) JSON-formatted file for column mappings');\n\t\tconsole.log('    --html {fn}      render mixfile collection as an HTML table');\n\t\tconsole.log('    --minchi         (optional) include MInChI notation');\n\t\tconsole.log('    --inchi {fn}     (optional) specify InChI executable location');\n\t\tconsole.log('Mixture formats:');\n\t\tfor (let fmt of ALL_TRANSFORMMIXTURE_FORMATS) console.log('    ' + fmt);\n\t}\n\n\tprivate log(str:string):void\n\t{\n\t\tif (this.verbose) console.log(str);\n\t}\n}\n\n// if being run in NodeJS context, need to export the class\n// if (typeof module == 'object') module.exports['Console'] = Console;\n\n"],"names":["Object","defineProperty","exports","value","getElectronBinding","name","process","_linkedBinding","electronBinding","browserModuleNames","commonModuleNames","get_electron_binding_1","concat","features","isDesktopCapturerEnabled","push","isViewApiEnabled","deserialize","serialize","isSerializableObject","isPromise","electron_1","val","then","Function","constructor","reject","resolve","serializableTypes","Boolean","Number","String","Date","Error","RegExp","ArrayBuffer","isView","some","type","objectMap","source","mapper","targetEntries","entries","map","key","fromEntries","image","representations","scaleFactors","getScaleFactors","length","scaleFactor","size","getSize","buffer","toBitmap","dataURL","toDataURL","__ELECTRON_SERIALIZED_NativeImage__","serializeNativeImage","Array","isArray","nativeImage","createEmpty","width","height","addRepresentation","rep","deserializeNativeImage","CallbacksRegistry","this","nextId","callbacks","callbackIds","WeakMap","locationInfo","add","callback","id","get","set","regexp","stackString","stack","filenameAndLine","match","exec","location","includes","ref","getLocation","apply","args","global","remove","delete","__createBinding","create","o","m","k","k2","undefined","enumerable","__exportStar","p","prototype","hasOwnProperty","call","createFunctionWithReturnValue","getGlobal","getCurrentWebContents","getCurrentWindow","getBuiltin","callbacks_registry_1","type_utils_1","module_names_1","Promise","callbacksRegistry","remoteObjectCache","Map","finalizationRegistry","FinalizationRegistry","deref","ipcRenderer","send","contextId","electronIds","isReturnValue","WeakSet","v8Util","getHiddenValue","getContextId","on","IS_REMOTE_PROXY","Symbol","wrapArgs","visited","Set","valueToMeta","has","meta","Buffer","onFulfilled","onRejected","members","prop","setObjectMembers","object","metaId","member","descriptor","remoteMemberFunction","command","metaToValue","sendSync","descriptorFunction","proxyFunctionProperties","configurable","writable","setObjectPrototype","proto","setPrototypeOf","loaded","loadRemoteProperties","Proxy","target","property","bind","ownKeys","getOwnPropertyNames","getOwnPropertyDescriptor","from","byteOffset","byteLength","metaToError","ret","cached","getCachedRemoteObject","remoteFunction","wr","WeakRef","register","setCachedRemoteObject","obj","handleMessage","channel","handler","event","passedContextId","senderId","console","error","enableStacks","argv","getCurrentStack","captureStackTrace","require","module","returnValue","func","forEach","Readable","Writable","Duplex","Transform","none","for","finalSymbol","manySymbol","wrapFunction","fn","writableObjectMode","readableObjectMode","transform","chunk","encoding","result","Chain","sanitize","next","async","gen","stream","data","done","runAsyncGenerator","wrapArray","fns","i","isFinal","getFinalValue","isReadableNodeStream","pipe","_writableState","_readableState","readable","isWritableNodeStream","write","options","super","streams","filter","index","convertToTransform","s","input","output","reduce","_write","_1","_2","_final","end","pause","_read","resume","skipEvents","emit","e","make","isMany","getManyValues","final","many","values","chain","Constructor","EventEmitter","startObject","Ctr","current","Assembler","connectTo","reviver","stringValue","_saveValue","_saveValueWithReviver","numberAsString","numberValue","depth","path","dropToLevel","level","splice","consume","keyValue","parseFloat","nullValue","trueValue","falseValue","endObject","pop","startArray","endArray","Utf8Stream","patterns","value1","string","key1","colon","comma","ws","numberStart","numberDigit","numberFraction","numberExponent","numberExpSign","noSticky","keys","src","slice","numberFracStart","numberExpStart","numberFracDigit","numberExpDigit","true","false","null","expected","array","codes","b","f","n","r","t","Parser","assign","_packKeys","_packStrings","_packNumbers","_streamKeys","_streamStrings","_streamNumbers","packValues","packKeys","packStrings","packNumbers","streamValues","streamKeys","streamStrings","streamNumbers","_jsonStreaming","jsonStreaming","_done","_expect","_stack","_parent","_open_number","_accumulator","_flush","_processBuffer","main","lastIndex","_buffer","charAt","fromCharCode","parseInt","parser","StreamBase","withParser","StreamArray","_level","_counter","_wait","_","_transform","_filter","_push","discard","_assembler","streamArray","Counter","initialDepth","objectFilter","includeUndecided","_accept","_saved_assembler","_reject","StringDecoder","_transformString","_stringDecoder","_transformBuffer","toString","_flushInput","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","toStringTag","isBlank","arr","notBlank","safeArray","len","arrayLength","anyTrue","v","allTrue","anyFalse","allFalse","iterAnyTrue","iterAllTrue","iterAnyFalse","iterAllFalse","swap","idx1","idx2","duplicate","append","item","prepend","unshift","arr1","arr2","idx","flatten","mtx","vec","transpose","sz1","sz2","anyArray","j","equals","equivalent","len1","compareTo","sz","Math","max","booleanArray","fill","numberArray","stringArray","genericArray","genericBlankArrays","funcArray","first","last","min","MAX_VALUE","MIN_VALUE","idxMin","idxMax","range","lo","hi","reverse","identity0","identity1","identityN","start","notMask","mask","idxGet","maskCount","c","maskIdx","idxMask","maskMap","pos","maskGet","maskEqual","sum","sub","mul","neg","setTo","addTo","mulBy","addToArray","subFromArray","mulByArray","divByArray","idxSort","sort","a","v1","v2","sorted","sortedUnique","unique","uniqueUnstable","uniqueStable","maskUnique","idxUnique","exclude","excl","count","indexOf","Permutation","parityPerms","parityIdentity","parityOrder","smallPermutation","PERM1","PERM2","PERM3","PERM4","allPermutations","SMALL_PERMS","PERM_CACHE","MAX_CACHE","nperms","perms","nonunique","Matrix","A","fromArray","clone","numRows","numCols","X","C","norm1","abs","normInf","uminus","plus","B","plusEquals","minus","minusEquals","arrayTimes","arrayTimesEquals","arrayRightDivide","arrayRightDivideEquals","arrayLeftDivide","arrayLeftDivideEquals","scalarTimes","scalarTimesEquals","times","Bcolj","Arowi","rank","SingularValueDecomposition","cond","trace","identity","lines","row","JSON","stringify","join","nu","U","V","work","nct","nrt","hypot","pp","iter","eps","pow","tiny","kase","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","sqrt","g","getU","getV","getSingularValues","getS","S","norm2","tol","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","safeInt","str","def","startsWith","substring","isNaN","newElement","parent","tag","attr","domNew","domLegacy","el","formatDouble","sigfig","toPrecision","endsWith","colourCode","col","hex","colourAlpha","transp","ONE_OVER_255","colourCanvas","nodeText","node","firstChild","nodeType","nodeValue","nextSibling","container","offset","pageX","x","pageY","y","dom","w","h","css","norm_xy","dx","dy","norm2_xyz","dz","signum","sqr","invZ","fltEqual","realEqual","TWOPI","PI","INV_TWOPI","DEGRAD","RADDEG","th","ceil","angleDiff","th1","th2","theta","minArray","maxArray","findNode","nodeName","findNodes","list","pathRoundedRect","x1","y1","x2","y2","rad","Path2D","moveTo","quadraticCurveTo","lineTo","closePath","drawLine","ctx","beginPath","stroke","fontSansSerif","ascent","pixelDensity","window","devicePixelRatio","deepClone","escapeHTML","text","replace","KeyCode","readTextURL","url","request","XMLHttpRequest","open","responseType","onload","response","onerror","staticScrollerSize","EPSILON","Triangulation2D","px","py","numTriangles","edgeStack","hull","maxTriangles","triangles","halfedges","hashSize","hullPrev","hullNext","hullTri","hullHash","ids","dists","update","trimConcave","threshold","threshSq","tri","edge","uniqueEdges","edgeCount","ntri","c1","c2","c3","i1","i2","i3","repTri","repEdge","traceOutline","e1","e2","e3","edgePairs","entry","floor","isz","idxMap","g1","g2","sequence","minX","minY","maxX","maxY","centreX","centreY","i0","minDist","POSITIVE_INFINITY","i0x","i0y","i1x","i1y","minRadius","circumRadius","i2x","i2y","isFinite","quicksort","d0","NEGATIVE_INFINITY","orient","pickCircumCentre","hullStart","hullSize","hashKey","addTriangle","xp","yp","q","legalise","pseudoAngle","ar","a0","b0","al","bl","p0","pr","pl","p1","inCircle","hbl","link","br","orientIfSure","rx","ry","qx","qy","l","ax","ay","bx","by","cx","cy","ex","ey","fx","fy","bp","cp","cl","left","right","temp","tempDist","median","GeomUtil","pointInPolygon","phase","areLinesParallel","x3","y3","x4","y4","dxa","dya","dxb","dyb","xmajorA","EPS","lineIntersect","u","isPointOnLineSeg","pointLineDistance","pointLineSegDistance","doLineSegsIntersect","x4_x3","y4_y3","x2_x1","y2_y1","x1_x3","y1_y3","nx","ny","dn","rectsIntersect","w1","h1","w2","h2","sortAngles","idxSortAngles","uniqueAngles","ang","thetaObtuse","dth","emergentAngle","bottom","behind","delta","dotProduct","crossProduct","affineTranslate","affineMirror","xaxis","yaxis","affineScale","sx","sy","affineRotate","cos","sin","affineCompose","tfm","Acol","Brow","applyAffine","applyAffineArray","isAffineMirror","magnitude2","magnitude","dist2","dist","normalise","dsq","inv","normalised","acuteAngle","mag1","mag2","cosTheta","acos","arcControlPoints","t1x","t1y","t2x","t2y","tx","ty","D","createBezierEllipse","rw","rh","nseg","sinTheta","incrAlpha","alpha","cosAlpha","sinAlpha","npt","n1","n2","n3","n4","ctrl","fitCircle","fitEllipse","bestW","bestH","bestScore","shrinkToFit","whs","dmin","invW2","invH2","whsX","whsY","anything","superimpose","thetaA","atan2","rot00","rot01","rot10","rot11","acx","acy","invsz","bcx","bcy","mtxA","mtxB","cov","svd","rotate","convexHull","flatness","algo","QuickHull","hullX","hullY","outlinePolygon","diameter","del","concave","hsz","al1","al2","quickHull","furthestPoint","distance","ux","uy","maxDist","maxPos","Pos","zero","other","scaleBy","mag","offsetBy","withScaleBy","withOffsetBy","Size","isZero","fitInto","maxW","maxH","Box","fromBounds","fromSize","fromOval","oval","getPos","setPos","setSize","midX","midY","area","grow","withGrow","intersects","intersection","x5","y5","x6","y6","contains","union","isEmpty","notEmpty","Oval","fromBox","box","setCentre","setRadius","Line","fromPos","pos1","pos2","setPos1","setPos2","XML","parseXML","strXML","xmlDoc","customParser","parseFromString","DOMParser","doc","customSerial","serializeToString","documentElement","XMLSerializer","toPrettyString","xslt","xsltDoc","xsltProc","XSLTProcessor","importStylesheet","resultDoc","transformToDocument","child","childNodes","childText","tagName","findElement","appendElement","ownerDocument","createElement","appendChild","appendElementAfter","presib","postsib","parentNode","insertBefore","appendText","isCDATA","createCDATASection","createTextNode","createTextChild","textContent","setText","removeChild","findChildElements","childElements","DOM","parse","jquery","elHTML","elInput","elCanvas","xhtml","xml","html","outerHTML","template","document","innerHTML","content","find","selector","querySelector","findAll","nodeList","querySelectorAll","domList","parentElement","ancestor","closest","children","firstElementChild","nextElementSibling","toLocaleLowerCase","exists","isVisible","offsetWidth","offsetHeight","getClientRects","appendTo","prependTo","insertAfter","before","empty","getHTML","setHTML","appendHTML","insertAdjacentHTML","getText","getValue","setValue","getCSS","style","getPropertyValue","setCSS","setProperty","dict","getAttr","hasAttribute","getAttribute","setAttr","setAttribute","addClass","clsnames","cls","split","classList","removeClass","hasClass","clsname","setClass","flag","toggleClass","rect","getBoundingClientRect","win","defaultView","pageXOffset","top","pageYOffset","setBoundaryPixels","setSizePixels","hasFocus","activeElement","grabFocus","delay","setTimeout","focus","removeEvent","removeEventListener","onKeyDown","addEventListener","onKeyUp","onKeyPress","onScroll","onWheel","onClick","onContextMenu","onDblClick","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onChange","onInput","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","Theme","BASE_URL","RESOURCE_URL","foreground","background","lowlight","lowlightEdge1","lowlightEdge2","highlight","highlightEdge1","highlightEdge2","cssTagsInstalled","hasInlineCSS","head","globalTooltip","globalPopWatermark","addTooltip","bodyHTML","titleHTML","widget","tooltip","Tooltip","stop","clearTooltip","domTooltip","watermark","bodyCallback","raise","avoid","class","body","sanity","zindex","zIndex","div","hasTitle","hasBody","winW","innerWidth","winH","innerHeight","boundDiv","wx1","wy1","wx2","wy2","popW","popH","posX","posY","setPosition","checkParent","Widget","contentDOM","domContent","tagType","render","Mixture","mixfile","mixfileVersion","fromComponent","comp","isComponentEmpty","BITS","bit","contents","hasQuantity","quantity","ratio","recursiveEqual","deserialise","serialise","beautify","serialiseComponent","getComponent","origin","look","getParentComponent","getComponents","getOrigins","origins","nodeEnum","setComponent","modified","deleteComponent","prependBefore","subcomp","SKIP","splitOrigin","json","regex","regpad","padding","comp1","comp2","dict1","dict2","keys1","keys2","RenderPolicy","pointScale","resolutionDPI","fontSize","lineSize","bondSep","defaultPadding","atomCols","defaultBlackOnWhite","pixPerAng","policy","defaultWhiteOnBlack","defaultColourOnWhite","defaultColourOnBlack","defaultPrintedPublication","RenderEffects","colAtom","colBond","dottedRectOutline","dottedBondCross","hideAtoms","hideBonds","atomFrameDotSz","atomFrameCol","atomCircleSz","atomCircleCol","atomDecoText","atomDecoCol","atomDecoSize","bondDecoText","bondDecoCol","bondDecoSize","overlapAtoms","RenderMnemonicType","Graph","edge1","edge2","nbrs","indices","labels","props","nbr","fromMolecule","mol","numAtoms","numBonds","bfr","bondFrom","bto","bondTo","fromNeighbours","buff","numNodes","numEdges","getEdge","getEdges","getIndex","setIndex","getLabel","setLabel","lbl","getProperty","prp","addNode","hasEdge","node1","node2","addEdge","removeEdge","isolateNode","keepNodesMask","oldsz","newsz","newmap","newnbrs","keepNodesIndex","removeNodesMask","removeNodesIndex","subgraphIndex","nsz","subgraphMask","calculateComponents","cc","high","calculateComponentGroups","grp","calculateRingBlocks","rblk","plen","numVisited","back","nextID","calculateRingBlockGroups","cap","findRingsOfSize","num","rings","newRings","findRingsOfSizeMask","recursiveRingFind","calculateBFS","curnum","lsz","calculateGravity","wght","wmod","psize","capacity","adj","fnd","newPath","fp","flip","same","BONDARTIFACT_EXTRA_RESPATH","BONDARTIFACT_EXTRA_RESRING","BONDARTIFACT_EXTRA_ARENE","BondArtifact","resPaths","resRings","arenes","atomExtra","appendResPath","appendResRing","appendArene","blk","res","atoms","pack","pathify","centre","getPathBlocks","getRingBlocks","getAreneBlocks","getResPaths","getResRings","getArenes","rewriteMolecule","extra","setAtomExtra","ring","arene","atom","harmoniseNumbering","blocks","stashPaths","clear","nextIdentifier","stashRings","stashArenes","createPath","alreadyExists","atomsAsPath","createRing","atomsAsRing","createArene","atomsAsArene","removeArtifact","pick","overlap","removeAll","bits","requireRing","areneAtoms","best","bsum","bondOrder","findBond","inkeys","Chemistry","ELEMENTS","ELEMENT_GROUPS","ELEMENT_ROWS","ELEMENT_BLOCKS","ELEMENT_VALENCE","ELEMENT_BONDING","ELEMENT_SHELL","NATURAL_ATOMIC_WEIGHTS","ELEMENT_H","ELEMENT_He","ELEMENT_Li","ELEMENT_Be","ELEMENT_B","ELEMENT_C","ELEMENT_N","ELEMENT_O","ELEMENT_F","ELEMENT_Ne","ELEMENT_Na","ELEMENT_Mg","ELEMENT_Al","ELEMENT_Si","ELEMENT_P","ELEMENT_S","ELEMENT_Cl","ELEMENT_Ar","ELEMENT_K","ELEMENT_Ca","ELEMENT_Sc","ELEMENT_Ti","ELEMENT_V","ELEMENT_Cr","ELEMENT_Mn","ELEMENT_Fe","ELEMENT_Co","ELEMENT_Ni","ELEMENT_Cu","ELEMENT_Zn","ELEMENT_Ga","ELEMENT_Ge","ELEMENT_As","ELEMENT_Se","ELEMENT_Br","ELEMENT_Kr","ELEMENT_Rb","ELEMENT_Sr","ELEMENT_Y","ELEMENT_Zr","ELEMENT_Nb","ELEMENT_Mo","ELEMENT_Tc","ELEMENT_Ru","ELEMENT_Rh","ELEMENT_Pd","ELEMENT_Ag","ELEMENT_Cd","ELEMENT_In","ELEMENT_Sn","ELEMENT_Sb","ELEMENT_Te","ELEMENT_I","ELEMENT_Xe","ELEMENT_Cs","ELEMENT_Ba","ELEMENT_La","ELEMENT_Ce","ELEMENT_Pr","ELEMENT_Nd","ELEMENT_Pm","ELEMENT_Sm","ELEMENT_Eu","ELEMENT_Gd","ELEMENT_Tb","ELEMENT_Dy","ELEMENT_Ho","ELEMENT_Er","ELEMENT_Tm","ELEMENT_Yb","ELEMENT_Lu","ELEMENT_Hf","ELEMENT_Ta","ELEMENT_W","ELEMENT_Re","ELEMENT_Os","ELEMENT_Ir","ELEMENT_Pt","ELEMENT_Au","ELEMENT_Hg","ELEMENT_Tl","ELEMENT_Pb","ELEMENT_Bi","ELEMENT_Po","ELEMENT_At","ELEMENT_Rn","ELEMENT_Fr","ELEMENT_Ra","ELEMENT_Ac","ELEMENT_Th","ELEMENT_Pa","ELEMENT_U","ELEMENT_Np","ELEMENT_Pu","ELEMENT_Am","ELEMENT_Cm","ELEMENT_Bk","ELEMENT_Cf","ELEMENT_Es","ELEMENT_Fm","ELEMENT_Md","ELEMENT_No","ELEMENT_Lr","ELEMENT_Rf","ELEMENT_Db","ELEMENT_Sg","ELEMENT_Bh","ELEMENT_Hs","ELEMENT_Mt","ELEMENT_Ds","ELEMENT_Rg","ELEMENT_Cn","ResonanceRemover","resBonds","atomHyd","maxIter","bondOrders","tolerant","perform","atomHExplicit","correctInputMask","processComponent","na","nb","atno","atomicNumber","atomCharge","atomAdjCount","nodes","optionalH","Molecule","HEXPLICIT_UNKNOWN","atomElement","gravity","bsz","bgrav","bidx","seq","paths","resultCount","definiteMatch","p2","validPath","count1","count2","a1","a2","DataSheetColumn","ForeignMoleculeTransient","DataSheet","title","description","colData","rowData","numExtens","extData","withRows","inRow","outRow","cloneMask","colMask","rowMask","inclExtn","outCols","outRows","getData","numExtensions","getExtName","getExtType","getExtData","setExtName","setExtType","setExtData","appendExtension","insertExtension","deleteExtension","colName","colType","colDescr","descr","isNull","findColByName","notNull","ct","getMolecule","getString","getExtend","getObject","datum","fromString","getMoleculeClone","getMoleculeBlank","getInteger","getReal","getBoolean","setToNull","setObject","setMolecule","setString","setInteger","setReal","setBoolean","setExtend","isEqualMolecule","isEqualString","isEqualInteger","isEqualReal","isEqualBoolean","appendColumn","insertColumn","deleteColumn","changeColumnName","changeColumnType","newType","oldType","incompatible","toLowerCase","ensureColumn","reorderColumns","order","appendRow","appendRowFrom","srcDS","insertRow","deleteRow","deleteAllRows","moveRowUp","moveRowDown","swapRows","row1","row2","exciseSingleRow","newData","colIsPrimitive","firstColOfType","copyCell","toRow","toCol","fromDS","fromRow","fromCol","convertType","fromType","toType","ft","tt","safeFloat","round","toInt","toReal","ForeignMolecule","noteAromaticAtoms","atomTransient","AtomAromatic","noteAromaticBonds","bondTransient","BondAromatic","noteZeroDativeBonds","BondZeroDative","noteZeroHydrogenBonds","BondZeroHydrogen","markExplicitValence","valence","trans","tr","AtomExplicitValence","setAtomTransient","noteExplicitValence","markSgroupMultiAttach","keyval","idxHigh","AtomSgroupMultiAttach","payload","hasAnySgroupMultiAttach","noteAllSgroupMultiAttach","eq","sgm","markSgroupMultiRepeat","mult","AtomSgroupMultiRepeat","unit","hasAnySgroupMultiRepeat","noteAllSgroupMultiRepeat","mr","markSgroupData","query","_a","AtomSgroupData","hasAnySgroupData","noteAllSgroupData","sd","POLYMERBLOCK_EXTRA_POLYMER","PolymerBlockConnectivity","Geometry","QueryTypeAtom","QueryTypeBond","PolymerBlockUnit","connect","bondConn","atomName","bondIncl","bondExcl","dup","PolymerBlock","units","blockAtoms","appendBlock","getIDList","getUnit","getUnits","purgeExtraFields","writeUnit","allKeys","removeUnit","pfx","bondExtra","setBondExtra","createUnit","hasPolymerExtensions","getPolymerExtensions","polext","removePolymerExtensions","nattach","HeadToTail","HeadToHead","Random","hasOuter","atomAdjList","subBits","in1","in2","bonds","formatBlockAtom","nbonds","names","formatBlockBond","bond","idxConn","incl","codeAtom","codeBond","SketchUtil","placeNewAtom","boundary","IDEALBOND","addAtom","placeNewFragment","frag","dirX","dirY","score","mbox","fbox","vx","vy","fragPosScore","iscore","setAtomPos","atomX","atomY","ox","oy","rangeX","rangeY","mergeOverlappingAtoms","mergeFragmentsDiv","omask","CoordUtil","overlappingAtomMask","chopmask","mx","MolUtil","arrayAtomX","my","arrayAtomY","remap","div1","div2","OVERLAP_THRESHOLD_SQ","oldN","newN","exotic","atomUnpaired","atomIsotope","ISOTOPE_NATURAL","hasAbbrev","setBondFrom","setBondTo","deleteAtomAndBonds","removeDuplicateBonds","mergeFragmentsMask","setAtomHExplicit","setAtomUnpaired","setAtomCharge","matchAngleGeometry","geom","GEOM_ANGLES","mtheta","hit","gotall","got","primeDirections","angles","calculateNewBondAngles","exits","exitVectors","atomBondAngles","nn","guessAtomGeometry","mapAngleSubstituent","atblk","elrow","adjBO","adjAN","pri","allSingle","Linear","Octa1","Octa2","Trigonal","SqPlan","Tetra1","Tetra2","gtheta","asz","gsz","vac","gang","mcount","refitAtomGeometry","inRing","allInRing","bondInRing","bestAng","ww","calculateWalkWeight","newAng","bdiff","diff","ringClash","rotateBond","switchAtomGeometry","dst","geoms","bestAtom","bestX","bestY","curth","atomAtPoint","pickAtomsToConnect","aidx","AUTO_DSQ","bestDSQ","bestA1","bestA2","conn","pickNewAtomDirection","bestTheta","congestionPoint","overlapsAtom","joinOverlappingAtoms","groups","groupX","groupY","adjb","atomAdjBonds","keepmask","moveToEdge","gotS","gotN","sx1","sy1","sx2","sy2","nx1","ny1","nx2","ny2","SEPTEST","placeAdditionalHydrogens","numH","base","x0","y0","th3","th4","addBond","allViableDirections","bndang","proposeNewRing","rsz","snap","positionSimpleRing","proposeAtomRing","thsnap","angs","bestDelta","proposeBondRing","sign","brad","guidelineSprouts","sprouts","ords","sprout","orders","orBlank","hasAnyAbbrev","getAbbrev","setAbbrev","attidx","ABBREV_ATTACHMENT","swapAtoms","b1","b2","setBondOrder","validateAbbrevs","clearAbbrev","setAtomIsotope","convertToAbbrev","srcmask","abbrevName","molidx","convertToAbbrevIndex","junction","polymerExtra","fragidx","maskmol","maskfrag","bondType","BONDTYPE_NORMAL","nadj","setAtomElement","setAtomMapNum","newmol","newatom","expandAbbrevs","alignCoords","expandOneAbbrev","expandedAbbrevs","atomMapNum","expandOneAbbrevFrag","connBond","connType","BONDTYPE_INCLINED","BONDTYPE_DECLINED","vx1","vy1","vx2","vy2","rotateMolecule","translateMolecule","setBondType","setBondFromTo","deleteBond","invidx","keepTransient","setBondTransient","subgraphWithAttachments","xmask","xmol","boxm","boxf","deleteAtoms","componentList","getAtomSides","oldmap","ccmax","grps","getBondSides","bf","bt","arrayAtomMapNum","mapnum","molecularFormula","punctuation","puncEnter","puncExit","puncEnterSuper","puncExitSuper","countC","countH","elements","atomHydrogens","formula","molecularWeight","mw","iso","an","elementAtomicNumber","bpri","el1","el2","limit1","limit2","boB1A1","boB1A2","boB2A1","boB2A2","bad1","bad2","exotic1","exotic2","ccsz","wn","totalHydrogens","hc","stripHydrogens","force","boringHydrogen","HYVALENCE_EL","createHydrogens","position","atomVec3","is3D","atomZ","atomOxidationState","nonMetal","oxstate","bo","bondOther","chalco","oxidationStateText","absox","TEMPLATE_ATTACHMENT","QueryUtil","hasAnyQueryAtom","hasAnyQueryBond","hasQueryAtom","hasQueryBond","deleteQueryAtom","deleteQueryBond","deleteQueryAtomAll","xtra","deleteQueryBondAll","queryAtomString","queryAtomStringList","queryBondString","setQueryAtom","setQueryAtomList","setQueryBond","queryAtomCharges","parseIntegers","Charges","queryAtomAromatic","parseBoolean","Aromatic","queryAtomUnsaturated","Unsaturated","queryAtomElements","parseStrings","Elements","queryAtomElementsNot","ElementsNot","queryAtomRingSizes","RingSizes","queryAtomRingSizesNot","RingSizesNot","queryAtomRingBlock","RingBlock","queryAtomNumRings","NumRings","queryAtomRingBonds","RingBonds","queryAtomAdjacency","Adjacency","queryAtomBondSums","BondSums","queryAtomValences","Valences","queryAtomHydrogens","Hydrogens","queryAtomIsotope","Isotopes","queryAtomSubFrags","parseMolecules","SubFrags","queryAtomSubFragsNot","SubFragsNot","queryBondRingSizes","queryBondRingSizesNot","queryBondRingBlock","queryBondNumRings","queryBondOrders","Orders","setQueryAtomCharges","formatIntegers","setQueryAtomAromatic","formatBoolean","setQueryAtomUnsaturated","setQueryAtomElements","formatStrings","setQueryAtomElementsNot","setQueryAtomRingSizes","setQueryAtomRingSizesNot","setQueryAtomRingBlock","setQueryAtomNumRings","setQueryAtomRingBonds","setQueryAtomAdjacency","setQueryAtomBondSums","setQueryAtomValences","setQueryAtomHydrogens","setQueryAtomIsotope","setQueryAtomSubFrags","formatMolecules","setQueryAtomSubFragsNot","setQueryBondRingSizes","setQueryBondRingSizesNot","setQueryBondRingBlock","setQueryBondNumRings","setQueryBondOrders","strlist","intlist","mols","molstr","STEREOGROUP_EXTRA_RACEMIC","STEREOGROUP_EXTRA_RELATIVE","StereoGroup","hasStereoGroups","chiRac","chiRel","atomHasWedge","getRacemicGroups","getRelativeGroups","getRacemicAtoms","getRelativeAtoms","getRacemicGroupAtoms","getRelativeGroupAtoms","stash","createRacemic","createRelative","removeRacemic","removeRelative","hasWedge","BONDTYPE_UNKNOWN","MDLMOL_VALENCE","MDLMOLReader","strData","parseHeader","parseExtended","allowV3000","considerRescale","keepAromatic","keepParity","keepQuery","molName","overallStereoAbsolute","groupAttachAny","groupAttachAll","groupStereoAbsolute","groupStereoRacemic","groupStereoRelative","groupLinkNodes","groupMixtures","scsrTemplates","parseCTAB","nextLine","line","version","parseV3000","trim","z","chg","stereo","hyd","setAtomZ","setIs3D","AtomChiralMDLOdd","AtomChiralMDLEven","AtomChiralMDLRacemic","appendBondTransient","superatoms","mixtures","anum","stype","bracketType","mix","sup","connectType","minRep","maxRep","nbr1","nbr2","logic","countRingBonds","countSubstitutions","postFix","artifacts","applyPolymerBlock","applySuperAtom","AtomSCSRClass","hcount","usedValence","unp","normaliseBondDistances","derez","Section","inCTAB","inTemplate","section","lineCounts","lineAtom","lineBond","lineColl","lineSgroup","asdrawnRBC","asdrawnSUB","templateBlocks","ERRPFX","fullLine","Atom","Bond","Coll","SGroup","splitWithQuotes","counts","atomBits","bondBits","parseQueryAtomList","spin","appendAtomTransient","AtomSCSRSeqID","attch","unpackStrings","AtomSCSRAttchOrd","rbc","endpts","attach","dir","unpackList","stereoGroup","withoutQuotes","templateClass","natReplace","pts","attachPoints","parseV3000Template","label","not","residual","mod","abvAtom","subsumed","poly","b3","b4","header","mdl","segments","seg","quote","ch","MDLSDFReader","ds","upcastColumns","parseStream","upcastStringColumns","rn","str1","str3","cn","allnull","allreal","allint","allbool","lc","int","VPFX","MDLMOLWriter","includeHeader","includeCounts","includeEnd","enhancedFields","chargeSeparate","abbrevSgroups","polymerBlocks","sgroups","writeCTAB","writeV3000","writeCTAB3000","writeEither","triggered","getResult","partialAbbrevExpansion","prepareSgroups","atomList1","atomList2","intrpad","pad","chgidx","chgval","radidx","radval","isoidx","isoval","rgpidx","rgpval","hydidx","hydval","zboidx","zboval","rbcidx","rbcval","subidx","subval","unsidx","unsval","rpad","toFixed","qhyd","mdlValence","qrbc","qsub","quns","maskArom","qbond","writeMBlockPair","writeMBlockFlat","inSgroup","sg","sidx","encodePolymerBlocks","token","writeMBlockFlatIdxFirst","zeroVal","marked","chgmod","bondSum","nativeVal","ma","dat","bestIdx","bestSize","MAX_SAFE_INTEGER","skip","polymers","fl1","fl2","bcrs","sgroupText","populateV3000Sgroups","qel","isotope","packV3000Strings","maskHBond","collections","racidx","relidx","packV3000List","populateSCSRTemplates","sid","txt","defn","tmdl","molfile","trimEnd","MDLSDFWriter","colMol","wtr","MoleculeStream","readUnknown","jsonStr","readNative","readMDLMOL","hdr","skUnescape","frto","writeNative","charge","unpaired","hy","skEscape","skEncodeExtra","writeMDLMOL","code","charCodeAt","toUpperCase","hasZCoord","hasTransient","graph","graphBond","ringID","compID","ring3","ring4","ring5","ring6","ring7","trashTransient","getAtom","element","hExplicit","mapNum","transient","getBond","to","bondFromTo","trashGraph","setAtomX","setAtomY","transi","HYVALENCE_VAL","adjBonds","atomExplicit","atomRingBlock","buildGraph","buildRingID","r1","r2","atomConnComp","buildConnComp","tx1","tx2","appendAtomExtra","appendBondExtra","PREFIX_EXTRA","PREFIX_TRANSIENT","tolerance","OVERLAP_THRESHOLD","tolsq","sketchEquivalent","mol1","mol2","DEFAULT_EQUIV_TOLERANCE","box1","box2","mx1","my1","mx2","my2","bestdsq","j1","j2","sketchMappable","thresh","threshSQ","d1","overlappingAtomList","approach","congestionMolecule","rotateAtoms","angleNeighbours","mergeAtoms","centreMolecule","meanX","meanY","deltaX","deltaY","mirrorImage","alignOrientFlip","deltaA","deltaB","dthA","dthB","scoreA","scoreB","atomIsWeirdLinear","FitRotatedEllipse","margin","calculate","lookupCache","setupParameters","currentScore","calculateScore","coarseDiscovery","fineImprovement","saveCache","getSpline","cacheMap","cacheVal","psz","invpsz","ptheta","pdist","buffX","buffY","rotatedScore","rtheta","scx","scy","devx","devy","deltaD","deltaR","DELTA_OPTIONS","dw","dh","bestCX","bestCY","bestRW","bestRH","newCX","newCY","newRW","newRH","newScore","REDUCTION","reduc","dCX","dCY","dRW","dRH","closestDSQ","eth","ii","proxSum","FontData","UNITS_PER_EM","INV_UNITS_PER_EM","PANOSE_1","ASCENT","DESCENT","MISSING_HORZ","MISSING_DATA","ASCENT_FUDGE","UNICODE","HORIZ_ADV_X","GLYPH_DATA","OUTLINE_X","OUTLINE_Y","KERN_C1","KERN_C2","KERN_K","pathCache","pathMissing","ctxReference","getKerning","ch1","ch2","measureText","font","measureWidths","xpos","getRawGlyph","getGlyphPath","getMissingPath","getOutlineX","getOutlineY","initNativeFont","canvas","OffscreenCanvas","getContext","measureTextNative","family","opt","save","bold","italic","metrics","restore","FUDGE","BLineType","ArrangeMolecule","guestimateSize","FONT_CORRECT","numsym","plusH","aw","ah","measure","effects","points","space","wantArtifacts","artifactCharge","artifactUnpaired","artifactFract","getMeasure","getPolicy","getEffects","getScale","setWantArtifacts","want","getArtifacts","setArtifacts","arrange","bondSepPix","lineSizePix","fontSizePix","ymul","yIsUp","artmask","setupBondOrders","fsz","angToX","angToY","overCol","wad","PADDING","computeSpacePoint","processLabel","bdbl","xy1","shrinkBond","backOffAtom","xy2","ensureMinimumBondLength","qbonds","qtxt","oxy","orthogonalDelta","lx1","ly1","lx2","ly2","bnum","Dotted","computeSpaceLine","rotation","ltype","Normal","Inclined","Declined","Unknown","DotDir","IncDouble","IncTriple","IncQuadruple","invD","ext1","ext2","orderedRingList","processDoubleBond","priorityDoubleSubstit","placeHydrogen","isostr","placeAdjunct","annotateAtom","annotateBond","spc","createCurvedPath","delocalisedAnnotation","createCircularRing","isRing","alkeneLike","createBondCentroid","processPolymerUnit","numPoints","getPoint","getPoints","numLines","getLine","getLines","numRings","getRing","getRings","numPaths","getPath","getPaths","numSpace","getSpace","getSpaces","offsetEverything","offsetOrigin","bounds","determineBoundary","scaleEverything","determineBoundaryBox","squeezeInto","bw","bh","downScale","limitBounds","monochromate","spatialCongestion","congest","delocalise","fractional","angdir","zeroBonds","zpt","ext","bestDX","bestDY","angThresh","shorted","DELTA","dang","viol","countPolyViolations","shortCircuit","ibar","ibrace","side","chunks","primary","refchunk","bpos","isPrimary","chunkw","tw","bump","xbump","ybump","active","xy","backOffAtomDelta","d12","d2","invD12","SIZE_ORDER","nring","ringsz","ringbusy","ringscore","ringorder","resbcount","maxbcount","sc","priority","nfr","nto","btheta","countFLeft","countFRight","countTLeft","countTRight","idxFLeft","idxFRight","idxTLeft","idxTRight","noshift","ispri","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","bumpAtomPosition","delta1","delta2","delta3","delta4","adjustBondPosition","lt","fussy","SSFRACT","GLYPH_H","emscale","outlineX","outlineY","firstEMW","emw","chp","extraX","extraY","qh","emdx","emdy","srcWAD","RIGHTLEFT","LEFTRIGHT","UPDOWN","DOWNUP","quad","LEFTIES","allLeft","allRight","allUp","allDown","magPX","magPY","bestExt","anyNoClash","subFsz","nglyphs","norm","spaceSubset","subset","hits","nspc","sr","ssz","alt","nf","nt","sumFrom","sumTo","ta","otherTheta","minExt","stepsz","angsz","limX","limY","subSpace","oth","bth","boxOverlaps","pointmask","linemask","resolveLineCrossings","bondHigher","bondLower","pt","isRegular","regDist","NaN","FRACT","pb","mdist","fit","extAtom","symbol","EXT","capA","ncross1","ncross2","fr1","fr2","capB","score1","score2","splineInterpolate","qx1","qy1","qx2","qy2","allUnits","processPolymerUnitPair","brackets","bracket","shared","nestings","u1","u2","nestOrder","nestCount","tagidx","isLinear","isOuter","theta1","theta2","ym","bsz1","bsz2","BASE_LINE","BASE_TEXT","fract","invDist","px2","py2","px3","py3","px1","py1","px4","py4","line1","line2","line3","xx","yy","pt1","pt2","ypos","dsq1","drawText","xmin","ymin","idxN","idxD2","idxD1","globalInstance","ONTOLOGY_FILES","OntologyTree","roots","mapTerms","alreadyLoaded","init","loadFromURL","getRoots","hasTerm","uri","getBranch","getBranchList","root","accumulate","branch","loadContent","termList","term","debugString","repeat","SquarePackingSpring","ArrangeMixtureLineSource","TextAlign","PrimClass","ButtonViewPosition","DotPathBond","DotPathCharge","SquarePacking","packSize","boxes","hspace","vspace","layout","wantRatio","candidates","cand","idxStart","springs","Weak","hash","processCandidate","hashes","batch","Strong","Medium","outline","placed","placeAbove","spring","segs","newsegs","mergeSegmentAbove","placeBelow","mergeSegmentBelow","hiX","loY","hiY","merge","seg1","seg2","ArrangeMixture","mixture","components","minBoxSize","showCollapsors","collapsedBranches","packBranches","includeIdentifiers","nameFontSize","limitStructW","limitStructH","hardwrapName","softwrapName","createComponents","layoutSubComponents","contractComponents","molLayout","molBox","scaleComponents","modScale","nameBox","collapseBox","findComponent","formatQuantity","mixcomp","prec","relation","rel","formatNormQuantity","note","findNote","concQuantity","concError","concUnits","concRelation","examineBranch","parentIdx","isCollapsed","subOrigin","nameLines","wrapSplitName","Name","qline","Quantity","identifiers","truncateEllipsis","Identifier","metadata","metaString","Meta","minsz","gap","wh","wholeBranch","branchBlock","branchBox","totalWidth","totalHeight","bound","cbox","sq","allChildren","pidx","boundX","idxInside","idxOutside","ellw","keep","DataSheetStream","readXML","summary","extRoot","extList","colList","rowidx","colidx","readJSON","writeXML","extension","column","cell","txtNode","writeJSON","nrow","ncol","doConvert","SpoolSVG","prettyPrint","spool","whole","inc","dec","MetaVector","types","prims","offsetX","offsetY","density","charMissing","lowX","lowY","highX","highY","charMask","primClass","Text","colour","thickness","typeidx","findOrCreateType","updateBounds","drawRect","edgeCol","fillCol","NOCOLOUR","Rect","drawOval","drawPath","xpoints","ypoints","ctrlFlags","isClosed","hardEdge","Path","closed","drawPoly","align","direction","Left","Baseline","Right","Middle","Top","Bottom","mscale","rx1","ry1","rx2","ry2","drawTextNative","fontFamily","TextNative","boundLowX","boundLowY","boundHighX","boundHighY","getBounds","transformPrimitives","transformIntoBox","nw","nh","scaleExtent","maxWidth","maxHeight","sw","sh","swsh","renderInto","renderCanvas","clearFirst","clearRect","renderContext","typeObj","setupTypeLine","setupTypeRect","setupTypeOval","setupTypePath","setupTypeText","setupTypeTextNative","renderLine","renderRect","renderOval","renderPath","renderText","renderTextNative","createSVG","withXlink","svg","renderSVG","svgLine1","svgLineN","svgRect1","svgRectN","svgOval1","svgOvalN","svgPath","svgText","svgTextNative","into","strokeStyle","lineWidth","lineCap","fillStyle","fillRect","strokeRect","ellipse","layer","bezierCurveTo","lineJoin","translate","fillText","defineSVGStroke","defineSVGFill","rects","ovals","shape","typeDef","every","DrawMolecule","vg","mnemonics","invScale","getMetaVector","getLayout","draw","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","drawUnderEffects","drawFusedWedge","Artifact","drawBondInclined","drawBondDeclined","drawBondUnknown","drawBondDotted","drawBondIncMulti","fg","bez","Centre","drawOverEffects","wdots","hdots","wspc","hspc","Effect","xdots","ydots","invX","invY","bcount","ixy1","ixy2","dx1","dy1","inv1","dx2","dy2","other1","other2","dth1","diff1","dth2","diff2","diff3","terminalPoints","ty1","ty2","outerX","outerY","innerX","innerY","nsteps","invSteps","holdout","ix","iy","radius","nudge","ButtonView","parentX","parentY","parentWidth","parentHeight","idealSize","selectedButton","highlightButton","maxButtonColumns","maxButtonRows","border","buttonColNorm1","buttonColNorm2","buttonColActv1","buttonColActv2","buttonColSel1","buttonColSel2","display","hasBigButtons","prefabImgSize","gripHeight","gripWidth","isRaised","outPadding","inPadding","isMacLike","navigator","platform","setParentSize","applyOffset","redraw","topBank","stackSize","layoutButtons","canvasStyle","mouseClick","mouseDoubleClick","preventDefault","mouseDown","mouseUp","mouseOver","mouseOut","mouseMove","pushBank","bank","buttonView","isSubLevel","replaceCanvas","popBank","bankClosed","refreshBank","getSelectedButton","setSelectedButton","cycleSelected","raiseBank","lowerBank","getHasBigButtons","setHasBigButtons","withinOutline","gw","hg","gh","gripSize","sizeForButtons","nbtn","removeDisplayButtons","addGripButton","buttons","popWidth","popHeight","bestLayout","maxSlotHeight","minSlotHeight","slotWidth","layoutMaxHeight","scoreLayout","maxSlotWidth","minSlotWidth","layoutMaxWidth","ncols","nrows","imgDOM","helpSpan","buttonFromID","col1","col2","grad","createLinearGradient","addColorStop","helpText","mnemonic","keyText","imageFN","metavec","isSubMenu","path1","path2","inset","delayedRedraw","displayFromID","uw","uh","slot","slotHeight","slots","pickButtonIndex","pickButtonID","triggerButton","hitButton","stopImmediatePropagation","stopPropagation","ButtonBank","claimKey","matchKey","mshift","mctrl","malt","mmeta","mkey","shiftKey","ctrlKey","altKey","metaKey","DotPath","maskBlock","getBondOrders","numer","denom","getBondClasses","classes","bcls","getChargeClasses","ccls","getAggregateCharges","total","nonsingle","pibonded","metalbonded","bondsum","blk1","blk2","impliedPi","adjpi","maskMaybe","COULD_BLOCK","ACIDS","BASES","hasMetal","amask","totalHave","totalWant","others","electrons","Stereochemistry","chiralTetra","STEREO_NONE","cistransBond","squarePlanar","isH","buildPriority","buildTetraChirality","buildBondCisTrans","buildPlanarCisTrans","buildOctaChirality","atomPriority","atomTetraChirality","bondSideStereo","atomPlanarStereo","getPriorities","getAtomTetraChiral","getBondSideStereo","rubricTetrahedral","numShort","numWedges","th0","one","two","zz","rubricSquarePlanar","ninc","ndec","v0","v3","v4","d3","d4","MIN_ANGLE","MAX_ANGLE","th12","th23","th34","th41","rubricBipyrimidal","atom2","atom3","atom4","atom5","ANGLE_OPPOSITE","v5","atom1","v45","cross","rubricOctahedral","bestOpposite","axial","bestOrthogonal","bestOrient","rubric","rubricBondSides","adj1","adj2","f1","f2","t1","t2","vfr","vto","vbond","vf1","vt1","THRESHSQ","xf1","xt1","xf1N","keepF1T1","keepF2T1","keepF1T2","keepF2T2","vf2","vt2","xf2","xt2","xf2N","haswedge","skip_atom","STEREO_UNKNOWN","parity","STEREO_NEG","STEREO_POS","ringMask","skip_bond","isBondAromatic","pf1","pf2","cipgr","anyActualH","prigr","cip","sortAndGroup","nextpri","repartitioned","cmp","uset","STEREO_BROKEN","RUBRIC_EQUIV_TETRA","RUBRIC_EQUIV_SIDES","RUBRIC_EQUIV_SQUARE","RUBRIC_EQUIV_BIPY","RUBRIC_EQUIV_OCTA","MetaMolecule","atomArom","bondArom","rubricTetra","rubricSquare","rubricBipy","rubricOcta","rubricSides","heavyHash","uniqueElements","dots","piAtom","calculateStrictAromaticity","nr","ensurePiAtoms","anyChange","phase1","phase2","calculateRelaxedAromaticity","exocyclic","rblk1","rblk2","rng","valid","arom","calculateStereoRubric","adjc","adjc1","hc1","adjc2","hc2","removeHydrogens","atomMask","bondMask","atomMap","calculateSkeletonHash","skeletonHash","calculateHeavyHash","anyH","getSkeletonHash","hvy","isAtomAromatic","bondOrderArom","getAtomAromaticity","getBondAromaticity","getHeavyHash","getDotPath","getUniqueElements","equivalentTo","timeout","isomorphMatch","uniq1","uniq2","createRubric","createStrict","createStrictRubric","createRelaxed","createRelaxedRubric","crc_table","BOOT_CRC","start_crc","feed_crc","crc","byte","end_crc","CircularFingerprints","kind","hookApplyNewFP","hookConsiderNewFP","resolvedChiral","atomGroup","fplist","atomAdj","bondAdj","make_crc_table","initialIdentityECFP","applyNewFP","hashCode","iteration","centralAtom","niter","newident","circularIterate","growAtoms","considerNewFP","circ","numFP","getFP","getFingerprints","getUniqueHashes","getFoldedHashes","maxBits","andBits","tanimoto","hash1","hash2","nheavy","nhydr","degree","inring","ru","par","newFP","lookFP","CLASS_ECFP0","CLASS_ECFP2","CLASS_ECFP4","CLASS_ECFP6","TEMPLATE_FILES","AbbrevContainer","abbrevs","needsSetup","setupData","tfn","dsstr","colAbbrev","attcount","firstConn","submitAbbreviation","getAbbrevs","infrag","promote","submitFragment","submitMolecule","inmol","substituteAbbrevName","fragExp","fragMF","fragFP","abbrev","afragExp","afragFP","search","formatAbbrevLabel","abv","nameHTML","nameSearch","pre","mid","post","MetalLigate","metalAtom","ligandAttach","ligands","generate","lig","anyAttached","makeLigandBond","otherLigands","avgTheta","orientLigand","l1","l2","arrangeLigandsFree","arrangeLigandsRange","otherOrder","extent","resolveClashes","ligAtom","mchg","lchg","idxAttach","lx","ly","molExtent","weight","bestLX","bestLY","attTheta","attDist","attDX","attDY","orderAttach","srcX","srcY","dstX","dstY","dtheta","refTheta","refSpan","bounded","thetaMin","thetaSpan","ligandSpan","determineThetaBounds","rotTheta","bestMin","bestMax","ablk","bblk","bumpDX","bumpDY","CLOSE_SQ","tainted","outer","FusionPermutation","attdist","guided","bridged","scoreModifier","chainSelect","TemplateFusion","templ","numAttach","withGuideOnly","guidetempl","guideidx","guideadj","timeLimit","artif1","artif2","poly1","poly2","huntForGuides","permuteNone","oldmol","oldbox","newbox","ROTN","rotmol","srcidx","sourceIndex","permuteAtom","timeStart","getTime","newperms","fliptempl","composeGuidedOne","flipmol","composeDirectOne","composeBridge","affixRawPermutations","permuteBond","composeGuidedTwo","composeDirectTwo","permuteMulti","composeGuidedMulti","composeDirectMulti","o1","otheta","ntheta","ocurrent","ncurrent","scoreMod","bfs","pmol","osz","asMask","temidx","removeExtraGuides","o2","nth","oidx","orad","nidx","nrad","lowbfs","busy1","busy2","att","gidx","gx","gy","homoPenalty","oel","nel","RESERVED_GUIDESYMBOL","sel","padj","snapToGuide","isGuideOnTerminal","nudgenew","cx1","cy1","cx2","cy2","midx","tidx","gatom","closeDSQ","npsz","umask","numKeep","scorePermutation","uscore","uidx","perm","tmol","tunion","contained","ai","aj","bo1","bo2","wantTheta","totalBO","mmask","tfr","tto","tn","wmol","imask","ActivityType","MoleculeActivity","activity","param","owner","toClipboard","currentAtom","currentBond","selectedMask","subjectMask","subjectLength","subjectIndex","hasSelected","setOwner","evaluate","execute","Delete","execDelete","Clear","execClear","Copy","execCopy","Cut","SelectAll","execSelectAll","SelectNone","SelectPrevComp","execSelectComp","SelectNextComp","SelectSide","execSelectSide","SelectGrow","execSelectGrow","SelectShrink","execSelectShrink","SelectChain","execSelectChain","SelectSmRing","execSelectSmRing","SelectRingBlk","execSelectRingBlk","SelectCurElement","execSelectCurElement","SelectToggle","execSelectToggle","SelectUnCurrent","execSelectUnCurrent","Element","execElement","positionX","positionY","keepAbbrev","Charge","execCharge","Connect","execConnect","Disconnect","execDisconnect","execMetalLigate","BondOrder","execBond","BondType","BondGeom","execBondGeom","BondAtom","execBondAtom","BondSwitch","execBondSwitch","BondRotate","execBondRotate","BondAddTwo","execBondAddTwo","BondInsert","execBondInsert","Join","execJoin","Nudge","execNudge","NudgeLots","NudgeFar","execNudgeFar","Flip","execFlip","axis","Scale","execScale","Rotate","execRotate","BondDist","execBondDist","AlignAngle","execAlignAngle","angle","AlignRegular","execAlignRegular","AdjustTorsion","execAdjustTorsion","Move","execMove","refAtom","Ring","execRing","ringX","ringY","aromatic","execTemplateFusion","fragNative","setPermutations","permutations","AbbrevTempl","execAbbrevTempl","AbbrevGroup","execAbbrevGroup","AbbrevFormula","execAbbrevFormula","AbbrevClear","execAbbrevClear","AbbrevExpand","execAbbrevExpand","BondArtifactPath","BondArtifactRing","BondArtifactArene","BondArtifactClear","execBondArtifact","execPolymerBlock","AddHydrogens","execAddHydrogens","RemoveHydrogens","execRemoveHydrogens","QueryClear","execQueryClear","QueryCopy","execQueryCopy","QueryPaste","execQueryPaste","QuerySetAtom","execQuerySetAtom","QuerySetBond","execQuerySetBond","QueryBondAny","execQueryBondAny","SproutDirection","execSproutDirection","finish","setState","errmsg","showMessage","requireSubject","zapSubject","withCut","performCopy","all","cclist","pickSelectedGroup","requireCurrent","sides","requireSelected","any","maxRB","gotRB","rb","applyQuery","NON_METALS","TRANSITION_METALS","MAIN_GROUPS","zap","killmask","ligAtoms","performBondNew","ccmol","oneComp","performBondChange","performBondGeomAtom","performBondGeomBond","altmol","ac1","ac2","mobileSide","baseAng","ang1","ang2","alink","fragmask","fusion","isVertical","invSz","connAtoms","curDist","sel1","isSelected","sel2","a3","group1","group3","subj","outmol","pi","checkAbbreviationReady","fixed","requireAtoms","artif","subject","curAtom","removePolymerBlock","performPolymerBlock","selmask","qmol","qterms","aterms","bterms","angleOptions","newAtom","bscore","switchType","stereoType","newang","subjmask","disqualTerminal","side1","side2","weight1","weight2","polymer","ELEMENTS_NOBLE","ELEMENTS_S_BLOCK","ELEMENTS_P_BLOCK","ELEMENTS_D_BLOCK","ELEMENTS_F_BLOCK","ELEMENTS_ABBREV","CommandType","COMMANDS_MAIN","COMMANDS_ATOM","COMMANDS_BOND","COMMANDS_SELECT","COMMANDS_MOVE","CommandBank","cmdType","Main","btn","Select","Abbrev","populateElements","SBlock","PBlock","DBlock","FBlock","Noble","actv","canUndo","performUndo","canRedo","performRedo","performPaste","autoScale","zoom","alert","getState","listItems","ContextSketch","state","sketcher","proxyClip","populate","menu","accelerator","click","editCurrent","maybeAppend","canAlwaysGet","rotateSub","rotateSubMenu","subMenu","querySub","querySubMenu","activ","molact","DraggingTool","DrawCanvasDecoration","GeomWidgetType","GeomWidgetSelType","DrawCanvas","viewOpt","decoration","showOxState","showQuery","showArtifacts","borderRadius","canvasUnder","canvasMolecule","canvasOver","divMessage","guidelines","filthy","dragType","None","hoverAtom","hoverBond","opAtom","opBond","opBudged","opShift","opCtrl","opAlt","lassoX","lassoY","lassoMask","clickX","clickY","mouseX","mouseY","dragGuides","templatePerms","currentPerm","fusionBank","cursorWatermark","cursorDX","cursorDY","toolAtomSymbol","toolBondOrder","toolBondType","toolChargeDelta","toolRingArom","toolRingFreeform","toolRotateIncr","redrawCacheKey","abbrevPolicy","divInfo","getSelected","getLassoed","xToAng","yToAng","scaleToAng","angToScale","layoutMolecule","sketchEffects","redrawMetaVector","abbrevMol","orientAbbreviation","redrawInfo","redrawUnder","redrawMolecule","redrawOver","cacheKey","divText","HOVER_COL","CURRENT_COL","CURRENT_BORD","SELECT_COL","LASSO_COL","drawPolymerUnit","drawAtomShade","drawBondShade","sfr","sto","lfr","lto","lw","sourceX","sourceY","destX","destY","determineFauxRing","Lasso","Erasor","erasing","determineDragTheta","subjectAtoms","determineMoveDelta","drawOriginatingBond","drawQueryFeatures","allIfNone","useOpAtom","updateLasso","calculateLassoMask","borderCol","anghalo","minRad","invNB","CIRC","snapTo","snapAtom","fh","annots","ap","annot","NPT","THPT","extBonds","inAtoms","outAtoms","flag1","flag2","npWidth","npHeight","selfLinks","innerLinks","outerLinks","isCapped","isExt","anames","pair","setLineDash","pickObject","APPROACH","pickObjectCanvas","limitDist","bestItem","noAtoms","noBonds","chi","MappingNumber","AtomIndex","abbrevAtom","Dialog","minPortionWidth","maxPortionWidth","maximumWidth","maximumHeight","minPortionHeight","maxPortionHeight","topMargin","allowScroller","callbackClose","callbackShown","onClose","onShown","bg","domObscureBackground","close","domObscureForeground","domPanelBoundary","divOuter","tdiv","domTitle","bdiv","domBody","ttlTable","tdTitle","tdButtons","domTitleButtons","domClose","repositionSize","bodyDOM","buttonsDOM","docW","dlgW","OutlineMeasurement","ClipboardProxyHandler","copyEvent","andCut","proxy","pasteEvent","ClipboardProxy","handlers","pushHandler","popHandler","currentHandler","triggerCopy","execCommand","triggerPaste","setImage","blob","canSetHTML","downloadString","OptionList","htmlLabels","selidx","buttonDiv","auxCell","callbackSelect","composeCSS","getSelectedIndex","getSelectedValue","getAuxiliaryCell","onSelect","table","td","clickButton","updateButtons","setSelectedIndex","setSelectedValue","TabBar","unionHeight","panelDiv","getPanelDOM","idxOrName","grid","columns","underline","panel","rotateSelected","ExtraFieldsWidget","fields","divFields","fillTable","divButtons","getExtraFields","field","getTransientFields","strType","strValue","tdType","tdValue","tdButton","GeomWidget","linkA","linkB","torsA","torsB","hovered","atomSubset","selected","Position","Link","divDiagram","selectionAtoms","Torsion","ANG_RAD","loX","posRad","gfx","outerSel","innerSel","showsel","pf","ox1","oy1","ox2","oy2","thetaM","oxM","oyM","ax3","ay3","ax4","ay4","which","whichSelection","sameSelection","maxRad","closeSel","closeDelta","midtheta","POSITION_TABLE_Y","POSITION_TABLE_X","PeriodicTableWidget","divList","selectedAtno","changeElement","callbackDoubleClick","onDoubleClick","updateSelected","setSelectedElements","elementList","QueryFieldsWidget","makeInput","makeToggleInput","chk","inputCharges","optAromatic","optUnsaturated","chkNotElements","inputElements","chkNotRingSizes","inputRingSizes","optRingBlock","inputNumRings","inputRingBonds","inputAdjacency","inputBondSums","inputValences","inputHydrogens","inputIsotopes","setupAtom","inputOrders","setupBond","updateAtom","splitNumbers","unsat","elem","splitStrings","checked","ringblk","updateBond","elemNot","ringszNot","EditAtom","callbackApply","newX","newY","tabs","abbrevList","svgAbbrev","abbrevIndices","currentAbbrev","initMol","btnApply","applyChanges","selectedTab","populateAtom","populateAbbreviation","populateGeometry","populateQuery","populateExtra","focusable","updateMolecule","selTab","updateAbbrev","updateGeometry","updateQuery","updateExtra","inputSymbol","periodicWidget","inputCharge","inputUnpaired","optionHydrogen","inputHydrogen","disabled","optionIsotope","inputIsotope","inputMapping","inputIndex","divPeriodic","divFlex","spanSearch","spanList","inputAbbrevSearch","lastSearch","cycleAbbreviation","fillAbbreviations","selectAbbreviation","tableAbbrev","divContainer1","divContainer2","geomWidget","label1","inputGeom1","label2","inputGeom2","refGeom1","refGeom2","queryWidget","fieldsWidget","sym","hcidx","strval1","strval2","instate","mf","abbrevEntries","bgcol","tdLabel","tdStruct","scrollIntoView","EditBond","populateBond","ordersHTML","optionOrder","optionStereo","inputFrom","readOnly","inputTo","CHAR_LOW_A","CHAR_UP_A","indexToAtomLabel","indexToBondLabel","EditPolymer","optionConnect","optionBondConn","currentID","borderAtoms","outBonds","umol","umap","btnRemove","applyRemove","inputNAtoms","inputNBond","populate2x2Conn","getList","domLabel","nvals","inputIncl","inputExcl","ivals","evals","populateUncap","divPreview","renderUnit","keyCode","bondConnOptions","optionList","uncapAtoms","btnUncap","LINES","circle","ToolBankItem","TemplateBank","group","subgroups","templates","resourceData","loadResourceData","prepareSubGroups","prepareTemplates","populateGroups","populateTemplates","titles","preview","molecules","resourceList","msz","colMnemonic","FusionBank","templateAccept","templateRotate","clearPermutations","TOOLS_MAIN","Arrow","Pan","Drag","BondOrder0","BondOrder1","BondOrder2","BondOrder3","BondUnknown","BondInclined","BondDeclined","RingAliph","RingArom","AtomPlus","AtomMinus","ElementPfx","ToolBank","StandardUnits","Sketcher","callbackSpecialPaste","inDialog","initialFocus","useToolBank","lowerToolBank","useCommandBank","lowerCommandBank","useTemplateBank","lowerTemplateBank","debugOutput","beenSetup","undoStack","redoStack","fadeWatermark","toolView","commandView","templateView","proxyMenu","defineMolecule","withAutoScale","withStashUndo","keepSelect","stashUndo","stopTemplateFusion","callbackChangeMolecule","renderMolecule","defineClipboard","defineContext","defineMoleculeString","molsk","defineRenderPolicy","defineBackground","borderRad","bgCol","clearMolecule","setup","centreAndShrink","setupAsync","reserveHeight","keyPressed","keyDown","keyUp","touchStart","touchMove","touchCancel","touchEnd","contextMenu","dataTransfer","dropEffect","dropInto","changeSize","btnv","msg","isError","szLeft","szRight","szBottom","clearMessage","layoutTemplatePerm","anySelected","setSelected","changeCurrentAtom","changeCurrentBond","clearSubject","UNDO_SIZE","pickTemplatePermutation","performCopySelection","pasteText","performActivity","newScale","editBond","editAtom","pasteLocal","pasteMolecule","dlg","limW","limH","natW","natH","down","tpolicy","updateHoverCursor","tool","toolApplies","mouseObj","mouseAtom","mouseBond","abbrevThen","abbrevNow","determineDragGuide","single","determineMoveGuide","guides","hitArrowKey","cursorJumpDirection","jumpFromCurrentAtom","jumpFromCurrentBond","jumpFromNowhere","closestDelta","adjTheta","cosdelta","bondTheta","atheta","ctrlArrowKey","sproutDirection","clickObj","interactStart","interactEnd","interactDrag","view","nomod","touches","mouseWheel","openContextMenu","Press","Zoom","BondPfx","inPoly","newOX","newOY","interactEndDrag","interactEndClick","clickAtom","clickBond","autoscale","degrees","prompt","toObj","connectPolymerBlock","transfer","items","files","SUFFIXES","MIMES","getAsString","log","sfx","reader","FileReader","readAsText","bond1","bond2","atomIn1","atomOut1","atomIn2","atomOut2","highName","ina","inb","nameList","name1","name2","EditCompound","callbackSave","onSave","getSketcher","btnClear","btnCopy","actionCopy","btnSave","skdiv","actionCut","actionPaste","actionUndo","actionRedo","KeyValueWidget","callbackChange","divGrid","rebuildGrid","divKey","divValue","divButton","inputKey","scrapeData","inputValue","btnDelete","divAdd","btnAdd","dval","popupBackground","obscureOpacity","callbackPopulate","positionAndShow","client","scrollSize","inner","empiricalScrollerSize","MetadataWidget","renderTerm","divContent","btnBack","triggerModified","btnAssert","pickExtraTerm","btnProp","pickNewTerm","divParent","branchList","ROOTS","rootURI","popup","populateBranch","isProperty","ROOTS_ASSERT","ROOTS_PROP","callbackClicked","span","PAIR_UNIT_NAMES","pc","pcWV","pcWW","pcVV","pcMM","mol_L","mmol_L","umol_L","nmol_L","pmol_L","g_L","mg_L","ug_L","mol_kg","kg","mg","ug","ng","L","mL","uL","nL","mmol","nmol","ppm","ppb","PAIR_UNIT_MINCHI","Units","STANDARD_LIST","COMMON_NAMES","URI_TO_NAME","NAME_TO_URI","URI_TO_MINCHI","standardList","commonNames","uriToName","nameToURI","convertToMInChI","QuantityType","RELATION_VALUES","RELATION_LABELS","EditComponent","component","parentSize","areaDescr","areaSyn","callbackSketch","onSketch","btnSketch","invokeSketcher","saveAndClose","vertical","grid1","fieldGrid","createFieldName","lineName","createValueLine","divQuant","createQuantity","createValueMultiline","synonyms","grid2","divFormula","createDiv","lineFormula","placeholder","calculateFormula","calculateWeight","divWeight","lineInChI","inchi","InChI","isAvailable","calculateInChI","lineSMILES","smiles","links","trapEscape","spellcheck","nullifyBlank","qtype","optQuantType","strQuant1","lineQuantVal1","strQuant2","lineQuantVal2","Value","lineQuantUnits","Range","Ratio","splitLines","topAlign","andEnter","interpretQuantString","flex","dropQuantRel","makeDropdownGroup","spanGap","qubox","btnQuantUnits","selectDropUnits","changeToValue","changeToRange","changeToRatio","low","changeFunc","drop","qstr","regname","isNum","test","qnum1","qnum2","makeInChI","BASE_COMPOUND","PubChemSearch","searchText","results","err","callbackResult","callbackFinished","stopped","cidList","encodeURIComponent","resp","receivedList","IdentifierList","CID","fetchNext","cid","receivedCompound","unpackCompound","NAMECOLS","LookupCompoundDialog","pubchem","resultList","nameSelected","nameDOM","molSelected","molList","molDOM","spanStatus","btnSearch","runSearch","applyResult","populateSearchEntry","resultArea","getName","divInput","searchInput","trapKeys","gotResult","finishedSearch","divMol","selectMolecule","divName","selectName","prev","ExtractCTABComponent","extract","ctab","seed","attachAny","stereoRacemic","stereoRelative","linkNodes","prototypes","enumerateAttachAny","enumerateStereoRacemic","enumerateStereoRelative","enumerateLinkNodes","enumerateMixtures","subComp","atomKeep","atomChop","removeAtom","connAtom","cmol","protoClone","affected","nperm","rmol","bitand","molinv","addedAtoms","rproto","leafmask","mapTree","nonemask","atommask","AbsType","NormMixture","notes","analyse","compList","enumerateStereo","stereoEnum","childIndexes","sumType","sumAmount1","sumAmount2","sumError","toAbsoluteUnits","amount","childType","idxOne","Mass","Volume","Moles","splitMolecule","emols","DrawMixture","hoverIndex","activeIndex","selectedIndex","callbackDrawNameLine","drawConnection","drawComponent","xm","yd","DragReason","MenuBannerCommand","EditMixture","callbackUpdateTitle","callbackInteraction","monochrome","dirty","delayedSelect","dragReason","dragIndex","dragX","dragY","isEditing","dlgCompound","structureIntegrity","canvasMixture","refocus","isReceivingCommands","setEditing","compoundEditor","addStructureIntegrityKey","getMixture","setMixture","getCollapsedBranches","clearHistory","isDirty","setDirty","zoomFull","zoomNormal","selectComponent","selectOrigin","complist","editStructure","checkStructureIntegrity","modmix","editDetails","lookupCurrent","curX","curY","deleteCurrent","appendToCurrent","prependBeforeCurrent","insertBeforeCurrent","insertAfterCurrent","reorderCurrent","clipboardCopy","clipboardPaste","getComponentPosition","rescale","scaleToFit","ensureComponentVisible","mustFit","pickComponent","pickComponentSection","navigateDirection","newIndex","toggleCollapsed","picked","Any","newMol","integKeys","oldMol","confirm","MenuBanner","commands","callbackAction","callbackRefocus","mapDiv","mapSVG","mapActive","domParent","divBlk","createCommand","cmd","activateButtons","addSelected","removeSelected","iconPosition","offsetLeft","offsetTop","icon","lastIndexOf","imgURL","tip","MainPanel","clientHeight","onResize","menuAction","loadFile","filename","NewMixture","openNewWindow","NewCollection","Open","actionFileOpen","Save","actionFileSave","SaveAs","actionFileSaveAs","customMenuAction","MInChISegment","ExportMInChI","minchi","segment","fillInChI","inchiKey","formulate","useRatio","inchiList","mcomp","inchiFrag","PFX","builder","assembleContents","appendSegment","Header","Component","layerN","Hierarchy","layerG","Concentration","getSegment","makeLongHashKey","makeShortHashKey","LETTERS","crclist","feedCharacter","letter","NCRC","trunc","formatConcentration","mantissa","exp","determineExponent","unitURI","scaled","tree","subTree","conc","shaveBeard","minval","log10","ExportSDFile","colHier","colConc","appendComponent","subseq","BANNER","EditDetails","EditStructure","Lookup","ExportSVG","Append","Prepend","InsertBefore","InsertAfter","MoveUp","MoveDown","Undo","Redo","Paste","ZoomFull","ZoomIn","ZoomOut","MixturePanel","editor","banner","updateTitle","divBanner","divEditor","saveFile","ExportSDF","actionExportSDF","actionFileExportSVG","CreateMInChI","actionFileCreateMInChI","CopyBranch","ZoomNormal","params","properties","defaultPath","filters","extensions","showOpenDialog","canceled","inPlace","filePaths","showSaveDialog","filePath","exportSDF","sdfile","defPath","lastDot","maker","self","renderResult","yieldDOM","slash","MenuProxy","hasContextMenu","menuItems","ON_DESKTOP","setOnDesktop","onDesktop","runMixfileEditor","resURL","rootID","resourcePath","composeMainCSS","initWebMolKit","href","panelClass","decodeURIComponent","readText","writeText","writeHTML","emenu","itemList","submenu","execLocation","available","inchiPath","X_OK","hasExecutable","setExecutable","nativeMolfileToInChI","writer","mdlmol","proc","raw","spawnSync","stdout","MixtureCollection","getMixtureDirect","setMixtureDirect","deleteMixture","appendMixture","appendMixtureDirect","appendCollection","collection","insertMixture","swapMixtures","m1","m2","RenderHTML","htmlFile","withMInChI","mixlist","emitln","Aspect","allowModify","isColumnReserved","areColumnsReserved","colNames","resMask","rowFirstBlock","rowBlockCount","aspectUnion","initiateNewRow","columnEffectivelyBlank","numTextRenderings","produceTextRendering","numGraphicRenderings","produceGraphicRendering","numHeaderRenderings","produceHeaderRendering","TEXT_PLAIN","TEXT_LINK","TEXT_HTML","supportedAspects","registerAspect","classdef","CODE","NAME","AssayProvenanceHeader","prefixes","targetName","targetURI","organismName","organismURI","targetTypeName","targetTypeURI","cellName","cellURI","assayTypeName","assayTypeURI","assayDescription","sourceName","sourceURI","sourceVersion","documentName","documentURI","measureTypeName","measureTypeURI","unitNames","unitURIs","AssayProvenance","isAssayProvenance","getHeader","parseMetaData","setHeader","formatMetaData","COLNAME_MOLECULE","COLNAME_NAME","COLNAME_VALUE","getError","COLNAME_ERROR","COLNAME_UNITS","getRelation","COLNAME_RELATION","getSourceURI","COLNAME_SOURCEURI","setName","setError","setUnits","setRelation","setSourceURI","parseAndCorrect","plainHeading","URI_UNIT_M","URI_UNIT_mM","URI_UNIT_uM","URI_UNIT_nM","URI_UNIT_pM","URI_UNIT_logM","URI_UNIT_perM","URI_UNIT_gL","URI_UNIT_mgL","URI_UNIT_ugL","URI_UNIT_binary","MeasurementData","isMeasurementData","effectHeader","ensureFields","rename","fldidx","newName","oldName","SUFFIX_VALUE","SUFFIX_ERROR","SUFFIX_UNITS","SUFFIX_MOD","reservedColumns","fieldName","getValueField","colValue","colError","colUnits","colMod","clearValue","getDescr","setDescr","defnURI","resv","colField","MixtureAttributeType","isMixture","attributes","info","TableExtractType","TableExtract","tableFile","lookupFile","mappingFile","verbose","aprov","mdata","lookup","mappings","parseLines","initialMapping","customMapping","extractMixture","sep","escaped","aspect","custom","findIndex","appendQuant","stashRatio","Structure","Bound","Relation","Property","ImportSDFile","mixfiles","feed","processBlock","poll","assembleComponents","hier","incomp","decodeConcentration","finishRatio","quant1","quant2","isRatio","TransformMixtureFormat","ALL_TRANSFORMMIXTURE_FORMATS","TransformMixtures","inputFile","inputFormat","outputFile","outputFormat","instream","outstream","nextIndex","roster","fmt","MInChI","SVG","LongMInChIKey","ShortMInChIKey","stdin","Mixfile","pipeMixfile","pipeJSON","SDF","pipeSDF","flushRoster","processMixfile","Console","justHelp","run","printHelp"],"sourceRoot":""}