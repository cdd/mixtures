{"version":3,"file":"mixtures.js","mappings":"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AK,IAAK,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5I,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,IAChJ,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,IAAK,KAChJ,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC9I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC5I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAC5I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAC7I,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAC9I,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC7I,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE3IvpG,KAAKwpG,WAAa,CACd,GACA,kEACA,2EACA,kNACA,ofACA,8dACA,8nBACA,uCACA,mMACA,8LACA,iJACA,mEACA,uCACA,8BACA,4BACA,0CACA,iWACA,0GACA,wSACA,2fACA,8FACA,kWACA,qgBACA,0DACA,0gBACA,4eACA,uDACA,kEACA,gEACA,+DACA,gEACA,4RACA,6qBACA,0FACA,yaACA,mZACA,6QACA,oEACA,8DACA,8UACA,mEACA,kEACA,qKACA,iFACA,wCACA,4FACA,uEACA,uWACA,uRACA,ieACA,2QACA,+aACA,sDACA,mQACA,mEACA,oHACA,wGACA,wEACA,qEACA,oDACA,gCACA,kDACA,sDACA,kCACA,+BACA,ybACA,kTACA,0SACA,uRACA,qSACA,8KACA,gbACA,uKACA,0DACA,yLACA,iFACA,8BACA,gWACA,uKACA,wPACA,2SACA,4SACA,wJACA,2bACA,mMACA,4KACA,iEACA,8GACA,4FACA,yEACA,gEACA,8SACA,iCACA,0SACA,uSACA,GACA,uDACA,oSACA,4PACA,0aACA,0GACA,0DACA,0yBACA,2DACA,wdACA,waACA,wHACA,yCACA,8BACA,idACA,qCACA,6NACA,qFACA,0QACA,gZACA,wCACA,6KACA,qGACA,8BACA,uJACA,8FACA,sOACA,sHACA,+LACA,gVACA,+fACA,2RACA,sHACA,+HACA,8IACA,yTACA,mJACA,mTACA,iIACA,2jBACA,gGACA,yGACA,wHACA,6HACA,8FACA,uGACA,qHACA,0HACA,2SACA,sSACA,mYACA,6YACA,2ZACA,skBACA,gaACA,gHACA,6hBACA,+RACA,ySACA,uTACA,4TACA,6GACA,qRACA,sdACA,qdACA,8dACA,4eACA,wpBACA,ifACA,8oBACA,mtBACA,odACA,iUACA,0UACA,wV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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAEtI3pG,KAAK4pG,QAAU,CACX,IAAU,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAC5I,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAC7I,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IACvI,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjJ,IAAU,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAK,IACjJ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACvI,IAAU,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAU,IAC5I,IAAU,IAAU,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAC7I,IAA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","sources":["webpack://Mixtures/external node-commonjs \"electron\"","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/remote.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/callbacks-registry.js","webpack://Mixtures/external node-commonjs \"child_process\"","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/get-electron-binding.js","webpack://Mixtures/./node_modules/@electron/remote/renderer/index.js","webpack://Mixtures/external node-commonjs \"https\"","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/type-utils.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/common/module-names.js","webpack://Mixtures/./node_modules/@electron/remote/dist/src/renderer/index.js","webpack://Mixtures/webpack/bootstrap","webpack://Mixtures/webpack/runtime/define property getters","webpack://Mixtures/webpack/runtime/hasOwnProperty shorthand","webpack://Mixtures/webpack/runtime/make namespace object","webpack://Mixtures/./node_modules/webmolkit/util/Vec.js","webpack://Mixtures/./node_modules/webmolkit/util/Matrix.js","webpack://Mixtures/./node_modules/webmolkit/util/util.js","webpack://Mixtures/./node_modules/webmolkit/util/Triangulation2D.js","webpack://Mixtures/./node_modules/webmolkit/util/Geom.js","webpack://Mixtures/./node_modules/webmolkit/util/XML.js","webpack://Mixtures/./node_modules/webmolkit/util/dom.js","webpack://Mixtures/./node_modules/webmolkit/util/Theme.js","webpack://Mixtures/./node_modules/webmolkit/ui/Tooltip.js","webpack://Mixtures/./src/web/MenuBanner.ts","webpack://Mixtures/./node_modules/webmolkit/mol/Chemistry.js","webpack://Mixtures/./node_modules/webmolkit/mol/Graph.js","webpack://Mixtures/./node_modules/webmolkit/calc/ResonanceRemover.js","webpack://Mixtures/./node_modules/webmolkit/mol/BondArtifact.js","webpack://Mixtures/./node_modules/webmolkit/ds/DataSheet.js","webpack://Mixtures/./node_modules/webmolkit/mol/ForeignMolecule.js","webpack://Mixtures/./node_modules/webmolkit/mol/PolymerBlock.js","webpack://Mixtures/./node_modules/webmolkit/mol/QueryUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/StereoGroup.js","webpack://Mixtures/./node_modules/webmolkit/io/MDLReader.js","webpack://Mixtures/./node_modules/webmolkit/io/MDLWriter.js","webpack://Mixtures/./node_modules/webmolkit/io/MoleculeStream.js","webpack://Mixtures/./node_modules/webmolkit/mol/Molecule.js","webpack://Mixtures/./node_modules/webmolkit/mol/CoordUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/SketchUtil.js","webpack://Mixtures/./node_modules/webmolkit/mol/MolUtil.js","webpack://Mixtures/external node-commonjs \"fs\"","webpack://Mixtures/./src/mixture/InChIDelegate.ts","webpack://Mixtures/./src/nodejs/InChI.ts","webpack://Mixtures/./src/electron/MainPanel.ts","webpack://Mixtures/./node_modules/webmolkit/ui/ClipboardProxy.js","webpack://Mixtures/./src/mixture/Units.ts","webpack://Mixtures/./node_modules/webmolkit/mol/DotPath.js","webpack://Mixtures/./node_modules/webmolkit/mol/Stereochemistry.js","webpack://Mixtures/./node_modules/webmolkit/mol/MetaMolecule.js","webpack://Mixtures/./node_modules/webmolkit/calc/CircularFingerprints.js","webpack://Mixtures/./node_modules/webmolkit/io/DataSheetStream.js","webpack://Mixtures/./node_modules/webmolkit/data/AbbrevContainer.js","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/rings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/termgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/funcgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/protgrp.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/nonplrings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/largerings.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/crownethers.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligmonodent.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligbident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligtrident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/ligmultident.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/cagecmplx.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/aminoacids.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/biomolecules.ds","webpack://Mixtures/./node_modules/webmolkit/res/data/templates/saccharides.ds","webpack://Mixtures/./node_modules/webmolkit/sketcher/MetalLigate.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateFusion.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/MoleculeActivity.js","webpack://Mixtures/./src/mixture/NormMixture.ts","webpack://Mixtures/./src/mixture/Mixture.ts","webpack://Mixtures/./src/mixture/Mixfile.ts","webpack://Mixtures/./src/mixture/ExportMInChI.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/Rendering.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMolecule.js","webpack://Mixtures/./src/mixture/ExportSDFile.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/FontData.js","webpack://Mixtures/./node_modules/webmolkit/gfx/ArrangeMeasurement.js","webpack://Mixtures/./node_modules/webmolkit/mol/PseudoEmbedding.js","webpack://Mixtures/./node_modules/webmolkit/util/FitRotatedEllipse.js","webpack://Mixtures/./node_modules/webmolkit/data/OntologyTree.js","webpack://Mixtures/./node_modules/webmolkit/res/data/ontology/units.onto","webpack://Mixtures/./src/mixture/SquarePacking.ts","webpack://Mixtures/./src/mixture/ArrangeMixture.ts","webpack://Mixtures/./node_modules/webmolkit/gfx/MetaVector.js","webpack://Mixtures/./node_modules/webmolkit/gfx/DrawMolecule.js","webpack://Mixtures/./src/mixture/DrawMixture.ts","webpack://Mixtures/./node_modules/webmolkit/dialog/Dialog.js","webpack://Mixtures/external node-commonjs \"path\"","webpack://Mixtures/./node_modules/webmolkit/ui/Widget.js","webpack://Mixtures/./node_modules/webmolkit/ui/ButtonView.js","webpack://Mixtures/./node_modules/webmolkit/ui/ButtonBank.js","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainUndo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomPlus.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomMinus.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondOne.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTwo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondThree.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondZero.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondUp.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondDown.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondSquig.svg","webpack://Mixtures/./node_modules/webmolkit/sketcher/CommandBank.js","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainRedo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainZoomIn.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainZoomOut.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainZoomFit.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelSide.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelAll.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelNone.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainDelete.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainCut.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainCopy.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainPaste.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainAtom.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainBond.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelect.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainMove.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomAbbrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomSBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomPBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomDBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomFBlock.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomNoble.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondFour.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondQAny.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondAddTwo.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondInsert.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondSwitch.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondRotate.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondLinear.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTrigonal.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTetra1.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondTetra2.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondSqPlan.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondOcta1.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondOcta2.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondMetalLigate.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactPath.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactRing.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactArene.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondArtifactClear.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/BondPolymer.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionGrow.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionShrink.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionChain.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionSmRing.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionRingBlk.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionCurElement.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelPrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainSelNext.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionToggle.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/SelectionUncurrent.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveJoin.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MainNew.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomInline.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomFormula.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomExpandAbbrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/AtomClearAbbrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveUp.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveDown.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveLeft.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRight.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveUpLots.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveDownLots.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveLeftLots.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRightLots.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveUpFar.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveDownFar.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveLeftFar.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRightFar.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotP01.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotM01.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotP05.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotM05.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotP15.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotM15.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotP30.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveRotM30.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveHFlip.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveVFlip.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveShrink.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/MoveGrow.svg","webpack://Mixtures/./node_modules/webmolkit/sketcher/ContextSketch.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/DrawCanvas.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/GeomWidget.js","webpack://Mixtures/./node_modules/webmolkit/ui/OptionList.js","webpack://Mixtures/./node_modules/webmolkit/ui/TabBar.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/ExtraFieldsWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/PeriodicTableWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/QueryFieldsWidget.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditAtom.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditBond.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/EditPolymer.js","webpack://Mixtures/./node_modules/webmolkit/sketcher/TemplateBank.js","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/GenericAccept.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/TemplatePrev.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/TemplateNext.svg","webpack://Mixtures/./node_modules/webmolkit/sketcher/ToolBank.js","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolSelect.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolRotate.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolPan.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolDrag.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolErasor.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolRing.svg","webpack://Mixtures/./node_modules/webmolkit/res/img/actions/ToolArom.svg","webpack://Mixtures/./node_modules/webmolkit/sketcher/Sketcher.js","webpack://Mixtures/./node_modules/webmolkit/dialog/EditCompound.js","webpack://Mixtures/./node_modules/webmolkit/ui/Popup.js","webpack://Mixtures/./src/web/KeyValueWidget.ts","webpack://Mixtures/./src/electron/MetadataWidget.ts","webpack://Mixtures/./src/web/EditComponent.ts","webpack://Mixtures/./src/electron/PubChemSearch.ts","webpack://Mixtures/./src/electron/LookupCompoundDialog.ts","webpack://Mixtures/./src/mixture/ExtractCTABComponent.ts","webpack://Mixtures/./src/web/EditMixture.ts","webpack://Mixtures/./src/electron/EditMixtureDesktop.ts","webpack://Mixtures/./src/electron/MixturePanel.ts","webpack://Mixtures/./node_modules/webmolkit/ui/MenuProxy.js","webpack://Mixtures/external node-commonjs \"process\"","webpack://Mixtures/./src/mixture/MixtureCollection.ts","webpack://Mixtures/./src/electron/CollectionPanel.ts","webpack://Mixtures/./src/electron/startup.ts"],"sourcesContent":["module.exports = require(\"electron\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFunctionWithReturnValue = exports.getGlobal = exports.getCurrentWebContents = exports.getCurrentWindow = exports.getBuiltin = void 0;\nconst callbacks_registry_1 = require(\"./callbacks-registry\");\nconst type_utils_1 = require(\"../common/type-utils\");\nconst electron_1 = require(\"electron\");\nconst module_names_1 = require(\"../common/module-names\");\nconst get_electron_binding_1 = require(\"../common/get-electron-binding\");\nconst { Promise } = global;\nconst callbacksRegistry = new callbacks_registry_1.CallbacksRegistry();\nconst remoteObjectCache = new Map();\nconst finalizationRegistry = new FinalizationRegistry((id) => {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined && ref.deref() === undefined) {\n        remoteObjectCache.delete(id);\n        electron_1.ipcRenderer.send(\"REMOTE_BROWSER_DEREFERENCE\" /* BROWSER_DEREFERENCE */, contextId, id, 0);\n    }\n});\nconst electronIds = new WeakMap();\nconst isReturnValue = new WeakSet();\nfunction getCachedRemoteObject(id) {\n    const ref = remoteObjectCache.get(id);\n    if (ref !== undefined) {\n        const deref = ref.deref();\n        if (deref !== undefined)\n            return deref;\n    }\n}\nfunction setCachedRemoteObject(id, value) {\n    const wr = new WeakRef(value);\n    remoteObjectCache.set(id, wr);\n    finalizationRegistry.register(value, id);\n    return value;\n}\nfunction getContextId() {\n    const v8Util = get_electron_binding_1.getElectronBinding('v8_util');\n    if (v8Util) {\n        return v8Util.getHiddenValue(global, 'contextId');\n    }\n    else {\n        throw new Error('Electron >=v13.0.0-beta.6 required to support sandboxed renderers');\n    }\n}\n// An unique ID that can represent current context.\nconst contextId = process.contextId || getContextId();\n// Notify the main process when current context is going to be released.\n// Note that when the renderer process is destroyed, the message may not be\n// sent, we also listen to the \"render-view-deleted\" event in the main process\n// to guard that situation.\nprocess.on('exit', () => {\n    const command = \"REMOTE_BROWSER_CONTEXT_RELEASE\" /* BROWSER_CONTEXT_RELEASE */;\n    electron_1.ipcRenderer.send(command, contextId);\n});\nconst IS_REMOTE_PROXY = Symbol('is-remote-proxy');\n// Convert the arguments object into an array of meta data.\nfunction wrapArgs(args, visited = new Set()) {\n    const valueToMeta = (value) => {\n        // Check for circular reference.\n        if (visited.has(value)) {\n            return {\n                type: 'value',\n                value: null\n            };\n        }\n        if (value && value.constructor && value.constructor.name === 'NativeImage') {\n            return { type: 'nativeimage', value: type_utils_1.serialize(value) };\n        }\n        else if (Array.isArray(value)) {\n            visited.add(value);\n            const meta = {\n                type: 'array',\n                value: wrapArgs(value, visited)\n            };\n            visited.delete(value);\n            return meta;\n        }\n        else if (value instanceof Buffer) {\n            return {\n                type: 'buffer',\n                value\n            };\n        }\n        else if (type_utils_1.isSerializableObject(value)) {\n            return {\n                type: 'value',\n                value\n            };\n        }\n        else if (typeof value === 'object') {\n            if (type_utils_1.isPromise(value)) {\n                return {\n                    type: 'promise',\n                    then: valueToMeta(function (onFulfilled, onRejected) {\n                        value.then(onFulfilled, onRejected);\n                    })\n                };\n            }\n            else if (electronIds.has(value)) {\n                return {\n                    type: 'remote-object',\n                    id: electronIds.get(value)\n                };\n            }\n            const meta = {\n                type: 'object',\n                name: value.constructor ? value.constructor.name : '',\n                members: []\n            };\n            visited.add(value);\n            for (const prop in value) { // eslint-disable-line guard-for-in\n                meta.members.push({\n                    name: prop,\n                    value: valueToMeta(value[prop])\n                });\n            }\n            visited.delete(value);\n            return meta;\n        }\n        else if (typeof value === 'function' && isReturnValue.has(value)) {\n            return {\n                type: 'function-with-return-value',\n                value: valueToMeta(value())\n            };\n        }\n        else if (typeof value === 'function') {\n            return {\n                type: 'function',\n                id: callbacksRegistry.add(value),\n                location: callbacksRegistry.getLocation(value),\n                length: value.length\n            };\n        }\n        else {\n            return {\n                type: 'value',\n                value\n            };\n        }\n    };\n    return args.map(valueToMeta);\n}\n// Populate object's members from descriptors.\n// The |ref| will be kept referenced by |members|.\n// This matches |getObjectMemebers| in rpc-server.\nfunction setObjectMembers(ref, object, metaId, members) {\n    if (!Array.isArray(members))\n        return;\n    for (const member of members) {\n        if (Object.prototype.hasOwnProperty.call(object, member.name))\n            continue;\n        const descriptor = { enumerable: member.enumerable };\n        if (member.type === 'method') {\n            const remoteMemberFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteMemberFunction) {\n                    command = \"REMOTE_BROWSER_MEMBER_CONSTRUCTOR\" /* BROWSER_MEMBER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_MEMBER_CALL\" /* BROWSER_MEMBER_CALL */;\n                }\n                const ret = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, wrapArgs(args));\n                return metaToValue(ret);\n            };\n            let descriptorFunction = proxyFunctionProperties(remoteMemberFunction, metaId, member.name);\n            descriptor.get = () => {\n                descriptorFunction.ref = ref; // The member should reference its object.\n                return descriptorFunction;\n            };\n            // Enable monkey-patch the method\n            descriptor.set = (value) => {\n                descriptorFunction = value;\n                return value;\n            };\n            descriptor.configurable = true;\n        }\n        else if (member.type === 'get') {\n            descriptor.get = () => {\n                const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n                const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name);\n                return metaToValue(meta);\n            };\n            if (member.writable) {\n                descriptor.set = (value) => {\n                    const args = wrapArgs([value]);\n                    const command = \"REMOTE_BROWSER_MEMBER_SET\" /* BROWSER_MEMBER_SET */;\n                    const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, member.name, args);\n                    if (meta != null)\n                        metaToValue(meta);\n                    return value;\n                };\n            }\n        }\n        Object.defineProperty(object, member.name, descriptor);\n    }\n}\n// Populate object's prototype from descriptor.\n// This matches |getObjectPrototype| in rpc-server.\nfunction setObjectPrototype(ref, object, metaId, descriptor) {\n    if (descriptor === null)\n        return;\n    const proto = {};\n    setObjectMembers(ref, proto, metaId, descriptor.members);\n    setObjectPrototype(ref, proto, metaId, descriptor.proto);\n    Object.setPrototypeOf(object, proto);\n}\n// Wrap function in Proxy for accessing remote properties\nfunction proxyFunctionProperties(remoteMemberFunction, metaId, name) {\n    let loaded = false;\n    // Lazily load function properties\n    const loadRemoteProperties = () => {\n        if (loaded)\n            return;\n        loaded = true;\n        const command = \"REMOTE_BROWSER_MEMBER_GET\" /* BROWSER_MEMBER_GET */;\n        const meta = electron_1.ipcRenderer.sendSync(command, contextId, metaId, name);\n        setObjectMembers(remoteMemberFunction, remoteMemberFunction, meta.id, meta.members);\n    };\n    return new Proxy(remoteMemberFunction, {\n        set: (target, property, value) => {\n            if (property !== 'ref')\n                loadRemoteProperties();\n            target[property] = value;\n            return true;\n        },\n        get: (target, property) => {\n            if (property === IS_REMOTE_PROXY)\n                return true;\n            if (!Object.prototype.hasOwnProperty.call(target, property))\n                loadRemoteProperties();\n            const value = target[property];\n            if (property === 'toString' && typeof value === 'function') {\n                return value.bind(target);\n            }\n            return value;\n        },\n        ownKeys: (target) => {\n            loadRemoteProperties();\n            return Object.getOwnPropertyNames(target);\n        },\n        getOwnPropertyDescriptor: (target, property) => {\n            const descriptor = Object.getOwnPropertyDescriptor(target, property);\n            if (descriptor)\n                return descriptor;\n            loadRemoteProperties();\n            return Object.getOwnPropertyDescriptor(target, property);\n        }\n    });\n}\n// Convert meta data from browser into real value.\nfunction metaToValue(meta) {\n    if (!meta)\n        return {};\n    if (meta.type === 'value') {\n        return meta.value;\n    }\n    else if (meta.type === 'array') {\n        return meta.members.map((member) => metaToValue(member));\n    }\n    else if (meta.type === 'nativeimage') {\n        return type_utils_1.deserialize(meta.value);\n    }\n    else if (meta.type === 'buffer') {\n        return Buffer.from(meta.value.buffer, meta.value.byteOffset, meta.value.byteLength);\n    }\n    else if (meta.type === 'promise') {\n        return Promise.resolve({ then: metaToValue(meta.then) });\n    }\n    else if (meta.type === 'error') {\n        return metaToError(meta);\n    }\n    else if (meta.type === 'exception') {\n        if (meta.value.type === 'error') {\n            throw metaToError(meta.value);\n        }\n        else {\n            throw new Error(`Unexpected value type in exception: ${meta.value.type}`);\n        }\n    }\n    else {\n        let ret;\n        if ('id' in meta) {\n            const cached = getCachedRemoteObject(meta.id);\n            if (cached !== undefined) {\n                return cached;\n            }\n        }\n        // A shadow class to represent the remote function object.\n        if (meta.type === 'function') {\n            const remoteFunction = function (...args) {\n                let command;\n                if (this && this.constructor === remoteFunction) {\n                    command = \"REMOTE_BROWSER_CONSTRUCTOR\" /* BROWSER_CONSTRUCTOR */;\n                }\n                else {\n                    command = \"REMOTE_BROWSER_FUNCTION_CALL\" /* BROWSER_FUNCTION_CALL */;\n                }\n                const obj = electron_1.ipcRenderer.sendSync(command, contextId, meta.id, wrapArgs(args));\n                return metaToValue(obj);\n            };\n            ret = remoteFunction;\n        }\n        else {\n            ret = {};\n        }\n        setObjectMembers(ret, ret, meta.id, meta.members);\n        setObjectPrototype(ret, ret, meta.id, meta.proto);\n        if (ret.constructor && ret.constructor[IS_REMOTE_PROXY]) {\n            Object.defineProperty(ret.constructor, 'name', { value: meta.name });\n        }\n        // Track delegate obj's lifetime & tell browser to clean up when object is GCed.\n        electronIds.set(ret, meta.id);\n        setCachedRemoteObject(meta.id, ret);\n        return ret;\n    }\n}\nfunction metaToError(meta) {\n    const obj = meta.value;\n    for (const { name, value } of meta.members) {\n        obj[name] = metaToValue(value);\n    }\n    return obj;\n}\nfunction hasSenderId(input) {\n    return typeof input.senderId === \"number\";\n}\nfunction handleMessage(channel, handler) {\n    electron_1.ipcRenderer.on(channel, (event, passedContextId, id, ...args) => {\n        if (hasSenderId(event)) {\n            if (event.senderId !== 0 && event.senderId !== undefined) {\n                console.error(`Message ${channel} sent by unexpected WebContents (${event.senderId})`);\n                return;\n            }\n        }\n        if (passedContextId === contextId) {\n            handler(id, ...args);\n        }\n        else {\n            // Message sent to an un-exist context, notify the error to main process.\n            electron_1.ipcRenderer.send(\"REMOTE_BROWSER_WRONG_CONTEXT_ERROR\" /* BROWSER_WRONG_CONTEXT_ERROR */, contextId, passedContextId, id);\n        }\n    });\n}\nconst enableStacks = process.argv.includes('--enable-api-filtering-logging');\nfunction getCurrentStack() {\n    const target = { stack: undefined };\n    if (enableStacks) {\n        Error.captureStackTrace(target, getCurrentStack);\n    }\n    return target.stack;\n}\n// Browser calls a callback in renderer.\nhandleMessage(\"REMOTE_RENDERER_CALLBACK\" /* RENDERER_CALLBACK */, (id, args) => {\n    callbacksRegistry.apply(id, metaToValue(args));\n});\n// A callback in browser is released.\nhandleMessage(\"REMOTE_RENDERER_RELEASE_CALLBACK\" /* RENDERER_RELEASE_CALLBACK */, (id) => {\n    callbacksRegistry.remove(id);\n});\nexports.require = (module) => {\n    const command = \"REMOTE_BROWSER_REQUIRE\" /* BROWSER_REQUIRE */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n};\n// Alias to remote.require('electron').xxx.\nfunction getBuiltin(module) {\n    const command = \"REMOTE_BROWSER_GET_BUILTIN\" /* BROWSER_GET_BUILTIN */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, module, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getBuiltin = getBuiltin;\nfunction getCurrentWindow() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WINDOW\" /* BROWSER_GET_CURRENT_WINDOW */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWindow = getCurrentWindow;\n// Get current WebContents object.\nfunction getCurrentWebContents() {\n    const command = \"REMOTE_BROWSER_GET_CURRENT_WEB_CONTENTS\" /* BROWSER_GET_CURRENT_WEB_CONTENTS */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getCurrentWebContents = getCurrentWebContents;\n// Get a global object in browser.\nfunction getGlobal(name) {\n    const command = \"REMOTE_BROWSER_GET_GLOBAL\" /* BROWSER_GET_GLOBAL */;\n    const meta = electron_1.ipcRenderer.sendSync(command, contextId, name, getCurrentStack());\n    return metaToValue(meta);\n}\nexports.getGlobal = getGlobal;\n// Get the process object in browser.\nObject.defineProperty(exports, 'process', {\n    enumerable: true,\n    get: () => exports.getGlobal('process')\n});\n// Create a function that will return the specified value when called in browser.\nfunction createFunctionWithReturnValue(returnValue) {\n    const func = () => returnValue;\n    isReturnValue.add(func);\n    return func;\n}\nexports.createFunctionWithReturnValue = createFunctionWithReturnValue;\nconst addBuiltinProperty = (name) => {\n    Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: () => exports.getBuiltin(name)\n    });\n};\nmodule_names_1.browserModuleNames\n    .forEach(addBuiltinProperty);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallbacksRegistry = void 0;\nclass CallbacksRegistry {\n    constructor() {\n        this.nextId = 0;\n        this.callbacks = {};\n        this.callbackIds = new WeakMap();\n        this.locationInfo = new WeakMap();\n    }\n    add(callback) {\n        // The callback is already added.\n        let id = this.callbackIds.get(callback);\n        if (id != null)\n            return id;\n        id = this.nextId += 1;\n        this.callbacks[id] = callback;\n        this.callbackIds.set(callback, id);\n        // Capture the location of the function and put it in the ID string,\n        // so that release errors can be tracked down easily.\n        const regexp = /at (.*)/gi;\n        const stackString = (new Error()).stack;\n        if (!stackString)\n            return id;\n        let filenameAndLine;\n        let match;\n        while ((match = regexp.exec(stackString)) !== null) {\n            const location = match[1];\n            if (location.includes('(native)'))\n                continue;\n            if (location.includes('(<anonymous>)'))\n                continue;\n            if (location.includes('callbacks-registry.js'))\n                continue;\n            if (location.includes('remote.js'))\n                continue;\n            if (location.includes('@electron/remote/dist'))\n                continue;\n            const ref = /([^/^)]*)\\)?$/gi.exec(location);\n            if (ref)\n                filenameAndLine = ref[1];\n            break;\n        }\n        this.locationInfo.set(callback, filenameAndLine);\n        return id;\n    }\n    get(id) {\n        return this.callbacks[id] || function () { };\n    }\n    getLocation(callback) {\n        return this.locationInfo.get(callback);\n    }\n    apply(id, ...args) {\n        return this.get(id).apply(global, ...args);\n    }\n    remove(id) {\n        const callback = this.callbacks[id];\n        if (callback) {\n            this.callbackIds.delete(callback);\n            delete this.callbacks[id];\n        }\n    }\n}\nexports.CallbacksRegistry = CallbacksRegistry;\n","module.exports = require(\"child_process\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElectronBinding = void 0;\nconst getElectronBinding = (name) => {\n    if (process._linkedBinding) {\n        return process._linkedBinding('electron_common_' + name);\n    }\n    else if (process.electronBinding) {\n        return process.electronBinding(name);\n    }\n    else {\n        return null;\n    }\n};\nexports.getElectronBinding = getElectronBinding;\n","module.exports = require('../dist/src/renderer')\n","module.exports = require(\"https\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = exports.serialize = exports.isSerializableObject = exports.isPromise = void 0;\nconst electron_1 = require(\"electron\");\nfunction isPromise(val) {\n    return (val &&\n        val.then &&\n        val.then instanceof Function &&\n        val.constructor &&\n        val.constructor.reject &&\n        val.constructor.reject instanceof Function &&\n        val.constructor.resolve &&\n        val.constructor.resolve instanceof Function);\n}\nexports.isPromise = isPromise;\nconst serializableTypes = [\n    Boolean,\n    Number,\n    String,\n    Date,\n    Error,\n    RegExp,\n    ArrayBuffer\n];\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm#Supported_types\nfunction isSerializableObject(value) {\n    return value === null || ArrayBuffer.isView(value) || serializableTypes.some(type => value instanceof type);\n}\nexports.isSerializableObject = isSerializableObject;\nconst objectMap = function (source, mapper) {\n    const sourceEntries = Object.entries(source);\n    const targetEntries = sourceEntries.map(([key, val]) => [key, mapper(val)]);\n    return Object.fromEntries(targetEntries);\n};\nfunction serializeNativeImage(image) {\n    const representations = [];\n    const scaleFactors = image.getScaleFactors();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (scaleFactors.length === 1) {\n        const scaleFactor = scaleFactors[0];\n        const size = image.getSize(scaleFactor);\n        const buffer = image.toBitmap({ scaleFactor });\n        representations.push({ scaleFactor, size, buffer });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const scaleFactor of scaleFactors) {\n            const size = image.getSize(scaleFactor);\n            const dataURL = image.toDataURL({ scaleFactor });\n            representations.push({ scaleFactor, size, dataURL });\n        }\n    }\n    return { __ELECTRON_SERIALIZED_NativeImage__: true, representations };\n}\nfunction deserializeNativeImage(value) {\n    const image = electron_1.nativeImage.createEmpty();\n    // Use Buffer when there's only one representation for better perf.\n    // This avoids compressing to/from PNG where it's not necessary to\n    // ensure uniqueness of dataURLs (since there's only one).\n    if (value.representations.length === 1) {\n        const { buffer, size, scaleFactor } = value.representations[0];\n        const { width, height } = size;\n        image.addRepresentation({ buffer, scaleFactor, width, height });\n    }\n    else {\n        // Construct from dataURLs to ensure that they are not lost in creation.\n        for (const rep of value.representations) {\n            const { dataURL, size, scaleFactor } = rep;\n            const { width, height } = size;\n            image.addRepresentation({ dataURL, scaleFactor, width, height });\n        }\n    }\n    return image;\n}\nfunction serialize(value) {\n    if (value && value.constructor && value.constructor.name === 'NativeImage') {\n        return serializeNativeImage(value);\n    }\n    if (Array.isArray(value)) {\n        return value.map(serialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, serialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.serialize = serialize;\nfunction deserialize(value) {\n    if (value && value.__ELECTRON_SERIALIZED_NativeImage__) {\n        return deserializeNativeImage(value);\n    }\n    else if (Array.isArray(value)) {\n        return value.map(deserialize);\n    }\n    else if (isSerializableObject(value)) {\n        return value;\n    }\n    else if (value instanceof Object) {\n        return objectMap(value, deserialize);\n    }\n    else {\n        return value;\n    }\n}\nexports.deserialize = deserialize;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.browserModuleNames = exports.commonModuleNames = void 0;\nconst get_electron_binding_1 = require(\"./get-electron-binding\");\nexports.commonModuleNames = [\n    'clipboard',\n    'nativeImage',\n    'shell',\n];\nexports.browserModuleNames = [\n    'app',\n    'autoUpdater',\n    'BaseWindow',\n    'BrowserView',\n    'BrowserWindow',\n    'contentTracing',\n    'crashReporter',\n    'dialog',\n    'globalShortcut',\n    'ipcMain',\n    'inAppPurchase',\n    'Menu',\n    'MenuItem',\n    'nativeTheme',\n    'net',\n    'netLog',\n    'MessageChannelMain',\n    'Notification',\n    'powerMonitor',\n    'powerSaveBlocker',\n    'protocol',\n    'pushNotifications',\n    'safeStorage',\n    'screen',\n    'session',\n    'ShareMenu',\n    'systemPreferences',\n    'TopLevelWindow',\n    'TouchBar',\n    'Tray',\n    'utilityProcess',\n    'View',\n    'webContents',\n    'WebContentsView',\n    'webFrameMain',\n].concat(exports.commonModuleNames);\nconst features = get_electron_binding_1.getElectronBinding('features');\nif (((_a = features === null || features === void 0 ? void 0 : features.isDesktopCapturerEnabled) === null || _a === void 0 ? void 0 : _a.call(features)) !== false) {\n    exports.browserModuleNames.push('desktopCapturer');\n}\nif (((_b = features === null || features === void 0 ? void 0 : features.isViewApiEnabled) === null || _b === void 0 ? void 0 : _b.call(features)) !== false) {\n    exports.browserModuleNames.push('ImageView');\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nif (process.type === 'browser')\n    throw new Error(`\"@electron/remote\" cannot be required in the browser process. Instead require(\"@electron/remote/main\").`);\n__exportStar(require(\"./remote\"), exports);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class Vec {\n    static isBlank(arr) { return arr == null || arr.length == 0; }\n    static notBlank(arr) { return arr != null && arr.length > 0; }\n    static safeArray(arr) { return arr == null ? [] : arr; }\n    static len(arr) { return arr == null ? 0 : arr.length; }\n    static arrayLength(arr) { return arr == null ? 0 : arr.length; }\n    static anyTrue(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (v)\n                return true;\n        return false;\n    }\n    static allTrue(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (!v)\n                return false;\n        return true;\n    }\n    static anyFalse(arr) {\n        if (arr == null)\n            return false;\n        for (let v of arr)\n            if (!v)\n                return true;\n        return false;\n    }\n    static allFalse(arr) {\n        if (arr == null)\n            return true;\n        for (let v of arr)\n            if (v)\n                return false;\n        return true;\n    }\n    static iterAnyTrue(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return true;\n        return false;\n    }\n    static iterAllTrue(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return false;\n        return true;\n    }\n    static iterAnyFalse(arr, callback) {\n        for (let v of arr)\n            if (!callback(v))\n                return true;\n        return false;\n    }\n    static iterAllFalse(arr, callback) {\n        for (let v of arr)\n            if (callback(v))\n                return false;\n        return true;\n    }\n    static swap(arr, idx1, idx2) {\n        let v = arr[idx1];\n        arr[idx1] = arr[idx2];\n        arr[idx2] = v;\n    }\n    static duplicate(arr) {\n        return arr == null ? [] : arr.slice(0);\n    }\n    static append(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.push(item);\n        return arr;\n    }\n    static prepend(arr, item) {\n        if (arr == null || arr.length == 0)\n            return [item];\n        arr = arr.slice(0);\n        arr.unshift(item);\n        return arr;\n    }\n    static concat(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return [];\n        if (arr1 == null)\n            return arr2.slice(0);\n        if (arr2 == null)\n            return arr1.slice(0);\n        return arr1.concat(arr2);\n    }\n    static remove(arr, idx) {\n        arr = arr.slice(0);\n        arr.splice(idx, 1);\n        return arr;\n    }\n    static flatten(mtx) {\n        let ret = [];\n        for (let vec of mtx)\n            ret.push(...vec);\n        return ret;\n    }\n    static transpose(mtx) {\n        let sz1 = mtx.length, sz2 = mtx[0].length;\n        let ret = Vec.anyArray(null, sz2);\n        for (let j = 0; j < sz2; j++) {\n            ret[j] = Vec.anyArray(null, sz1);\n            for (let i = 0; i < sz1; i++)\n                ret[j][i] = mtx[i][j];\n        }\n        return ret;\n    }\n    static equals(arr1, arr2) {\n        if (arr1 == null && arr2 == null)\n            return true;\n        if (arr1 == null || arr2 == null)\n            return false;\n        if (arr1.length != arr2.length)\n            return false;\n        for (let n = 0; n < arr1.length; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static equivalent(arr1, arr2) {\n        const len1 = arr1 == null ? 0 : arr1.length, len2 = arr2 == null ? 0 : arr2.length;\n        if (len1 != len2)\n            return false;\n        for (let n = 0; n < len1; n++)\n            if (arr1[n] != arr2[n])\n                return false;\n        return true;\n    }\n    static compareTo(arr1, arr2) {\n        const sz = Math.max(arr1.length, arr2.length);\n        for (let n = 0; n < sz; n++) {\n            if (arr1[n] < arr2[n])\n                return -1;\n            if (arr1[n] > arr2[n])\n                return 1;\n        }\n        return 0;\n    }\n    static booleanArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static numberArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static stringArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static anyArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericArray(val, sz) {\n        let arr = new Array(sz);\n        arr.fill(val);\n        return arr;\n    }\n    static genericBlankArrays(sz) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = [];\n        return arr;\n    }\n    static funcArray(sz, func) {\n        let arr = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            arr[n] = func(n);\n        return arr;\n    }\n    static first(arr) { return arr == null || arr.length == 0 ? null : arr[0]; }\n    static last(arr) { return arr == null || arr.length == 0 ? null : arr[arr.length - 1]; }\n    static min(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MAX_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.min(v, arr[n]);\n        return v;\n    }\n    static max(arr) {\n        if (arr == null || arr.length == 0)\n            return Number.MIN_VALUE;\n        let v = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            v = Math.max(v, arr[n]);\n        return v;\n    }\n    static idxMin(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] < arr[idx])\n                idx = n;\n        return idx;\n    }\n    static idxMax(arr) {\n        if (arr == null || arr.length == 0)\n            return -1;\n        let idx = 0;\n        for (let n = 1; n < arr.length; n++)\n            if (arr[n] > arr[idx])\n                idx = n;\n        return idx;\n    }\n    static range(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let lo = arr[0], hi = arr[0];\n        for (let n = 1; n < arr.length; n++) {\n            if (arr[n] < lo)\n                lo = arr[n];\n            if (arr[n] > hi)\n                hi = arr[n];\n        }\n        return hi - lo;\n    }\n    static reverse(arr) {\n        let ret = [];\n        for (let n = arr.length - 1; n >= 0; n--)\n            ret.push(arr[n]);\n        return ret;\n    }\n    static identity0(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n;\n        return ret;\n    }\n    static identity1(sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + 1;\n        return ret;\n    }\n    static identityN(start, sz) {\n        let ret = new Array(sz);\n        for (let n = 0; n < sz; n++)\n            ret[n] = n + start;\n        return ret;\n    }\n    static notMask(mask) {\n        let ret = new Array(mask.length);\n        for (let n = mask.length - 1; n >= 0; n--)\n            ret[n] = !mask[n];\n        return ret;\n    }\n    static idxGet(arr, idx) {\n        let ret = [];\n        for (let n = 0; n < idx.length; n++)\n            ret.push(arr[idx[n]]);\n        return ret;\n    }\n    static maskCount(mask) {\n        if (!mask)\n            return 0;\n        let c = 0;\n        for (let n = mask.length - 1; n >= 0; n--)\n            if (mask[n])\n                c++;\n        return c;\n    }\n    static maskIdx(mask) {\n        let idx = [];\n        for (let n = 0; n < mask.length; n++)\n            if (mask[n])\n                idx.push(n);\n        return idx;\n    }\n    static idxMask(idx, sz) {\n        let mask = Vec.booleanArray(false, sz);\n        for (let n of idx)\n            mask[n] = true;\n        return mask;\n    }\n    static maskMap(mask) {\n        let ret = [];\n        for (let n = 0, pos = 0; n < mask.length; n++)\n            ret.push(mask[n] ? pos++ : -1);\n        return ret;\n    }\n    static maskGet(arr, mask) {\n        let ret = [];\n        for (let n = 0, p = 0; n < arr.length; n++)\n            if (mask[n])\n                ret.push(arr[n]);\n        return ret;\n    }\n    static maskEqual(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] == val);\n        }\n        return ret;\n    }\n    static sum(arr) {\n        if (arr == null || arr.length == 0)\n            return 0;\n        let t = arr[0];\n        for (let n = 1; n < arr.length; n++)\n            t += arr[n];\n        return t;\n    }\n    static add(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] + val);\n        }\n        return ret;\n    }\n    static sub(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] - val);\n        }\n        return ret;\n    }\n    static mul(arr1, val) {\n        let ret = [];\n        if (val.constructor === Array) {\n            let arr2 = val;\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * arr2[n]);\n        }\n        else {\n            for (let n = 0; n < arr1.length; n++)\n                ret.push(arr1[n] * val);\n        }\n        return ret;\n    }\n    static neg(arr) {\n        let ret = arr.slice(0);\n        for (let n = ret.length - 1; n >= 0; n--)\n            ret[n] *= -1;\n        return ret;\n    }\n    static setTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] = val; }\n    static addTo(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val; }\n    static mulBy(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val; }\n    static setToArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] = val[n]; }\n    static addToArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] += val[n]; }\n    static subFromArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] -= val[n]; }\n    static mulByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] *= val[n]; }\n    static divByArray(arr, val) { for (let n = arr == null ? -1 : arr.length - 1; n >= 0; n--)\n        arr[n] /= val[n]; }\n    static idxSort(arr) {\n        let idx = new Array(arr.length);\n        for (let n = 0; n < arr.length; n++)\n            idx[n] = n;\n        idx.sort((a, b) => arr[a] < arr[b] ? -1 : arr[a] > arr[b] ? 1 : 0);\n        return idx;\n    }\n    static sort(arr) {\n        arr.sort((v1, v2) => v1 - v2);\n    }\n    static sorted(arr) {\n        arr = arr.slice(0);\n        this.sort(arr);\n        return arr;\n    }\n    static sortedUnique(arr) {\n        if (arr == null || arr.length == 0)\n            return [];\n        let unique = Vec.uniqueUnstable(arr);\n        if (typeof arr[0] == 'number')\n            this.sort(unique);\n        else\n            unique.sort();\n        return unique;\n    }\n    static uniqueUnstable(arr) {\n        return Array.from(new Set(arr));\n    }\n    static uniqueStable(arr) {\n        let set = new Set(arr), ret = [];\n        for (let v of arr)\n            if (set.has(v)) {\n                ret.push(v);\n                set.delete(v);\n            }\n        return ret;\n    }\n    static maskUnique(arr) {\n        let set = new Set(arr), ret = this.booleanArray(false, arr.length);\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret[n] = true;\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static idxUnique(arr) {\n        let set = new Set(arr), ret = [];\n        for (let n = 0; n < arr.length; n++)\n            if (set.has(arr[n])) {\n                ret.push(n);\n                set.delete(arr[n]);\n            }\n        return ret;\n    }\n    static exclude(arr, excl) {\n        const sz = Vec.len(arr);\n        if (sz == 0)\n            return [];\n        let mask = new Array(sz);\n        let count = 0;\n        for (let n = 0; n < arr.length; n++) {\n            mask[n] = excl.indexOf(arr[n]) < 0;\n            if (mask[n])\n                count++;\n        }\n        if (count == sz)\n            return arr;\n        return Vec.maskGet(arr, mask);\n    }\n}\nclass Permutation {\n    static parityPerms(idx) {\n        let v = Vec.booleanArray(false, idx.length);\n        let p = 0;\n        for (let i = idx.length - 1; i >= 0; i--) {\n            if (v[i])\n                p++;\n            else {\n                let j = i;\n                do {\n                    j = idx[j];\n                    v[j] = true;\n                } while (j != i);\n            }\n        }\n        return p;\n    }\n    static parityIdentity(idx) {\n        return this.parityPerms(idx) & 1;\n    }\n    static parityOrder(src) {\n        if (src.length <= 1)\n            return 0;\n        else if (src.length == 2)\n            return src[0] < src[1] ? 0 : 1;\n        else if (src.length == 3) {\n            let p = 1;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            return p & 1;\n        }\n        else if (src.length == 4) {\n            let p = 0;\n            if (src[0] < src[1])\n                p++;\n            if (src[0] < src[2])\n                p++;\n            if (src[0] < src[3])\n                p++;\n            if (src[1] < src[2])\n                p++;\n            if (src[1] < src[3])\n                p++;\n            if (src[2] < src[3])\n                p++;\n            return p & 1;\n        }\n        let idx = [], sorted = src.slice(0);\n        sorted.sort();\n        for (let n = 0; n < src.length; n++)\n            idx.push(sorted.indexOf(src[n]));\n        return this.parityIdentity(idx);\n    }\n    static smallPermutation(sz) {\n        if (sz == 1)\n            return this.PERM1;\n        else if (sz == 2)\n            return this.PERM2;\n        else if (sz == 3)\n            return this.PERM3;\n        else if (sz == 4)\n            return this.PERM4;\n        else\n            return null;\n    }\n    static allPermutations(sz) {\n        if (sz <= this.SMALL_PERMS)\n            return this.smallPermutation(sz);\n        while (this.PERM_CACHE.length < this.MAX_CACHE - this.SMALL_PERMS)\n            this.PERM_CACHE.push(null);\n        if (sz < this.MAX_CACHE && this.PERM_CACHE[sz - this.SMALL_PERMS] != null)\n            return this.PERM_CACHE[sz - this.SMALL_PERMS];\n        let nperms = 1;\n        for (let n = 2; n <= sz; n++)\n            nperms *= n;\n        let perms = [];\n        let idx = Vec.identity0(sz);\n        perms.push(idx.slice(0));\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n < nperms; n++) {\n            nonunique: while (idx[0] < sz) {\n                idx[sz - 1]++;\n                for (let i = sz - 1; i > 0; i--) {\n                    if (idx[i] < sz)\n                        break;\n                    idx[i] = 0;\n                    idx[i - 1]++;\n                }\n                Vec.setTo(mask, false);\n                for (let i of idx) {\n                    if (mask[i])\n                        continue nonunique;\n                    mask[i] = true;\n                }\n                perms[n] = idx.slice(0);\n                break;\n            }\n        }\n        if (sz < this.MAX_CACHE)\n            this.PERM_CACHE[sz - this.SMALL_PERMS] = perms;\n        return perms;\n    }\n}\nPermutation.PERM1 = [[0]];\nPermutation.PERM2 = [[0, 1], [1, 0]];\nPermutation.PERM3 = [[0, 1, 2], [0, 2, 1], [1, 0, 2], [1, 2, 0], [2, 0, 1], [2, 1, 0]];\nPermutation.PERM4 = [\n    [0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1],\n    [1, 0, 2, 3], [1, 0, 3, 2], [1, 2, 0, 3], [1, 2, 3, 0], [1, 3, 0, 2], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 0, 3, 1], [2, 1, 0, 3], [2, 1, 3, 0], [2, 3, 0, 1], [2, 3, 1, 0],\n    [3, 0, 1, 2], [3, 0, 2, 1], [3, 1, 0, 2], [3, 1, 2, 0], [3, 2, 0, 1], [3, 2, 1, 0]\n];\nPermutation.SMALL_PERMS = 4;\nPermutation.MAX_CACHE = 8;\nPermutation.PERM_CACHE = [];\nexport { Permutation };\n//# sourceMappingURL=Vec.js.map","import { Vec } from './Vec';\nexport class Matrix {\n    constructor(m, n, s = 0) {\n        this.m = m;\n        this.n = n;\n        if (m == 0)\n            return;\n        this.A = new Array(m);\n        for (let i = 0; i < m; i++)\n            this.A[i] = Vec.numberArray(s, n);\n    }\n    static fromArray(A) {\n        let mtx = new Matrix(0, 0);\n        mtx.A = A;\n        mtx.m = A.length;\n        mtx.n = A[0].length;\n        return mtx;\n    }\n    clone() {\n        const { A, m, n } = this;\n        let mtx = new Matrix(m, n);\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                mtx.A[i][j] = A[i][j];\n        return mtx;\n    }\n    get numRows() { return this.m; }\n    get numCols() { return this.n; }\n    get(i, j) { return this.A[i][j]; }\n    set(i, j, v) { this.A[i][j] = v; }\n    transpose() {\n        const { A, m, n } = this;\n        let X = new Matrix(n, m);\n        const C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[j][i] = A[i][j];\n        return X;\n    }\n    norm1() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let j = 0; j < n; j++) {\n            let s = 0;\n            for (let i = 0; i < m; i++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    normInf() {\n        const { A, m, n } = this;\n        let f = 0;\n        for (let i = 0; i < m; i++) {\n            let s = 0;\n            for (let j = 0; j < n; j++)\n                s += Math.abs(A[i][j]);\n            f = Math.max(f, s);\n        }\n        return f;\n    }\n    uminus() {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = -A[i][j];\n        return X;\n    }\n    plus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] + B.A[i][j];\n        return X;\n    }\n    plusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] + B.A[i][j];\n        return this;\n    }\n    minus(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] - B.A[i][j];\n        return X;\n    }\n    minusEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] - B.A[i][j];\n        return this;\n    }\n    arrayTimes(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] * B.A[i][j];\n        return X;\n    }\n    arrayTimesEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] * B.A[i][j];\n        return this;\n    }\n    arrayRightDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = A[i][j] / B.A[i][j];\n        return X;\n    }\n    arrayRightDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = A[i][j] / B.A[i][j];\n        return this;\n    }\n    arrayLeftDivide(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = B.A[i][j] / A[i][j];\n        return X;\n    }\n    arrayLeftDivideEquals(B) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = B.A[i][j] / A[i][j];\n        return this;\n    }\n    scalarTimes(s) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, n), C = X.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                C[i][j] = s * A[i][j];\n        return X;\n    }\n    scalarTimesEquals(s) {\n        const { A, m, n } = this;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = s * A[i][j];\n        return this;\n    }\n    times(B) {\n        const { A, m, n } = this;\n        let X = new Matrix(m, B.n);\n        let C = X.A, Bcolj = new Array(n);\n        for (let j = 0; j < B.n; j++) {\n            for (let k = 0; k < n; k++)\n                Bcolj[k] = B.A[k][j];\n            for (let i = 0; i < m; i++) {\n                let Arowi = A[i];\n                let s = 0;\n                for (let k = 0; k < n; k++)\n                    s += Arowi[k] * Bcolj[k];\n                C[i][j] = s;\n            }\n        }\n        return X;\n    }\n    rank() {\n        return new SingularValueDecomposition(this).rank();\n    }\n    cond() {\n        return new SingularValueDecomposition(this).cond();\n    }\n    trace() {\n        const { A, m, n } = this;\n        let t = 0;\n        for (let i = 0; i < Math.min(m, n); i++) {\n            t += A[i][i];\n        }\n        return t;\n    }\n    static identity(m, n) {\n        let mtx = new Matrix(m, n);\n        let A = mtx.A;\n        for (let i = 0; i < m; i++)\n            for (let j = 0; j < n; j++)\n                A[i][j] = (i == j ? 1.0 : 0.0);\n        return mtx;\n    }\n    toString() {\n        let lines = ['['];\n        for (let row of this.A)\n            lines.push(JSON.stringify(row));\n        lines.push(']');\n        return lines.join('\\n');\n    }\n}\nexport class SingularValueDecomposition {\n    constructor(mtx) {\n        let A = mtx.A;\n        let m = this.m = mtx.m;\n        let n = this.n = mtx.n;\n        let nu = Math.min(m, n);\n        let s = this.s = new Array(Math.min(m + 1, n));\n        let U = this.U = new Array(m);\n        let V = this.V = new Array(n);\n        for (let i = 0; i < m; i++)\n            U[i] = Vec.numberArray(0, nu);\n        for (let j = 0; j < n; j++)\n            V[j] = Vec.numberArray(0, n);\n        let e = new Array(n);\n        let work = new Array(m);\n        let wantu = true, wantv = true;\n        let nct = Math.min(m - 1, n);\n        let nrt = Math.max(0, Math.min(n - 2, m));\n        for (let k = 0; k < Math.max(nct, nrt); k++) {\n            if (k < nct) {\n                s[k] = 0;\n                for (let i = k; i < m; i++)\n                    s[k] = SingularValueDecomposition.hypot(s[k], A[i][k]);\n                if (s[k] != 0.0) {\n                    if (A[k][k] < 0.0)\n                        s[k] = -s[k];\n                    for (let i = k; i < m; i++)\n                        A[i][k] /= s[k];\n                    A[k][k] += 1.0;\n                }\n                s[k] = -s[k];\n            }\n            for (let j = k + 1; j < n; j++) {\n                if ((k < nct) && (s[k] != 0.0)) {\n                    let t = 0;\n                    for (let i = k; i < m; i++)\n                        t += A[i][k] * A[i][j];\n                    t = -t / A[k][k];\n                    for (let i = k; i < m; i++)\n                        A[i][j] += t * A[i][k];\n                }\n                e[j] = A[k][j];\n            }\n            if (wantu && (k < nct)) {\n                for (let i = k; i < m; i++)\n                    U[i][k] = A[i][k];\n            }\n            if (k < nrt) {\n                e[k] = 0;\n                for (let i = k + 1; i < n; i++)\n                    e[k] = SingularValueDecomposition.hypot(e[k], e[i]);\n                if (e[k] != 0.0) {\n                    if (e[k + 1] < 0.0)\n                        e[k] = -e[k];\n                    for (let i = k + 1; i < n; i++)\n                        e[i] /= e[k];\n                    e[k + 1] += 1.0;\n                }\n                e[k] = -e[k];\n                if ((k + 1 < m) && (e[k] != 0.0)) {\n                    for (let i = k + 1; i < m; i++)\n                        work[i] = 0.0;\n                    for (let j = k + 1; j < n; j++)\n                        for (let i = k + 1; i < m; i++)\n                            work[i] += e[j] * A[i][j];\n                    for (let j = k + 1; j < n; j++) {\n                        let t = -e[j] / e[k + 1];\n                        for (let i = k + 1; i < m; i++)\n                            A[i][j] += t * work[i];\n                    }\n                }\n                if (wantv) {\n                    for (let i = k + 1; i < n; i++)\n                        V[i][k] = e[i];\n                }\n            }\n        }\n        let p = Math.min(n, m + 1);\n        if (nct < n)\n            s[nct] = A[nct][nct];\n        if (m < p)\n            s[p - 1] = 0.0;\n        if (nrt + 1 < p)\n            e[nrt] = A[nrt][p - 1];\n        e[p - 1] = 0.0;\n        if (wantu) {\n            for (let j = nct; j < nu; j++) {\n                for (let i = 0; i < m; i++)\n                    U[i][j] = 0.0;\n                U[j][j] = 1.0;\n            }\n            for (let k = nct - 1; k >= 0; k--) {\n                if (s[k] != 0.0) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k; i < m; i++)\n                            t += U[i][k] * U[i][j];\n                        t = -t / U[k][k];\n                        for (let i = k; i < m; i++)\n                            U[i][j] += t * U[i][k];\n                    }\n                    for (let i = k; i < m; i++)\n                        U[i][k] = -U[i][k];\n                    U[k][k] = 1.0 + U[k][k];\n                    for (let i = 0; i < k - 1; i++)\n                        U[i][k] = 0.0;\n                }\n                else {\n                    for (let i = 0; i < m; i++)\n                        U[i][k] = 0.0;\n                    U[k][k] = 1.0;\n                }\n            }\n        }\n        if (wantv) {\n            for (let k = n - 1; k >= 0; k--) {\n                if ((k < nrt) && (e[k] != 0.0)) {\n                    for (let j = k + 1; j < nu; j++) {\n                        let t = 0;\n                        for (let i = k + 1; i < n; i++)\n                            t += V[i][k] * V[i][j];\n                        t = -t / V[k + 1][k];\n                        for (let i = k + 1; i < n; i++)\n                            V[i][j] += t * V[i][k];\n                    }\n                }\n                for (let i = 0; i < n; i++)\n                    V[i][k] = 0.0;\n                V[k][k] = 1.0;\n            }\n        }\n        let pp = p - 1;\n        let iter = 0;\n        let eps = Math.pow(2.0, -52.0);\n        let tiny = Math.pow(2.0, -966.0);\n        while (p > 0) {\n            let k, kase;\n            for (k = p - 2; k >= -1; k--) {\n                if (k == -1)\n                    break;\n                if (Math.abs(e[k]) <= tiny + eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                    e[k] = 0.0;\n                    break;\n                }\n            }\n            if (k == p - 2) {\n                kase = 4;\n            }\n            else {\n                let ks;\n                for (ks = p - 1; ks >= k; ks--) {\n                    if (ks == k)\n                        break;\n                    let t = (ks != p ? Math.abs(e[ks]) : 0.) + (ks != k + 1 ? Math.abs(e[ks - 1]) : 0.);\n                    if (Math.abs(s[ks]) <= tiny + eps * t) {\n                        s[ks] = 0.0;\n                        break;\n                    }\n                }\n                if (ks == k)\n                    kase = 3;\n                else if (ks == p - 1)\n                    kase = 1;\n                else {\n                    kase = 2;\n                    k = ks;\n                }\n            }\n            k++;\n            if (kase == 1) {\n                let f = e[p - 2];\n                e[p - 2] = 0.0;\n                for (let j = p - 2; j >= k; j--) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    if (j != k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 2) {\n                let f = e[k - 1];\n                e[k - 1] = 0.0;\n                for (let j = k; j < p; j++) {\n                    let t = SingularValueDecomposition.hypot(s[j], f);\n                    let cs = s[j] / t;\n                    let sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n            }\n            else if (kase == 3) {\n                let scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                let sp = s[p - 1] / scale;\n                let spm1 = s[p - 2] / scale;\n                let epm1 = e[p - 2] / scale;\n                let sk = s[k] / scale;\n                let ek = e[k] / scale;\n                let b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n                let c = (sp * epm1) * (sp * epm1);\n                let shift = 0.0;\n                if ((b != 0.0) || (c != 0.0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0.0)\n                        shift = -shift;\n                    shift = c / (b + shift);\n                }\n                let f = (sk + sp) * (sk - sp) + shift;\n                let g = sk * ek;\n                for (let j = k; j < p - 1; j++) {\n                    let t = SingularValueDecomposition.hypot(f, g);\n                    let cs = f / t;\n                    let sn = g / t;\n                    if (j != k)\n                        e[j - 1] = t;\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (let i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = SingularValueDecomposition.hypot(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n            }\n            else if (kase == 4) {\n                if (s[k] <= 0.0) {\n                    s[k] = (s[k] < 0.0 ? -s[k] : 0.0);\n                    if (wantv) {\n                        for (let i = 0; i <= pp; i++)\n                            V[i][k] = -V[i][k];\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1])\n                        break;\n                    let t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (let i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (let i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n            }\n        }\n    }\n    getU() {\n        return Matrix.fromArray(this.U);\n    }\n    getV() {\n        return Matrix.fromArray(this.V);\n    }\n    getSingularValues() {\n        return this.s;\n    }\n    getS() {\n        const { n } = this;\n        let X = new Matrix(n, n, 0);\n        let S = X.A;\n        for (let i = 0; i < n; i++)\n            S[i][i] = this.s[i];\n        return X;\n    }\n    norm2() {\n        return this.s[0];\n    }\n    cond() {\n        const { m, n, s } = this;\n        return s[0] / s[Math.min(m, n) - 1];\n    }\n    rank() {\n        const { m, n, s } = this;\n        let eps = Math.pow(2.0, -52.0);\n        let tol = Math.max(m, n) * s[0] * eps;\n        let r = 0;\n        for (let i = 0; i < s.length; i++)\n            if (s[i] > tol)\n                r++;\n        return r;\n    }\n    static hypot(a, b) {\n        let r;\n        if (Math.abs(a) > Math.abs(b)) {\n            r = b / a;\n            r = Math.abs(a) * Math.sqrt(1 + r * r);\n        }\n        else if (b != 0) {\n            r = a / b;\n            r = Math.abs(b) * Math.sqrt(1 + r * r);\n        }\n        else {\n            r = 0.0;\n        }\n        return r;\n    }\n}\n//# sourceMappingURL=Matrix.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom, domLegacy } from './dom';\nimport { Size } from './Geom';\nimport { Vec } from './Vec';\nexport function safeInt(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = str.startsWith('0x') ? parseInt(str.substring(2), 16) :\n        str.startsWith('#') ? parseInt(str.substring(1), 16) : parseInt(str);\n    return isNaN(val) ? def : val;\n}\nexport function safeFloat(str, def = 0) {\n    if (str == null || str.length == 0)\n        return def;\n    let val = parseFloat(str);\n    return isNaN(val) ? def : val;\n}\nexport function newElement(parent, tag, attr) {\n    let domNew = dom(`<${tag}/>`);\n    if (attr)\n        domNew.attr(attr);\n    domLegacy(parent).append(domNew);\n    return domNew.el;\n}\nexport function addText(parent, text) {\n    let el = dom(parent).el;\n    el.appendChild(document.createTextNode(text));\n}\nexport function plural(count) {\n    return count == 1 ? '' : 's';\n}\nexport function formatDouble(value, sigfig) {\n    if (value == null)\n        return '';\n    let str = value.toPrecision(sigfig);\n    if (str.indexOf('.') > 0) {\n        while (str.endsWith('0'))\n            str = str.substring(0, str.length - 1);\n        if (str.endsWith('.'))\n            str = str.substring(0, str.length - 1);\n    }\n    return str;\n}\nexport function htmlToRGB(col) {\n    if (col == null || col.charAt(0) != '#' || col.length != 7)\n        return null;\n    return parseInt(col.substring(1), 16);\n}\nexport function colourCode(col) {\n    let hex = (col & 0xFFFFFF).toString(16);\n    while (hex.length < 6)\n        hex = '0' + hex;\n    return '#' + hex;\n}\nexport function colourAlpha(col) {\n    let transp = (col >>> 24) & 0xFF;\n    return transp == 0 ? 1 : transp == 0xFF ? 0 : 1 - (transp * (1.0 / 255));\n}\nconst ONE_OVER_255 = 1.0 / 255;\nexport function colourCanvas(col) {\n    if (col == 0xFFFFFF)\n        return 'white';\n    if (col == 0x000000)\n        return 'black';\n    if (col == -1)\n        return null;\n    if (col >= 0 && col <= 0xFFFFFF)\n        return colourCode(col);\n    const t = ((col >> 24) & 0xFF) * ONE_OVER_255;\n    const r = ((col >> 16) & 0xFF);\n    const g = ((col >> 8) & 0xFF);\n    const b = (col & 0xFF);\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + (1 - t) + ')';\n}\nexport function blendRGB(fract, rgb1, rgb2, rgb3) {\n    fract = Math.max(0, Math.min(1, fract));\n    let r1 = ((rgb1 >> 16) & 0xFF) * ONE_OVER_255, g1 = ((rgb1 >> 8) & 0xFF) * ONE_OVER_255, b1 = (rgb1 & 0xFF) * ONE_OVER_255;\n    let r2 = ((rgb2 >> 16) & 0xFF) * ONE_OVER_255, g2 = ((rgb2 >> 8) & 0xFF) * ONE_OVER_255, b2 = (rgb2 & 0xFF) * ONE_OVER_255;\n    let R, G, B;\n    if (rgb3 == null) {\n        let f1 = 1 - fract, f2 = fract;\n        R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n        G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n        B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n    }\n    else {\n        let r3 = ((rgb3 >> 16) & 0xFF) * ONE_OVER_255, g3 = ((rgb3 >> 8) & 0xFF) * ONE_OVER_255, b3 = (rgb3 & 0xFF) * ONE_OVER_255;\n        if (fract < 0.5) {\n            let f2 = fract * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r1 + f2 * r2));\n            G = Math.round(0xFF * (f1 * g1 + f2 * g2));\n            B = Math.round(0xFF * (f1 * b1 + f2 * b2));\n        }\n        else {\n            let f2 = (fract - 0.5) * 2, f1 = 1 - f2;\n            R = Math.round(0xFF * (f1 * r2 + f2 * r3));\n            G = Math.round(0xFF * (f1 * g2 + f2 * g3));\n            B = Math.round(0xFF * (f1 * b2 + f2 * b3));\n        }\n    }\n    return (R << 16) | (G << 8) | B;\n}\nexport function formatDate(date) {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let day = date.getDate(), mon = date.getMonth(), year = date.getFullYear();\n    return day + '-' + MONTHS[mon] + '-' + year;\n}\nexport function nodeText(node) {\n    let ret = '';\n    if (!node)\n        return '';\n    node = node.firstChild;\n    while (node) {\n        if (node.nodeType == 3 || node.nodeType == 4)\n            ret += node.nodeValue;\n        node = node.nextSibling;\n    }\n    return ret;\n}\nexport function isDef(v) {\n    return !(v === null || typeof v === 'undefined');\n}\nexport function notDef(v) {\n    return v === null || typeof v === 'undefined';\n}\nexport function eventCoords(event, container) {\n    let pos = domLegacy(container).offset();\n    let relX = event.pageX - pos.x;\n    let relY = event.pageY - pos.y;\n    return [relX, relY];\n}\nexport function setBoundaryPixels(dom, x, y, w, h) {\n    dom.css({ 'left': x + 'px', 'top': y + 'px', 'width': w + 'px', 'height': h + 'px' });\n}\nexport function getBoundaryPixelsDOM(dom) {\n    let offset = dom.offset();\n    return [offset.x, offset.y, dom.width(), dom.height()];\n}\nexport function getOffsetPixelsDOM(dom) {\n    return [dom.elHTML.offsetLeft, dom.elHTML.offsetTop, dom.elHTML.offsetWidth, dom.elHTML.offsetHeight];\n}\nexport function norm_xy(dx, dy) {\n    return Math.hypot(dx, dy);\n}\nexport function norm_xyz(dx, dy, dz) {\n    return Math.hypot(dx, dy, dz);\n}\nexport function norm2_xy(dx, dy) {\n    return dx * dx + dy * dy;\n}\nexport function norm2_xyz(dx, dy, dz) {\n    return dx * dx + dy * dy + dz * dz;\n}\nexport function signum(v) {\n    return v < 0 ? -1 : v > 0 ? 1 : 0;\n}\nexport function sqr(v) {\n    return v * v;\n}\nexport function invZ(v) { return v == 0 ? 0 : 1.0 / v; }\nexport function fltEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-7 * Math.max(v1, v2); }\nexport function realEqual(v1, v2) { return v1 == v2 || Math.abs(v1 - v2) <= 1E-14 * Math.max(v1, v2); }\nexport function randomInt(size) {\n    if (size <= 1)\n        return 0;\n    return Math.floor(Math.random() * size);\n}\nexport const TWOPI = 2 * Math.PI;\nexport const INV_TWOPI = 1.0 / TWOPI;\nexport const DEGRAD = Math.PI / 180;\nexport const RADDEG = 180 / Math.PI;\nexport function angleNorm(th) {\n    if (th == -Math.PI)\n        return Math.PI;\n    if (th < -Math.PI) {\n        let mod = Math.ceil((-th - Math.PI) * INV_TWOPI);\n        return th + mod * TWOPI;\n    }\n    if (th > Math.PI) {\n        let mod = Math.ceil((th - Math.PI) * INV_TWOPI);\n        return th - mod * TWOPI;\n    }\n    return th;\n}\nexport function angleDiff(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta - (theta > Math.PI ? TWOPI : 0) + (theta <= -Math.PI ? TWOPI : 0);\n}\nexport function angleDiffPos(th1, th2) {\n    let theta = angleNorm(th1) - angleNorm(th2);\n    return theta + (theta < 0 ? TWOPI : 0);\n}\nexport function sortAngles(theta) {\n    if (theta == null || theta.length < 2)\n        return theta;\n    theta = theta.slice(0);\n    for (let n = 0; n < theta.length; n++)\n        theta[n] = angleNorm(theta[n]);\n    Vec.sort(theta);\n    while (true) {\n        let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n        if (angleDiff(b, a) <= angleDiff(c, b))\n            break;\n        for (let n = theta.length - 1; n > 0; n--)\n            theta[n] = theta[n - 1];\n        theta[0] = a;\n    }\n    return theta;\n}\nexport function uniqueAngles(theta, threshold) {\n    theta = sortAngles(theta);\n    for (let n = 1; n < theta.length; n++) {\n        if (Math.abs(angleDiff(theta[n], theta[n - 1])) <= threshold) {\n            theta.splice(n, 1);\n            n--;\n        }\n    }\n    return theta;\n}\nexport function minArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.min(v, a[n]);\n    return v;\n}\nexport function maxArray(a) {\n    if (a == null || a.length == 0)\n        return 0;\n    let v = a[0];\n    for (let n = 1; n < a.length; n++)\n        v = Math.max(v, a[n]);\n    return v;\n}\nexport function findNode(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    while (node) {\n        if (node.nodeName == name)\n            return node;\n        node = node.nextSibling;\n    }\n    return null;\n}\nexport function findNodes(parent, name) {\n    if (parent == null)\n        return null;\n    let node = parent.firstChild;\n    let list = [];\n    while (node) {\n        if (node.nodeName == name)\n            list.push(node);\n        node = node.nextSibling;\n    }\n    return list;\n}\nexport function pathRoundedRect(x1, y1, x2, y2, rad) {\n    let path = new Path2D();\n    path.moveTo(x2 - rad, y1);\n    path.quadraticCurveTo(x2, y1, x2, y1 + rad);\n    path.lineTo(x2, y2 - rad);\n    path.quadraticCurveTo(x2, y2, x2 - rad, y2);\n    path.lineTo(x1 + rad, y2);\n    path.quadraticCurveTo(x1, y2, x1, y2 - rad);\n    path.lineTo(x1, y1 + rad);\n    path.quadraticCurveTo(x1, y1, x1 + rad, y1);\n    path.closePath();\n    return path;\n}\nexport function coordsRoundedRect(x1, y1, x2, y2, rad) {\n    let px = [x2 - rad, x2, x2, x2, x2, x2 - rad, x1 + rad, x1, x1, x1, x1, x1 + rad];\n    let py = [y1, y1, y1 + rad, y2 - rad, y2, y2, y2, y2, y2 - rad, y1 + rad, y1, y1];\n    let ctrl = [false, true, false, false, true, false, false, true, false, false, true, false];\n    return [px, py, ctrl];\n}\nexport function drawLine(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\nexport const ASCENT_FUDGE = 1.4;\nexport function fontSansSerif(ascent) { return `${ascent * ASCENT_FUDGE}px sans-serif`; }\nexport function pixelDensity() {\n    if ('devicePixelRatio' in window && window.devicePixelRatio > 1)\n        return window.devicePixelRatio;\n    return 1;\n}\nexport function clone(data) {\n    if (data == null)\n        return null;\n    if (Array.isArray(data))\n        return data.slice(0);\n    if (typeof data != 'object')\n        return data;\n    let result = {};\n    for (let key in data)\n        result[key] = data[key];\n    return result;\n}\nexport function deepClone(data) {\n    if (data == null)\n        return null;\n    if (typeof data == 'function')\n        return null;\n    if (typeof data != 'object')\n        return data;\n    let result = Array.isArray(data) ? [] : {};\n    for (let key in data) {\n        let val = data[key];\n        result[key] = typeof val === 'object' ? deepClone(val) : val;\n    }\n    return result;\n}\nexport function escapeHTML(text) {\n    if (!text)\n        return '';\n    const map = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' };\n    return text.replace(/[&<>\"']/g, (m) => map[m]);\n}\nexport function orBlank(str) { return str == null ? '' : str; }\nexport function dictValues(dict) {\n    let list = [];\n    for (let key in dict)\n        list.push(dict[key]);\n    return list;\n}\nexport function zip(u, v) {\n    return u.map((a, i) => [a, v[i]]);\n}\nexport function toUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let charcode = str.charCodeAt(n);\n        if (charcode < 0x80)\n            stripe += str.charAt(n);\n        else if (charcode < 0x800) {\n            stripe += String.fromCharCode(0xc0 | (charcode >> 6));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n            stripe += String.fromCharCode(0xe0 | (charcode >> 12));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        else {\n            n++;\n            charcode = 0x10000 + (((charcode & 0x3FF) << 10) | (str.charCodeAt(n) & 0x3FF));\n            stripe += String.fromCharCode(0xf0 | (charcode >> 18));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3F));\n            stripe += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3F));\n            stripe += String.fromCharCode(0x80 | (charcode & 0x3F));\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function fromUTF8(str) {\n    let data = [], stripe = '';\n    const sz = str.length;\n    for (let n = 0; n < sz; n++) {\n        let value = str.charCodeAt(n);\n        if (value < 0x80)\n            stripe += str.charAt(n);\n        else if (value > 0xBF && value < 0xE0) {\n            stripe += String.fromCharCode((value & 0x1F) << 6 | str.charCodeAt(n + 1) & 0x3F);\n            n++;\n        }\n        else if (value > 0xDF && value < 0xF0) {\n            str += String.fromCharCode((value & 0x0F) << 12 | (str.charCodeAt(n + 1) & 0x3F) << 6 | str.charCodeAt(n + 2) & 0x3F);\n            n += 2;\n        }\n        else {\n            let charCode = ((value & 0x07) << 18 | (str.charCodeAt(n + 1) & 0x3F) << 12 | (str.charCodeAt(n + 2) & 0x3F) << 6 | str.charCodeAt(n + 3) & 0x3F) - 0x010000;\n            stripe += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);\n            n += 3;\n        }\n        if (stripe.length > 100) {\n            data.push(stripe);\n            stripe = '';\n        }\n    }\n    data.push(stripe);\n    return data.join('');\n}\nexport function jsonPrettyPrint(json) {\n    let lines = JSON.stringify(json, null, 1).split(/\\n/);\n    for (let n = 0; n < lines.length; n++) {\n        lines[n] = lines[n].trim();\n        if (lines[n].length > 1 && (lines[n].endsWith('{') || lines[n].endsWith('['))) {\n            let ch = lines[n].charAt(lines[n].length - 1);\n            lines[n] = lines[n].substring(0, lines[n].length - 1);\n            lines.splice(n + 1, 0, ch);\n            n--;\n        }\n    }\n    let indent = 0;\n    for (let n = 0; n < lines.length; n++) {\n        let orig = lines[n];\n        if (orig == ']' || orig == '}' || orig == '],' || orig == '},')\n            indent--;\n        lines[n] = '\\t'.repeat(indent) + orig;\n        if (orig == '[' || orig == '{')\n            indent++;\n    }\n    return lines.join('\\n');\n}\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[\"Backspace\"] = \"Backspace\";\n    KeyCode[\"Tab\"] = \"Tab\";\n    KeyCode[\"Enter\"] = \"Enter\";\n    KeyCode[\"Escape\"] = \"Escape\";\n    KeyCode[\"Space\"] = \" \";\n    KeyCode[\"PageUp\"] = \"PageUp\";\n    KeyCode[\"PageDown\"] = \"PageDown\";\n    KeyCode[\"End\"] = \"End\";\n    KeyCode[\"Home\"] = \"Home\";\n    KeyCode[\"Left\"] = \"ArrowLeft\";\n    KeyCode[\"Right\"] = \"ArrowRight\";\n    KeyCode[\"Up\"] = \"ArrowUp\";\n    KeyCode[\"Down\"] = \"ArrowDown\";\n    KeyCode[\"Delete\"] = \"Delete\";\n    KeyCode[\"Insert\"] = \"Insert\";\n})(KeyCode || (KeyCode = {}));\nexport function readTextURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('GET', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => resolve(request.response.toString());\n            request.onerror = () => resolve(null);\n            request.send();\n        });\n    });\n}\nexport function postJSONURL(url, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let request = new XMLHttpRequest();\n            request.open('POST', url.toString(), true);\n            request.responseType = 'text';\n            request.onload = () => {\n                let txt = request.response.toString();\n                try {\n                    resolve(JSON.parse(txt));\n                }\n                catch (ex) {\n                    let snippet = txt.substring(0, Math.min(200, txt.length)) + (txt.length > 200 ? '...etc...' : '');\n                    reject('JSON parsing error on result:' + ex + ' for text: ' + snippet);\n                }\n            };\n            request.onerror = () => reject('Failed to request URL: ' + url);\n            request.send(JSON.stringify(params));\n        });\n    });\n}\nexport function yieldDOM() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve()));\n    });\n}\nexport function pause(seconds) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => setTimeout(() => resolve(), seconds * 1000));\n    });\n}\nlet staticScrollerSize = null;\nexport function empiricalScrollerSize() {\n    if (staticScrollerSize)\n        return staticScrollerSize;\n    let outer = dom('<div/>').css({ 'visibility': 'hidden', 'width': '100px', 'height': '100px', 'overflow': 'scroll' }).appendTo(dom(document.body));\n    let inner = dom('<div/>').css({ 'width': '100%', 'height': '100%' }).appendTo(outer);\n    staticScrollerSize = new Size(100 - inner.elHTML.offsetWidth, 100 - inner.elHTML.offsetHeight);\n    outer.remove();\n    return staticScrollerSize;\n}\nexport function stringSimilarityPermutations(str1, str2) {\n    if (!str1 || !str2)\n        return 0;\n    const ch1 = Array.from(str1), len1 = ch1.length;\n    const ch2 = Array.from(str2), len2 = ch2.length;\n    let levenshteinDistance = (sz1, sz2) => {\n        let dist = [];\n        for (let i = 0; i <= sz1; i++) {\n            dist.push(Vec.numberArray(0, sz2 + 1));\n            dist[i][0] = i;\n        }\n        for (let j = 1; j <= sz2; j++)\n            dist[0][j] = j;\n        for (let j = 1; j <= sz2; j++)\n            for (let i = 1; i <= sz1; i++) {\n                let cost = ch1[i - 1] == ch2[j - 1] ? 0 : 1;\n                dist[i][j] = Math.min(Math.min(dist[i - 1][j] + 1, dist[i][j - 1] + 1), dist[i - 1][j - 1] + cost);\n            }\n        return dist[sz1][sz2];\n    };\n    let cost = ch1[len1 - 1] == ch2[len2 - 1] ? 0 : 1;\n    let lev1 = levenshteinDistance(len1 - 1, len2) + 1;\n    let lev2 = levenshteinDistance(len1, len2 - 1) + 1;\n    let lev3 = levenshteinDistance(len1 - 1, len2 - 1) + cost;\n    return Math.min(Math.min(lev1, lev2), lev3);\n}\n//# sourceMappingURL=util.js.map","import { norm2_xy, norm_xy, sqr } from './util';\nimport { Vec } from './Vec';\nconst EPSILON = Math.pow(2, -52);\nexport class Triangulation2D {\n    constructor(px, py) {\n        this.px = px;\n        this.py = py;\n        this.numTriangles = 0;\n        this.edgeStack = Vec.numberArray(0, 512);\n        this.hull = null;\n        this.px = px;\n        this.py = py;\n        this.sz = px.length;\n        let maxTriangles = Math.max(2 * this.sz - 5, 0);\n        this.triangles = new Array(maxTriangles * 3);\n        this.halfedges = new Array(maxTriangles * 3);\n        this.hashSize = Math.ceil(Math.sqrt(this.sz));\n        this.hullPrev = new Array(this.sz);\n        this.hullNext = new Array(this.sz);\n        this.hullTri = new Array(this.sz);\n        this.hullHash = Vec.numberArray(-1, this.hashSize);\n        this.ids = new Array(this.sz);\n        this.dists = new Array(this.sz);\n        this.update();\n    }\n    trimConcave(threshold) {\n        const threshSq = sqr(threshold);\n        const { sz, px, py } = this;\n        let tri = this.triangles.slice(0);\n        let edge = [];\n        for (let n = 0, i = 0; i < tri.length; n++, i += 3) {\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]));\n            edge.push(sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]));\n            edge.push(sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]));\n        }\n        let uniqueEdges = Vec.uniqueUnstable(edge);\n        for (let n = 0; n < edge.length; n++)\n            edge[n] = uniqueEdges.indexOf(edge[n]);\n        let edgeCount = new Array(edge.length);\n        while (true) {\n            const ntri = tri.length / 3;\n            edgeCount.fill(0);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                edgeCount[edge[i + 0]]++;\n                edgeCount[edge[i + 1]]++;\n                edgeCount[edge[i + 2]]++;\n            }\n            let mask = Vec.booleanArray(true, ntri);\n            for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n                const c1 = edgeCount[edge[i + 0]];\n                const c2 = edgeCount[edge[i + 1]];\n                const c3 = edgeCount[edge[i + 2]];\n                const i1 = tri[i], i2 = tri[i + 1], i3 = tri[i + 2];\n                if (c1 == 1 && c2 != 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i2], py[i1] - py[i2]) < threshSq;\n                else if (c1 != 1 && c2 == 1 && c3 != 1)\n                    mask[n] = norm2_xy(px[i1] - px[i3], py[i1] - py[i3]) < threshSq;\n                else if (c1 != 1 && c2 != 1 && c3 == 1)\n                    mask[n] = norm2_xy(px[i2] - px[i3], py[i2] - py[i3]) < threshSq;\n            }\n            if (Vec.allTrue(mask))\n                break;\n            let repTri = new Array(Vec.maskCount(mask) * 3);\n            let repEdge = new Array(Vec.maskCount(mask) * 3);\n            for (let n = 0, i = 0, j = 0, k = 0; n < ntri; n++, i += 3)\n                if (mask[n]) {\n                    repTri[j++] = tri[i];\n                    repTri[j++] = tri[i + 1];\n                    repTri[j++] = tri[i + 2];\n                    repEdge[k++] = edge[i];\n                    repEdge[k++] = edge[i + 1];\n                    repEdge[k++] = edge[i + 2];\n                }\n            tri = repTri;\n            edge = repEdge;\n        }\n        return tri;\n    }\n    traceOutline(tri) {\n        const npt = tri.length, ntri = npt / 3;\n        const { sz, px, py } = this;\n        let edgeCount = new Map();\n        for (let n = 0, i = 0; n < ntri; n++, i += 3) {\n            const e1 = sz * Math.min(tri[i + 0], tri[i + 1]) + Math.max(tri[i + 0], tri[i + 1]);\n            const e2 = sz * Math.min(tri[i + 0], tri[i + 2]) + Math.max(tri[i + 0], tri[i + 2]);\n            const e3 = sz * Math.min(tri[i + 1], tri[i + 2]) + Math.max(tri[i + 1], tri[i + 2]);\n            edgeCount.set(e1, (edgeCount.get(e1) || 0) + 1);\n            edgeCount.set(e2, (edgeCount.get(e2) || 0) + 1);\n            edgeCount.set(e3, (edgeCount.get(e3) || 0) + 1);\n        }\n        let edgePairs = [];\n        for (let entry of edgeCount.entries())\n            if (entry[1] == 1) {\n                const e = entry[0];\n                const i1 = Math.floor(e / sz), i2 = e % sz;\n                edgePairs.push(i1);\n                edgePairs.push(i2);\n            }\n        const idx = Vec.uniqueUnstable(edgePairs);\n        const isz = idx.length;\n        const idxMap = new Map();\n        for (let n = 0; n < isz; n++)\n            idxMap.set(idx[n], n);\n        let g1 = Vec.numberArray(-1, isz), g2 = Vec.numberArray(-1, isz);\n        for (let n = 0; n < edgePairs.length; n += 2) {\n            const i1 = idxMap.get(edgePairs[n]), i2 = idxMap.get(edgePairs[n + 1]);\n            if (g1[i1] < 0)\n                g1[i1] = i2;\n            else\n                g2[i1] = i2;\n            if (g1[i2] < 0)\n                g1[i2] = i1;\n            else\n                g2[i2] = i1;\n        }\n        let mask = Vec.booleanArray(false, isz);\n        let sequence = new Array(isz);\n        sequence[0] = 0;\n        mask[0] = true;\n        for (let n = 1; n < isz; n++) {\n            const i = sequence[n - 1];\n            if (!mask[g1[i]])\n                sequence[n] = g1[i];\n            else\n                sequence[n] = g2[i];\n            mask[sequence[n]] = true;\n        }\n        return Vec.idxGet(idx, sequence);\n    }\n    update() {\n        const sz = this.sz;\n        let { px, py, ids, dists, triangles, halfedges } = this;\n        const minX = Vec.min(px), minY = Vec.min(py);\n        const maxX = Vec.max(px), maxY = Vec.max(py);\n        for (let n = 0; n < sz; n++)\n            ids[n] = n;\n        this.centreX = 0.5 * (minX + maxX);\n        this.centreY = 0.5 * (minY + maxY);\n        let i0 = 0, i1 = 0, i2 = 0;\n        let minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            const d = norm_xy(this.centreX - px[n], this.centreY - py[n]);\n            if (d < minDist) {\n                i0 = n;\n                minDist = d;\n            }\n        }\n        const i0x = px[i0], i0y = py[i0];\n        minDist = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0)\n                continue;\n            const d = norm_xy(i0x - px[n], i0y - py[n]);\n            if (d < minDist && d > 0) {\n                i1 = n;\n                minDist = d;\n            }\n        }\n        let i1x = px[i1], i1y = py[i1];\n        let minRadius = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < sz; n++) {\n            if (n == i0 || n == i1)\n                continue;\n            let r = this.circumRadius(i0x, i0y, i1x, i1y, px[n], py[n]);\n            if (r < minRadius) {\n                i2 = n;\n                minRadius = r;\n            }\n        }\n        let i2x = px[i2], i2y = py[i2];\n        if (!Number.isFinite(minRadius)) {\n            for (let n = 0; n < sz; n++) {\n                dists[n] = px[n] - px[0];\n                if (dists[n] == 0)\n                    dists[n] = py[n] - py[0];\n            }\n            this.quicksort(0, sz - 1);\n            let hull = new Array(sz);\n            let j = 0;\n            let d0 = Number.NEGATIVE_INFINITY;\n            for (let n = 0; n < sz; n++) {\n                let id = ids[n];\n                if (dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = dists[id];\n                }\n            }\n            this.hull = hull.slice(0, j);\n            triangles = [];\n            halfedges = [];\n            return;\n        }\n        if (this.orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            let i = i1;\n            let x = i1x, y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n        this.pickCircumCentre(i0x, i0y, i1x, i1y, i2x, i2y);\n        for (let n = 0; n < sz; n++)\n            dists[n] = norm_xy(px[n] - this.centreX, py[n] - this.centreY);\n        this.quicksort(0, sz - 1);\n        this.hullStart = i0;\n        let hullSize = 3;\n        const { hullNext, hullPrev, hullTri, hullHash, hashSize } = this;\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n        hullHash.fill(-1);\n        hullHash[this.hashKey(i0x, i0y)] = i0;\n        hullHash[this.hashKey(i1x, i1y)] = i1;\n        hullHash[this.hashKey(i2x, i2y)] = i2;\n        this.numTriangles = 0;\n        this.addTriangle(i0, i1, i2, -1, -1, -1);\n        let xp = 0, yp = 0;\n        for (let k = 0; k < ids.length; k++) {\n            let i = ids[k];\n            let x = px[i], y = py[i];\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON)\n                continue;\n            xp = x;\n            yp = y;\n            if (i == i0 || i == i1 || i == i2)\n                continue;\n            let start = 0;\n            for (let j = 0, key = this.hashKey(x, y); j < hashSize; j++) {\n                start = hullHash[(key + j) % hashSize];\n                if (start >= 0 && start != hullNext[start])\n                    break;\n            }\n            start = hullPrev[start];\n            let e = start, q = hullNext[e];\n            while (!this.orient(x, y, px[e], py[e], px[q], py[q])) {\n                e = q;\n                if (e == start) {\n                    e = -1;\n                    break;\n                }\n                q = hullNext[e];\n            }\n            if (e < 0)\n                continue;\n            let t = this.addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n            hullTri[i] = this.legalise(t + 2);\n            hullTri[e] = t;\n            hullSize++;\n            let n = hullNext[e];\n            q = hullNext[n];\n            while (this.orient(x, y, px[n], py[n], px[q], py[q])) {\n                t = this.addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this.legalise(t + 2);\n                hullNext[n] = n;\n                hullSize--;\n                n = q;\n                q = hullNext[n];\n            }\n            if (e == start) {\n                q = hullPrev[e];\n                while (this.orient(x, y, px[q], py[q], px[e], py[e])) {\n                    t = this.addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this.legalise(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e;\n                    hullSize--;\n                    e = q;\n                    q = hullPrev[e];\n                }\n            }\n            this.hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n            hullHash[this.hashKey(x, y)] = i;\n            hullHash[this.hashKey(px[e], py[e])] = e;\n        }\n        this.hull = new Array(hullSize);\n        for (let n = 0, e = this.hullStart; n < hullSize; n++) {\n            this.hull[n] = e;\n            e = hullNext[e];\n        }\n        this.triangles = triangles.slice(0, this.numTriangles);\n        this.halfedges = halfedges.slice(0, this.numTriangles);\n    }\n    hashKey(x, y) {\n        return Math.floor(this.pseudoAngle(x - this.centreX, y - this.centreY) * this.hashSize) % this.hashSize;\n    }\n    legalise(a) {\n        let i = 0;\n        let ar = 0;\n        while (true) {\n            let b = this.halfedges[a];\n            let a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n            if (b < 0) {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n                continue;\n            }\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n            const { px, py, triangles, halfedges } = this;\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n            let illegal = this.inCircle(px[p0], py[p0], px[pr], py[pr], px[pl], py[pl], px[p1], py[p1]);\n            if (illegal) {\n                this.triangles[a] = p1;\n                this.triangles[b] = p0;\n                const hbl = halfedges[bl];\n                if (hbl < 0) {\n                    let e = this.hullStart;\n                    do {\n                        if (this.hullTri[e] == bl) {\n                            this.hullTri[e] = a;\n                            break;\n                        }\n                        e = this.hullPrev[e];\n                    } while (e != this.hullStart);\n                }\n                this.link(a, hbl);\n                this.link(b, halfedges[ar]);\n                this.link(ar, bl);\n                const br = b0 + (b + 1) % 3;\n                if (i < this.edgeStack.length)\n                    this.edgeStack[i++] = br;\n            }\n            else {\n                if (i == 0)\n                    break;\n                a = this.edgeStack[--i];\n            }\n        }\n        return ar;\n    }\n    link(a, b) {\n        this.halfedges[a] = b;\n        if (b >= 0)\n            this.halfedges[b] = a;\n    }\n    addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.numTriangles;\n        this.triangles[t] = i0;\n        this.triangles[t + 1] = i1;\n        this.triangles[t + 2] = i2;\n        this.link(t, a);\n        this.link(t + 1, b);\n        this.link(t + 2, c);\n        this.numTriangles += 3;\n        return t;\n    }\n    pseudoAngle(dx, dy) {\n        const p = dx / (Math.abs(dx) + Math.abs(dy));\n        return (dy > 0 ? 3 - p : 1 + p) / 4;\n    }\n    orientIfSure(px, py, rx, ry, qx, qy) {\n        const l = (ry - py) * (qx - px);\n        const r = (rx - px) * (qy - py);\n        return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n    }\n    orient(rx, ry, qx, qy, px, py) {\n        let o = this.orientIfSure(px, py, rx, ry, qx, qy);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(rx, ry, qx, qy, px, py);\n        if (o != 0)\n            return o < 0;\n        o = this.orientIfSure(qx, qy, px, py, rx, ry);\n        return o < 0;\n    }\n    inCircle(ax, ay, bx, by, cx, cy, px, py) {\n        const dx = ax - px;\n        const dy = ay - py;\n        const ex = bx - px;\n        const ey = by - py;\n        const fx = cx - px;\n        const fy = cy - py;\n        const ap = dx * dx + dy * dy;\n        const bp = ex * ex + ey * ey;\n        const cp = fx * fx + fy * fy;\n        return dx * (ey * cp - bp * fy) -\n            dy * (ex * cp - bp * fx) +\n            ap * (ex * fy - ey * fx) < 0;\n    }\n    circumRadius(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        const x = (ey * bl - dy * cl) * d;\n        const y = (dx * cl - ex * bl) * d;\n        return x * x + y * y;\n    }\n    pickCircumCentre(ax, ay, bx, by, cx, cy) {\n        const dx = bx - ax;\n        const dy = by - ay;\n        const ex = cx - ax;\n        const ey = cy - ay;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        const d = 0.5 / (dx * ey - dy * ex);\n        this.centreX = ax + (ey * bl - dy * cl) * d;\n        this.centreY = ay + (dx * cl - ex * bl) * d;\n    }\n    quicksort(left, right) {\n        const { ids, dists } = this;\n        if (right - left <= 20) {\n            for (let i = left + 1; i <= right; i++) {\n                const temp = ids[i];\n                const tempDist = dists[temp];\n                let j = i - 1;\n                while (j >= left && dists[ids[j]] > tempDist)\n                    ids[j + 1] = ids[j--];\n                ids[j + 1] = temp;\n            }\n        }\n        else {\n            let median = (left + right) >> 1;\n            let i = left + 1;\n            let j = right;\n            Vec.swap(ids, median, i);\n            if (dists[ids[left]] > dists[ids[right]])\n                Vec.swap(ids, left, right);\n            if (dists[ids[i]] > dists[ids[right]])\n                Vec.swap(ids, i, right);\n            if (dists[ids[left]] > dists[ids[i]])\n                Vec.swap(ids, left, i);\n            let temp = ids[i];\n            const tempDist = dists[temp];\n            while (true) {\n                do\n                    i++;\n                while (dists[ids[i]] < tempDist);\n                do\n                    j--;\n                while (dists[ids[j]] > tempDist);\n                if (j < i)\n                    break;\n                Vec.swap(ids, i, j);\n            }\n            ids[left + 1] = ids[j];\n            ids[j] = temp;\n            if (right - i + 1 >= j - left) {\n                this.quicksort(i, right);\n                this.quicksort(left, j - 1);\n            }\n            else {\n                this.quicksort(left, j - 1);\n                this.quicksort(i, right);\n            }\n        }\n    }\n}\n//# sourceMappingURL=Triangulation2D.js.map","import { Matrix, SingularValueDecomposition } from './Matrix';\nimport { Triangulation2D } from './Triangulation2D';\nimport { angleDiff, angleDiffPos, angleNorm, fltEqual, maxArray, minArray, norm2_xy, norm_xy, realEqual, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nexport class GeomUtil {\n    static pointInPolygon(x, y, px, py) {\n        if (x < minArray(px) || x > maxArray(px) || y < minArray(py) || y > maxArray(py))\n            return false;\n        let sz = px.length;\n        for (let n = 0; n < sz; n++)\n            if (px[n] == x && py[n] == y)\n                return true;\n        let phase = false;\n        for (let n = 0; n < sz; n++) {\n            let x1 = px[n], y1 = py[n], x2 = px[n + 1 < sz ? n + 1 : 0], y2 = py[n + 1 < sz ? n + 1 : 0];\n            if (y > Math.min(y1, y2) && y <= Math.max(y1, y2) && x <= Math.max(x1, x2) && y1 != y2) {\n                let intr = (y - y1) * (x2 - x1) / (y2 - y1) + x1;\n                if (x1 == x2 || x <= intr)\n                    phase = !phase;\n            }\n        }\n        return phase;\n    }\n    static areLinesParallel(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let dxa = x2 - x1, dya = y2 - y1, dxb = x4 - x3, dyb = y4 - y3;\n        let xmajorA = Math.abs(dxa) > Math.abs(dya), xmajorB = Math.abs(dxb) > Math.abs(dyb);\n        if (xmajorA != xmajorB)\n            return false;\n        const EPS = 1E-6;\n        if (xmajorA)\n            return Math.abs(dya / dxa - dyb / dxb) < EPS;\n        else\n            return Math.abs(dxa / dya - dxb / dyb) < EPS;\n    }\n    static lineIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        let u = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\n        return [x1 + u * (x2 - x1), y1 + u * (y2 - y1)];\n    }\n    static isPointOnLineSeg(px, py, x1, y1, x2, y2) {\n        if (px < Math.min(x1, x2) || px > Math.max(x1, x2) || py < Math.min(y1, y2) || py > Math.max(y1, y2))\n            return false;\n        if ((px == x1 && py == y1) || (px == x2 && py == y2))\n            return true;\n        let dx = x2 - x1, dy = y2 - y1;\n        if (Math.abs(dx) > Math.abs(dy))\n            return realEqual(py, (dy / dx) * (px - x1) + y1);\n        else\n            return realEqual(px, (dx / dy) * (py - y1) + x1);\n    }\n    static pointLineDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        return Math.abs(dy * px - dx * py + x2 * y1 - y2 * x1) / norm_xy(dx, dy);\n    }\n    static pointLineSegDistance(px, py, x1, y1, x2, y2) {\n        let dx = x2 - x1, dy = y2 - y1;\n        let t = ((px - x1) * dx + (py - y1) * dy) / norm2_xy(dx, dy);\n        t = Math.max(0, Math.min(1, t));\n        let tx = x1 + t * dx, ty = y1 + t * dy;\n        return norm_xy(px - tx, py - ty);\n    }\n    static doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (Math.max(x1, x2) < Math.min(x3, x4) || Math.max(y1, y2) < Math.min(y3, y4))\n            return false;\n        if (Math.min(x1, x2) > Math.max(x3, x4) || Math.min(y1, y2) > Math.max(y3, y4))\n            return false;\n        let ax = x2 - x1, ay = y2 - y1, bx = x4 - x3, by = y4 - y3;\n        if (fltEqual(norm2_xy(ax, ay), 0) || fltEqual(norm2_xy(bx, by), 0))\n            return false;\n        if (Math.abs(ay) > Math.abs(ax) && Math.abs(by) > Math.abs(bx)) {\n            if (fltEqual(ax / ay - bx / by, 0))\n                return false;\n        }\n        else if (Math.abs(ax) > Math.abs(ay) && Math.abs(bx) > Math.abs(by)) {\n            if (fltEqual(ay / ax - by / bx, 0))\n                return false;\n        }\n        if ((x1 == x3 && y1 == y3) || (x1 == x4 && y1 == y4) || (x2 == x3 && y2 == y3) || (x2 == x4 && y2 == y4))\n            return true;\n        if ((x1 == x2 || x3 == x4) && (x1 == x3 || x1 == x4 || x2 == x3 || x2 == x4))\n            return true;\n        if ((y1 == y2 || y3 == y4) && (y1 == y3 || y1 == y4 || y2 == y3 || y2 == y4))\n            return true;\n        let x4_x3 = bx, y4_y3 = by, x2_x1 = ax, y2_y1 = ay, x1_x3 = x1 - x3, y1_y3 = y1 - y3;\n        let nx = x4_x3 * y1_y3 - y4_y3 * x1_x3;\n        let ny = x2_x1 * y1_y3 - y2_y1 * x1_x3;\n        let dn = y4_y3 * x2_x1 - x4_x3 * y2_y1;\n        if (dn == 0)\n            return false;\n        if (dn < 0) {\n            dn = -dn;\n            nx = -nx;\n            ny = -ny;\n        }\n        return nx >= 0 && nx <= dn && ny >= 0 && ny <= dn;\n    }\n    static rectsIntersect(x1, y1, w1, h1, x2, y2, w2, h2) {\n        if (x1 <= x2 && x1 + w1 >= x2 + w2 && y1 <= y2 && y1 + h1 >= y2 + h2)\n            return true;\n        if (x2 <= x1 && x2 + w2 >= x1 + w1 && y2 <= y1 && y2 + h2 >= y1 + h1)\n            return true;\n        if (x1 + w1 < x2 || x2 + w2 < x1 || y1 + h1 < y2 || y2 + h2 < y1)\n            return false;\n        return true;\n    }\n    static sortAngles(theta) {\n        if (theta == null || theta.length < 2)\n            return theta;\n        theta = theta.slice(0);\n        for (let n = 0; n < theta.length; n++)\n            theta[n] = angleNorm(theta[n]);\n        if (theta.length == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [theta[1], theta[0]];\n            return theta;\n        }\n        Vec.sort(theta);\n        while (true) {\n            let a = theta[theta.length - 1], b = theta[0], c = theta[1];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            for (let n = theta.length - 1; n > 0; n--)\n                theta[n] = theta[n - 1];\n            theta[0] = a;\n        }\n        return theta;\n    }\n    static idxSortAngles(theta) {\n        const sz = Vec.len(theta);\n        if (theta == null || sz < 2)\n            return Vec.identity0(sz);\n        if (sz == 2) {\n            if (angleDiffPos(theta[1], theta[0]) > Math.PI)\n                return [1, 0];\n            else\n                return [0, 1];\n        }\n        theta = Vec.duplicate(theta);\n        for (let n = 0; n < sz; n++)\n            theta[n] = angleNorm(theta[n]);\n        let idx = Vec.idxSort(theta);\n        while (true) {\n            let a = theta[idx[sz - 1]], b = theta[idx[0]], c = theta[idx[1]];\n            if (angleDiff(b, a) <= angleDiff(c, b))\n                break;\n            let last = idx.pop();\n            idx.unshift(last);\n        }\n        return idx;\n    }\n    static uniqueAngles(theta, threshold) {\n        let ang = GeomUtil.sortAngles(theta), ret = [];\n        ret.push(ang[0]);\n        for (let n = 1; n < ang.length; n++) {\n            if (Math.abs(angleDiff(ang[n], ang[n - 1])) > threshold)\n                ret.push(ang[n]);\n        }\n        return ret;\n    }\n    static thetaObtuse(th1, th2) {\n        let dth = th2 - th1;\n        while (dth < -Math.PI)\n            dth += 2 * Math.PI;\n        while (dth > Math.PI)\n            dth -= 2 * Math.PI;\n        return dth > 0 ? th1 - 0.5 * (2 * Math.PI - dth) : th1 + 0.5 * (2 * Math.PI + dth);\n    }\n    static emergentAngle(theta) {\n        let len = theta.length;\n        if (len == 1)\n            return theta[0];\n        if (len == 2)\n            return 0.5 * (theta[0] + theta[1]);\n        Vec.sort(theta);\n        let bottom = 0;\n        let behind = angleDiffPos(theta[0], theta[len - 1]);\n        for (let n = 1; n < len; n++) {\n            let delta = angleDiffPos(theta[n], theta[n - 1]);\n            if (delta > behind) {\n                bottom = n;\n                behind = delta;\n            }\n        }\n        let sum = 0;\n        for (let n = 0; n < len; n++) {\n            let delta = theta[n] - theta[bottom];\n            if (delta < 0)\n                delta += TWOPI;\n            sum += delta;\n        }\n        return sum / len + theta[bottom];\n    }\n    static dotProduct(v1, v2) {\n        return v1[0] * v2[0] + v1[1] * v2[1] + v1[2] * v2[2];\n    }\n    static crossProduct(v1, v2) {\n        const x = v1[1] * v2[2] - v1[2] * v2[1];\n        const y = v1[2] * v2[0] - v1[0] * v2[2];\n        const z = v1[0] * v2[1] - v1[1] * v2[0];\n        return [x, y, z];\n    }\n    static affineTranslate(dx, dy) {\n        return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n    }\n    static affineMirror(xaxis, yaxis) {\n        return [[xaxis ? -1 : 1, 0, 0], [0, yaxis ? -1 : 1, 0], [0, 0, 1]];\n    }\n    static affineScale(sx, sy) {\n        return [[sx, 0, 0], [0, sy, 0], [0, 0, 1]];\n    }\n    static affineRotate(theta) {\n        let cos = Math.cos(theta), sin = Math.sin(theta);\n        return [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n    }\n    static affineCompose(A, B) {\n        let tfm = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n        let Acol = [0, 0, 0];\n        for (let j = 0; j < 3; j++) {\n            for (let k = 0; k < 3; k++)\n                Acol[k] = A[k][j];\n            for (let i = 0; i < 3; i++) {\n                let Brow = B[i];\n                let s = 0;\n                for (let k = 0; k < 3; k++)\n                    s += Acol[k] * Brow[k];\n                tfm[i][j] = s;\n            }\n        }\n        return tfm;\n    }\n    static applyAffine(x, y, tfm) {\n        return [x * tfm[0][0] + y * tfm[0][1] + tfm[0][2], x * tfm[1][0] + y * tfm[1][1] + tfm[1][2]];\n    }\n    static applyAffineArray(x, y, tfm) {\n        for (let n = 0; n < x.length; n++)\n            [x[n], y[n]] = this.applyAffine(x[n], y[n], tfm);\n    }\n    static isAffineMirror(tfm) {\n        let a = tfm[0][0], b = tfm[0][1], c = tfm[0][2];\n        let d = tfm[1][0], e = tfm[1][1], f = tfm[1][2];\n        let g = tfm[2][0], h = tfm[2][1], i = tfm[2][2];\n        return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h < 0;\n    }\n    static magnitude2(v) {\n        return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n    }\n    static magnitude(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n    }\n    static dist2(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return dx * dx + dy * dy + dz * dz;\n    }\n    static dist(v1, v2) {\n        let dx = v1[0] - v2[0], dy = v1[1] - v2[1], dz = v1[2] - v2[2];\n        return Math.sqrt(dx * dx + dy * dy + dz * dz);\n    }\n    static normalise(v) {\n        const dsq = v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n        if (dsq == 0)\n            return;\n        const inv = 1.0 / Math.sqrt(dsq);\n        v[0] *= inv;\n        v[1] *= inv;\n        v[2] *= inv;\n    }\n    static normalised(v) {\n        let ret = v.slice(0);\n        this.normalise(ret);\n        return ret;\n    }\n    static acuteAngle(v1, v2) {\n        let mag1 = this.magnitude(v1), mag2 = this.magnitude(v2);\n        if (mag1 == 0 || mag2 == 0)\n            return 0;\n        let dot = this.dotProduct(v1, v2);\n        let cosTheta = dot / (mag1 * mag2);\n        cosTheta = Math.max(-1, Math.min(1, cosTheta));\n        return Math.acos(cosTheta);\n    }\n    static arcControlPoints(rad, x1, y1, x2, y2) {\n        let t1x = -y1, t1y = x1;\n        let t2x = y2, t2y = -x2;\n        let dx = 0.5 * (x1 + x2);\n        let dy = 0.5 * (y1 + y2);\n        let tx = 3 / 8 * (t1x + t2x);\n        let ty = 3 / 8 * (t1y + t2y);\n        let a = tx * tx + ty * ty;\n        let b = dx * tx + dy * ty;\n        let c = dx * dx + dy * dy - rad * rad;\n        let D = b * b - a * c;\n        let k = (Math.sqrt(D) - b) / a;\n        return [x1 + k * t1x, y1 + k * t1y, x2 + k * t2x, y2 + k * t2y];\n    }\n    static createBezierEllipse(cx, cy, rw, rh, theta) {\n        let nseg = 24, npt = 2 * nseg + 1;\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        let incrAlpha = TWOPI / nseg;\n        let px = new Array(npt), py = new Array(npt);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            px[n * 2] = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta + cx;\n            py[n * 2] = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta + cy;\n        }\n        px[npt - 1] = px[0];\n        py[npt - 1] = py[0];\n        let smooth = 0.3;\n        for (let n = 0; n < nseg; n++) {\n            let n1 = (n - 1 + nseg) % nseg;\n            let n2 = n;\n            let n3 = (n + 1) % nseg;\n            let n4 = (n + 2) % nseg;\n            let x1 = px[n1 * 2], x2 = px[n2 * 2], x3 = px[n3 * 2], x4 = px[n4 * 2];\n            let y1 = py[n1 * 2], y2 = py[n2 * 2], y3 = py[n3 * 2], y4 = py[n4 * 2];\n            px[n * 2 + 1] = 0.5 * (x2 + x3 + smooth * (x2 - x1 + x3 - x4));\n            py[n * 2 + 1] = 0.5 * (y2 + y3 + smooth * (y2 - y1 + y3 - y4));\n        }\n        let ctrl = new Array(npt);\n        for (let n = 0; n < npt; n++)\n            ctrl[n] = (n & 1) == 1;\n        return { px, py, ctrl };\n    }\n    static fitCircle(x, y) {\n        let dsq = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < x.length; n++)\n            dsq = Math.min(dsq, norm2_xy(x[n], y[n]));\n        return Math.sqrt(dsq);\n    }\n    static fitEllipse(px, py, minX, minY, maxX, maxY) {\n        let bestW = 0.5 * this.fitCircle(px, py), bestH = bestW, bestScore = bestW * bestH;\n        let x = Vec.concat(px, [minX, maxX, 0, 0]);\n        let y = Vec.concat(py, [0, 0, minY, maxY]);\n        const sz = x.length;\n        let shrinkToFit = (whs) => {\n            let dmin = Number.POSITIVE_INFINITY;\n            let invW2 = 1.0 / (whs[0] * whs[0]), invH2 = 1.0 / (whs[1] * whs[1]);\n            for (let n = 0; n < sz; n++)\n                dmin = Math.min(dmin, Math.sqrt(x[n] * x[n] * invW2 + y[n] * y[n] * invH2));\n            if (dmin < 1) {\n                whs[0] *= dmin;\n                whs[1] *= dmin;\n            }\n            whs[2] = whs[0] * whs[1];\n        };\n        let mul = 1;\n        let whsX = [0, 0, 0], whsY = [0, 0, 0];\n        while (mul > 0.001) {\n            whsX[0] = bestW * (1 + mul);\n            whsX[1] = bestH;\n            shrinkToFit(whsX);\n            whsY[0] = bestW;\n            whsY[1] = bestH * (1 + mul);\n            shrinkToFit(whsY);\n            let anything = false;\n            if (whsX[2] > bestScore) {\n                bestW = whsX[0];\n                bestH = whsX[1];\n                bestScore = whsX[2];\n                anything = true;\n            }\n            if (whsY[2] > bestScore) {\n                bestW = whsY[0];\n                bestH = whsY[1];\n                bestScore = whsY[2];\n                anything = true;\n            }\n            if (!anything)\n                mul *= 0.6;\n        }\n        return [bestW, bestH];\n    }\n    static superimpose(ax, ay, bx, by) {\n        let sz = ax.length;\n        if (sz == 1) {\n            let dx = bx[0] - ax[0], dy = by[0] - ay[0];\n            return [[1, 0, dx], [0, 1, dy], [0, 0, 1]];\n        }\n        if (sz == 2) {\n            let thetaA = Math.atan2(ay[1] - ay[0], ax[1] - ax[0]), thetaB = Math.atan2(by[1] - by[0], bx[1] - bx[0]);\n            let delta = angleDiff(thetaB, thetaA), cos = Math.cos(delta), sin = Math.sin(delta);\n            let rot00 = cos, rot01 = -sin;\n            let rot10 = sin, rot11 = cos;\n            let acx = 0.5 * (ax[0] + ax[1]), acy = 0.5 * (ay[0] + ay[1]);\n            let bcx = 0.5 * (bx[0] + bx[1]), bcy = 0.5 * (by[0] + by[1]);\n            let rax = rot00 * acx + rot01 * acy;\n            let ray = rot10 * acx + rot11 * acy;\n            return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n        }\n        let invsz = 1.0 / sz;\n        let acx = Vec.sum(ax) * invsz, acy = Vec.sum(ay) * invsz;\n        let bcx = Vec.sum(bx) * invsz, bcy = Vec.sum(by) * invsz;\n        let mtxA = new Matrix(3, sz), mtxB = new Matrix(3, sz);\n        for (let n = 0; n < sz; n++) {\n            mtxA.set(0, n, ax[n] - acx);\n            mtxA.set(1, n, ay[n] - acy);\n            mtxA.set(2, n, 0);\n            mtxB.set(0, n, bx[n] - bcx);\n            mtxB.set(1, n, by[n] - bcy);\n            mtxB.set(2, n, 0);\n        }\n        let cov = mtxA.times(mtxB.transpose());\n        let svd = new SingularValueDecomposition(cov);\n        let rotate = svd.getV().times(svd.getU().transpose());\n        let rot00 = rotate.get(0, 0), rot01 = rotate.get(0, 1);\n        let rot10 = rotate.get(1, 0), rot11 = rotate.get(1, 1);\n        let rax = rot00 * acx + rot01 * acy;\n        let ray = rot10 * acx + rot11 * acy;\n        return [[rot00, rot01, bcx - rax], [rot10, rot11, bcy - ray], [0, 0, 1]];\n    }\n    static convexHull(x, y, flatness) {\n        let algo = new QuickHull(x, y, sqr(flatness * 0.1));\n        return [algo.hullX, algo.hullY];\n    }\n    static outlinePolygon(x, y, diameter) {\n        let del = new Triangulation2D(x, y);\n        let concave = del.trimConcave(diameter);\n        let idx = del.traceOutline(concave);\n        return [Vec.idxGet(x, idx), Vec.idxGet(y, idx)];\n    }\n}\nexport class QuickHull {\n    constructor(x, y, threshSq) {\n        this.x = x;\n        this.y = y;\n        this.threshSq = threshSq;\n        this.hsz = 0;\n        this.hullX = [];\n        this.hullY = [];\n        const sz = x.length;\n        let l = 0, r = 0;\n        for (let n = 0; n < sz; n++) {\n            if (x[r] > x[n] || (x[r] == x[n] && y[r] > y[n]))\n                r = n;\n            if (x[l] < x[n] || (x[l] == x[n] && y[l] < y[n]))\n                l = n;\n        }\n        let al1 = [], al2 = [];\n        for (let n = 0; n < sz; n++) {\n            if (n != l && n != r) {\n                if (this.right(r, l, n) > 0)\n                    al1.push(n);\n                else\n                    al2.push(n);\n            }\n        }\n        this.hullX.push(x[r]);\n        this.hullY.push(y[r]);\n        this.quickHull(r, l, al1);\n        this.hullX.push(x[l]);\n        this.hullY.push(y[l]);\n        this.quickHull(l, r, al2);\n        for (let n = 0; n < this.hullX.length - 1;) {\n            if (norm2_xy(this.hullX[n] - this.hullY[n + 1], this.hullY[n] - this.hullY[n + 1]) < threshSq) {\n                this.hullX.splice(n + 1, 1);\n                this.hullY.splice(n + 1, 1);\n            }\n            else\n                n++;\n        }\n    }\n    quickHull(a, b, al) {\n        if (al.length == 0)\n            return;\n        let c = this.furthestPoint(a, b, al);\n        let al1 = [], al2 = [];\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            if (this.right(a, c, p) > 0)\n                al1.push(p);\n            else if (this.right(c, b, p) > 0)\n                al2.push(p);\n        }\n        this.quickHull(a, c, al1);\n        this.hullX.push(this.x[c]);\n        this.hullY.push(this.y[c]);\n        this.quickHull(c, b, al2);\n    }\n    right(a, b, p) {\n        const x = this.x, y = this.y;\n        return (x[a] - x[b]) * (y[p] - y[b]) - (x[p] - x[b]) * (y[a] - y[b]);\n    }\n    distance(a, b, p) {\n        const x = this.x, y = this.y;\n        let u = ((x[p] - x[a]) * (x[b] - x[a]) + (y[p] - y[a]) * (y[b] - y[a])) / ((x[b] - x[a]) * (x[b] - x[a]) + (y[b] - y[a]) * (y[b] - y[a]));\n        let ux = x[a] + u * (x[b] - x[a]);\n        let uy = y[a] + u * (y[b] - y[a]);\n        return ((ux - x[p]) * (ux - x[p]) + (uy - y[p]) * (uy - y[p]));\n    }\n    furthestPoint(a, b, al) {\n        let maxDist = -1;\n        let maxPos = -1;\n        for (let n = 0; n < al.length; n++) {\n            let p = al[n];\n            if (p == a || p == b)\n                continue;\n            let dist = this.distance(a, b, p);\n            if (dist > maxDist) {\n                maxDist = dist;\n                maxPos = p;\n            }\n        }\n        return maxPos;\n    }\n}\nexport class RollingBall {\n    constructor(x, y, diameter) {\n        this.x = x;\n        this.y = y;\n        this.sequence = [];\n        const sz = x.length;\n        const threshSq = diameter * diameter;\n        let first = Vec.idxMax(x), latest = first;\n        let direction = 0.0;\n        let visited = Vec.booleanArray(false, sz);\n        this.sequence.push(first);\n        let roll = () => {\n            let bestIdx = -1;\n            let bestDelta = 0, bestTheta = 0;\n            for (let n = 0; n < sz; n++)\n                if (n != latest && !visited[n]) {\n                    let dx = x[n] - x[latest], dy = y[n] - y[latest];\n                    let dsq = norm2_xy(dx, dy);\n                    if (dsq == 0 || dsq > threshSq)\n                        continue;\n                    let theta = Math.atan2(dy, dx), delta = angleDiffPos(theta, direction);\n                    if (bestIdx < 0 || delta < bestDelta) {\n                        bestIdx = n;\n                        bestDelta = delta;\n                        bestTheta = theta;\n                    }\n                }\n            if (bestIdx < 0)\n                return -1;\n            direction = angleNorm(bestTheta - 0.5 * Math.PI);\n            visited[bestIdx] = true;\n            return bestIdx;\n        };\n        while (true) {\n            let next = roll();\n            if (next < 0) {\n                this.sequence = null;\n                return;\n            }\n            if (next == first)\n                break;\n            this.sequence.push(next);\n            latest = next;\n        }\n    }\n    sequencePos() {\n        if (!this.sequence)\n            return null;\n        let posList = [];\n        for (let n of this.sequence)\n            posList.push(new Pos(this.x[n], this.y[n]));\n        return posList;\n    }\n    sequenceXY() {\n        if (!this.sequence)\n            return [null, null];\n        let px = [], py = [];\n        for (let n of this.sequence) {\n            px.push(this.x[n]);\n            py.push(this.y[n]);\n        }\n        return [px, py];\n    }\n}\nexport class Pos {\n    static zero() { return new Pos(); }\n    static fromArray(src) { return new Pos(src[0], src[1]); }\n    constructor(x, y) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n    }\n    clone() { return new Pos(this.x, this.y); }\n    equals(other) { return this.x == other.x && this.y == other.y; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    withScaleBy(mag) {\n        return new Pos(this.x * mag, this.y * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Pos(this.x + dx, this.y + dy);\n    }\n    toString() { return '[' + this.x + ',' + this.y + ']'; }\n}\nexport class Size {\n    static zero() { return new Size(); }\n    static fromArray(src) { return new Size(src[0], src[1]); }\n    constructor(w, h) {\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Size(this.w, this.h); }\n    equals(other) { return this.w == other.w && this.h == other.h; }\n    isZero() { return this.w == 0 && this.h == 0; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    fitInto(maxW, maxH) {\n        let scale = 1;\n        if (this.w > maxW)\n            scale = maxW / this.w;\n        if (this.h > maxH)\n            scale = Math.min(scale, maxH / this.h);\n        if (scale < 1)\n            this.scaleBy(scale);\n    }\n    withScaleBy(mag) {\n        return new Size(this.w * mag, this.h * mag);\n    }\n    toString() { return '[' + this.w + ',' + this.h + ']'; }\n}\nexport class Box {\n    static zero() { return new Box(); }\n    static fromBounds(x1, y1, x2, y2) { return new Box(x1, y1, x2 - x1, y2 - y1); }\n    static fromSize(sz) { return new Box(0, 0, sz.w, sz.h); }\n    static fromOval(oval) { return new Box(oval.cx - oval.rw, oval.cy - oval.rh, 2 * oval.rw, 2 * oval.rh); }\n    static fromArray(src) { return new Box(src[0], src[1], src[2], src[3]); }\n    constructor(x, y, w, h) {\n        this.x = x == null ? 0 : x;\n        this.y = y == null ? 0 : y;\n        this.w = w == null ? 0 : w;\n        this.h = h == null ? 0 : h;\n    }\n    clone() { return new Box(this.x, this.y, this.w, this.h); }\n    equals(other) { return this.x == other.x && this.y == other.y && this.w == other.w && this.h == other.h; }\n    getPos() { return new Pos(this.x, this.y); }\n    setPos(pos) {\n        this.x = pos.x;\n        this.y = pos.y;\n    }\n    getSize() { return new Size(this.w, this.h); }\n    setSize(sz) {\n        this.w = sz.w;\n        this.h = sz.h;\n    }\n    minX() { return this.x; }\n    minY() { return this.y; }\n    midX() { return this.x + 0.5 * this.w; }\n    midY() { return this.y + 0.5 * this.h; }\n    maxX() { return this.x + this.w; }\n    maxY() { return this.y + this.h; }\n    area() { return this.w * this.h; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x *= mag;\n        this.y *= mag;\n        this.w *= mag;\n        this.h *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n    }\n    grow(bx, by) {\n        this.x -= bx;\n        this.y -= by;\n        this.w += 2 * bx;\n        this.h += 2 * by;\n    }\n    withScaleBy(mag) {\n        return new Box(this.x * mag, this.y * mag, this.w * mag, this.h * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Box(this.x + dx, this.y + dy, this.w, this.h);\n    }\n    withGrow(bx, by) {\n        return new Box(this.x - bx, this.y - by, this.w + 2 * bx, this.h + 2 * by);\n    }\n    intersects(other) {\n        return GeomUtil.rectsIntersect(this.x, this.y, this.w, this.h, other.x, other.y, other.w, other.h);\n    }\n    intersection(other) {\n        let x1 = this.x, x2 = x1 + this.w, y1 = this.y, y2 = y1 + this.h;\n        let x3 = other.x, x4 = x3 + other.w, y3 = other.y, y4 = y3 + other.h;\n        let x5 = Math.max(x1, x3), y5 = Math.max(y1, y3), x6 = Math.min(x2, x4), y6 = Math.min(y2, y4);\n        return new Box(x5, y5, x6 - x5, y6 - y5);\n    }\n    contains(x, y) {\n        return x >= this.x && x < this.x + this.w && y >= this.y && y < this.y + this.h;\n    }\n    union(other) {\n        let x1 = Math.min(this.x, other.x), x2 = Math.max(this.x + this.w, other.x + other.w);\n        let y1 = Math.min(this.y, other.y), y2 = Math.max(this.y + this.h, other.y + other.h);\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    isZero() { return this.w == 0 && this.h == 0; }\n    isEmpty() { return this.w == 0 && this.h == 0; }\n    notEmpty() { return this.w > 0 || this.h > 0; }\n    toString() { return '[' + this.x + ',' + this.y + ';' + this.w + ',' + this.h + ']'; }\n}\nexport class Oval {\n    static zero() { return new Oval(); }\n    static fromBox(box) { return new Oval(box.x + 0.5 * box.w, box.y + 0.5 * box.h, 0.5 * box.w, 0.5 * box.h); }\n    static fromArray(src) { return new Oval(src[0], src[1], src[2], src[3]); }\n    constructor(cx, cy, rw, rh) {\n        this.cx = cx == null ? 0 : cx;\n        this.cy = cy == null ? 0 : cy;\n        this.rw = rw == null ? 0 : rw;\n        this.rh = rh == null ? 0 : rh;\n    }\n    clone() { return new Oval(this.cx, this.cy, this.rw, this.rh); }\n    setCentre(pos) {\n        this.cx = pos.x;\n        this.cy = pos.y;\n    }\n    setRadius(sz) {\n        this.rw = sz.w;\n        this.rh = sz.h;\n    }\n    minX() { return this.cx - this.rw; }\n    minY() { return this.cy - this.rh; }\n    maxX() { return this.cx + this.rw; }\n    maxY() { return this.cy + this.rh; }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.cx *= mag;\n        this.cy *= mag;\n        this.rw *= mag;\n        this.rh *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.cx += dx;\n        this.cy += dy;\n    }\n    withScaleBy(mag) {\n        return new Oval(this.cx * mag, this.cy * mag, this.rw * mag, this.rh * mag);\n    }\n    withOffsetBy(dx, dy) {\n        return new Oval(this.cx + dx, this.cy + dy, this.rw, this.rh);\n    }\n    contains(x, y) {\n        let dx = x - this.cx, dy = y - this.cy;\n        let a = dx / this.rw, b = dy / this.rh;\n        return a * a + b * b <= 1;\n    }\n    toString() { return '[' + this.cx + ',' + this.cy + ';' + this.rw + ',' + this.rh + ']'; }\n}\nexport class Line {\n    static zero() { return new Line(); }\n    static fromPos(pos1, pos2) { return new Line(pos1.x, pos1.y, pos2.x, pos2.y); }\n    constructor(x1, y1, x2, y2) {\n        this.x1 = x1 == null ? 0 : x1;\n        this.y1 = y1 == null ? 0 : y1;\n        this.x2 = x2 == null ? 0 : x2;\n        this.y2 = y2 == null ? 0 : y2;\n    }\n    clone() { return new Line(this.x1, this.y1, this.x2, this.y2); }\n    setPos1(pos) {\n        this.x1 = pos.x;\n        this.y1 = pos.y;\n    }\n    setPos2(pos) {\n        this.x2 = pos.x;\n        this.y2 = pos.y;\n    }\n    minX() { return Math.min(this.x1, this.x2); }\n    minY() { return Math.min(this.y1, this.y2); }\n    maxX() { return Math.max(this.x1, this.x2); }\n    maxY() { return Math.max(this.y1, this.y2); }\n    scaleBy(mag) {\n        if (mag == 1)\n            return;\n        this.x1 *= mag;\n        this.y1 *= mag;\n        this.x2 *= mag;\n        this.y2 *= mag;\n    }\n    offsetBy(dx, dy) {\n        this.x1 += dx;\n        this.y1 += dy;\n        this.x2 += dx;\n        this.y2 += dy;\n    }\n    toString() { return '[' + this.x1 + ',' + this.y1 + ';' + this.x2 + ',' + this.y2 + ']'; }\n}\n//# sourceMappingURL=Geom.js.map","const ELEMENT_NODE = 1;\nconst ATTRIBUTE_NODE = 2;\nconst TEXT_NODE = 3;\nconst CDATA_SECTION_NODE = 4;\nconst ENTITY_REFERENCE_NODE = 5;\nconst ENTITY_NODE = 6;\nconst PROCESSING_INSTRUCTION_NODE = 7;\nconst COMMENT_NODE = 8;\nconst DOCUMENT_NODE = 9;\nconst DOCUMENT_TYPE_NODE = 10;\nconst DOCUMENT_FRAGMENT_NODE = 11;\nconst NOTATION_NODE = 12;\nclass XML {\n    static parseXML(strXML) {\n        let xmlDoc;\n        if (this.customParser)\n            xmlDoc = new this.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        return xmlDoc;\n    }\n    static toString(doc) {\n        if (this.customSerial)\n            return new this.customSerial().serializeToString(doc.documentElement);\n        else\n            return new XMLSerializer().serializeToString(doc.documentElement);\n    }\n    static toPrettyString(doc) {\n        let xslt = [\n            '<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n            '  <xsl:strip-space elements=\"*\"/>',\n            '  <xsl:template match=\"para[content-style][not(text())]\">',\n            '    <xsl:value-of select=\"normalize-space(.)\"/>',\n            '  </xsl:template>',\n            '  <xsl:template match=\"node()|@*\">',\n            '    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n            '  </xsl:template>',\n            '  <xsl:output indent=\"yes\"/>',\n            '</xsl:stylesheet>',\n        ].join('\\n');\n        let xsltDoc = this.parseXML(xslt);\n        let xsltProc = new XSLTProcessor();\n        xsltProc.importStylesheet(xsltDoc);\n        let resultDoc = xsltProc.transformToDocument(doc);\n        return new XMLSerializer().serializeToString(resultDoc);\n    }\n    static nodeText(el) {\n        let text = '';\n        for (let child of Array.from(el.childNodes)) {\n            if (child.nodeType == TEXT_NODE || child.nodeType == CDATA_SECTION_NODE)\n                text += child.nodeValue;\n        }\n        return text;\n    }\n    static childText(parent, tagName) {\n        if (parent == null)\n            return null;\n        let el = this.findElement(parent, tagName);\n        if (el == null)\n            return null;\n        return this.nodeText(el);\n    }\n    static appendElement(parent, name) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        return el;\n    }\n    static appendElementAfter(presib, name) {\n        let el = presib.ownerDocument.createElement(name);\n        let postsib = presib.nextSibling;\n        if (postsib == null)\n            presib.parentNode.appendChild(el);\n        else\n            presib.parentNode.insertBefore(el, postsib);\n        return el;\n    }\n    static appendText(parent, text, isCDATA = false) {\n        if (text == null || text.length == 0)\n            return;\n        if (!isCDATA)\n            parent.appendChild(parent.ownerDocument.createTextNode(text));\n        else\n            parent.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static createTextChild(parent, name, text, isCDATA = false) {\n        let el = parent.ownerDocument.createElement(name);\n        parent.appendChild(el);\n        if (!isCDATA)\n            el.textContent = text;\n        else\n            el.appendChild(parent.ownerDocument.createCDATASection(text));\n    }\n    static setText(parent, text, isCDATA = false) {\n        while (parent.firstChild != null)\n            parent.removeChild(parent.firstChild);\n        this.appendText(parent, text, isCDATA);\n    }\n    static findElement(parent, tagName) {\n        if (parent == null)\n            return null;\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName == tagName)\n                return node;\n            node = node.nextSibling;\n        }\n        return null;\n    }\n    static findChildElements(parent, tagName) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE && node.nodeName === tagName)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n    static childElements(parent) {\n        if (parent == null)\n            return [];\n        let list = [];\n        let node = parent.firstChild;\n        while (node != null) {\n            if (node.nodeType == ELEMENT_NODE)\n                list.push(node);\n            node = node.nextSibling;\n        }\n        return list;\n    }\n}\nXML.customParser = null;\nXML.customSerial = null;\nexport { XML };\n//# sourceMappingURL=XML.js.map","import { Box, Pos, Size } from './Geom';\nimport { XML } from './XML';\nexport function dom(obj) {\n    if (typeof obj == 'string')\n        return DOM.parse(obj);\n    if (obj instanceof DOM)\n        return obj;\n    return new DOM(obj);\n}\nexport function domLegacy(obj) {\n    if (obj == null)\n        return null;\n    if (obj.jquery)\n        return dom(obj[0]);\n    return dom(obj);\n}\nexport class DOM {\n    constructor(el) {\n        this.el = el;\n    }\n    get elHTML() { return this.el; }\n    get elInput() { return this.el; }\n    get elCanvas() { return this.el; }\n    static parse(xhtml) {\n        let xml = XML.parseXML(xhtml);\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.outerHTML;\n        let template = document.createElement('template');\n        template.innerHTML = html;\n        return new DOM(template.content.firstChild);\n    }\n    static find(selector) {\n        let el = document.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    static findAll(selector) {\n        let nodeList = document.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    parent() {\n        let parent = this.el.parentElement;\n        return parent ? new DOM(parent) : null;\n    }\n    ancestor(selector) {\n        let el = this.el.closest(selector);\n        return el ? new DOM(el) : null;\n    }\n    children(tag) {\n        let domList = [];\n        for (let child = this.el.firstElementChild; child; child = child.nextElementSibling) {\n            if (tag && child.tagName.toLocaleLowerCase() != tag.toLocaleLowerCase())\n                continue;\n            domList.push(new DOM(child));\n        }\n        return domList;\n    }\n    find(selector) {\n        let el = this.el.querySelector(selector);\n        return el ? new DOM(el) : null;\n    }\n    findAll(selector) {\n        let nodeList = this.el.querySelectorAll(selector);\n        let domList = [];\n        for (let n = 0; n < nodeList.length; n++)\n            domList.push(new DOM(nodeList.item(n)));\n        return domList;\n    }\n    exists() {\n        return document.documentElement.contains(this.el);\n    }\n    isVisible() {\n        return this.elHTML.offsetWidth > 0 || this.elHTML.offsetHeight > 0 || this.elHTML.getClientRects().length > 0;\n    }\n    append(child) {\n        this.el.append(child.el);\n    }\n    appendTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.append(this.el);\n        else\n            parent.appendChild(this.el);\n        return this;\n    }\n    prepend(child) {\n        this.el.prepend(child.el);\n    }\n    prependTo(parent) {\n        if (parent instanceof DOM)\n            parent.el.prepend(this.el);\n        else\n            parent.append(this.el);\n        return this;\n    }\n    insertBefore(ref) {\n        ref.el.parentElement.insertBefore(this.el, ref.el);\n        return this;\n    }\n    insertAfter(ref) {\n        let before = ref.el.nextElementSibling;\n        if (before)\n            ref.el.parentElement.insertBefore(this.el, before);\n        else\n            ref.el.parentElement.append(this.el);\n        return this;\n    }\n    remove() {\n        this.el.remove();\n    }\n    empty() {\n        this.el.innerHTML = '';\n    }\n    getHTML() {\n        return this.el.innerHTML;\n    }\n    setHTML(html) {\n        this.el.innerHTML = html;\n    }\n    appendHTML(xhtml) {\n        let xml = XML.parseXML('<z>' + xhtml + '</z>');\n        if (xml == null)\n            throw 'Invalid XHTML string: ' + xhtml;\n        let html = xml.documentElement.innerHTML;\n        this.el.insertAdjacentHTML('beforeend', html);\n    }\n    getText() {\n        return this.el.textContent;\n    }\n    setText(text) {\n        this.el.textContent = text;\n    }\n    appendText(text) {\n        let content = document.createTextNode(text);\n        this.el.appendChild(content);\n    }\n    getValue() {\n        return this.el.value;\n    }\n    setValue(str) {\n        this.el.value = str || '';\n    }\n    getCSS(key) {\n        return this.elHTML.style.getPropertyValue(key);\n    }\n    setCSS(key, value) {\n        this.elHTML.style.setProperty(key, value === null || value === void 0 ? void 0 : value.toString());\n    }\n    css(dict) {\n        for (let key in dict)\n            this.setCSS(key, dict[key].toString());\n        return this;\n    }\n    getAttr(key) {\n        if (!this.el.hasAttribute(key))\n            return null;\n        return this.el.getAttribute(key);\n    }\n    setAttr(key, value) {\n        this.el.setAttribute(key, value);\n    }\n    attr(dict) {\n        for (let key in dict)\n            this.setAttr(key, dict[key].toString());\n        return this;\n    }\n    addClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.add(cls);\n    }\n    removeClass(clsnames) {\n        for (let cls of clsnames.split(' '))\n            if (cls)\n                this.elHTML.classList.remove(cls);\n    }\n    hasClass(clsname) {\n        return this.elHTML.classList.contains(clsname);\n    }\n    setClass(clsname, flag) {\n        if (flag)\n            this.addClass(clsname);\n        else\n            this.removeClass(clsname);\n    }\n    class(clsname) {\n        this.addClass(clsname);\n        return this;\n    }\n    toggleClass(dict) {\n        for (let key in dict) {\n            if (dict[key])\n                this.elHTML.classList.add(key);\n            else\n                this.elHTML.classList.remove(key);\n        }\n    }\n    width() {\n        return this.elHTML.offsetWidth;\n    }\n    height() {\n        return this.elHTML.offsetHeight;\n    }\n    offset() {\n        let rect = this.el.getBoundingClientRect();\n        let win = this.el.ownerDocument.defaultView;\n        return new Pos(rect.left + win.pageXOffset, rect.top + win.pageYOffset);\n    }\n    size() {\n        return new Size(this.width(), this.height());\n    }\n    area() {\n        let pos = this.offset();\n        return new Box(pos.x, pos.y, this.width(), this.height());\n    }\n    setBoundaryPixels(x, y, w, h) {\n        this.css({ 'left': `${x}px`, 'top': `${y}px`, 'width': `${w}px`, 'height': `${h}px` });\n    }\n    setSizePixels(w, h) {\n        this.css({ 'width': `${w}px`, 'height': `${h}px` });\n    }\n    hasFocus() {\n        return this.el === document.activeElement;\n    }\n    grabFocus(delay = false) {\n        if (delay)\n            setTimeout(() => this.grabFocus(), 10);\n        else\n            this.elHTML.focus();\n    }\n    removeEvent(id, callback) {\n        this.el.removeEventListener(id, callback);\n    }\n    onKeyDown(callback) {\n        this.el.addEventListener('keydown', callback);\n    }\n    onKeyUp(callback) {\n        this.el.addEventListener('keyup', callback);\n    }\n    onKeyPress(callback) {\n        this.el.addEventListener('keypress', callback);\n    }\n    onScroll(callback) {\n        this.el.addEventListener('scroll', callback);\n    }\n    onWheel(callback) {\n        this.el.addEventListener('wheel', callback);\n    }\n    onClick(callback) {\n        this.el.addEventListener('click', callback);\n    }\n    onContextMenu(callback) {\n        this.el.addEventListener('contextmenu', callback);\n    }\n    onDblClick(callback) {\n        this.el.addEventListener('dblclick', callback);\n    }\n    onMouseDown(callback) {\n        this.el.addEventListener('mousedown', callback);\n    }\n    onMouseUp(callback) {\n        this.el.addEventListener('mouseup', callback);\n    }\n    onMouseEnter(callback) {\n        this.el.addEventListener('mouseenter', callback);\n    }\n    onMouseLeave(callback) {\n        this.el.addEventListener('mouseleave', callback);\n    }\n    onMouseMove(callback) {\n        this.el.addEventListener('mousemove', callback);\n    }\n    onMouseOver(callback) {\n        this.el.addEventListener('mouseover', callback);\n    }\n    onChange(callback) {\n        this.el.addEventListener('change', callback);\n    }\n    onInput(callback) {\n        this.el.addEventListener('input', callback);\n    }\n    onTouchStart(callback) {\n        this.el.addEventListener('touchstart', callback);\n    }\n    onTouchMove(callback) {\n        this.el.addEventListener('touchmove', callback);\n    }\n    onTouchCancel(callback) {\n        this.el.addEventListener('touchcancel', callback);\n    }\n    onTouchEnd(callback) {\n        this.el.addEventListener('touchend', callback);\n    }\n}\n//# sourceMappingURL=dom.js.map","import { colourCode } from './util';\nclass Theme {\n}\nTheme.BASE_URL = null;\nTheme.RESOURCE_URL = null;\nTheme.foreground = 0x000000;\nTheme.background = 0xFFFFFF;\nTheme.lowlight = 0x24D0D0;\nTheme.lowlightEdge1 = 0x47D5D2;\nTheme.lowlightEdge2 = 0x008FD1;\nTheme.highlight = 0x00FF00;\nTheme.highlightEdge1 = 0x00CA59;\nTheme.highlightEdge2 = 0x008650;\nTheme.error = 0xFF0000;\nexport { Theme };\nexport function initWebMolKit(resourcePath) {\n    Theme.RESOURCE_URL = resourcePath;\n    try {\n        let _ = document;\n    }\n    catch (e) {\n        return;\n    }\n    if (document)\n        installInlineCSS('main', composeMainCSS());\n}\nlet cssTagsInstalled = new Set();\nexport function hasInlineCSS(tag) { return cssTagsInstalled.has(tag); }\nexport function installInlineCSS(tag, css) {\n    if (cssTagsInstalled.has(tag))\n        return false;\n    let el = document.createElement('style');\n    el.innerHTML = css;\n    document.head.appendChild(el);\n    cssTagsInstalled.add(tag);\n    return true;\n}\nfunction composeMainCSS() {\n    let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n    let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n    return `\n\t\t.wmk-button\n\t\t{\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 6px 12px;\n\t\t\tmargin-bottom: 0;\n\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\tfont-size: 14px;\n\t\t\tfont-weight: normal;\n\t\t\tline-height: 1.42857143;\n\t\t\ttext-align: center;\n\t\t\twhite-space: nowrap;\n\t\t\tvertical-align: middle;\n\t\t\tcursor: pointer;\n\t\t\tbackground-image: none;\n\t\t\tborder: 1px solid transparent;\n\t\t\tborder-radius: 4px;\n\t\t\t-ms-touch-action: manipulation; touch-action: manipulation;\n\t\t\t-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\n\t\t}\n\t\t.wmk-button:focus,\n\t\t.wmk-button:active:focus,\n\t\t.wmk-button.active:focus,\n\t\t.wmk-button.focus,\n\t\t.wmk-button:active.focus,\n\t\t.wmk-button.active.focus\n\t\t{\n\t\t\toutline: thin dotted;\n\t\t\toutline: 5px auto -webkit-focus-ring-color;\n\t\t\toutline-offset: -2px;\n\t\t}\n\t\t.wmk-button:hover,\n\t\t.wmk-button:focus,\n\t\t.wmk-button.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\ttext-decoration: none;\n\t\t}\n\t\t.wmk-button:active,\n\t\t.wmk-button.active\n\t\t{\n\t\t\tbackground-image: none;\n\t\t\toutline: 0;\n\t\t\t-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t\tbox-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);\n\t\t}\n\t\t.wmk-button.disabled,\n\t\t.wmk-button[disabled],\n\t\tfieldset[disabled] .wmk-button\n\t\t{\n\t\t\tcursor: not-allowed;\n\t\t\tfilter: alpha(opacity=65);\n\t\t\t-webkit-box-shadow: none;\n\t\t\tbox-shadow: none;\n\t\t\topacity: .65;\n\t\t}\n\t\ta.wmk-button.disabled,\n\t\tfieldset[disabled] a.wmk-button\n\t\t{\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t/* shrunken button */\n\n\t\t.wmk-button-small\n\t\t{\n\t\t\tpadding: 2px 4px;\n\t\t\tline-height: 1;\n\t\t\tfont-size: 12px;\n\t\t}\n\n\t\t/* default button */\n\n\t\t.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #fff;\n\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default:focus,\n\t\t.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:hover\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #e6e6e6;\n\t\t\tborder-color: #adadad;\n\t\t}\n\t\t.wmk-button-default:active:hover,\n\t\t.wmk-button-default.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-default:hover,\n\t\t.wmk-button-default:active:focus,\n\t\t.wmk-button-default.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-default:focus,\n\t\t.wmk-button-default:active.focus,\n\t\t.wmk-button-default.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-default.focus\n\t\t{\n\t\t\tcolor: #333;\n\t\t\tbackground-color: #d4d4d4;\n\t\t\tborder-color: #8c8c8c;\n\t\t}\n\t\t.wmk-button-default:active,\n\t\t.wmk-button-default.active,\n\t\t.open > .dropdown-toggle.wmk-button-default\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-default.disabled:hover,\n\t\t.wmk-button-default[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-default:hover,\n\t\t.wmk-button-default.disabled:focus,\n\t\t.wmk-button-default[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-default:focus,\n\t\t.wmk-button-default.disabled.focus,\n\t\t.wmk-button-default[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-default.focus\n\t\t{\n\t\t\tbackground-color: #fff;\n\t\t\tborder-color: #ccc;\n\t\t}\n\t\t.wmk-button-default .badge\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #333;\n\t\t}\n\n\t\t/* primary button */\n\n\t\t.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #008FD2;\n\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\tborder-color: #00C0C0;\n\t\t}\n\t\t.wmk-button-primary:focus,\n\t\t.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${lowlight};\n\t\t\tborder-color: #122b40;\n\t\t}\n\t\t.wmk-button-primary:hover\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #204d74;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #286090;\n\t\t\tborder-color: #20744d;\n\t\t}\n\t\t.wmk-button-primary:active:hover,\n\t\t.wmk-button-primary.active:hover,\n\t\t.open > .dropdown-toggle.wmk-button-primary:hover,\n\t\t.wmk-button-primary:active:focus,\n\t\t.wmk-button-primary.active:focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary:focus,\n\t\t.wmk-button-primary:active.focus,\n\t\t.wmk-button-primary.active.focus,\n\t\t.open > .dropdown-toggle.wmk-button-primary.focus\n\t\t{\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: ${highlight};\n\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\tborder-color: #12802b;\n\t\t}\n\t\t.wmk-button-primary:active,\n\t\t.wmk-button-primary.active,\n\t\t.open > .dropdown-toggle.wmk-button-primary\n\t\t{\n\t\t\tbackground-image: none;\n\t\t}\n\t\t.wmk-button-primary.disabled:hover,\n\t\t.wmk-button-primary[disabled]:hover,\n\t\tfieldset[disabled] .wmk-button-primary:hover,\n\t\t.wmk-button-primary.disabled:focus,\n\t\t.wmk-button-primary[disabled]:focus,\n\t\tfieldset[disabled] .wmk-button-primary:focus,\n\t\t.wmk-button-primary.disabled.focus,\n\t\t.wmk-button-primary[disabled].focus,\n\t\tfieldset[disabled] .wmk-button-primary.focus\n\t\t{\n\t\t\tbackground-color: #337ab7;\n\t\t\tborder-color: #2ea46d;\n\t\t}\n\t\t.wmk-button-primary .badge\n\t\t{\n\t\t\tcolor: #337ab7;\n\t\t\tbackground-color: #fff;\n\t\t}\n\t`;\n}\n//# sourceMappingURL=Theme.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { dom } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst CSS_TOOLTIP = `\n    *.wmk-tooltip-outer\n    {\n\t\tposition: absolute;\n\t\tborder-radius: 4px;\n\t\tborder: 1px solid black;\n\t\tbackground-color: white;\n\t\tpadding: 1px;\n\t\tpointer-events: none;\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 14px;\n    }\n\t*.wmk-tooltip-inner\n\t{\n\t\tcolor: white;\n\t\tborder-radius: 4px;\n\t\tbackground-color: black;\n\t\tpadding: 0.3em;\n\t\tmax-width: calc(min(40em, 50vw));\n\t}\n`;\nlet globalTooltip = null;\nlet globalPopWatermark = 0;\nexport function addTooltip(parent, bodyHTML, titleHTML, delay) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    let widget = dom(parent);\n    let tooltip = new Tooltip(widget, bodyHTML, titleHTML, delay == null ? 1000 : delay);\n    widget.onMouseEnter(() => tooltip.start());\n    widget.onMouseLeave(() => tooltip.stop());\n}\nexport function addTooltipPromise(parent, bodyCallback, titleHTML, delay) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    let widget = dom(parent);\n    let tooltip = new Tooltip(widget, null, titleHTML, delay == null ? 1000 : delay);\n    tooltip.bodyCallback = bodyCallback;\n    widget.onMouseEnter(() => tooltip.start());\n    widget.onMouseLeave(() => tooltip.stop());\n}\nexport function raiseToolTip(parent, avoid, bodyHTML, titleHTML) {\n    installInlineCSS('tooltip', CSS_TOOLTIP);\n    clearTooltip();\n    new Tooltip(dom(parent), bodyHTML, titleHTML, 0).raise(avoid);\n}\nexport function clearTooltip() {\n    if (globalTooltip == null)\n        return;\n    globalPopWatermark++;\n    globalTooltip.stop();\n}\nexport class Tooltip {\n    constructor(widget, bodyHTML, titleHTML, delay) {\n        this.widget = widget;\n        this.bodyHTML = bodyHTML;\n        this.titleHTML = titleHTML;\n        this.delay = delay;\n        this.domTooltip = null;\n    }\n    start() {\n        this.watermark = ++globalPopWatermark;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            if (this.bodyHTML == null && this.bodyCallback)\n                this.bodyHTML = yield this.bodyCallback();\n            window.setTimeout(() => {\n                if (this.watermark == globalPopWatermark)\n                    this.raise();\n            }, this.delay);\n        }))();\n    }\n    stop() {\n        if (this.domTooltip) {\n            this.domTooltip.remove();\n            this.domTooltip = null;\n        }\n        this.watermark = -1;\n    }\n    raise(avoid) {\n        if (!this.widget.exists())\n            return;\n        globalTooltip = this;\n        if (this.domTooltip)\n            return;\n        let pop = this.domTooltip = dom('<div/>').class('wmk-tooltip-outer').css({ 'visibility': 'hidden' }).appendTo(document.body);\n        let sanity = 50;\n        for (let ancestor = this.widget; ancestor; ancestor = ancestor.parent()) {\n            if (--sanity == 0)\n                break;\n            let zindex = parseInt(ancestor.elHTML.style.zIndex);\n            if (zindex > 0) {\n                pop.setCSS('z-index', (zindex + 1000).toString());\n                break;\n            }\n        }\n        let div = dom('<div/>').appendTo(pop).class('wmk-tooltip-inner');\n        let hasTitle = this.titleHTML != null && this.titleHTML.length > 0, hasBody = this.bodyHTML != null && this.bodyHTML.length > 0;\n        if (hasTitle)\n            dom('<div/>').appendTo(div).setHTML('<b>' + this.titleHTML + '</b>');\n        if (hasTitle && hasBody)\n            div.appendHTML('<hr/>');\n        if (hasBody)\n            dom('<div/>').appendTo(div).setHTML(this.bodyHTML);\n        let winW = window.innerWidth, winH = window.innerHeight;\n        const GAP = 2;\n        let boundDiv = this.widget.el.getBoundingClientRect();\n        let wx1 = boundDiv.left, wy1 = boundDiv.top;\n        let wx2 = wx1 + boundDiv.width, wy2 = wy1 + boundDiv.height;\n        if (avoid) {\n            wx1 += avoid.x;\n            wy1 += avoid.y;\n            wx2 = wx1 + avoid.w;\n            wy2 = wy1 + avoid.h;\n        }\n        let setPosition = () => {\n            let popW = pop.width(), popH = pop.height();\n            let posX = 0, posY = 0;\n            if (wx1 + popW < winW)\n                posX = wx1;\n            else if (popW < wx2)\n                posX = wx2 - popW;\n            if (wy2 + GAP + popH < winH)\n                posY = wy2 + GAP;\n            else if (wy1 - GAP - popH > 0)\n                posY = wy1 - GAP - popH;\n            else\n                posY = wy2 + GAP;\n            posX += window.pageXOffset;\n            posY += window.pageYOffset;\n            pop.css({ 'left': `${posX}px`, 'top': `${posY}px`, 'visibility': 'visible' });\n        };\n        pop.css({ 'left': '0px', 'top': '0px' });\n        setTimeout(() => setPosition(), 1);\n        let checkParent = () => {\n            if (this.watermark != globalPopWatermark || !this.widget.isVisible() || !this.widget.exists())\n                this.stop();\n            else\n                setTimeout(checkParent, 100);\n        };\n        setTimeout(checkParent, 100);\n    }\n}\n//# sourceMappingURL=Tooltip.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {Box} from 'webmolkit/util/Geom';\nimport {installInlineCSS, Theme} from 'webmolkit/util/Theme';\nimport {addTooltip} from 'webmolkit/ui/Tooltip';\nimport {escapeHTML} from 'webmolkit/util/util';\n\n/*\n\tA banner that goes along the top of the screen and fills up with clickable icons.\n*/\n\nexport enum MenuBannerCommand\n{\n\tNewMixture = 'newMixture',\n\tNewCollection = 'newCollection',\n\tOpen = 'open',\n\tSave = 'save',\n\tSaveAs = 'saveAs',\n\tEditDetails = 'editDetails',\n\tEditStructure = 'editStructure',\n\tLookup = 'lookup',\n\tExportSVG = 'exportSVG',\n\tExportSDF = 'exportSDF',\n\tCreateMInChI = 'createMInChI',\n\tAppend = 'append',\n\tPrepend = 'prepend',\n\tInsertBefore = 'insertBefore',\n\tInsertAfter = 'insertAfter',\n\tDelete = 'delete',\n\tMoveUp = 'moveUp',\n\tMoveDown = 'moveDown',\n\tUndo = 'undo',\n\tRedo = 'redo',\n\tCopy = 'copy',\n\tCopyBranch = 'copyBranch',\n\tCut = 'cut',\n\tPaste = 'paste',\n\tZoomFull = 'zoomFull',\n\tZoomNormal = 'zoomNormal',\n\tZoomIn = 'zoomIn',\n\tZoomOut = 'zoomOut',\n\tViewDetail = 'viewDetail',\n\tViewCard = 'viewCard',\n\tBack = 'back',\n}\n\nexport interface MenuBannerButton\n{\n\ticon:string; // filename\n\ttip:string; // popup tooltip\n\tcmd:string;\n\twidth?:number; // optional width override\n}\n\nconst CSS_MENUBANNER = `\n\t*.mixtures-menubanner-button:hover\n\t{\n\t\tbackground-color: #D0D0D0;\n\t}\n\t*.mixtures-menubanner-button:active\n\t{\n\t\tbackground-color: #C0C0C0;\n\t}\n`;\nexport class MenuBanner\n{\n\tpublic callbackRefocus:() => void = null;\n\n\tprivate divFlex:DOM;\n\tprivate mapDiv:Record<string, DOM> = {};\n\tprivate mapSVG:Record<string, DOM> = {};\n\tprivate mapActive:Record<string, boolean> = {};\n\tprivate selected = new Set<string>();\n\n\t// ------------ public methods ------------\n\n\tconstructor(private commands:MenuBannerButton[][], private callbackAction:(cmd:string) => void)\n\t{\n\t\tinstallInlineCSS('mixtures-menubanner', CSS_MENUBANNER);\n\t}\n\n\tpublic render(domParent:DOM):void\n\t{\n\t\tdomParent.empty();\n\t\tthis.divFlex = dom('<div/>').appendTo(domParent).css({'display': 'flex', 'width': '100%', 'height': '100%'});\n\t\tthis.divFlex.css({'flex-direction': 'row', 'flex-wrap': 'nowrap', 'justify-content': 'space-around', 'align-items': 'center'});\n\t\t//this.divFlex.css({'linear-gradient': '90deg, #F0F0F0, #808080'});\n\t\tthis.divFlex.css({'background': 'linear-gradient(to bottom, #FFFFFF, #C0C0C0)'});\n\t\tthis.divFlex.css({'user-select': 'none' /*, 'pointer-events': 'none'*/});\n\n\t\t//this.divFlex.click(() => {if (this.callbackRefocus) this.callbackRefocus();});\n\n\t\tfor (let blk of this.commands)\n\t\t{\n\t\t\tlet divBlk = dom('<div/>').appendTo(this.divFlex);\n\t\t\tfor (let btn of blk)\n\t\t\t{\n\t\t\t\tlet [div, svg] = this.createCommand(btn);\n\t\t\t\tdivBlk.append(div);\n\t\t\t\tthis.mapDiv[btn.cmd] = div;\n\t\t\t\tthis.mapSVG[btn.cmd] = svg;\n\t\t\t\tthis.mapActive[btn.cmd] = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t// switch on/off specific buttons\n\tpublic activateButtons(map:Record<string, boolean>):void\n\t{\n\t\tfor (let cmd in map)\n\t\t{\n\t\t\tlet active = this.mapActive[cmd] = map[cmd];\n\t\t\tthis.mapSVG[cmd].css({'opacity': active ? 1 : 0.5});\n\t\t}\n\t}\n\n\t// control over which button(s) are selected\n\tpublic addSelected(cmd:string):void\n\t{\n\t\tif (this.selected.has(cmd)) return;\n\t\tthis.selected.add(cmd);\n\t\tthis.mapDiv[cmd].css({'background-color': '#D0D0D0'});\n\t}\n\tpublic removeSelected(cmd:string):void\n\t{\n\t\tif (!this.selected.has(cmd)) return;\n\t\tthis.selected.delete(cmd);\n\t\tthis.mapDiv[cmd].css({'background-color': 'transparent'});\n\t}\n\n\t// fetch the position of the given icon, relative to the banner overall\n\tpublic iconPosition(cmd:MenuBannerCommand):Box\n\t{\n\t\tlet div = this.mapDiv[cmd];\n\t\tif (!div) return null;\n\t\treturn new Box(div.elHTML.offsetLeft, div.elHTML.offsetTop, div.width(), div.height());\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate createCommand(btn:MenuBannerButton):DOM[]\n\t{\n\t\tlet div = dom('<div/>').css({'display': 'inline-block'});\n\t\tdiv.setAttr('id', 'mixtureEditor_btn_' + btn.icon.substring(0, btn.icon.lastIndexOf('.')));\n\t\tlet width = btn.width ? btn.width : 20;\n\t\tdiv.css({'width': `${width}px`, 'height': '20px', 'margin': '2px', 'padding': '5px'});\n\t\tdiv.css({'border-radius': '4px'});\n\t\tif (this.selected.has(btn.cmd)) div.css({'background-color': '#D0D0D0'});\n\n\t\tlet imgURL = Theme.RESOURCE_URL + '/img/icons/' + btn.icon;\n\t\tlet svg = dom('<img/>').appendTo(div).attr({'src': imgURL});\n\n\t\tdiv.addClass('mixtures-menubanner-button');\n\t\t/*div.onHover(\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet col = this.selected.has(btn.cmd) ? '#D0D0D0' : this.mapActive[btn.cmd] ? '#C0C0C0' : 'transparent';\n\t\t\t\tdiv.setCSS('background-color', col);\n\t\t\t},\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tlet col = this.selected.has(btn.cmd) ? '#D0D0D0' : 'transparent';\n\t\t\t\tdiv.setCSS('background-color', col);\n\t\t\t});*/\n\t\tdiv.onClick(() =>\n\t\t{\n\t\t\tif (this.callbackRefocus) this.callbackRefocus();\n\t\t\tif (!this.mapActive[btn.cmd]) return;\n\t\t\tthis.callbackAction(btn.cmd);\n\t\t});\n\t\tif (btn.tip) addTooltip(div, escapeHTML(btn.tip));\n\n\t\treturn [div, svg];\n\t}\n}\n\n","class Chemistry {\n}\nChemistry.ELEMENTS = [\n    null,\n    'H', 'He',\n    'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne',\n    'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar',\n    'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr',\n    'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe',\n    'Cs', 'Ba',\n    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',\n    'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn',\n    'Fr', 'Ra',\n    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No',\n    'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn'\n];\nChemistry.ELEMENT_GROUPS = [\n    0,\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_ROWS = [\n    0,\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nChemistry.ELEMENT_BLOCKS = [\n    0,\n    1, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3\n];\nChemistry.ELEMENT_VALENCE = [\n    0,\n    1, 2,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_BONDING = [\n    0,\n    1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 2,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 3, 2, 1, 0,\n    1, 1,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nChemistry.ELEMENT_SHELL = [\n    0,\n    2, 2,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 8, 8, 8,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    8, 8,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,\n    18, 18, 18, 18, 18, 18, 18, 18, 18, 18\n];\nChemistry.NATURAL_ATOMIC_WEIGHTS = [\n    0, 1.00794, 4.002602, 6.941, 9.012182, 10.811, 12.0107, 14.0067, 15.9994, 18.9984032, 20.1797,\n    22.989770, 24.3050, 26.981538, 28.0855, 30.973761, 32.065, 35.453, 39.948, 39.0983, 40.078,\n    44.955910, 47.867, 50.9415, 51.9961, 54.938049, 55.845, 58.933200, 58.6934, 63.546, 65.409,\n    69.723, 72.64, 74.92160, 78.96, 79.904, 83.798, 85.4678, 87.62, 88.90585, 91.224, 92.90638,\n    95.94, 98, 101.07, 102.90550, 106.42, 107.8682, 112.411, 114.818, 118.710, 121.760, 127.60,\n    126.90447, 131.293, 132.90545, 137.327, 138.9055, 140.116, 140.90765, 144.24, 145, 150.36,\n    151.964, 157.25, 158.92534, 162.500, 164.93032, 167.259, 168.93421, 173.04, 174.967, 178.49,\n    180.9479, 183.84, 186.207, 190.23, 192.217, 195.078, 196.96655, 200.59, 204.3833, 207.2, 208.98038,\n    209, 210, 222, 223, 226, 227, 230.0331266, 231.03588, 233.039628, 237, 244, 243, 247, 247, 251, 252, 257,\n    258, 259, 262, 261, 262, 266, 264, 277, 268, 271, 272, 285\n];\nChemistry.ELEMENT_H = 1;\nChemistry.ELEMENT_He = 2;\nChemistry.ELEMENT_Li = 3;\nChemistry.ELEMENT_Be = 4;\nChemistry.ELEMENT_B = 5;\nChemistry.ELEMENT_C = 6;\nChemistry.ELEMENT_N = 7;\nChemistry.ELEMENT_O = 8;\nChemistry.ELEMENT_F = 9;\nChemistry.ELEMENT_Ne = 10;\nChemistry.ELEMENT_Na = 11;\nChemistry.ELEMENT_Mg = 12;\nChemistry.ELEMENT_Al = 13;\nChemistry.ELEMENT_Si = 14;\nChemistry.ELEMENT_P = 15;\nChemistry.ELEMENT_S = 16;\nChemistry.ELEMENT_Cl = 17;\nChemistry.ELEMENT_Ar = 18;\nChemistry.ELEMENT_K = 19;\nChemistry.ELEMENT_Ca = 20;\nChemistry.ELEMENT_Sc = 21;\nChemistry.ELEMENT_Ti = 22;\nChemistry.ELEMENT_V = 23;\nChemistry.ELEMENT_Cr = 24;\nChemistry.ELEMENT_Mn = 25;\nChemistry.ELEMENT_Fe = 26;\nChemistry.ELEMENT_Co = 27;\nChemistry.ELEMENT_Ni = 28;\nChemistry.ELEMENT_Cu = 29;\nChemistry.ELEMENT_Zn = 30;\nChemistry.ELEMENT_Ga = 31;\nChemistry.ELEMENT_Ge = 32;\nChemistry.ELEMENT_As = 33;\nChemistry.ELEMENT_Se = 34;\nChemistry.ELEMENT_Br = 35;\nChemistry.ELEMENT_Kr = 36;\nChemistry.ELEMENT_Rb = 37;\nChemistry.ELEMENT_Sr = 38;\nChemistry.ELEMENT_Y = 39;\nChemistry.ELEMENT_Zr = 40;\nChemistry.ELEMENT_Nb = 41;\nChemistry.ELEMENT_Mo = 42;\nChemistry.ELEMENT_Tc = 43;\nChemistry.ELEMENT_Ru = 44;\nChemistry.ELEMENT_Rh = 45;\nChemistry.ELEMENT_Pd = 46;\nChemistry.ELEMENT_Ag = 47;\nChemistry.ELEMENT_Cd = 48;\nChemistry.ELEMENT_In = 49;\nChemistry.ELEMENT_Sn = 50;\nChemistry.ELEMENT_Sb = 51;\nChemistry.ELEMENT_Te = 52;\nChemistry.ELEMENT_I = 53;\nChemistry.ELEMENT_Xe = 54;\nChemistry.ELEMENT_Cs = 55;\nChemistry.ELEMENT_Ba = 56;\nChemistry.ELEMENT_La = 57;\nChemistry.ELEMENT_Ce = 58;\nChemistry.ELEMENT_Pr = 59;\nChemistry.ELEMENT_Nd = 60;\nChemistry.ELEMENT_Pm = 61;\nChemistry.ELEMENT_Sm = 62;\nChemistry.ELEMENT_Eu = 63;\nChemistry.ELEMENT_Gd = 64;\nChemistry.ELEMENT_Tb = 65;\nChemistry.ELEMENT_Dy = 66;\nChemistry.ELEMENT_Ho = 67;\nChemistry.ELEMENT_Er = 68;\nChemistry.ELEMENT_Tm = 69;\nChemistry.ELEMENT_Yb = 70;\nChemistry.ELEMENT_Lu = 71;\nChemistry.ELEMENT_Hf = 72;\nChemistry.ELEMENT_Ta = 73;\nChemistry.ELEMENT_W = 74;\nChemistry.ELEMENT_Re = 75;\nChemistry.ELEMENT_Os = 76;\nChemistry.ELEMENT_Ir = 77;\nChemistry.ELEMENT_Pt = 78;\nChemistry.ELEMENT_Au = 79;\nChemistry.ELEMENT_Hg = 80;\nChemistry.ELEMENT_Tl = 81;\nChemistry.ELEMENT_Pb = 82;\nChemistry.ELEMENT_Bi = 83;\nChemistry.ELEMENT_Po = 84;\nChemistry.ELEMENT_At = 85;\nChemistry.ELEMENT_Rn = 86;\nChemistry.ELEMENT_Fr = 87;\nChemistry.ELEMENT_Ra = 88;\nChemistry.ELEMENT_Ac = 89;\nChemistry.ELEMENT_Th = 90;\nChemistry.ELEMENT_Pa = 91;\nChemistry.ELEMENT_U = 92;\nChemistry.ELEMENT_Np = 93;\nChemistry.ELEMENT_Pu = 94;\nChemistry.ELEMENT_Am = 95;\nChemistry.ELEMENT_Cm = 96;\nChemistry.ELEMENT_Bk = 97;\nChemistry.ELEMENT_Cf = 98;\nChemistry.ELEMENT_Es = 99;\nChemistry.ELEMENT_Fm = 100;\nChemistry.ELEMENT_Md = 101;\nChemistry.ELEMENT_No = 102;\nChemistry.ELEMENT_Lr = 103;\nChemistry.ELEMENT_Rf = 104;\nChemistry.ELEMENT_Db = 105;\nChemistry.ELEMENT_Sg = 106;\nChemistry.ELEMENT_Bh = 107;\nChemistry.ELEMENT_Hs = 108;\nChemistry.ELEMENT_Mt = 109;\nChemistry.ELEMENT_Ds = 110;\nChemistry.ELEMENT_Rg = 111;\nChemistry.ELEMENT_Cn = 112;\nexport { Chemistry };\n//# sourceMappingURL=Chemistry.js.map","import { Vec } from '../util/Vec';\nexport class Graph {\n    constructor(sz, edge1, edge2) {\n        this.nbrs = [];\n        this.indices = null;\n        this.labels = null;\n        this.props = null;\n        if (sz != null)\n            for (let n = 0; n < sz; n++)\n                this.nbrs.push([]);\n        if (edge1 != null && edge2 != null) {\n            for (let n = 0; n < edge1.length; n++) {\n                this.nbrs[edge1[n]].push(edge2[n]);\n                this.nbrs[edge2[n]].push(edge1[n]);\n            }\n        }\n    }\n    clone() {\n        let g = new Graph();\n        for (let nbr of this.nbrs)\n            g.nbrs.push(nbr.slice(0));\n        g.indices = this.indices == null ? null : this.indices.slice(0);\n        g.labels = this.labels == null ? null : this.labels.slice(0);\n        g.props = this.props == null ? null : this.props.slice(0);\n        return g;\n    }\n    static fromMolecule(mol) {\n        let g = new Graph();\n        g.indices = [];\n        for (let n = 0; n < mol.numAtoms; n++) {\n            g.nbrs.push([]);\n            g.indices.push(n + 1);\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            g.nbrs[bfr].push(bto);\n            g.nbrs[bto].push(bfr);\n        }\n        return g;\n    }\n    static fromMoleculeMask(mol, mask) {\n        let count = Vec.maskCount(mask);\n        let map = Vec.maskMap(mask);\n        let g = new Graph(count);\n        g.indices = Vec.maskIdx(mask);\n        Vec.addTo(g.indices, 1);\n        for (let n = 0; n < count; n++) {\n            let adj = mol.atomAdjList(g.indices[n]);\n            g.nbrs[n] = [];\n            for (let i = 0; i < adj.length; i++)\n                if (mask[adj[i] - 1])\n                    g.nbrs[n].push(map[adj[i] - 1]);\n        }\n        return g;\n    }\n    static fromNeighbours(nbrs) {\n        let g = new Graph();\n        g.nbrs = nbrs;\n        return g;\n    }\n    toString() {\n        let buff = '#nodes=' + this.nbrs.length;\n        for (let n = 0; n < this.nbrs.length; n++) {\n            buff += ' ' + n + ':{' + this.nbrs[n] + '}';\n            if (n < Vec.len(this.indices))\n                buff += '[i=' + this.indices[n] + ']';\n            if (n < Vec.len(this.labels))\n                buff += '[l=' + this.labels[n] + ']';\n        }\n        return buff;\n    }\n    get numNodes() { return this.nbrs.length; }\n    numEdges(node) { return this.nbrs[node].length; }\n    getEdge(node, edge) { return this.nbrs[node][edge]; }\n    getEdges(node) { return this.nbrs[node]; }\n    getIndex(node) { return this.indices == null ? 0 : this.indices[node]; }\n    setIndex(node, idx) {\n        if (this.indices == null)\n            this.indices = Vec.numberArray(0, this.nbrs.length);\n        this.indices[node] = idx;\n    }\n    getLabel(node) { return this.labels == null ? null : this.labels[node]; }\n    setLabel(node, lbl) {\n        if (this.labels == null)\n            this.labels = Vec.stringArray('', this.nbrs.length);\n        this.labels[node] = lbl;\n    }\n    getProperty(node) { return this.props == null ? null : this.props[node]; }\n    setProperty(node, prp) {\n        if (this.props == null)\n            this.props = new Array(this.nbrs.length);\n        this.props[node] = prp;\n    }\n    addNode() {\n        this.nbrs.push([]);\n        if (this.indices != null)\n            this.indices.push(0);\n        if (this.labels != null)\n            this.labels.push('');\n        if (this.props != null)\n            this.props.push(null);\n        return this.nbrs.length - 1;\n    }\n    hasEdge(node1, node2) {\n        if (this.nbrs[node1].length <= this.nbrs[node2].length)\n            return this.nbrs[node1].indexOf(node2) >= 0;\n        else\n            return this.nbrs[node2].indexOf(node1) >= 0;\n    }\n    addEdge(node1, node2) {\n        this.nbrs[node1].push(node2);\n        this.nbrs[node2].push(node1);\n    }\n    removeEdge(node1, node2) {\n        let i1 = this.nbrs[node1].indexOf(node2), i2 = this.nbrs[node2].indexOf(node1);\n        if (i1 >= 0)\n            this.nbrs[node1].splice(i1, 1);\n        if (i2 >= 0)\n            this.nbrs[node2].splice(i2, 1);\n    }\n    isolateNode(node) {\n        for (let o of this.nbrs[node]) {\n            let i = this.nbrs[o].indexOf(node);\n            if (i >= 0)\n                this.nbrs[o].splice(i, 1);\n        }\n        this.nbrs[node] = [];\n    }\n    keepNodesMask(mask) {\n        const oldsz = this.nbrs.length, newsz = Vec.maskCount(mask);\n        if (newsz == oldsz)\n            return;\n        if (newsz == 0) {\n            this.nbrs = [];\n            this.indices = null;\n            this.labels = null;\n            this.props = null;\n            return;\n        }\n        let newmap = Vec.maskMap(mask);\n        let newnbrs = [];\n        for (let n = 0; n < newsz; n++)\n            newnbrs.push([]);\n        for (let n = 0, pos = 0; n < oldsz; n++)\n            if (mask[n]) {\n                for (let i of this.nbrs[n])\n                    if (mask[i])\n                        newnbrs[pos].push(newmap[i]);\n                pos++;\n            }\n        this.nbrs = newnbrs;\n        if (this.indices != null)\n            this.indices = Vec.maskGet(this.indices, mask);\n        if (this.labels != null)\n            this.labels = Vec.maskGet(this.labels, mask);\n        if (this.props != null)\n            this.props = Vec.maskGet(this.props, mask);\n    }\n    keepNodesIndex(idx) { this.keepNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    removeNodesMask(mask) { this.keepNodesMask(Vec.notMask(mask)); }\n    removeNodesIndex(idx) { this.removeNodesMask(Vec.idxMask(idx, this.numNodes)); }\n    subgraphIndex(idx) {\n        const nsz = idx.length;\n        let g = new Graph(nsz);\n        if (this.indices != null || this.labels != null || this.props != null)\n            for (let n = 0; n < nsz; n++) {\n                if (this.indices != null)\n                    g.setIndex(n, this.indices[idx[n]]);\n                if (this.labels != null)\n                    g.setLabel(n, this.labels[idx[n]]);\n                if (this.props != null)\n                    g.setProperty(n, this.props[idx[n]]);\n            }\n        for (let i = 0; i < nsz; i++) {\n            for (let n of this.nbrs[idx[i]]) {\n                let j = idx.indexOf(n);\n                if (j > i)\n                    g.addEdge(i, j);\n            }\n        }\n        return g;\n    }\n    subgraphMask(mask) {\n        let g = this.clone();\n        g.keepNodesMask(mask);\n        return g;\n    }\n    calculateComponents() {\n        const sz = this.nbrs.length;\n        if (sz == 0)\n            return [];\n        let cc = Vec.numberArray(0, sz);\n        cc[0] = 1;\n        let first = 1, high = 1;\n        while (true) {\n            while (first < sz && cc[first] > 0) {\n                first++;\n            }\n            if (first >= sz)\n                break;\n            let anything = false;\n            for (let i = first; i < sz; i++)\n                if (cc[i] == 0) {\n                    for (let j = 0; j < this.nbrs[i].length; j++) {\n                        if (cc[this.nbrs[i][j]] != 0) {\n                            cc[i] = cc[this.nbrs[i][j]];\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything)\n                cc[first] = ++high;\n        }\n        return cc;\n    }\n    calculateComponentGroups() {\n        if (this.nbrs.length == 0)\n            return [];\n        let cc = this.calculateComponents();\n        let sz = Vec.max(cc);\n        let grp = [];\n        for (let n = 0; n < sz; n++)\n            grp.push([]);\n        for (let n = 0; n < cc.length; n++)\n            grp[cc[n] - 1].push(n);\n        return grp;\n    }\n    calculateRingBlocks() {\n        let sz = this.numNodes, nbrs = this.nbrs;\n        if (sz == 0)\n            return [[], 0];\n        let rblk = new Array(this.numNodes);\n        let visited = Vec.booleanArray(false, sz);\n        Vec.setTo(rblk, 0);\n        let path = new Array(sz + 1);\n        let plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < nbrs[last].length; n++)\n                    if (!visited[nbrs[last][n]]) {\n                        current = nbrs[last][n];\n                        break;\n                    }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < nbrs[current].length; n++) {\n                    let join = nbrs[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = rblk[path[i]];\n                            if (id == 0)\n                                rblk[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < sz; j++)\n                                    if (rblk[j] == id)\n                                        rblk[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == sz)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < sz; i++)\n            if (rblk[i] > 0) {\n                nextID--;\n                for (let j = sz - 1; j >= i; j--)\n                    if (rblk[j] == rblk[i])\n                        rblk[j] = nextID;\n            }\n        for (let i = 0; i < sz; i++)\n            rblk[i] = -rblk[i];\n        return [rblk, -nextID];\n    }\n    calculateRingBlockGroups() {\n        let [rblk, sz] = this.calculateRingBlocks();\n        if (sz == 0)\n            return [];\n        let cap = Vec.numberArray(0, sz);\n        for (let n = 0; n < rblk.length; n++)\n            if (rblk[n] > 0)\n                cap[rblk[n] - 1]++;\n        let grp = new Array(sz);\n        for (let n = 0; n < sz; n++) {\n            grp[n] = new Array(cap[n]);\n            cap[n] = 0;\n        }\n        for (let n = 0; n < rblk.length; n++) {\n            let i = rblk[n] - 1;\n            if (i < 0)\n                continue;\n            grp[i][cap[i]++] = n;\n        }\n        return grp;\n    }\n    findRingsOfSize(size) {\n        let [rblk, num] = this.calculateRingBlocks();\n        if (num == 0)\n            return [];\n        let rings = [];\n        let mask = new Array(this.numNodes);\n        for (let r = 1; r <= num; r++) {\n            for (let n = 0; n < this.numNodes; n++)\n                mask[n] = rblk[n] == r;\n            let newRings = this.findRingsOfSizeMask(size, mask);\n            for (let n = 0; n < newRings.length; n++)\n                rings.push(newRings[n]);\n        }\n        return rings;\n    }\n    findRingsOfSizeMask(size, mask) {\n        let rings = [];\n        for (let n = 0; n < this.numNodes; n++)\n            if (mask[n]) {\n                let path = new Array(size);\n                path[0] = n;\n                this.recursiveRingFind(path, 1, size, mask, rings);\n            }\n        return rings;\n    }\n    calculateBFS(idx) {\n        let ret = Vec.numberArray(-1, this.numNodes);\n        ret[idx] = 0;\n        let curnum = 0, lsz = 1, watermark = 0;\n        let list = Vec.numberArray(0, this.numNodes);\n        list[0] = idx;\n        while (true) {\n            let newsz = lsz;\n            for (let n = watermark; n < lsz; n++) {\n                for (let i = 0; i < this.nbrs[list[n]].length; i++) {\n                    let j = this.nbrs[list[n]][i];\n                    if (ret[j] < 0) {\n                        ret[j] = curnum + 1;\n                        list[newsz++] = j;\n                    }\n                }\n            }\n            if (newsz == lsz)\n                break;\n            watermark = lsz;\n            lsz = newsz;\n            curnum++;\n        }\n        return ret;\n    }\n    calculateGravity() {\n        const sz = this.numNodes;\n        const { nbrs } = this;\n        let wght = Vec.numberArray(1, sz);\n        for (let n = 0; n < sz; n++) {\n            let wmod = Vec.numberArray(0, sz);\n            for (let i = 0; i < sz; i++)\n                for (let j = nbrs[i].length - 1; j >= 0; j--)\n                    wmod[i] += wght[nbrs[i][j]];\n            wght = wmod;\n        }\n        return wght;\n    }\n    calculateShortestPath(node1, node2) {\n        const sz = this.numNodes;\n        let q = new Set();\n        for (let n = 0; n < sz; n++)\n            q.add(n);\n        let dist = Vec.numberArray(Number.MAX_SAFE_INTEGER, sz);\n        let prev = Vec.numberArray(-1, sz);\n        dist[node1] = 0;\n        while (q.size > 0) {\n            let u = -1;\n            for (let i of q)\n                if (u < 0 || dist[i] < dist[u])\n                    u = i;\n            q.delete(u);\n            if (u == node2)\n                break;\n            for (let v of this.nbrs[u]) {\n                let alt = dist[u] + 1;\n                if (alt < dist[v]) {\n                    dist[v] = alt;\n                    prev[v] = u;\n                }\n            }\n        }\n        let path = [];\n        for (let u = node2; prev[u] >= 0; u = prev[u])\n            path.unshift(u);\n        if (path.length > 0)\n            path.unshift(node1);\n        return path.length > 0 ? path : null;\n    }\n    adjacencyMatrix() {\n        const sz = this.numNodes;\n        let mtx = [];\n        for (let n = 0; n < sz; n++)\n            mtx.push(Vec.numberArray(0, sz));\n        for (let i = 0; i < sz; i++)\n            for (let j of this.nbrs[i])\n                mtx[i][j] = mtx[j][i] = 1;\n        return mtx;\n    }\n    distanceMatrix() {\n        const sz = this.numNodes;\n        let mtx = [];\n        for (let n = 0; n < sz; n++)\n            mtx.push(Vec.numberArray(Number.POSITIVE_INFINITY, sz));\n        for (let i = 0; i < sz; i++) {\n            mtx[i][i] = 0;\n            for (let j of this.nbrs[i])\n                mtx[i][j] = mtx[j][i] = 1;\n        }\n        for (let k = 0; k < sz; k++) {\n            for (let i = 0; i < sz; i++)\n                for (let j = 0; j < sz; j++) {\n                    if (!Number.isFinite(mtx[k][j]) || !Number.isFinite(mtx[i][k]))\n                        continue;\n                    mtx[i][j] = Math.min(mtx[i][j], mtx[i][k] + mtx[k][j]);\n                }\n        }\n        return mtx;\n    }\n    recursiveRingFind(path, psize, capacity, mask, rings) {\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < this.nbrs[last].length; n++) {\n                let adj = this.nbrs[last][n];\n                if (!mask[adj])\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++)\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                if (!fnd) {\n                    let newPath = Vec.duplicate(path);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, mask, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < this.nbrs[last].length; n++)\n            if (this.nbrs[last][n] == path[0]) {\n                fnd = true;\n                break;\n            }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n];\n            for (let i = 0; i < this.nbrs[p].length; i++)\n                if (path.indexOf(this.nbrs[p][i]) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = new Array(psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++)\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\n//# sourceMappingURL=Graph.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { Vec } from '../util/Vec';\nexport class ResonanceRemover {\n    constructor(mol, resBonds, atomHyd = []) {\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        this.maxIter = 1000;\n        this.bondOrders = [];\n        this.tolerant = false;\n        this.mol = mol;\n        this.resBonds = resBonds;\n        this.atomHyd = atomHyd;\n        for (let n = 1; n <= mol.numBonds; n++)\n            this.bondOrders.push(mol.bondOrder(n));\n    }\n    perform() {\n        const { mol } = this;\n        if (this.atomHyd == null) {\n            this.atomHyd = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                this.atomHyd.push(mol.atomHExplicit(n));\n        }\n        this.correctInputMask();\n        let g = new Graph(mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.resBonds[n - 1])\n                g.addEdge(mol.bondFrom(n) - 1, mol.bondTo(n) - 1);\n        let cc = g.calculateComponentGroups();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n].length >= 2)\n                this.processComponent(cc[n]);\n    }\n    correctInputMask() {\n        const { mol, atomHyd } = this;\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let exclude = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            let val = atno == Chemistry.ELEMENT_C ? 4 :\n                atno == Chemistry.ELEMENT_N || atno == Chemistry.ELEMENT_P || atno == Chemistry.ELEMENT_B ? 3 :\n                    atno == Chemistry.ELEMENT_O || atno == Chemistry.ELEMENT_S ? 2 : -1;\n            if (val < 0) {\n                exclude[n - 1] = true;\n                continue;\n            }\n            val += mol.atomCharge(n);\n            if (atomHyd[n - 1] > 0)\n                val -= atomHyd[n - 1];\n            if (mol.atomAdjCount(n) >= val)\n                exclude[n - 1] = true;\n        }\n        for (let n = 1; n <= nb; n++)\n            if (!this.resBonds[n - 1] && mol.bondOrder(n) != 1) {\n                exclude[mol.bondFrom(n) - 1] = true;\n                exclude[mol.bondTo(n) - 1] = true;\n            }\n        this.resBonds = this.resBonds.slice(0);\n        for (let n = 0; n < nb; n++)\n            if (this.resBonds[n] && (exclude[mol.bondFrom(n + 1) - 1] || exclude[mol.bondTo(n + 1) - 1])) {\n                this.bondOrders[n] = 1;\n                this.resBonds[n] = false;\n            }\n    }\n    processComponent(nodes) {\n        const { mol, resBonds, bondOrders, atomHyd } = this;\n        let sz = nodes.length;\n        if (sz == 2) {\n            let b = mol.findBond(nodes[0] + 1, nodes[1] + 1);\n            bondOrders[b - 1] = 2;\n            return;\n        }\n        let optionalH = Vec.booleanArray(false, sz);\n        for (let n = 0; n < sz; n++) {\n            let i = nodes[n], a = i + 1;\n            optionalH[n] = atomHyd[i] == Molecule.HEXPLICIT_UNKNOWN && mol.atomElement(a) == 'N' && mol.atomAdjCount(a) - mol.atomCharge(a) <= 2;\n        }\n        let g = new Graph(sz);\n        let gravity = g.calculateGravity();\n        let mask = Vec.idxMask(nodes, mol.numAtoms);\n        let bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1])\n                bsz++;\n        let bfr = Vec.numberArray(0, bsz), bto = Vec.numberArray(0, bsz), bgrav = Vec.numberArray(0, bsz), bidx = Vec.numberArray(0, bsz);\n        bsz = 0;\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (resBonds[n - 1] && mask[mol.bondFrom(n) - 1] && mask[mol.bondTo(n) - 1]) {\n                let f = nodes.indexOf(mol.bondFrom(n) - 1), t = nodes.indexOf(mol.bondTo(n) - 1);\n                bfr[bsz] = f;\n                bto[bsz] = t;\n                bgrav[bsz] = gravity[f] + gravity[t];\n                bidx[bsz] = n;\n                g.addEdge(f, t);\n                bsz++;\n            }\n        let seq = Vec.numberArray(0, bsz);\n        seq[0] = Vec.idxMax(bgrav);\n        let visited = Vec.booleanArray(false, bsz);\n        visited[seq[0]] = true;\n        for (let i = 1; i < bsz; i++) {\n            let b = -1;\n            for (let j = i - 1; j >= 0; j--) {\n                for (let n = 0; n < bsz; n++) {\n                    if (!visited[n])\n                        if (bfr[n] == bfr[seq[j]] || bfr[n] == bto[seq[j]] || bto[n] == bfr[seq[j]] || bto[n] == bto[seq[j]]) {\n                            if (b < 0 || bgrav[n] > bgrav[b])\n                                b = n;\n                        }\n                }\n                if (b >= 0)\n                    break;\n            }\n            if (b < 0)\n                throw 'Graph walk failed';\n            seq[i] = b;\n            visited[b] = true;\n        }\n        let paths = [];\n        paths.push([true]);\n        paths.push([false]);\n        let result = null;\n        let resultCount = 0;\n        let definiteMatch = Math.ceil(0.5 * bsz);\n        let iter = 0;\n        while (paths.length > 0) {\n            let p = paths[0];\n            let p1 = Vec.append(p, false), p2 = Vec.append(p, true);\n            if (!this.validPath(p1, seq, bfr, bto, g, optionalH))\n                p1 = null;\n            if (!this.validPath(p2, seq, bfr, bto, g, optionalH))\n                p2 = null;\n            if (Vec.len(p1) == bsz) {\n                let c = Vec.maskCount(p1);\n                if (c > resultCount) {\n                    result = p1;\n                    resultCount = c;\n                }\n                p1 = null;\n            }\n            if (Vec.len(p2) == bsz) {\n                let c = Vec.maskCount(p2);\n                if (c > resultCount) {\n                    result = p2;\n                    resultCount = c;\n                }\n                p2 = null;\n            }\n            if (resultCount >= definiteMatch)\n                break;\n            if (p1 == null && p2 == null)\n                paths.shift();\n            else if (p1 != null && p2 != null) {\n                paths[0] = p1;\n                paths.splice(1, 0, p2);\n            }\n            else if (p1 != null)\n                paths[0] = p1;\n            else\n                paths[0] = p2;\n            iter++;\n            if (iter > this.maxIter) {\n                if (result != null)\n                    break;\n                if (this.tolerant)\n                    return;\n                throw 'Resonance localisation exceeded maximum iteration count';\n            }\n        }\n        if (result == null) {\n            if (this.tolerant)\n                return;\n            throw 'Unable to find a solution to the resonance block.';\n        }\n        for (let n = 0; n < bsz; n++)\n            bondOrders[bidx[seq[n]] - 1] = result[n] ? 2 : 1;\n    }\n    validPath(path, seq, bfr, bto, g, optionalH) {\n        let sz = g.numNodes;\n        let count1 = Vec.numberArray(0, sz), count2 = Vec.numberArray(0, sz);\n        for (let n = 0; n < path.length; n++) {\n            let a1 = bfr[seq[n]], a2 = bto[seq[n]];\n            if (path[n]) {\n                count2[a1]++;\n                count2[a2]++;\n            }\n            else {\n                count1[a1]++;\n                count1[a2]++;\n            }\n        }\n        for (let n = 0; n < sz; n++) {\n            if (count2[n] > 1)\n                return false;\n            if (!optionalH[n] && g.numEdges(n) > 1 && count1[n] == g.numEdges(n))\n                return false;\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=ResonanceRemover.js.map","import { safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nexport const BONDARTIFACT_EXTRA_RESPATH = 'xRESPATH:';\nexport const BONDARTIFACT_EXTRA_RESRING = 'xRESRING:';\nexport const BONDARTIFACT_EXTRA_ARENE = 'xARENE:';\nexport class BondArtifact {\n    constructor(mol) {\n        this.mol = mol;\n        this.resPaths = new Map();\n        this.resRings = new Map();\n        this.arenes = new Map();\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let str of this.mol.atomExtra(n)) {\n                if (str.startsWith(BONDARTIFACT_EXTRA_RESPATH))\n                    this.appendResPath(n, str.substring(BONDARTIFACT_EXTRA_RESPATH.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_RESRING))\n                    this.appendResRing(n, str.substring(BONDARTIFACT_EXTRA_RESRING.length).split(':'));\n                else if (str.startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    this.appendArene(n, str.substring(BONDARTIFACT_EXTRA_ARENE.length).split(':'));\n            }\n        }\n        for (let [blk, res] of this.resPaths.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, false))\n                this.resPaths.delete(blk);\n        }\n        for (let [blk, res] of this.resRings.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (!this.pathify(res.atoms, true))\n                this.resRings.delete(blk);\n        }\n        for (let [blk, res] of this.arenes.entries()) {\n            res.atoms = this.pack(res.atoms);\n            if (res.atoms.length > 1)\n                res.centre = res.atoms.shift();\n            if (!this.pathify(res.atoms, false))\n                this.arenes.delete(blk);\n        }\n    }\n    getPathBlocks() { return Array.from(this.resPaths.keys()); }\n    getRingBlocks() { return Array.from(this.resRings.keys()); }\n    getAreneBlocks() { return Array.from(this.arenes.keys()); }\n    getResPaths() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resPaths.keys())))\n            list.push(this.resPaths.get(key));\n        return list;\n    }\n    getResRings() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.resRings.keys())))\n            list.push(this.resRings.get(key));\n        return list;\n    }\n    getArenes() {\n        let list = [];\n        for (let key of Vec.sorted(Array.from(this.arenes.keys())))\n            list.push(this.arenes.get(key));\n        return list;\n    }\n    rewriteMolecule() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n), modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) || extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) || extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE)) {\n                    extra.splice(i);\n                    modified = true;\n                }\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n        for (let [blk, path] of this.resPaths.entries()) {\n            for (let n = 0; n < path.atoms.length; n++) {\n                let extra = mol.atomExtra(path.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESPATH + blk + ':' + (n + 1));\n                mol.setAtomExtra(path.atoms[n], extra);\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let extra = mol.atomExtra(ring.atoms[n]);\n                extra.push(BONDARTIFACT_EXTRA_RESRING + blk + ':' + (n + 1));\n                mol.setAtomExtra(ring.atoms[n], extra);\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            for (let n = -1; n < arene.atoms.length; n++) {\n                let atom = n < 0 ? arene.centre : arene.atoms[n];\n                let extra = mol.atomExtra(atom);\n                extra.push(BONDARTIFACT_EXTRA_ARENE + blk + ':' + (n + 2));\n                mol.setAtomExtra(atom, extra);\n            }\n        }\n    }\n    harmoniseNumbering(other) {\n        let blocks = other.getPathBlocks();\n        let stashPaths = this.getResPaths();\n        this.resPaths.clear();\n        for (let path of stashPaths) {\n            let blk = this.nextIdentifier(blocks);\n            this.resPaths.set(blk, path);\n            blocks.push(blk);\n        }\n        blocks = other.getRingBlocks();\n        let stashRings = this.getResRings();\n        this.resRings.clear();\n        for (let ring of stashRings) {\n            let blk = this.nextIdentifier(blocks);\n            this.resRings.set(blk, ring);\n            blocks.push(blk);\n        }\n        blocks = other.getAreneBlocks();\n        let stashArenes = this.getArenes();\n        this.arenes.clear();\n        for (let arene of stashArenes) {\n            let blk = this.nextIdentifier(blocks);\n            this.arenes.set(blk, arene);\n            blocks.push(blk);\n        }\n    }\n    createPath(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let path = this.atomsAsPath(atoms);\n        if (path) {\n            let id = this.nextIdentifier(Array.from(this.resPaths.keys()));\n            this.resPaths.set(id, path);\n            return true;\n        }\n        return false;\n    }\n    createRing(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let ring = this.atomsAsRing(atoms);\n        if (ring) {\n            let id = this.nextIdentifier(Array.from(this.resRings.keys()));\n            this.resRings.set(id, ring);\n            return true;\n        }\n        return false;\n    }\n    createArene(atoms) {\n        if (this.alreadyExists(atoms))\n            return false;\n        let arene = this.atomsAsArene(atoms);\n        if (arene) {\n            let id = this.nextIdentifier(Array.from(this.arenes.keys()));\n            this.arenes.set(id, arene);\n            return true;\n        }\n        return false;\n    }\n    removeArtifact(atoms) {\n        let type = 0, pick = 0, overlap = 0;\n        for (let [blk, path] of this.resPaths.entries()) {\n            let count = 0;\n            for (let a of path.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 1;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, ring] of this.resRings.entries()) {\n            let count = 0;\n            for (let a of ring.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 2;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        for (let [blk, arene] of this.arenes.entries()) {\n            let count = atoms.indexOf(arene.centre) >= 0 ? 1 : 0;\n            for (let a of arene.atoms)\n                if (atoms.indexOf(a) >= 0)\n                    count++;\n            if (count > overlap) {\n                type = 3;\n                pick = blk;\n                overlap = count;\n            }\n        }\n        if (type == 0)\n            return false;\n        else if (type == 1)\n            this.resPaths.delete(pick);\n        else if (type == 2)\n            this.resRings.delete(pick);\n        else if (type == 3)\n            this.arenes.delete(pick);\n        return true;\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(BONDARTIFACT_EXTRA_RESPATH) && !extra[i].startsWith(BONDARTIFACT_EXTRA_RESRING) &&\n                    !extra[i].startsWith(BONDARTIFACT_EXTRA_ARENE))\n                    continue;\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    appendResPath(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resPaths.get(blk);\n        if (res == null)\n            this.resPaths.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendResRing(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.resRings.get(blk);\n        if (res == null)\n            this.resRings.set(blk, res = { atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    appendArene(atom, bits) {\n        let blk = safeInt(bits[0], 0);\n        if (blk <= 0)\n            return;\n        let res = this.arenes.get(blk);\n        if (res == null)\n            this.arenes.set(blk, res = { centre: 0, atoms: Vec.numberArray(0, this.mol.numAtoms) });\n        let idx = bits.length >= 2 ? safeInt(bits[1], 0) : 0;\n        if (res.atoms.indexOf(atom) >= 0)\n            return;\n        if (idx >= 1 && idx <= this.mol.numAtoms)\n            res.atoms[idx - 1] = atom;\n        else\n            res.atoms.push(atom);\n    }\n    pack(arr) {\n        let ret = [];\n        for (let v of arr)\n            if (v != 0)\n                ret.push(v);\n        return ret;\n    }\n    pathify(atoms, requireRing) {\n        let sz = atoms.length;\n        if (sz < 2)\n            return false;\n        let g = Graph.fromMolecule(this.mol);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            g.setIndex(n, n + 1);\n        g = g.subgraphIndex(Vec.add(atoms, -1));\n        let pos = 0;\n        for (let n = 1; n < sz; n++)\n            if (g.numEdges(n) < g.numEdges(pos))\n                pos = n;\n        Vec.setTo(atoms, -1);\n        for (let n = 0; n < sz; n++) {\n            atoms[n] = pos;\n            if (n == sz - 1) {\n                if (requireRing)\n                    if (g.getEdges(pos).indexOf(atoms[0]) < 0)\n                        return false;\n            }\n            else {\n                let next = sz;\n                for (let i of g.getEdges(pos))\n                    if (atoms.indexOf(i) < 0 && i < next)\n                        next = i;\n                if (next == sz)\n                    return false;\n                pos = next;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            atoms[n] = g.getIndex(atoms[n]);\n        return true;\n    }\n    alreadyExists(atoms) {\n        atoms = Vec.sorted(atoms);\n        for (let path of this.resPaths.values()) {\n            if (Vec.equals(atoms, Vec.sorted(path.atoms)))\n                return true;\n        }\n        for (let ring of this.resRings.values()) {\n            if (Vec.equals(atoms, Vec.sorted(ring.atoms)))\n                return true;\n        }\n        for (let arene of this.arenes.values()) {\n            let areneAtoms = Vec.append(arene.atoms, arene.centre);\n            if (Vec.equals(atoms, Vec.sorted(areneAtoms)))\n                return true;\n        }\n        return false;\n    }\n    atomsAsPath(atoms) {\n        if (atoms.length < 2)\n            return null;\n        let path = { atoms: atoms };\n        if (!this.pathify(path.atoms, false))\n            return null;\n        return path;\n    }\n    atomsAsRing(atoms) {\n        if (atoms.length < 3)\n            return null;\n        let ring = { atoms: atoms };\n        if (!this.pathify(ring.atoms, true))\n            return null;\n        return ring;\n    }\n    atomsAsArene(atoms) {\n        const sz = atoms.length;\n        if (sz < 3)\n            return null;\n        let g = Graph.fromMolecule(this.mol).subgraphIndex(Vec.add(atoms, -1));\n        let best = 0;\n        if (sz == 3) {\n            let bsum = [0, 0, 0];\n            for (let n = 0; n < sz; n++) {\n                if (g.numEdges(n) != 2)\n                    return null;\n                for (let e of g.getEdges(n))\n                    bsum[n] += this.mol.bondOrder(this.mol.findBond(atoms[n], atoms[e]));\n                best = Vec.idxMin(bsum);\n            }\n        }\n        else {\n            for (let n = 1; n < sz; n++)\n                if (g.numEdges(n) > g.numEdges(best))\n                    best = n;\n        }\n        let arene = { centre: atoms[best], atoms: Vec.remove(atoms, best) };\n        if (!this.pathify(arene.atoms, false))\n            return null;\n        return arene;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=BondArtifact.js.map","import { deepClone, safeFloat, safeInt } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Molecule } from '../mol/Molecule';\nexport var DataSheetColumn;\n(function (DataSheetColumn) {\n    DataSheetColumn[\"Molecule\"] = \"molecule\";\n    DataSheetColumn[\"String\"] = \"string\";\n    DataSheetColumn[\"Real\"] = \"real\";\n    DataSheetColumn[\"Integer\"] = \"integer\";\n    DataSheetColumn[\"Boolean\"] = \"boolean\";\n    DataSheetColumn[\"Extend\"] = \"extend\";\n})(DataSheetColumn || (DataSheetColumn = {}));\nexport class DataSheet {\n    constructor(data) {\n        if (!data)\n            data = {};\n        if (!data.title)\n            data.title = '';\n        if (!data.description)\n            data.description = '';\n        if (data.numCols == null)\n            data.numCols = Vec.len(data.colData);\n        if (data.numRows == null)\n            data.numRows = Vec.len(data.rowData);\n        if (data.numExtens == null)\n            data.numExtens = Vec.len(data.extData);\n        if (data.colData == null)\n            data.colData = [];\n        if (data.rowData == null)\n            data.rowData = [];\n        if (data.extData == null)\n            data.extData = [];\n        this.data = data;\n    }\n    clone(withRows = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: numCols,\n            numRows: withRows ? numRows : 0,\n            numExtens: this.data.numExtens,\n            colData: deepClone(colData),\n            rowData: withRows ? new Array(numRows) : [],\n            extData: deepClone(this.data.extData),\n        };\n        if (withRows)\n            for (let r = 0; r < numRows; r++) {\n                let inRow = rowData[r], outRow = new Array(numCols);\n                for (let c = 0; c < numCols; c++) {\n                    if (inRow[c] != null && colData[c].type == \"molecule\" && inRow[c] instanceof Molecule)\n                        outRow[c] = inRow[c].clone();\n                    else\n                        outRow[c] = inRow[c];\n                }\n                data.rowData[r] = outRow;\n            }\n        return new DataSheet(data);\n    }\n    cloneMask(colMask, rowMask = null, inclExtn = true) {\n        let { numCols, numRows, colData, rowData } = this.data;\n        let data = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: Vec.maskCount(colMask),\n            numRows: rowMask ? Vec.maskCount(rowMask) : 0,\n            numExtens: inclExtn ? this.data.numExtens : 0,\n            colData: deepClone(Vec.maskGet(colData, colMask)),\n            rowData: [],\n            extData: inclExtn ? deepClone(this.data.extData) : [],\n        };\n        if (rowMask)\n            for (let r = 0; r < numRows; r++)\n                if (rowMask[r]) {\n                    let inRow = rowData[r], outRow = Vec.maskGet(inRow, colMask);\n                    data.rowData.push(outRow);\n                }\n        const { colData: outCols, rowData: outRows } = data;\n        for (let c = outCols.length - 1; c >= 0; c--)\n            if (outCols[c].type == \"molecule\") {\n                for (let r = outRows.length - 1; r >= 0; r--)\n                    if (outRows[r][c] != null && outRows[r][c] instanceof Molecule)\n                        outRows[r][c] = outRows[r][c].clone();\n            }\n        return new DataSheet(data);\n    }\n    getData() {\n        return this.data;\n    }\n    get numCols() {\n        return this.data.numCols;\n    }\n    get numRows() {\n        return this.data.numRows;\n    }\n    get title() { return this.data.title; }\n    set title(title) { this.data.title = title; }\n    get description() { return this.data.description; }\n    set description(description) { this.data.description = description; }\n    get numExtensions() {\n        return this.data.numExtens;\n    }\n    getExtName(idx) {\n        return this.data.extData[idx].name;\n    }\n    getExtType(idx) {\n        return this.data.extData[idx].type;\n    }\n    getExtData(idx) {\n        return this.data.extData[idx].data;\n    }\n    setExtName(idx, val) {\n        this.data.extData[idx].name = val;\n    }\n    setExtType(idx, val) {\n        this.data.extData[idx].type = val;\n    }\n    setExtData(idx, val) {\n        this.data.extData[idx].data = val;\n    }\n    appendExtension(name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.push({ name, type, data });\n        return this.data.numExtens - 1;\n    }\n    insertExtension(idx, name, type, data) {\n        this.data.numExtens++;\n        this.data.extData.splice(idx, 0, { name, type, data });\n    }\n    deleteExtension(idx) {\n        this.data.extData.splice(idx, 1);\n        this.data.numExtens--;\n    }\n    colName(col) {\n        return this.data.colData[col].name;\n    }\n    colType(col) {\n        return this.data.colData[col].type;\n    }\n    colDescr(col) {\n        return this.data.colData[col].descr;\n    }\n    isNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col] == null;\n    }\n    notNull(row, col) {\n        return !this.isNull(row, col);\n    }\n    isBlank(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col))\n            return true;\n        let ct = this.colType(col);\n        if (ct == \"molecule\")\n            return this.getMolecule(row, col).numAtoms == 0;\n        if (ct == \"string\")\n            return this.getString(row, col).length == 0;\n        if (ct == \"extend\")\n            return this.getExtend(row, col).length == 0;\n        return false;\n    }\n    notBlank(row, col) {\n        return !this.isBlank(row, col);\n    }\n    getObject(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        return this.data.rowData[row][col];\n    }\n    getMolecule(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let datum = this.data.rowData[row][col];\n        if (datum == null)\n            return null;\n        if (typeof datum === 'string') {\n            datum = Molecule.fromString(datum);\n            this.data.rowData[row][col] = datum;\n        }\n        return datum;\n    }\n    getMoleculeClone(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol == null ? null : mol.clone();\n    }\n    getMoleculeBlank(row, col) {\n        let mol = this.getMolecule(row, col);\n        return mol ? mol : new Molecule();\n    }\n    getString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        let str = this.data.rowData[row][col];\n        return str == null ? '' : str;\n    }\n    getInteger(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getReal(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getBoolean(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    getExtend(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return null;\n        return this.data.rowData[row][col];\n    }\n    setToNull(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = null;\n    }\n    setObject(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = mol ? mol.clone() : null;\n    }\n    setString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    setExtend(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (col < 0)\n            return;\n        this.data.rowData[row][col] = val;\n    }\n    isEqualMolecule(row, col, mol) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (mol == null))\n            return false;\n        if (mol == null)\n            return true;\n        return this.getMolecule(row, col).compareTo(mol) == 0;\n    }\n    isEqualString(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null || val == ''))\n            return false;\n        if (val == null || val == '')\n            return true;\n        return this.getString(row, col) == val;\n    }\n    isEqualInteger(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getInteger(row, col) == val;\n    }\n    isEqualReal(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getReal(row, col) == val;\n    }\n    isEqualBoolean(row, col, val) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        if (this.isNull(row, col) != (val == null))\n            return false;\n        if (val == null)\n            return true;\n        return this.getBoolean(row, col) == val;\n    }\n    appendColumn(name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.push({ name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].push(null);\n        return this.data.numCols - 1;\n    }\n    insertColumn(col, name, type, descr) {\n        this.data.numCols++;\n        this.data.colData.splice(col, 0, { name, type, descr });\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 0, null);\n    }\n    deleteColumn(col) {\n        this.data.numCols--;\n        this.data.colData.splice(col, 1);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n].splice(col, 1);\n    }\n    changeColumnName(col, name, descr) {\n        this.data.colData[col].name = name;\n        this.data.colData[col].descr = descr;\n    }\n    changeColumnType(col, newType) {\n        let oldType = this.colType(col);\n        if (oldType == newType)\n            return;\n        let incompatible = oldType == \"molecule\" || newType == \"molecule\" ||\n            oldType == \"extend\" || newType == \"extend\";\n        for (let n = this.data.rowData.length - 1; n >= 0; n--) {\n            let row = this.data.rowData[n];\n            if (row[col] == null)\n                continue;\n            if (incompatible) {\n                row[col] = null;\n                continue;\n            }\n            let val = '';\n            if (oldType == \"string\")\n                val = row[col];\n            else if (oldType == \"integer\")\n                val = row[col].toString();\n            else if (oldType == \"real\")\n                val = row[col].toString();\n            else if (oldType == \"boolean\")\n                val = row[col] ? 'true' : 'false';\n            row[col] = null;\n            if (newType == \"string\")\n                row[col] = val;\n            else if (newType == \"integer\") {\n                let num = parseInt(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"real\") {\n                let num = parseFloat(val);\n                row[col] = isFinite(num) ? num : null;\n            }\n            else if (newType == \"boolean\")\n                row[col] = val.toLowerCase() == 'true' ? true : false;\n        }\n        this.data.colData[col].type = newType;\n    }\n    ensureColumn(name, type, descr) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (this.data.colData[n].type != type)\n                    this.changeColumnType(n, type);\n                this.data.colData[n].descr = descr;\n                return n;\n            }\n        return this.appendColumn(name, type, descr);\n    }\n    reorderColumns(order) {\n        let identity = true;\n        for (let n = 0; n < order.length - 1; n++)\n            if (order[n] != order[n + 1] - 1) {\n                identity = false;\n                break;\n            }\n        if (identity)\n            return;\n        this.data.colData = Vec.idxGet(this.data.colData, order);\n        for (let n = 0; n < this.data.numRows; n++)\n            this.data.rowData[n] = Vec.idxGet(this.data.rowData[n], order);\n    }\n    appendRow() {\n        this.data.numRows++;\n        let row = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            row.push(null);\n        this.data.rowData.push(row);\n        return this.data.numRows - 1;\n    }\n    appendRowFrom(srcDS, row) {\n        this.data.numRows++;\n        this.data.rowData.push(srcDS.data.rowData[row].slice(0));\n        return this.data.numRows - 1;\n    }\n    insertRow(row) {\n        this.data.numRows++;\n        let data = new Array();\n        for (let n = 0; n < this.data.numCols; n++)\n            data.push(null);\n        this.data.rowData.splice(row, 0, data);\n    }\n    deleteRow(row) {\n        this.data.numRows--;\n        this.data.rowData.splice(row, 1);\n    }\n    deleteAllRows() {\n        this.data.numRows = 0;\n        this.data.rowData = new Array();\n    }\n    moveRowUp(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row - 1];\n        this.data.rowData[row - 1] = data;\n    }\n    moveRowDown(row) {\n        let data = this.data.rowData[row];\n        this.data.rowData[row] = this.data.rowData[row + 1];\n        this.data.rowData[row + 1] = data;\n    }\n    swapRows(row1, row2) {\n        Vec.swap(this.data.rowData, row1, row2);\n    }\n    exciseSingleRow(row) {\n        let newData = {\n            title: this.data.title,\n            description: this.data.description,\n            numCols: this.data.numCols,\n            numRows: 1,\n            numExtens: this.data.numExtens,\n            colData: this.data.colData.slice(0),\n            rowData: [this.data.rowData[row].slice(0)],\n            extData: this.data.extData.slice(0)\n        };\n        return new DataSheet(newData);\n    }\n    colIsPrimitive(col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let ct = this.data.colData[col].type;\n        return ct == 'string' || ct == 'real' || ct == 'integer' || ct == 'boolean';\n    }\n    findColByName(name, type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].name == name) {\n                if (type == null || this.data.colData[n].type == type)\n                    return n;\n            }\n        return -1;\n    }\n    firstColOfType(type) {\n        for (let n = 0; n < this.data.numCols; n++)\n            if (this.data.colData[n].type == type)\n                return n;\n        return -1;\n    }\n    copyCell(toRow, toCol, fromDS, fromRow, fromCol) {\n        this.setToNull(toRow, toCol);\n        if (fromDS.isNull(fromRow, fromCol))\n            return;\n        let obj = fromDS.getObject(fromRow, fromCol);\n        this.setObject(toRow, toCol, DataSheet.convertType(obj, fromDS.colType(fromCol), this.colType(toCol)));\n    }\n    static convertType(obj, fromType, toType) {\n        const ft = fromType, tt = toType;\n        if (obj == null || ft == tt || (typeof obj == 'string' && obj == ''))\n            return obj;\n        if (tt == \"string\") {\n            if (ft == \"integer\")\n                return obj.toString();\n            else if (ft == \"real\")\n                return obj.toString();\n            else if (ft == \"boolean\")\n                return obj ? 'true' : 'false';\n        }\n        else if (tt == \"real\") {\n            if (ft == \"string\")\n                return safeFloat(obj, null);\n            else if (ft == \"integer\")\n                return obj;\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"integer\") {\n            if (ft == \"string\")\n                return safeInt(obj, null);\n            else if (ft == \"real\")\n                return Math.round(obj);\n            else if (ft == \"boolean\")\n                return obj ? 1 : 0;\n        }\n        else if (tt == \"boolean\") {\n            if (ft == \"string\")\n                return obj.toLowerCase() == 'true';\n            else if (ft == \"integer\")\n                return obj > 0;\n            else if (ft == \"real\")\n                return obj >= 0.5;\n        }\n        return null;\n    }\n    toString(row, col) {\n        if (typeof col === 'string')\n            col = this.findColByName(col);\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : obj.toString();\n    }\n    toInt(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseInt(obj);\n    }\n    toReal(row, col) {\n        if (!this.colIsPrimitive(col))\n            return null;\n        let obj = this.data.rowData[row][col];\n        return obj == null ? null : parseFloat(obj);\n    }\n}\n//# sourceMappingURL=DataSheet.js.map","import { Vec } from '../util/Vec';\nexport var ForeignMoleculeTransient;\n(function (ForeignMoleculeTransient) {\n    ForeignMoleculeTransient[\"AtomAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondAromatic\"] = \"yAROMATIC\";\n    ForeignMoleculeTransient[\"BondZeroDative\"] = \"yZERO_DATIVE\";\n    ForeignMoleculeTransient[\"BondZeroHydrogen\"] = \"yZERO_HYDROGEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLOdd\"] = \"yCHIRAL_MDL_ODD\";\n    ForeignMoleculeTransient[\"AtomChiralMDLEven\"] = \"yCHIRAL_MDL_EVEN\";\n    ForeignMoleculeTransient[\"AtomChiralMDLRacemic\"] = \"yCHIRAL_MDL_RACEMIC\";\n    ForeignMoleculeTransient[\"AtomExplicitValence\"] = \"yMDL_EXPLICIT_VALENCE\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiAttach\"] = \"yMDL_SGROUP_MULTIATTACH\";\n    ForeignMoleculeTransient[\"AtomSgroupMultiRepeat\"] = \"yMDL_SGROUP_MULTIREPEAT\";\n    ForeignMoleculeTransient[\"AtomSgroupData\"] = \"yMDL_SGROUP_DATA\";\n    ForeignMoleculeTransient[\"AtomSCSRClass\"] = \"yMDL_SCSR_CLASS\";\n    ForeignMoleculeTransient[\"AtomSCSRSeqID\"] = \"yMDL_SCSR_SEQID\";\n    ForeignMoleculeTransient[\"AtomSCSRAttchOrd\"] = \"yMDL_SCSR_ATTCHORD\";\n})(ForeignMoleculeTransient || (ForeignMoleculeTransient = {}));\nexport class ForeignMolecule {\n    static noteAromaticAtoms(mol) {\n        const sz = mol.numAtoms;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.atomTransient(n).indexOf(ForeignMoleculeTransient.AtomAromatic) >= 0;\n        return mask;\n    }\n    static noteAromaticBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0;\n        return mask;\n    }\n    static noteZeroDativeBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroDative);\n        return mask;\n    }\n    static noteZeroHydrogenBonds(mol) {\n        const sz = mol.numBonds;\n        let mask = Vec.booleanArray(false, sz);\n        for (let n = 1; n <= sz; n++)\n            mask[n - 1] = mol.bondTransient(n).includes(ForeignMoleculeTransient.BondZeroHydrogen);\n        return mask;\n    }\n    static markExplicitValence(mol, atom, valence) {\n        let trans = mol.atomTransient(atom).filter((tr) => !tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'));\n        trans.push(`${ForeignMoleculeTransient.AtomExplicitValence}:${valence}`);\n        mol.setAtomTransient(atom, trans);\n    }\n    static noteExplicitValence(mol, atom) {\n        let trans = mol.atomTransient(atom);\n        for (let tr of trans)\n            if (tr.startsWith(ForeignMoleculeTransient.AtomExplicitValence + ':'))\n                return parseInt(tr.substring(ForeignMoleculeTransient.AtomExplicitValence.length + 1));\n        return null;\n    }\n    static markSgroupMultiAttach(mol, name, atoms, keyval = {}) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let comma = payload.indexOf(',');\n                    let bits = payload.split(',');\n                    let idx = parseInt(bits[0]);\n                    if (!(idx > 0))\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiAttach}:${idxHigh + 1},${name}`;\n        for (let [key, val] of Object.entries(keyval))\n            tag += ',' + key + '=' + val;\n        for (let a of atoms)\n            mol.setAtomTransient(a, Vec.append(mol.atomTransient(a), tag));\n    }\n    static hasAnySgroupMultiAttach(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiAttach(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiAttach + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiAttach.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 2)\n                        continue;\n                    let idx = parseInt(bits[0]), name = bits[1];\n                    if (!(idx > 0) || !name)\n                        continue;\n                    let keyval = {};\n                    for (let i = 2; i < bits.length; i++) {\n                        let eq = bits[i].indexOf('=');\n                        if (eq < 0)\n                            continue;\n                        keyval[bits[i].substring(0, eq)] = bits[i].substring(eq + 1);\n                    }\n                    let sgm = map[idx];\n                    if (sgm)\n                        sgm.atoms.push(n);\n                    else\n                        map[idx] = { name, atoms: [n], keyval };\n                }\n        return Object.values(map);\n    }\n    static markSgroupMultiRepeat(mol, mult, atoms) {\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let unit = atoms.length / mult;\n        let tag = `${ForeignMoleculeTransient.AtomSgroupMultiRepeat}:${idxHigh + 1},${mult},${unit},`;\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag + (n + 1)));\n    }\n    static hasAnySgroupMultiRepeat(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupMultiRepeat(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupMultiRepeat + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupMultiRepeat.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 4)\n                        continue;\n                    let idx = parseInt(bits[0]), mult = parseInt(bits[1]), unit = parseInt(bits[2]), pos = parseInt(bits[3]);\n                    if (!(idx > 0) || mult < 2 || unit < 1 || pos < 1 || pos > mult * unit)\n                        continue;\n                    let mr = map[idx];\n                    if (mr == null)\n                        map[idx] = mr = { mult, unit, atoms: Vec.numberArray(0, mult * unit) };\n                    else if (mr.mult != mult || mr.unit != unit)\n                        continue;\n                    mr.atoms[pos - 1] = n;\n                }\n        return Object.values(map);\n    }\n    static markSgroupData(mol, name, value, unit, query, atoms) {\n        var _a;\n        let idxHigh = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let comma = payload.indexOf(',');\n                    if (comma <= 0)\n                        continue;\n                    let idx = parseInt(payload.substring(0, comma));\n                    if (idx <= 0)\n                        continue;\n                    idxHigh = Math.max(idxHigh, idx);\n                }\n        let bits = [(idxHigh + 1).toString(), name, value, unit, query];\n        for (let n = 1; n < bits.length; n++)\n            bits[n] = ((_a = bits[n]) !== null && _a !== void 0 ? _a : '').replace(/\\,/g, '@@');\n        let tag = ForeignMoleculeTransient.AtomSgroupData + ':' + bits.join(',');\n        for (let n = 0; n < atoms.length; n++)\n            mol.setAtomTransient(atoms[n], Vec.append(mol.atomTransient(atoms[n]), tag));\n    }\n    static hasAnySgroupData(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomTransient(n).some((tag) => tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')))\n                return true;\n        return false;\n    }\n    static noteAllSgroupData(mol) {\n        let map = {};\n        for (let n = 1; n <= mol.numAtoms; n++)\n            for (let tag of mol.atomTransient(n))\n                if (tag.startsWith(ForeignMoleculeTransient.AtomSgroupData + ':')) {\n                    let payload = tag.substring(ForeignMoleculeTransient.AtomSgroupData.length + 1);\n                    let bits = payload.split(',');\n                    if (bits.length < 5)\n                        continue;\n                    let idx = parseInt(bits[0]);\n                    for (let i = 1; i < 5; i++)\n                        bits[i] = bits[i].replace(/\\@\\@/g, ',');\n                    if (!(idx > 0))\n                        continue;\n                    let sd = map[idx];\n                    if (sd)\n                        sd.atoms.push(n);\n                    else\n                        map[idx] = { name: bits[1], value: bits[2], unit: bits[3], query: bits[4], atoms: [n] };\n                }\n        return Object.values(map);\n    }\n}\n//# sourceMappingURL=ForeignMolecule.js.map","import { Vec } from '../util/Vec';\nexport const POLYMERBLOCK_EXTRA_POLYMER = 'xPOLYMER:';\nexport const POLYMERBLOCK_SPECIAL_UNCAPPED = '*';\nexport var PolymerBlockConnectivity;\n(function (PolymerBlockConnectivity) {\n    PolymerBlockConnectivity[\"HeadToTail\"] = \"ht\";\n    PolymerBlockConnectivity[\"HeadToHead\"] = \"hh\";\n    PolymerBlockConnectivity[\"Random\"] = \"rnd\";\n})(PolymerBlockConnectivity || (PolymerBlockConnectivity = {}));\nexport class PolymerBlockUnit {\n    constructor(atoms) {\n        this.atoms = atoms;\n        this.connect = null;\n        this.bondConn = null;\n        this.atomName = new Map();\n        this.bondIncl = new Map();\n        this.bondExcl = new Map();\n    }\n    clone() {\n        let dup = new PolymerBlockUnit(this.atoms.slice(0));\n        dup.connect = this.connect;\n        if (this.bondConn)\n            dup.bondConn = this.bondConn.slice(0);\n        for (let [k, v] of this.atomName.entries())\n            dup.atomName.set(k, v.slice(0));\n        for (let [k, v] of this.bondIncl.entries())\n            dup.bondIncl.set(k, v.slice(0));\n        for (let [k, v] of this.bondExcl.entries())\n            dup.bondExcl.set(k, v.slice(0));\n        return dup;\n    }\n}\nexport class PolymerBlock {\n    constructor(mol) {\n        this.mol = mol;\n        this.units = new Map();\n        let blockAtoms = new Map();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            for (let str of extra)\n                if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = str.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    let id = parseInt(bits[0]);\n                    if (id > 0) {\n                        let atoms = blockAtoms.get(id);\n                        if (atoms)\n                            atoms.push(n);\n                        else\n                            atoms = [n];\n                        blockAtoms.set(id, atoms);\n                    }\n                }\n        }\n        for (let key of Vec.sorted(Array.from(blockAtoms.keys())))\n            this.appendBlock(key, blockAtoms.get(key));\n    }\n    getIDList() { return Vec.sorted(Array.from(this.units.keys())); }\n    getUnit(id) { return this.units.get(id); }\n    getUnits() { return Array.from(this.units.values()); }\n    rewriteMolecule() {\n        this.purgeExtraFields();\n        for (let key of Vec.sorted(Array.from(this.units.keys())))\n            this.writeUnit(key, this.units.get(key));\n    }\n    harmoniseNumbering(other) {\n        let allKeys = other.getIDList();\n        for (let key of this.getIDList())\n            if (allKeys.includes(key)) {\n                let unit = this.units.get(key);\n                this.units.delete(key);\n                key = this.nextIdentifier(allKeys);\n                this.units.set(key, unit);\n                allKeys.push(key);\n            }\n    }\n    removeUnit(id) {\n        let unit = this.units.get(id);\n        if (unit == null)\n            return;\n        this.units.delete(id);\n        let pfx = POLYMERBLOCK_EXTRA_POLYMER + id + ':';\n        for (let a of unit.atoms) {\n            let extra = this.mol.atomExtra(a);\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setAtomExtra(a, extra);\n        }\n        for (let b = 1; b <= this.mol.numBonds; b++) {\n            let extra = this.mol.bondExtra(b);\n            if (Vec.isBlank(extra))\n                continue;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(pfx))\n                    extra = Vec.remove(extra, i);\n            this.mol.setBondExtra(b, extra);\n        }\n    }\n    removeAll() {\n        this.units.clear();\n        this.purgeExtraFields();\n    }\n    createUnit(unit) {\n        let id = this.nextIdentifier();\n        this.units.set(id, unit.clone());\n        this.writeUnit(id, unit);\n        return id;\n    }\n    static hasPolymerExtensions(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                        return true;\n        }\n        return false;\n    }\n    static getPolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom), polext = null;\n        if (extra == null)\n            return null;\n        for (let str of extra)\n            if (str.startsWith(POLYMERBLOCK_EXTRA_POLYMER))\n                polext = Vec.append(polext, str);\n        return polext;\n    }\n    static removePolymerExtensions(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        if (extra == null)\n            return;\n        let modified = false;\n        for (let i = extra.length - 1; i >= 0; i--)\n            if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                extra = Vec.remove(extra, i);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    appendBlock(id, atoms) {\n        const { mol } = this;\n        let nattach = 0;\n        let unit = new PolymerBlockUnit(atoms);\n        for (let atom of atoms)\n            for (let extra of mol.atomExtra(atom))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    nattach = parseInt(bits[1]);\n                    for (let n = 2; n < bits.length; n++) {\n                        if (bits[n] == PolymerBlockConnectivity.HeadToTail)\n                            unit.connect = PolymerBlockConnectivity.HeadToTail;\n                        else if (bits[n] == PolymerBlockConnectivity.HeadToHead)\n                            unit.connect = PolymerBlockConnectivity.HeadToHead;\n                        else if (bits[n] == PolymerBlockConnectivity.Random)\n                            unit.connect = PolymerBlockConnectivity.Random;\n                        else if (bits[n].startsWith('n')) {\n                            let hasOuter = false;\n                            for (let adj of mol.atomAdjList(atom))\n                                if (!atoms.includes(adj)) {\n                                    hasOuter = true;\n                                    break;\n                                }\n                            if (hasOuter) {\n                                let subBits = bits[n].substring(1).split(',');\n                                unit.atomName.set(atom, subBits.map((str) => parseInt(str)));\n                            }\n                        }\n                    }\n                }\n        if (nattach < 0)\n            return;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let in1 = atoms.indexOf(mol.bondFrom(n)) >= 0, in2 = atoms.indexOf(mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nattach--;\n        }\n        if (nattach != 0)\n            return;\n        let bonds = null, order = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            for (let extra of mol.bondExtra(n))\n                if (extra.startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    let bits = extra.substring(POLYMERBLOCK_EXTRA_POLYMER.length).split(':');\n                    if (bits.length < 2 || parseInt(bits[0]) != id)\n                        continue;\n                    for (let i = 1; i < bits.length; i++) {\n                        if (bits[i].startsWith('i')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondIncl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else if (bits[i].startsWith('e')) {\n                            let subBits = bits[i].substring(1).split(',');\n                            unit.bondExcl.set(n, subBits.map((str) => parseInt(str)));\n                        }\n                        else {\n                            let o = parseInt(bits[i]);\n                            if (o > 0) {\n                                bonds = Vec.append(bonds, n);\n                                order = Vec.append(order, o);\n                            }\n                        }\n                    }\n                }\n        }\n        if (bonds != null) {\n            if (bonds.length % 2 == 1)\n                return;\n            unit.bondConn = Vec.idxGet(bonds, Vec.idxSort(order));\n        }\n        this.units.set(id, unit);\n    }\n    formatBlockAtom(id, unit, atom) {\n        let nbonds = 0;\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let in1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n            if ((in1 && !in2) || (!in1 && in2))\n                nbonds++;\n        }\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id + ':' + nbonds;\n        if (unit.connect != null)\n            str += ':' + unit.connect;\n        let names = unit.atomName.get(atom);\n        if (Vec.notBlank(names))\n            str += ':n' + names.join(',');\n        return str;\n    }\n    formatBlockBond(id, unit, bond) {\n        let in1 = unit.atoms.includes(this.mol.bondFrom(bond)), in2 = unit.atoms.includes(this.mol.bondTo(bond));\n        let isBoundary = (in1 && !in2) || (in2 && !in1);\n        if (!isBoundary)\n            return null;\n        let idxConn = unit.bondConn ? unit.bondConn.indexOf(bond) : -1;\n        let incl = unit.bondIncl.get(bond), excl = unit.bondExcl.get(bond);\n        if (idxConn < 0 && Vec.isBlank(incl) && Vec.isBlank(excl))\n            return null;\n        let str = POLYMERBLOCK_EXTRA_POLYMER + id;\n        if (idxConn >= 0)\n            str += ':' + (idxConn + 1);\n        if (Vec.notBlank(incl))\n            str += ':i' + incl.join(',');\n        if (Vec.notBlank(excl))\n            str += ':e' + excl.join(',');\n        return str;\n    }\n    purgeExtraFields() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let extra = this.mol.bondExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--)\n                if (extra[i].startsWith(POLYMERBLOCK_EXTRA_POLYMER)) {\n                    extra = Vec.remove(extra, i);\n                    modified = true;\n                }\n            if (modified)\n                this.mol.setBondExtra(n, extra);\n        }\n    }\n    writeUnit(id, unit) {\n        const { mol } = this;\n        for (let a of unit.atoms) {\n            let codeAtom = this.formatBlockAtom(id, unit, a);\n            mol.setAtomExtra(a, Vec.append(mol.atomExtra(a), codeAtom));\n        }\n        for (let b = 1; b <= mol.numBonds; b++) {\n            let codeBond = this.formatBlockBond(id, unit, b);\n            if (codeBond)\n                mol.setBondExtra(b, Vec.append(mol.bondExtra(b), codeBond));\n        }\n    }\n    nextIdentifier(keys) {\n        if (!keys)\n            keys = this.getIDList();\n        if (keys.length == 0)\n            return 1;\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=PolymerBlock.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nexport var QueryTypeAtom;\n(function (QueryTypeAtom) {\n    QueryTypeAtom[\"Charges\"] = \"qC:\";\n    QueryTypeAtom[\"Aromatic\"] = \"qA:\";\n    QueryTypeAtom[\"Unsaturated\"] = \"qU:\";\n    QueryTypeAtom[\"Elements\"] = \"qE:\";\n    QueryTypeAtom[\"ElementsNot\"] = \"qE!\";\n    QueryTypeAtom[\"RingSizes\"] = \"qR:\";\n    QueryTypeAtom[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeAtom[\"RingBlock\"] = \"qB:\";\n    QueryTypeAtom[\"NumRings\"] = \"qN:\";\n    QueryTypeAtom[\"RingBonds\"] = \"qG:\";\n    QueryTypeAtom[\"Adjacency\"] = \"qJ:\";\n    QueryTypeAtom[\"BondSums\"] = \"qO:\";\n    QueryTypeAtom[\"Valences\"] = \"qV:\";\n    QueryTypeAtom[\"Hydrogens\"] = \"qH:\";\n    QueryTypeAtom[\"Isotopes\"] = \"qI:\";\n    QueryTypeAtom[\"SubFrags\"] = \"qX:\";\n    QueryTypeAtom[\"SubFragsNot\"] = \"qX!\";\n})(QueryTypeAtom || (QueryTypeAtom = {}));\nexport var QueryTypeBond;\n(function (QueryTypeBond) {\n    QueryTypeBond[\"RingSizes\"] = \"qR:\";\n    QueryTypeBond[\"RingSizesNot\"] = \"qR!\";\n    QueryTypeBond[\"RingBlock\"] = \"qB:\";\n    QueryTypeBond[\"NumRings\"] = \"qN:\";\n    QueryTypeBond[\"Orders\"] = \"qO:\";\n})(QueryTypeBond || (QueryTypeBond = {}));\nexport class QueryUtil {\n    static hasAnyQueryAtom(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasAnyQueryBond(mol, bond) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith('q'))\n                return true;\n        return false;\n    }\n    static hasQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static hasQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return true;\n        return false;\n    }\n    static deleteQueryAtom(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setAtomExtra(atom, extra);\n    }\n    static deleteQueryBond(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        let modified = false;\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type)) {\n                extra.splice(n, 1);\n                modified = true;\n            }\n        if (modified)\n            mol.setBondExtra(bond, extra);\n    }\n    static deleteQueryAtomAll(mol, atom) {\n        mol.setAtomExtra(atom, mol.atomExtra(atom).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static deleteQueryBondAll(mol, bond) {\n        mol.setBondExtra(bond, mol.bondExtra(bond).filter((xtra) => !xtra.startsWith('q')));\n    }\n    static queryAtomString(mol, atom, type) {\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static queryAtomStringList(mol, atom, type) {\n        let extra = mol.atomExtra(atom), list = null;\n        if (extra != null)\n            for (let str of extra)\n                if (str.startsWith(type))\n                    list = Vec.append(list, str.substring(type.length));\n        return list;\n    }\n    static queryBondString(mol, bond, type) {\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                return extra[n].substring(type.length);\n        return null;\n    }\n    static setQueryAtom(mol, atom, type, str) {\n        if (!str) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryAtomList(mol, atom, type, list) {\n        if (Vec.isBlank(list)) {\n            this.deleteQueryAtom(mol, atom, type);\n            return;\n        }\n        let extra = mol.atomExtra(atom);\n        for (let n = extra.length - 1; n >= 0; n--)\n            if (extra[n].startsWith(type))\n                extra.splice(n, 1);\n        for (let str of list)\n            extra.push(type + str);\n        mol.setAtomExtra(atom, extra);\n    }\n    static setQueryBond(mol, bond, type, str) {\n        if (!str) {\n            this.deleteQueryBond(mol, bond, type);\n            return;\n        }\n        let value = type + str;\n        let extra = mol.bondExtra(bond);\n        for (let n = extra.length - 1; n >= 0; n--) {\n            if (extra[n].startsWith(type)) {\n                if (value != null) {\n                    extra[n] = value;\n                    value = null;\n                }\n                else\n                    extra.splice(n, 1);\n            }\n        }\n        if (value != null)\n            extra.push(value);\n        mol.setBondExtra(bond, extra);\n    }\n    static queryAtomCharges(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Charges)); }\n    static queryAtomAromatic(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Aromatic)); }\n    static queryAtomUnsaturated(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.Unsaturated)); }\n    static queryAtomElements(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.Elements)); }\n    static queryAtomElementsNot(mol, atom) { return this.parseStrings(this.queryAtomString(mol, atom, QueryTypeAtom.ElementsNot)); }\n    static queryAtomRingSizes(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizes)); }\n    static queryAtomRingSizesNot(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingSizesNot)); }\n    static queryAtomRingBlock(mol, atom) { return this.parseBoolean(this.queryAtomString(mol, atom, QueryTypeAtom.RingBlock)); }\n    static queryAtomNumRings(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.NumRings)); }\n    static queryAtomRingBonds(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.RingBonds)); }\n    static queryAtomAdjacency(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Adjacency)); }\n    static queryAtomBondSums(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.BondSums)); }\n    static queryAtomValences(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Valences)); }\n    static queryAtomHydrogens(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Hydrogens)); }\n    static queryAtomIsotope(mol, atom) { return this.parseIntegers(this.queryAtomString(mol, atom, QueryTypeAtom.Isotopes)); }\n    static queryAtomSubFrags(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFrags)); }\n    static queryAtomSubFragsNot(mol, atom) { return this.parseMolecules(this.queryAtomStringList(mol, atom, QueryTypeAtom.SubFragsNot)); }\n    static queryBondRingSizes(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizes)); }\n    static queryBondRingSizesNot(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.RingSizesNot)); }\n    static queryBondRingBlock(mol, bond) { return this.parseBoolean(this.queryBondString(mol, bond, QueryTypeBond.RingBlock)); }\n    static queryBondNumRings(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.NumRings)); }\n    static queryBondOrders(mol, bond) { return this.parseIntegers(this.queryBondString(mol, bond, QueryTypeBond.Orders)); }\n    static setQueryAtomCharges(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Charges, this.formatIntegers(value)); }\n    static setQueryAtomAromatic(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Aromatic, this.formatBoolean(value)); }\n    static setQueryAtomUnsaturated(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Unsaturated, this.formatBoolean(value)); }\n    static setQueryAtomElements(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Elements, this.formatStrings(value)); }\n    static setQueryAtomElementsNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.ElementsNot, this.formatStrings(value)); }\n    static setQueryAtomRingSizes(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizes, this.formatIntegers(value)); }\n    static setQueryAtomRingSizesNot(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryAtomRingBlock(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBlock, this.formatBoolean(value)); }\n    static setQueryAtomNumRings(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.NumRings, this.formatIntegers(value)); }\n    static setQueryAtomRingBonds(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.RingBonds, this.formatIntegers(value)); }\n    static setQueryAtomAdjacency(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Adjacency, this.formatIntegers(value)); }\n    static setQueryAtomBondSums(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.BondSums, this.formatIntegers(value)); }\n    static setQueryAtomValences(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Valences, this.formatIntegers(value)); }\n    static setQueryAtomHydrogens(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Hydrogens, this.formatIntegers(value)); }\n    static setQueryAtomIsotope(mol, atom, value) { this.setQueryAtom(mol, atom, QueryTypeAtom.Isotopes, this.formatIntegers(value)); }\n    static setQueryAtomSubFrags(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFrags, this.formatMolecules(value)); }\n    static setQueryAtomSubFragsNot(mol, atom, value) { this.setQueryAtomList(mol, atom, QueryTypeAtom.SubFragsNot, this.formatMolecules(value)); }\n    static setQueryBondRingSizes(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizes, this.formatIntegers(value)); }\n    static setQueryBondRingSizesNot(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingSizesNot, this.formatIntegers(value)); }\n    static setQueryBondRingBlock(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.RingBlock, this.formatBoolean(value)); }\n    static setQueryBondNumRings(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.NumRings, this.formatIntegers(value)); }\n    static setQueryBondOrders(mol, bond, value) { this.setQueryBond(mol, bond, QueryTypeBond.Orders, this.formatIntegers(value)); }\n    static parseIntegers(str) {\n        if (!str)\n            return null;\n        let strlist = str.split(',');\n        let intlist = new Array(strlist.length);\n        for (let n = 0; n < strlist.length; n++)\n            intlist[n] = parseInt(strlist[n]);\n        return intlist;\n    }\n    static parseStrings(str) {\n        if (!str)\n            return null;\n        return str.split(',');\n    }\n    static parseBoolean(str) {\n        return !str ? null : str == 'yes';\n    }\n    static parseMolecules(list) {\n        if (!list)\n            return null;\n        let mols = [];\n        for (let molstr of list) {\n            let mol = Molecule.fromString(molstr);\n            if (MolUtil.notBlank(mol))\n                mols.push(mol);\n        }\n        return mols;\n    }\n    static formatIntegers(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatStrings(list) {\n        if (Vec.isBlank(list))\n            return null;\n        let str = '';\n        for (let n = 0; n < list.length; n++) {\n            if (n > 0)\n                str += ',';\n            str += list[n];\n        }\n        return str;\n    }\n    static formatBoolean(value) {\n        return value ? 'yes' : 'no';\n    }\n    static formatMolecules(mols) {\n        if (Vec.isBlank(mols))\n            return null;\n        let list = [];\n        for (let mol of mols)\n            if (MolUtil.notBlank(mol))\n                list.push(mol.toString());\n        return list;\n    }\n}\n//# sourceMappingURL=QueryUtil.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nexport const STEREOGROUP_EXTRA_RACEMIC = 'xCHIRAC:';\nexport const STEREOGROUP_EXTRA_RELATIVE = 'xCHIREL:';\nexport class StereoGroup {\n    static hasStereoGroups(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra)\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC) || str.startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                        return true;\n        }\n        return false;\n    }\n    constructor(mol) {\n        this.mol = mol;\n        this.chiRac = new Map();\n        this.chiRel = new Map();\n        this.mol = mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            if (extra != null)\n                for (let str of extra) {\n                    if (str.startsWith(STEREOGROUP_EXTRA_RACEMIC)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RACEMIC.length));\n                        if (grp > 0)\n                            this.chiRac.set(grp, Vec.append(this.chiRac.get(grp), n));\n                    }\n                    else if (str.startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                        let grp = parseInt(str.substring(STEREOGROUP_EXTRA_RELATIVE.length));\n                        if (grp > 0)\n                            this.chiRel.set(grp, Vec.append(this.chiRel.get(grp), n));\n                    }\n                }\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRac.set(grp, atoms);\n            else\n                this.chiRac.delete(grp);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let n = atoms.length - 1; n >= 0; n--)\n                if (!this.atomHasWedge(atoms[n]))\n                    atoms.splice(n, 1);\n            if (atoms.length > 0)\n                this.chiRel.set(grp, atoms);\n            else\n                this.chiRel.delete(grp);\n        }\n    }\n    getRacemicGroups() { return Array.from(this.chiRac.keys()); }\n    getRelativeGroups() { return Array.from(this.chiRel.keys()); }\n    getRacemicAtoms() { return Array.from(this.chiRac.values()); }\n    getRelativeAtoms() { return Array.from(this.chiRel.values()); }\n    getRacemicGroupAtoms(grp) { return this.chiRac.get(grp); }\n    getRelativeGroupAtoms(grp) { return this.chiRel.get(grp); }\n    rewriteMolecule() {\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let extra = this.mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) || extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE)) {\n                    extra.splice(i, 1);\n                    modified = true;\n                }\n            }\n            if (modified)\n                this.mol.setAtomExtra(n, extra);\n        }\n        for (let [grp, atoms] of this.chiRac.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RACEMIC + grp]);\n        }\n        for (let [grp, atoms] of this.chiRel.entries()) {\n            for (let a of atoms)\n                this.mol.setAtomExtra(a, [...this.mol.atomExtra(a), STEREOGROUP_EXTRA_RELATIVE + grp]);\n        }\n    }\n    harmoniseNumbering(other) {\n        let groups = other.getRacemicGroups();\n        let stash = this.getRacemicAtoms();\n        this.chiRac.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRac.set(grp, atoms);\n            groups.push(grp);\n        }\n        groups = other.getRelativeGroups();\n        stash = this.getRelativeAtoms();\n        this.chiRel.clear();\n        for (let atoms of stash) {\n            let grp = this.nextIdentifier(groups);\n            this.chiRel.set(grp, atoms);\n            groups.push(grp);\n        }\n    }\n    createRacemic(atoms) {\n        let grp = this.nextIdentifier(this.getRacemicGroups());\n        this.chiRac.set(grp, atoms);\n        return grp;\n    }\n    createRelative(atoms) {\n        let grp = this.nextIdentifier(this.getRelativeGroups());\n        this.chiRel.set(grp, atoms);\n        return grp;\n    }\n    removeRacemic(grp) {\n        this.chiRac.delete(grp);\n    }\n    removeRelative(grp) {\n        this.chiRel.delete(grp);\n    }\n    static removeAll(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let extra = mol.atomExtra(n);\n            let modified = false;\n            for (let i = extra.length - 1; i >= 0; i--) {\n                if (!extra[i].startsWith(STEREOGROUP_EXTRA_RACEMIC) && !extra[i].startsWith(STEREOGROUP_EXTRA_RELATIVE))\n                    continue;\n                extra.splice(i, 1);\n                modified = true;\n            }\n            if (modified)\n                mol.setAtomExtra(n, extra);\n        }\n    }\n    atomHasWedge(atom) {\n        if (this.mol.is3D())\n            return true;\n        let hasWedge = false;\n        for (let b of this.mol.atomAdjBonds(atom)) {\n            let bt = this.mol.bondType(b);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return false;\n            if (this.mol.bondFrom(b) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        return hasWedge;\n    }\n    nextIdentifier(inkeys) {\n        if (inkeys.length == 0)\n            return 1;\n        let keys = Vec.sorted(inkeys);\n        for (let n = 0; n < keys.length - 1; n++)\n            if (keys[n + 1] != keys[n] + 1)\n                return keys[n] + 1;\n        return keys[keys.length - 1] + 1;\n    }\n}\n//# sourceMappingURL=StereoGroup.js.map","import { ResonanceRemover } from '../calc/ResonanceRemover';\nimport { Vec } from '../util/Vec';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { DataSheet } from '../ds/DataSheet';\nimport { ForeignMolecule, ForeignMoleculeTransient } from '../mol/ForeignMolecule';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { StereoGroup } from '../mol/StereoGroup';\nexport const MDLMOL_VALENCE = {\n    'H': [1],\n    'B': [3],\n    'C': [4],\n    'Si': [4],\n    'N': [3],\n    'P': [3, 5],\n    'As': [3, 5],\n    'O': [2],\n    'S': [2, 4, 6],\n    'Se': [2, 4, 6],\n    'Te': [2, 4, 6],\n    'F': [1],\n    'Cl': [1, 3, 5, 7],\n    'Br': [1],\n    'I': [1, 3, 5, 7],\n    'At': [1, 3, 5, 7],\n};\nexport class MDLMOLReader {\n    constructor(strData) {\n        this.parseHeader = true;\n        this.parseExtended = true;\n        this.allowV3000 = true;\n        this.considerRescale = true;\n        this.keepAromatic = false;\n        this.keepParity = false;\n        this.keepQuery = true;\n        this.mol = null;\n        this.molName = '';\n        this.overallStereoAbsolute = true;\n        this.resBonds = null;\n        this.groupAttachAny = new Map();\n        this.groupAttachAll = new Map();\n        this.groupStereoAbsolute = [];\n        this.groupStereoRacemic = [];\n        this.groupStereoRelative = [];\n        this.groupLinkNodes = [];\n        this.groupMixtures = [];\n        this.scsrTemplates = null;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        if (this.parseHeader) {\n            this.molName = this.lines[0];\n            this.pos = 3;\n        }\n        this.parseCTAB();\n        return this.mol;\n    }\n    nextLine() {\n        if (this.pos >= this.lines.length)\n            throw 'MDL Molfile parser: premature end, at line ' + (this.pos + 1);\n        return this.lines[this.pos++];\n    }\n    parseCTAB() {\n        this.mol = new Molecule();\n        this.mol.keepTransient = true;\n        let line = this.nextLine();\n        let version = line.length >= 39 ? line.substring(34, 39) : '';\n        if (this.allowV3000 && version == 'V3000') {\n            this.parseV3000();\n            this.mol.keepTransient = false;\n            return;\n        }\n        if (version != 'V2000')\n            throw 'Invalid MDL MOL: no Vx000 tag.';\n        let numAtoms = parseInt(line.substring(0, 3).trim());\n        let numBonds = parseInt(line.substring(3, 6).trim());\n        if (line.length >= 15)\n            this.overallStereoAbsolute = parseInt(line.substring(12, 15).trim()) == 1;\n        for (let n = 0; n < numAtoms; n++) {\n            line = this.nextLine();\n            if (line.length < 34)\n                throw 'Invalid MDL MOL: atom line' + (n + 1);\n            let x = parseFloat(line.substring(0, 10).trim());\n            let y = parseFloat(line.substring(10, 20).trim());\n            let z = parseFloat(line.substring(20, 30).trim());\n            let el = line.substring(31, 34).trim();\n            let chg = line.length < 39 ? 0 : parseInt(line.substring(36, 39).trim()), rad = 0;\n            let stereo = line.length < 42 ? 0 : parseInt(line.substring(39, 42).trim());\n            let hyd = line.length < 45 ? 0 : parseInt(line.substring(42, 45).trim());\n            let val = line.length < 51 ? 0 : parseInt(line.substring(48, 51).trim());\n            let mapnum = line.length < 63 ? 0 : parseInt(line.substring(60, 63).trim());\n            if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else if (chg == 4) {\n                chg = 0;\n                rad = 2;\n            }\n            else if (chg >= 5 && chg <= 7)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let a = this.mol.addAtom(el, x, y, chg, rad);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, mapnum);\n            if (hyd > 0)\n                QueryUtil.setQueryAtomHydrogens(this.mol, a, [hyd - 1]);\n            if (stereo > 0 && this.keepParity) {\n                let trans = this.mol.atomTransient(a);\n                if (stereo == 1)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLOdd));\n                else if (stereo == 2)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLEven));\n                else if (stereo == 3)\n                    this.mol.setAtomTransient(a, Vec.append(trans, ForeignMoleculeTransient.AtomChiralMDLRacemic));\n            }\n            if (val != 0)\n                ForeignMolecule.markExplicitValence(this.mol, n + 1, val > 14 ? 0 : val);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            line = this.nextLine();\n            if (line.length >= 9 && line.length < 12)\n                line = line.substring(0, 9) + '  0';\n            if (line.length < 12)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let bfr = parseInt(line.substring(0, 3).trim()), bto = parseInt(line.substring(3, 6).trim());\n            let type = parseInt(line.substring(6, 9).trim()), stereo = parseInt(line.substring(9, 12).trim());\n            if (bfr == bto || bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms)\n                throw 'Invalid MDL MOL: bond line' + (n + 1);\n            let order = type >= 1 && type <= 3 ? type : type == 8 || type == 9 || type == 10 ? 0 : 1;\n            let style = Molecule.BONDTYPE_NORMAL;\n            if (stereo == 1)\n                style = Molecule.BONDTYPE_INCLINED;\n            else if (stereo == 6)\n                style = Molecule.BONDTYPE_DECLINED;\n            else if (stereo == 3 || stereo == 4)\n                style = Molecule.BONDTYPE_UNKNOWN;\n            let b = this.mol.addBond(bfr, bto, order, style);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[n] = true;\n                    }\n                }\n            }\n        }\n        const MBLK_CHG = 1, MBLK_RAD = 2, MBLK_ISO = 3, MBLK_RGP = 4, MBLK_HYD = 5, MBLK_ZCH = 6, MBLK_ZBO = 7, MBLK_ZPA = 8, MBLK_ZRI = 9, MBLK_ZAR = 10, MBLK_RBC = 11, MBLK_SUB = 12, MBLK_UNS = 13;\n        let resPaths = new Map(), resRings = new Map(), arenes = new Map();\n        let superatoms = new Map(), mixtures = new Map();\n        while (true) {\n            line = this.nextLine();\n            if (line.startsWith('M  END'))\n                break;\n            let type = 0;\n            if (line.startsWith('M  CHG'))\n                type = MBLK_CHG;\n            else if (line.startsWith('M  RAD'))\n                type = MBLK_RAD;\n            else if (line.startsWith('M  ISO'))\n                type = MBLK_ISO;\n            else if (line.startsWith('M  RGP'))\n                type = MBLK_RGP;\n            else if (this.parseExtended && line.startsWith('M  HYD'))\n                type = MBLK_HYD;\n            else if (this.parseExtended && line.startsWith('M  ZCH'))\n                type = MBLK_ZCH;\n            else if (this.parseExtended && line.startsWith('M  ZBO'))\n                type = MBLK_ZBO;\n            else if (this.parseExtended && line.startsWith('M  ZPA'))\n                type = MBLK_ZPA;\n            else if (this.parseExtended && line.startsWith('M  ZRI'))\n                type = MBLK_ZRI;\n            else if (this.parseExtended && line.startsWith('M  ZAR'))\n                type = MBLK_ZAR;\n            else if (this.parseExtended && line.startsWith('M  RBC'))\n                type = MBLK_RBC;\n            else if (this.parseExtended && line.startsWith('M  SUB'))\n                type = MBLK_SUB;\n            else if (this.parseExtended && line.startsWith('M  UNS'))\n                type = MBLK_UNS;\n            else if (line.startsWith('A  ') && line.length >= 6) {\n                let anum = parseInt(line.substring(3, 6).trim());\n                if (anum >= 1 && anum <= this.mol.numAtoms) {\n                    line = this.nextLine();\n                    if (line == null)\n                        break;\n                    this.mol.setAtomElement(anum, line);\n                    continue;\n                }\n            }\n            else if (line.startsWith('M  STY')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    if (stype == 'SUP')\n                        superatoms.set(idx, { atoms: [], name: null });\n                    else if (stype == 'MIX' || stype == 'FOR')\n                        mixtures.set(idx, { index: idx, parent: 0, atoms: [], type: stype });\n                    else if (stype == 'SRU' || stype == 'COP' || stype == 'MUL' || stype == 'DAT')\n                        superatoms.set(idx, { atoms: [], name: null, bracketType: stype });\n                }\n            }\n            else if (line.startsWith('M  SPL')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let child = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let parent = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    let mix = mixtures.get(child);\n                    if (mix != null)\n                        mix.parent = parent;\n                }\n            }\n            else if (line.startsWith('M  SAL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.atoms = Vec.concat(sup.atoms, atoms);\n                }\n                let mix = mixtures.get(idx);\n                if (mix != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let atoms = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        atoms[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    mix.atoms = Vec.concat(mix.atoms, atoms);\n                }\n            }\n            else if (line.startsWith('M  SBL')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    let bonds = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        bonds[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    sup.bonds = Vec.concat(sup.bonds, bonds);\n                }\n            }\n            else if (line.startsWith('M  SMT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null)\n                    sup.name = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SDT')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup) {\n                    sup.name = line.substring(11, 41).trim();\n                    sup.unit = line.substring(43, 63).trim();\n                    sup.query = line.substring(63).trim();\n                }\n            }\n            else if (line.startsWith('M  SED')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup)\n                    sup.value = line.substring(11).trim();\n            }\n            else if (line.startsWith('M  SCN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let idx = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let stype = line.substring(14 + 8 * n, 17 + 8 * n);\n                    let sup = superatoms.get(idx);\n                    if (sup != null)\n                        sup.connectType = stype.trim();\n                }\n            }\n            else if (line.startsWith('M  CRS')) {\n                let idx = parseInt(line.substring(6, 10).trim());\n                let sup = superatoms.get(idx);\n                if (sup != null) {\n                    let len = parseInt(line.substring(10, 13).trim());\n                    sup.bondConn = Vec.numberArray(0, len);\n                    for (let n = 0; n < len; n++)\n                        sup.bondConn[n] = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                }\n            }\n            else if (line.startsWith('M  LIN')) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let node = {\n                        atom: parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim()),\n                        nbrs: [],\n                        minRep: 1,\n                        maxRep: parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim()),\n                    };\n                    let nbr1 = parseInt(line.substring(17 + 8 * n, 21 + 8 * n).trim());\n                    let nbr2 = parseInt(line.substring(21 + 8 * n, 25 + 8 * n).trim());\n                    if (nbr1 > 0)\n                        node.nbrs.push(nbr1);\n                    if (nbr2 > 0)\n                        node.nbrs.push(nbr2);\n                    this.groupLinkNodes.push(node);\n                }\n            }\n            else if (line.startsWith('M  ALS')) {\n                let atom = parseInt(line.substring(7, 10).trim());\n                let len = parseInt(line.substring(10, 13).trim());\n                let logic = line.charAt(14);\n                let elements = [];\n                for (let n = 0; n < len; n++)\n                    elements.push(line.substring(16 + n * 4, 20 + n * 4).trim());\n                this.mol.setAtomElement(atom, '*');\n                if (logic == 'F')\n                    QueryUtil.setQueryAtomElements(this.mol, atom, elements);\n                else if (logic == 'T')\n                    QueryUtil.setQueryAtomElementsNot(this.mol, atom, elements);\n            }\n            if (type == MBLK_ZPA || type == MBLK_ZRI || type == MBLK_ZAR) {\n                let len = parseInt(line.substring(6, 9).trim()), blk = parseInt(line.substring(9, 13).trim());\n                let map = type == MBLK_ZPA ? resPaths : type == MBLK_ZRI ? resRings : arenes;\n                for (let n = 0; n < len; n++) {\n                    let val = parseInt(line.substring(13 + 4 * n, 17 + 4 * n).trim());\n                    if (val < 1 || val > numAtoms)\n                        throw 'Invalid MDL MOL: M-block';\n                    let atoms = map.get(blk);\n                    if (!atoms)\n                        map.set(blk, atoms = []);\n                    atoms.push(val);\n                }\n            }\n            else if (type > 0) {\n                let len = parseInt(line.substring(6, 9).trim());\n                for (let n = 0; n < len; n++) {\n                    let pos = parseInt(line.substring(9 + 8 * n, 13 + 8 * n).trim());\n                    let val = parseInt(line.substring(13 + 8 * n, 17 + 8 * n).trim());\n                    if (pos < 1)\n                        throw 'Invalid MDL MOL: M-block';\n                    if (type == MBLK_CHG)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_RAD) {\n                        if (val == 1 || val == 3)\n                            this.mol.setAtomUnpaired(pos, 2);\n                        else if (val == 2)\n                            this.mol.setAtomUnpaired(pos, 1);\n                    }\n                    else if (type == MBLK_ISO)\n                        this.mol.setAtomIsotope(pos, val);\n                    else if (type == MBLK_RGP)\n                        this.mol.setAtomElement(pos, 'R' + val);\n                    else if (type == MBLK_HYD)\n                        this.mol.setAtomHExplicit(pos, val);\n                    else if (type == MBLK_ZCH)\n                        this.mol.setAtomCharge(pos, val);\n                    else if (type == MBLK_ZBO)\n                        this.mol.setBondOrder(pos, val);\n                    else if (type == MBLK_RBC && val != 0) {\n                        if (val == -2)\n                            val = this.countRingBonds(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomRingBonds(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_SUB && val != 0) {\n                        if (val == -2)\n                            val = this.countSubstitutions(pos);\n                        else if (val == -1)\n                            val = 0;\n                        QueryUtil.setQueryAtomAdjacency(this.mol, pos, [val]);\n                    }\n                    else if (type == MBLK_UNS) {\n                        if (val == 1)\n                            QueryUtil.setQueryAtomUnsaturated(this.mol, pos, true);\n                    }\n                }\n            }\n        }\n        this.postFix();\n        if (this.parseExtended) {\n            let artifacts = new BondArtifact(this.mol);\n            for (let atoms of resPaths.values())\n                artifacts.createPath(atoms);\n            for (let atoms of resRings.values())\n                artifacts.createRing(atoms);\n            for (let atoms of arenes.values())\n                artifacts.createArene(atoms);\n            artifacts.rewriteMolecule();\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        for (let key of Vec.sorted(Array.from(mixtures.keys())))\n            this.groupMixtures.push(mixtures.get(key));\n        this.mol.keepTransient = false;\n    }\n    postFix() {\n        const mol = this.mol;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (MolUtil.hasAbbrev(mol, n) || mol.atomTransient(n).some((str) => str.startsWith(ForeignMoleculeTransient.AtomSCSRClass)))\n                continue;\n            let el = mol.atomElement(n);\n            if (el == 'D') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 2);\n            }\n            else if (el == 'T') {\n                mol.setAtomElement(n, 'H');\n                mol.setAtomIsotope(n, 3);\n            }\n            if (mol.is3D && mol.atomZ(n) === undefined)\n                mol.setAtomZ(n, 0);\n            let valence = ForeignMolecule.noteExplicitValence(this.mol, n);\n            let options = MDLMOL_VALENCE[el];\n            if (valence != null) {\n                let hcount = valence < 0 || valence > 14 ? 0 : valence;\n                for (let b of mol.atomAdjBonds(n))\n                    hcount -= mol.bondOrder(b);\n                if (hcount != mol.atomHydrogens(n))\n                    mol.setAtomHExplicit(n, Math.max(0, hcount));\n            }\n            else if (options) {\n                let chg = mol.atomCharge(n);\n                let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n                let usedValence = chgmod;\n                let unp = mol.atomUnpaired(n);\n                if (unp > 0 && (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P'))\n                    usedValence += unp;\n                for (let b of mol.atomAdjBonds(n))\n                    usedValence += mol.bondOrder(b);\n                for (let v of options)\n                    if (usedValence <= v) {\n                        let hcount = v - usedValence;\n                        if (hcount != mol.atomHydrogens(n))\n                            mol.setAtomHExplicit(n, Math.max(0, hcount));\n                        break;\n                    }\n            }\n        }\n        if (this.considerRescale && Vec.isBlank(this.scsrTemplates))\n            CoordUtil.normaliseBondDistances(mol);\n        if (this.resBonds != null) {\n            let derez = new ResonanceRemover(mol, this.resBonds, null);\n            try {\n                derez.perform();\n                for (let n = 0; n < mol.numBonds; n++)\n                    mol.setBondOrder(n + 1, derez.bondOrders[n]);\n            }\n            catch (ex) {\n            }\n        }\n    }\n    parseV3000() {\n        var _a;\n        let Section;\n        (function (Section) {\n            Section[Section[\"Atom\"] = 0] = \"Atom\";\n            Section[Section[\"Bond\"] = 1] = \"Bond\";\n            Section[Section[\"Coll\"] = 2] = \"Coll\";\n            Section[Section[\"SGroup\"] = 3] = \"SGroup\";\n            Section[Section[\"Template\"] = 4] = \"Template\";\n        })(Section || (Section = {}));\n        let inCTAB = false, inTemplate = false;\n        let section = null;\n        let lineCounts = null;\n        let lineAtom = [], lineBond = [], lineColl = [], lineSgroup = [];\n        let asdrawnRBC = [], asdrawnSUB = [];\n        let templateBlocks = [];\n        const ERRPFX = 'Invalid MDL MOL V3000: ';\n        while (true) {\n            let fullLine = this.nextLine();\n            if (fullLine == 'M  END')\n                break;\n            if (!fullLine.startsWith('M  V30 '))\n                continue;\n            let line = fullLine.substring(7);\n            if (line.startsWith('BEGIN TEMPLATE'))\n                inTemplate = true;\n            else if (line.startsWith('END TEMPLATE'))\n                inTemplate = false;\n            else if (line.startsWith('TEMPLATE ') && inTemplate)\n                templateBlocks.push([fullLine]);\n            else if (inTemplate && templateBlocks != null)\n                Vec.last(templateBlocks).push(fullLine);\n            else if (line.startsWith('COUNTS '))\n                lineCounts = line.substring(7);\n            else if (line.startsWith('BEGIN CTAB'))\n                inCTAB = true;\n            else if (line.startsWith('BEGIN ATOM'))\n                section = Section.Atom;\n            else if (line.startsWith('BEGIN BOND'))\n                section = Section.Bond;\n            else if (line.startsWith('BEGIN COLLECTION'))\n                section = Section.Coll;\n            else if (line.startsWith('BEGIN SGROUP'))\n                section = Section.SGroup;\n            else if (line.startsWith('END '))\n                section = null;\n            else if (inCTAB && section == Section.Atom)\n                lineAtom.push(line);\n            else if (inCTAB && section == Section.Bond)\n                lineBond.push(line);\n            else if (inCTAB && section == Section.Coll)\n                lineColl.push(line);\n            else if (inCTAB && section == Section.SGroup)\n                lineSgroup.push(line);\n            else if (inCTAB && section == null) {\n                if (line.startsWith('LINKNODE ')) {\n                    let bits = this.splitWithQuotes(line.substring(9));\n                    let node = {\n                        atom: 0,\n                        nbrs: [],\n                        minRep: parseInt(bits[0]),\n                        maxRep: parseInt(bits[1])\n                    };\n                    let nb = parseInt(bits[2]);\n                    let atoms = [];\n                    for (let n = 0; n < nb * 2; n++)\n                        atoms.push(parseInt(bits[3 + n]));\n                    Vec.sort(atoms);\n                    for (let n = 0; n < atoms.length; n++) {\n                        if (n < atoms.length - 1 && atoms[n] == atoms[n + 1])\n                            node.atom = atoms[n++];\n                        else\n                            node.nbrs.push(atoms[n]);\n                    }\n                    this.groupLinkNodes.push(node);\n                }\n            }\n        }\n        let counts = lineCounts.trim().split(/\\s+/);\n        if (counts.length < 2)\n            throw ERRPFX + 'counts line malformatted';\n        let numAtoms = parseInt(counts[0]), numBonds = parseInt(counts[1]);\n        if (numAtoms < 0 || numAtoms > lineAtom.length)\n            throw ERRPFX + 'unreasonable atom count: ' + numAtoms;\n        if (numBonds < 0 || numBonds > lineBond.length)\n            throw ERRPFX + 'unreasonable bond count: ' + numBonds;\n        let atomBits = [], bondBits = [];\n        for (let n = 0; n < lineAtom.length; n++) {\n            let line = lineAtom[n];\n            while (n < lineAtom.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineAtom[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 6)\n                throw ERRPFX + 'atom line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numAtoms)\n                throw ERRPFX + 'invalid atom index: ' + bits[0];\n            if (atomBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate atom index: ' + idx;\n            atomBits[idx - 1] = bits;\n        }\n        for (let n = 0; n < lineBond.length; n++) {\n            let line = lineBond[n];\n            while (n < lineBond.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineBond[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits.length < 4)\n                throw ERRPFX + 'bond line has too few components: ' + line;\n            let idx = parseInt(bits[0], 0);\n            if (idx < 1 || idx > numBonds)\n                throw ERRPFX + 'invalid bond index: ' + bits[0];\n            if (bondBits[idx - 1] != null)\n                throw ERRPFX + 'duplicate bond index: ' + idx;\n            bondBits[idx - 1] = bits;\n        }\n        for (let a = 1; a <= numAtoms; a++) {\n            let bits = atomBits[a - 1];\n            if (bits == null)\n                throw ERRPFX + 'atom definition missing for #' + a;\n            let type = bits[1];\n            if (type.length > 2 && type.startsWith('\"') && type.endsWith('\"'))\n                type = type.substring(1, type.length - 1);\n            let x = parseFloat(bits[2]), y = parseFloat(bits[3]), z = parseFloat(bits[4]);\n            let map = parseInt(bits[5]);\n            this.mol.addAtom(type, x, y);\n            if (z != 0) {\n                this.mol.setAtomZ(a, z);\n                this.mol.setIs3D(true);\n            }\n            this.mol.setAtomMapNum(a, map);\n            this.parseQueryAtomList(this.mol, a);\n            for (let i = 6; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CHG')\n                    this.mol.setAtomCharge(a, parseInt(val));\n                else if (key == 'RAD') {\n                    let spin = parseInt(val);\n                    if (spin == 1 || spin == 3)\n                        this.mol.setAtomUnpaired(a, 2);\n                    else if (spin == 2)\n                        this.mol.setAtomUnpaired(a, 1);\n                }\n                else if (key == 'MASS')\n                    this.mol.setAtomIsotope(a, parseInt(val));\n                else if (key == 'CFG') {\n                    let stereo = parseInt(val);\n                    if (stereo > 0 && this.keepParity) {\n                    }\n                }\n                else if (key == 'VAL')\n                    ForeignMolecule.markExplicitValence(this.mol, a, parseInt(val));\n                else if (key == 'CLASS') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRClass + ':' + val);\n                }\n                else if (key == 'SEQID') {\n                    this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRSeqID + ':' + val);\n                }\n                else if (key == 'ATTCHORD') {\n                    let attch = this.unpackStrings(val);\n                    if (attch != null)\n                        this.mol.appendAtomTransient(a, ForeignMoleculeTransient.AtomSCSRAttchOrd + ':' + attch.join(','));\n                }\n                else if (key == 'HCOUNT') {\n                    let hyd = parseInt(val);\n                    if (hyd != 0)\n                        QueryUtil.setQueryAtomHydrogens(this.mol, a, [Math.max(hyd, 0)]);\n                }\n                else if (key == 'RBCNT') {\n                    let rbc = parseInt(val);\n                    if (rbc == -2)\n                        asdrawnRBC.push(a);\n                    else if (rbc != 0)\n                        QueryUtil.setQueryAtomRingBonds(this.mol, a, [Math.max(rbc, 0)]);\n                }\n                else if (key == 'SUBST') {\n                    let sub = parseInt(val);\n                    if (sub == -2)\n                        asdrawnSUB.push(a);\n                    else if (sub != 0)\n                        QueryUtil.setQueryAtomAdjacency(this.mol, a, [Math.max(sub, 0)]);\n                }\n                else if (key == 'UNSAT') {\n                    let uns = parseInt(val);\n                    if (uns == 1)\n                        QueryUtil.setQueryAtomUnsaturated(this.mol, a, true);\n                }\n            }\n        }\n        for (let b = 1; b <= numBonds; b++) {\n            let bits = bondBits[b - 1];\n            if (bits == null)\n                throw ERRPFX + 'bond definition missing for #' + b;\n            let type = parseInt(bits[1]), bfr = parseInt(bits[2]), bto = parseInt(bits[3]);\n            let order = type >= 1 && type <= 3 ? type : type == 9 || type == 10 ? 0 : 1;\n            this.mol.addBond(bfr, bto, order);\n            if (type == 9)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroDative);\n            if (type == 10)\n                this.mol.appendBondTransient(b, ForeignMoleculeTransient.BondZeroHydrogen);\n            if (this.keepQuery) {\n                if (type == 4)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1]);\n                else if (type == 5)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [1, 2]);\n                else if (type == 6)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 1]);\n                else if (type == 7)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 2]);\n                else if (type == 8)\n                    QueryUtil.setQueryBondOrders(this.mol, b, [-1, 0, 1, 2, 3]);\n            }\n            else {\n                if (type == 4) {\n                    if (this.keepAromatic)\n                        this.mol.setBondTransient(b, Vec.append(this.mol.bondTransient(b), ForeignMoleculeTransient.BondAromatic));\n                    else {\n                        if (this.resBonds == null)\n                            this.resBonds = Vec.booleanArray(false, numBonds);\n                        this.resBonds[b - 1] = true;\n                    }\n                }\n            }\n            let endpts = null;\n            let attach = null;\n            for (let i = 4; i < bits.length; i++) {\n                let eq = bits[i].indexOf('=');\n                if (eq < 0)\n                    continue;\n                let key = bits[i].substring(0, eq), val = bits[i].substring(eq + 1);\n                if (key == 'CFG') {\n                    let dir = parseInt(val);\n                    this.mol.setBondType(b, dir == 1 ? Molecule.BONDTYPE_INCLINED :\n                        dir == 2 ? Molecule.BONDTYPE_UNKNOWN :\n                            dir == 3 ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_NORMAL);\n                }\n                else if (key == 'DISP') {\n                    if (val == 'COORD')\n                        this.mol.setBondOrder(b, 0);\n                }\n                else if (key == 'ENDPTS')\n                    endpts = this.unpackList(val);\n                else if (key == 'ATTACH')\n                    attach = val;\n            }\n            if (attach != null && endpts != null) {\n                if (attach == 'ALL')\n                    this.groupAttachAll.set(b, endpts);\n                else if (attach == 'ANY')\n                    this.groupAttachAny.set(b, endpts);\n            }\n        }\n        for (let atom of asdrawnRBC)\n            QueryUtil.setQueryAtomRingBonds(this.mol, atom, [this.countRingBonds(atom)]);\n        for (let atom of asdrawnSUB)\n            QueryUtil.setQueryAtomAdjacency(this.mol, atom, [this.countSubstitutions(atom)]);\n        this.postFix();\n        for (let n = 0; n < lineColl.length; n++) {\n            let line = lineColl[n];\n            while (n < lineColl.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineColl[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            if (bits[0].startsWith('MDLV30/STEABS')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoAbsolute = this.unpackList(bits[1].substring(5));\n            }\n            else if (bits[0].startsWith('MDLV30/STERAC')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRacemic.push(this.unpackList(bits[1].substring(6)));\n            }\n            else if (bits[0].startsWith('MDLV30/STEREL')) {\n                if (bits[1].startsWith('ATOMS='))\n                    this.groupStereoRelative.push(this.unpackList(bits[1].substring(6)));\n            }\n        }\n        let stereoGroup = new StereoGroup(this.mol);\n        for (let atoms of this.groupStereoRacemic)\n            stereoGroup.createRacemic(atoms);\n        for (let atoms of this.groupStereoRelative)\n            stereoGroup.createRelative(atoms);\n        stereoGroup.rewriteMolecule();\n        let superatoms = new Map();\n        for (let n = 0; n < lineSgroup.length; n++) {\n            let line = lineSgroup[n];\n            while (n < lineSgroup.length - 1 && line.endsWith('-')) {\n                n++;\n                line = line.substring(0, line.length - 1) + lineSgroup[n];\n            }\n            let bits = this.splitWithQuotes(line);\n            let idx = parseInt(bits[0]);\n            if (bits.length > 3 && idx > 0 && bits[1] == 'SUP') {\n                let sup = { atoms: [], name: null };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('XBONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('CLASS='))\n                        sup.templateClass = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('NATREPLACE='))\n                        sup.natReplace = this.withoutQuotes(bits[i].substring(11));\n                    else if (bits[i].startsWith('SAP=')) {\n                        const pts = this.unpackStrings(bits[i].substring(4));\n                        sup.attachPoints = [...((_a = sup.attachPoints) !== null && _a !== void 0 ? _a : []), ...pts];\n                    }\n                }\n                superatoms.set(idx, sup);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'MIX' || bits[1] == 'FOR') && parseInt(bits[2]) == idx) {\n                let mix = { index: idx, parent: 0, atoms: null, type: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        mix.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('PARENT='))\n                        mix.parent = parseInt(bits[i].substring(7));\n                }\n                this.groupMixtures.push(mix);\n            }\n            else if (bits.length > 3 && idx > 0 && (bits[1] == 'SRU' || bits[1] == 'COP' || bits[1] == 'MUL' || bits[1] == 'DAT')) {\n                let sup = { atoms: [], name: null, bracketType: bits[1] };\n                for (let i = 3; i < bits.length; i++) {\n                    if (bits[i].startsWith('ATOMS='))\n                        sup.atoms = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('BONDS='))\n                        sup.bonds = this.unpackList(bits[i].substring(6));\n                    else if (bits[i].startsWith('LABEL='))\n                        sup.name = this.withoutQuotes(bits[i].substring(6));\n                    else if (bits[i].startsWith('CONNECT='))\n                        sup.connectType = bits[i].substring(8);\n                    else if (bits[i].startsWith('XBCORR='))\n                        sup.bondConn = this.unpackList(bits[i].substring(7));\n                    else if (bits[i].startsWith('MULT='))\n                        sup.name = this.withoutQuotes(bits[i].substring(5));\n                    else if (bits[i].startsWith('FIELDNAME='))\n                        sup.name = this.withoutQuotes(bits[i].substring(10));\n                    else if (bits[i].startsWith('FIELDDATA='))\n                        sup.value = this.withoutQuotes(bits[i].substring(10));\n                }\n                superatoms.set(idx, sup);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            if (value.bracketType) {\n                superatoms.delete(key);\n                this.applyPolymerBlock(value);\n            }\n        }\n        for (let key of Vec.sorted(Array.from(superatoms.keys()))) {\n            let value = superatoms.get(key);\n            superatoms.delete(key);\n            this.applySuperAtom(value, Array.from(superatoms.values()));\n        }\n        if (templateBlocks.length > 0) {\n            this.scsrTemplates = templateBlocks.map((lines) => this.parseV3000Template(lines));\n        }\n    }\n    parseQueryAtomList(mol, atom) {\n        let label = mol.atomElement(atom);\n        let not = false;\n        if (label.startsWith('NOT ')) {\n            label = label.substring(4);\n            not = true;\n        }\n        if (label.length < 2 || !label.startsWith('[') || !label.endsWith(']'))\n            return;\n        label = label.substring(1, label.length - 1);\n        let elements = label.split(',');\n        mol.setAtomElement(atom, '*');\n        if (!not)\n            QueryUtil.setQueryAtomElements(mol, atom, elements);\n        else\n            QueryUtil.setQueryAtomElementsNot(mol, atom, elements);\n    }\n    applySuperAtom(sup, residual) {\n        if (sup.name == null || Vec.isBlank(sup.atoms))\n            return;\n        let mask = Vec.booleanArray(true, this.mol.numAtoms);\n        for (let a of sup.atoms)\n            mask[a - 1] = false;\n        let name = sup.name;\n        let i;\n        while ((i = name.indexOf('\\\\S')) >= 0)\n            name = name.substring(0, i) + '{^' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\s')) >= 0)\n            name = name.substring(0, i) + '{' + name.substring(i + 2);\n        while ((i = name.indexOf('\\\\n')) >= 0)\n            name = name.substring(0, i) + '}' + name.substring(i + 2);\n        let [mod, abvAtom] = !sup.templateClass ? MolUtil.convertToAbbrevIndex(this.mol, mask, name) : [null, null];\n        if (mod == null) {\n            let keyval = {};\n            if (sup.bonds)\n                keyval['bonds'] = sup.bonds.join(' ');\n            if (sup.templateClass)\n                keyval['templateClass'] = sup.templateClass;\n            if (sup.natReplace)\n                keyval['natReplace'] = sup.natReplace;\n            if (sup.attachPoints)\n                keyval['attachPoints'] = sup.attachPoints.join(' ');\n            ForeignMolecule.markSgroupMultiAttach(this.mol, name, sup.atoms, keyval);\n            return;\n        }\n        this.mol = mod;\n        let map = Vec.maskMap(mask);\n        for (let res of residual) {\n            let subsumed = false;\n            for (let n = res.atoms.length - 1; n >= 0; n--) {\n                let atom = map[res.atoms[n] - 1] + 1;\n                if (atom == 0) {\n                    res.atoms = Vec.remove(res.atoms, n);\n                    subsumed = true;\n                }\n                else\n                    res.atoms[n] = atom;\n            }\n            if (subsumed)\n                res.atoms = Vec.sorted(Vec.append(res.atoms, abvAtom));\n        }\n    }\n    applyPolymerBlock(sup) {\n        if (sup.bracketType == 'MUL') {\n            let mult = parseInt(sup.name);\n            ForeignMolecule.markSgroupMultiRepeat(this.mol, mult, sup.atoms);\n            return;\n        }\n        if (sup.bracketType == 'DAT') {\n            if (sup.atoms != null)\n                ForeignMolecule.markSgroupData(this.mol, sup.name, sup.value, sup.unit, sup.query, sup.atoms);\n            return;\n        }\n        let poly = new PolymerBlock(this.mol);\n        let connect = null;\n        if (sup.connectType == null) { }\n        else if (sup.connectType == 'HT')\n            connect = PolymerBlockConnectivity.HeadToTail;\n        else if (sup.connectType == 'HH')\n            connect = PolymerBlockConnectivity.HeadToHead;\n        else if (sup.connectType == 'EU')\n            connect = PolymerBlockConnectivity.Random;\n        else\n            return;\n        let bondConn = null;\n        if (Vec.len(sup.bondConn) == 3) {\n            let b1 = sup.bondConn[0], b2 = sup.bondConn[2], b3 = sup.bondConn[1], b4 = 0;\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (n != b1 && n != b2 && n != b3) {\n                    let in1 = sup.atoms.indexOf(this.mol.bondFrom(n)) >= 0, in2 = sup.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                    if ((in1 && !in2) || (!in1 && in2)) {\n                        if (b4 > 0) {\n                            b4 = 0;\n                            break;\n                        }\n                        b4 = n;\n                    }\n                }\n            bondConn = [b1, b2, b3, b4];\n        }\n        else if (Vec.len(sup.bondConn) == 4) {\n            bondConn = sup.bondConn;\n        }\n        let unit = new PolymerBlockUnit(sup.atoms);\n        unit.connect = connect;\n        unit.bondConn = bondConn;\n        poly.createUnit(unit);\n    }\n    parseV3000Template(lines) {\n        let header = lines[0];\n        let bits = this.splitWithQuotes(header.substring('M  V30 TEMPLATE '.length));\n        let name = bits[1], natReplace = null;\n        for (let n = 2; n < bits.length; n++) {\n            if (bits[n].startsWith('NATREPLACE='))\n                natReplace = bits[n].substring(11);\n        }\n        lines[0] = '  0  0  0  0  0  0  0  0  0  0  0 V3000';\n        lines.push('M  END');\n        let mdl = new MDLMOLReader(lines.join('\\n'));\n        mdl.parseHeader = false;\n        mdl.parse();\n        return { name, natReplace, mol: mdl.mol };\n    }\n    withoutQuotes(str) {\n        if (str.length >= 2 && str.startsWith('\"') && str.endsWith('\"'))\n            return str.substring(1, str.length - 1);\n        return str;\n    }\n    splitWithQuotes(line) {\n        let segments = [];\n        let seg = '';\n        let depth = 0, quote = false;\n        for (let n = 0; n < line.length; n++) {\n            let ch = line.charAt(n);\n            if (ch == ' ' && depth == 0 && !quote) {\n                if (seg.length > 0)\n                    segments.push(seg);\n                seg = '';\n            }\n            else {\n                seg += ch;\n                if (ch == '\"')\n                    quote = !quote;\n                else if (ch == '(' || ch == '[')\n                    depth++;\n                else if (ch == ')' || ch == ']')\n                    depth--;\n            }\n        }\n        if (seg.length > 0)\n            segments.push(seg);\n        return segments;\n    }\n    unpackList(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = [];\n        for (let bit of str.split(' '))\n            values.push(parseInt(bit));\n        if (values[0] != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    unpackStrings(str) {\n        if (!str.startsWith('(') || !str.endsWith(')'))\n            return null;\n        str = str.substring(1, str.length - 1);\n        let values = str.split(' ');\n        if (parseInt(values[0]) != values.length - 1)\n            return null;\n        return Vec.remove(values, 0);\n    }\n    countRingBonds(atom) {\n        let count = 0;\n        for (let b of this.mol.atomAdjBonds(atom))\n            if (this.mol.bondInRing(b))\n                count++;\n        return count;\n    }\n    countSubstitutions(atom) {\n        let count = 0;\n        for (let adj of this.mol.atomAdjList(atom))\n            if (this.mol.atomElement(adj) != 'H')\n                count++;\n        return count;\n    }\n}\nexport class MDLSDFReader {\n    constructor(strData) {\n        this.ds = new DataSheet();\n        this.upcastColumns = true;\n        this.pos = 0;\n        this.lines = strData.split(/\\r?\\n/);\n    }\n    parse() {\n        this.parseStream();\n        if (this.upcastColumns)\n            this.upcastStringColumns();\n        return this.ds;\n    }\n    parseStream() {\n        let ds = this.ds;\n        ds.appendColumn('Molecule', \"molecule\", 'Molecular structure');\n        let colName = -1;\n        let entry = [];\n        while (this.pos < this.lines.length) {\n            let line = this.lines[this.pos++];\n            if (!line.startsWith('$$$$')) {\n                entry.push(line);\n                continue;\n            }\n            let rn = ds.appendRow();\n            let molstr = '';\n            let pos = 0;\n            while (pos < entry.length) {\n                line = entry[pos];\n                if (line.startsWith('> '))\n                    break;\n                molstr += line + '\\n';\n                pos++;\n                if (line.startsWith('M\tEND'))\n                    break;\n            }\n            let mol = null, name = null;\n            try {\n                if (molstr.length > 0) {\n                    let mdl = new MDLMOLReader(molstr);\n                    mdl.parse();\n                    mol = mdl.mol;\n                    name = mdl.molName;\n                }\n            }\n            catch (ex) {\n            }\n            if (mol != null)\n                ds.setMolecule(rn, 0, mol);\n            if (name) {\n                if (colName < 0)\n                    colName = ds.appendColumn('Name', \"string\", 'Molecule name');\n                ds.setString(rn, colName, name);\n            }\n            if (rn == 0 && mol != null) {\n                let str1 = entry[0], str3 = entry[2];\n                if (str1.length >= 7 && str1.startsWith('$name=')) {\n                    ds.changeColumnName(0, str1.substring(6), ds.colDescr(0));\n                }\n                if (str3.length >= 8 && str3.startsWith('$title=')) {\n                    ds.title = str3.substring(7);\n                }\n            }\n            for (; pos + 1 < entry.length; pos += 3) {\n                let key = entry[pos], val = entry[pos + 1];\n                if (!key.startsWith('>'))\n                    continue;\n                let z = key.indexOf('<');\n                if (z < 0)\n                    continue;\n                key = key.substring(z + 1);\n                z = key.indexOf('>');\n                if (z < 0)\n                    continue;\n                key = key.substring(0, z);\n                if (key.length == 0)\n                    continue;\n                while (pos + 2 < entry.length && entry[pos + 2].length > 0) {\n                    val += '\\n' + entry[pos + 2];\n                    pos++;\n                }\n                let cn = ds.findColByName(key);\n                if (cn < 0)\n                    cn = ds.appendColumn(key, \"string\", '');\n                if (val.length == 0)\n                    ds.setToNull(rn, cn);\n                else\n                    ds.setString(rn, cn, val);\n            }\n            entry = [];\n        }\n        if (ds.numRows == 0)\n            this.ds = null;\n    }\n    upcastStringColumns() {\n        let ds = this.ds;\n        for (let i = 0; i < ds.numCols; i++)\n            if (ds.colType(i) == \"string\") {\n                let allnull = true, allreal = true, allint = true, allbool = true;\n                for (let j = 0; j < ds.numRows; j++) {\n                    if (!allreal && !allint && !allbool)\n                        break;\n                    if (ds.isNull(j, i))\n                        continue;\n                    allnull = false;\n                    let val = ds.getString(j, i);\n                    if (allbool) {\n                        let lc = val.toLowerCase();\n                        if (lc != 'true' && lc != 'false')\n                            allbool = false;\n                    }\n                    if (allint) {\n                        let int = parseInt(val);\n                        if (!isFinite(int) || int != parseFloat(val))\n                            allint = false;\n                    }\n                    if (allreal) {\n                        if (!isFinite(parseFloat(val)))\n                            allreal = false;\n                    }\n                }\n                if (allnull) { }\n                else if (allint)\n                    ds.changeColumnType(i, \"integer\");\n                else if (allreal)\n                    ds.changeColumnType(i, \"real\");\n                else if (allbool)\n                    ds.changeColumnType(i, \"boolean\");\n            }\n    }\n}\n//# sourceMappingURL=MDLReader.js.map","import { Vec } from '../util/Vec';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { ForeignMolecule, ForeignMoleculeTransient } from '../mol/ForeignMolecule';\nimport { MDLMOL_VALENCE } from './MDLReader';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { StereoGroup } from '../mol/StereoGroup';\nconst VPFX = 'M  V30 ';\nexport class MDLMOLWriter {\n    constructor(mol) {\n        this.mol = mol;\n        this.includeHeader = true;\n        this.includeCounts = true;\n        this.includeEnd = true;\n        this.overallStereoAbsolute = true;\n        this.enhancedFields = false;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.polymerBlocks = true;\n        this.molName = '';\n        this.scsrTemplates = null;\n        this.sgroups = [];\n        this.lines = [];\n    }\n    write() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB();\n        return this.lines.join('\\n');\n    }\n    writeV3000() {\n        if (this.includeHeader) {\n            this.lines.push(this.molName);\n            this.lines.push('Generated by WebMolKit');\n            this.lines.push('');\n        }\n        this.writeCTAB3000();\n        return this.lines.join('\\n');\n    }\n    writeEither() {\n        let triggered = StereoGroup.hasStereoGroups(this.mol) || this.mol.numAtoms >= 1000 || this.mol.numBonds >= 1000 || Vec.notBlank(this.scsrTemplates);\n        if (!triggered)\n            for (let n = 1; n <= this.mol.numBonds; n++)\n                if (this.mol.bondOrder(n) == 0 && QueryUtil.queryBondOrders(this.mol, n) == null) {\n                    triggered = true;\n                    break;\n                }\n        if (triggered)\n            return this.writeV3000();\n        else\n            return this.write();\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n    writeCTAB() {\n        var _a;\n        let mol = this.mol = this.mol.clone();\n        mol.keepTransient = true;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let atomList1 = [], atomList2 = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let elements = null;\n            let logic = 'F';\n            elements = QueryUtil.queryAtomElements(mol, n);\n            if (elements == null) {\n                elements = QueryUtil.queryAtomElementsNot(mol, n);\n                logic = 'T';\n            }\n            if (elements == null)\n                continue;\n            mol.setAtomElement(n, 'L');\n            let line = this.intrpad(n, 3) + ' ' + logic + '  ' + this.intrpad(elements.length, 3);\n            for (let el of elements)\n                line += this.intrpad(Molecule.elementAtomicNumber(el), 4);\n            atomList1.push(line);\n            line = 'M  ALS ' + this.intrpad(n, 3) + this.intrpad(elements.length, 3) + ' ' + logic + ' ';\n            for (let el of elements)\n                line += this.pad(el, 4);\n            atomList2.push(line);\n        }\n        this.lines.push(this.intrpad(mol.numAtoms, 3) + this.intrpad(mol.numBonds, 3) + this.intrpad(atomList1.length, 3) +\n            '  0' + (this.overallStereoAbsolute ? '  1' : '  0') + '  0  0  0  0  0999 V2000');\n        let chgidx = [], chgval = [];\n        let radidx = [], radval = [];\n        let isoidx = [], isoval = [];\n        let rgpidx = [], rgpval = [];\n        let hydidx = [], hydval = [];\n        let zchidx = [], zchval = [];\n        let zboidx = [], zboval = [];\n        let rbcidx = [], rbcval = [];\n        let subidx = [], subval = [];\n        let unsidx = [], unsval = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let line = this.rpad(x.toFixed(4), 10) + this.rpad(y.toFixed(4), 10) + this.rpad(z.toFixed(4), 10);\n            let el = mol.atomElement(n);\n            let str = el;\n            if (str.length > 3)\n                str = str.substring(0, 3);\n            if (str.length > 1 && str.charAt(0) == 'R' && str.charAt(1) >= '0' && str.charAt(1) <= '9') {\n                rgpidx.push(n);\n                rgpval.push(parseInt(str.substring(1)));\n                str = 'R#';\n            }\n            while (str.length < 4)\n                str += ' ';\n            line += ' ' + str + '0';\n            let chg = mol.atomCharge(n), rad = mol.atomUnpaired(n), mapnum = mol.atomMapNum(n);\n            if (chg >= -3 && chg <= -1)\n                chg = 4 - chg;\n            else if (chg == 0 && rad == 2)\n                chg = 4;\n            else if (chg >= 1 && chg <= 3)\n                chg = 4 - chg;\n            else\n                chg = 0;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n);\n            let hyd = 0;\n            if (Vec.len(qhyd) == 1)\n                hyd = qhyd[0] + 1;\n            let val = this.mdlValence(mol, n, 15);\n            line += this.intrpad(chg, 3) + '  0' + this.intrpad(hyd, 3) + '  0' + this.intrpad(val, 3) + '  0  0  0' + this.intrpad(mapnum, 3) + '  0  0';\n            this.lines.push(line);\n            if (mol.atomCharge(n) != 0) {\n                chgidx.push(n);\n                chgval.push(mol.atomCharge(n));\n            }\n            if (this.enhancedFields) {\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN) {\n                    hydidx.push(n);\n                    hydval.push(mol.atomHExplicit(n));\n                }\n            }\n            if (rad == 1) {\n                radidx.push(n);\n                radval.push(2);\n            }\n            if (rad == 2) {\n                radidx.push(n);\n                radval.push(1);\n            }\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                isoidx.push(n);\n                isoval.push(mol.atomIsotope(n));\n            }\n            let qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qrbc) == 1) {\n                rbcidx.push(n);\n                rbcval.push(qrbc[0] == 0 ? -1 : qrbc[0]);\n            }\n            if (Vec.len(qsub) == 1) {\n                subidx.push(n);\n                subval.push(qsub[0] == 0 ? -1 : qsub[0]);\n            }\n            if (quns == true) {\n                unsidx.push(n);\n                unsval.push(1);\n            }\n        }\n        let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let order = mol.bondOrder(n), type = order;\n            let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n            if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                type = 4;\n            else if (Vec.equals(qbond, [1, 2]))\n                type = 5;\n            else if (Vec.equals(qbond, [-1, 1]))\n                type = 6;\n            else if (Vec.equals(qbond, [-1, 2]))\n                type = 7;\n            else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                type = 8;\n            else if (type > 3)\n                type = 3;\n            let stereo = mol.bondType(n);\n            if (stereo == Molecule.BONDTYPE_NORMAL) { }\n            else if (stereo == Molecule.BONDTYPE_INCLINED) {\n                stereo = 1;\n            }\n            else if (stereo == Molecule.BONDTYPE_DECLINED) {\n                stereo = 6;\n            }\n            else if (stereo == Molecule.BONDTYPE_UNKNOWN) {\n                if (type == 1)\n                    stereo = 4;\n                else\n                    stereo = 3;\n            }\n            else\n                stereo = 0;\n            let line = this.intrpad(mol.bondFrom(n), 3) + this.intrpad(mol.bondTo(n), 3) +\n                this.intrpad(type, 3) + this.intrpad(stereo, 3) + '  0  0  0';\n            this.lines.push(line);\n            if (this.enhancedFields) {\n                if ((order < 1 || order > 3) || type != order && Vec.isBlank(qbond)) {\n                    zboidx.push(n);\n                    zboval.push(order);\n                }\n            }\n        }\n        this.lines.push(...atomList1);\n        this.lines.push(...atomList2);\n        this.writeMBlockPair('CHG', chgidx, chgval);\n        this.writeMBlockPair('RAD', radidx, radval);\n        this.writeMBlockPair('ISO', isoidx, isoval);\n        this.writeMBlockPair('RGP', rgpidx, rgpval);\n        this.writeMBlockPair('HYD', hydidx, hydval);\n        this.writeMBlockPair('ZCH', zchidx, zchval);\n        this.writeMBlockPair('ZBO', zboidx, zboval);\n        this.writeMBlockPair('RBC', rbcidx, rbcval);\n        this.writeMBlockPair('SUB', subidx, subval);\n        this.writeMBlockPair('UNS', unsidx, unsval);\n        if (this.enhancedFields) {\n            let artifacts = new BondArtifact(this.mol);\n            let idx = 0;\n            for (let path of artifacts.getResPaths())\n                this.writeMBlockFlat('ZPA', ++idx, path.atoms);\n            for (let ring of artifacts.getResRings())\n                this.writeMBlockFlat('ZRI', ++idx, ring.atoms);\n            for (let arene of artifacts.getArenes())\n                this.writeMBlockFlat('ZAR', ++idx, Vec.prepend(arene.atoms, arene.centre));\n        }\n        let inSgroup = Vec.booleanArray(false, mol.numAtoms);\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            for (let n of sg.atoms)\n                inSgroup[n - 1] = true;\n            let sidx = this.intrpad(s + 1, 4);\n            this.lines.push('M  STY  1' + sidx + ' ' + sg.type);\n            for (let n = 0; n < sg.atoms.length; n += 15) {\n                let sz = Math.min(sg.atoms.length - n, 15);\n                let line = 'M  SAL' + sidx + this.intrpad(sz, 3);\n                for (let i = 0; i < sz; i++)\n                    line += this.intrpad(sg.atoms[n + i], 4);\n                this.lines.push(line);\n            }\n            if (sg.type != 'DAT')\n                this.lines.push('M  SMT' + sidx + ' ' + sg.name);\n            if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                for (let n = 0; n < unit; n += 15) {\n                    let sz = Math.min(unit - n, 15);\n                    let line = 'M  SPA' + sidx + this.intrpad(sz, 3);\n                    for (let i = 0; i < sz; i++)\n                        line += this.intrpad(sg.atoms[n + i], 4);\n                    this.lines.push(line);\n                }\n                if (sg.parent > 0)\n                    this.lines.push('M  SPL    1' + sidx + this.intrpad(sg.parent, 4));\n            }\n            if (sg.type == 'DAT') {\n                this.lines.push('M  SDT' + sidx + ' ' + this.pad(sg.name, 32) + this.pad(sg.unit, 20) + sg.query);\n                this.lines.push('M  SED' + sidx + ' ' + sg.value);\n            }\n        }\n        if (this.polymerBlocks)\n            this.encodePolymerBlocks(this.sgroups.length);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n).length > 2) {\n                this.lines.push('A  ' + this.intrpad(n, 3));\n                this.lines.push(mol.atomElement(n));\n            }\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    writeMBlockPair(token, idx, val) {\n        const sz = idx.length;\n        for (let i = 0; i < sz; i += 8) {\n            let count = Math.min(8, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(idx[i + j], 4) + this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlat(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(count, 3) + this.intrpad(idx, 4);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    writeMBlockFlatIdxFirst(token, idx, val) {\n        const sz = val.length;\n        for (let i = 0; i < sz; i += 15) {\n            let count = Math.min(15, sz - i);\n            let line = 'M  ' + token + this.intrpad(idx, 4) + this.intrpad(count, 3);\n            for (let j = 0; j < count; j++)\n                line += this.intrpad(val[i + j], 4);\n            this.lines.push(line);\n        }\n    }\n    intrpad(num, sz) {\n        return this.rpad(num.toString(), sz);\n    }\n    rpad(str, sz) {\n        while (str.length < sz)\n            str = ' ' + str;\n        return str;\n    }\n    pad(str, sz) {\n        while (str.length < sz)\n            str += ' ';\n        return str;\n    }\n    mdlValence(mol, atom, zeroVal) {\n        let marked = ForeignMolecule.noteExplicitValence(mol, atom);\n        if (marked != null)\n            return marked > 0 ? marked : zeroVal;\n        let hyd = mol.atomHydrogens(atom), el = mol.atomElement(atom);\n        let options = MDLMOL_VALENCE[el];\n        if (options == null && hyd == 0)\n            return 0;\n        let chg = mol.atomCharge(atom);\n        let chgmod = (el == 'C' || el == 'H') ? Math.abs(chg) : el == 'B' ? -Math.abs(chg) : -chg;\n        let bondSum = 0;\n        for (let b of mol.atomAdjBonds(atom))\n            bondSum += mol.bondOrder(b);\n        let nativeVal = chgmod + hyd + bondSum;\n        if (options)\n            for (let optVal of options)\n                if (optVal >= chgmod + bondSum) {\n                    if (optVal == nativeVal)\n                        return 0;\n                    break;\n                }\n        let val = nativeVal - chgmod;\n        return val <= 0 || val > 14 ? zeroVal : val;\n    }\n    partialAbbrevExpansion() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                let frag = MolUtil.getAbbrev(mol, n);\n                if (frag == null || mol.atomAdjCount(n) != 1) {\n                    MolUtil.clearAbbrev(mol, n);\n                    continue;\n                }\n                if (MolUtil.hasAnyAbbrev(frag)) {\n                    MolUtil.expandAbbrevs(frag, true);\n                    MolUtil.setAbbrev(mol, n, frag);\n                }\n                let order = mol.bondOrder(mol.atomAdjBonds(n)[0]);\n                if (frag.atomAdjCount(1) == 1 && order == frag.bondOrder(frag.atomAdjBonds(1)[0]))\n                    continue;\n                MolUtil.expandOneAbbrev(mol, n, true);\n                n--;\n            }\n    }\n    prepareSgroups() {\n        const { mol } = this;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomMapNum(n) < 0)\n                mol.setAtomMapNum(n, 0);\n        let next = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                this.sgroups.push({ type: 'SUP', name: mol.atomElement(n), atoms: null });\n                let mask = MolUtil.expandOneAbbrev(mol, n, true);\n                if (mask == null)\n                    continue;\n                next--;\n                for (let i = 0; i < mask.length; i++)\n                    if (mask[i])\n                        mol.setAtomMapNum(i + 1, next);\n                n--;\n            }\n        for (let idx = -1, p = 0; idx >= next; idx--, p++) {\n            let atoms = [];\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) == idx) {\n                    atoms.push(n);\n                    mol.setAtomMapNum(n, 0);\n                }\n            this.sgroups[p].atoms = atoms;\n        }\n        for (let ma of ForeignMolecule.noteAllSgroupMultiAttach(mol)) {\n            let sg = { type: 'SUP', name: ma.name, atoms: ma.atoms };\n            let str = ma.keyval['bonds'];\n            if (str)\n                sg.bonds = str.split(' ').map((v) => parseInt(v));\n            sg.templateClass = ma.keyval['templateClass'];\n            sg.natReplace = ma.keyval['natReplace'];\n            str = ma.keyval['attachPoints'];\n            if (str)\n                sg.attachPoints = str.split(' ');\n            this.sgroups.push(sg);\n        }\n        for (let mr of ForeignMolecule.noteAllSgroupMultiRepeat(mol))\n            this.sgroups.push({ type: 'MUL', name: mr.mult.toString(), atoms: mr.atoms });\n        for (let dat of ForeignMolecule.noteAllSgroupData(mol))\n            this.sgroups.push({ type: 'DAT', name: dat.name, value: dat.value, unit: dat.unit, query: dat.query, atoms: dat.atoms });\n        for (let n = 0; n < this.sgroups.length; n++) {\n            let sg = this.sgroups[n];\n            if (sg.type != 'MUL')\n                continue;\n            let bestIdx = -1, bestSize = Number.MAX_SAFE_INTEGER;\n            skip: for (let i = 0; i < this.sgroups.length; i++)\n                if (i != n) {\n                    let look = this.sgroups[i];\n                    if (look.type != 'MUL' || look.atoms.length >= bestSize)\n                        continue;\n                    for (let a of sg.atoms)\n                        if (!look.atoms.includes(a))\n                            continue skip;\n                    bestIdx = i;\n                    bestSize = look.atoms.length;\n                }\n            if (bestIdx >= 0)\n                sg.parent = bestIdx + 1;\n        }\n    }\n    encodePolymerBlocks(idx) {\n        let polymers = new PolymerBlock(this.mol);\n        for (let id of polymers.getIDList()) {\n            let unit = polymers.getUnit(id);\n            let sidx = this.intrpad(++idx, 4);\n            this.lines.push('M  STY  1' + sidx + ' SRU');\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.lines.push('M  SCN  1' + sidx + ' HT ');\n            else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.lines.push('M  SCN  1' + sidx + ' HH ');\n            else if (unit.connect == PolymerBlockConnectivity.Random)\n                this.lines.push('M  SCN  1' + sidx + ' EU ');\n            this.writeMBlockFlatIdxFirst('SAL', idx, unit.atoms);\n            let bonds = null;\n            for (let n = 1; n <= this.mol.numBonds; n++) {\n                let fl1 = unit.atoms.indexOf(this.mol.bondFrom(n)) >= 0, fl2 = unit.atoms.indexOf(this.mol.bondTo(n)) >= 0;\n                if ((fl1 && !fl2) || (!fl1 && fl2))\n                    bonds = Vec.append(bonds, n);\n            }\n            if (bonds != null)\n                this.writeMBlockFlatIdxFirst('SBL', idx, bonds);\n            if (Vec.len(unit.bondConn) == 4) {\n                let bcrs = [unit.bondConn[0], unit.bondConn[2], unit.bondConn[1]];\n                this.writeMBlockFlatIdxFirst('CRS', idx, bcrs);\n            }\n            this.lines.push('M  SMT' + sidx + ' n');\n        }\n    }\n    writeCTAB3000() {\n        var _a;\n        let mol = this.mol;\n        if (MolUtil.hasAnyAbbrev(mol) || ForeignMolecule.hasAnySgroupMultiAttach(mol) || ForeignMolecule.hasAnySgroupMultiRepeat(mol) || ForeignMolecule.hasAnySgroupData(mol)) {\n            mol = this.mol = mol.clone();\n            mol.keepTransient = true;\n            if (this.abbrevSgroups)\n                this.partialAbbrevExpansion();\n            else\n                MolUtil.expandAbbrevs(mol, true);\n            this.prepareSgroups();\n        }\n        let sgroupText = this.populateV3000Sgroups();\n        if (this.includeCounts)\n            this.lines.push('  0  0  0     0  0            999 V3000');\n        this.lines.push(VPFX + 'BEGIN CTAB');\n        this.lines.push(VPFX + `COUNTS ${mol.numAtoms} ${mol.numBonds} ${sgroupText.length} 0 ${this.overallStereoAbsolute ? 1 : 0}`);\n        this.lines.push(VPFX + 'BEGIN ATOM');\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let label = mol.atomElement(n);\n            let qel = QueryUtil.queryAtomElements(mol, n);\n            if (qel != null)\n                label = '[' + qel.join(',') + ']';\n            else {\n                qel = QueryUtil.queryAtomElementsNot(mol, n);\n                if (qel != null)\n                    label = 'NOT [' + qel.join(',') + ']';\n            }\n            if (label.includes(' '))\n                label = `\"${label}\"`;\n            let x = mol.atomX(n), y = mol.atomY(n);\n            let z = mol.is3D() ? mol.atomZ(n) : 0;\n            let mapnum = mol.atomMapNum(n), chg = mol.atomCharge(n), unp = mol.atomUnpaired(n);\n            let isotope = mol.atomIsotope(n), val = this.mdlValence(mol, n, -1);\n            let line = `${VPFX}${n} ${label} ${x.toFixed(4)} ${y.toFixed(4)} ${z.toFixed(4)} ${mapnum}`;\n            if (chg != 0)\n                line += ' CHG=' + chg;\n            if (unp == 1)\n                line += ' RAD=2';\n            else if (unp == 2)\n                line += ' RAD=1';\n            if (isotope != 0)\n                line += ' MASS=' + isotope;\n            if (val != 0)\n                line += ' VAL=' + val;\n            let qhyd = QueryUtil.queryAtomHydrogens(mol, n), qrbc = QueryUtil.queryAtomRingBonds(mol, n), qsub = QueryUtil.queryAtomAdjacency(mol, n);\n            let quns = QueryUtil.queryAtomUnsaturated(mol, n);\n            if (Vec.len(qhyd) == 1)\n                line += ' HCOUNT=' + (qhyd[0] == 0 ? -1 : qhyd[0]);\n            if (Vec.len(qrbc) == 1)\n                line += ' RBCNT=' + (qrbc[0] == 0 ? -1 : qrbc[0]);\n            if (Vec.len(qsub) == 1)\n                line += ' SUBST=' + (qsub[0] == 0 ? -1 : qsub[0]);\n            if (quns == true)\n                line += ' UNSAT=1';\n            for (let trans of mol.atomTransient(n)) {\n                if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRClass))\n                    line += ' CLASS=' + trans.substring(ForeignMoleculeTransient.AtomSCSRClass.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRSeqID))\n                    line += ' SEQID=' + trans.substring(ForeignMoleculeTransient.AtomSCSRSeqID.length + 1);\n                else if (trans.startsWith(ForeignMoleculeTransient.AtomSCSRAttchOrd)) {\n                    let bits = trans.substring(ForeignMoleculeTransient.AtomSCSRAttchOrd.length + 1).split(',');\n                    line += ' ATTCHORD=' + this.packV3000Strings(bits);\n                }\n            }\n            this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END ATOM');\n        if (mol.numBonds > 0) {\n            this.lines.push(VPFX + 'BEGIN BOND');\n            let maskArom = ForeignMolecule.noteAromaticBonds(mol);\n            let maskHBond = ForeignMolecule.noteZeroHydrogenBonds(mol);\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let order = mol.bondOrder(n), type = order;\n                let qbond = Vec.sorted((_a = QueryUtil.queryBondOrders(mol, n)) !== null && _a !== void 0 ? _a : []);\n                if (maskArom[n - 1] || Vec.equals(qbond, [-1]))\n                    type = 4;\n                else if (Vec.equals(qbond, [1, 2]))\n                    type = 5;\n                else if (Vec.equals(qbond, [-1, 1]))\n                    type = 6;\n                else if (Vec.equals(qbond, [-1, 2]))\n                    type = 7;\n                else if (Vec.equals(qbond, [-1, 0, 1, 2, 3]))\n                    type = 8;\n                else if (type == 0) {\n                    if (!maskHBond[n - 1])\n                        type = 9;\n                    else\n                        type = 10;\n                }\n                else if (type > 3)\n                    type = 3;\n                let stereo = mol.bondType(n);\n                let line = `${VPFX}${n} ${type} ${bfr} ${bto}`;\n                if (stereo == Molecule.BONDTYPE_INCLINED)\n                    line += ' CFG=1';\n                else if (stereo == Molecule.BONDTYPE_DECLINED)\n                    line += ' CFG=3';\n                else if (stereo == Molecule.BONDTYPE_UNKNOWN)\n                    line += ' CFG=2';\n                if (order == 0 && !maskHBond[n - 1])\n                    line += ' DISP=COORD';\n                this.lines.push(line);\n            }\n            this.lines.push(VPFX + 'END BOND');\n        }\n        if (sgroupText.length > 0) {\n            this.lines.push(VPFX + 'BEGIN SGROUP');\n            this.lines.push(...sgroupText);\n            this.lines.push(VPFX + 'END SGROUP');\n        }\n        let collections = [];\n        let stereoGroup = new StereoGroup(mol);\n        let racidx = 0, relidx = 0;\n        for (let atoms of stereoGroup.getRacemicAtoms())\n            collections.push(VPFX + 'MDLV30/STERAC' + (++racidx) + ' ATOMS=' + this.packV3000List(atoms));\n        for (let atoms of stereoGroup.getRelativeAtoms())\n            collections.push(VPFX + 'MDLV30/STEREL' + (++relidx) + ' ATOMS=' + this.packV3000List(atoms));\n        if (collections.length > 0) {\n            this.lines.push(VPFX + 'BEGIN COLLECTION');\n            this.lines.push(...collections);\n            this.lines.push(VPFX + 'END COLLECTION');\n        }\n        this.lines.push(VPFX + 'END CTAB');\n        if (Vec.notBlank(this.scsrTemplates))\n            this.populateSCSRTemplates();\n        if (this.includeEnd)\n            this.lines.push('M  END');\n    }\n    populateV3000Sgroups() {\n        let mol = this.mol;\n        let lines = [];\n        for (let s = 0; s < this.sgroups.length; s++) {\n            let sg = this.sgroups[s];\n            let sid = lines.length + 1;\n            let txt = `${VPFX}${sid} ${sg.type} 0`;\n            if (sg.type == 'SUP') {\n                txt += ' LABEL=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                if (sg.bonds)\n                    txt += ' XBONDS=' + this.packV3000List(sg.bonds);\n                if (sg.templateClass)\n                    txt += ' CLASS=' + sg.templateClass;\n                if (sg.natReplace)\n                    txt += ' NATREPLACE=' + sg.natReplace;\n                if (sg.attachPoints) {\n                    for (let n = 0; n + 2 < sg.attachPoints.length; n += 3) {\n                        let v1 = sg.attachPoints[n], v2 = sg.attachPoints[n + 1], v3 = sg.attachPoints[n + 2];\n                        txt += ` SAP=(3 ${v1} ${v2} ${v3})`;\n                    }\n                }\n            }\n            else if (sg.type == 'MUL') {\n                let mult = parseInt(sg.name), unit = sg.atoms.length / mult;\n                txt += ' MULT=' + sg.name;\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' PATOMS=' + this.packV3000List(sg.atoms.slice(0, unit));\n                if (sg.parent > 0)\n                    txt += ' PARENT=' + sg.parent;\n            }\n            else if (sg.type == 'DAT') {\n                txt += ' ATOMS=' + this.packV3000List(sg.atoms);\n                txt += ' FIELDNAME=' + (sg.name.includes(' ') ? `\"${sg.name}\"` : sg.name);\n                txt += ' FIELDDATA=' + (sg.value.includes(' ') ? `\"${sg.value}\"` : sg.value);\n            }\n            lines.push(txt);\n        }\n        if (this.polymerBlocks) {\n            let polymers = new PolymerBlock(mol);\n            for (let id of polymers.getIDList()) {\n                let sid = lines.length + 1;\n                let unit = polymers.getUnit(id);\n                let txt = `${VPFX}${sid} SRU 0`;\n                txt += ' ATOMS=' + this.packV3000List(unit.atoms);\n                if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                    txt += ' CONNECT=HT';\n                else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                    txt += ' CONNECT=HH';\n                else if (unit.connect == PolymerBlockConnectivity.Random)\n                    txt += ' CONNECT=EU';\n                let bonds = [];\n                for (let n = 1; n <= mol.numBonds; n++) {\n                    let fl1 = unit.atoms.includes(mol.bondFrom(n)), fl2 = unit.atoms.includes(mol.bondTo(n));\n                    if ((fl1 && !fl2) || (!fl1 && fl2))\n                        bonds.push(n);\n                }\n                if (bonds.length > 0)\n                    txt += ' BONDS=' + this.packV3000List(bonds);\n                if (unit.bondConn != null)\n                    txt += ' XBCORR=' + this.packV3000List(unit.bondConn);\n                lines.push(txt);\n            }\n        }\n        return lines;\n    }\n    populateSCSRTemplates() {\n        this.lines.push(VPFX + 'BEGIN TEMPLATE');\n        for (let n = 0; n < this.scsrTemplates.length; n++) {\n            var defn = this.scsrTemplates[n];\n            let line = VPFX + 'TEMPLATE ' + (n + 1) + ' ' + defn.name;\n            if (defn.natReplace)\n                line += ' NATREPLACE=' + defn.natReplace;\n            this.lines.push(line);\n            var tmdl = new MDLMOLWriter(defn.mol);\n            tmdl.includeHeader = false;\n            tmdl.includeCounts = false;\n            tmdl.includeEnd = false;\n            let molfile = tmdl.writeV3000();\n            for (line of molfile.trimEnd().split('\\n'))\n                this.lines.push(line);\n        }\n        this.lines.push(VPFX + 'END TEMPLATE');\n    }\n    packV3000List(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n    packV3000Strings(values) {\n        let str = '(' + values.length;\n        for (let v of values)\n            str += ' ' + v;\n        return str + ')';\n    }\n}\nexport class MDLSDFWriter {\n    constructor(ds) {\n        this.ds = ds;\n        this.enhancedFields = true;\n        this.chargeSeparate = false;\n        this.abbrevSgroups = true;\n        this.lines = [];\n    }\n    write() {\n        let ds = this.ds, lines = this.lines;\n        let colMol = this.ds.firstColOfType(\"molecule\");\n        for (let i = 0; i < ds.numRows; i++) {\n            let mol = colMol < 0 ? null : ds.getMolecule(i, colMol);\n            if (mol != null) {\n                let wtr = new MDLMOLWriter(mol);\n                wtr.enhancedFields = this.enhancedFields;\n                wtr.chargeSeparate = this.chargeSeparate;\n                wtr.abbrevSgroups = this.abbrevSgroups;\n                let molstr = wtr.write();\n                lines.push(molstr);\n            }\n            for (let j = 0; j < ds.numCols; j++)\n                if (j != colMol && ds.notNull(i, j)) {\n                    let ct = ds.colType(j);\n                    let val = '';\n                    if (ct == \"string\")\n                        val = ds.getString(i, j);\n                    else if (ct == \"integer\")\n                        val = ds.getInteger(i, j).toString();\n                    else if (ct == \"real\")\n                        val = ds.getReal(i, j).toString();\n                    else if (ct == \"boolean\")\n                        val = ds.getBoolean(i, j) ? 'true' : 'false';\n                    if (val != '') {\n                        lines.push('> <' + ds.colName(j) + '>');\n                        lines.push(val);\n                        lines.push('');\n                    }\n                }\n            lines.push('$$$$');\n        }\n        return lines.join('\\n');\n    }\n    getResult() {\n        return this.lines.join('\\n');\n    }\n}\n//# sourceMappingURL=MDLWriter.js.map","import { MDLMOLReader } from './MDLReader';\nimport { MDLMOLWriter } from './MDLWriter';\nimport { Molecule } from '../mol/Molecule';\nconst ESCAPED_CHARS = '\\n\\t\\\\,=';\nfunction escape(str) {\n    let buff = null;\n    for (let n = 0; n < str.length; n++) {\n        let ch = str.charAt(n);\n        let escape = ESCAPED_CHARS.includes(ch), ctrl = ch.charCodeAt(0) < 32;\n        if (buff == null && (escape || ctrl)) {\n            buff = str.substring(0, n);\n        }\n        if (escape) {\n            if (ch == '\\n')\n                buff += '\\\\n';\n            else if (ch == '\\t')\n                buff += '\\\\t';\n            else\n                buff += '\\\\' + ch;\n        }\n        else if (ctrl) { }\n        else if (buff != null)\n            buff += ch;\n    }\n    return buff !== null && buff !== void 0 ? buff : str;\n}\nfunction writeKeyVals(keyvals) {\n    let str = '';\n    let multiline = [];\n    for (let kv of keyvals) {\n        if (!kv.includes('\\n'))\n            str += ',' + escape(kv);\n        else\n            multiline.push(kv);\n    }\n    str += '\\n';\n    for (let kv of multiline) {\n        let lines = kv.trimEnd().split('\\n');\n        for (let n = 0; n < lines.length; n++) {\n            str += `${n == 0 ? '.' : ':'}${lines[n]}\\n`;\n        }\n    }\n    return str;\n}\nfunction readNextChunk(line, pos, term, mandatory) {\n    let end = pos, sz = line.length;\n    if (pos >= sz) {\n        if (mandatory)\n            throw new Error('Molecule missing line fragment');\n        return null;\n    }\n    let escaped = false;\n    while (end < sz) {\n        let ch = line.charAt(end);\n        if (ch == '\\\\') {\n            if (end == sz - 1)\n                throw new Error('Escape character \\\\ at end of line');\n            escaped = true;\n            end += 2;\n        }\n        else if (ch == term)\n            break;\n        else\n            end++;\n    }\n    if (!escaped)\n        return { str: line.substring(pos, end), pos: end };\n    var str = '';\n    for (let n = pos; n < end; n++) {\n        let ch = line.charAt(n);\n        if (ch == '\\\\') {\n            ch = line.charAt(++n);\n            if (ch == 'n')\n                str += '\\n';\n            else if (ch == 't')\n                str += '\\t';\n            else\n                str += ch;\n        }\n        else\n            str += ch;\n    }\n    return { str, pos: end };\n}\nclass MoleculeStream {\n    static readUnknown(strData) {\n        if (strData.startsWith('\"')) {\n            try {\n                let jsonStr = JSON.parse(strData);\n                let mol = MoleculeStream.readNative(jsonStr);\n                if (mol)\n                    return mol;\n            }\n            catch (ex) { }\n        }\n        let mol = MoleculeStream.readNative(strData);\n        if (mol)\n            return mol;\n        try {\n            mol = MoleculeStream.readMDLMOL(strData);\n        }\n        catch (e) { }\n        return mol;\n    }\n    static readNative(strData) {\n        if (strData.startsWith('SketchEl!'))\n            return this.readNativeLegacy(strData);\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        let match = lines[0].match(/^Elements\\!\\((\\d+),(\\d+)\\)$/);\n        if (!match)\n            return null;\n        let numAtoms = parseInt(match[1]), numBonds = parseInt(match[2]);\n        if (!(numAtoms >= 0))\n            throw new Error(`Invalid atom count: ${match[1]}`);\n        if (!(numBonds >= 0))\n            throw new Error(`Invalid bond count: ${match[2]}`);\n        const MSG_PREMATURE = 'Molecule atom content ends prematurely';\n        const MSG_UNEXPECTED = 'Molecule unexpected end tag';\n        const parseIntHard = (str) => {\n            let v = parseInt(str);\n            if (Number.isNaN(v))\n                throw new Error(`Malformed integer: ${str}`);\n            return v;\n        };\n        const parseFloatHard = (str) => {\n            let v = parseFloat(str);\n            if (Number.isNaN(v))\n                throw new Error(`Malformed float: ${str}`);\n            return v;\n        };\n        const applyAtomProperty = (atom, str) => {\n            if (!str)\n                return;\n            let pfx = str.charAt(0);\n            if (pfx == 'z')\n                mol.setAtomZ(atom, parseFloatHard(str.substring(1)));\n            else if (pfx == 'c')\n                mol.setAtomCharge(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'u')\n                mol.setAtomUnpaired(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'h')\n                mol.setAtomHExplicit(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'i')\n                mol.setAtomIsotope(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'm')\n                mol.setAtomMapNum(atom, parseIntHard(str.substring(1)));\n            else if (pfx == 'y')\n                mol.appendAtomTransient(atom, str);\n            else\n                mol.appendAtomExtra(atom, str);\n        };\n        const applyBondProperty = (bond, str) => {\n            if (!str)\n                return;\n            let pfx = str.charAt(0);\n            if (pfx == 'i')\n                mol.setBondType(bond, Molecule.BONDTYPE_INCLINED);\n            else if (pfx == 'd')\n                mol.setBondType(bond, Molecule.BONDTYPE_DECLINED);\n            else if (pfx == 'u')\n                mol.setBondType(bond, Molecule.BONDTYPE_UNKNOWN);\n            else if (pfx == 'y')\n                mol.appendBondTransient(bond, str);\n            else\n                mol.appendBondExtra(bond, str);\n        };\n        let lnum = 1;\n        for (let n = 1; n <= numAtoms; n++) {\n            if (!lines[lnum])\n                throw new Error(MSG_PREMATURE);\n            let chunkEl = readNextChunk(lines[lnum], 0, '=', true);\n            let chunkX = readNextChunk(lines[lnum], chunkEl.pos + 1, ',', true);\n            let chunkY = readNextChunk(lines[lnum], chunkX.pos + 1, ',', true);\n            let x = parseFloatHard(chunkX.str), y = parseFloatHard(chunkY.str);\n            mol.addAtom(chunkEl.str, x, y);\n            let pos = chunkY.pos + 1;\n            while (true) {\n                var chunk = readNextChunk(lines[lnum], pos, ',', false);\n                if (chunk == null)\n                    break;\n                applyAtomProperty(n, chunk.str);\n                pos = chunk.pos + 1;\n            }\n            lnum++;\n            while (true) {\n                if (!lines[lnum])\n                    throw new Error(MSG_PREMATURE);\n                if (lines[lnum] == '!End') {\n                    if (n == numAtoms && numBonds == 0)\n                        break;\n                    throw new Error(MSG_UNEXPECTED);\n                }\n                if (!lines[lnum].startsWith('.'))\n                    break;\n                var buff = lines[lnum].substring(1);\n                while (true) {\n                    lnum++;\n                    if (!lines[lnum])\n                        throw new Error(MSG_PREMATURE);\n                    if (!lines[lnum].startsWith(':'))\n                        break;\n                    buff += '\\n' + lines[lnum].substring(1);\n                }\n                applyAtomProperty(n, buff);\n            }\n        }\n        for (let n = 1; n <= numBonds; n++) {\n            if (!lines[lnum])\n                throw new Error(MSG_PREMATURE);\n            var chunkFrom = readNextChunk(lines[lnum], 0, '-', true);\n            var chunkTo = readNextChunk(lines[lnum], chunkFrom.pos + 1, '=', true);\n            var chunkOrder = readNextChunk(lines[lnum], chunkTo.pos + 1, ',', true);\n            let bfr = parseIntHard(chunkFrom.str), bto = parseIntHard(chunkTo.str), order = parseIntHard(chunkOrder.str);\n            if (bfr < 1 || bfr > numAtoms || bto < 1 || bto > numAtoms || order < 0 || order > 4)\n                throw new Error('Invalid bond specification');\n            mol.addBond(bfr, bto, order);\n            let pos = chunkOrder.pos + 1;\n            while (true) {\n                var chunk = readNextChunk(lines[lnum], pos, ',', false);\n                if (chunk == null)\n                    break;\n                applyBondProperty(n, chunk.str);\n                pos = chunk.pos + 1;\n            }\n            lnum++;\n            while (true) {\n                if (!lines[lnum])\n                    throw new Error(MSG_PREMATURE);\n                if (lines[lnum] == '!End') {\n                    if (n == numBonds)\n                        break;\n                    throw new Error(MSG_UNEXPECTED);\n                }\n                if (!lines[lnum].startsWith('.'))\n                    break;\n                let buff = lines[lnum].substring(1);\n                while (true) {\n                    lnum++;\n                    if (!lines[lnum])\n                        throw new Error(MSG_PREMATURE);\n                    if (!lines[lnum].startsWith(':'))\n                        break;\n                    buff += '\\n' + lines[lnum].substring(1);\n                }\n                applyBondProperty(n, buff);\n            }\n        }\n        if (lines[lnum] != '!End')\n            throw new Error('Molecule end tag missing');\n        mol.keepTransient = false;\n        return mol;\n    }\n    static readNativeLegacy(strData) {\n        let mol = new Molecule();\n        mol.keepTransient = true;\n        let lines = strData.split(/\\r?\\n/);\n        if (lines.length < 2)\n            return null;\n        if (!lines[0].startsWith('SketchEl!') && lines.length >= 4 && lines[3].indexOf('V2000') >= 0) {\n            let i = strData.indexOf('SketchEl!');\n            if (i < 0)\n                return null;\n            lines = strData.substring(i).split(/r?\\n/);\n        }\n        let hdr = lines[0].match(/^SketchEl\\!\\((\\d+)\\,(\\d+)\\)/);\n        if (!hdr)\n            return null;\n        let numAtoms = parseInt(hdr[1]), numBonds = parseInt(hdr[2]);\n        if (lines.length < 2 + numAtoms + numBonds)\n            return null;\n        if (!lines[1 + numAtoms + numBonds].match(/^!End/))\n            return null;\n        for (let n = 0; n < numAtoms; n++) {\n            let bits = lines[1 + n].split(/[=,;]/);\n            let num = mol.addAtom(MoleculeStream.skUnescape(bits[0]), parseFloat(bits[1]), parseFloat(bits[2]), parseInt(bits[3]), parseInt(bits[4]));\n            let extra = [], trans = [];\n            for (let i = 5; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'i') { }\n                else if (bits[i].charAt(0) == 'e')\n                    mol.setAtomHExplicit(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'm')\n                    mol.setAtomIsotope(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'n')\n                    mol.setAtomMapNum(num, parseInt(bits[i].substring(1)));\n                else if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'z') {\n                    mol.setAtomZ(num, parseFloat(bits[i].substring(1)));\n                    mol.setIs3D(true);\n                }\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setAtomExtra(num, extra);\n            mol.setAtomTransient(num, trans);\n        }\n        for (let n = 0; n < numBonds; n++) {\n            let bits = lines[1 + numAtoms + n].split(/[=,]/);\n            let frto = bits[0].split('-');\n            let bfr = parseInt(frto[0].trim()), bto = parseInt(frto[1].trim());\n            if (bfr == bto)\n                continue;\n            let num = mol.addBond(bfr, bto, parseInt(bits[1]), parseInt(bits[2]));\n            let extra = new Array(), trans = new Array();\n            for (let i = 3; i < bits.length; i++) {\n                let ch = bits[i].charAt(0);\n                if (bits[i].charAt(0) == 'x')\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n                else if (bits[i].charAt(0) == 'y')\n                    trans.push(MoleculeStream.skUnescape(bits[i]));\n                else\n                    extra.push(MoleculeStream.skUnescape(bits[i]));\n            }\n            mol.setBondExtra(num, extra);\n            mol.setBondTransient(num, trans);\n        }\n        mol.keepTransient = false;\n        return mol;\n    }\n    static writeNative(mol) {\n        if (!this.formatV2Elements)\n            return this.writeNativeLegacy(mol);\n        let bits = [`Elements!(${mol.numAtoms},${mol.numBonds})\\n`];\n        const roundedNumber = (v) => {\n            return (Math.round(v * 1E4) * 1E-4).toFixed(4);\n        };\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = roundedNumber(mol.atomX(n)), y = roundedNumber(mol.atomY(n));\n            bits.push(`${escape(el)}=${x},${y}`);\n            let keyvals = [];\n            if (mol.is3D())\n                keyvals.push(`z${roundedNumber(mol.atomZ(n))}`);\n            let chg = mol.atomCharge(n), unp = mol.atomUnpaired(n), hyd = mol.atomHExplicit(n), iso = mol.atomIsotope(n), map = mol.atomMapNum(n);\n            if (chg != 0)\n                keyvals.push(`c${chg}`);\n            if (unp != 0)\n                keyvals.push(`u${unp}`);\n            if (hyd != Molecule.HEXPLICIT_UNKNOWN)\n                keyvals.push(`h${hyd}`);\n            if (iso != Molecule.ISOTOPE_NATURAL)\n                keyvals.push(`i${iso}`);\n            if (map > 0)\n                keyvals.push(`m${map}`);\n            keyvals.push(...mol.atomExtra(n));\n            keyvals.push(...mol.atomTransient(n));\n            bits.push(writeKeyVals(keyvals));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n), order = mol.bondOrder(n);\n            bits.push(`${bfr}-${bto}=${order}`);\n            let keyvals = [];\n            let typ = mol.bondType(n);\n            if (typ == Molecule.BONDTYPE_INCLINED)\n                keyvals.push('i');\n            else if (typ == Molecule.BONDTYPE_DECLINED)\n                keyvals.push('d');\n            else if (typ == Molecule.BONDTYPE_UNKNOWN)\n                keyvals.push('u');\n            keyvals.push(...mol.bondExtra(n));\n            keyvals.push(...mol.bondTransient(n));\n            bits.push(writeKeyVals(keyvals));\n        }\n        bits.push('!End\\n');\n        return bits.join('');\n    }\n    static writeNativeLegacy(mol) {\n        let ret = 'SketchEl!(' + mol.numAtoms + ',' + mol.numBonds + ')\\n';\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let el = mol.atomElement(n), x = mol.atomX(n), y = mol.atomY(n), charge = mol.atomCharge(n), unpaired = mol.atomUnpaired(n);\n            let hy = mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN ? ('e' + mol.atomHExplicit(n)) : ('i' + mol.atomHydrogens(n));\n            ret += MoleculeStream.skEscape(el) + '=' + x.toFixed(4) + ',' + y.toFixed(4) + ';' + charge + ',' + unpaired + ',' + hy;\n            if (mol.is3D())\n                ret += ',z' + mol.atomZ(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                ret += ',m' + mol.atomIsotope(n);\n            if (mol.atomMapNum(n) > 0)\n                ret += ',n' + mol.atomMapNum(n);\n            ret += MoleculeStream.skEncodeExtra(mol.atomExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.atomTransient(n));\n            ret += '\\n';\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            ret += mol.bondFrom(n) + '-' + mol.bondTo(n) + '=' + mol.bondOrder(n) + ',' + mol.bondType(n);\n            ret += MoleculeStream.skEncodeExtra(mol.bondExtra(n));\n            ret += MoleculeStream.skEncodeExtra(mol.bondTransient(n));\n            ret += '\\n';\n        }\n        ret += '!End\\n';\n        return ret;\n    }\n    static readMDLMOL(strData) {\n        let src = new MDLMOLReader(strData);\n        src.parseHeader = true;\n        src.parse();\n        return src.mol;\n    }\n    static writeMDLMOL(mol) {\n        return new MDLMOLWriter(mol).write();\n    }\n    static skUnescape(str) {\n        let ret = '', match;\n        while (match = str.match(/^(.*?)\\\\([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])(.*)/)) {\n            ret += match[1] + String.fromCharCode(parseInt('0x' + match[2]));\n            str = match[3];\n        }\n        return ret + str;\n    }\n    static skEscape(str) {\n        let ret = '';\n        for (let n = 0; n < str.length; n++) {\n            let ch = str.charAt(n), code = str.charCodeAt(n);\n            if (code <= 32 || code > 127 || ch == '\\\\' || ch == ',' || ch == ';' || ch == '=') {\n                let hex = (code & 0xFFFF).toString(16).toUpperCase();\n                ret += '\\\\';\n                for (let i = 4 - hex.length; i > 0; i--)\n                    ret += '0';\n                ret += hex;\n            }\n            else\n                ret += ch;\n        }\n        return ret;\n    }\n    static skEncodeExtra(extra) {\n        let ret = '';\n        for (let n = 0; n < extra.length; n++)\n            ret += ',' + MoleculeStream.skEscape(extra[n]);\n        return ret;\n    }\n}\nMoleculeStream.formatV2Elements = false;\nexport { MoleculeStream };\n//# sourceMappingURL=MoleculeStream.js.map","import { Box } from '../util/Geom';\nimport { deepClone } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { MoleculeStream } from '../io/MoleculeStream';\nexport class Atom {\n}\nexport class Bond {\n}\nclass Molecule {\n    constructor() {\n        this.atoms = [];\n        this.bonds = [];\n        this.hasZCoord = false;\n        this.keepTransient = false;\n        this.hasTransient = false;\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    clone() {\n        let dup = new Molecule();\n        dup.atoms = deepClone(this.atoms);\n        dup.bonds = deepClone(this.bonds);\n        dup.hasZCoord = this.hasZCoord;\n        dup.keepTransient = this.keepTransient;\n        dup.hasTransient = this.hasTransient;\n        dup.graph = this.graph;\n        dup.graphBond = this.graphBond;\n        dup.ringID = this.ringID;\n        dup.compID = this.compID;\n        dup.ring3 = this.ring3;\n        dup.ring4 = this.ring4;\n        dup.ring5 = this.ring5;\n        dup.ring6 = this.ring6;\n        dup.ring7 = this.ring7;\n        return dup;\n    }\n    static fromString(strData) { return MoleculeStream.readNative(strData); }\n    toString() { return MoleculeStream.writeNative(this); }\n    append(frag) {\n        let base = this.atoms.length;\n        for (let n = 1; n <= frag.numAtoms; n++) {\n            let num = this.addAtom(frag.atomElement(n), frag.atomX(n), frag.atomY(n), frag.atomCharge(n), frag.atomUnpaired(n));\n            this.setAtomIsotope(num, frag.atomIsotope(n));\n            this.setAtomHExplicit(num, frag.atomHExplicit(n));\n            this.setAtomMapNum(num, frag.atomMapNum(n));\n            this.setAtomExtra(num, frag.atomExtra(n));\n            this.setAtomTransient(num, frag.atomTransient(n));\n        }\n        for (let n = 1; n <= frag.numBonds; n++) {\n            let num = this.addBond(frag.bondFrom(n) + base, frag.bondTo(n) + base, frag.bondOrder(n), frag.bondType(n));\n            this.setBondExtra(num, frag.bondExtra(n));\n            this.setBondTransient(num, frag.bondTransient(n));\n        }\n        this.trashTransient();\n    }\n    get numAtoms() { return this.atoms.length; }\n    getAtom(idx) {\n        if (idx < 1 || idx > this.atoms.length)\n            throw new Error(`Molecule.getAtom: index ${idx} out of range (#atoms=${this.atoms.length})`);\n        return this.atoms[idx - 1];\n    }\n    atomElement(idx) { return this.getAtom(idx).element; }\n    atomX(idx) { return this.getAtom(idx).x; }\n    atomY(idx) { return this.getAtom(idx).y; }\n    atomCharge(idx) { return this.getAtom(idx).charge; }\n    atomUnpaired(idx) { return this.getAtom(idx).unpaired; }\n    atomIsotope(idx) { return this.getAtom(idx).isotope; }\n    atomHExplicit(idx) { return this.getAtom(idx).hExplicit; }\n    atomMapNum(idx) { return this.getAtom(idx).mapNum; }\n    atomExtra(idx) { return this.getAtom(idx).extra.slice(0); }\n    atomTransient(idx) { return this.getAtom(idx).transient.slice(0); }\n    get numBonds() { return this.bonds.length; }\n    getBond(idx) {\n        if (idx < 1 || idx > this.bonds.length)\n            throw new Error(`Molecule.getBond: index ${idx} out of range (#bonds=${this.bonds.length})`);\n        return this.bonds[idx - 1];\n    }\n    bondFrom(idx) { return this.getBond(idx).from; }\n    bondTo(idx) { return this.getBond(idx).to; }\n    bondOrder(idx) { return this.getBond(idx).order; }\n    bondType(idx) { return this.getBond(idx).type; }\n    bondExtra(idx) { return this.getBond(idx).extra.slice(0); }\n    bondTransient(idx) { return this.getBond(idx).transient.slice(0); }\n    bondFromTo(idx) { let b = this.getBond(idx); return [b.from, b.to]; }\n    addAtom(element, x, y, charge = 0, unpaired = 0) {\n        let a = new Atom();\n        a.element = element;\n        a.x = x;\n        a.y = y;\n        a.charge = charge;\n        a.unpaired = unpaired;\n        a.isotope = Molecule.ISOTOPE_NATURAL;\n        a.hExplicit = Molecule.HEXPLICIT_UNKNOWN;\n        a.mapNum = 0;\n        a.extra = [];\n        a.transient = [];\n        this.atoms.push(a);\n        this.trashTransient();\n        this.trashGraph();\n        return this.atoms.length;\n    }\n    setAtomElement(idx, element) {\n        this.getAtom(idx).element = element;\n        this.trashTransient();\n    }\n    setAtomPos(idx, x, y, z) {\n        let a = this.getAtom(idx);\n        a.x = x;\n        a.y = y;\n        a.z = z == null ? 0 : z;\n        this.trashTransient();\n    }\n    setAtomX(idx, x) {\n        this.getAtom(idx).x = x;\n        this.trashTransient();\n    }\n    setAtomY(idx, y) {\n        this.getAtom(idx).y = y;\n        this.trashTransient();\n    }\n    setAtomCharge(idx, charge) {\n        this.getAtom(idx).charge = charge;\n        this.trashTransient();\n    }\n    setAtomUnpaired(idx, unpaired) {\n        this.getAtom(idx).unpaired = unpaired;\n        this.trashTransient();\n    }\n    setAtomIsotope(idx, isotope) {\n        this.getAtom(idx).isotope = isotope;\n        this.trashTransient();\n    }\n    setAtomHExplicit(idx, hExplicit) {\n        this.getAtom(idx).hExplicit = hExplicit;\n        this.trashTransient();\n    }\n    setAtomMapNum(idx, mapNum) {\n        this.getAtom(idx).mapNum = mapNum;\n        this.trashTransient();\n    }\n    setAtomExtra(idx, extra) {\n        this.getAtom(idx).extra = extra.slice(0);\n    }\n    setAtomTransient(idx, transi) {\n        this.getAtom(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    swapAtoms(a1, a2) {\n        let a = this.atoms[a1 - 1];\n        this.atoms[a1 - 1] = this.atoms[a2 - 1];\n        this.atoms[a2 - 1] = a;\n        for (let n = 0; n < this.bonds.length; n++) {\n            let b = this.bonds[n];\n            if (b.from == a2)\n                b.from = a1;\n            else if (b.from == a1)\n                b.from = a2;\n            if (b.to == a2)\n                b.to = a1;\n            else if (b.to == a1)\n                b.to = a2;\n        }\n        this.trashGraph();\n    }\n    addBond(from, to, order, type = Molecule.BONDTYPE_NORMAL) {\n        let b = new Bond();\n        b.from = from;\n        b.to = to;\n        b.order = order;\n        b.type = type;\n        b.extra = [];\n        b.transient = [];\n        this.bonds.push(b);\n        this.trashTransient();\n        this.trashGraph();\n        return this.bonds.length;\n    }\n    setBondFrom(idx, bfr) {\n        this.getBond(idx).from = bfr;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondTo(idx, to) {\n        this.getBond(idx).to = to;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondFromTo(idx, bfr, bto) {\n        this.getBond(idx).from = bfr;\n        this.getBond(idx).to = bto;\n        this.trashTransient();\n        this.trashGraph();\n    }\n    setBondOrder(idx, order) {\n        this.getBond(idx).order = order;\n        this.trashTransient();\n    }\n    setBondType(idx, type) {\n        this.getBond(idx).type = type;\n        this.trashTransient();\n    }\n    setBondExtra(idx, extra) {\n        this.getBond(idx).extra = extra.slice(0);\n    }\n    setBondTransient(idx, transi) {\n        this.getBond(idx).transient = transi.slice(0);\n        if (transi.length > 0)\n            this.hasTransient = true;\n    }\n    deleteAtomAndBonds(idx) {\n        for (let n = this.numBonds; n >= 1; n--) {\n            if (this.bondFrom(n) == idx || this.bondTo(n) == idx)\n                this.deleteBond(n);\n            else {\n                if (this.bondFrom(n) > idx)\n                    this.setBondFrom(n, this.bondFrom(n) - 1);\n                if (this.bondTo(n) > idx)\n                    this.setBondTo(n, this.bondTo(n) - 1);\n            }\n        }\n        this.atoms.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    deleteBond(idx) {\n        this.bonds.splice(idx - 1, 1);\n        this.trashTransient();\n        this.trashGraph();\n    }\n    atomHydrogens(idx) {\n        let hy = this.atomHExplicit(idx);\n        if (hy != Molecule.HEXPLICIT_UNKNOWN)\n            return hy;\n        for (let n = 0; n < Molecule.HYVALENCE_EL.length; n++)\n            if (Molecule.HYVALENCE_EL[n] == this.atomElement(idx)) {\n                hy = Molecule.HYVALENCE_VAL[n];\n                break;\n            }\n        if (hy == Molecule.HEXPLICIT_UNKNOWN)\n            return 0;\n        let ch = this.atomCharge(idx);\n        if (this.atomElement(idx) == 'C')\n            ch = -Math.abs(ch);\n        hy += ch - this.atomUnpaired(idx);\n        let adjBonds = this.atomAdjBonds(idx);\n        for (let n = 0; n < adjBonds.length; n++)\n            hy -= this.bondOrder(adjBonds[n]);\n        return hy < 0 ? 0 : hy;\n    }\n    findBond(a1, a2) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            let b1 = this.bondFrom(n), b2 = this.bondTo(n);\n            if ((a1 == b1 && a2 == b2) || (a1 == b2 && a2 == b1))\n                return n;\n        }\n        return 0;\n    }\n    bondOther(idx, ref) {\n        let b1 = this.bondFrom(idx), b2 = this.bondTo(idx);\n        if (b1 == ref)\n            return b2;\n        if (b2 == ref)\n            return b1;\n        return 0;\n    }\n    atomExplicit(idx) {\n        let a = this.atoms[idx - 1];\n        if (a.isotope != Molecule.ISOTOPE_NATURAL)\n            return true;\n        if (a.element != 'C' || a.charge != 0 || a.unpaired != 0)\n            return true;\n        if (this.atomAdjCount(idx) == 0)\n            return true;\n        return false;\n    }\n    atomRingBlock(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.ringID == null)\n            this.buildRingID();\n        return this.ringID[idx - 1];\n    }\n    bondInRing(idx) {\n        let r1 = this.atomRingBlock(this.bondFrom(idx)), r2 = this.atomRingBlock(this.bondTo(idx));\n        return r1 > 0 && r1 == r2;\n    }\n    atomConnComp(idx) {\n        if (this.graph == null)\n            this.buildGraph();\n        if (this.compID == null)\n            this.buildConnComp();\n        return this.compID[idx - 1];\n    }\n    atomAdjCount(idx) {\n        this.buildGraph();\n        return this.graph[idx - 1].length;\n    }\n    atomAdjList(idx) {\n        this.buildGraph();\n        let adj = this.graph[idx - 1].slice(0);\n        for (let n = adj.length - 1; n >= 0; n--)\n            adj[n]++;\n        return adj;\n    }\n    atomAdjBonds(idx) {\n        this.buildGraph();\n        return this.graphBond[idx - 1].slice(0);\n    }\n    findRingsOfSize(size) {\n        let rings = null;\n        if (size == 3 && this.ring3 != null)\n            rings = this.ring3;\n        if (size == 4 && this.ring4 != null)\n            rings = this.ring4;\n        if (size == 5 && this.ring5 != null)\n            rings = this.ring5;\n        if (size == 6 && this.ring6 != null)\n            rings = this.ring6;\n        if (size == 7 && this.ring7 != null)\n            rings = this.ring7;\n        if (rings == null) {\n            if (this.graph == null)\n                this.buildGraph();\n            if (this.ringID == null)\n                this.buildRingID();\n            rings = [];\n            for (let n = 1; n <= this.atoms.length; n++) {\n                if (this.ringID[n - 1] > 0) {\n                    let path = Vec.numberArray(0, size);\n                    path[0] = n;\n                    this.recursiveRingFind(path, 1, size, this.ringID[n - 1], rings);\n                }\n            }\n            if (size == 3)\n                this.ring3 = rings;\n            if (size == 4)\n                this.ring4 = rings;\n            if (size == 5)\n                this.ring5 = rings;\n            if (size == 6)\n                this.ring6 = rings;\n            if (size == 7)\n                this.ring7 = rings;\n        }\n        let ret = [];\n        for (let n = 0; n < rings.length; n++)\n            ret.push(rings[n].slice(0));\n        return ret;\n    }\n    boundary() {\n        if (this.atoms.length == 0)\n            return Box.zero();\n        let x1 = this.atoms[0].x, x2 = x1;\n        let y1 = this.atoms[0].y, y2 = y1;\n        for (let n = 1; n < this.atoms.length; n++) {\n            x1 = Math.min(x1, this.atoms[n].x);\n            y1 = Math.min(y1, this.atoms[n].y);\n            x2 = Math.max(x2, this.atoms[n].x);\n            y2 = Math.max(y2, this.atoms[n].y);\n        }\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    atomicNumber(idx) {\n        return Molecule.elementAtomicNumber(this.atomElement(idx));\n    }\n    static elementAtomicNumber(element) {\n        return Math.max(0, Chemistry.ELEMENTS.indexOf(element));\n    }\n    is3D() { return this.hasZCoord; }\n    setIs3D(v) { this.hasZCoord = v; }\n    atomZ(idx) { return this.getAtom(idx).z; }\n    setAtomZ(idx, z) { this.getAtom(idx).z = z; }\n    compareTo(other) {\n        if (other == null || other.numAtoms == 0)\n            return this.numAtoms == 0 ? 0 : 1;\n        if (this.numAtoms < other.numAtoms)\n            return -1;\n        if (this.numAtoms > other.numAtoms)\n            return 1;\n        if (this.numBonds < other.numBonds)\n            return -1;\n        if (this.numBonds > other.numBonds)\n            return 1;\n        for (let n = 1; n <= this.numAtoms; n++) {\n            if (this.atomElement(n) < other.atomElement(n))\n                return -1;\n            if (this.atomElement(n) > other.atomElement(n))\n                return 1;\n            if (this.atomX(n) < other.atomX(n))\n                return -1;\n            if (this.atomX(n) > other.atomX(n))\n                return 1;\n            if (this.atomY(n) < other.atomY(n))\n                return -1;\n            if (this.atomY(n) > other.atomY(n))\n                return 1;\n            if (this.atomCharge(n) < other.atomCharge(n))\n                return -1;\n            if (this.atomCharge(n) > other.atomCharge(n))\n                return 1;\n            if (this.atomUnpaired(n) < other.atomUnpaired(n))\n                return -1;\n            if (this.atomUnpaired(n) > other.atomUnpaired(n))\n                return 1;\n            if (this.atomHExplicit(n) < other.atomHExplicit(n))\n                return -1;\n            if (this.atomHExplicit(n) > other.atomHExplicit(n))\n                return 1;\n            if (this.atomIsotope(n) < other.atomIsotope(n))\n                return -1;\n            if (this.atomIsotope(n) > other.atomIsotope(n))\n                return 1;\n            if (this.atomMapNum(n) < other.atomMapNum(n))\n                return -1;\n            if (this.atomMapNum(n) > other.atomMapNum(n))\n                return 1;\n            let tx1 = this.atomExtra(n).map((v) => v.trimEnd()), tx2 = other.atomExtra(n).map((v) => v.trimEnd());\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.atomTransient(n).map((v) => v.trimEnd());\n            tx2 = other.atomTransient(n).map((v) => v.trimEnd());\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        for (let n = 1; n <= this.numBonds; n++) {\n            if (this.bondFrom(n) < other.bondFrom(n))\n                return -1;\n            if (this.bondFrom(n) > other.bondFrom(n))\n                return 1;\n            if (this.bondTo(n) < other.bondTo(n))\n                return -1;\n            if (this.bondTo(n) > other.bondTo(n))\n                return 1;\n            if (this.bondOrder(n) < other.bondOrder(n))\n                return -1;\n            if (this.bondOrder(n) > other.bondOrder(n))\n                return 1;\n            if (this.bondType(n) < other.bondType(n))\n                return -1;\n            if (this.bondType(n) > other.bondType(n))\n                return 1;\n            let tx1 = this.bondExtra(n), tx2 = other.bondExtra(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n            tx1 = this.bondTransient(n);\n            tx2 = other.bondTransient(n);\n            if (tx1.length < tx2.length)\n                return -1;\n            if (tx1.length > tx2.length)\n                return 1;\n            for (let i = 0; i < tx1.length; i++)\n                if (tx1[i] < tx2[i])\n                    return -1;\n                else if (tx1[i] > tx2[i])\n                    return 1;\n        }\n        return 0;\n    }\n    trashTransient() {\n        if (this.keepTransient || !this.hasTransient)\n            return;\n        for (let a of this.atoms)\n            a.transient = [];\n        for (let b of this.bonds)\n            b.transient = [];\n        this.hasTransient = false;\n    }\n    appendAtomExtra(atom, extra) {\n        this.getAtom(atom).extra.push(extra);\n    }\n    appendAtomTransient(atom, trans) {\n        this.getAtom(atom).transient.push(trans);\n    }\n    appendBondExtra(bond, extra) {\n        this.getBond(bond).extra.push(extra);\n    }\n    appendBondTransient(bond, trans) {\n        this.getBond(bond).transient.push(trans);\n    }\n    getAtomCloned(idx) { return deepClone(this.getAtom(idx)); }\n    getBondCloned(idx) { return deepClone(this.getBond(idx)); }\n    setAtom(idx, atom) {\n        if (!atom)\n            return;\n        let curr = this.getAtom(idx);\n        if (atom.element != curr.element)\n            this.setAtomElement(idx, atom.element);\n        if (atom.x != curr.x)\n            this.setAtomX(idx, atom.x);\n        if (atom.y != curr.y)\n            this.setAtomY(idx, atom.y);\n        if (atom.z != curr.z)\n            this.setAtomZ(idx, atom.z);\n        if (atom.charge != curr.charge)\n            this.setAtomCharge(idx, atom.charge);\n        if (atom.unpaired != curr.unpaired)\n            this.setAtomUnpaired(idx, atom.unpaired);\n        if (atom.isotope != curr.isotope)\n            this.setAtomIsotope(idx, atom.isotope);\n        if (atom.hExplicit != curr.hExplicit)\n            this.setAtomHExplicit(idx, atom.hExplicit);\n        if (atom.mapNum != curr.mapNum)\n            this.setAtomMapNum(idx, atom.mapNum);\n        if (!Vec.equals(atom.extra, curr.extra))\n            this.setAtomExtra(idx, atom.extra);\n        if (!Vec.equals(atom.transient, curr.transient))\n            this.setAtomTransient(idx, atom.transient);\n    }\n    setBond(idx, bond) {\n        if (bond == null)\n            return;\n        let curr = this.getBond(idx);\n        if (bond.from != curr.from)\n            this.setBondFrom(idx, bond.from);\n        if (bond.to != curr.to)\n            this.setBondTo(idx, bond.to);\n        if (bond.order != curr.order)\n            this.setBondOrder(idx, bond.order);\n        if (bond.type != curr.type)\n            this.setBondType(idx, bond.type);\n        if (!Vec.equals(bond.extra, curr.extra))\n            this.setBondExtra(idx, bond.extra);\n        if (!Vec.equals(bond.transient, curr.transient))\n            this.setBondTransient(idx, bond.transient);\n    }\n    modifyAtoms(lambda) {\n        for (let n = 1; n <= this.numAtoms; n++) {\n            var mod = lambda(n, this.getAtomCloned(n));\n            if (mod != null)\n                this.setAtom(n, mod);\n        }\n    }\n    modifyAtomsIndices(atomIndices, lambda) {\n        for (let n of atomIndices) {\n            var mod = lambda(n, this.getAtomCloned(n));\n            if (mod != null)\n                this.setAtom(n, mod);\n        }\n    }\n    modifyBonds(lambda) {\n        for (let n = 1; n <= this.numBonds; n++) {\n            var mod = lambda(n, this.getBondCloned(n));\n            if (mod != null)\n                this.setBond(n, mod);\n        }\n    }\n    modifyBondsIndices(bondIndices, lambda) {\n        for (let n of bondIndices) {\n            var mod = lambda(n, this.getBondCloned(n));\n            if (mod != null)\n                this.setBond(n, mod);\n        }\n    }\n    findAtomMatch(lambda) {\n        for (let n = 1; n <= this.numAtoms; n++)\n            if (lambda(this.getAtom(n)))\n                return n;\n        return 0;\n    }\n    findBondMatch(lambda) {\n        for (let n = 1; n <= this.numBonds; n++)\n            if (lambda(this.getBond(n)))\n                return n;\n        return 0;\n    }\n    findAllAtoms(lambda) {\n        let indices = [];\n        for (let n = 1; n <= this.numAtoms; n++)\n            if (lambda(this.getAtom(n)))\n                indices.push(n);\n        return indices;\n    }\n    findAllBonds(lambda) {\n        let indices = [];\n        for (let n = 1; n <= this.numBonds; n++)\n            if (lambda(this.getBond(n)))\n                indices.push(n);\n        return indices;\n    }\n    mapAtoms(lambda) {\n        let ret = new Array(this.numAtoms);\n        for (let n = 1; n <= this.numAtoms; n++)\n            ret[n - 1] = lambda(this.getAtom(n));\n        return ret;\n    }\n    mapBonds(lambda) {\n        let ret = new Array(this.numBonds);\n        for (let n = 1; n <= this.numBonds; n++)\n            ret[n - 1] = lambda(this.getBond(n));\n        return ret;\n    }\n    mapAtomsIndices(atomIndices, lambda) {\n        let ret = new Array(atomIndices.length);\n        let pos = 0;\n        for (let n of atomIndices)\n            ret[pos++] = lambda(this.getAtom(n));\n        return ret;\n    }\n    mapBondsIndices(bondIndices, lambda) {\n        let ret = new Array(bondIndices.length);\n        let pos = 0;\n        for (let n of bondIndices)\n            ret[pos++] = lambda(this.getBond(n));\n        return ret;\n    }\n    trashGraph() {\n        this.graph = null;\n        this.graphBond = null;\n        this.ringID = null;\n        this.compID = null;\n        this.ring3 = null;\n        this.ring4 = null;\n        this.ring5 = null;\n        this.ring6 = null;\n        this.ring7 = null;\n    }\n    buildGraph() {\n        if (this.graph != null && this.graphBond != null)\n            return;\n        let graph = [], graphBond = [];\n        let na = this.numAtoms, nb = this.numBonds;\n        for (let n = 0; n < na; n++) {\n            graph.push([]);\n            graphBond.push([]);\n        }\n        for (let n = 1; n <= nb; n++) {\n            let b = this.getBond(n);\n            graph[b.from - 1].push(b.to - 1);\n            graph[b.to - 1].push(b.from - 1);\n            graphBond[b.from - 1].push(n);\n            graphBond[b.to - 1].push(n);\n        }\n        this.graph = graph;\n        this.graphBond = graphBond;\n    }\n    buildConnComp() {\n        const numAtoms = this.atoms.length;\n        this.compID = Vec.numberArray(0, numAtoms);\n        for (let n = 0; n < numAtoms; n++)\n            this.compID[n] = 0;\n        let comp = 1;\n        this.compID[0] = comp;\n        while (true) {\n            let anything = false;\n            for (let n = 0; n < numAtoms; n++)\n                if (this.compID[n] == comp) {\n                    for (let i = 0; i < this.graph[n].length; i++) {\n                        if (this.compID[this.graph[n][i]] == 0) {\n                            this.compID[this.graph[n][i]] = comp;\n                            anything = true;\n                        }\n                    }\n                }\n            if (!anything) {\n                for (let n = 0; n < numAtoms; n++) {\n                    if (this.compID[n] == 0) {\n                        this.compID[n] = ++comp;\n                        anything = true;\n                        break;\n                    }\n                }\n                if (!anything)\n                    break;\n            }\n        }\n    }\n    buildRingID() {\n        const numAtoms = this.atoms.length;\n        this.ringID = Vec.numberArray(0, numAtoms);\n        if (numAtoms == 0)\n            return;\n        let visited = Vec.booleanArray(false, numAtoms);\n        for (let n = 0; n < numAtoms; n++) {\n            this.ringID[n] = 0;\n            visited[n] = false;\n        }\n        let path = Vec.numberArray(0, numAtoms + 1), plen = 0, numVisited = 0;\n        while (true) {\n            let last, current;\n            if (plen == 0) {\n                last = -1;\n                for (current = 0; visited[current]; current++) { }\n            }\n            else {\n                last = path[plen - 1];\n                current = -1;\n                for (let n = 0; n < this.graph[last].length; n++) {\n                    if (!visited[this.graph[last][n]]) {\n                        current = this.graph[last][n];\n                        break;\n                    }\n                }\n            }\n            if (current >= 0 && plen >= 2) {\n                let back = path[plen - 1];\n                for (let n = 0; n < this.graph[current].length; n++) {\n                    let join = this.graph[current][n];\n                    if (join != back && visited[join]) {\n                        path[plen] = current;\n                        for (let i = plen; i == plen || path[i + 1] != join; i--) {\n                            let id = this.ringID[path[i]];\n                            if (id == 0)\n                                this.ringID[path[i]] = last;\n                            else if (id != last) {\n                                for (let j = 0; j < numAtoms; j++)\n                                    if (this.ringID[j] == id)\n                                        this.ringID[j] = last;\n                            }\n                        }\n                    }\n                }\n            }\n            if (current >= 0) {\n                visited[current] = true;\n                path[plen++] = current;\n                numVisited++;\n            }\n            else {\n                plen--;\n            }\n            if (numVisited == numAtoms)\n                break;\n        }\n        let nextID = 0;\n        for (let i = 0; i < numAtoms; i++) {\n            if (this.ringID[i] > 0) {\n                nextID--;\n                for (let j = numAtoms - 1; j >= i; j--)\n                    if (this.ringID[j] == this.ringID[i])\n                        this.ringID[j] = nextID;\n            }\n        }\n        for (let i = 0; i < numAtoms; i++)\n            this.ringID[i] = -this.ringID[i];\n    }\n    recursiveRingFind(path, psize, capacity, rblk, rings) {\n        const { graph } = this;\n        if (psize < capacity) {\n            let last = path[psize - 1];\n            for (let n = 0; n < graph[last - 1].length; n++) {\n                let adj = graph[last - 1][n] + 1;\n                if (this.ringID[adj - 1] != rblk)\n                    continue;\n                let fnd = false;\n                for (let i = 0; i < psize; i++) {\n                    if (path[i] == adj) {\n                        fnd = true;\n                        break;\n                    }\n                }\n                if (!fnd) {\n                    let newPath = path.slice(0);\n                    newPath[psize] = adj;\n                    this.recursiveRingFind(newPath, psize + 1, capacity, rblk, rings);\n                }\n            }\n            return;\n        }\n        let last = path[psize - 1];\n        let fnd = false;\n        for (let n = 0; n < graph[last - 1].length; n++) {\n            if (graph[last - 1][n] + 1 == path[0]) {\n                fnd = true;\n                break;\n            }\n        }\n        if (!fnd)\n            return;\n        for (let n = 0; n < path.length; n++) {\n            let count = 0, p = path[n] - 1;\n            for (let i = 0; i < graph[p].length; i++)\n                if (path.indexOf(graph[p][i] + 1) >= 0)\n                    count++;\n            if (count != 2)\n                return;\n        }\n        let first = 0;\n        for (let n = 1; n < psize; n++)\n            if (path[n] < path[first])\n                first = n;\n        let fm = (first - 1 + psize) % psize, fp = (first + 1) % psize;\n        let flip = path[fm] < path[fp];\n        if (first != 0 || flip) {\n            let newPath = Vec.numberArray(0, psize);\n            for (let n = 0; n < psize; n++)\n                newPath[n] = path[(first + (flip ? psize - n : n)) % psize];\n            path = newPath;\n        }\n        for (let n = 0; n < rings.length; n++) {\n            let look = rings[n];\n            let same = true;\n            for (let i = 0; i < psize; i++) {\n                if (look[i] != path[i]) {\n                    same = false;\n                    break;\n                }\n            }\n            if (same)\n                return;\n        }\n        rings.push(path);\n    }\n}\nMolecule.IDEALBOND = 1.5;\nMolecule.HEXPLICIT_UNKNOWN = -1;\nMolecule.ISOTOPE_NATURAL = 0;\nMolecule.BONDTYPE_NORMAL = 0;\nMolecule.BONDTYPE_INCLINED = 1;\nMolecule.BONDTYPE_DECLINED = 2;\nMolecule.BONDTYPE_UNKNOWN = 3;\nMolecule.HYVALENCE_EL = ['C', 'N', 'O', 'S', 'P'];\nMolecule.HYVALENCE_VAL = [4, 3, 2, 2, 3];\nMolecule.PREFIX_EXTRA = 'x';\nMolecule.PREFIX_TRANSIENT = 'y';\nexport { Molecule };\n//# sourceMappingURL=Molecule.js.map","import { angleDiff, angleNorm, DEGRAD, norm2_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nclass CoordUtil {\n    static atomAtPoint(mol, x, y, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.OVERLAP_THRESHOLD;\n        const tolsq = tolerance * tolerance;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return n;\n        return 0;\n    }\n    static sketchEquivalent(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        const na = mol1.numAtoms, nb = mol1.numBonds;\n        if (na != mol2.numAtoms || nb != mol2.numBonds)\n            return false;\n        const tolsq = tolerance * tolerance;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        if (Math.abs(box1.minX() - box2.minX()) > tolerance)\n            return false;\n        if (Math.abs(box1.minY() - box2.minY()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxX() - box2.maxX()) > tolerance)\n            return false;\n        if (Math.abs(box1.maxY() - box2.maxY()) > tolerance)\n            return false;\n        let mx1 = MolUtil.arrayAtomX(mol1), my1 = MolUtil.arrayAtomY(mol1);\n        let mx2 = MolUtil.arrayAtomX(mol2), my2 = MolUtil.arrayAtomY(mol2);\n        let map = Vec.numberArray(0, na);\n        let mask = Vec.booleanArray(false, na);\n        for (let i = 0; i < na; i++) {\n            let j = -1;\n            if (norm2_xy(mx1[i] - mx2[i], my1[i] - my2[i]) < tolsq)\n                j = i;\n            if (j < 0) {\n                let bestdsq = Number.MAX_VALUE;\n                for (let n = 0; n < na; n++)\n                    if (!mask[n]) {\n                        let dsq = norm2_xy(mx1[i] - mx2[n], my1[i] - my2[n]);\n                        if (dsq < bestdsq) {\n                            bestdsq = dsq;\n                            j = n;\n                        }\n                    }\n                if (j < 0 || bestdsq > tolsq)\n                    return false;\n            }\n            map[i] = j + 1;\n            mask[j] = true;\n            if (mol1.atomElement(i + 1) != mol2.atomElement(j + 1))\n                return false;\n            if (mol1.atomCharge(i + 1) != mol2.atomCharge(j + 1))\n                return false;\n            if (mol1.atomUnpaired(i + 1) != mol2.atomUnpaired(j + 1))\n                return false;\n            if (mol1.atomHExplicit(i + 1) != mol2.atomHExplicit(j + 1) &&\n                mol1.atomHExplicit(i + 1) != Molecule.HEXPLICIT_UNKNOWN &&\n                mol2.atomHExplicit(j + 1) != Molecule.HEXPLICIT_UNKNOWN)\n                return false;\n        }\n        for (let i = 1; i <= nb; i++) {\n            let i1 = mol1.bondFrom(i), i2 = mol1.bondTo(i), j1 = map[i1 - 1], j2 = map[i2 - 1];\n            let j = mol2.findBond(j1, j2);\n            if (j == 0)\n                return false;\n            if (mol1.bondOrder(i) != mol2.bondOrder(j) || mol1.bondType(i) != mol2.bondType(j))\n                return false;\n            if (mol2.bondFrom(j) == j1 && mol2.bondTo(j) == j2) { }\n            else if (mol2.bondType(j) != Molecule.BONDTYPE_INCLINED &&\n                mol2.bondType(j) != Molecule.BONDTYPE_DECLINED &&\n                mol2.bondFrom(j) == j2 && mol2.bondTo(j) == j1) { }\n            else\n                return false;\n        }\n        return true;\n    }\n    static sketchMappable(mol1, mol2, tolerance) {\n        if (tolerance == null)\n            tolerance = CoordUtil.DEFAULT_EQUIV_TOLERANCE;\n        let box1 = mol1.boundary(), box2 = mol2.boundary();\n        let dx = box1.minX() - box2.minX(), dy = box1.minY() - box2.minY();\n        if (Math.abs(dx) > tolerance * 0.1 || Math.abs(dy) > tolerance * 0.1) {\n            mol2 = mol2.clone();\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomPos(n, mol2.atomX(n) + dx, mol2.atomY(n) + dy);\n        }\n        return CoordUtil.sketchEquivalent(mol1, mol2, tolerance);\n    }\n    static atomBondAngles(mol, atom, adj) {\n        if (adj == null)\n            adj = mol.atomAdjList(atom);\n        let bndang = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let a of adj)\n            bndang.push(Math.atan2(mol.atomY(a) - cy, mol.atomX(a) - cx));\n        return bndang;\n    }\n    static overlapsAtom(mol, x, y, tol) {\n        const tolsq = tol * tol;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y) < tolsq)\n                return true;\n        return false;\n    }\n    static overlappingAtomMask(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        const sz = mol.numAtoms;\n        let box = mol.boundary();\n        let p1, p2;\n        if (box.w > box.h) {\n            p1 = MolUtil.arrayAtomX(mol);\n            p2 = MolUtil.arrayAtomY(mol);\n        }\n        else {\n            p1 = MolUtil.arrayAtomY(mol);\n            p2 = MolUtil.arrayAtomX(mol);\n        }\n        let omask = Vec.booleanArray(false, sz);\n        let idx = Vec.idxSort(p1);\n        const threshSQ = thresh * thresh;\n        for (let i = 1; i < sz - 1; i++) {\n            for (let j = i - 1; j >= 0; j--) {\n                let d1 = p1[idx[i]] - p1[idx[j]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[i]] - p2[idx[j]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n            for (let j = i + 1; j < sz; j++) {\n                let d1 = p1[idx[j]] - p1[idx[i]];\n                if (d1 > thresh)\n                    break;\n                if (norm2_xy(d1, p2[idx[j]] - p2[idx[i]]) < threshSQ) {\n                    omask[idx[i]] = true;\n                    omask[idx[j]] = true;\n                }\n            }\n        }\n        return omask;\n    }\n    static overlappingAtomList(mol, thresh) {\n        if (thresh == null)\n            thresh = CoordUtil.OVERLAP_THRESHOLD;\n        return Vec.add(Vec.maskIdx(CoordUtil.overlappingAtomMask(mol, thresh)), 1);\n    }\n    static congestionPoint(mol, x, y, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++)\n            score += 1.0 / (approach + norm2_xy(mol.atomX(n) - x, mol.atomY(n) - y));\n        return score;\n    }\n    static congestionMolecule(mol, approach) {\n        if (approach == null)\n            approach = 1E-5;\n        let score = 0;\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 0; i < na - 1; i++)\n            for (let j = i + 1; j < na; j++)\n                score += 1.0 / (approach + norm2_xy(mx[i] - mx[j], my[i] - my[j]));\n        return score;\n    }\n    static translateMolecule(mol, ox, oy) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n    }\n    static rotateMolecule(mol, theta, cx, cy) {\n        if (cx == null || cy == null) {\n            let box = mol.boundary();\n            cx = box.midX();\n            cy = box.midY();\n        }\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n            mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n    }\n    static rotateBond(mol, centre, atom, theta) {\n        theta = angleNorm(theta);\n        if (Math.abs(theta) < 0.1 * DEGRAD)\n            return;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(centre - 1);\n        let cc = g.calculateComponents();\n        let cx = mol.atomX(centre), cy = mol.atomY(centre);\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (cc[n - 1] == cc[atom - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static rotateAtoms(mol, mask, cx, cy, theta) {\n        let cosTheta = Math.cos(theta), sinTheta = Math.sin(theta);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let x = mol.atomX(n) - cx, y = mol.atomY(n) - cy;\n                mol.setAtomPos(n, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n            }\n    }\n    static angleNeighbours(mol, atom) {\n        let adj = mol.atomAdjList(atom);\n        if (adj.length <= 1)\n            return null;\n        let th = [];\n        for (let n = 0; n < adj.length; n++)\n            th.push(Math.atan2(mol.atomY(adj[n]) - mol.atomY(atom), mol.atomX(adj[n]) - mol.atomX(atom)));\n        if (adj.length == 2) {\n            if (angleDiff(th[1], th[0]) > 0)\n                return adj;\n            return [adj[1], adj[0]];\n        }\n        let idx = Vec.idxSort(th);\n        return Vec.idxGet(adj, idx);\n    }\n    static mergeAtoms(mol, oldN, newN) {\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == oldN)\n                mol.setBondFrom(n, newN);\n            if (mol.bondTo(n) == oldN)\n                mol.setBondTo(n, newN);\n        }\n        mol.deleteAtomAndBonds(oldN);\n    }\n    static normaliseBondDistances(mol) {\n        const nb = mol.numBonds;\n        if (nb == 0)\n            return;\n        let dsq = [];\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            dsq.push(norm2_xy(mol.atomX(bto) - mol.atomX(bfr), mol.atomY(bto) - mol.atomY(bfr)));\n        }\n        Vec.sort(dsq);\n        let median = (nb & 1) == 1 ? Math.sqrt(dsq[nb >> 1]) : 0.5 * (Math.sqrt(dsq[nb >> 1]) + Math.sqrt(dsq[(nb >> 1) - 1]));\n        if (median < 0.1 || (median > Molecule.IDEALBOND * 0.9 && median < Molecule.IDEALBOND * 1.1))\n            return;\n        let box = mol.boundary();\n        let cx = box.midX(), cy = box.midY();\n        let scale = Molecule.IDEALBOND / median;\n        for (let n = mol.numAtoms; n >= 1; n--) {\n            let x = (mol.atomX(n) - cx) * scale + cx;\n            let y = (mol.atomY(n) - cy) * scale + cy;\n            mol.setAtomPos(n, x, y);\n        }\n    }\n    static centreMolecule(mol) {\n        if (MolUtil.isBlank(mol))\n            return;\n        let x = MolUtil.arrayAtomX(mol), y = MolUtil.arrayAtomY(mol);\n        let sz = x.length;\n        let invsz = 1.0 / sz;\n        let meanX = Vec.sum(x) * invsz, meanY = Vec.sum(y) * invsz;\n        let closest = Number.POSITIVE_INFINITY;\n        let deltaX = 0, deltaY = 0;\n        for (let n = 0; n < sz; n++) {\n            let dsq = norm2_xy(x[n] - meanX, y[n] - meanY);\n            if (dsq < closest) {\n                deltaX = -x[n];\n                deltaY = -y[n];\n                closest = dsq;\n            }\n        }\n        for (let n = 0; n < sz; n++)\n            mol.setAtomPos(n + 1, x[n] + deltaX, y[n] + deltaY);\n    }\n    static mirrorImage(mol) {\n        mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            mol.setAtomX(n, -mol.atomX(n));\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_INCLINED);\n            else if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                mol.setBondType(n, Molecule.BONDTYPE_DECLINED);\n        }\n        return mol;\n    }\n    static alignOrientFlip(mol1, idx1, mol2, idx2) {\n        if (idx1.length < 2 || idx1.length != idx2.length)\n            throw 'Invalid mapping indices.';\n        let x0 = mol1.atomX(idx1[0]), y0 = mol1.atomY(idx1[0]);\n        CoordUtil.translateMolecule(mol2, x0 - mol2.atomX(idx2[0]), y0 - mol2.atomY(idx2[0]));\n        const sz = idx1.length - 1;\n        let th1 = [], th2 = [];\n        let deltaA = 0, deltaB = 0;\n        for (let n = 0; n < sz; n++) {\n            th1.push(Math.atan2(mol1.atomY(idx1[n + 1]) - y0, mol1.atomX(idx1[n + 1]) - x0));\n            th2.push(Math.atan2(mol2.atomY(idx2[n + 1]) - y0, mol2.atomX(idx2[n + 1]) - x0));\n            let dthA = angleDiff(th1[n], th2[n]), dthB = angleDiff(th1[n], -th2[n]);\n            if (dthA < -175 * DEGRAD && deltaA > 0)\n                dthA += TWOPI;\n            else if (dthA > 175 * DEGRAD && deltaA < 0)\n                dthA -= TWOPI;\n            if (dthB < -175 * DEGRAD && deltaB > 0)\n                dthB += TWOPI;\n            else if (dthB > 175 * DEGRAD && deltaB < 0)\n                dthB -= TWOPI;\n            deltaA += dthA;\n            deltaB += dthB;\n        }\n        if (sz > 1) {\n            let inv = 1.0 / sz;\n            deltaA *= inv;\n            deltaB *= inv;\n        }\n        let scoreA = 0, scoreB = 0;\n        for (let n = 0; n < sz; n++) {\n            scoreA += Math.abs(angleDiff(th1[n], th2[n] + deltaA));\n            scoreB += Math.abs(angleDiff(th1[n], -th2[n] + deltaB));\n        }\n        if (scoreB < scoreA) {\n            for (let n = 1; n <= mol2.numAtoms; n++)\n                mol2.setAtomY(n, 2 * y0 - mol2.atomY(n));\n            for (let n = 1; n <= mol2.numBonds; n++) {\n                if (mol2.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n                else if (mol2.bondType(n) == Molecule.BONDTYPE_INCLINED)\n                    mol2.setBondType(n, Molecule.BONDTYPE_DECLINED);\n            }\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaB);\n        }\n        else\n            CoordUtil.rotateMolecule(mol2, x0, y0, deltaA);\n    }\n    static atomIsWeirdLinear(mol, idx) {\n        let bonds = mol.atomAdjBonds(idx);\n        if (bonds.length != 2)\n            return false;\n        for (let n = 0; n < bonds.length; n++)\n            if (mol.bondOrder(bonds[n]) == 3)\n                return false;\n        let adj = mol.atomAdjList(idx);\n        let th1 = Math.atan2(mol.atomY(adj[0]) - mol.atomY(idx), mol.atomX(adj[0]) - mol.atomX(idx));\n        let th2 = Math.atan2(mol.atomY(adj[1]) - mol.atomY(idx), mol.atomX(adj[1]) - mol.atomX(idx));\n        return Math.abs(angleDiff(th1, th2)) >= 175 * DEGRAD;\n    }\n}\nCoordUtil.OVERLAP_THRESHOLD = 0.2;\nCoordUtil.OVERLAP_THRESHOLD_SQ = CoordUtil.OVERLAP_THRESHOLD * CoordUtil.OVERLAP_THRESHOLD;\nCoordUtil.DEFAULT_EQUIV_TOLERANCE = 0.2;\nexport { CoordUtil };\n//# sourceMappingURL=CoordUtil.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, angleNorm, DEGRAD, norm2_xy, norm_xy, sortAngles, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nexport var Geometry;\n(function (Geometry) {\n    Geometry[Geometry[\"Linear\"] = 0] = \"Linear\";\n    Geometry[Geometry[\"Bent\"] = 1] = \"Bent\";\n    Geometry[Geometry[\"Trigonal\"] = 2] = \"Trigonal\";\n    Geometry[Geometry[\"Tetra1\"] = 3] = \"Tetra1\";\n    Geometry[Geometry[\"Tetra2\"] = 4] = \"Tetra2\";\n    Geometry[Geometry[\"SqPlan\"] = 5] = \"SqPlan\";\n    Geometry[Geometry[\"BasePyram\"] = 6] = \"BasePyram\";\n    Geometry[Geometry[\"TrigBip\"] = 7] = \"TrigBip\";\n    Geometry[Geometry[\"Octa1\"] = 8] = \"Octa1\";\n    Geometry[Geometry[\"Octa2\"] = 9] = \"Octa2\";\n})(Geometry || (Geometry = {}));\nclass SketchUtil {\n    static placeNewAtom(mol, el) {\n        let box = mol.boundary();\n        let x = box.maxX() + Molecule.IDEALBOND, y = box.maxY();\n        return mol.addAtom(el, x, y);\n    }\n    static placeNewFragment(mol, frag) {\n        if (frag.numAtoms == 0)\n            return;\n        let dirX = [1, 0, -1, 1, -1, 1, 0, -1], dirY = [1, 1, 1, 0, 0, -1, -1, -1];\n        let dx = Vec.numberArray(0, 8), dy = Vec.numberArray(0, 8), score = Vec.numberArray(0, 8);\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        for (let n = 0; n < 8; n++) {\n            let vx = dirX[n], vy = dirY[n];\n            if (n == 0 || n == 3 || n == 5)\n                dx[n] = mbox.minX() - fbox.maxX();\n            else if (n == 2 || n == 4 || n == 7)\n                dx[n] = mbox.maxX() - fbox.minX();\n            else\n                dx[n] = 0.5 * (mbox.minX() + mbox.maxX() - fbox.minX() - fbox.maxX());\n            if (n == 5 || n == 6 || n == 7)\n                dy[n] = mbox.minY() - fbox.maxY();\n            else if (n == 0 || n == 1 || n == 2)\n                dy[n] = mbox.maxY() - fbox.minY();\n            else\n                dy[n] = 0.5 * (mbox.minY() + mbox.maxY() - fbox.minY() - fbox.maxY());\n            dx[n] -= vx;\n            dy[n] -= vy;\n            score[n] = SketchUtil.fragPosScore(mol, frag, dx[n], dy[n]);\n            vx *= 0.25;\n            vy *= 0.25;\n            for (let iter = 100; iter > 0; iter--) {\n                let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                if (iscore <= score[n])\n                    break;\n                score[n] = iscore;\n                dx[n] += vx;\n                dy[n] += vy;\n            }\n            for (let iter = 100; iter > 0; iter--)\n                for (let d = 0; d < 8; d++) {\n                    vx = dirX[d] * 0.1;\n                    vy = dirY[d] * 0.1;\n                    let iscore = SketchUtil.fragPosScore(mol, frag, dx[n] + vx, dy[n] + vy);\n                    if (iscore <= score[n])\n                        break;\n                    score[n] = iscore;\n                    dx[n] += vx;\n                    dy[n] += vy;\n                }\n        }\n        let best = 0;\n        for (let n = 1; n < 8; n++)\n            if (score[n] > score[best])\n                best = n;\n        frag = frag.clone();\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomPos(n, frag.atomX(n) + dx[best], frag.atomY(n) + dy[best]);\n        mol.append(frag);\n    }\n    static fragPosScore(mol, frag, dx, dy) {\n        let score = 0;\n        for (let i = 1; i <= mol.numAtoms; i++)\n            for (let j = 1; j <= frag.numAtoms; j++) {\n                let ox = frag.atomX(j) + dx - mol.atomX(i), oy = frag.atomY(j) + dy - mol.atomY(i);\n                let dist2 = ox * ox + oy * oy;\n                if (dist2 < 1)\n                    return 0;\n                score += 1 / dist2;\n            }\n        let mbox = mol.boundary(), fbox = frag.boundary();\n        let minX = Math.min(fbox.minX() + dx, mbox.minX()), maxX = Math.max(fbox.maxX() + dx, mbox.maxX());\n        let minY = Math.min(fbox.minY() + dy, mbox.minY()), maxY = Math.max(fbox.maxY() + dy, mbox.maxY());\n        let rangeX = Math.max(1, maxX - minX), rangeY = Math.max(1, maxY - minY);\n        let ratio = Math.max(rangeX / rangeY, rangeY / rangeX);\n        return score / ratio;\n    }\n    static mergeOverlappingAtoms(mol) {\n        return SketchUtil.mergeFragmentsDiv(mol, 0);\n    }\n    static mergeFragmentsDiv(mol, div) {\n        const na = mol.numAtoms;\n        let omask = CoordUtil.overlappingAtomMask(mol);\n        let chopmask = Vec.booleanArray(false, na);\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let remap = [];\n        for (let n = 0; n < na; n++)\n            remap.push(n + 1);\n        let div1 = div, div2 = div + 1;\n        if (div == 0)\n            div1 = na;\n        for (let i = 1; i <= div1; i++)\n            if (omask[i - 1] && !chopmask[i - 1]) {\n                if (div == 0)\n                    div2 = i + 1;\n                for (let j = div2; j <= na; j++)\n                    if (omask[j - 1] && !chopmask[j - 1]) {\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        let oldN = j, newN = i;\n                        let exotic = [0, 0];\n                        for (let k = 0; k < 2; k++) {\n                            let a = k == 0 ? i : j;\n                            exotic[k] = (mol.atomElement(a) == 'C' ? 0 : 1)\n                                + (mol.atomElement(a) == 'X' ? -100 : 0)\n                                + (mol.atomCharge(a) != 0 ? 1 : 0)\n                                + (mol.atomUnpaired(a) != 0 ? 1 : 0)\n                                + (mol.atomIsotope(a) != Molecule.ISOTOPE_NATURAL ? 1 : 0)\n                                + (mol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN ? 1 : 0)\n                                + (MolUtil.hasAbbrev(mol, a) ? 1000 : 0);\n                        }\n                        if (exotic[1] > exotic[0]) {\n                            oldN = i;\n                            newN = j;\n                        }\n                        for (let n = 1; n <= mol.numBonds; n++) {\n                            if (mol.bondFrom(n) == oldN)\n                                mol.setBondFrom(n, newN);\n                            if (mol.bondTo(n) == oldN)\n                                mol.setBondTo(n, newN);\n                        }\n                        chopmask[oldN - 1] = true;\n                        remap[oldN - 1] = newN;\n                    }\n            }\n        for (let n = na; n >= 1; n--)\n            if (chopmask[n - 1]) {\n                if (n <= div)\n                    div--;\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        for (let n = mol.numAtoms; n > div; n--)\n            if (mol.atomElement(n) == 'X') {\n                mol.deleteAtomAndBonds(n);\n                for (let i = 0; i < na; i++)\n                    if (remap[i] > n)\n                        remap[i]--;\n            }\n        MolUtil.removeDuplicateBonds(mol);\n        return remap;\n    }\n    static mergeFragmentsMask(mol, mask) {\n        let chopmask = Vec.booleanArray(false, mol.numAtoms);\n        let na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        for (let i = 1; i <= na; i++)\n            if (mask[i - 1])\n                for (let j = 1; j <= na; j++)\n                    if (!mask[j - 1] && !chopmask[j - 1])\n                        if (norm2_xy(mx[i - 1] - mx[j - 1], my[i - 1] - my[j - 1]) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                            let oldN = j, newN = i;\n                            if (mol.atomElement(i) == 'C' && mol.atomElement(j) != 'C' && mol.atomElement(j) != 'X')\n                                [oldN, newN] = [i, j];\n                            if (mol.atomHExplicit(newN) == Molecule.HEXPLICIT_UNKNOWN)\n                                mol.setAtomHExplicit(newN, mol.atomHExplicit(oldN));\n                            mol.setAtomUnpaired(newN, mol.atomUnpaired(newN) + mol.atomUnpaired(oldN));\n                            mol.setAtomCharge(newN, mol.atomCharge(newN) + mol.atomCharge(oldN));\n                            mol.setAtomExtra(newN, Vec.concat(mol.atomExtra(oldN), mol.atomExtra(newN)));\n                            for (let n = 1; n <= mol.numBonds; n++) {\n                                if (mol.bondFrom(n) == oldN)\n                                    mol.setBondFrom(n, newN);\n                                if (mol.bondTo(n) == oldN)\n                                    mol.setBondTo(n, newN);\n                            }\n                            chopmask[oldN - 1] = true;\n                        }\n        for (let n = chopmask.length; n >= 1; n--)\n            if (chopmask[n - 1])\n                mol.deleteAtomAndBonds(n);\n        MolUtil.removeDuplicateBonds(mol);\n    }\n    static matchAngleGeometry(geom, theta) {\n        if (theta.length <= 1)\n            return true;\n        let match = SketchUtil.GEOM_ANGLES[geom], mtheta = Vec.numberArray(0, theta.length);\n        let hit = Vec.booleanArray(false, match.length);\n        for (let n = 0; n < theta.length; n++)\n            for (let s = 1; s >= -1; s -= 2) {\n                for (let i = 0; i < theta.length; i++)\n                    mtheta[i] = (theta[i] - theta[0]) * s;\n                Vec.setTo(hit, false);\n                let gotall = true;\n                for (let i = 0; i < mtheta.length; i++) {\n                    let got = false;\n                    for (let j = 0; j < match.length; j++)\n                        if (!hit[j] && Math.abs(angleDiff(mtheta[i], match[j])) < 3 * DEGRAD) {\n                            hit[j] = true;\n                            got = true;\n                            break;\n                        }\n                    if (!got) {\n                        gotall = false;\n                        break;\n                    }\n                }\n                if (gotall)\n                    return true;\n            }\n        return false;\n    }\n    static primeDirections(mol, atom) {\n        let angles = SketchUtil.calculateNewBondAngles(mol, atom, 1);\n        let exits = SketchUtil.exitVectors(mol, atom);\n        return GeomUtil.uniqueAngles(angles.concat(exits), 2 * DEGRAD);\n    }\n    static exitVectors(mol, atom) {\n        let adj = mol.atomAdjList(atom), sz = adj.length;\n        if (sz == 0)\n            return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n        if (sz == 1)\n            return [];\n        let ret = [];\n        let ang = GeomUtil.sortAngles(CoordUtil.atomBondAngles(mol, atom, adj));\n        for (let n = 0; n < sz; n++) {\n            let nn = n < sz - 1 ? n + 1 : 0;\n            ret.push(angleNorm(ang[n] + 0.5 * angleDiffPos(ang[nn], ang[n])));\n        }\n        return ret;\n    }\n    static calculateNewBondAngles(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        const sz = adj.length;\n        if (sz == 0) {\n            let atno = mol.atomicNumber(atom), atblk = Chemistry.ELEMENT_BLOCKS[atno];\n            if (atblk <= 2)\n                return [0, 90 * DEGRAD, 180 * DEGRAD, -90 * DEGRAD];\n            else\n                return [90 * DEGRAD, -90 * DEGRAD, 30 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, -30 * DEGRAD, 180 * DEGRAD, 0 * DEGRAD];\n        }\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let n = 0; n < geom.length; n++) {\n            let ret = SketchUtil.mapAngleSubstituent(geom[n], ang);\n            if (ret != null)\n                return ret;\n        }\n        return [];\n    }\n    static guessAtomGeometry(mol, atom, order) {\n        let adj = mol.atomAdjList(atom);\n        let sz = adj.length, atno = mol.atomicNumber(atom);\n        let atblk = Chemistry.ELEMENT_BLOCKS[atno], elrow = Chemistry.ELEMENT_ROWS[atno];\n        let el = mol.atomElement(atom);\n        let adjBO = [], adjAN = [], pri = [];\n        let allSingle = true;\n        for (let n = 0; n < sz; n++) {\n            adjBO.push(mol.bondOrder(mol.findBond(atom, adj[n])));\n            adjAN.push(mol.atomicNumber(adj[n]));\n            pri.push(adjBO[n] * 200 + adjAN[n]);\n            if (adjBO[n] != 1)\n                allSingle = true;\n        }\n        for (let p = 0; p < sz - 1;) {\n            if (pri[p] > pri[p + 1]) {\n                Vec.swap(adj, p, p + 1);\n                Vec.swap(adjBO, p, p + 1);\n                Vec.swap(adjAN, p, p + 1);\n                Vec.swap(pri, p, p + 1);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        if (sz == 1) {\n            if (el == 'C' || el == 'N') {\n                if (adjBO[0] == 2 && order == 2)\n                    return [Geometry.Linear];\n                if ((adjBO[0] == 3 && order == 1) || (adjBO[0] == 1 && order == 3))\n                    return [Geometry.Linear];\n            }\n            if (atblk > 2)\n                return [Geometry.Octa1, Geometry.Octa2];\n            if (order != 0 && (el == 'C' || el == 'N' || el == 'O'))\n                return [Geometry.Trigonal];\n            return [Geometry.Trigonal, Geometry.Linear];\n        }\n        if (sz == 2 && Math.abs(angleDiff(ang[0], ang[1])) >= 175 * DEGRAD) {\n            if (atblk <= 2)\n                return [Geometry.SqPlan];\n            else\n                return [Geometry.Octa1, Geometry.Octa2];\n        }\n        let geom = [];\n        if (atblk == 0)\n            geom = [Geometry.Trigonal, Geometry.SqPlan];\n        else if (atblk == 1)\n            geom = [Geometry.Trigonal, Geometry.SqPlan, Geometry.Octa1, Geometry.Octa2];\n        else if (atblk == 2) {\n            geom.push(Geometry.Trigonal);\n            if (el == 'C' && allSingle) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else if (el == 'C' && !allSingle) {\n            }\n            else if (elrow <= 3) {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n            }\n            else {\n                geom.push(Geometry.Tetra1);\n                geom.push(Geometry.Tetra2);\n                geom.push(Geometry.SqPlan);\n                geom.push(Geometry.Octa1);\n                geom.push(Geometry.Octa2);\n            }\n        }\n        else {\n            geom.push(Geometry.Octa1);\n            geom.push(Geometry.Octa2);\n        }\n        for (let n = geom.length - 1; n >= 0; n--) {\n            if (!SketchUtil.matchAngleGeometry(geom[n], ang))\n                geom.splice(n, 1);\n        }\n        return geom;\n    }\n    static mapAngleSubstituent(geom, ang) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        const asz = ang.length, gsz = gtheta.length;\n        if (asz >= gsz)\n            return null;\n        if (asz == 0)\n            return gtheta.slice(0);\n        let vac = [];\n        for (let n = 0; n < asz; n++)\n            for (let k = 0; k < gsz; k++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let gang = [];\n                    for (let i = 0; i < gsz; i++)\n                        gang.push(angleNorm(ang[n] + s * (gtheta[i] - gtheta[k])));\n                    let mask = Vec.booleanArray(false, gsz);\n                    let mcount = 0;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            for (let j = 0; j < asz; j++)\n                                if (Math.abs(angleDiff(gang[i], ang[j])) < 3 * DEGRAD) {\n                                    mask[i] = true;\n                                    mcount++;\n                                    break;\n                                }\n                    if (mcount != asz)\n                        continue;\n                    for (let i = 0; i < gsz; i++)\n                        if (!mask[i])\n                            vac.push(gang[i]);\n                }\n        if (vac.length == 0)\n            return null;\n        vac = GeomUtil.sortAngles(vac);\n        for (let n = 0; n < vac.length - 1; n++) {\n            let th1 = vac[n], th2 = vac[n + 1], dth = angleDiff(th2, th1);\n            if (Math.abs(dth) < 5 * DEGRAD) {\n                vac[n] = th1 + 0.5 * dth;\n                vac.splice(n + 1, 1);\n                n--;\n            }\n        }\n        return vac;\n    }\n    static refitAtomGeometry(mol, atom, geom) {\n        let gtheta = SketchUtil.GEOM_ANGLES[geom];\n        let gsz = gtheta.length;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length;\n        if (asz <= 1 || asz > gsz)\n            return null;\n        let ang = CoordUtil.atomBondAngles(mol, atom, adj);\n        let inRing = Vec.booleanArray(false, asz);\n        let allInRing = true;\n        for (let n = 0; n < asz; n++) {\n            inRing[n] = mol.bondInRing(mol.findBond(atom, adj[n]));\n            if (!inRing[n])\n                allInRing = false;\n        }\n        if (allInRing)\n            return null;\n        let bestAng = null;\n        let bestScore = 0;\n        let ww = MolUtil.calculateWalkWeight(mol, atom);\n        for (let i = 0; i < gsz; i++)\n            for (let j = 0; j < asz; j++)\n                for (let s = 1; s >= -1; s -= 2) {\n                    let newAng = Vec.numberArray(0, asz);\n                    let mask = Vec.booleanArray(false, gsz);\n                    for (let n1 = 0; n1 < asz; n1++) {\n                        let best = -1;\n                        let bdiff = 0;\n                        for (let n2 = 0; n2 < gsz; n2++)\n                            if (!mask[n2]) {\n                                let th = angleNorm(gtheta[n2] * s - gtheta[i] + ang[j]);\n                                let diff = Math.abs(angleDiff(th, ang[n1]));\n                                if (best < 0 || diff < bdiff) {\n                                    best = n2;\n                                    bdiff = diff;\n                                    newAng[n1] = th;\n                                }\n                            }\n                        mask[best] = true;\n                    }\n                    let ringClash = false;\n                    for (let n = 0; n < asz; n++)\n                        if (inRing[n] && Math.abs(angleDiff(newAng[n], ang[n])) > 2 * DEGRAD) {\n                            ringClash = true;\n                            break;\n                        }\n                    if (ringClash)\n                        continue;\n                    let score = 0;\n                    for (let n = 0; n < asz; n++)\n                        score += ww[adj[n] - 1] * Math.abs(angleDiff(newAng[n], ang[n]));\n                    if (bestAng == null || score < bestScore) {\n                        bestAng = newAng;\n                        bestScore = score;\n                    }\n                }\n        if (bestAng == null)\n            return null;\n        let same = true;\n        for (let n = 0; n < asz; n++)\n            if (Math.abs(angleDiff(bestAng[n], ang[n])) > 2 * DEGRAD) {\n                same = false;\n                break;\n            }\n        if (same)\n            return null;\n        mol = mol.clone();\n        for (let n = 0; n < asz; n++)\n            if (!inRing[n])\n                CoordUtil.rotateBond(mol, atom, adj[n], bestAng[n] - ang[n]);\n        return mol;\n    }\n    static switchAtomGeometry(mol, src, dst, geoms) {\n        let bestAtom = 0;\n        let bestAng = 0, bestX = 0, bestY = 0;\n        let adj = mol.atomAdjList(src);\n        let ang = CoordUtil.atomBondAngles(mol, src, adj), theta = Vec.numberArray(0, ang.length - 1);\n        let cx = mol.atomX(src), cy = mol.atomY(src);\n        for (let i = 0; i < dst.length; i++) {\n            let a = adj.indexOf(dst[i]);\n            let curth = ang[a];\n            for (let n = 0, p = 0; n < adj.length; n++)\n                if (n != a)\n                    theta[p++] = ang[n];\n            let r = norm_xy(mol.atomX(dst[i]) - cx, mol.atomY(dst[i]) - cy);\n            for (let j = 0; j < geoms.length; j++) {\n                if (adj.length >= SketchUtil.GEOM_ANGLES[geoms[j]].length)\n                    continue;\n                let newAng = SketchUtil.mapAngleSubstituent(geoms[j], theta);\n                if (newAng != null)\n                    for (let n = 0; n < newAng.length; n++) {\n                        let dth = angleDiff(newAng[n], curth);\n                        if (Math.abs(dth) < 3 * DEGRAD)\n                            continue;\n                        if (dth < 0)\n                            dth += TWOPI;\n                        if (bestAtom == 0 || dth < bestAng - 2 * DEGRAD || (dth < bestAng + 2 * DEGRAD && dst[i] < bestAtom)) {\n                            let x = cx + r * Math.cos(newAng[n]);\n                            let y = cy + r * Math.sin(newAng[n]);\n                            if (CoordUtil.atomAtPoint(mol, x, y) != 0)\n                                continue;\n                            bestAtom = dst[i];\n                            bestAng = dth;\n                            bestX = x;\n                            bestY = y;\n                        }\n                    }\n                break;\n            }\n        }\n        if (bestAtom == 0)\n            return null;\n        mol = mol.clone();\n        mol.setAtomPos(bestAtom, bestX, bestY);\n        return mol;\n    }\n    static pickAtomsToConnect(mol, aidx) {\n        if (aidx.length < 2)\n            return null;\n        if (aidx.length == 2) {\n            if (mol.findBond(aidx[0], aidx[1]) > 0)\n                return null;\n            return aidx;\n        }\n        const AUTO_DSQ = sqr(Molecule.IDEALBOND + 0.1);\n        let bestDSQ = Number.MAX_VALUE;\n        let bestA1 = 0, bestA2 = 0;\n        let conn = [];\n        for (let i = 0; i < aidx.length - 1; i++)\n            for (let j = i + 1; j < aidx.length; j++) {\n                if (mol.findBond(aidx[i], aidx[j]) > 0)\n                    continue;\n                let dsq = norm2_xy(mol.atomX(aidx[i]) - mol.atomX(aidx[j]), mol.atomY(aidx[i]) - mol.atomY(aidx[j]));\n                if (dsq < AUTO_DSQ) {\n                    conn.push(aidx[i]);\n                    conn.push(aidx[j]);\n                }\n                else if (dsq < bestDSQ) {\n                    bestDSQ = dsq;\n                    bestA1 = aidx[i];\n                    bestA2 = aidx[j];\n                }\n            }\n        if (conn.length == 0 && bestA1 != 0) {\n            conn.push(bestA1);\n            conn.push(bestA2);\n        }\n        return conn.length == 0 ? null : conn;\n    }\n    static pickNewAtomDirection(mol, atom, theta) {\n        if (theta.length == 1)\n            return theta[0];\n        let bestTheta = theta[0], bestScore = Number.MAX_VALUE;\n        for (let n = 0; n < theta.length; n++) {\n            let px = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta[n]);\n            let py = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta[n]);\n            let score = CoordUtil.congestionPoint(mol, px, py);\n            if (score > bestScore)\n                continue;\n            if (CoordUtil.overlapsAtom(mol, px, py, 0.2))\n                score += 1E5;\n            if (score < bestScore) {\n                bestTheta = theta[n];\n                bestScore = score;\n            }\n        }\n        return bestTheta;\n    }\n    static joinOverlappingAtoms(mol, mask) {\n        mol = mol.clone();\n        mask = mask.slice(0);\n        const na = mol.numAtoms;\n        let mx = MolUtil.arrayAtomX(mol), my = MolUtil.arrayAtomY(mol);\n        let groups = [];\n        let groupX = [], groupY = [];\n        for (let i = 0; i < na - 1; i++)\n            if (mask[i]) {\n                let g = [i + 1];\n                let x = mx[i], y = my[i];\n                for (let j = i + 1; j < na; j++)\n                    if (mask[j]) {\n                        if (norm2_xy(mx[j] - mx[i], my[j] - my[i]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                            continue;\n                        g.push(j + 1);\n                        x += mx[j];\n                        y += my[j];\n                        let adjb = mol.atomAdjBonds(j + 1);\n                        for (let n = 0; n < adjb.length; n++) {\n                            if (mol.bondFrom(adjb[n]) == j + 1)\n                                mol.setBondFrom(adjb[n], i + 1);\n                            else if (mol.bondTo(adjb[n]) == j + 1)\n                                mol.setBondTo(adjb[n], i + 1);\n                        }\n                    }\n                if (g.length == 1)\n                    continue;\n                groups.push(g);\n                groupX.push(x / g.length);\n                groupY.push(y / g.length);\n            }\n        if (groups.length == 0)\n            return null;\n        let keepmask = Vec.booleanArray(true, na);\n        for (let n = 0; n < groups.length; n++) {\n            let g = groups[n];\n            mol.setAtomPos(g[0], groupX[n], groupY[n]);\n            for (let i = 1; i < g.length; i++)\n                keepmask[g[i] - 1] = false;\n        }\n        mol = MolUtil.subgraphMask(mol, keepmask);\n        MolUtil.removeDuplicateBonds(mol);\n        return mol;\n    }\n    static moveToEdge(mol, mask, dx, dy) {\n        let gotS = false, gotN = false;\n        let sx1 = 0, sy1 = 0, sx2 = 0, sy2 = 0;\n        let nx1 = 0, ny1 = 0, nx2 = 0, ny2 = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let x = mol.atomX(n), y = mol.atomY(n);\n            if (mask[n - 1]) {\n                if (!gotS || x < sx1)\n                    sx1 = x;\n                if (!gotS || y < sy1)\n                    sy1 = y;\n                if (!gotS || x > sx2)\n                    sx2 = x;\n                if (!gotS || y > sy2)\n                    sy2 = y;\n                gotS = true;\n            }\n            else {\n                if (!gotN || x < nx1)\n                    nx1 = x;\n                if (!gotN || y < ny1)\n                    ny1 = y;\n                if (!gotN || x > nx2)\n                    nx2 = x;\n                if (!gotN || y > ny2)\n                    ny2 = y;\n                gotN = true;\n            }\n        }\n        const SEPARATE = 1.0, SEPTEST = 0.9;\n        if ((dx < 0 && dy == 0 && sx2 <= nx1 - SEPTEST) ||\n            (dx > 0 && dy == 0 && sx1 >= nx2 + SEPTEST) ||\n            (dx == 0 && dy < 0 && sy2 <= ny1 - SEPTEST) ||\n            (dx == 0 && dy > 0 && sy1 >= ny2 + SEPTEST)) {\n            return null;\n        }\n        mol = mol.clone();\n        let ox = 0, oy = 0;\n        if (dx < 0)\n            ox = nx1 - sx2 - SEPARATE;\n        if (dx > 0)\n            ox = nx2 - sx1 + SEPARATE;\n        if (dy < 0)\n            oy = ny1 - sy2 - SEPARATE;\n        if (dy > 0)\n            oy = ny2 - sy1 + SEPARATE;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1])\n                mol.setAtomPos(n, mol.atomX(n) + ox, mol.atomY(n) + oy);\n        return mol;\n    }\n    static placeAdditionalHydrogens(mol, atom, numH) {\n        let base = mol.numAtoms;\n        const x0 = mol.atomX(atom), y0 = mol.atomY(atom);\n        let adj = mol.atomAdjList(atom);\n        if (adj.length == 2 && numH == 2) {\n            const th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            const th2 = Math.atan2(mol.atomY(adj[1]) - y0, mol.atomX(adj[1]) - x0);\n            if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                let theta = 0.5 * (th1 + th2) + Math.PI;\n                let th3 = theta - 30 * DEGRAD, th4 = theta + 30 * DEGRAD;\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n                mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n                mol.addBond(atom, base + 1, 1);\n                mol.addBond(atom, base + 2, 1);\n                return;\n            }\n        }\n        if (adj.length == 1 && numH == 3) {\n            let th1 = Math.atan2(mol.atomY(adj[0]) - y0, mol.atomX(adj[0]) - x0);\n            let th2 = th1 + 90 * DEGRAD, th3 = th1 + 180 * DEGRAD, th4 = th1 + 270 * DEGRAD;\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th2), y0 + Molecule.IDEALBOND * Math.sin(th2));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th3), y0 + Molecule.IDEALBOND * Math.sin(th3));\n            mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(th4), y0 + Molecule.IDEALBOND * Math.sin(th4));\n            mol.addBond(atom, base + 1, 1);\n            mol.addBond(atom, base + 2, 1);\n            mol.addBond(atom, base + 3, 1);\n            return;\n        }\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, SketchUtil.primeDirections(mol, atom));\n        mol.addAtom('H', x0 + Molecule.IDEALBOND * Math.cos(theta), y0 + Molecule.IDEALBOND * Math.sin(theta));\n        mol.addBond(atom, base + 1, 1);\n        if (numH > 1)\n            SketchUtil.placeAdditionalHydrogens(mol, atom, numH - 1);\n    }\n    static allViableDirections(mol, atom, order) {\n        if (mol.atomAdjCount(atom) == 0) {\n            let angles = [];\n            for (let n = 0; n < 12; n++)\n                angles.push(30 * DEGRAD);\n            return angles;\n        }\n        let adj = mol.atomAdjList(atom);\n        let angles = SketchUtil.exitVectors(mol, atom);\n        let geom = SketchUtil.guessAtomGeometry(mol, atom, order);\n        if (adj.length == 1 && geom.indexOf(Geometry.Linear) < 0)\n            geom.push(Geometry.Linear);\n        let bndang = CoordUtil.atomBondAngles(mol, atom, adj);\n        for (let g of geom) {\n            let map = SketchUtil.mapAngleSubstituent(g, bndang);\n            if (map != null)\n                for (let th of map)\n                    angles.push(th);\n        }\n        return GeomUtil.uniqueAngles(angles, 2 * DEGRAD);\n    }\n    static proposeNewRing(mol, rsz, x, y, dx, dy, snap) {\n        let theta = dy == 0 && dx == 0 ? 0.5 * Math.PI : Math.atan2(dy, dx);\n        if (snap) {\n            const chunk = 30 * DEGRAD;\n            theta = Math.round(theta / chunk) * chunk;\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, x, y, theta);\n    }\n    static proposeAtomRing(mol, rsz, atom, dx, dy) {\n        let thsnap = [];\n        let cx = mol.atomX(atom), cy = mol.atomY(atom);\n        if (mol.atomAdjCount(atom) == 0) {\n            for (let n = 0; n < 12; n++)\n                thsnap.push(TWOPI * n / 12);\n        }\n        else if (mol.atomAdjCount(atom) == 1) {\n            let nbr = mol.atomAdjList(atom)[0];\n            thsnap.push(angleNorm(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx) + Math.PI));\n        }\n        else {\n            let angs = [];\n            for (let nbr of mol.atomAdjList(atom))\n                angs.push(Math.atan2(mol.atomY(nbr) - cy, mol.atomX(nbr) - cx));\n            angs = sortAngles(angs);\n            for (let n = 0; n < angs.length; n++) {\n                let th1 = angs[n], th2 = angs[n < angs.length - 1 ? n + 1 : 0];\n                thsnap.push(th1 + 0.5 * angleDiffPos(th2, th1));\n            }\n        }\n        let theta = Math.atan2(dy, dx);\n        let bestTheta = 0, bestDelta = Number.MAX_VALUE;\n        for (let th of thsnap) {\n            let delta = Math.abs(angleDiff(th, theta));\n            if (delta < bestDelta) {\n                bestTheta = th;\n                bestDelta = delta;\n            }\n        }\n        return SketchUtil.positionSimpleRing(mol, rsz, mol.atomX(atom), mol.atomY(atom), bestTheta);\n    }\n    static proposeBondRing(mol, rsz, bond, dx, dy) {\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let bx = mol.atomX(bto) - mol.atomX(bfr), by = mol.atomY(bto) - mol.atomY(bfr);\n        let sign = dx * by - dy * bx;\n        let delta = sign > 0 ? -90 * DEGRAD : 90 * DEGRAD;\n        let theta = Math.atan2(by, bx) + delta;\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2.0 * Math.sin(0.5 * dth)), brad = rad * Math.cos(0.5 * dth);\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)) + brad * Math.cos(theta);\n        let cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto)) + brad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + (n - 0.5) * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        let [i1, i2] = sign < 0 ? [bfr, bto] : [bto, bfr];\n        rx[0] = mol.atomX(i1);\n        ry[0] = mol.atomY(i1);\n        rx[1] = mol.atomX(i2);\n        ry[1] = mol.atomY(i2);\n        return [rx, ry];\n    }\n    static positionSimpleRing(mol, rsz, x, y, theta) {\n        let dth = TWOPI / rsz;\n        let rad = Molecule.IDEALBOND / (2 * Math.sin(0.5 * dth));\n        let cx = x + rad * Math.cos(theta), cy = y + rad * Math.sin(theta);\n        let rx = [], ry = [];\n        for (let n = 0; n < rsz; n++) {\n            let th = theta - Math.PI + n * dth;\n            rx.push(cx + Math.cos(th) * rad);\n            ry.push(cy + Math.sin(th) * rad);\n        }\n        return [rx, ry];\n    }\n    static guidelineSprouts(mol, atom) {\n        let sprouts = [];\n        let angs = [], ords = [];\n        for (let n = 0; n < 3; n++) {\n            angs.push(SketchUtil.allViableDirections(mol, atom, n + 1));\n            ords.push([n + 1]);\n            for (let i = 0; i < n; i++)\n                if (angs[i] != null && Vec.equals(angs[n], angs[i])) {\n                    angs[n] = null;\n                    ords[i].push(n + 1);\n                }\n        }\n        const cx = mol.atomX(atom), cy = mol.atomY(atom);\n        for (let n = 0; n < 3; n++)\n            if (angs[n] != null) {\n                let sprout = {\n                    atom: atom,\n                    orders: ords[n],\n                    x: [],\n                    y: [],\n                };\n                for (let i = 0; i < angs[n].length; i++) {\n                    sprout.x[i] = cx + Math.cos(angs[n][i]) * Molecule.IDEALBOND;\n                    sprout.y[i] = cy + Math.sin(angs[n][i]) * Molecule.IDEALBOND;\n                }\n                sprouts.push(sprout);\n            }\n        return sprouts;\n    }\n}\nSketchUtil.GEOM_ANGLES = [\n    [0, 180 * DEGRAD],\n    [0, 120 * DEGRAD],\n    [0, 120 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 240 * DEGRAD],\n    [0, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD],\n    [0, 90 * DEGRAD, 180 * DEGRAD, 270 * DEGRAD],\n    [0, 90 * DEGRAD, 150 * DEGRAD, 210 * DEGRAD, 270 * DEGRAD],\n    [0, 60 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 210 * DEGRAD],\n    [0, 60 * DEGRAD, 120 * DEGRAD, 180 * DEGRAD, 240 * DEGRAD, 300 * DEGRAD],\n    [0, 45 * DEGRAD, 90 * DEGRAD, 180 * DEGRAD, 225 * DEGRAD, 270 * DEGRAD]\n];\nexport { SketchUtil };\n//# sourceMappingURL=SketchUtil.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { CoordUtil } from './CoordUtil';\nimport { Graph } from './Graph';\nimport { Molecule } from './Molecule';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { SketchUtil } from './SketchUtil';\nclass MolUtil {\n    static isBlank(mol) {\n        if (mol == null)\n            return true;\n        return mol.numAtoms == 0;\n    }\n    static notBlank(mol) {\n        if (mol == null)\n            return false;\n        return mol.numAtoms > 0;\n    }\n    static orBlank(mol) { return mol == null ? new Molecule() : mol; }\n    static hasAnyAbbrev(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n))\n                return true;\n        return false;\n    }\n    static hasAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra == null ? 0 : extra.length); n++)\n            if (extra[n].startsWith('a'))\n                return true;\n        return false;\n    }\n    static getAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                return Molecule.fromString(extra[n].substring(1));\n            }\n        return null;\n    }\n    static setAbbrev(mol, atom, frag) {\n        let attidx = 0;\n        for (let n = 1; n <= frag.numAtoms; n++)\n            if (frag.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                attidx = n;\n                break;\n            }\n        if (attidx == 0)\n            throw 'No attachment points indicated.';\n        if (attidx >= 2) {\n            frag = frag.clone();\n            frag.swapAtoms(attidx, 1);\n        }\n        let adj = mol.atomAdjList(atom);\n        if (adj.length > 1)\n            throw 'Setting abbreviation for non-terminal atom.';\n        if (frag.atomAdjCount(1) == 1 && mol.atomAdjCount(atom) > 0) {\n            let b1 = mol.findBond(atom, mol.atomAdjList(atom)[0]);\n            let b2 = frag.findBond(1, frag.atomAdjList(1)[0]);\n            mol.setBondOrder(b1, frag.bondOrder(b2));\n        }\n        let extra = mol.atomExtra(atom);\n        let idx = -1;\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                idx = n;\n                break;\n            }\n        if (idx < 0)\n            idx = extra.push(null) - 1;\n        extra[idx] = 'a' + frag.toString();\n        mol.setAtomExtra(atom, extra);\n    }\n    static validateAbbrevs(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                if (mol.atomAdjCount(n) > 1)\n                    MolUtil.clearAbbrev(mol, n);\n                if (mol.atomCharge(n) != 0)\n                    mol.setAtomCharge(n, 0);\n                if (mol.atomUnpaired(n) != 0)\n                    mol.setAtomUnpaired(n, 0);\n                if (mol.atomIsotope(n) != 0)\n                    mol.setAtomIsotope(n, Molecule.ISOTOPE_NATURAL);\n                if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                    mol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n            }\n    }\n    static convertToAbbrev(mol, srcmask, abbrevName) {\n        let molidx = this.convertToAbbrevIndex(mol, srcmask, abbrevName);\n        return molidx ? molidx[0] : null;\n    }\n    static convertToAbbrevIndex(mol, srcmask, abbrevName) {\n        let junction = 0;\n        let polymerExtra = null;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n), atom = 0;\n            if (srcmask[b1 - 1] && !srcmask[b2 - 1]) {\n                atom = b1;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b2);\n            }\n            else if (!srcmask[b1 - 1] && srcmask[b2 - 1]) {\n                atom = b2;\n                polymerExtra = PolymerBlock.getPolymerExtensions(mol, b1);\n            }\n            if (atom == 0)\n                continue;\n            if (junction > 0 && atom != junction)\n                return [null, null];\n            junction = atom;\n        }\n        if (junction == 0)\n            return [null, null];\n        let na = mol.numAtoms, molidx = 0, fragidx = 0;\n        let maskmol = Vec.booleanArray(false, na), maskfrag = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            maskmol[n] = srcmask[n];\n            maskfrag[n] = !srcmask[n] || n + 1 == junction;\n            if (maskmol[n] && n + 1 <= junction)\n                molidx++;\n            if (maskfrag[n] && n + 1 <= junction)\n                fragidx++;\n        }\n        let bondType = Molecule.BONDTYPE_NORMAL, nadj = 0;\n        for (let a of mol.atomAdjList(junction))\n            if (!srcmask[a - 1]) {\n                if (nadj != 0) {\n                    bondType = Molecule.BONDTYPE_NORMAL;\n                    break;\n                }\n                let b = mol.findBond(junction, a);\n                if (mol.bondFrom(b) == junction)\n                    bondType = mol.bondType(b);\n                nadj++;\n            }\n        let frag = MolUtil.subgraphMask(mol, maskfrag);\n        frag.setAtomElement(fragidx, MolUtil.ABBREV_ATTACHMENT);\n        frag.setAtomCharge(fragidx, 0);\n        frag.setAtomUnpaired(fragidx, 0);\n        frag.setAtomHExplicit(fragidx, Molecule.HEXPLICIT_UNKNOWN);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        frag.setAtomExtra(fragidx, []);\n        frag.setAtomTransient(fragidx, []);\n        let adj = frag.atomAdjList(fragidx);\n        let x = 0, y = 0, inv = 1.0 / adj.length;\n        let bondOrder = 1;\n        for (let n = 0; n < adj.length; n++) {\n            x += frag.atomX(adj[n]);\n            y += frag.atomY(adj[n]);\n            let b = frag.findBond(fragidx, adj[n]);\n            if (n == 0)\n                bondOrder = frag.bondOrder(b);\n            else if (bondOrder != frag.bondOrder(b))\n                bondOrder = 1;\n        }\n        x *= inv;\n        y *= inv;\n        if (fragidx > 1)\n            frag.swapAtoms(fragidx, 1);\n        let newmol = MolUtil.subgraphMask(mol, maskmol);\n        let newatom = newmol.addAtom(abbrevName, x, y);\n        newmol.addBond(molidx, newatom, bondOrder, bondType);\n        MolUtil.setAbbrev(newmol, newatom, frag);\n        if (polymerExtra != null)\n            newmol.setAtomExtra(newatom, Vec.concat(newmol.atomExtra(newatom), polymerExtra));\n        return [newmol, newatom];\n    }\n    static expandAbbrevs(mol, alignCoords) {\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (MolUtil.hasAbbrev(mol, n)) {\n                    if (MolUtil.expandOneAbbrev(mol, n, alignCoords))\n                        anything = true;\n                    n--;\n                }\n            if (!anything)\n                break;\n        }\n    }\n    static expandedAbbrevs(mol) {\n        if (!this.hasAnyAbbrev(mol))\n            return mol;\n        mol = mol.clone();\n        this.expandAbbrevs(mol, true);\n        return mol;\n    }\n    static expandOneAbbrev(mol, atom, alignCoords) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (frag == null)\n            return null;\n        if (mol.atomAdjCount(atom) != 1 || frag.numAtoms == 0) {\n            MolUtil.clearAbbrev(mol, atom);\n            return null;\n        }\n        let m = mol.atomMapNum(atom);\n        for (let n = 1; n <= frag.numAtoms; n++)\n            frag.setAtomMapNum(n, 0);\n        if (m > 0)\n            for (let n of frag.atomAdjList(1))\n                frag.setAtomMapNum(n, m);\n        return MolUtil.expandOneAbbrevFrag(mol, atom, frag, alignCoords);\n    }\n    static expandOneAbbrevFrag(mol, atom, frag, alignCoords) {\n        let polymerExtra = PolymerBlock.getPolymerExtensions(mol, atom);\n        let nbr = mol.atomAdjCount(atom) == 1 ? mol.atomAdjList(atom)[0] : 0;\n        let connBond = mol.findBond(atom, nbr), connType = Molecule.BONDTYPE_NORMAL;\n        if (connBond > 0) {\n            connType = mol.bondType(connBond);\n            if (mol.bondFrom(connBond) != nbr && (connType == Molecule.BONDTYPE_INCLINED || connType == Molecule.BONDTYPE_DECLINED))\n                connType = Molecule.BONDTYPE_NORMAL;\n        }\n        if (alignCoords) {\n            let vx1 = mol.atomX(atom) - mol.atomX(nbr), vy1 = mol.atomY(atom) - mol.atomY(nbr);\n            let adj = frag.atomAdjList(1);\n            let vx2 = 0, vy2 = 0, inv = 1.0 / adj.length;\n            for (let n = 0; n < adj.length; n++) {\n                vx2 += frag.atomX(adj[n]) - frag.atomX(1);\n                vy2 += frag.atomY(adj[n]) - frag.atomY(1);\n            }\n            vx2 *= inv;\n            vy2 *= inv;\n            let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n            CoordUtil.rotateMolecule(frag, th1 - th2);\n            CoordUtil.translateMolecule(frag, mol.atomX(nbr) - frag.atomX(1), mol.atomY(nbr) - frag.atomY(1));\n        }\n        if (polymerExtra != null) {\n            for (let n = 1; n <= frag.numAtoms; n++) {\n                let extra = frag.atomExtra(n);\n                for (let i = extra.length - 1; i >= 0; i--)\n                    if (polymerExtra.indexOf(extra[i]) >= 0)\n                        extra.splice(i, 1);\n                frag.setAtomExtra(n, Vec.concat(extra, polymerExtra));\n            }\n        }\n        let join = mol.numAtoms + 1;\n        mol.append(frag);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondFrom(n) == join) {\n                mol.setBondFrom(n, nbr);\n                mol.setBondType(n, connType);\n            }\n            else if (mol.bondTo(n) == join) {\n                mol.setBondFromTo(n, nbr, mol.bondFrom(n));\n                mol.setBondType(n, connType);\n            }\n        }\n        let mask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = mask.length - frag.numAtoms; n < mask.length; n++)\n            mask[n] = true;\n        mol.deleteAtomAndBonds(join);\n        mol.deleteAtomAndBonds(atom);\n        mask.splice(join - 1, 1);\n        mask.splice(atom - 1, 1);\n        return mask;\n    }\n    static clearAbbrev(mol, atom) {\n        let extra = mol.atomExtra(atom);\n        for (let n = 0; n < (extra != null ? extra.length : 0); n++)\n            if (extra[n].startsWith('a')) {\n                extra.splice(n, 1);\n                mol.setAtomExtra(atom, extra);\n                mol.setAtomElement(atom, 'C');\n                return;\n            }\n    }\n    static setAtomElement(mol, atom, el) {\n        if (mol.atomElement(atom) == el)\n            return;\n        this.clearAbbrev(mol, atom);\n        mol.setAtomElement(atom, el);\n    }\n    static addBond(mol, bfr, bto, order, type) {\n        if (type == null)\n            type = Molecule.BONDTYPE_NORMAL;\n        if (mol.atomAdjCount(bfr) >= 1)\n            this.clearAbbrev(mol, bfr);\n        if (mol.atomAdjCount(bto) >= 1)\n            this.clearAbbrev(mol, bto);\n        let b = mol.findBond(bfr, bto);\n        if (b > 0)\n            mol.deleteBond(b);\n        return mol.addBond(bfr, bto, order, type);\n    }\n    static subgraphMask(mol, mask) {\n        let invidx = [];\n        let sum = 0;\n        for (let n = 0; n < mol.numAtoms; n++) {\n            if (mask[n])\n                invidx.push(++sum);\n            else\n                invidx.push(0);\n        }\n        if (sum == 0)\n            return new Molecule();\n        if (sum == mol.numAtoms)\n            return mol.clone();\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let num = frag.addAtom(mol.atomElement(n), mol.atomX(n), mol.atomY(n), mol.atomCharge(n), mol.atomUnpaired(n));\n                frag.setAtomIsotope(num, mol.atomIsotope(n));\n                frag.setAtomHExplicit(num, mol.atomHExplicit(n));\n                frag.setAtomMapNum(num, mol.atomMapNum(n));\n                frag.setAtomExtra(num, mol.atomExtra(n));\n                frag.setAtomTransient(num, mol.atomTransient(n));\n            }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphIndex(mol, idx) {\n        let invidx = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 0; n < invidx.length; n++)\n            invidx[n] = 0;\n        for (let n = 0; n < idx.length; n++)\n            invidx[idx[n] - 1] = n + 1;\n        let frag = new Molecule();\n        frag.keepTransient = true;\n        for (let n = 0; n < idx.length; n++) {\n            let num = frag.addAtom(mol.atomElement(idx[n]), mol.atomX(idx[n]), mol.atomY(idx[n]), mol.atomCharge(idx[n]), mol.atomUnpaired(idx[n]));\n            frag.setAtomIsotope(num, mol.atomIsotope(idx[n]));\n            frag.setAtomHExplicit(num, mol.atomHExplicit(idx[n]));\n            frag.setAtomMapNum(num, mol.atomMapNum(idx[n]));\n            frag.setAtomExtra(num, mol.atomExtra(idx[n]));\n            frag.setAtomTransient(num, mol.atomTransient(idx[n]));\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = invidx[mol.bondFrom(n) - 1], bto = invidx[mol.bondTo(n) - 1];\n            if (bfr > 0 && bto > 0) {\n                let num = frag.addBond(bfr, bto, mol.bondOrder(n), mol.bondType(n));\n                frag.setBondExtra(num, mol.bondExtra(n));\n                frag.setBondTransient(num, mol.bondTransient(n));\n            }\n        }\n        frag.keepTransient = mol.keepTransient;\n        return frag;\n    }\n    static subgraphWithAttachments(mol, mask) {\n        let xmask = mask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (mask[bfr] && !mask[bto])\n                xmask[bto] = true;\n            else if (mask[bto] && !mask[bfr])\n                xmask[bfr] = true;\n        }\n        let xmol = mol.clone();\n        for (let n = 1; n <= xmol.numAtoms; n++)\n            if (xmask[n - 1] && !mask[n - 1]) {\n                xmol.setAtomElement(n, 'X');\n                xmol.setAtomCharge(n, 0);\n                xmol.setAtomUnpaired(n, 0);\n                xmol.setAtomHExplicit(n, Molecule.HEXPLICIT_UNKNOWN);\n                xmol.setAtomExtra(n, []);\n            }\n        return MolUtil.subgraphMask(xmol, xmask);\n    }\n    static append(mol, frag) {\n        let boxm = mol.boundary(), boxf = frag.boundary();\n        let dx = boxm.maxX() + Molecule.IDEALBOND - boxf.minX();\n        let dy = 0.5 * (boxm.minY() + boxm.maxY() - boxf.minY() - boxf.maxY());\n        let top = mol.numAtoms;\n        mol.append(frag);\n        for (let n = top + 1; n <= mol.numAtoms; n++)\n            mol.setAtomPos(n, mol.atomX(n) + dx, mol.atomY(n) + dy);\n    }\n    static deleteAtoms(mol, idx) {\n        let mask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 0; n < idx.length; n++)\n            mask[idx[n] - 1] = false;\n        return MolUtil.subgraphMask(mol, mask);\n    }\n    static componentList(mol) {\n        let sz = mol.numAtoms;\n        if (sz == 0)\n            return null;\n        let g = Graph.fromMolecule(mol);\n        let groups = g.calculateComponentGroups();\n        for (let grp of groups)\n            Vec.addTo(grp, 1);\n        return groups;\n    }\n    static getAtomSides(mol, atom) {\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[atom - 1]);\n        mask[atom - 1] = false;\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++)\n            grps.push([atom]);\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static getBondSides(mol, bond) {\n        let bf = mol.bondFrom(bond), bt = mol.bondTo(bond);\n        let inRing = mol.bondInRing(bond);\n        let g = Graph.fromMolecule(mol);\n        let cc = g.calculateComponents();\n        let mask = [];\n        for (let n = 0; n < cc.length; n++)\n            mask.push(cc[n] == cc[bf - 1]);\n        if (!inRing)\n            g.removeEdge(bf - 1, bt - 1);\n        else {\n            mask[bf - 1] = false;\n            mask[bt - 1] = false;\n        }\n        let oldmap = Vec.maskIdx(mask);\n        g.keepNodesMask(mask);\n        cc = g.calculateComponents();\n        let ccmax = Vec.max(cc);\n        let grps = [];\n        for (let n = 0; n < ccmax; n++) {\n            grps[n] = [];\n            if (inRing) {\n                grps[n].push(bf);\n                grps[n].push(bt);\n            }\n        }\n        for (let n = 0; n < cc.length; n++)\n            grps[cc[n] - 1].push(oldmap[n] + 1);\n        return grps;\n    }\n    static arrayAtomX(mol) {\n        let x = Vec.numberArray(0, mol.numAtoms);\n        for (let n = x.length - 1; n >= 0; n--)\n            x[n] = mol.atomX(n + 1);\n        return x;\n    }\n    static arrayAtomY(mol) {\n        let y = Vec.numberArray(0, mol.numAtoms);\n        for (let n = y.length - 1; n >= 0; n--)\n            y[n] = mol.atomY(n + 1);\n        return y;\n    }\n    static arrayAtomMapNum(mol) {\n        let mapnum = Vec.numberArray(0, mol.numAtoms);\n        for (let n = mapnum.length - 1; n >= 0; n--)\n            mapnum[n] = mol.atomMapNum(n + 1);\n        return mapnum;\n    }\n    static molecularFormula(mol, punctuation) {\n        let puncEnter = '', puncExit = '', puncEnterSuper = '', puncExitSuper = '';\n        if (punctuation == true)\n            [puncEnter, puncExit] = ['{', '}', '{^', '}'];\n        else if (punctuation instanceof Array) {\n            puncEnter = punctuation[0];\n            puncExit = punctuation[1];\n            puncEnterSuper = punctuation[2];\n            puncExitSuper = punctuation[3];\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let countC = 0, countH = 0;\n        let elements = Vec.stringArray('', mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            countH += mol.atomHydrogens(n);\n            let el = mol.atomElement(n);\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL)\n                el = puncEnterSuper + mol.atomIsotope(n) + puncExitSuper + el;\n            if (el == 'C')\n                countC++;\n            else if (el == 'H')\n                countH++;\n            else\n                elements[n - 1] = el;\n        }\n        elements.sort();\n        let formula = '';\n        if (countC > 0)\n            formula += 'C';\n        if (countC > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countC;\n            if (punctuation)\n                formula += puncExit;\n        }\n        if (countH > 0)\n            formula += 'H';\n        if (countH > 1) {\n            if (punctuation)\n                formula += puncEnter;\n            formula += countH;\n            if (punctuation)\n                formula += puncExit;\n        }\n        for (let n = 0; n < elements.length; n++)\n            if (elements[n].length > 0) {\n                let count = 1;\n                for (; n + 1 < elements.length && elements[n] == elements[n + 1]; n++)\n                    count++;\n                formula += elements[n];\n                if (count > 1) {\n                    if (punctuation)\n                        formula += puncEnter;\n                    formula += count;\n                    if (punctuation)\n                        formula += puncExit;\n                }\n            }\n        return formula.toString();\n    }\n    static molecularWeight(mol) {\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n)) {\n                mol = mol.clone();\n                MolUtil.expandAbbrevs(mol, false);\n                break;\n            }\n        let mw = 0;\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            mw += mol.atomHydrogens(n) * Chemistry.NATURAL_ATOMIC_WEIGHTS[1];\n            let iso = mol.atomIsotope(n);\n            if (iso != Molecule.ISOTOPE_NATURAL) {\n                mw += iso;\n                continue;\n            }\n            let an = Molecule.elementAtomicNumber(mol.atomElement(n));\n            if (an > 0 && an < Chemistry.NATURAL_ATOMIC_WEIGHTS.length)\n                mw += Chemistry.NATURAL_ATOMIC_WEIGHTS[an];\n        }\n        return mw;\n    }\n    static removeDuplicateBonds(mol) {\n        let bpri = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let p = Math.min(mol.bondFrom(n), mol.bondTo(n)) * mol.numAtoms + Math.max(mol.bondFrom(n), mol.bondTo(n));\n            bpri.push(p);\n        }\n        let bidx = Vec.idxSort(bpri);\n        let keepmask = Vec.booleanArray(false, bidx.length);\n        let p = 0;\n        while (p < bidx.length) {\n            let sz = 1;\n            while (p + sz < bidx.length && bpri[bidx[p]] == bpri[bidx[p + sz]])\n                sz++;\n            let best = p;\n            for (let n = p + 1; n < p + sz; n++) {\n                let b1 = bidx[best] + 1, b2 = bidx[n] + 1;\n                let a1 = mol.bondFrom(b1), a2 = mol.bondTo(b1);\n                let el1 = mol.atomElement(a1), el2 = mol.atomElement(a2);\n                let limit1 = 0, limit2 = 0;\n                if (el1 == 'C' || el1 == 'N')\n                    limit1 = 4;\n                else if (el1 == 'O')\n                    limit1 = 3;\n                if (el2 == 'C' || el2 == 'N')\n                    limit2 = 4;\n                else if (el2 == 'O')\n                    limit2 = 3;\n                if (limit1 > 0 || limit2 > 0) {\n                    let boB1A1 = 0, boB1A2 = 0, boB2A1 = 0, boB2A2 = 0;\n                    for (let i = 1; i <= mol.numBonds; i++) {\n                        if (i != b2 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB1A1 += mol.bondOrder(i);\n                        if (i != b2 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB1A2 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a1 || mol.bondTo(i) == a1))\n                            boB2A1 += mol.bondOrder(i);\n                        if (i != b1 && (mol.bondFrom(i) == a2 || mol.bondTo(i) == a2))\n                            boB2A2 += mol.bondOrder(i);\n                    }\n                    let bad1 = 0, bad2 = 0;\n                    if (limit1 > 0 && boB1A1 > limit1)\n                        bad1++;\n                    if (limit2 > 0 && boB1A2 > limit2)\n                        bad1++;\n                    if (limit1 > 0 && boB2A1 > limit1)\n                        bad2++;\n                    if (limit2 > 0 && boB2A2 > limit2)\n                        bad2++;\n                    if (bad1 < bad2)\n                        continue;\n                    if (bad1 > bad2) {\n                        best = n;\n                        continue;\n                    }\n                }\n                let exotic1 = 2 * mol.bondOrder(b1), exotic2 = 2 * mol.bondOrder(b2);\n                exotic1 += (exotic1 == 0 ? 4 : 0) + (mol.bondType(b1) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                exotic2 += (exotic2 == 0 ? 4 : 0) + (mol.bondType(b2) != Molecule.BONDTYPE_NORMAL ? 1 : 0);\n                if (exotic2 > exotic1)\n                    best = n;\n            }\n            keepmask[bidx[best]] = true;\n            p += sz;\n        }\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (!keepmask[n - 1] || mol.bondFrom(n) == mol.bondTo(n))\n                mol.deleteBond(n);\n    }\n    static calculateWalkWeight(mol, atom) {\n        let ccsz = 0, cc = Graph.fromMolecule(mol).calculateComponents();\n        for (let n = 0; n < cc.length; n++)\n            if (cc[n] == cc[atom - 1])\n                ccsz++;\n        let w = Vec.numberArray(1, mol.numAtoms), wn = Vec.numberArray(0, mol.numAtoms);\n        w[atom - 1] = 0;\n        for (; ccsz > 0; ccsz--) {\n            for (let n = 0; n < mol.numAtoms; n++)\n                wn[n] = w[n];\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let a1 = mol.bondFrom(n) - 1, a2 = mol.bondTo(n) - 1;\n                w[a1] += wn[a2] * 0.1;\n                w[a2] += wn[a1] * 0.1;\n            }\n            w[atom - 1] = 0;\n        }\n        return w;\n    }\n    static totalHydrogens(mol, atom) {\n        let hc = mol.atomHydrogens(atom);\n        let adj = mol.atomAdjList(atom);\n        for (let n = 0; n < adj.length; n++)\n            if (mol.atomElement(adj[n]) == 'H')\n                hc++;\n        return hc;\n    }\n    static stripHydrogens(mol, force = false) {\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if ((force && mol.atomElement(n) == 'H') || this.boringHydrogen(mol, n))\n                mol.deleteAtomAndBonds(n);\n    }\n    static boringHydrogen(mol, atom) {\n        if (mol.atomElement(atom) != 'H')\n            return false;\n        if (mol.atomCharge(atom) != 0 || mol.atomUnpaired(atom) != 0)\n            return false;\n        if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n            return false;\n        if (Vec.notBlank(mol.atomExtra(atom)) || Vec.notBlank(mol.atomTransient(atom)))\n            return false;\n        if (mol.atomAdjCount(atom) != 1)\n            return false;\n        let other = mol.atomAdjList(atom)[0];\n        if (mol.atomElement(other) == 'H')\n            return false;\n        let bond = mol.atomAdjBonds(atom)[0];\n        if (mol.bondOrder(bond) != 1 || mol.bondType(bond) != Molecule.BONDTYPE_NORMAL)\n            return false;\n        if (mol.atomHExplicit(other) != Molecule.HEXPLICIT_UNKNOWN)\n            return false;\n        if (Molecule.HYVALENCE_EL.indexOf(mol.atomElement(other)) < 0)\n            return false;\n        return true;\n    }\n    static createHydrogens(mol, position) {\n        if (position == null)\n            position = false;\n        let na = mol.numAtoms;\n        for (let n = 1; n <= na; n++) {\n            let hc = mol.atomHydrogens(n);\n            if (hc == 0)\n                continue;\n            if (mol.atomHExplicit(n) != Molecule.HEXPLICIT_UNKNOWN)\n                mol.setAtomHExplicit(n, 0);\n            if (!position) {\n                for (; hc > 0; hc--) {\n                    let a = mol.addAtom('H', mol.atomX(n), mol.atomY(n));\n                    mol.addBond(n, a, 1);\n                }\n            }\n            else\n                SketchUtil.placeAdditionalHydrogens(mol, n, hc);\n        }\n        return mol.numAtoms - na;\n    }\n    static atomVec3(mol, atom) {\n        if (mol.is3D())\n            return [mol.atomX(atom), mol.atomY(atom), mol.atomZ(atom)];\n        else\n            return [mol.atomX(atom), mol.atomY(atom), 0];\n    }\n    static atomOxidationState(mol, atom) {\n        if (mol.atomAdjCount(atom) == 0)\n            return null;\n        if (this.hasAbbrev(mol, atom))\n            return null;\n        let atno = mol.atomicNumber(atom);\n        if (atno == 0)\n            return null;\n        let nonMetal = atno == Chemistry.ELEMENT_H || Chemistry.ELEMENT_BLOCKS[atno] == 2;\n        let oxstate = mol.atomHydrogens(atom) + (nonMetal ? -mol.atomCharge(atom) : mol.atomCharge(atom));\n        for (let b of mol.atomAdjBonds(atom)) {\n            let bo = mol.bondOrder(b), other = mol.bondOther(b, atom);\n            let chalco = ['O', 'S', 'Se', 'Te'].includes(mol.atomElement(other));\n            if (nonMetal || chalco)\n                oxstate += bo;\n            else\n                oxstate += bo % 2;\n        }\n        if (atno == Chemistry.ELEMENT_H && oxstate == 1)\n            return null;\n        if (atno == Chemistry.ELEMENT_B && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_C && oxstate == 4)\n            return null;\n        if (atno == Chemistry.ELEMENT_N && oxstate == 3)\n            return null;\n        if (atno == Chemistry.ELEMENT_O && oxstate == 2)\n            return null;\n        if (atno == Chemistry.ELEMENT_S && (oxstate == 2 || oxstate == 4 || oxstate == 6))\n            return null;\n        if (atno == Chemistry.ELEMENT_P && (oxstate == 3 || oxstate == 5))\n            return null;\n        if ((atno == Chemistry.ELEMENT_F || atno == Chemistry.ELEMENT_Cl ||\n            atno == Chemistry.ELEMENT_Br || atno == Chemistry.ELEMENT_I) && oxstate == 1)\n            return null;\n        return oxstate;\n    }\n    static oxidationStateText(oxstate) {\n        if (oxstate == 0)\n            return '0';\n        let str = oxstate < 0 ? '-' : '';\n        let absox = Math.abs(oxstate);\n        if (absox == 1)\n            str += 'I';\n        else if (absox == 2)\n            str += 'II';\n        else if (absox == 3)\n            str += 'III';\n        else if (absox == 4)\n            str += 'IV';\n        else if (absox == 5)\n            str += 'V';\n        else if (absox == 6)\n            str += 'VI';\n        else if (absox == 7)\n            str += 'VII';\n        else if (absox == 8)\n            str += 'VIII';\n        else if (absox == 9)\n            str += 'IX';\n        else if (absox == 10)\n            str += 'X';\n        else if (absox == 11)\n            str += 'XI';\n        else if (absox == 12)\n            str += 'XII';\n        else\n            str = (oxstate > 0 ? '+' : '') + oxstate;\n        return str;\n    }\n}\nMolUtil.TEMPLATE_ATTACHMENT = 'X';\nMolUtil.ABBREV_ATTACHMENT = '*';\nexport { MolUtil };\n//# sourceMappingURL=MolUtil.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\n\nexport interface InChIResult\n{\n\tinchi:string;\n\tinchiKey:string;\n}\n\nexport abstract class InChIDelegate\n{\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tthrow new Error('InChI not implemented.');\n\t}\n}","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {getGlobal} from '@electron/remote';\nimport {InChIDelegate, InChIResult} from '../mixture/InChIDelegate';\n\n/*\n\tInteroperability with InChI technology: the generator program is a native binary, the location of which\n\tneeds to be discovered. Each generation operation involves a trip to the external execution subsystem.\n*/\n\nlet execLocation:string = null;\nlet inchi:InChI = null;\n\nexport class InChI extends InChIDelegate\n{\n\t// optional override: when using the Emscripten-ported version of InChI, set this function to call the\n\t// natively encoded implementation\n\tpublic static nativeMolfileToInChI:(mdlmol:string, options:string) => Promise<string> = null;\n\n\tprivate available = false;\n\tprivate inchiPath = execLocation;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tif (!this.inchiPath)\n\t\t{\n\t\t\tthis.inchiPath = getGlobal('INCHI_EXEC');\n\t\t}\n\n\t\tif (this.inchiPath)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfs.accessSync(this.inchiPath, fs.constants.X_OK);\n\t\t\t\tthis.available = true;\n\t\t\t}\n\t\t\tcatch (ex) {} // not available\n\t\t}\n\t}\n\n\t// specify where the executable file is (overrides the global option)\n\tpublic static hasExecutable():boolean\n\t{\n\t\treturn !!execLocation;\n\t}\n\tpublic static setExecutable(exec:string):void\n\t{\n\t\texecLocation = exec;\n\t}\n\n\t// returns true if we have reason to believe the InChI executable can be run on demand\n\tpublic static isAvailable():boolean\n\t{\n\t\tif (this.nativeMolfileToInChI != null) return true;\n\t\tif (!inchi) inchi = new InChI();\n\t\treturn inchi.available;\n\t}\n\n\t// converts a molecule to an InChI string, if possible; should check the availability first, for graceful\n\t// rejection; failure results in an exception; note that it is executed synchronously: if the executable takes\n\t// a long time to run, this will be a problem for the UI; the return value is [InChI, InChIKey]\n\tpublic async generate(mol:Molecule):Promise<InChIResult>\n\t{\n\t\tmol = mol.clone();\n\t\tMolUtil.expandAbbrevs(mol, true);\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondOrder(n) < 1 || mol.bondOrder(n) > 3) mol.setBondOrder(n, 1);\n\n\t\tlet writer = new MDLMOLWriter(mol);\n\t\twriter.enhancedFields = false;\n\t\tlet mdlmol = writer.write();\n\n\t\tif (InChI.nativeMolfileToInChI != null)\n\t\t{\n\t\t\tlet inchi = await InChI.nativeMolfileToInChI(mdlmol, '-AuxNone -NoLabels');\n\t\t\treturn {inchi: inchi, inchiKey: null}; // NOTE: this version doesn't provide a key; address this in the future\n\t\t}\n\n\t\tif (!inchi) inchi = new InChI();\n\t\tif (!inchi.available) throw 'InChI executable is not available.';\n\n\t\tconst proc = require('child_process');\n\n\t\tlet cmd = inchi.inchiPath.replace(/ /g, '\\\\\\ '); // very crude escaping of spaces\n\t\tlet result = proc.spawnSync(cmd, ['-STDIO', '-AuxNone', '-NoLabels', '-Key'], {input: mdlmol});\n\t\tlet raw = result.stdout.toString(), bits = raw.split('\\n');\n\n\t\tif (bits.length < 2 || !bits[0].startsWith('InChI='))\n\t\t{\n\t\t\tconsole.log('InChI command returned result:\\n' + raw);\n\t\t\tconsole.log('Molecule:\\n' + mol);\n\t\t\tconsole.log('MDL Molfile:\\n' + mdlmol);\n\t\t\tthrow 'Invalid returned by InChI generator: ' + raw;\n\t\t}\n\t\treturn {inchi: bits[0], inchiKey: bits[1]};\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {MenuBannerCommand} from '../web/MenuBanner';\nimport {openNewWindow} from './startup';\nimport {InChI} from '../nodejs/InChI';\n\n/*\n\tBase class for \"main windows\": an object that takes up the entire browser window document, responds to resizing, etc.\n*/\n\nexport abstract class MainPanel\n{\n\tprotected inchi = new InChI();\n\n\t// ------------ public methods ------------\n\n\tconstructor(public root:DOM)\n\t{\n\t\tdom('body').css({'overflow': 'hidden'});\n\n\t\troot.css({'width': '100%', 'height': document.documentElement.clientHeight + 'px'});\n\t\twindow.addEventListener('resize', () => this.onResize());\n\t\troot.css({'user-select': 'none'});\n\n\t\t(this.root.el as any).addEventListener('menuAction', (event:any, cmd:string) => this.menuAction(cmd as MenuBannerCommand));\n\t}\n\n\t// stub: may be called early on to provide a source file upon which to work\n\tpublic loadFile(filename:string):void\n\t{\n\t}\n\n\t// minimum required functionality for resizing windows; override to capture\n\tprotected onResize():void\n\t{\n\t\tthis.root.css({'height': document.documentElement.clientHeight + 'px'});\n\t}\n\n\t// optionally override this to pre-empt menu actions\n\tpublic menuAction(cmd:string):void\n\t{\n\t\tif (cmd == MenuBannerCommand.NewMixture) openNewWindow('MixturePanel');\n\t\telse if (cmd == MenuBannerCommand.NewCollection) openNewWindow('CollectionPanel');\n\t\telse if (cmd == MenuBannerCommand.Open) this.actionFileOpen();\n\t\telse if (cmd == MenuBannerCommand.Save) this.actionFileSave();\n\t\telse if (cmd == MenuBannerCommand.SaveAs) this.actionFileSaveAs();\n\t\telse this.customMenuAction(cmd);\n\t}\n\n\t// override this to interpret menu non-default menu actions\n\tpublic customMenuAction(cmd:string):void\n\t{\n\t\tconsole.log('MENU:' + cmd);\n\t}\n\n\t// standard actions that must be implemented\n\tprotected abstract actionFileOpen():void;\n\tprotected abstract actionFileSave():void;\n\tprotected abstract actionFileSaveAs():void;\n\n\t// ------------ private methods ------------\n\n}\n\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Vec } from '../util/Vec';\nexport class ClipboardProxyHandler {\n    copyEvent(andCut, proxy) { return false; }\n    pasteEvent(proxy) { return false; }\n}\nexport class ClipboardProxy {\n    constructor() {\n        this.handlers = [new ClipboardProxyHandler()];\n        this.triggerBackupPaste = null;\n    }\n    pushHandler(handler) {\n        this.handlers.push(handler);\n    }\n    popHandler() {\n        this.handlers.pop();\n    }\n    currentHandler() {\n        return Vec.last(this.handlers);\n    }\n    triggerCopy(andCut) {\n        if (this.currentHandler().copyEvent(andCut, this))\n            return;\n        document.execCommand(andCut ? 'cut' : 'copy');\n    }\n    triggerPaste() {\n        if (this.currentHandler().pasteEvent(this))\n            return;\n        document.execCommand('paste');\n    }\n    getString() { return null; }\n    setString(str) { }\n    setImage(blob) { }\n    canSetHTML() { return false; }\n    setHTML(html) { }\n    canAlwaysGet() { return false; }\n    downloadString(str, fn) { }\n}\nexport class ClipboardProxyWeb extends ClipboardProxy {\n    constructor() {\n        super();\n        this.lastContent = null;\n        this.fakeTextArea = null;\n        this.busy = false;\n        document.addEventListener('copy', (event) => {\n            var _a;\n            if (this.busy)\n                return null;\n            if ((_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.copyEvent(false, this)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n        document.addEventListener('cut', (event) => {\n            var _a;\n            if (this.busy)\n                return null;\n            if ((_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.copyEvent(true, this)) {\n                event.preventDefault();\n                return false;\n            }\n        });\n        document.addEventListener('paste', (event) => {\n            var _a;\n            let wnd = window;\n            this.lastContent = null;\n            if (wnd.clipboardData && wnd.clipboardData.getData)\n                this.lastContent = wnd.clipboardData.getData('Text');\n            else if (event.clipboardData && event.clipboardData.getData)\n                this.lastContent = event.clipboardData.getData('text/plain');\n            let consumed = (_a = this.currentHandler()) === null || _a === void 0 ? void 0 : _a.pasteEvent(this);\n            this.lastContent = null;\n            if (consumed) {\n                event.preventDefault();\n                return false;\n            }\n            return true;\n        });\n    }\n    getString() {\n        return this.lastContent;\n    }\n    setString(str) {\n        let fallbackWorkaround = () => {\n            if (this.fakeTextArea == null) {\n                this.fakeTextArea = document.createElement('textarea');\n                this.fakeTextArea.style.fontSize = '12pt';\n                this.fakeTextArea.style.border = '0';\n                this.fakeTextArea.style.padding = '0';\n                this.fakeTextArea.style.margin = '0';\n                this.fakeTextArea.style.position = 'fixed';\n                this.fakeTextArea.style['left'] = '-9999px';\n                this.fakeTextArea.style.top = (window.pageYOffset || document.documentElement.scrollTop) + 'px';\n                this.fakeTextArea.setAttribute('readonly', '');\n                document.body.appendChild(this.fakeTextArea);\n            }\n            this.fakeTextArea.value = str;\n            this.fakeTextArea.select();\n            this.busy = true;\n            document.execCommand('copy');\n            this.busy = false;\n        };\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(str).then(() => { }, fallbackWorkaround);\n        }\n        else\n            fallbackWorkaround();\n    }\n    setImage(blob) {\n        let item = new ClipboardItem({ 'image/png': blob });\n        this.busy = true;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            yield navigator.clipboard.write([item]);\n            this.busy = false;\n        }))();\n    }\n}\n//# sourceMappingURL=ClipboardProxy.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/*\n\tUnit definitions and conversions. Units are preferentially stored by URI, displayed by common name, and interconverted\n\tas necessary to other schemes, such as MInChI mnemonics.\n*/\n\nexport enum StandardUnits\n{\n\t// concentration units (these are favoured for most purposes)\n\tpc = 'http://purl.obolibrary.org/obo/UO_0000187', // percent (of arbitrary type)\n\tpcWV = 'http://purl.obolibrary.org/obo/UO_0000164', // percent (weight per volume),\n\tpcWW = 'http://purl.obolibrary.org/obo/UO_0000163', // percent (weight per weight),\n\tpcVV = 'http://purl.obolibrary.org/obo/UO_0000205', // percent (volume per volume),\n\tpcMM = 'http://purl.obolibrary.org/obo/UO_0000076', // percent (mole per mole)\n\tratio = 'http://purl.obolibrary.org/obo/UO_0000190', // ratio (numerator only; nominally by volume)\n\tmol_L = 'http://purl.obolibrary.org/obo/UO_0000062', // moles per litre (mol/L)\n\tmmol_L = 'http://purl.obolibrary.org/obo/UO_0000063', // milli-moles per litre\n\tumol_L = 'http://purl.obolibrary.org/obo/UO_0000064', // micro-moles per litre\n\tnmol_L = 'http://purl.obolibrary.org/obo/UO_0000065', // nano-moles per litre\n\tpmol_L = 'http://purl.obolibrary.org/obo/UO_0000066', // pico-moles per litre\n\t/* could be handy to allow these... maybe\n\tlogM = 'http://www.bioassayontology.org/bao#BAO_0000101', // log10 of mol/L\n\tperM = 'http://www.bioassayontology.org/bao#BAO_0000102', // -log10 of mol/L */\n\tg_L = 'http://purl.obolibrary.org/obo/UO_0000175', // grams per litre (g/L)\n\tmg_L = 'http://purl.obolibrary.org/obo/UO_0000273', // milligrams per litre (aka micrograms per mL)\n\tug_L = 'http://purl.obolibrary.org/obo/UO_0000275', // micrograms per litre (aka nanograms per mL)\n\tmg_mL = 'http://purl.obolibrary.org/obo/UO_0000176', // milligrams per millilitre (aka grams per L)\n\tmol_kg = 'http://purl.obolibrary.org/obo/UO_0000068', // moles per kilogram\n\n\t// absolute units (these are often converted to concentrations when possible)\n\tkg = 'http://purl.obolibrary.org/obo/UO_0000009', // kilogram\n\tg = 'http://purl.obolibrary.org/obo/UO_0000021', // gram\n\tmg = 'http://purl.obolibrary.org/obo/UO_0000022', // milligram\n\tug = 'http://purl.obolibrary.org/obo/UO_0000023', // microgram\n\tng = 'http://purl.obolibrary.org/obo/UO_0000024', // nanogram\n\tL = 'http://purl.obolibrary.org/obo/UO_0000099', // litre\n\tmL = 'http://purl.obolibrary.org/obo/UO_0000098', // millilitre\n\tuL = 'http://purl.obolibrary.org/obo/UO_0000101', // microlitre\n\tnL = 'http://purl.obolibrary.org/obo/UO_0000102', // nanolitre\n\tmol = 'http://purl.obolibrary.org/obo/UO_0000013', // mole\n\tmmol = 'http://purl.obolibrary.org/obo/UO_0000040', // millimole\n\tumol = 'http://purl.obolibrary.org/obo/UO_0000039', // micromole\n\tnmol = 'http://purl.obolibrary.org/obo/UO_0000041', // nanomole\n\n\t// other\n\tppm = 'placeholder1',\n\tppb = 'placeholder2',\n}\n\nconst PAIR_UNIT_NAMES:any[] =\n[\n\t// form: [reference URI, primary display name, ...optional alternative names]\n\n\t[StandardUnits.pc, '%'],\n\t[StandardUnits.pcWV, 'w/v%'],\n\t[StandardUnits.pcWW, 'w/w%'],\n\t[StandardUnits.pcVV, 'v/v%'],\n\t[StandardUnits.pcMM, 'mol/mol%'],\n\t[StandardUnits.ratio, 'ratio'],\n\t[StandardUnits.mol_L, 'mol/L', 'M'],\n\t[StandardUnits.mmol_L, 'mmol/L', 'mM'],\n\t[StandardUnits.umol_L, '\\u{03BC}mol/L', 'umol/L', 'uM'],\n\t[StandardUnits.nmol_L, 'nmol/L', 'nM'],\n\t[StandardUnits.pmol_L, 'pmol/L', 'pM'],\n\t/*[StandardUnits.logM, ''],\n\t[StandardUnits.perM, ''],*/\n\t[StandardUnits.g_L, 'g/L'],\n\t[StandardUnits.mg_L, 'mg/L'],\n\t[StandardUnits.ug_L, '\\u{03BC}g/L', 'ug/L'],\n\t[StandardUnits.mg_mL, 'mg/mL'],\n\t[StandardUnits.mol_kg, 'mol/kg'],\n\n\t[StandardUnits.kg, 'kg'],\n\t[StandardUnits.g, 'g'],\n\t[StandardUnits.mg, 'mg'],\n\t[StandardUnits.ug, '\\u{03BC}g', 'ug'],\n\t[StandardUnits.ng, 'ng'],\n\t[StandardUnits.L, 'L'],\n\t[StandardUnits.mL, 'mL'],\n\t[StandardUnits.uL, '\\u{03BC}L', 'uL'],\n\t[StandardUnits.nL, 'nL'],\n\t[StandardUnits.mol, 'mol'],\n\t[StandardUnits.mmol, 'mmol'],\n\t[StandardUnits.umol, '\\u{03BC}mol', 'umol'],\n\t[StandardUnits.nmol, 'nmol'],\n\n\t[StandardUnits.ppm, 'ppm'],\n\t[StandardUnits.ppb, 'ppb'],\n];\n\nconst PAIR_UNIT_MINCHI:any[] =\n[\n\t// [enum type, MInChI type, scaling] ... scaling factor is for going from standard to MInChI\n\t[StandardUnits.pc, 'pp', 1],\n\t[StandardUnits.pcWV, 'wv', 0.01],\n\t[StandardUnits.pcWW, 'wf', 0.01],\n\t[StandardUnits.pcVV, 'vf', 0.01],\n\t[StandardUnits.pcMM, 'mf', 0.01],\n\t[StandardUnits.ratio, 'rt', 1],\n\t[StandardUnits.mol_L, 'mr', 1],\n\t[StandardUnits.mmol_L, 'mr', 1E-3],\n\t[StandardUnits.umol_L, 'mr', 1E-6],\n\t[StandardUnits.nmol_L, 'mr', 1E-9],\n\t[StandardUnits.pmol_L, 'mr', 1E-12],\n\t/*[StandardUnits.logM, '', ],\n\t[StandardUnits.perM, '', ],*/\n\t[StandardUnits.g_L, 'wv', 1E-3],\n\t[StandardUnits.mg_L, 'wv', 1E-6],\n\t[StandardUnits.ug_L, 'wv', 1E-9],\n\t[StandardUnits.mg_mL, 'wv', 1E-3],\n\t[StandardUnits.mol_kg, 'mb', 1],\n\t[StandardUnits.ppm, 'pp', 1E-6],\n\t[StandardUnits.ppb, 'pp', 1E-9],\n];\n\nexport class Units\n{\n\tpublic static STANDARD_LIST:string[] = []; // all of the applicable unit URIs\n\tpublic static COMMON_NAMES:string[] = []; // all of the preferred names (same order as above)\n\tpublic static URI_TO_NAME:Record<string, string> = {}; // each URI has one preferred display name\n\tpublic static NAME_TO_URI:Record<string, string> = {}; // multiple unit forms can point to the same URI\n\tpublic static URI_TO_MINCHI:Record<string, [string, number]> = {}; // URI to MInChI, when applicable\n\n\tpublic static setup():void\n\t{\n\t\tfor (let pair of PAIR_UNIT_NAMES)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1];\n\t\t\tthis.STANDARD_LIST.push(uri);\n\t\t\tthis.COMMON_NAMES.push(name);\n\t\t\tthis.URI_TO_NAME[uri] = name;\n\t\t\t\n\t\t\t//this.NAME_TO_URI[name] = uri; (some of them have alternate names)\n\t\t\tfor (let n = 1; n <= pair.length; n++) this.NAME_TO_URI[pair[n]] = uri;\n\t\t}\n\t\tfor (let pair of PAIR_UNIT_MINCHI)\n\t\t{\n\t\t\tlet uri:string = pair[0], name:string = pair[1], scale:number = pair[2];\n\t\t\tthis.URI_TO_MINCHI[uri] = [name, scale];\n\t\t}\n\t\tthis.setup = () => {}; // calling it again is a nop\n\t}\n\n\tpublic static standardList():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.STANDARD_LIST;\n\t}\n\tpublic static commonNames():string[]\n\t{\n\t\tthis.setup();\n\t\treturn this.COMMON_NAMES;\n\t}\n\tpublic static uriToName(uri:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.URI_TO_NAME[uri];\n\t}\n\tpublic static nameToURI(name:string):string\n\t{\n\t\tthis.setup();\n\t\treturn this.NAME_TO_URI[name];\n\t}\n\n\t// converts a uri/value pair into mnemonic/value, ready to be exported to MInChI-style units; if the URI is not in the list of\n\t// things that can be converted, returns nulls\n\tpublic static convertToMInChI(uri:string, values:number[]):[string, number[]]\n\t{\n\t\tlet [mnemonic, scale] = this.URI_TO_MINCHI[uri] || [null, null];\n\t\tif (!mnemonic) return [null, null];\n\t\treturn [mnemonic, Vec.mul(values, scale)];\n\t}\n}\n\n","import { fltEqual } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { ForeignMoleculeTransient } from './ForeignMolecule';\nimport { Graph } from './Graph';\nexport var DotPathBond;\n(function (DotPathBond) {\n    DotPathBond[DotPathBond[\"O0\"] = 0] = \"O0\";\n    DotPathBond[DotPathBond[\"O01\"] = 1] = \"O01\";\n    DotPathBond[DotPathBond[\"O1\"] = 2] = \"O1\";\n    DotPathBond[DotPathBond[\"O12\"] = 3] = \"O12\";\n    DotPathBond[DotPathBond[\"O2\"] = 4] = \"O2\";\n    DotPathBond[DotPathBond[\"O23\"] = 5] = \"O23\";\n    DotPathBond[DotPathBond[\"O3\"] = 6] = \"O3\";\n    DotPathBond[DotPathBond[\"O3X\"] = 7] = \"O3X\";\n})(DotPathBond || (DotPathBond = {}));\nexport var DotPathCharge;\n(function (DotPathCharge) {\n    DotPathCharge[DotPathCharge[\"N1X\"] = -3] = \"N1X\";\n    DotPathCharge[DotPathCharge[\"N1\"] = -2] = \"N1\";\n    DotPathCharge[DotPathCharge[\"N01\"] = -1] = \"N01\";\n    DotPathCharge[DotPathCharge[\"Z0\"] = 0] = \"Z0\";\n    DotPathCharge[DotPathCharge[\"P01\"] = 1] = \"P01\";\n    DotPathCharge[DotPathCharge[\"P1\"] = 2] = \"P1\";\n    DotPathCharge[DotPathCharge[\"P1X\"] = 3] = \"P1X\";\n})(DotPathCharge || (DotPathCharge = {}));\nexport class DotPath {\n    constructor(mol) {\n        this.mol = mol;\n        this.paths = [];\n        if (mol)\n            this.calculate();\n    }\n    clone() {\n        let dup = new DotPath(null);\n        dup.mol = this.mol;\n        dup.maskBlock = this.maskBlock;\n        dup.paths = this.paths.slice(0);\n        return dup;\n    }\n    getBondOrders() {\n        const mol = this.mol;\n        let orders = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            orders.push(mol.bondOrder(n));\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            for (let n = 1; n <= 5; n++)\n                if (fltEqual(fract, n))\n                    fract = n;\n            for (let b of path.bonds)\n                orders[b - 1] = fract;\n        }\n        return orders;\n    }\n    getBondClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bo = mol.bondOrder(n);\n            classes.push(bo == 0 ? 0 :\n                bo == 1 ? 2 :\n                    bo == 2 ? 4 :\n                        bo == 3 ? 6 : 7);\n        }\n        for (let path of this.paths) {\n            let fract = path.numer / path.denom;\n            let bcls = fltEqual(fract, 0) ? 0 :\n                fltEqual(fract, 1) ? 2 :\n                    fltEqual(fract, 2) ? 4 :\n                        fltEqual(fract, 3) ? 6 :\n                            fract < 1 ? 1 :\n                                fract < 2 ? 3 :\n                                    fract < 3 ? 5 : 7;\n            for (let b of path.bonds)\n                classes[b - 1] = bcls;\n        }\n        return classes;\n    }\n    getChargeClasses() {\n        const mol = this.mol;\n        let classes = [];\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let chg = mol.atomCharge(n);\n            classes.push(chg == 0 ? 0 :\n                chg == -1 ? -2 :\n                    chg == 1 ? 2 :\n                        chg < -1 ? -3 : 3);\n        }\n        for (let path of this.paths) {\n            let chg = 0;\n            for (let a of path.atoms)\n                chg += mol.atomCharge(a);\n            chg /= path.atoms.length;\n            let ccls = fltEqual(chg, 0) ? 0 :\n                fltEqual(chg, -1) ? -2 :\n                    fltEqual(chg, 1) ? 2 :\n                        chg > -1 && chg < 0 ? -1 :\n                            chg > 0 && chg < 1 ? 1 :\n                                chg < -1 ? -3 : 3;\n            for (let a of path.atoms)\n                classes[a - 1] = ccls;\n        }\n        return classes;\n    }\n    getAggregateCharges() {\n        const mol = this.mol;\n        let chg = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            chg[n - 1] = mol.atomCharge(n);\n        for (let path of this.paths) {\n            let total = 0;\n            for (let a of path.atoms)\n                total += chg[a - 1];\n            for (let a of path.atoms)\n                chg[a - 1] = total;\n        }\n        return chg;\n    }\n    toString() {\n        let str = 'blocking=' + JSON.stringify(this.maskBlock) + '; paths=' + this.paths.length;\n        for (let p of this.paths)\n            str += ' [' + p.numer + '/' + p.denom + ';a=' + JSON.stringify(p.atoms) + ';b=' + JSON.stringify(p.bonds) + ']';\n        return str;\n    }\n    calculate() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let nonsingle = Vec.booleanArray(false, na), pibonded = Vec.booleanArray(false, na), metalbonded = Vec.booleanArray(false, na);\n        let bondsum = Vec.numberArray(0, na);\n        for (let n = 0; n < na; n++)\n            bondsum[n] = mol.atomHydrogens(n + 1);\n        for (let n = 1; n <= nb; n++) {\n            let bo = mol.bondOrder(n), bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (bo != 1) {\n                nonsingle[bfr - 1] = true;\n                nonsingle[bto - 1] = true;\n            }\n            if (bo >= 2) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n            else {\n                let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)], blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n                if (blk1 >= 3 || blk2 >= 3) {\n                    metalbonded[bfr - 1] = true;\n                    metalbonded[bto - 1] = true;\n                }\n            }\n            bondsum[bfr - 1] += bo;\n            bondsum[bto - 1] += bo;\n            if (mol.bondTransient(n).indexOf(ForeignMoleculeTransient.BondAromatic) >= 0) {\n                pibonded[bfr - 1] = true;\n                pibonded[bto - 1] = true;\n            }\n        }\n        let impliedPi = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++)\n            if (!pibonded[n - 1]) {\n                let adjpi = 0;\n                for (let adj of mol.atomAdjList(n))\n                    if (pibonded[adj - 1] || metalbonded[adj - 1])\n                        adjpi++;\n                if (adjpi >= 2)\n                    impliedPi[n - 1] = true;\n            }\n        for (let n = 0; n < na; n++)\n            if (impliedPi[n])\n                pibonded[n] = true;\n        this.maskBlock = Vec.booleanArray(false, na);\n        let maskMaybe = Vec.booleanArray(false, na);\n        const COULD_BLOCK = [\n            Chemistry.ELEMENT_H,\n            Chemistry.ELEMENT_B, Chemistry.ELEMENT_C, Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si, Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge, Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn, Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb, Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        const ACIDS = [\n            Chemistry.ELEMENT_B,\n            Chemistry.ELEMENT_Al, Chemistry.ELEMENT_Si,\n            Chemistry.ELEMENT_Ga, Chemistry.ELEMENT_Ge,\n            Chemistry.ELEMENT_In, Chemistry.ELEMENT_Sn,\n            Chemistry.ELEMENT_Tl, Chemistry.ELEMENT_Pb,\n        ];\n        const BASES = [\n            Chemistry.ELEMENT_N, Chemistry.ELEMENT_O, Chemistry.ELEMENT_F,\n            Chemistry.ELEMENT_P, Chemistry.ELEMENT_S, Chemistry.ELEMENT_Cl,\n            Chemistry.ELEMENT_As, Chemistry.ELEMENT_Se, Chemistry.ELEMENT_Br,\n            Chemistry.ELEMENT_Sb, Chemistry.ELEMENT_Te, Chemistry.ELEMENT_I,\n            Chemistry.ELEMENT_Bi, Chemistry.ELEMENT_Po, Chemistry.ELEMENT_At,\n        ];\n        skip: for (let n = 0; n < na; n++) {\n            const a = n + 1;\n            if (nonsingle[n] || pibonded[n])\n                continue;\n            if (mol.atomCharge(a) != 0 || mol.atomUnpaired(a) != 0)\n                continue;\n            const atno = mol.atomicNumber(a);\n            if (atno == 0) {\n                this.maskBlock[n] = true;\n                continue;\n            }\n            if (COULD_BLOCK.indexOf(atno) < 0)\n                continue;\n            if (bondsum[n] != Chemistry.ELEMENT_BONDING[atno])\n                continue;\n            if (ACIDS.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (BASES.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            if (BASES.indexOf(atno) >= 0) {\n                for (let adj of mol.atomAdjList(a))\n                    if (ACIDS.indexOf(mol.atomicNumber(adj)) >= 0)\n                        continue skip;\n            }\n            maskMaybe[n] = true;\n            if (atno == Chemistry.ELEMENT_C) {\n                let hasMetal = false;\n                for (let adj of mol.atomAdjList(a))\n                    if (COULD_BLOCK.indexOf(mol.atomicNumber(adj)) < 0)\n                        hasMetal = true;\n                if (!hasMetal)\n                    this.maskBlock[n] = true;\n            }\n            else if (atno == Chemistry.ELEMENT_H) {\n                this.maskBlock[n] = true;\n            }\n        }\n        skip: for (let n = 0; n < na; n++)\n            if (maskMaybe[n] && !this.maskBlock[n]) {\n                for (let a of mol.atomAdjList(n + 1))\n                    if (!maskMaybe[a - 1])\n                        continue skip;\n                this.maskBlock[n] = true;\n            }\n        let g = Graph.fromMolecule(mol);\n        for (let n = 0; n < na; n++)\n            if (this.maskBlock[n])\n                g.isolateNode(n);\n        for (let cc of g.calculateComponentGroups()) {\n            if (cc.length == 1)\n                continue;\n            let amask = Vec.idxMask(cc, na);\n            Vec.addTo(cc, 1);\n            let p = {\n                atoms: cc,\n                bonds: [],\n                numer: 0,\n                denom: 0\n            };\n            for (let n = 1; n <= nb; n++)\n                if (amask[mol.bondFrom(n) - 1] && amask[mol.bondTo(n) - 1])\n                    p.bonds.push(n);\n            let totalHave = 0, totalWant = 0;\n            for (let a of p.atoms) {\n                let others = mol.atomHydrogens(a);\n                for (let o of mol.atomAdjList(a))\n                    if (!amask[o - 1])\n                        others++;\n                let atno = mol.atomicNumber(a);\n                let have = Chemistry.ELEMENT_VALENCE[atno] - mol.atomCharge(a) - others;\n                let want = Chemistry.ELEMENT_SHELL[atno] - Chemistry.ELEMENT_VALENCE[atno] - others;\n                totalHave += have;\n                totalWant += want;\n            }\n            let electrons = Math.min(totalHave, totalWant);\n            p.numer = electrons;\n            p.denom = 2 * p.bonds.length;\n            this.paths.push(p);\n        }\n    }\n}\n//# sourceMappingURL=DotPath.js.map","import { GeomUtil } from '../util/Geom';\nimport { angleDiff, angleDiffPos, DEGRAD, norm2_xyz, norm_xyz } from '../util/util';\nimport { Permutation, Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nclass Stereochemistry {\n    constructor(meta) {\n        this.meta = meta;\n        this.mol = meta.mol;\n        this.priority = Vec.numberArray(0, this.mol.numAtoms);\n        this.chiralTetra = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n        this.cistransBond = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numBonds);\n        this.squarePlanar = Vec.numberArray(Stereochemistry.STEREO_NONE, this.mol.numAtoms);\n    }\n    calculate() {\n        this.isH = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = this.mol.numAtoms; n >= 1; n--)\n            this.isH[n - 1] = this.mol.atomElement(n) == 'H';\n        this.buildPriority();\n        this.buildTetraChirality();\n        this.buildBondCisTrans();\n        this.buildPlanarCisTrans();\n        this.buildOctaChirality();\n    }\n    atomPriority(atom) { return this.priority[atom - 1]; }\n    atomTetraChirality(atom) { return this.chiralTetra[atom - 1]; }\n    bondSideStereo(bond) { return this.cistransBond[bond - 1]; }\n    atomPlanarStereo(atom) { return this.squarePlanar[atom - 1]; }\n    getPriorities() { return this.priority.slice(0); }\n    getAtomTetraChiral() { return this.chiralTetra.slice(0); }\n    getBondSideStereo() { return this.cistransBond.slice(0); }\n    static create(meta) {\n        let stereo = new Stereochemistry(meta);\n        stereo.calculate();\n        return stereo;\n    }\n    static rubricTetrahedral(mol, atom) {\n        if (mol.atomAdjCount(atom) < 3 || mol.atomAdjCount(atom) + mol.atomHydrogens(atom) != 4)\n            return null;\n        let adjBonds = mol.atomAdjBonds(atom);\n        let hasWedge = false;\n        for (let n = 0; n < adjBonds.length; n++) {\n            let bt = mol.bondType(adjBonds[n]);\n            if (bt == Molecule.BONDTYPE_UNKNOWN)\n                return null;\n            if (mol.bondFrom(adjBonds[n]) != atom)\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                hasWedge = true;\n        }\n        if (!hasWedge && !mol.is3D())\n            return null;\n        let adj = mol.atomAdjList(atom);\n        let x = [0, 0, 0, 0];\n        let y = [0, 0, 0, 0];\n        let z = [0, 0, 0, 0];\n        let numShort = 0, numWedges = 0;\n        for (let n = 0; n < adjBonds.length; n++) {\n            const bfr = mol.bondFrom(adjBonds[n]), bt = mol.bondType(adjBonds[n]);\n            x[n] = mol.atomX(adj[n]) - mol.atomX(atom);\n            y[n] = mol.atomY(adj[n]) - mol.atomY(atom);\n            if (mol.is3D()) {\n                z[n] = mol.atomZ(adj[n]) - mol.atomZ(atom);\n            }\n            else if (bfr == atom) {\n                if (bt == Molecule.BONDTYPE_INCLINED) {\n                    z[n] = 1;\n                    numWedges++;\n                }\n                else if (bt == Molecule.BONDTYPE_DECLINED) {\n                    z[n] = -1;\n                    numWedges++;\n                }\n            }\n            let dsq = norm_xyz(x[n], y[n], z[n]);\n            if (dsq < 0.01 * 0.01) {\n                numShort++;\n                if (numShort > 1)\n                    return null;\n            }\n        }\n        if (adjBonds.length == 3) {\n            adj.push(0);\n            if (!mol.is3D() && numWedges == 1) {\n                let th0 = Math.atan2(y[0], x[0]), th1 = Math.atan2(y[1], x[1]), th2 = Math.atan2(y[2], x[2]);\n                let i1 = 1, i2 = 2;\n                if (angleDiffPos(th1, th0) > angleDiffPos(th2, th0)) {\n                    i2 = 1;\n                    i1 = 2;\n                }\n                x[0] = 1.5;\n                y[0] = 0;\n                x[1] = -0.75;\n                y[i1] = 1.3;\n                x[2] = -0.75;\n                y[i2] = -1.3;\n            }\n            else {\n                x[3] = -(x[0] + x[1] + x[2]);\n                y[3] = -(y[0] + y[1] + y[2]);\n                z[3] = -(z[0] + z[1] + z[2]);\n                let dsq = norm2_xyz(x[3], y[3], z[3]);\n                if (dsq < 0.01 * 0.01)\n                    return null;\n                let inv = 1.0 / Math.sqrt(dsq);\n                x[3] *= inv;\n                y[3] *= inv;\n                z[3] *= inv;\n            }\n        }\n        let one = 0, two = 0;\n        for (let i = 1; i <= 6; i++) {\n            let a = 0, b = 0;\n            if (i == 1) {\n                a = 1;\n                b = 2;\n            }\n            else if (i == 2) {\n                a = 2;\n                b = 3;\n            }\n            else if (i == 3) {\n                a = 3;\n                b = 1;\n            }\n            else if (i == 4) {\n                a = 2;\n                b = 1;\n            }\n            else if (i == 5) {\n                a = 3;\n                b = 2;\n            }\n            else if (i == 6) {\n                a = 1;\n                b = 3;\n            }\n            let xx = y[a] * z[b] - y[b] * z[a] - x[0];\n            let yy = z[a] * x[b] - z[b] * x[a] - y[0];\n            let zz = x[a] * y[b] - x[b] * y[a] - z[0];\n            if (i <= 3)\n                one += xx * xx + yy * yy + zz * zz;\n            else\n                two += xx * xx + yy * yy + zz * zz;\n        }\n        if (two > one)\n            Vec.swap(adj, 2, 3);\n        return adj;\n    }\n    static rubricSquarePlanar(mol, atom) {\n        if (mol.atomAdjCount(atom) != 4)\n            return null;\n        if (!mol.is3D()) {\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(atom)) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    ninc++;\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    ndec++;\n            }\n            if (ninc == 2 && ndec == 2) { }\n            else if (ninc == 2 && ndec == 0) { }\n            else if (ninc == 0 && ndec == 2) { }\n            else\n                return null;\n        }\n        let adj = mol.atomAdjList(atom);\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v1 = Vec.sub(MolUtil.atomVec3(mol, adj[0]), v0);\n        let v2 = Vec.sub(MolUtil.atomVec3(mol, adj[1]), v0);\n        let v3 = Vec.sub(MolUtil.atomVec3(mol, adj[2]), v0);\n        let v4 = Vec.sub(MolUtil.atomVec3(mol, adj[3]), v0);\n        for (let v of [v1, v2, v3, v4]) {\n            let dsq = norm2_xyz(v[0], v[1], v[2]);\n            if (dsq < 0.01 * 0.01)\n                continue;\n            let inv = 1.0 / Math.sqrt(dsq);\n            v[0] *= inv;\n            v[1] *= inv;\n            v[2] *= inv;\n        }\n        let d2 = GeomUtil.dist2(v1, v2), d3 = GeomUtil.dist2(v1, v3), d4 = GeomUtil.dist2(v1, v4);\n        if (d2 > d3 && d2 >= d4) {\n            Vec.swap(adj, 1, 2);\n            [v2, v3] = [v3, v2];\n        }\n        else if (d4 > d3) {\n            Vec.swap(adj, 3, 2);\n            [v3, v4] = [v4, v3];\n        }\n        const MIN_ANGLE = (mol.is3D() ? 80 : 45) * DEGRAD;\n        const MAX_ANGLE = (mol.is3D() ? 100 : 135) * DEGRAD;\n        const th12 = GeomUtil.acuteAngle(v1, v2);\n        if (th12 < MIN_ANGLE || th12 > MAX_ANGLE)\n            return null;\n        const th23 = GeomUtil.acuteAngle(v2, v3);\n        if (th23 < MIN_ANGLE || th23 > MAX_ANGLE)\n            return null;\n        const th34 = GeomUtil.acuteAngle(v3, v4);\n        if (th34 < MIN_ANGLE || th34 > MAX_ANGLE)\n            return null;\n        const th41 = GeomUtil.acuteAngle(v4, v1);\n        if (th41 < MIN_ANGLE || th41 > MAX_ANGLE)\n            return null;\n        return adj;\n    }\n    static rubricBipyrimidal(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 4 && nadj != 5)\n            return null;\n        let atom2 = 0, atom3 = 0;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (!mol.is3D()) {\n            for (let n = 0; n < adj.length; n++) {\n                if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_INCLINED) {\n                    if (atom2 > 0)\n                        return null;\n                    atom2 = adj[n];\n                }\n                else if (mol.bondType(bonds[n]) == Molecule.BONDTYPE_DECLINED) {\n                    if (atom3 > 0)\n                        return null;\n                    atom3 = adj[n];\n                }\n            }\n            if (atom2 == 0 || atom3 == 0)\n                return null;\n            let th1 = Math.atan2(mol.atomY(atom2) - mol.atomY(atom), mol.atomX(atom2) - mol.atomX(atom));\n            let th2 = Math.atan2(mol.atomY(atom3) - mol.atomY(atom), mol.atomX(atom3) - mol.atomX(atom));\n            if (Math.abs(angleDiff(th1, th2)) > 160 * DEGRAD)\n                return null;\n        }\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], []];\n        const THRESH = 0.1;\n        for (let n = 0; n < nadj; n++) {\n            v[n] = Vec.sub(MolUtil.atomVec3(mol, adj[n]), v0);\n            const mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1.0 / mag);\n            if (adj[n] == atom2)\n                v[n][2] += 1;\n            else if (adj[n] == atom3)\n                v[n][2] -= 1;\n        }\n        let atom4 = 0, atom5 = 0;\n        const ANGLE_OPPOSITE = 175 * DEGRAD;\n        for (let i = 0; i < nadj - 1; i++)\n            if (adj[i] != atom2 && adj[i] != atom3) {\n                for (let j = i + 1; j < nadj; j++)\n                    if (adj[j] != atom2 && adj[j] != atom3) {\n                        let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                        if (theta > ANGLE_OPPOSITE) {\n                            if (atom4 != 0)\n                                return null;\n                            atom4 = adj[i];\n                            atom5 = adj[j];\n                        }\n                    }\n            }\n        if (mol.is3D()) {\n            for (let a of adj)\n                if (a != atom4 && a != atom5) {\n                    if (atom2 == 0)\n                        atom2 = a;\n                    else if (atom3 == 0)\n                        atom3 = a;\n                }\n        }\n        if (!atom4 || !atom5)\n            return null;\n        let v1 = null;\n        let v2 = v[adj.indexOf(atom2)];\n        let v3 = v[adj.indexOf(atom3)];\n        let v4 = v[adj.indexOf(atom4)];\n        let v5 = v[adj.indexOf(atom5)];\n        let atom1 = 0;\n        if (nadj == 5) {\n            for (let n = 0; n < nadj; n++)\n                if (adj[n] != atom2 && adj[n] != atom3 && adj[n] != atom4 && adj[n] != atom5) {\n                    atom1 = adj[n];\n                    v1 = v[n];\n                    break;\n                }\n        }\n        else {\n            v1 = [0, 0, 0];\n            v1 = Vec.sub(v1, v2);\n            v1 = Vec.sub(v1, v3);\n            const mag = GeomUtil.magnitude(v1);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v1, 1.0 / mag);\n        }\n        let v45 = Vec.sub(v5, v4);\n        let cross = GeomUtil.crossProduct(v45, v1);\n        let dsq2 = GeomUtil.dist2(cross, v2), dsq3 = GeomUtil.dist2(cross, v3);\n        if (dsq2 < dsq3)\n            return [atom1, atom2, atom3, atom4, atom5];\n        else\n            return [atom1, atom2, atom3, atom5, atom4];\n    }\n    static rubricOctahedral(mol, atom) {\n        const nadj = mol.atomAdjCount(atom);\n        if (nadj != 5 && nadj != 6)\n            return null;\n        let adj = mol.atomAdjList(atom), bonds = mol.atomAdjBonds(atom);\n        if (nadj == 5) {\n            adj.push(0);\n            bonds.push(0);\n        }\n        if (!mol.is3D()) {\n            let numWedges = 0;\n            for (let b of bonds)\n                if (b > 0) {\n                    const bt = mol.bondType(b);\n                    if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                        numWedges++;\n                }\n            if ((nadj == 5 && numWedges < 1) || (nadj == 6 && numWedges < 2))\n                return null;\n        }\n        const THRESH = 0.1;\n        let v0 = MolUtil.atomVec3(mol, atom);\n        let v = [[], [], [], [], [], []];\n        for (let n = 0; n < nadj; n++) {\n            v[n] = MolUtil.atomVec3(mol, adj[n]);\n            Vec.subFromArray(v[n], v0);\n            let mag = GeomUtil.magnitude(v[n]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[n], 1 / mag);\n            let bt = mol.bondType(bonds[n]);\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] += 1;\n                else\n                    v[n][2] -= 1;\n            }\n            else if (bt == Molecule.BONDTYPE_DECLINED) {\n                if (mol.bondFrom(bonds[n]) == atom)\n                    v[n][2] -= 1;\n                else\n                    v[n][2] += 1;\n            }\n        }\n        if (nadj == 5) {\n            v[5] = [0, 0, 0];\n            for (let n = 0; n < 5; n++)\n                Vec.subFromArray(v[5], v[n]);\n            let mag = GeomUtil.magnitude(v[5]);\n            if (mag < THRESH)\n                return null;\n            Vec.mulBy(v[5], 1 / mag);\n        }\n        let slots = [-1, -1, -1, -1, 0, 1];\n        let bestOpposite = GeomUtil.acuteAngle(v[0], v[1]);\n        for (let i = 0; i < 5; i++)\n            for (let j = (i == 0 ? 2 : i + 1); j < 6; j++) {\n                let theta = GeomUtil.acuteAngle(v[i], v[j]);\n                if (theta > bestOpposite) {\n                    slots[4] = i;\n                    slots[5] = j;\n                    bestOpposite = theta;\n                }\n            }\n        let axial = Vec.sub(v[slots[5]], v[slots[4]]);\n        let bestOrthogonal = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 6; n++)\n            if (n != slots[4] && n != slots[5]) {\n                let delta = Math.abs((90 * DEGRAD) - GeomUtil.acuteAngle(v[n], axial));\n                if (delta < bestOrthogonal) {\n                    slots[0] = n;\n                    bestOrthogonal = delta;\n                }\n            }\n        for (let s = 1; s <= 2; s++) {\n            let cross = GeomUtil.crossProduct(axial, v[slots[s - 1]]);\n            let bestOrient = Number.POSITIVE_INFINITY;\n            for (let n = 0; n < 6; n++) {\n                if (n == slots[4] || n == slots[5] || n == slots[0] || n == slots[1])\n                    continue;\n                let delta = GeomUtil.acuteAngle(v[n], cross);\n                if (delta < bestOrient) {\n                    slots[s] = n;\n                    bestOrient = delta;\n                }\n            }\n        }\n        for (let n = 0; n < 6; n++)\n            if (slots.indexOf(n) < 0) {\n                slots[3] = n;\n                break;\n            }\n        let rubric = [0, 0, 0, 0, 0, 0];\n        for (let n = 0; n < 6; n++)\n            rubric[n] = slots[n] < 0 ? 0 : adj[slots[n]];\n        return rubric;\n    }\n    static rubricBondSides(mol, bond) {\n        const bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        const nfr = mol.atomAdjCount(bfr), nto = mol.atomAdjCount(bto);\n        if (nfr < 2 || nfr > 3 || nto < 2 || nto > 3)\n            return null;\n        let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n        let f1 = 0, f2 = 0, t1 = 0, t2 = 0;\n        for (let i = 0; i < adj1.length; i++) {\n            if (adj1[i] != bto) {\n                if (f1 == 0)\n                    f1 = adj1[i];\n                else\n                    f2 = adj1[i];\n            }\n        }\n        for (let i = 0; i < adj2.length; i++) {\n            if (adj2[i] != bfr) {\n                if (t1 == 0)\n                    t1 = adj2[i];\n                else\n                    t2 = adj2[i];\n            }\n        }\n        if (f1 > 0 && f2 > 0 && mol.atomElement(f1) == 'H') {\n            let f = f1;\n            f1 = f2;\n            f2 = f;\n        }\n        if (t1 > 0 && t2 > 0 && mol.atomElement(t1) == 'H') {\n            let t = t1;\n            t1 = t2;\n            t2 = t;\n        }\n        let vfr = MolUtil.atomVec3(mol, bfr), vto = MolUtil.atomVec3(mol, bto);\n        let vbond = Vec.sub(vto, vfr);\n        let vf1 = Vec.sub(MolUtil.atomVec3(mol, f1), vfr), vt1 = Vec.sub(MolUtil.atomVec3(mol, t1), vto);\n        const THRESHSQ = 0.1 * 0.1;\n        let xf1 = GeomUtil.crossProduct(vf1, vbond);\n        if (GeomUtil.magnitude2(xf1) < THRESHSQ)\n            return null;\n        let xt1 = GeomUtil.crossProduct(vt1, vbond);\n        if (GeomUtil.magnitude2(xt1) < THRESHSQ)\n            return null;\n        let xf1N = Vec.neg(xf1);\n        let keepF1T1 = GeomUtil.dist2(xf1, xt1) < GeomUtil.dist2(xf1N, xt1);\n        let keepF2T1 = keepF1T1, keepF1T2 = keepF1T1, keepF2T2 = keepF1T1;\n        let vf2 = null, vt2 = null, xf2 = null, xt2 = null, xf2N = null;\n        if (f2 > 0) {\n            vf2 = Vec.sub(MolUtil.atomVec3(mol, f2), vfr);\n            if (GeomUtil.magnitude2(vf2) < THRESHSQ) {\n                if (mol.atomElement(f2) != 'H')\n                    return null;\n            }\n            else {\n                xf2 = GeomUtil.crossProduct(vf2, vbond);\n                if (GeomUtil.magnitude2(xf2) < THRESHSQ)\n                    return null;\n                xf2N = Vec.neg(xf2);\n                keepF2T1 = GeomUtil.dist2(xf2, xt1) > GeomUtil.dist2(xf2N, xt1);\n            }\n        }\n        if (t2 > 0) {\n            vt2 = Vec.sub(MolUtil.atomVec3(mol, t2), vto);\n            if (GeomUtil.magnitude2(vt2) < THRESHSQ) {\n                if (mol.atomElement(t2) != 'H')\n                    return null;\n            }\n            else {\n                xt2 = GeomUtil.crossProduct(vt2, vbond);\n                if (GeomUtil.magnitude2(xt2) < THRESHSQ)\n                    return null;\n                keepF1T2 = GeomUtil.dist2(xf1, xt2) > GeomUtil.dist2(xf1N, xt2);\n            }\n        }\n        if (xf2 != null && xt2 != null) {\n            keepF2T2 = GeomUtil.dist2(xf2, xt2) < GeomUtil.dist2(xf2N, xt2);\n        }\n        if (keepF1T1 && keepF2T1 && keepF1T2 && keepF2T2)\n            return [f1, f2, t1, t2];\n        if (!keepF1T1 && !keepF2T1 && !keepF1T2 && !keepF2T2)\n            return [f1, f2, t2, t1];\n        return null;\n    }\n    buildTetraChirality() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let haswedge = Vec.booleanArray(false, na);\n        for (let n = 1; n <= nb; n++) {\n            if (mol.bondType(n) == Molecule.BONDTYPE_INCLINED || mol.bondType(n) == Molecule.BONDTYPE_DECLINED)\n                haswedge[mol.bondFrom(n) - 1] = true;\n        }\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.chiralTetra[n - 1] = Stereochemistry.STEREO_NONE;\n            let adj = mol.atomAdjList(n);\n            if (!(adj.length == 4 || (adj.length == 3 && mol.atomHydrogens(n) == 1)))\n                continue;\n            if (adj.length == 3 && (this.isH[adj[0] - 1] || this.isH[adj[1] - 1] || this.isH[adj[2] - 1]))\n                continue;\n            for (let i = 0; i < adj.length - 1; i++) {\n                for (let j = i + 1; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        continue skip_atom;\n                }\n            }\n            if (!haswedge[n - 1] && !mol.is3D()) {\n                this.chiralTetra[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricTetrahedral(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            pri = Vec.idxSort(pri);\n            let parity = Permutation.parityIdentity(pri);\n            this.chiralTetra[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildBondCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let sf = [0, 0], st = [0, 0];\n        let ringMask = Vec.booleanArray(false, nb);\n        for (let rsz = 3; rsz <= 7; rsz++) {\n            for (let r of mol.findRingsOfSize(rsz)) {\n                for (let n = 0; n < r.length; n++) {\n                    let b = mol.findBond(r[n], r[n < r.length - 1 ? n + 1 : 0]);\n                    ringMask[b - 1] = true;\n                }\n            }\n        }\n        skip_bond: for (let n = 1; n <= nb; n++) {\n            this.cistransBond[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.bondOrder(n) != 2 || this.meta.isBondAromatic(n) || ringMask[n - 1])\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let adj1 = mol.atomAdjList(bfr), adj2 = mol.atomAdjList(bto);\n            if (adj1.length <= 1 || adj2.length <= 1 || adj1.length > 3 || adj2.length > 3)\n                continue;\n            if (adj1.length == 2 && (this.isH[adj1[0] - 1] || this.isH[adj1[1] - 1]))\n                continue;\n            if (adj2.length == 2 && (this.isH[adj2[0] - 1] || this.isH[adj2[1] - 1]))\n                continue;\n            for (let i = 0; i < adj1.length - 1; i++)\n                if (adj1[i] != bfr)\n                    for (let j = i + 1; j < adj1.length; j++)\n                        if (adj1[j] != bfr)\n                            if (this.priority[adj1[i] - 1] == this.priority[adj1[j] - 1])\n                                continue skip_bond;\n            for (let i = 0; i < adj2.length - 1; i++)\n                if (adj2[i] != bto)\n                    for (let j = i + 1; j < adj2.length; j++)\n                        if (adj2[j] != bto)\n                            if (this.priority[adj2[i] - 1] == this.priority[adj2[j] - 1])\n                                continue skip_bond;\n            if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN) {\n                this.cistransBond[n - 1] = Stereochemistry.STEREO_UNKNOWN;\n                continue;\n            }\n            let rubric = Stereochemistry.rubricBondSides(mol, n);\n            if (rubric == null)\n                continue;\n            let pf1 = rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1];\n            let pf2 = rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1];\n            let pt1 = rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1];\n            let pt2 = rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1];\n            this.cistransBond[n - 1] = ((pf1 < pf2) == (pt1 < pt2)) ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildPlanarCisTrans() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        skip_atom: for (let n = 1; n <= na; n++) {\n            this.squarePlanar[n - 1] = Stereochemistry.STEREO_NONE;\n            if (mol.atomAdjCount(n) != 4)\n                continue;\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)] < 3)\n                continue;\n            let adj = mol.atomAdjList(n);\n            for (let i = 0; i < adj.length; i++) {\n                let count = 0;\n                for (let j = 0; j < adj.length; j++) {\n                    if (this.priority[adj[i] - 1] == this.priority[adj[j] - 1])\n                        count++;\n                }\n                if (count >= 3)\n                    continue skip_atom;\n            }\n            let rubric = Stereochemistry.rubricSquarePlanar(mol, n);\n            if (rubric == null)\n                continue;\n            let pri = [\n                rubric[0] == 0 ? 0 : this.priority[rubric[0] - 1],\n                rubric[1] == 0 ? 0 : this.priority[rubric[1] - 1],\n                rubric[2] == 0 ? 0 : this.priority[rubric[2] - 1],\n                rubric[3] == 0 ? 0 : this.priority[rubric[3] - 1]\n            ];\n            let parity = Permutation.parityOrder(pri);\n            this.squarePlanar[n - 1] = (parity & 1) == 0 ? Stereochemistry.STEREO_POS : Stereochemistry.STEREO_NEG;\n        }\n    }\n    buildOctaChirality() {\n    }\n    buildPriority() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let cipgr = [];\n        for (let n = 0; n < na; n++)\n            cipgr.push(Vec.numberArray(-1, mol.atomHydrogens(n + 1)));\n        for (let n = 1; n <= nb; n++) {\n            let bf = mol.bondFrom(n) - 1, bt = mol.bondTo(n) - 1, bo = mol.bondOrder(n);\n            if (this.meta.isBondAromatic(n))\n                bo = 2;\n            if (bf != bt)\n                for (let i = 0; i < bo; i++) {\n                    cipgr[bf].push(bt);\n                    cipgr[bt].push(bf);\n                }\n        }\n        this.priority = Vec.numberArray(0, na);\n        let anyActualH = false;\n        for (let n = 0; n < na; n++) {\n            this.priority[n] = mol.atomicNumber(n + 1);\n            if (this.priority[n] == 1)\n                anyActualH = true;\n        }\n        let prigr = [];\n        for (let n = 0; n < na; n++)\n            prigr.push([]);\n        while (true) {\n            for (let n = 0; n < na; n++) {\n                let cip = cipgr[n], pri = [];\n                for (let i = 0; i < cip.length; i++)\n                    pri.push(cip[i] < 0 ? 1 : this.priority[cip[i]]);\n                Vec.sort(pri);\n                prigr[n] = pri;\n            }\n            let groups = this.sortAndGroup(this.priority);\n            let nextpri = anyActualH ? 0 : 1;\n            let repartitioned = false;\n            for (let n = 0; n < groups.length; n++) {\n                let g = groups[n];\n                for (let p = 0; p < g.length - 1;) {\n                    const i1 = g[p], i2 = g[p + 1];\n                    let cmp = 0, sz = Math.max(prigr[i1].length, prigr[i2].length);\n                    for (let i = 0; i < sz; i++) {\n                        let v1 = i < prigr[i1].length ? prigr[i1][i] : 0, v2 = i < prigr[i2].length ? prigr[i2][i] : 0;\n                        if (v1 < v2) {\n                            cmp = -1;\n                            break;\n                        }\n                        if (v1 > v2) {\n                            cmp = 1;\n                            break;\n                        }\n                    }\n                    if (cmp > 0) {\n                        g[p] = i2;\n                        g[p + 1] = i1;\n                        if (p > 0)\n                            p--;\n                    }\n                    else\n                        p++;\n                }\n                for (let i = 0; i < g.length; i++) {\n                    if (i == 0)\n                        nextpri++;\n                    else if (prigr[g[i]].length != prigr[g[i - 1]].length) {\n                        nextpri++;\n                        repartitioned = true;\n                    }\n                    else {\n                        for (let j = 0; j < prigr[g[i]].length; j++)\n                            if (prigr[g[i]][j] != prigr[g[i - 1]][j]) {\n                                nextpri++;\n                                repartitioned = true;\n                                break;\n                            }\n                    }\n                    this.priority[g[i]] = nextpri;\n                }\n            }\n            if (!repartitioned)\n                break;\n        }\n    }\n    sortAndGroup(val) {\n        let uset = new Set();\n        for (let v of val)\n            uset.add(v);\n        let unique = Array.from(uset);\n        Vec.sort(unique);\n        let ret = [];\n        for (let n = 0; n < unique.length; n++)\n            ret.push([]);\n        for (let n = 0; n < val.length; n++) {\n            let grp = unique.indexOf(val[n]);\n            ret[grp].push(n);\n        }\n        return ret;\n    }\n}\nStereochemistry.STEREO_NONE = 0;\nStereochemistry.STEREO_POS = 1;\nStereochemistry.STEREO_NEG = 2;\nStereochemistry.STEREO_UNKNOWN = 3;\nStereochemistry.STEREO_BROKEN = 4;\nStereochemistry.RUBRIC_EQUIV_TETRA = [\n    [0, 1, 2, 3], [0, 2, 3, 1], [0, 3, 1, 2], [1, 0, 3, 2], [1, 2, 0, 3], [1, 3, 2, 0],\n    [2, 0, 1, 3], [2, 1, 3, 0], [2, 3, 0, 1], [3, 0, 2, 1], [3, 1, 0, 2], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SIDES = [\n    [0, 1, 2, 3], [1, 0, 3, 2], [2, 3, 0, 1], [3, 2, 1, 0]\n];\nStereochemistry.RUBRIC_EQUIV_SQUARE = [\n    [0, 1, 2, 3], [0, 3, 2, 1], [1, 2, 3, 0], [1, 0, 3, 2],\n    [2, 1, 0, 3], [2, 3, 0, 1], [3, 2, 1, 0], [3, 0, 1, 2]\n];\nStereochemistry.RUBRIC_EQUIV_BIPY = [\n    [0, 1, 2, 3, 4], [1, 2, 0, 3, 4], [2, 0, 1, 3, 4],\n    [0, 2, 1, 4, 3], [1, 0, 2, 4, 3], [2, 1, 0, 4, 3],\n];\nStereochemistry.RUBRIC_EQUIV_OCTA = [\n    [0, 1, 2, 3, 4, 5], [0, 3, 2, 1, 5, 4], [0, 4, 2, 5, 3, 1], [0, 5, 2, 4, 1, 3],\n    [1, 0, 3, 2, 5, 4], [1, 2, 3, 0, 4, 5], [1, 4, 3, 5, 0, 2], [1, 5, 3, 4, 2, 0],\n    [2, 1, 0, 3, 5, 4], [2, 3, 0, 1, 4, 5], [2, 4, 0, 5, 1, 3], [2, 5, 0, 4, 3, 1],\n    [3, 0, 1, 2, 4, 5], [3, 2, 1, 0, 5, 4], [3, 4, 1, 5, 2, 0], [3, 5, 1, 4, 0, 2],\n    [4, 0, 5, 2, 1, 3], [4, 1, 5, 3, 2, 0], [4, 2, 5, 0, 3, 1], [4, 3, 5, 1, 0, 2],\n    [5, 0, 4, 2, 3, 1], [5, 1, 4, 3, 0, 2], [5, 2, 4, 0, 1, 3], [5, 3, 4, 1, 2, 0]\n];\nexport { Stereochemistry };\n//# sourceMappingURL=Stereochemistry.js.map","import { Vec } from '../util/Vec';\nimport { Chemistry } from './Chemistry';\nimport { DotPath } from '../mol/DotPath';\nimport { Molecule } from './Molecule';\nimport { MolUtil } from './MolUtil';\nimport { Stereochemistry } from '../mol/Stereochemistry';\nclass MetaMolecule {\n    constructor(mol) {\n        this.mol = mol;\n        this.atomArom = null;\n        this.bondArom = null;\n        this.rubricTetra = null;\n        this.rubricSquare = null;\n        this.rubricBipy = null;\n        this.rubricOcta = null;\n        this.rubricSides = null;\n        this.hash = null;\n        this.heavyHash = null;\n        this.uniqueElements = null;\n        this.dots = null;\n        this.piAtom = null;\n    }\n    calculateStrictAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        let rings = mol.findRingsOfSize(6);\n        const nr = rings.length;\n        if (nr == 0)\n            return;\n        this.ensurePiAtoms();\n        let mask = Vec.booleanArray(false, nr);\n        for (let n = 0; n < nr; n++) {\n            for (let i = 0; i < rings[n].length; i++) {\n                let a = rings[n][i];\n                if (!this.piAtom[a - 1]) {\n                    mask[n] = true;\n                    break;\n                }\n                let b = mol.findBond(a, rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                let bo = mol.bondOrder(b);\n                if (bo != 1 && bo != 2) {\n                    mask[n] = true;\n                    break;\n                }\n            }\n        }\n        while (true) {\n            let anyChange = false;\n            for (let n = 0; n < nr; n++)\n                if (!mask[n]) {\n                    let phase1 = true, phase2 = true;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        if (this.bondArom[b - 1])\n                            continue;\n                        let bo = mol.bondOrder(b);\n                        phase1 = phase1 && bo == (2 - (i & 1));\n                        phase2 = phase2 && bo == (1 + (i & 1));\n                    }\n                    if (!phase1 && !phase2)\n                        continue;\n                    for (let i = 0; i < rings[n].length; i++) {\n                        let b = mol.findBond(rings[n][i], rings[n][i == rings[n].length - 1 ? 0 : i + 1]);\n                        this.bondArom[b - 1] = true;\n                    }\n                    mask[n] = true;\n                    anyChange = true;\n                }\n            if (!anyChange)\n                break;\n        }\n        for (let n = 0; n < this.bondArom.length; n++)\n            if (this.bondArom[n]) {\n                this.atomArom[mol.bondFrom(n + 1) - 1] = true;\n                this.atomArom[mol.bondTo(n + 1) - 1] = true;\n            }\n    }\n    calculateRelaxedAromaticity() {\n        let mol = this.mol;\n        this.atomArom = Vec.booleanArray(false, mol.numAtoms);\n        this.bondArom = Vec.booleanArray(false, mol.numBonds);\n        this.ensurePiAtoms();\n        const na = mol.numAtoms, nb = mol.numBonds;\n        let electrons = Vec.numberArray(0, na);\n        let exocyclic = Vec.booleanArray(false, na);\n        for (let n = 1; n <= na; n++) {\n            let atno = mol.atomicNumber(n);\n            electrons[n - 1] = (Chemistry.ELEMENT_BLOCKS[atno] == 2 ? Chemistry.ELEMENT_VALENCE[atno] : 0) - mol.atomCharge(n) - mol.atomHydrogens(n)\n                - mol.atomUnpaired(n);\n        }\n        for (let n = 1; n <= nb; n++) {\n            const bfr = mol.bondFrom(n), bto = mol.bondTo(n), bo = mol.bondOrder(n);\n            electrons[bfr - 1] -= bo;\n            electrons[bto - 1] -= bo;\n            if (bo == 2) {\n                const rblk1 = mol.atomRingBlock(bfr), rblk2 = mol.atomRingBlock(bto);\n                if (rblk1 > 0 && rblk1 != rblk2)\n                    exocyclic[bfr - 1] = true;\n                if (rblk2 > 0 && rblk2 != rblk1)\n                    exocyclic[bto - 1] = true;\n            }\n        }\n        let rings = [];\n        for (let rsz = 3; rsz <= 7; rsz++)\n            for (let rng of mol.findRingsOfSize(rsz)) {\n                let valid = true;\n                for (let n = 0; n < rsz; n++) {\n                    const a = rng[n];\n                    if (!this.piAtom[a - 1] && electrons[a - 1] < 2 && !exocyclic[a - 1]) {\n                        valid = false;\n                        break;\n                    }\n                    let b = mol.findBond(a, rng[n < rsz - 1 ? n + 1 : 0]);\n                    let bo = mol.bondOrder(b);\n                    if (bo != 1 && bo != 2) {\n                        valid = false;\n                        break;\n                    }\n                }\n                if (valid)\n                    rings.push(rng);\n            }\n        while (rings.length > 0) {\n            let anyChange = false;\n            for (let n = 0; n < rings.length; n++) {\n                let r = rings[n];\n                let paths = [0];\n                for (let i = 0; i < r.length; i++) {\n                    const a = r[i];\n                    const b1 = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                    const b2 = mol.findBond(a, r[i > 0 ? i - 1 : r.length - 1]);\n                    if (this.bondArom[b1 - 1]) {\n                        for (let j = paths.length - 1; j >= 0; j--) {\n                            const e = paths[j] + 2;\n                            if (paths.indexOf(e) < 0)\n                                paths = Vec.append(paths, e);\n                        }\n                    }\n                    else if (mol.bondOrder(b1) == 2)\n                        Vec.addTo(paths, 2);\n                    else if (electrons[a - 1] >= 2 && mol.bondOrder(b1) == 1 && mol.bondOrder(b2) == 1)\n                        Vec.addTo(paths, 2);\n                }\n                let arom = false;\n                for (let e of paths) {\n                    if (e == 2 && r.length == 3) {\n                        arom = true;\n                        break;\n                    }\n                    if (e == 6) {\n                        arom = true;\n                        break;\n                    }\n                }\n                if (arom) {\n                    for (let i = 0; i < r.length; i++) {\n                        let a = r[i], b = mol.findBond(a, r[i < r.length - 1 ? i + 1 : 0]);\n                        this.atomArom[a - 1] = true;\n                        this.bondArom[b - 1] = true;\n                    }\n                    rings.splice(n, 1);\n                    n--;\n                    anyChange = true;\n                }\n            }\n            if (!anyChange)\n                break;\n        }\n    }\n    calculateStereoRubric() {\n        const mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        this.rubricTetra = new Array(na);\n        this.rubricSquare = new Array(na);\n        this.rubricBipy = new Array(na);\n        this.rubricOcta = new Array(na);\n        this.rubricSides = new Array(nb);\n        for (let n = 1; n <= na; n++) {\n            let blk = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(n)];\n            let adjc = mol.atomAdjCount(n), hc = mol.atomHydrogens(n);\n            let ninc = 0, ndec = 0;\n            for (let b of mol.atomAdjBonds(n)) {\n                if (mol.bondType(b) == Molecule.BONDTYPE_INCLINED && mol.bondFrom(b) == n)\n                    ninc++;\n                else if (mol.bondType(b) == Molecule.BONDTYPE_DECLINED && mol.bondFrom(b) == n)\n                    ndec++;\n            }\n            if (blk == 2 && ((adjc == 3 && hc == 1) || (adjc == 4 && hc == 0))) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            else if (blk >= 3 && adjc == 4 && ninc == 1 && ndec == 1) {\n                this.rubricTetra[n - 1] = Stereochemistry.rubricTetrahedral(mol, n);\n            }\n            if (blk >= 3 && adjc == 4 && hc == 0) {\n                this.rubricSquare[n - 1] = Stereochemistry.rubricSquarePlanar(mol, n);\n            }\n            if (blk >= 3 && (adjc == 4 || adjc == 5) && hc == 0) {\n                this.rubricBipy[n - 1] = Stereochemistry.rubricBipyrimidal(mol, n);\n            }\n            if (blk >= 3 && (adjc == 5 || adjc == 6) && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n            else if (blk == 2 && adjc == 6 && hc == 0) {\n                this.rubricOcta[n - 1] = Stereochemistry.rubricOctahedral(mol, n);\n            }\n        }\n        for (let n = 1; n <= mol.numBonds; n++) {\n            if (mol.bondOrder(n) != 2 || mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN || this.isBondAromatic(n))\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let blk1 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bfr)];\n            let blk2 = Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(bto)];\n            let adjc1 = mol.atomAdjCount(bfr), hc1 = mol.atomHydrogens(bfr);\n            let adjc2 = mol.atomAdjCount(bto), hc2 = mol.atomHydrogens(bto);\n            if (blk1 == 2 && blk2 == 2 && (adjc1 + hc1 == 3 && hc1 <= 1) && (adjc2 + hc2 == 3 && hc2 <= 1)) {\n                this.rubricSides[n - 1] = Stereochemistry.rubricBondSides(mol, n);\n            }\n        }\n    }\n    removeHydrogens() {\n        let mol = this.mol, na = mol.numAtoms, nb = mol.numBonds;\n        let atomMask = Vec.booleanArray(true, na), bondMask = Vec.booleanArray(true, nb);\n        for (let n = 1; n <= na; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                atomMask[n - 1] = false;\n                bondMask[mol.atomAdjBonds(n)[0] - 1] = false;\n            }\n        if (Vec.allTrue(atomMask))\n            return;\n        mol = MolUtil.subgraphMask(mol, atomMask);\n        if (this.atomArom)\n            this.atomArom = Vec.maskGet(this.atomArom, atomMask);\n        if (this.bondArom)\n            this.bondArom = Vec.maskGet(this.bondArom, bondMask);\n        if (this.rubricTetra || this.rubricSquare || this.rubricBipy || this.rubricOcta || this.rubricSides) {\n            if (this.rubricTetra)\n                this.rubricTetra = Vec.maskGet(this.rubricTetra, atomMask);\n            if (this.rubricSquare)\n                this.rubricSquare = Vec.maskGet(this.rubricSquare, atomMask);\n            if (this.rubricBipy)\n                this.rubricBipy = Vec.maskGet(this.rubricBipy, atomMask);\n            if (this.rubricOcta)\n                this.rubricOcta = Vec.maskGet(this.rubricOcta, atomMask);\n            if (this.rubricSides)\n                this.rubricSides = Vec.maskGet(this.rubricSides, bondMask);\n            let atomMap = Vec.prepend(Vec.add(Vec.maskMap(atomMask), 1), 0);\n            for (let n = 0; n < Vec.len(this.rubricTetra); n++)\n                if (this.rubricTetra[n])\n                    this.rubricTetra[n] = Vec.idxGet(atomMap, this.rubricTetra[n]);\n            for (let n = 0; n < Vec.len(this.rubricSquare); n++)\n                if (this.rubricSquare[n])\n                    this.rubricSquare[n] = Vec.idxGet(atomMap, this.rubricSquare[n]);\n            for (let n = 0; n < Vec.len(this.rubricBipy); n++)\n                if (this.rubricBipy[n])\n                    this.rubricBipy[n] = Vec.idxGet(atomMap, this.rubricBipy[n]);\n            for (let n = 0; n < Vec.len(this.rubricOcta); n++)\n                if (this.rubricOcta[n])\n                    this.rubricOcta[n] = Vec.idxGet(atomMap, this.rubricOcta[n]);\n            for (let n = 0; n < Vec.len(this.rubricSides); n++)\n                if (this.rubricSides[n])\n                    this.rubricSides[n] = Vec.idxGet(atomMap, this.rubricSides[n]);\n        }\n    }\n    calculateSkeletonHash() {\n        if (MetaMolecule.skeletonHash == null)\n            throw 'Skeleton hash not available.';\n        this.hash = MetaMolecule.skeletonHash(this.mol);\n    }\n    calculateHeavyHash() {\n        let anyH = false;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (this.mol.atomElement(n) == 'H') {\n                anyH = true;\n                break;\n            }\n        if (!anyH) {\n            this.heavyHash = this.getSkeletonHash();\n            return;\n        }\n        let hvy = this.mol.clone();\n        for (let n = hvy.numAtoms; n >= 1; n--)\n            if (hvy.atomElement(n) == 'H')\n                hvy.deleteAtomAndBonds(n);\n        this.heavyHash = MetaMolecule.skeletonHash(hvy);\n    }\n    isAtomAromatic(atom) {\n        return this.atomArom == null ? false : this.atomArom[atom - 1];\n    }\n    isBondAromatic(bond) {\n        return this.bondArom == null ? false : this.bondArom[bond - 1];\n    }\n    bondOrderArom(bond) {\n        return this.bondArom != null && this.bondArom[bond - 1] ? -1 : this.mol.bondOrder(bond);\n    }\n    getAtomAromaticity() {\n        return this.atomArom == null ? null : this.atomArom.slice(0);\n    }\n    getBondAromaticity() {\n        return this.bondArom == null ? null : this.bondArom.slice(0);\n    }\n    getSkeletonHash() {\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        return this.hash;\n    }\n    getHeavyHash() {\n        if (this.heavyHash == null)\n            this.calculateHeavyHash();\n        return this.heavyHash;\n    }\n    getDotPath() {\n        if (this.dots == null)\n            this.dots = new DotPath(this.mol);\n        return this.dots;\n    }\n    getUniqueElements() {\n        if (this.uniqueElements == null) {\n            this.uniqueElements = [];\n            for (let n = 1; n <= this.mol.numAtoms; n++) {\n                let el = this.mol.atomElement(n);\n                if (this.uniqueElements.indexOf(el) < 0)\n                    this.uniqueElements.push(el);\n            }\n        }\n        return this.uniqueElements;\n    }\n    equivalentTo(other, timeout = 1000) {\n        if (MetaMolecule.isomorphMatch == null)\n            throw 'Isomorph search unavailable.';\n        if (this.mol.numAtoms != other.mol.numAtoms || this.mol.numBonds != other.mol.numBonds)\n            return false;\n        if (this.hash == null)\n            this.calculateSkeletonHash();\n        if (other.hash == null)\n            other.calculateSkeletonHash();\n        if (this.hash != other.hash)\n            return false;\n        if (this.mol.compareTo(other.mol) == 0)\n            return true;\n        let uniq1 = this.getUniqueElements(), uniq2 = other.getUniqueElements();\n        for (let n = 0; n < uniq1.length; n++) {\n            if (!uniq2.includes(uniq1[n]))\n                return false;\n        }\n        return MetaMolecule.isomorphMatch(this, other, timeout);\n    }\n    static createRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createStrict(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        return meta;\n    }\n    static createStrictRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateStrictAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    static createRelaxed(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        return meta;\n    }\n    static createRelaxedRubric(mol) {\n        if (mol == null)\n            return null;\n        let meta = new MetaMolecule(mol);\n        meta.calculateRelaxedAromaticity();\n        meta.calculateStereoRubric();\n        return meta;\n    }\n    ensurePiAtoms() {\n        if (this.piAtom != null)\n            return;\n        this.piAtom = Vec.booleanArray(false, this.mol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++)\n            if (this.mol.bondOrder(n) == 2) {\n                {\n                    this.piAtom[this.mol.bondFrom(n) - 1] = true;\n                    this.piAtom[this.mol.bondTo(n) - 1] = true;\n                }\n            }\n    }\n}\nMetaMolecule.skeletonHash = null;\nMetaMolecule.isomorphMatch = null;\nexport { MetaMolecule };\n//# sourceMappingURL=MetaMolecule.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { MetaMolecule } from '../mol/MetaMolecule';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { Permutation, Vec } from '../util/Vec';\nlet crc_table = [];\nfunction make_crc_table() {\n    if (crc_table.length > 0)\n        return;\n    for (let n = 0; n < 256; n++) {\n        let c = n;\n        for (let i = 0; i < 8; i++)\n            if ((c & 1) != 0)\n                c = 0xEDB88320 ^ (c >>> 1);\n            else\n                c = (c >>> 1);\n        crc_table.push(c);\n    }\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc() { return BOOT_CRC; }\nfunction feed_crc(crc, byte) {\n    let idx = (crc ^ byte) & 0xFF;\n    return crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc) { return crc ^ BOOT_CRC; }\nclass CircularFingerprints {\n    constructor(meta, kind) {\n        this.meta = meta;\n        this.kind = kind;\n        this.hookApplyNewFP = null;\n        this.hookConsiderNewFP = null;\n        this.identity = [];\n        this.resolvedChiral = [];\n        this.atomGroup = [];\n        this.fplist = [];\n        this.amask = [];\n        this.atomAdj = [];\n        this.bondAdj = [];\n        make_crc_table();\n    }\n    calculate() {\n        let mol = this.meta.mol, na = mol.numAtoms;\n        this.identity = Vec.numberArray(0, na);\n        this.resolvedChiral = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++)\n            this.atomGroup.push([]);\n        this.amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < na; n++) {\n            this.amask[n] = mol.atomicNumber(n + 1) >= 2 && !MolUtil.hasAbbrev(mol, n + 1);\n            this.atomAdj.push([]);\n            this.bondAdj.push([]);\n        }\n        for (let n = 0; n < na; n++) {\n            if (!this.amask[n])\n                continue;\n            this.atomAdj[n] = mol.atomAdjList(n + 1);\n            this.bondAdj[n] = mol.atomAdjBonds(n + 1);\n            for (let i = this.atomAdj[n].length - 1; i >= 0; i--)\n                if (!this.amask[this.atomAdj[n][i] - 1]) {\n                    this.atomAdj[n].splice(i, 1);\n                    this.bondAdj[n].splice(i, 1);\n                }\n        }\n        for (let n = 0; n < na; n++)\n            if (this.amask[n]) {\n                this.identity[n] = this.initialIdentityECFP(n + 1);\n                this.atomGroup[n] = [n + 1];\n                this.applyNewFP({ hashCode: this.identity[n], iteration: 0, atoms: this.atomGroup[n], centralAtom: n + 1 });\n            }\n        let niter = this.kind;\n        for (let iter = 1; iter <= niter; iter++) {\n            let newident = Vec.numberArray(0, na);\n            for (let n = 0; n < na; n++)\n                if (this.amask[n])\n                    newident[n] = this.circularIterate(iter, n + 1);\n            this.identity = newident;\n            for (let n = 0; n < na; n++)\n                if (this.amask[n]) {\n                    this.atomGroup[n] = this.growAtoms(this.atomGroup[n]);\n                    this.considerNewFP({ hashCode: this.identity[n], iteration: iter, atoms: this.atomGroup[n], centralAtom: n + 1 });\n                }\n        }\n    }\n    static create(meta, kind) {\n        if (meta instanceof Molecule)\n            meta = MetaMolecule.createStrictRubric(meta);\n        let circ = new CircularFingerprints(meta, kind);\n        circ.calculate();\n        return circ;\n    }\n    getMolecule() { return this.meta.mol; }\n    get numFP() { return this.fplist.length; }\n    getFP(idx) { return this.fplist[idx]; }\n    getFingerprints() { return this.fplist.slice(0); }\n    getUniqueHashes() {\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode);\n        return Vec.sorted(Array.from(hashes));\n    }\n    getFoldedHashes(maxBits) {\n        let andBits = maxBits - 1;\n        let hashes = new Set();\n        for (let fp of this.fplist)\n            hashes.add(fp.hashCode & andBits);\n        return Vec.sorted(Array.from(hashes));\n    }\n    static tanimoto(hash1, hash2) {\n        let shared = 0, total = 0;\n        let sz1 = hash1.length, sz2 = hash2.length;\n        if (sz1 == 0 && sz2 == 0)\n            return 0;\n        let i1 = 0, i2 = 0;\n        while (i1 < sz1 || i2 < sz2) {\n            if (i1 == sz1) {\n                total += sz2 - i2;\n                break;\n            }\n            if (i2 == sz2) {\n                total += sz1 - i1;\n                break;\n            }\n            let v1 = hash1[i1], v2 = hash2[i2];\n            if (v1 == v2) {\n                shared += 1;\n                i1 += 1;\n                i2 += 1;\n            }\n            else if (v1 < v2)\n                i1 += 1;\n            else\n                i2 += 1;\n            total += 1;\n        }\n        return shared / total;\n    }\n    initialIdentityECFP(atom) {\n        const mol = this.meta.mol;\n        let adj = mol.atomAdjList(atom);\n        let nheavy = 0, nhydr = mol.atomHydrogens(atom);\n        for (let a of adj)\n            if (mol.atomElement(a) == 'H')\n                nhydr++;\n            else\n                nheavy++;\n        let atno = mol.atomicNumber(atom);\n        let degree = Math.max(0, Chemistry.ELEMENT_BONDING[atno] - nhydr);\n        let chg = mol.atomCharge(atom);\n        let inring = mol.atomRingBlock(atom) > 0 ? 1 : 0;\n        let crc = start_crc();\n        crc = feed_crc(crc, (nheavy << 4) | degree);\n        crc = feed_crc(crc, atno);\n        crc = feed_crc(crc, chg + 0x80);\n        crc = feed_crc(crc, (nhydr << 4) | inring);\n        return end_crc(crc);\n    }\n    circularIterate(iter, atom) {\n        let adj = this.atomAdj[atom - 1], adjb = this.bondAdj[atom - 1];\n        let seq = Vec.numberArray(0, 2 + 2 * adj.length);\n        seq[0] = iter;\n        seq[1] = this.identity[atom - 1];\n        for (let n = 0; n < adj.length; n++) {\n            seq[2 * n + 2] = this.meta.isBondAromatic(adjb[n]) ? 0xF : this.meta.mol.bondOrder(adjb[n]);\n            seq[2 * n + 3] = this.identity[adj[n] - 1];\n        }\n        let p = 0;\n        while (p < adj.length - 1) {\n            let i = 2 + 2 * p;\n            if (seq[i] > seq[i + 2] || (seq[i] == seq[i + 2] && seq[i + 1] > seq[i + 3])) {\n                Vec.swap(seq, i, i + 2);\n                Vec.swap(seq, i + 1, i + 3);\n                if (p > 0)\n                    p--;\n            }\n            else\n                p++;\n        }\n        let crc = start_crc();\n        for (let n = 0; n < seq.length; n += 2) {\n            crc = feed_crc(crc, seq[n]);\n            let v = seq[n + 1];\n            crc = feed_crc(crc, v >> 24);\n            crc = feed_crc(crc, (v >> 16) & 0xFF);\n            crc = feed_crc(crc, (v >> 8) & 0xFF);\n            crc = feed_crc(crc, v & 0xFF);\n        }\n        if (!this.resolvedChiral[atom - 1] && Vec.len(this.meta.rubricTetra) > 0 && this.meta.rubricTetra[atom - 1] != null) {\n            let ru = this.meta.rubricTetra[atom - 1];\n            let par = [\n                ru[0] == 0 ? 0 : this.identity[ru[0] - 1],\n                ru[1] == 0 ? 0 : this.identity[ru[1] - 1],\n                ru[2] == 0 ? 0 : this.identity[ru[2] - 1],\n                ru[3] == 0 ? 0 : this.identity[ru[3] - 1]\n            ];\n            if (par[0] != par[1] && par[0] != par[2] && par[0] != par[3] && par[1] != par[2] && par[1] != par[3] && par[2] != par[3]) {\n                crc = feed_crc(crc, Permutation.parityOrder(par) + 1);\n                this.resolvedChiral[atom - 1] = true;\n            }\n        }\n        return end_crc(crc);\n    }\n    growAtoms(atoms) {\n        let mask = Vec.booleanArray(false, this.meta.mol.numAtoms);\n        for (let n = 0; n < atoms.length; n++) {\n            mask[atoms[n] - 1] = true;\n            for (let a of this.atomAdj[atoms[n] - 1])\n                mask[a - 1] = true;\n        }\n        return Vec.add(Vec.maskIdx(mask), 1);\n    }\n    applyNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n        this.fplist.push(newFP);\n    }\n    considerNewFP(newFP) {\n        if (this.hookConsiderNewFP)\n            this.hookConsiderNewFP(newFP);\n        let hit = -1;\n        let fp = null;\n        for (let n = 0; n < this.fplist.length; n++) {\n            let lookFP = this.fplist[n];\n            if (Vec.equals(lookFP.atoms, newFP.atoms)) {\n                fp = lookFP;\n                hit = n;\n                break;\n            }\n        }\n        if (hit < 0) {\n            this.fplist.push(newFP);\n            return;\n        }\n        if (fp.iteration < newFP.iteration || fp.hashCode < newFP.hashCode)\n            return;\n        this.fplist[hit] = newFP;\n        if (this.hookApplyNewFP)\n            this.hookApplyNewFP(newFP);\n    }\n}\nCircularFingerprints.CLASS_ECFP0 = 0;\nCircularFingerprints.CLASS_ECFP2 = 1;\nCircularFingerprints.CLASS_ECFP4 = 2;\nCircularFingerprints.CLASS_ECFP6 = 3;\nexport { CircularFingerprints };\n//# sourceMappingURL=CircularFingerprints.js.map","import { deepClone, findNode, findNodes, nodeText } from '../util/util';\nimport { XML } from '../util/XML';\nimport { DataSheet } from '../ds/DataSheet';\nimport { Molecule } from '../mol/Molecule';\nimport { MoleculeStream } from './MoleculeStream';\nexport class DataSheetStream {\n    static readXML(strXML) {\n        let xmlDoc;\n        if (XML.customParser)\n            xmlDoc = new XML.customParser().parseFromString(strXML, 'application/xml');\n        else\n            xmlDoc = new DOMParser().parseFromString(strXML, 'application/xml');\n        if (xmlDoc == null)\n            return null;\n        let root = xmlDoc.documentElement;\n        if (root == null)\n            return null;\n        let ds = new DataSheet();\n        let summary = findNode(root, 'Summary');\n        if (summary == null)\n            return null;\n        ds.title = nodeText(findNode(summary, 'Title'));\n        ds.description = nodeText(findNode(summary, 'Description'));\n        let extRoot = findNode(root, 'Extension');\n        if (extRoot != null) {\n            let extList = findNodes(extRoot, 'Ext');\n            for (let n = 0; n < extList.length; n++) {\n                let ext = extList[n];\n                ds.appendExtension(ext.getAttribute('name'), ext.getAttribute('type'), nodeText(ext));\n            }\n        }\n        let header = findNode(root, 'Header');\n        let numCols = parseInt(header.getAttribute('ncols'));\n        let colList = findNodes(header, 'Column');\n        if (colList.length != numCols)\n            return null;\n        for (let n = 0; n < numCols; n++) {\n            let col = colList[n];\n            let id = parseInt(col.getAttribute('id'));\n            if (id != n + 1)\n                return null;\n            ds.appendColumn(col.getAttribute('name'), col.getAttribute('type'), nodeText(col));\n        }\n        let rowidx = 0;\n        for (let row of findNodes(findNode(root, 'Content'), 'Row')) {\n            if (parseInt(row.getAttribute('id')) != rowidx + 1)\n                return null;\n            ds.appendRow();\n            for (let col of findNodes(row, 'Cell')) {\n                let colidx = parseInt(col.getAttribute('id')) - 1;\n                let ct = ds.colType(colidx), val = nodeText(col);\n                if (val == '') { }\n                else if (ct == \"molecule\")\n                    ds.setObject(rowidx, colidx, val);\n                else if (ct == \"string\")\n                    ds.setString(rowidx, colidx, val);\n                else if (ct == \"real\")\n                    ds.setReal(rowidx, colidx, parseFloat(val));\n                else if (ct == \"integer\")\n                    ds.setInteger(rowidx, colidx, parseInt(val));\n                else if (ct == \"boolean\")\n                    ds.setBoolean(rowidx, colidx, val == 'true' ? true : val == 'false' ? false : null);\n                else if (ct == \"extend\")\n                    ds.setExtend(rowidx, colidx, val);\n                col = col.nextElementSibling;\n                colidx++;\n            }\n            row = row.nextElementSibling;\n            rowidx++;\n        }\n        return ds;\n    }\n    static readJSON(json) {\n        if (!json.colData || !json.rowData)\n            throw 'Not a JSON-formatted datasheet.';\n        return new DataSheet(deepClone(json));\n    }\n    static writeXML(ds) {\n        let xml;\n        if (XML.customParser)\n            xml = new XML.customParser().parseFromString('<DataSheet/>', 'application/xml');\n        else\n            xml = new DOMParser().parseFromString('<DataSheet/>', 'application/xml');\n        let summary = xml.createElement('Summary');\n        xml.documentElement.appendChild(summary);\n        let title = xml.createElement('Title'), descr = xml.createElement('Description');\n        summary.appendChild(title);\n        title.appendChild(xml.createTextNode(ds.title));\n        summary.appendChild(descr);\n        descr.appendChild(xml.createCDATASection(ds.description));\n        let extension = xml.createElement('Extension');\n        xml.documentElement.appendChild(extension);\n        for (let n = 0; n < ds.numExtensions; n++) {\n            let ext = xml.createElement('Ext');\n            extension.appendChild(ext);\n            ext.setAttribute('name', ds.getExtName(n));\n            ext.setAttribute('type', ds.getExtType(n));\n            ext.appendChild(xml.createCDATASection(ds.getExtData(n)));\n        }\n        let header = xml.createElement('Header');\n        xml.documentElement.appendChild(header);\n        header.setAttribute('nrows', ds.numRows.toString());\n        header.setAttribute('ncols', ds.numCols.toString());\n        for (let n = 0; n < ds.numCols; n++) {\n            let column = xml.createElement('Column');\n            header.appendChild(column);\n            column.setAttribute('id', (n + 1).toString());\n            column.setAttribute('name', ds.colName(n));\n            column.setAttribute('type', ds.colType(n));\n            column.appendChild(xml.createTextNode(ds.colDescr(n)));\n        }\n        let content = xml.createElement('Content');\n        xml.documentElement.appendChild(content);\n        for (let r = 0; r < ds.numRows; r++) {\n            let row = xml.createElement('Row');\n            row.setAttribute('id', (r + 1).toString());\n            content.appendChild(row);\n            for (let c = 0; c < ds.numCols; c++) {\n                let cell = xml.createElement('Cell');\n                cell.setAttribute('id', (c + 1).toString());\n                row.appendChild(cell);\n                let ct = ds.colType(c);\n                let txtNode = null;\n                if (ds.isNull(r, c)) { }\n                else if (ct == \"molecule\") {\n                    let obj = ds.getObject(r, c);\n                    if (obj instanceof Molecule)\n                        obj = MoleculeStream.writeNative(obj);\n                    txtNode = xml.createCDATASection(obj);\n                }\n                else if (ct == \"string\")\n                    txtNode = xml.createCDATASection(ds.getString(r, c));\n                else if (ct == \"real\")\n                    txtNode = xml.createTextNode(ds.getReal(r, c).toString());\n                else if (ct == \"integer\")\n                    txtNode = xml.createTextNode(ds.getInteger(r, c).toString());\n                else if (ct == \"boolean\")\n                    txtNode = xml.createTextNode(ds.getBoolean(r, c).toString());\n                else if (ct == \"extend\")\n                    txtNode = xml.createCDATASection(ds.getExtend(r, c));\n                if (txtNode != null)\n                    cell.appendChild(txtNode);\n            }\n        }\n        if (XML.customSerial)\n            return new XML.customSerial().serializeToString(xml.documentElement);\n        else\n            return new XMLSerializer().serializeToString(xml.documentElement);\n    }\n    static writeJSON(ds) {\n        let data = ds.data;\n        let nrow = ds.numRows, ncol = ds.numCols;\n        let rowData = new Array(nrow);\n        for (let n = 0; n < nrow; n++)\n            rowData[n] = new Array(ncol);\n        for (let c = 0; c < ncol; c++) {\n            let doConvert = ds.colType(c) == \"molecule\";\n            for (let r = 0; r < nrow; r++) {\n                let val = data.rowData[r][c];\n                if (val != null && doConvert)\n                    val = val.toString();\n                rowData[r][c] = val;\n            }\n        }\n        let json = {\n            title: data.title,\n            description: data.description,\n            colData: deepClone(data.colData),\n            rowData: rowData,\n            extData: deepClone(data.extData),\n        };\n        return json;\n    }\n}\n//# sourceMappingURL=DataSheetStream.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CircularFingerprints } from '../calc/CircularFingerprints';\nimport { DEGRAD, escapeHTML, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { DataSheetStream } from '../io/DataSheetStream';\nimport { MetaMolecule } from '../mol/MetaMolecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport dsRings from '../res/data/templates/rings.ds';\nimport dsTermGrp from '../res/data/templates/termgrp.ds';\nimport dsFuncGrp from '../res/data/templates/funcgrp.ds';\nimport dsProtGrp from '../res/data/templates/protgrp.ds';\nimport dsNonPlRings from '../res/data/templates/nonplrings.ds';\nimport dsLargeRings from '../res/data/templates/largerings.ds';\nimport dsCrownEthers from '../res/data/templates/crownethers.ds';\nimport dsLigMonodent from '../res/data/templates/ligmonodent.ds';\nimport dsLigBident from '../res/data/templates/ligbident.ds';\nimport dsLigTrident from '../res/data/templates/ligtrident.ds';\nimport dsLigMultident from '../res/data/templates/ligmultident.ds';\nimport dsCageCmplx from '../res/data/templates/cagecmplx.ds';\nimport dsAminoAcids from '../res/data/templates/aminoacids.ds';\nimport dsBiomolecules from '../res/data/templates/biomolecules.ds';\nimport dsSaccharides from '../res/data/templates/saccharides.ds';\nconst TEMPLATE_SOURCE = {\n    'rings': dsRings,\n    'termgrp': dsTermGrp,\n    'funcgrp': dsFuncGrp,\n    'protgrp': dsProtGrp,\n    'nonplrings': dsNonPlRings,\n    'largerings': dsLargeRings,\n    'crownethers': dsCrownEthers,\n    'ligmonodent': dsLigMonodent,\n    'ligbident': dsLigBident,\n    'ligtrident': dsLigTrident,\n    'ligmultident': dsLigMultident,\n    'cagecmplx': dsCageCmplx,\n    'aminoacids': dsAminoAcids,\n    'biomolecules': dsBiomolecules,\n    'saccharides': dsSaccharides,\n};\nclass AbbrevContainer {\n    constructor() {\n        this.abbrevs = [];\n    }\n    static getTemplateKeys() { return Object.keys(TEMPLATE_SOURCE); }\n    static getTemplateData(key) { return TEMPLATE_SOURCE[key]; }\n    static needsSetup() { return !this.main; }\n    static setupData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.main)\n                return;\n            this.main = new AbbrevContainer();\n            for (let key of this.getTemplateKeys()) {\n                let dsstr = this.getTemplateData(key);\n                let ds = DataSheetStream.readXML(dsstr);\n                let colMol = ds.firstColOfType(\"molecule\"), colAbbrev = ds.findColByName('Abbrev', \"string\");\n                if (colMol < 0 || colAbbrev < 0)\n                    continue;\n                for (let n = 0; n < ds.numRows; n++) {\n                    let frag = ds.getMoleculeClone(n, colMol), name = ds.getString(n, colAbbrev);\n                    if (!frag || !name)\n                        continue;\n                    let attcount = 0, firstConn = 0;\n                    for (let i = 1; i <= frag.numAtoms; i++)\n                        if (frag.atomElement(i) == MolUtil.TEMPLATE_ATTACHMENT) {\n                            if (firstConn == 0)\n                                firstConn = i;\n                            frag.setAtomElement(i, MolUtil.ABBREV_ATTACHMENT);\n                            attcount++;\n                        }\n                    if (attcount != 1)\n                        continue;\n                    if (firstConn > 1)\n                        frag.swapAtoms(1, firstConn);\n                    this.main.submitAbbreviation(name, frag);\n                }\n            }\n        });\n    }\n    getAbbrevs() {\n        return this.abbrevs.slice(0);\n    }\n    submitAbbreviation(name, infrag, promote = false) {\n        let frag = infrag.clone();\n        this.submitFragment(name, frag, promote);\n    }\n    submitMolecule(inmol, promote = false) {\n        let mol = inmol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let frag = MolUtil.getAbbrev(mol, n);\n            if (!frag)\n                continue;\n            this.submitFragment(mol.atomElement(n), frag, promote);\n        }\n    }\n    substituteAbbrevName(mol, atom) {\n        let frag = MolUtil.getAbbrev(mol, atom);\n        if (!frag)\n            return false;\n        let fragExp = MolUtil.expandedAbbrevs(frag);\n        let fragMF = MolUtil.molecularFormula(fragExp);\n        let fragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(fragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n        for (let abbrev of this.abbrevs)\n            if (abbrev.frag.numAtoms == frag.numAtoms) {\n                let match = CoordUtil.sketchEquivalent(frag, abbrev.frag);\n                if (!match) {\n                    let afragExp = MolUtil.expandedAbbrevs(abbrev.frag);\n                    if (fragMF == MolUtil.molecularFormula(afragExp)) {\n                        let afragFP = CircularFingerprints.create(MetaMolecule.createStrictRubric(afragExp), CircularFingerprints.CLASS_ECFP6).getUniqueHashes();\n                        if (Vec.equals(fragFP, afragFP))\n                            match = true;\n                    }\n                }\n                if (match) {\n                    mol.setAtomElement(atom, abbrev.name);\n                    return true;\n                }\n            }\n        return false;\n    }\n    submitFragment(name, frag, promote) {\n        if (name == '?')\n            return;\n        let vx = 0, vy = 0;\n        let adj = frag.atomAdjList(1);\n        for (let a of adj) {\n            vx += frag.atomX(a) - frag.atomX(1);\n            vy += frag.atomY(a) - frag.atomY(1);\n        }\n        if (adj.length > 1) {\n            let inv = 1.0 / adj.length;\n            vx *= inv;\n            vy *= inv;\n        }\n        if (norm_xy(vx, vy) > 0.1 * 0.1) {\n            let theta = Math.atan2(vy, vx);\n            if (Math.abs(theta) > 2 * DEGRAD)\n                CoordUtil.rotateMolecule(frag, -theta);\n        }\n        let hit = -1;\n        for (let n = 0; n < this.abbrevs.length; n++) {\n            let a = this.abbrevs[n];\n            if (a.name != name)\n                continue;\n            hit = n;\n            break;\n        }\n        let [html, search] = this.formatAbbrevLabel(name);\n        let abv = { name, frag, nameHTML: html, nameSearch: search };\n        if (hit < 0) {\n            if (promote)\n                this.abbrevs.unshift(abv);\n            else\n                this.abbrevs.push(abv);\n        }\n        else {\n            if (promote && hit > 0) {\n                this.abbrevs.splice(hit, 1);\n                this.abbrevs.unshift(abv);\n            }\n            else\n                this.abbrevs[hit] = abv;\n        }\n    }\n    formatAbbrevLabel(name) {\n        let html = '', search = '';\n        let append = (bit, tag) => {\n            if (tag)\n                html += '<' + tag + '>';\n            html += escapeHTML(bit);\n            search += bit;\n            if (tag)\n                html += '</' + tag + '>';\n        };\n        for (let bit of name.split('|')) {\n            while (true) {\n                let match = bit.match(/^(.*?)\\{(.*?)\\}(.*)$/);\n                if (!match)\n                    break;\n                let pre = match[1], mid = match[2], post = match[3];\n                append(pre, null);\n                if (mid.startsWith('^'))\n                    append(mid.substring(1), 'sup');\n                else\n                    append(mid, 'sub');\n                bit = post;\n            }\n            append(bit, null);\n        }\n        return [html, search.toLowerCase()];\n    }\n}\nAbbrevContainer.main = null;\nexport { AbbrevContainer };\n//# sourceMappingURL=AbbrevContainer.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Small Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"24\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template Name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation Code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,3)\\nC=1.7500,-6.1500;0,0,i2\\nC=2.5000,-7.4490;0,0,i2\\nC=1.0000,-7.4490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopropane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,4)\\nC=3.6500,-0.9500;0,0,i2\\nC=3.6500,-2.4500;0,0,i2\\nC=5.1500,-2.4500;0,0,i2\\nC=5.1500,-0.9500;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclobutane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=0.7500,2.3100;0,0,i2\\nC=-0.4600,1.4300;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=1.9600,1.4300;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=4.3700,-7.8550;0,0,i2\\nC=3.6200,-10.1650;0,0,i1\\nC=3.1600,-8.7350;0,0,i1\\nC=5.5800,-8.7350;0,0,i1\\nC=5.1200,-10.1650;0,0,i1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclopentadiene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=3.9490,-2.3000;0,0,i2\\nC=2.6500,-3.0500;0,0,i2\\nC=2.6500,-4.5500;0,0,i2\\nC=3.9490,-5.3000;0,0,i2\\nC=5.2481,-4.5500;0,0,i2\\nC=5.2481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane1]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.5000,-3.6500;0,0,i2\\nC=2.7990,-3.2500;0,0,i2\\nC=2.2500,-2.3510;0,0,i2\\nC=4.0981,-4.0000;0,0,i2\\nC=3.5490,-3.1010;0,0,i2\\nC=4.8481,-2.3510;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane2]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=-0.2500,-2.1490;0,0,i2\\nC=0.6000,-1.2500;0,0,i2\\nC=2.1500,-1.2500;0,0,i2\\nC=3.0000,-2.1490;0,0,i2\\nC=2.2500,-0.4990;0,0,i2\\nC=0.4500,-0.4990;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclohexane3]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=6.1000,0.2500;0,0,i1\\nC=4.8010,-0.5000;0,0,i1\\nC=7.3990,-0.5000;0,0,i1\\nC=4.8010,-2.0000;0,0,i1\\nC=6.1000,-2.7500;0,0,i1\\nC=7.3990,-2.0000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[benzene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=0.7400,3.2800;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-0.9400,1.1700;0,0,i2\\nC=-0.6100,2.6300;0,0,i2\\nC=2.0900,2.6300;0,0,i2\\nC=2.4200,1.1700;0,0,i2\\nC=1.4800,0.0000;0,0,i2\\n3-2=1,0\\n3-4=1,0\\n4-1=1,0\\n5-1=1,0\\n5-6=1,0\\n6-7=1,0\\n7-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cycloheptane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nC=0.0000,3.6200;0,0,i2\\nC=0.0000,0.0000;0,0,i2\\nC=-1.0600,1.0600;0,0,i2\\nC=-1.0600,2.5600;0,0,i2\\nC=1.5000,3.6200;0,0,i2\\nC=2.5600,2.5600;0,0,i2\\nC=2.5600,1.0600;0,0,i2\\nC=1.5000,0.0000;0,0,i2\\n2-3=1,0\\n3-4=1,0\\n4-1=1,0\\n1-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cyclooctane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=1.2510,-1.4500;0,0,i1\\nC=-0.0481,-2.2000;0,0,i1\\nC=2.5500,-2.2000;0,0,i0\\nC=-0.0481,-3.7000;0,0,i1\\nC=1.2510,-4.4500;0,0,i1\\nC=2.5500,-3.7000;0,0,i0\\nC=3.9713,-1.7306;0,0,i2\\nC=4.8537,-2.9389;0,0,i2\\nC=3.9779,-4.1593;0,0,i2\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dihydroindene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i1\\nC=6.4962,-3.3000;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[napthalene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"13\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=-0.1824,-4.7254;0,0,i1\\nC=-1.2065,-5.8214;0,0,i1\\nC=1.2788,-5.0643;0,0,i0\\nC=-0.7693,-7.2563;0,0,i1\\nC=0.6919,-7.5952;0,0,i1\\nC=1.7160,-6.4992;0,0,i0\\nC=2.5017,-4.2011;0,0,i2\\nC=3.6979,-5.0997;0,0,i0\\nC=3.2158,-6.5224;0,0,i0\\nC=5.1689,-4.8063;0,0,i1\\nC=6.1585,-5.9336;0,0,i1\\nC=4.2061,-7.6477;0,0,i1\\nC=5.6772,-7.3542;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-6=1,0\\n10-11=1,0\\n10-8=2,0\\n9-12=2,0\\n12-13=1,0\\n13-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fluoroscene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"14\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=2.5990,-2.5500;0,0,i1\\nC=1.3000,-3.3000;0,0,i1\\nC=1.3000,-4.8000;0,0,i1\\nC=2.5990,-5.5500;0,0,i1\\nC=3.8981,-4.8000;0,0,i0\\nC=3.8981,-3.3000;0,0,i0\\nC=5.1971,-2.5500;0,0,i1\\nC=5.1971,-5.5500;0,0,i1\\nC=6.4962,-4.8000;0,0,i0\\nC=6.4962,-3.3000;0,0,i0\\nC=7.7952,-2.5500;0,0,i1\\nC=7.7952,-5.5500;0,0,i1\\nC=9.0943,-4.8000;0,0,i1\\nC=9.0943,-3.3000;0,0,i1\\n2-3=1,0\\n2-1=2,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n10-11=1,0\\n9-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[anthracene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"15\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,16)\\nC=5.4911,-0.2789;0,0,i1\\nC=4.7411,-1.5780;0,0,i1\\nC=6.9910,-0.2789;0,0,i1\\nC=5.4910,-2.8770;0,0,i1\\nC=6.9911,-2.8770;0,0,i0\\nC=7.7411,-1.5780;0,0,i0\\nC=9.2410,-1.5780;0,0,i0\\nC=7.7410,-4.1760;0,0,i1\\nC=9.2411,-4.1761;0,0,i1\\nC=9.9911,-2.8770;0,0,i0\\nC=9.9910,-0.2789;0,0,i1\\nC=11.4911,-2.8770;0,0,i1\\nC=12.2411,-1.5780;0,0,i1\\nC=11.4911,-0.2790;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n7-11=1,0\\n10-12=1,0\\n12-13=2,0\\n13-14=1,0\\n14-11=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[phenanthrene]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"16\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nN=3.3300,-1.7050;0,0,i1\\nC=2.5800,-4.0150;0,0,i2\\nC=2.1200,-2.5850;0,0,i2\\nC=4.5400,-2.5850;0,0,i2\\nC=4.0800,-4.0150;0,0,i2\\n2-3=1,0\\n3-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyrrolidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"17\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i2\\nC=1.7800,-3.6650;0,0,i2\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i2\\nC=3.2800,-3.6650;0,0,i2\\n2-1=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"18\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nO=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[furan]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"19\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nC=1.3200,-2.2350;0,0,i1\\nC=1.7800,-3.6650;0,0,i1\\nS=2.5300,-1.3550;0,0,i0\\nC=3.7400,-2.2350;0,0,i1\\nC=3.2800,-3.6650;0,0,i1\\n2-1=2,0\\n1-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-2=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thiofuran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"20\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.6000,-3.0000;0,0,i1\\nN=2.8990,-2.2500;0,0,i0\\nC=4.1981,-3.0000;0,0,i1\\nC=1.6000,-4.5000;0,0,i1\\nC=2.8990,-5.2500;0,0,i1\\nC=4.1981,-4.5000;0,0,i1\\n2-1=1,0\\n2-3=2,0\\n1-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"21\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=0.7019,-2.1000;0,0,i2\\nC=0.7019,-3.6000;0,0,i2\\nO=2.0009,-1.3500;0,0,i0\\nO=2.0009,-4.3500;0,0,i0\\nC=3.3000,-3.6000;0,0,i2\\nC=3.3000,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[dioxane]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"22\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=2.1519,-2.1000;0,0,i2\\nC=2.1519,-3.6000;0,0,i2\\nO=3.4509,-1.3500;0,0,i0\\nN=3.4509,-4.3500;0,0,i1\\nC=4.7500,-3.6000;0,0,i2\\nC=4.7500,-2.1000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[morpholine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"23\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nN=2.6490,-2.3000;0,0,i1\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[piperidine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"24\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nC=1.3500,-3.0500;0,0,i2\\nC=1.3500,-4.5500;0,0,i2\\nO=2.6490,-2.3000;0,0,i0\\nC=2.6490,-5.3000;0,0,i2\\nC=3.9481,-4.5500;0,0,i2\\nC=3.9481,-3.0500;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[pyran]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Terminal Groups</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"11\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.6500,-1.4000;0,0,i0\\nC=0.6490,-0.6500;0,0,i2\\nC=1.9481,-1.4000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Et]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-5.1000,3.4000;0,0,i2\\nC=-3.8010,4.1500;0,0,i2\\nC=-2.5019,3.4000;0,0,i3\\nX=-6.3990,4.1500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Pr]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-4.9450,2.0214;0,0,i1\\nC=-4.1950,3.3204;0,0,i3\\nC=-4.1950,0.7224;0,0,i3\\nX=-6.4450,2.0214;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[i-propyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^i}Pr]]></Cell></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-4.6500,2.9000;0,0,i2\\nC=-3.3510,3.6500;0,0,i2\\nC=-2.0519,2.9000;0,0,i2\\nC=-0.7529,3.6500;0,0,i3\\nX=-5.9490,3.6500;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[n-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bu]]></Cell></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-3.2000,0.9000;0,0,i0\\nC=-3.2000,2.4000;0,0,i3\\nC=-3.2000,-0.6000;0,0,i3\\nC=-1.7000,0.9000;0,0,i3\\nX=-4.7000,0.9000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[t-butyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[{^t}Bu]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[methoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Me]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nX=-7.4188,-4.7944;0,0,i0\\nO=-6.1198,-4.0444;0,0,i0\\nC=-4.8207,-4.7944;0,0,i2\\nC=-3.5217,-4.0444;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[ethoxy]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i0\\nC=-4.3000,2.8990;0,0,i1\\nC=-2.8000,2.8990;0,0,i1\\nC=-4.3000,0.3010;0,0,i1\\nC=-2.8000,0.3010;0,0,i1\\nC=-2.0500,1.6000;0,0,i1\\n1-2=1,0\\n3-2=1,0\\n3-4=2,0\\n2-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[phenyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Ph]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nX=-6.5500,1.6000;0,0,i0\\nC=-5.0500,1.6000;0,0,i1\\nC=-4.3000,2.8990;0,0,i2\\nC=-2.8000,2.8990;0,0,i2\\nC=-4.3000,0.3010;0,0,i2\\nC=-2.8000,0.3010;0,0,i2\\nC=-2.0500,1.6000;0,0,i2\\n1-2=1,0\\n3-2=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[cyclopentyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Cy]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=0.0500,2.9500;0,0,i0\\nC=1.3490,3.7000;0,0,i2\\nC=2.6481,2.9500;0,0,i0\\nC=2.6481,1.4500;0,0,i1\\nC=3.9471,3.7000;0,0,i1\\nC=3.9471,0.7000;0,0,i1\\nC=5.2461,1.4500;0,0,i1\\nC=5.2461,2.9500;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=2,0\\n4-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[benzyl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Bz]]></Cell></Row><Row id=\\\"11\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nX=-1.6000,1.6571;0,0,i0\\nC=-0.1000,1.6571;0,0,i0\\nC=0.6500,0.3581;0,0,i0\\nC=0.6500,2.9561;0,0,i0\\nC=2.1500,0.3581;0,0,i1\\nC=2.9000,1.6571;0,0,i0\\nC=2.1500,2.9561;0,0,i1\\nC=-0.1000,4.2551;0,0,i3\\nC=4.4000,1.6571;0,0,i3\\nC=-0.1000,-0.9409;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n4-8=1,0\\n6-9=1,0\\n3-10=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[mesityl]]></Cell><Cell id=\\\"3\\\"><![CDATA[Mes]]></Cell></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"18\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nN=-6.6000,4.4000;1,0,i0\\nO=-5.8500,5.6990;0,0,i0\\nO=-5.8500,3.1010;-1,0,i0\\nX=-8.1000,4.4000;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[nitro]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[N|O{2}]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i1\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[carboxyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Me]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nO=-7.0500,1.9510;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.5500,1.9510;0,0,i2\\nC=-4.8000,0.6520;0,0,i3\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethyl carboxylate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O{2}|Et]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nN=-7.0500,1.9510;0,0,i2\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[amide]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|O|NH{2}]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nC=-7.8000,3.2500;0,0,i0\\nO=-7.0500,4.5490;0,0,i0\\nC=-7.0500,1.9510;0,0,i3\\nX=-9.3000,3.2500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ac]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nO=-8.0010,2.5000;0,0,i0\\nC=-6.7019,3.2500;0,0,i0\\nX=-9.3000,3.2500;0,0,i0\\nC=-5.4029,2.5000;0,0,i3\\nO=-6.7019,4.7500;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n2-5=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|Ac]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-5.9500,5.0500;0,0,i0\\nC=-4.4500,5.0500;0,0,i0\\nN=-2.9500,5.0500;0,0,i0\\n1-2=1,0\\n2-3=3,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyano]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|N]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nC=0.0000,0.0000;0,0,i0\\nF=0.0000,1.5000;0,0,i0\\nF=-0.0000,-1.5000;0,0,i0\\nF=1.5000,-0.0000;0,0,i0\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[C|F{3}]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nF=3.0000,0.0000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nX=-0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trifluoromethoxy]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[O|CF{3}]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{3}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nP=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i1\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=1,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phosphoric]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[P|O{4}|H{2}]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,3)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{2}|H]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-2.7500,0.8500;0,0,i0\\n1-2=2,0\\n1-3=2,0\\n1-4=1,0\\n1-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{3}|H]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nO=-2.7500,0.8500;0,0,i0\\nS=-1.2500,0.8500;0,0,i0\\nO=-1.2500,2.3500;0,0,i0\\nO=-1.2500,-0.6500;0,0,i0\\nO=0.2500,0.8500;0,0,i1\\nX=-3.5000,2.1490;0,0,i0\\n2-3=2,0\\n2-4=2,0\\n2-5=1,0\\n2-1=1,0\\n1-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[sulphonic]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[S|O{4}|H]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=0.0000,0.0000;0,0,i0\\nSi=1.5000,0.0000;0,0,i0\\nC=3.0000,0.0000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=1,0\\n2-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[trimethylsilane]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TMS]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,22)\\nC=5.6600,-2.2950;0,0,i1\\nC=4.6100,-3.9050;0,0,i1\\nC=4.1500,-2.6750;0,0,i1\\nC=7.1700,-2.6750;0,0,i1\\nC=6.7100,-3.9050;0,0,i1\\nC=5.6300,-0.5870;0,0,i1\\nC=4.5800,0.7230;0,0,i1\\nC=4.1200,-0.2070;0,0,i0\\nC=7.1400,-0.2070;0,0,i1\\nC=6.6800,0.7230;0,0,i1\\nFe=5.6700,-1.6610;0,0,i0\\nX=2.6200,-0.2137;0,0,i0\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n7-8=2,0\\n8-6=1,0\\n6-9=1,0\\n9-10=2,0\\n10-7=1,0\\n11-6=1,0\\n11-1=1,0\\n3-11=0,0\\n4-11=0,0\\n2-11=0,0\\n5-11=0,0\\n8-11=0,0\\n9-11=0,0\\n10-11=0,0\\n7-11=0,0\\n9-9=1,0\\n8-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ferrocenyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fc]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=-1.8965,0.7175;0,0,i0\\nFe=0.1000,0.7175;0,0,i0\\nC=0.3931,1.7515;0,0,i1\\nC=1.7233,2.7758;0,0,i1\\nC=1.9501,1.7633;0,0,i1\\nC=-0.9841,2.4781;0,0,i1\\nC=-0.3171,3.2728;0,0,i1\\nC=0.1000,-0.7825;0,0,e0\\nO=0.1000,-2.2825;0,0,i0\\nC=1.5289,-0.1075;0,0,e0\\nO=2.8280,-0.8575;0,0,i0\\n1-2=1,0\\n4-5=2,0\\n5-3=1,0\\n3-6=1,0\\n6-7=2,0\\n7-4=1,0\\n2-3=1,0\\n5-2=0,0\\n6-2=0,0\\n7-2=0,0\\n4-2=0,0\\n2-8=0,0\\n8-9=2,0\\n2-10=0,0\\n10-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bis(carbonyl)cyclopentadienyl iron]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Fp]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Functional Groups</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nO=2.2500,-1.2990;0,0,i0\\nC=3.7500,1.2990;0,0,i0\\nC=5.2500,1.2990;0,0,i3\\nC=3.7500,2.7990;0,0,i3\\nC=3.7500,-0.2010;0,0,i3\\n1-2=1,0\\n2-3=1,0\\n2-4=2,0\\n3-5=1,0\\n5-6=1,0\\n5-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Boc]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nC=2.2500,-1.2990;0,0,i1\\nC=3.7500,-1.2990;0,0,i1\\nC=4.5000,-0.0000;0,0,i0\\nC=3.7500,1.2990;0,0,i1\\nC=2.2500,1.2990;0,0,i1\\nC=6.0000,-0.0000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=2,0\\n6-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-2=1,0\\n8-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tos]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nS=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nO=-0.0000,1.5000;0,0,i0\\nO=0.0000,-1.5000;0,0,i0\\nF=3.0000,-0.0000;0,0,i0\\nF=1.5000,1.5000;0,0,i0\\nF=1.5000,-1.5000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=2,0\\n1-5=2,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tf]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nPh=-0.0000,1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nPh=0.0000,-1.5000;0,0,i0,aSketchEl!(7\\\\002C7)\\\\000A*\\\\003D-6.5500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-5.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.3000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C2.8990\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-4.3000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.8000\\\\002C0.3010\\\\003B0\\\\002C0\\\\002Ci1\\\\000AC\\\\003D-2.0500\\\\002C1.6000\\\\003B0\\\\002C0\\\\002Ci1\\\\000A1-2\\\\003D1\\\\002C0\\\\000A3-2\\\\003D1\\\\002C0\\\\000A3-4\\\\003D2\\\\002C0\\\\000A2-5\\\\003D2\\\\002C0\\\\000A5-6\\\\003D1\\\\002C0\\\\000A6-7\\\\003D2\\\\002C0\\\\000A7-4\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDPS]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nSi=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nX=-1.5000,-0.0000;0,0,i0\\nC=-0.0000,1.5000;0,0,i3\\nC=0.0000,-1.5000;0,0,i3\\nC=3.0000,-0.0000;0,0,i3\\nC=1.5000,1.5000;0,0,i3\\nC=1.5000,-1.5000;0,0,i3\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n2-6=1,0\\n2-7=1,0\\n2-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[TBDMS]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=1.0000,0.0000;0,0,i0\\nO=1.8817,-1.2135;0,0,i0\\nC=3.3083,-0.7500;0,0,i2\\nC=3.3083,0.7500;0,0,i2\\nO=1.8817,1.2135;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nO=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nO=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dioxane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=0.0000,0.0000;0,0,i0\\nS=0.7500,-1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i2\\nC=3.0000,0.0000;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nS=0.7500,1.2990;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[1,3-dithiane]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=0.0000,0.0000;0,0,i0\\nC=1.5000,0.0000;0,0,i0\\nO=2.2500,1.2990;0,0,i0\\nC=2.2500,-1.2990;0,0,i0\\nC=3.0000,-2.5981;0,0,i3\\nC=3.5490,-0.5490;0,0,i3\\nC=0.9510,-2.0490;0,0,i3\\n1-2=1,0\\n2-3=2,0\\n2-4=1,0\\n4-5=1,0\\n4-6=1,0\\n4-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Piv]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=8.5563,4.7294;0,0,i1\\nC=9.8554,3.9794;0,0,i1\\nC=9.8554,2.4794;0,0,i1\\nC=8.5563,1.7294;0,0,i1\\nC=7.2573,2.4794;0,0,i1\\nC=7.2573,3.9794;0,0,i0\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\n1-2=2,0\\n2-3=1,0\\n3-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n9-11=2,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cbz]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,20)\\nC=7.2573,3.9794;0,0,i1\\nC=5.9582,4.7294;0,0,i2\\nO=4.6592,3.9794;0,0,i0\\nC=3.3602,4.7294;0,0,i0\\nX=2.0611,3.9794;0,0,i0\\nO=3.3602,6.2294;0,0,i0\\nC=7.4141,2.4876;0,0,i0\\nC=8.8814,2.1758;0,0,i0\\nC=9.6313,3.4748;0,0,i0\\nC=8.6276,4.5895;0,0,i0\\nC=11.0985,3.7867;0,0,i1\\nC=11.5620,5.2133;0,0,i1\\nC=10.5583,6.3280;0,0,i1\\nC=9.0911,6.0161;0,0,i1\\nC=6.4105,1.3729;0,0,i1\\nC=6.8740,-0.0537;0,0,i1\\nC=8.3412,-0.3655;0,0,i1\\nC=9.3449,0.7492;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n4-6=2,0\\n1-7=1,0\\n7-8=2,0\\n8-9=1,0\\n9-10=2,0\\n10-1=1,0\\n9-11=1,0\\n11-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-10=1,0\\n7-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[FMOC]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Non-planar Rings</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"12\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,7)\\nC=-6.0428,5.1152;0,0,i1\\nC=-5.8360,7.2412;0,0,i2\\nC=-4.9821,6.1759;0,0,i1\\nC=-3.5332,5.7877;0,0,i2\\nC=-4.3230,4.4890;0,0,i2\\nC=-7.3398,5.1300;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-5=1,0\\n5-4=1,0\\n1-6=1,0\\n3-6=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[5-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,8)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.0510,6.8490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n4-7=1,0\\n2-7=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1000,5.0000;0,0,i2\\nC=-4.8010,5.7500;0,0,i1\\nC=-6.1000,3.5000;0,0,i2\\nC=-4.8010,4.2500;0,0,i1\\nC=-3.5019,5.0000;0,0,i2\\nC=-3.5019,3.5000;0,0,i2\\nC=-4.5010,6.7990;0,0,i2\\nC=-3.8510,5.7490;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n6-5=1,0\\n2-7=1,0\\n4-8=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.2677,5.6918;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n4-7=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-6.1177,3.0660;0,0,i2\\nC=-5.3677,4.3650;0,0,i1\\nC=-5.3677,1.7670;0,0,i2\\nC=-4.6177,3.0660;0,0,i1\\nC=-3.4177,4.2651;0,0,i2\\nC=-3.6177,3.0660;0,0,i2\\nC=-5.6177,5.8418;0,0,i2\\nC=-2.3186,2.3160;0,0,i2\\nC=-4.9000,5.5000;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n2-5=1,0\\n4-6=1,0\\n2-7=1,0\\n6-8=1,0\\n8-5=1,0\\n4-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-2]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nC=-2.7481,2.7510;0,0,i2\\nC=-1.4491,3.1510;0,0,i2\\nC=-1.9981,4.0500;0,0,i2\\nC=-0.1500,2.4010;0,0,i1\\nC=-0.6991,3.3000;0,0,i1\\nC=0.6000,4.0500;0,0,i2\\nC=-0.4491,1.1500;0,0,i2\\nC=0.3078,0.9726;0,0,i2\\nC=-1.1922,-0.1265;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n8-9=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[6-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-2.8297,-3.0097;0,0,i2\\nC=-2.5266,-1.6847;0,0,i2\\nC=-3.5797,-1.7107;0,0,i2\\nC=-1.2275,-0.9347;0,0,i1\\nC=-2.2806,-0.9607;0,0,i1\\nC=-2.2806,0.5394;0,0,i2\\nC=-0.2937,-1.8192;0,0,i2\\nC=0.4384,-1.1524;0,0,i2\\nC=0.4402,-3.1010;0,0,i2\\nC=1.1902,-1.8019;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n5-7=1,0\\n4-8=1,0\\n7-9=1,0\\n9-10=1,0\\n10-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[7-bridge-3]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,11)\\nC=-5.9491,0.8000;0,0,i2\\nC=-7.2481,0.0500;0,0,i2\\nC=-7.2481,-1.4500;0,0,i2\\nC=-5.9491,-2.2000;0,0,i2\\nC=-4.6500,-1.4500;0,0,i1\\nC=-4.6500,0.0500;0,0,i1\\nC=-3.2287,0.5194;0,0,i2\\nC=-2.3463,-0.6889;0,0,i2\\nC=-3.2221,-1.9093;0,0,i2\\nC=-3.9000,1.3490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-5=1,0\\n6-10=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[9-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nC=-4.9010,5.1000;0,0,i2\\nC=-6.2000,4.3500;0,0,i2\\nC=-6.2000,2.8500;0,0,i2\\nC=-4.9010,2.1000;0,0,i2\\nC=-3.6019,2.8500;0,0,i1\\nC=-3.6019,4.3500;0,0,i1\\nC=-2.3029,5.1000;0,0,i2\\nC=-2.3029,2.1000;0,0,i2\\nC=-1.0038,2.8500;0,0,i2\\nC=-1.0038,4.3500;0,0,i2\\nC=-2.8519,5.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n6-7=1,0\\n5-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-7=1,0\\n6-11=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[10-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nC=-5.1991,3.1000;0,0,i2\\nC=-6.4981,2.3500;0,0,i2\\nC=-6.4981,0.8500;0,0,i2\\nC=-5.1991,0.1000;0,0,i2\\nC=-3.9000,0.8500;0,0,i1\\nC=-3.9000,2.3500;0,0,i1\\nC=-2.7265,3.2785;0,0,i2\\nC=-2.7252,-0.0840;0,0,i2\\nC=-1.2664,2.9421;0,0,i2\\nC=-0.6227,1.5908;0,0,i2\\nC=-1.2816,0.2423;0,0,i2\\nC=-4.6500,3.6490;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n5-8=1,0\\n6-7=1,0\\n9-7=1,0\\n9-10=1,0\\n10-11=1,0\\n11-8=1,0\\n6-12=1,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[11-bridge-1]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"11\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nC=-4.3500,3.6500;0,0,i1\\nC=-4.3500,2.1500;0,0,i1\\nC=-2.8500,2.1500;0,0,i1\\nC=-2.8500,3.6500;0,0,i1\\nC=-3.5510,4.2000;0,0,i1\\nC=-2.0510,4.2000;0,0,i1\\nC=-2.0510,2.7000;0,0,i1\\nC=-3.5510,2.7000;0,0,i1\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n1-4=1,0\\n1-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n8-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cubane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"12\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,12)\\nC=-5.1000,-1.5490;0,0,i2\\nC=-3.8010,-1.1490;0,0,i1\\nC=-4.3500,-0.2500;0,0,i1\\nC=-2.5019,-1.8990;0,0,i2\\nC=-3.0510,-1.0000;0,0,i2\\nC=-1.7519,-0.2500;0,0,i1\\nC=-4.3500,1.2500;0,0,i2\\nC=-3.8010,0.3510;0,0,i2\\nC=-1.7519,1.2500;0,0,i2\\nC=-3.0510,2.0000;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n3-7=1,0\\n2-8=1,0\\n6-9=1,0\\n7-10=1,0\\n9-10=1,0\\n8-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adamantane]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Large Rings</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=2.0428,-18.6516;0,0,i2\\nC=1.7880,-17.1633;0,0,i2\\nC=2.5387,-15.8790;0,0,i2\\nC=3.1939,-19.6177;0,0,i2\\nC=4.7060,-19.6177;0,0,i2\\nC=5.8535,-18.6576;0,0,i2\\nC=6.1088,-17.1863;0,0,i2\\nC=3.9528,-15.3740;0,0,i2\\nC=5.3645,-15.8923;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n1-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-3=1,0\\n8-9=1,0\\n9-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-9]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-3.5491,5.1000;0,0,i2\\nC=-4.8481,4.3500;0,0,i2\\nC=-4.8481,2.8500;0,0,i2\\nC=-3.5491,2.1000;0,0,i2\\nC=-2.2500,2.8500;0,0,i2\\nC=-2.2500,4.3500;0,0,i2\\nC=-0.9509,2.1000;0,0,i2\\nC=0.3481,2.8500;0,0,i2\\nC=0.3481,4.3500;0,0,i2\\nC=-0.9509,5.1000;0,0,i2\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n6-1=1,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-10]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,11)\\nC=-7.7858,2.5448;0,0,i2\\nC=-7.8013,1.1000;0,0,i2\\nC=-6.4244,0.8579;0,0,i2\\nC=-5.3288,-0.5811;0,0,i2\\nC=-4.3565,0.8361;0,0,i2\\nC=-2.9104,1.0882;0,0,i2\\nC=-2.8964,2.5470;0,0,i2\\nC=-4.2864,2.8806;0,0,i2\\nC=-4.6033,4.2815;0,0,i2\\nC=-6.0450,4.2766;0,0,i2\\nC=-6.3710,2.8699;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-1=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-11]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.1614,6.9975;0,0,i2\\nC=2.4604,6.2475;0,0,i2\\nC=-0.1376,6.2475;0,0,i2\\nC=-0.1376,4.7475;0,0,i2\\nC=-1.4367,3.9975;0,0,i2\\nC=-1.4367,2.4975;0,0,i2\\nC=-0.1376,1.7475;0,0,i2\\nC=1.1614,2.4975;0,0,i2\\nC=2.4604,1.7475;0,0,i2\\nC=3.7595,2.4975;0,0,i2\\nC=3.7595,3.9975;0,0,i2\\nC=2.4604,4.7475;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-2=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=0.2503,-1.0236;0,0,i2\\nC=1.7491,-1.0236;0,0,i2\\nC=2.0788,0.4428;0,0,i2\\nC=3.5325,0.7862;0,0,i2\\nC=3.5274,2.2829;0,0,i2\\nC=2.0508,2.6151;0,0,i2\\nC=1.7054,4.0671;0,0,i2\\nC=0.1996,4.0655;0,0,i2\\nC=-0.1373,2.6137;0,0,i2\\nC=-1.5850,2.2710;0,0,i2\\nC=-1.5640,0.7758;0,0,i2\\nC=-0.0938,0.4547;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-12]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-9.0085,1.2181;0,0,i2\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nC=-6.3085,1.2181;0,0,i2\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nC=-6.3085,-1.4819;0,0,i2\\nC=-9.0085,-1.4819;0,0,i2\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-13]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=6.9101,-5.9857;0,0,i2\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nC=9.6101,-5.9857;0,0,i2\\nC=9.6101,-8.6857;0,0,i2\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nC=6.9101,-8.6857;0,0,i2\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-14]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nC=20.9592,-0.7218;0,0,i2\\nC=22.9828,0.6878;0,0,i2\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nC=18.9534,0.7033;0,0,i2\\nC=22.2021,3.0764;0,0,i2\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nC=19.7018,3.0711;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-15]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-2.3295,-6.3508;0,0,i2\\nC=-2.3295,-7.8765;0,0,i2\\nC=-1.0175,-8.6353;0,0,i2\\nC=0.3099,-7.8765;0,0,i2\\nC=2.9416,-6.3508;0,0,i2\\nC=2.9416,-7.8765;0,0,i2\\nC=1.6218,-8.6353;0,0,i2\\nC=-1.0150,-4.2041;0,0,i2\\nC=0.2910,-3.4545;0,0,i2\\nC=1.6173,-4.2041;0,0,i2\\nC=-2.3088,-3.4429;0,0,i2\\nC=-3.6056,-4.1961;0,0,i2\\nC=-3.6212,-5.5973;0,0,i2\\nC=2.9184,-3.4366;0,0,i2\\nC=4.2222,-4.1763;0,0,i2\\nC=4.2483,-5.5976;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-4=1,0\\n8-9=1,0\\n9-10=1,0\\n11-12=1,0\\n8-11=1,0\\n1-13=1,0\\n12-13=1,0\\n14-15=1,0\\n10-14=1,0\\n5-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-16]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=14.0401,-6.5516;0,0,i2\\nC=14.7839,-7.8398;0,0,i2\\nC=13.8355,-9.0080;0,0,i2\\nC=14.6732,-10.2249;0,0,i2\\nC=13.8569,-11.4861;0,0,i2\\nC=12.3571,-11.2554;0,0,i2\\nC=11.7609,-12.6417;0,0,i2\\nC=10.2552,-12.6811;0,0,i2\\nC=9.6255,-11.3345;0,0,i2\\nC=8.1419,-11.5631;0,0,i2\\nC=7.3964,-10.2751;0,0,i2\\nC=8.3448,-9.1199;0,0,i2\\nC=7.5032,-7.8976;0,0,i2\\nC=8.3106,-6.6466;0,0,i2\\nC=9.8063,-6.8716;0,0,i2\\nC=10.4049,-5.4658;0,0,i2\\nC=11.9207,-5.4290;0,0,i2\\nC=12.5403,-6.7723;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-18]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=23.0039,-8.7037;0,0,i2\\nC=21.6788,-9.4637;0,0,i2\\nC=21.6617,-10.9743;0,0,i2\\nC=22.9767,-11.7478;0,0,i2\\nC=24.2738,-14.0464;0,0,i2\\nC=22.9667,-13.2731;0,0,i2\\nC=28.1300,-11.8325;0,0,i2\\nC=28.1300,-13.3322;0,0,i2\\nC=26.8927,-14.0616;0,0,i2\\nC=28.1261,-8.8196;0,0,i2\\nC=29.4195,-9.5784;0,0,i2\\nC=29.4306,-11.0859;0,0,i2\\nC=26.8898,-15.5611;0,0,i2\\nC=25.5812,-16.3118;0,0,i2\\nC=24.2488,-15.5459;0,0,i2\\nC=25.5520,-7.2815;0,0,i2\\nC=26.8533,-6.5619;0,0,i2\\nC=28.1325,-7.3250;0,0,i2\\nC=24.2475,-6.5288;0,0,i2\\nC=22.9549,-7.2639;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-4=1,0\\n7-8=1,0\\n8-9=1,0\\n10-11=1,0\\n7-12=1,0\\n11-12=1,0\\n13-14=1,0\\n9-13=1,0\\n5-15=1,0\\n15-14=1,0\\n16-17=1,0\\n10-18=1,0\\n17-18=1,0\\n19-20=1,0\\n16-19=1,0\\n20-1=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclo-20]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Crown Ethers</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"10\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=-3.3500,6.9000;0,0,i0\\nC=-2.7500,8.3490;0,0,i2\\nC=-1.2500,8.3490;0,0,i2\\nO=-0.6500,6.9000;0,0,i0\\nC=0.7990,6.3000;0,0,i2\\nC=0.7990,4.8000;0,0,i2\\nO=-0.6500,4.2000;0,0,i0\\nC=-1.2500,2.7510;0,0,i2\\nC=-2.7500,2.7510;0,0,i2\\nO=-3.3500,4.2000;0,0,i0\\nC=-4.7990,4.8000;0,0,i2\\nC=-4.7990,6.3000;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n12-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[12-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nO=-9.0085,1.2181;0,0,i0\\nC=-8.4085,2.6671;0,0,i2\\nC=-6.9085,2.6671;0,0,i2\\nO=-6.3085,1.2181;0,0,i0\\nC=-4.8595,0.6181;0,0,i2\\nC=-4.8595,-0.8819;0,0,i2\\nO=-6.3085,-1.4819;0,0,i0\\nO=-9.0085,-1.4819;0,0,i0\\nC=-10.4575,-0.8819;0,0,i2\\nC=-10.4575,0.6181;0,0,i2\\nC=-9.0085,-2.9819;0,0,i2\\nC=-6.3085,-2.9819;0,0,i2\\nC=-7.7095,-3.7319;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n8-9=1,0\\n9-10=1,0\\n10-1=1,0\\n8-11=1,0\\n7-12=1,0\\n11-13=1,0\\n13-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[13-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nO=6.9101,-5.9857;0,0,i0\\nC=7.5101,-4.5367;0,0,i2\\nC=9.0101,-4.5367;0,0,i2\\nO=9.6101,-5.9857;0,0,i0\\nO=9.6101,-8.6857;0,0,i0\\nC=9.0101,-10.1347;0,0,i2\\nC=7.5101,-10.1347;0,0,i2\\nO=6.9101,-8.6857;0,0,i0\\nC=5.4101,-5.9857;0,0,i2\\nC=5.4101,-8.6857;0,0,i2\\nC=11.1101,-8.6857;0,0,i2\\nC=11.1101,-5.9857;0,0,i2\\nC=11.8601,-7.3867;0,0,i2\\nC=4.6601,-7.2847;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[14-crown-4]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,15)\\nC=22.1615,-1.5864;0,0,i2\\nC=23.3877,-0.7311;0,0,i2\\nO=20.9592,-0.7218;0,0,i0\\nO=22.9828,0.6878;0,0,i0\\nC=19.7379,-1.5763;0,0,i2\\nC=24.1796,1.5700;0,0,i2\\nC=18.5357,-0.7167;0,0,i2\\nC=23.7246,3.0381;0,0,i2\\nO=18.9534,0.7033;0,0,i0\\nO=22.2021,3.0764;0,0,i0\\nC=17.7398,1.6155;0,0,i2\\nC=21.7384,4.5021;0,0,i2\\nC=18.2148,3.0479;0,0,i2\\nC=20.2213,4.5021;0,0,i2\\nO=19.7018,3.0711;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[15-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,16)\\nC=-3.2703,-7.3624;0,0,i2\\nC=-4.4642,-6.4905;0,0,i2\\nO=-3.7283,-8.7862;0,0,i0\\nO=-5.6803,-7.3450;0,0,i0\\nC=-2.5315,-9.6420;0,0,i2\\nC=-6.8842,-6.4872;0,0,i2\\nC=-2.8996,-11.0971;0,0,i2\\nC=-8.0816,-7.3361;0,0,i2\\nO=-4.4208,-11.4135;0,0,i0\\nO=-7.6748,-8.7819;0,0,i0\\nC=-4.4492,-12.9087;0,0,i2\\nC=-8.9100,-9.5864;0,0,i2\\nC=-5.8087,-13.6602;0,0,i2\\nC=-8.6136,-11.0608;0,0,i2\\nC=-7.1438,-12.8902;0,0,i2\\nO=-7.1341,-11.4135;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-16=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[16-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(17,17)\\nC=11.3913,-8.5218;0,0,i2\\nO=9.9653,-8.8821;0,0,i0\\nC=8.6597,-11.0126;0,0,i2\\nO=7.4967,-10.0548;0,0,i0\\nC=6.3270,-10.9800;0,0,i2\\nC=5.0002,-10.3582;0,0,i2\\nO=4.9982,-8.8783;0,0,i0\\nC=3.5605,-8.5538;0,0,i2\\nC=3.2430,-7.1220;0,0,i2\\nC=4.4248,-6.1867;0,0,i2\\nO=5.8590,-6.7660;0,0,i0\\nC=6.6561,-5.4870;0,0,i2\\nC=8.2017,-5.4870;0,0,i2\\nO=9.0164,-6.7596;0,0,i0\\nC=10.4452,-6.1465;0,0,i2\\nC=11.6565,-7.0603;0,0,i2\\nC=9.9960,-10.3691;0,0,i2\\n5-6=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n6-7=1,0\\n11-12=1,0\\n12-13=1,0\\n13-14=1,0\\n10-11=1,0\\n15-16=1,0\\n14-15=1,0\\n16-1=1,0\\n2-17=1,0\\n17-3=1,0\\n1-2=1,0\\n3-4=1,0\\n4-5=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[17-crown-5]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,18)\\nC=25.7638,-7.1614;0,0,i2\\nC=25.0080,-8.4698;0,0,i2\\nO=23.5267,-8.2690;0,0,i0\\nC=22.8858,-9.6176;0,0,i2\\nC=21.3709,-9.5699;0,0,i2\\nO=20.7705,-8.1782;0,0,i0\\nC=19.2614,-8.3591;0,0,i2\\nC=18.4799,-7.0636;0,0,i2\\nO=19.3514,-5.8621;0,0,i0\\nC=18.4463,-4.6854;0,0,i2\\nC=19.2046,-3.3933;0,0,i2\\nO=20.6839,-3.5899;0,0,i0\\nC=21.3018,-2.2555;0,0,i2\\nC=22.7925,-2.2628;0,0,i2\\nO=23.3883,-3.6550;0,0,i0\\nC=24.8877,-3.4674;0,0,i2\\nC=25.6817,-4.7676;0,0,i2\\nO=24.8469,-5.9802;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n11-12=1,0\\n16-17=1,0\\n17-18=1,0\\n15-16=1,0\\n1-18=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[18-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,20)\\nC=-3.4089,-21.0677;0,0,i2\\nC=-4.1767,-22.3338;0,0,i2\\nC=-4.1760,-19.7823;0,0,i2\\nO=-5.6753,-22.3687;0,0,i0\\nO=-5.6837,-19.8385;0,0,i0\\nC=-5.9548,-23.7442;0,0,i2\\nC=-5.9813,-18.3858;0,0,i2\\nC=-7.3810,-24.2230;0,0,i2\\nC=-7.4086,-17.9180;0,0,i2\\nO=-8.5195,-23.2256;0,0,i0\\nO=-8.5335,-18.9110;0,0,i0\\nC=-9.6750,-17.9220;0,0,i2\\nC=-11.0728,-23.7403;0,0,i2\\nC=-11.1043,-18.4009;0,0,i2\\nO=-11.3732,-22.3272;0,0,i0\\nO=-11.3858,-19.8551;0,0,i0\\nC=-12.8889,-22.3529;0,0,i2\\nC=-12.9024,-19.8027;0,0,i2\\nC=-13.6729,-21.0850;0,0,i2\\nC=-9.6554,-24.2077;0,0,i2\\n1-2=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n11-12=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-19=1,0\\n12-14=1,0\\n13-20=1,0\\n10-20=1,0\\n3-1=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[20-crown-6]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"9\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,21)\\nC=5.3181,-17.4804;0,0,i2\\nC=3.8183,-17.4647;0,0,i2\\nO=3.1475,-18.8055;0,0,i0\\nC=1.6753,-18.4404;0,0,i2\\nC=0.7284,-19.5857;0,0,i2\\nO=1.3610,-20.9456;0,0,i0\\nC=0.1741,-21.8748;0,0,i2\\nC=0.5101,-23.3287;0,0,i2\\nO=1.9785,-23.6452;0,0,i0\\nC=1.9855,-25.1429;0,0,i2\\nC=3.3325,-25.7906;0,0,i2\\nO=4.5146,-24.8501;0,0,i0\\nC=5.6870,-25.8137;0,0,i2\\nC=7.0359,-25.1826;0,0,i2\\nC=8.3693,-19.6515;0,0,i2\\nC=7.4283,-18.4879;0,0,i2\\nO=5.9620,-18.8325;0,0,i0\\nO=7.0819,-23.6850;0,0,i0\\nO=7.7239,-20.9997;0,0,i0\\nC=8.5502,-23.3847;0,0,i2\\nC=8.9031,-21.9421;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n4-5=1,0\\n5-6=1,0\\n6-7=1,0\\n3-4=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n7-8=1,0\\n12-13=1,0\\n13-14=1,0\\n11-12=1,0\\n15-16=1,0\\n16-17=1,0\\n1-17=1,0\\n14-18=1,0\\n19-15=1,0\\n18-20=1,0\\n19-21=1,0\\n20-21=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[21-crown-7]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"10\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,24)\\nC=20.7446,-27.4663;0,0,i2\\nO=21.4914,-26.1584;0,0,i0\\nC=19.2274,-27.4663;0,0,i2\\nC=22.9335,-26.6476;0,0,i2\\nO=18.5013,-26.1469;0,0,i0\\nC=24.0269,-25.6099;0,0,i2\\nC=17.0704,-26.6026;0,0,i2\\nO=23.6289,-24.1676;0,0,i0\\nC=15.9870,-25.5356;0,0,i2\\nC=24.9576,-23.4669;0,0,i2\\nO=16.4266,-24.0844;0,0,i0\\nC=24.9616,-21.9609;0,0,i2\\nC=15.1053,-23.3507;0,0,i2\\nO=23.6462,-21.2624;0,0,i0\\nC=15.1453,-21.8561;0,0,i2\\nC=24.0717,-19.8181;0,0,i2\\nO=16.4802,-21.1978;0,0,i0\\nC=22.9846,-18.8108;0,0,i2\\nC=16.0898,-19.7657;0,0,i2\\nO=21.5453,-19.2991;0,0,i0\\nC=17.1862,-18.7823;0,0,i2\\nC=20.8284,-18.0103;0,0,i2\\nO=18.5947,-19.2887;0,0,i0\\nC=19.3270,-18.0074;0,0,i2\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n4-6=1,0\\n5-7=1,0\\n6-8=1,0\\n7-9=1,0\\n8-10=1,0\\n9-11=1,0\\n10-12=1,0\\n11-13=1,0\\n12-14=1,0\\n13-15=1,0\\n14-16=1,0\\n15-17=1,0\\n16-18=1,0\\n17-19=1,0\\n18-20=1,0\\n19-21=1,0\\n20-22=1,0\\n21-23=1,0\\n22-24=1,0\\n23-24=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[24-crown-8]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Monodentate Ligands</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"10\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(20,22)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,2.0000;0,0,i0\\nC=2.0000,-0.0000;0,0,i0\\nC=-0.0000,-2.0000;0,0,i0\\nC=-1.2990,2.7500;0,0,i1\\nC=1.2990,2.7500;0,0,i1\\nC=-1.2990,4.2500;0,0,i1\\nC=0.0000,5.0000;0,0,i1\\nC=1.2990,4.2500;0,0,i1\\nC=2.7500,1.2990;0,0,i1\\nC=2.7500,-1.2990;0,0,i1\\nC=4.2500,1.2990;0,0,i1\\nC=5.0000,-0.0000;0,0,i1\\nC=4.2500,-1.2990;0,0,i1\\nC=1.2990,-2.7500;0,0,i1\\nC=-1.2990,-2.7500;0,0,i1\\nC=1.2990,-4.2500;0,0,i1\\nC=-0.0000,-5.0000;0,0,i1\\nC=-1.2990,-4.2500;0,0,i1\\nX=-2.0000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n2-5=1,0\\n2-6=2,0\\n5-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n3-10=1,0\\n3-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n4-15=1,0\\n4-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n1-20=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[triphenylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Ph{3}]]></Cell></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nP=0.0000,0.0000;0,0,i0\\nC=0.0000,1.5000;0,0,i3\\nC=1.5000,-0.0000;0,0,i3\\nC=-0.0000,-1.5000;0,0,i3\\nX=-1.5000,0.0000;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[trimethylphosphine]]></Cell><Cell id=\\\"3\\\"><![CDATA[P|Me{3}]]></Cell></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-2.7000,3.9500;0,0,i0\\nC=-1.2000,3.9500;0,0,i0\\nN=-0.3200,2.7400;0,0,i0\\nC=1.1100,3.2000;0,0,i1\\nN=-0.3200,5.1600;0,0,i0\\nC=1.1100,4.7000;0,0,i1\\nC=-0.7853,6.5860;0,0,i3\\nC=-0.7853,1.3140;0,0,i3\\n1-2=2,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=2,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[imidazolidine]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(3,2)\\nX=-0.9000,0.3500;0,0,i0\\nC=0.6000,0.3500;0,0,e0\\nO=2.1000,0.3500;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[carbonyl]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.1500,3.2705;0,0,i2\\nC=1.3500,3.2705;0,0,i3\\nC=-0.1500,0.6724;0,0,i2\\nC=1.3500,0.6724;0,0,i3\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n2-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[diethylether]]></Cell><Cell id=\\\"3\\\"><![CDATA[O|Et{2}]]></Cell></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,6)\\nX=-2.4000,1.9714;0,0,i0\\nO=-0.9000,1.9714;0,0,i0\\nC=-0.0200,0.7614;0,0,i2\\nC=1.4100,1.2214;0,0,i2\\nC=-0.0200,3.1814;0,0,i2\\nC=1.4100,2.7214;0,0,i2\\n1-2=0,0\\n4-3=1,0\\n3-2=1,0\\n2-5=1,0\\n5-6=1,0\\n6-4=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tetrahydrofuran]]></Cell><Cell id=\\\"3\\\"><![CDATA[THF]]></Cell></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nC=2.0000,-0.9143;0,0,i0\\nN=2.7500,-2.2133;0,0,i0\\nC=4.2500,-2.2133;0,0,i3\\nC=2.0000,-3.5124;0,0,i3\\nH=2.7500,0.3848;0,0,i0\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n4-5=1,0\\n4-6=1,0\\n3-7=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylformamide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMF]]></Cell></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,4)\\nX=-1.0000,-0.9143;0,0,i0\\nO=0.5000,-0.9143;0,0,i0\\nS=2.0000,-0.9143;0,0,i0\\nC=2.7500,-2.2133;0,0,i3\\nC=2.7500,0.3848;0,0,i3\\n1-2=0,0\\n2-3=2,0\\n3-4=1,0\\n3-5=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[dimethylsulfoxide]]></Cell><Cell id=\\\"3\\\"><![CDATA[DMSO]]></Cell></Row><Row id=\\\"9\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,7)\\nC=6.8500,0.0490;0,0,i1\\nC=5.3500,0.0490;0,0,i1\\nC=7.6000,-1.2500;0,0,i1\\nN=4.6000,-1.2500;0,0,i0\\nC=5.3500,-2.5490;0,0,i1\\nC=6.8500,-2.5490;0,0,i1\\nX=3.1000,-1.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n4-7=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[pyridine]]></Cell><Cell id=\\\"3\\\"><![CDATA[Py]]></Cell></Row><Row id=\\\"10\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(22,24)\\nX=0.0000,-0.1997;0,0,i0\\nC=0.0000,1.9965;0,2,i0\\nN=1.2135,2.8782;0,0,i0\\nC=0.7500,4.3048;0,0,i1\\nC=-0.7500,4.3048;0,0,i1\\nN=-1.2135,2.8782;0,0,i0\\nC=-2.7135,2.8782;0,0,i0\\nC=2.7135,2.8782;0,0,i0\\nC=-3.4635,4.1772;0,0,i0\\nC=-4.9635,4.1772;0,0,i1\\nC=-5.7135,2.8782;0,0,i1\\nC=-4.9635,1.5791;0,0,i1\\nC=-3.4635,1.5791;0,0,i0\\nC=3.4635,1.5791;0,0,i0\\nC=4.9635,1.5791;0,0,i1\\nC=5.7135,2.8782;0,0,i1\\nC=4.9635,4.1772;0,0,i1\\nC=3.4635,4.1772;0,0,i0\\n{^i}Pr=-2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,0.2801;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n{^i}Pr=-2.7135,5.4763;0,0,i0,aSketchEl!(4\\\\002C3)\\\\000A*\\\\003D-6.4450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci0\\\\000AC\\\\003D-4.1950\\\\002C3.3204\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.1950\\\\002C0.7224\\\\003B0\\\\002C0\\\\002Ci3\\\\000AC\\\\003D-4.9450\\\\002C2.0214\\\\003B0\\\\002C0\\\\002Ci1\\\\000A4-2\\\\003D1\\\\002C0\\\\000A4-3\\\\003D1\\\\002C0\\\\000A4-1\\\\003D1\\\\002C0\\\\000A!End\\\\000A\\n1-2=0,0\\n2-3=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-2=1,0\\n6-7=1,0\\n3-8=1,0\\n7-9=2,0\\n9-10=1,0\\n10-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-7=1,0\\n8-14=2,0\\n14-15=1,0\\n15-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-8=1,0\\n13-19=1,0\\n14-20=1,0\\n18-21=1,0\\n9-22=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[IPr]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Bidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"11\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bipyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[bipy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,15)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i1\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i1\\nC=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=1,0\\n13-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phpy]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,8)\\nX=-0.8000,3.2500;0,0,i0\\nO=-0.0500,1.9510;0,0,i0,xRESPATH:1:1\\nC=1.4500,1.9510;0,0,i0,xRESPATH:1:2\\nC=2.2000,3.2499;0,0,i1,xRESPATH:1:3\\nC=1.4500,4.5491;0,0,i0,xRESPATH:1:4\\nO=-0.0500,4.5491;0,0,i0,xRESPATH:1:5\\nC=2.2001,5.8481;0,0,i3\\nC=2.1999,0.6519;0,0,i3\\n2-3=2,0\\n2-1=0,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=1,0\\n5-7=1,0\\n3-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetylacetonate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[acac]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-3.2985,-1.8750;0,0,i0\\nC=0.4506,-1.8500;0,0,i3\\nC=-1.0494,-1.8500;0,0,i0,xRESPATH:1:2\\nO=-1.7995,-3.1491;0,0,i0,xRESPATH:1:1\\nO=-1.7994,-0.5509;0,0,i0,xRESPATH:1:3\\n2-3=1,0\\n3-4=2,0\\n3-5=1,0\\n5-1=1,0\\n4-1=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[acetate]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nC=2.7915,1.5000;0,0,i1\\nC=4.0905,0.7500;0,0,i1\\nC=1.4925,0.7500;0,0,i1\\nC=4.0905,-0.7500;0,0,i0\\nC=2.7915,-1.5000;0,0,i0\\nN=1.4925,-0.7500;0,0,i0\\nC=2.7915,-3.0000;0,0,i0\\nC=4.0905,-3.7500;0,0,i0\\nN=1.4925,-3.7500;0,0,i0\\nC=4.0905,-5.2500;0,0,i1\\nC=2.7915,-6.0000;0,0,i1\\nC=1.4925,-5.2500;0,0,i1\\nX=-1.1000,-2.2500;0,0,i0\\nC=5.3896,-3.0000;0,0,i1\\nC=5.3896,-1.5000;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n13-9=0,0\\n13-6=0,0\\n8-14=1,0\\n14-15=2,0\\n15-4=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenanthroline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[phen]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(5,5)\\nX=-1.6500,0.6500;0,0,i0\\nN=0.1300,-0.5600;0,0,i2\\nC=1.5600,-0.1000;0,0,i2\\nN=0.1300,1.8600;0,0,i2\\nC=1.5600,1.4000;0,0,i2\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylenediamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[en]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,14)\\nC=4.1514,2.1507;0,0,i1\\nC=2.8524,2.9007;0,0,i1\\nC=1.5534,2.1507;0,0,i1\\nN=1.5534,0.6507;0,0,i0\\nC=2.8524,-0.0993;0,0,i0\\nC=4.1515,0.6507;0,0,i0\\nC=5.4505,-0.0993;0,0,i1\\nC=2.8524,-1.5993;0,0,i0\\nC=4.1515,-2.3494;0,0,i1\\nC=5.4505,-1.5994;0,0,i1\\nO=1.5534,-2.3493;0,0,i0\\nX=-0.1457,-0.9064;0,0,i0\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n7-6=1,0\\n5-8=1,0\\n8-9=2,0\\n9-10=1,0\\n10-7=2,0\\n8-11=1,0\\n11-12=1,0\\n12-4=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[oxyquinoline]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(29,33)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nC=3.2440,0.6290;0,0,i2\\nP=1.8140,-1.3310;0,0,i0\\nC=3.2440,-0.8710;0,0,i2\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\n3-2=1,0\\n2-1=0,0\\n1-4=0,0\\n4-5=1,0\\n5-3=1,0\\n2-6=1,0\\n2-7=1,0\\n4-8=1,0\\n4-9=1,0\\n7-10=1,0\\n7-11=2,0\\n10-12=2,0\\n12-13=1,0\\n13-14=2,0\\n14-11=1,0\\n6-15=1,0\\n6-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n8-20=1,0\\n8-21=2,0\\n20-22=2,0\\n22-23=1,0\\n23-24=2,0\\n24-21=1,0\\n9-25=1,0\\n9-26=2,0\\n25-27=2,0\\n27-28=1,0\\n28-29=2,0\\n29-26=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[ethylene bis(diphenylphosphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppe]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(28,32)\\nX=-0.3660,-0.1210;0,0,i0\\nP=1.8140,1.0890;0,0,i0\\nP=1.8140,-1.3310;0,0,i0\\nC=1.0487,2.5150;0,0,i0\\nC=2.8725,2.1519;0,0,i0\\nC=1.0487,-2.7570;0,0,i0\\nC=2.8725,-2.3939;0,0,i0\\nC=4.3221,1.7667;0,0,i1\\nC=2.4812,3.5999;0,0,i1\\nC=5.3806,2.8295;0,0,i1\\nC=4.9894,4.2776;0,0,i1\\nC=3.5397,4.6628;0,0,i1\\nC=1.8387,3.7901;0,0,i1\\nC=-0.4505,2.5616;0,0,i1\\nC=1.1294,5.1118;0,0,i1\\nC=-0.3699,5.1584;0,0,i1\\nC=-1.1598,3.8833;0,0,i1\\nC=-0.4505,-2.8036;0,0,i1\\nC=1.8387,-4.0321;0,0,i1\\nC=-1.1598,-4.1253;0,0,i1\\nC=-0.3699,-5.4004;0,0,i1\\nC=1.1294,-5.3538;0,0,i1\\nC=2.4812,-3.8419;0,0,i1\\nC=4.3221,-2.0087;0,0,i1\\nC=3.5397,-4.9048;0,0,i1\\nC=4.9893,-4.5196;0,0,i1\\nC=5.3806,-3.0716;0,0,i1\\nC=3.5430,-0.1210;0,0,i2\\n2-1=0,0\\n1-3=0,0\\n2-4=1,0\\n2-5=1,0\\n3-6=1,0\\n3-7=1,0\\n5-8=1,0\\n5-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n4-13=1,0\\n4-14=2,0\\n13-15=2,0\\n15-16=1,0\\n16-17=2,0\\n17-14=1,0\\n6-18=1,0\\n6-19=2,0\\n18-20=2,0\\n20-21=1,0\\n21-22=2,0\\n22-19=1,0\\n7-23=1,0\\n7-24=2,0\\n23-25=2,0\\n25-26=1,0\\n26-27=2,0\\n27-24=1,0\\n2-28=1,0\\n3-28=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methylene bis(diphenylphonsphine)]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dppm]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,10)\\nX=-3.3500,-0.0500;0,0,i0\\nO=-1.6700,-1.2600;0,0,i0\\nC=-0.2400,-0.8000;0,0,i0\\nO=-1.6700,1.1600;0,0,i0\\nC=-0.2400,0.7000;0,0,i0\\nC=1.0590,1.4499;0,0,i1\\nC=1.0590,-1.5500;0,0,i1\\nC=2.3581,-0.8000;0,0,i1\\nC=2.3581,0.6999;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=2,0\\n3-7=2,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[catecholate]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[cat]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nX=-2.9010,4.6990;0,0,i0\\nO=-1.4010,4.6990;0,0,i0\\nC=0.0990,4.6990;0,0,i1\\nC=0.8490,5.9981;0,0,i3\\nC=0.8490,3.4000;0,0,i2\\nC=0.0990,2.1010;0,0,i1\\nO=-1.4010,2.1010;0,0,i0\\nC=0.8490,0.8019;0,0,i3\\nX=-2.9010,2.1009;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n3-5=1,0\\n5-6=1,0\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[bridging acac]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Tridentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"3\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(19,23)\\nC=2.9998,2.0011;0,0,i1\\nC=4.4998,2.0011;0,0,i1\\nC=2.2498,0.7021;0,0,i1\\nC=5.2498,0.7021;0,0,i1\\nC=4.4998,-0.5969;0,0,i0\\nN=2.9998,-0.5969;0,0,i0\\nC=5.2498,-1.8960;0,0,i0\\nC=6.7498,-1.8960;0,0,i1\\nN=4.4998,-3.1950;0,0,i0\\nC=7.4998,-3.1950;0,0,i1\\nC=6.7498,-4.4940;0,0,i1\\nC=5.2498,-4.4940;0,0,i0\\nC=4.4999,-5.7930;0,0,i0\\nN=2.9999,-5.7930;0,0,i0\\nC=5.2499,-7.0921;0,0,i1\\nC=2.2498,-7.0921;0,0,i1\\nC=2.9998,-8.3911;0,0,i1\\nC=4.4998,-8.3912;0,0,i1\\nX=1.4998,-3.1950;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n5-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n12-13=1,0\\n13-14=1,0\\n13-15=2,0\\n14-16=2,0\\n16-17=1,0\\n17-18=2,0\\n18-15=1,0\\n6-19=0,0\\n9-19=0,0\\n14-19=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[terpyridine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[terpy]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(4,5)\\nX=-7.0728,1.0229;0,0,i0,xARENE:1:1\\nC=-5.3624,2.3410;0,0,i2,xARENE:1:2\\nC=-4.5676,1.0688;0,0,i1,xARENE:1:3\\nC=-5.2718,-0.2556;0,0,i2,xARENE:1:4\\n2-3=2,0\\n3-4=1,0\\n1-4=1,0\\n1-3=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[allyl]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,9)\\nC=3.6861,-1.8600;0,0,i2\\nN=2.1861,-1.8600;0,0,i2\\nC=4.4361,-3.1590;0,0,i2\\nN=3.6861,-4.4580;0,0,i1\\nC=4.4361,-5.7571;0,0,i2\\nC=3.6861,-7.0561;0,0,i2\\nN=2.1862,-7.0561;0,0,i2\\nX=0.6861,-4.4580;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n3-4=1,0\\n5-4=1,0\\n5-6=1,0\\n6-7=1,0\\n2-8=0,0\\n4-8=0,0\\n7-8=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[diethylaminetriamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[dien]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Multidentate Ligands</Title>\\n<Description><![CDATA[]]></Description>\\n</Summary>\\n<Header nrows=\\\"5\\\" ncols=\\\"3\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Optional abbreviation</Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.6500,-0.1000;0,0,i1,xARENE:2:2\\nC=5.1000,-2.3000;0,0,i1,xARENE:1:3\\nC=5.6500,2.4000;0,0,i1,xARENE:2:3\\nC=5.1000,0.2000;0,0,i1,xARENE:1:2\\nC=7.0319,1.5176;0,0,i2\\nC=7.5819,3.0176;0,0,i2\\nC=7.5819,-1.0824;0,0,i2\\nC=7.0319,-2.5824;0,0,i2\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n4-7=1,0\\n2-8=1,0\\n3-9=1,0\\n6-7=1,0\\n9-8=1,0\\n1-3=0,0\\n1-5=0,0\\n1-4=0,0\\n1-2=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclooctadiene]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[COD]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,12)\\nX=3.7990,0.0000;0,0,i0,xARENE:2:1,xARENE:1:1\\nC=5.8000,0.0500;0,0,i1\\nC=7.1000,1.2500;0,0,i1\\nC=4.7000,1.7651;0,0,i1,xARENE:1:2\\nC=6.3000,2.4651;0,0,i1,xARENE:1:3\\nC=5.5500,-2.0000;0,0,i1,xARENE:2:2\\nC=6.8500,-0.8000;0,0,i1,xARENE:2:3\\nC=8.5000,0.6500;0,0,i2\\n2-4=1,0\\n3-5=1,0\\n2-6=1,0\\n3-7=1,0\\n6-7=2,0\\n2-8=1,0\\n8-3=1,0\\n4-5=2,0\\n1-4=0,0\\n1-5=0,0\\n1-6=0,0\\n1-7=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[norbornadiene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,10)\\nC=0.2150,2.1200;0,0,i1,xARENE:1:2\\nC=-1.0950,3.1700;0,0,i1,xARENE:1:4\\nC=-0.1650,3.6300;0,0,i1,xARENE:1:3\\nC=-0.1650,0.6100;0,0,i1,xARENE:1:6\\nC=-1.0950,1.0700;0,0,i1,xARENE:1:5\\nX=-2.2110,2.0800;0,0,i0,xARENE:1:1\\n2-3=2,0\\n3-1=1,0\\n1-4=1,0\\n4-5=2,0\\n5-2=1,0\\n6-1=1,0\\n3-6=0,0\\n4-6=0,0\\n5-6=0,0\\n2-6=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,12)\\nC=0.7490,6.7000;0,0,i1,xARENE:1:2\\nC=0.2000,5.9500;0,0,i1,xARENE:1:3\\nC=1.2981,6.0500;0,0,i1,xARENE:1:7\\nC=0.2000,4.4500;0,0,i1,xARENE:1:4\\nC=0.7490,3.7000;0,0,i1,xARENE:1:5\\nC=1.2981,4.3500;0,0,i1,xARENE:1:6\\nX=-1.3490,5.2000;0,0,i0,xARENE:1:1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n2-7=0,0\\n4-7=0,0\\n7-1=0,0\\n7-5=0,0\\n7-6=0,0\\n7-3=0,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arene]]></Cell>\\n<Cell id=\\\"3\\\"></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,15)\\nX=0.0000,0.0000;0,0,i0,xARENE:1:1\\nC=2.9263,-0.0154;0,0,i0,xARENE:1:2\\nC=1.5927,-1.0352;0,0,i0,xARENE:1:4\\nC=2.5119,-1.5163;0,0,i0,xARENE:1:3\\nC=2.5809,1.5029;0,0,i0,xARENE:1:6\\nC=1.6407,1.0642;0,0,i0,xARENE:1:5\\nC=3.7728,-0.0348;0,0,i3\\nC=2.8692,2.9749;0,0,i3\\nC=0.9137,2.3762;0,0,i3\\nC=0.8354,-2.3300;0,0,i3\\nC=2.7329,-3.0000;0,0,i3\\n3-4=2,0\\n4-2=1,0\\n2-5=1,0\\n5-6=2,0\\n6-3=1,0\\n1-2=1,0\\n4-1=0,0\\n5-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-7=1,0\\n5-8=1,0\\n6-9=1,0\\n3-10=1,0\\n4-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[pentamethylcyclopentadienyl]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cp*]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<DataSheet><Summary><Title>Cage Complexes</Title><Description><![CDATA[]]></Description></Summary><Extension/><Header nrows=\\\"8\\\" ncols=\\\"3\\\"><Column id=\\\"1\\\" name=\\\"Molecule\\\" type=\\\"molecule\\\">Molecular structure</Column><Column id=\\\"2\\\" name=\\\"Name\\\" type=\\\"string\\\">Template name</Column><Column id=\\\"3\\\" name=\\\"Abbrev\\\" type=\\\"string\\\">Optional abbreviation</Column></Header><Content><Row id=\\\"1\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,25)\\nM=-0.6000,2.4500;0,0,i0\\nN=-1.3500,3.7490;0,0,i0\\nO=0.1500,1.1510;0,0,i0\\nO=0.9000,2.4500;0,0,i0\\nO=-2.1000,2.4500;0,0,i0\\nO=-1.3500,1.1510;0,0,i0\\nN=0.1500,3.7490;0,0,i0\\nC=-0.9618,5.1979;0,0,i2\\nC=-0.2382,5.1979;0,0,i2\\nC=-2.7989,4.1373;0,0,i2\\nC=-3.3990,3.2000;0,0,i0\\nC=2.1990,3.2000;0,0,i0\\nC=1.5989,4.1373;0,0,i2\\nC=-3.0821,2.1510;0,0,i0\\nC=1.8821,2.1510;0,0,i0\\nC=1.4938,3.5999;0,0,i2\\nC=-2.6938,3.5999;0,0,i2\\nO=3.2679,1.5769;0,0,i0\\nO=3.6975,3.2689;0,0,i0\\nO=-4.4679,1.5769;0,0,i0\\nO=-4.8975,3.2689;0,0,i0\\n1-2=0,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n1-6=1,0\\n1-7=0,0\\n2-8=1,0\\n7-9=1,0\\n8-9=1,0\\n2-10=1,0\\n5-11=1,0\\n4-12=1,0\\n7-13=1,0\\n12-13=1,0\\n11-10=1,0\\n6-14=1,0\\n3-15=1,0\\n15-16=1,0\\n14-17=1,0\\n17-2=1,0\\n16-7=1,0\\n15-18=2,0\\n12-19=2,0\\n14-20=2,0\\n11-21=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[EDTA]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"2\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=-0.3000,1.2000;0,0,i0\\nN=-1.7142,2.6142;0,0,i0\\nN=1.1142,2.6142;0,0,i0\\nN=1.1142,-0.2142;0,0,i0\\nN=-1.7142,-0.2142;0,0,i0\\nC=-3.1921,0.0191;0,0,i0\\nC=-3.8780,-1.3173;0,0,i1\\nC=-1.4809,-1.6921;0,0,i0\\nC=-2.8173,-2.3780;0,0,i1\\nC=-1.4809,4.0921;0,0,i0\\nC=-2.8173,4.7780;0,0,i1\\nC=-3.1921,2.3809;0,0,i0\\nC=-3.8780,3.7173;0,0,i1\\nC=2.5921,2.3809;0,0,i0\\nC=3.2780,3.7173;0,0,i1\\nC=0.8809,4.0921;0,0,i0\\nC=2.2173,4.7780;0,0,i1\\nC=0.8809,-1.6921;0,0,i0\\nC=2.2173,-2.3780;0,0,i1\\nC=2.5921,0.0191;0,0,i0\\nC=3.2780,-1.3173;0,0,i1\\nC=-3.8714,1.2000;0,0,i1\\nC=-0.3000,4.7714;0,0,i1\\nC=3.2714,1.2000;0,0,i1\\nC=-0.3000,-2.3714;0,0,i1\\n1-2=1,0\\n1-3=0,0\\n1-4=1,0\\n1-5=0,0\\n7-6=1,0\\n6-5=1,0\\n5-8=2,0\\n8-9=1,0\\n9-7=2,0\\n11-10=2,0\\n10-2=1,0\\n2-12=1,0\\n12-13=2,0\\n13-11=1,0\\n15-14=1,0\\n14-3=2,0\\n3-16=1,0\\n16-17=1,0\\n17-15=2,0\\n19-18=1,0\\n18-4=1,0\\n4-20=1,0\\n20-21=1,0\\n21-19=2,0\\n6-22=2,0\\n10-23=1,0\\n14-24=1,0\\n18-25=2,0\\n22-12=1,0\\n23-16=2,0\\n24-20=2,0\\n25-8=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrin]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"3\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(25,32)\\nM=1.5000,0.0000;0,0,i0\\nN=2.9117,1.4117;0,0,i0\\nN=0.0882,-1.4117;0,0,i0\\nN=2.9117,-1.4117;0,0,i0\\nN=0.0882,1.4117;0,0,i0\\nC=-2.0755,-2.5147;0,0,i1\\nC=-1.3895,-1.1783;0,0,i0\\nC=0.3215,-2.8895;0,0,i0\\nC=-1.0148,-3.5754;0,0,i1\\nC=5.0755,2.5147;0,0,i1\\nC=4.3895,1.1783;0,0,i0\\nC=2.6784,2.8895;0,0,i0\\nC=4.0148,3.5754;0,0,i1\\nC=-1.0148,3.5754;0,0,i1\\nC=0.3216,2.8895;0,0,i0\\nC=-1.3895,1.1783;0,0,i0\\nC=-2.0754,2.5148;0,0,i1\\nC=4.0148,-3.5754;0,0,i1\\nC=2.6783,-2.8895;0,0,i0\\nC=4.3895,-1.1783;0,0,i0\\nC=5.0754,-2.5148;0,0,i1\\nN=-1.9510,-0.0731;0,0,i0\\nN=1.4268,3.4510;0,0,i0\\nN=4.9510,0.0731;0,0,i0\\nN=1.5731,-3.4510;0,0,i0\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n6-7=1,0\\n7-3=2,0\\n3-8=1,0\\n8-9=1,0\\n9-6=2,0\\n10-11=1,0\\n11-2=2,0\\n2-12=1,0\\n12-13=1,0\\n13-10=2,0\\n14-15=1,0\\n15-5=2,0\\n5-16=1,0\\n16-17=1,0\\n17-14=2,0\\n18-19=1,0\\n19-4=2,0\\n4-20=1,0\\n20-21=1,0\\n21-18=2,0\\n7-22=1,0\\n15-23=1,0\\n11-24=1,0\\n19-25=1,0\\n8-25=2,0\\n16-22=2,0\\n12-23=2,0\\n20-24=2,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[porphyrinoid]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"4\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,20)\\nM=12.1738,-1.7111;0,0,i0,xARENE:1:1,xARENE:2:1\\nC=13.1284,-0.5301;0,0,i1,xARENE:1:2\\nC=11.2193,-0.5301;0,0,i1,xARENE:1:3\\nC=11.2193,-2.8920;0,0,i1,xARENE:2:2\\nC=13.1284,-2.8920;0,0,i1,xARENE:2:3\\nC=10.8390,-3.7589;0,0,i1,xARENE:2:6\\nC=12.1738,-4.1749;0,0,i1,xARENE:2:5\\nC=13.5087,-3.7589;0,0,i1,xARENE:2:4\\nC=13.5087,0.3368;0,0,i1,xARENE:1:6\\nC=12.1738,0.7528;0,0,i1,xARENE:1:5\\nC=10.8390,0.3368;0,0,i1,xARENE:1:4\\n2-3=1,0\\n4-5=1,0\\n4-6=2,0\\n6-7=1,0\\n7-8=1,0\\n8-5=2,0\\n2-9=2,0\\n9-10=1,0\\n10-11=1,0\\n11-3=2,0\\n10-1=1,0\\n7-1=1,0\\n8-1=0,0\\n5-1=0,0\\n4-1=0,0\\n6-1=0,0\\n3-1=0,0\\n2-1=0,0\\n9-1=0,0\\n11-1=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[metallocene]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"5\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(37,45)\\nM=1.5000,0.0000;0,0,i0\\nC=5.3914,3.7500;0,0,i1\\nC=6.6904,3.0000;0,0,i1\\nC=4.0924,3.0000;0,0,i1\\nC=6.6904,1.5000;0,0,i1\\nC=5.3914,0.7500;0,0,i0\\nN=4.0924,1.5000;0,0,i0\\nC=5.3914,-0.7500;0,0,i0\\nC=6.6904,-1.5000;0,0,i1\\nN=4.0924,-1.5000;0,0,i0\\nC=6.6904,-3.0000;0,0,i1\\nC=5.3914,-3.7500;0,0,i1\\nC=4.0924,-3.0000;0,0,i1\\nC=-3.6940,1.4927;0,0,i1\\nC=-3.6946,2.9927;0,0,i1\\nC=-2.3946,0.7433;0,0,i1\\nC=-2.3959,3.7433;0,0,i1\\nC=-1.0966,2.9939;0,0,i0\\nN=-1.0959,1.4939;0,0,i0\\nC=0.2020,3.7445;0,0,i0\\nC=0.2013,5.2445;0,0,i1\\nN=1.5014,2.9951;0,0,i0\\nC=1.5000,5.9951;0,0,i1\\nC=2.7994,5.2457;0,0,i1\\nC=2.8001,3.7457;0,0,i1\\nC=2.8030,-5.2448;0,0,i1\\nC=1.5041,-5.9951;0,0,i1\\nC=2.8026,-3.7448;0,0,i1\\nC=0.2049,-5.2453;0,0,i1\\nC=0.2046,-3.7454;0,0,i0\\nN=1.5034,-2.9951;0,0,i0\\nC=-1.0945,-2.9957;0,0,i0\\nC=-2.3934,-3.7459;0,0,i1\\nN=-1.0949,-1.4957;0,0,i0\\nC=-3.6926,-2.9962;0,0,i1\\nC=-3.6930,-1.4963;0,0,i1\\nC=-2.3941,-0.7460;0,0,i1\\n2-3=1,0\\n2-4=2,0\\n3-5=2,0\\n5-6=1,0\\n6-7=2,0\\n7-4=1,0\\n6-8=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n1-10=0,0\\n1-7=0,0\\n14-15=1,0\\n14-16=2,0\\n15-17=2,0\\n17-18=1,0\\n18-19=2,0\\n19-16=1,0\\n18-20=1,0\\n20-21=1,0\\n20-22=2,0\\n21-23=2,0\\n23-24=1,0\\n24-25=2,0\\n25-22=1,0\\n1-22=0,0\\n1-19=0,0\\n26-27=1,0\\n26-28=2,0\\n27-29=2,0\\n29-30=1,0\\n30-31=2,0\\n31-28=1,0\\n30-32=1,0\\n32-33=1,0\\n32-34=2,0\\n33-35=2,0\\n35-36=1,0\\n36-37=2,0\\n37-34=1,0\\n1-34=0,0\\n1-31=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tris-bipy]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"6\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(15,18)\\nN=0.0000,0.0000;0,0,i1\\nC=-1.5000,0.0000;0,0,i2\\nC=-2.2500,-1.2990;0,0,i2\\nC=-1.5000,-2.5981;0,0,i2\\nN=-0.0000,-2.5981;0,0,i1\\nC=0.7500,1.2990;0,0,i2\\nC=2.2500,1.2990;0,0,i2\\nN=3.0000,-0.0000;0,0,i1\\nC=4.5000,-0.0000;0,0,i2\\nC=5.2500,-1.2990;0,0,i2\\nC=4.5000,-2.5981;0,0,i2\\nN=3.0000,-2.5981;0,0,i1\\nC=0.7500,-3.8971;0,0,i2\\nC=2.2500,-3.8971;0,0,i2\\nM=1.5000,-1.3000;0,0,i0\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n4-5=1,0\\n1-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=1,0\\n11-12=1,0\\n5-13=1,0\\n12-14=1,0\\n14-13=1,0\\n1-15=0,0\\n15-12=0,0\\n5-15=0,0\\n15-8=0,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[tren]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"7\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,13)\\nM=1.4999,0.0000;0,0,i0\\nN=1.4999,1.5000;0,0,i2\\nN=1.4999,-1.5000;0,0,i2\\nN=0.2009,0.7500;0,0,i2\\nN=0.2009,-0.7500;0,0,i0\\nC=0.4393,-2.5606;0,0,i2\\nC=-1.2479,-0.3617;0,0,i2\\nC=-0.1872,-2.1988;0,0,i2\\nC=-1.2479,0.3617;0,0,i2\\nC=0.0511,1.8882;0,0,i2\\nC=-0.7973,0.9790;0,0,i2\\n1-2=0,0\\n1-3=0,0\\n1-4=0,0\\n1-5=0,0\\n3-6=1,0\\n5-7=1,0\\n5-8=1,0\\n4-9=1,0\\n7-9=1,0\\n6-8=1,0\\n2-10=1,0\\n5-11=1,0\\n10-11=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N4]]></Cell><Cell id=\\\"3\\\"/></Row><Row id=\\\"8\\\"><Cell id=\\\"1\\\"><![CDATA[SketchEl!(21,27)\\nN=3.2639,-1.3522;0,0,i1\\nC=1.8122,-0.7585;0,0,i2\\nC=1.8056,0.7411;0,0,i2\\nN=3.2521,1.3475;0,0,i1\\nN=5.9520,1.3594;0,0,i1\\nC=7.4037,0.7657;0,0,i2\\nC=7.4103,-0.7339;0,0,i2\\nN=5.9639,-1.3403;0,0,i1\\nC=3.2705,-2.8521;0,0,i2\\nC=5.9705,-2.8402;0,0,i2\\nC=5.9454,2.8594;0,0,i2\\nC=3.2455,2.8475;0,0,i2\\nC=4.6431,3.6036;0,0,i1\\nC=4.5728,-3.5963;0,0,i1\\nM=4.6052,-0.0128;0,0,i0\\nN=4.5994,1.4890;0,0,i1\\nN=4.6133,-1.5126;0,0,i1\\nC=4.1980,2.5347;0,0,i2\\nC=4.2120,-2.5583;0,0,i2\\nC=2.8657,-0.6612;0,0,i2\\nC=2.8489,0.6376;0,0,i2\\n1-2=1,0\\n2-3=1,0\\n3-4=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n1-9=1,0\\n8-10=1,0\\n5-11=1,0\\n4-12=1,0\\n11-13=1,0\\n13-12=1,0\\n9-14=1,0\\n14-10=1,0\\n1-15=0,0\\n4-15=0,0\\n8-15=0,0\\n5-15=0,0\\n15-16=0,0\\n15-17=0,0\\n16-18=1,0\\n13-18=1,0\\n17-19=1,0\\n19-14=1,0\\n17-20=1,0\\n16-21=1,0\\n21-20=1,0\\n!End\\n]]></Cell><Cell id=\\\"2\\\"><![CDATA[N6]]></Cell><Cell id=\\\"3\\\"/></Row></Content></DataSheet>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n<Summary>\\n<Title>Amino Acids</Title><Description><![CDATA[]]></Description></Summary>\\n<Header nrows=\\\"20\\\" ncols=\\\"4\\\">\\n<Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n<Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n<Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n<Column name=\\\"Mnemonic\\\" type=\\\"string\\\" id=\\\"4\\\"></Column>\\n</Header>\\n<Content>\\n<Row id=\\\"1\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(7,6)\\nC=-6.5731,8.0000;0,0,i0\\nO=-6.5731,9.5000;0,0,i0\\nC=-7.8721,7.2500;0,0,i1\\nX=-5.2741,7.2500;0,0,i0\\nN=-9.1712,8.0000;0,0,i1\\nC=-7.8721,5.7500;0,0,i3\\nX=-10.4702,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n5-7=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[alanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ala]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[A]]></Cell>\\n</Row>\\n<Row id=\\\"2\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5524,7.2500;0,0,i0\\nN=-9.4495,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nS=-6.8515,5.0000;0,0,i1\\nX=-10.7485,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[cysteine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Cys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[C]]></Cell>\\n</Row>\\n<Row id=\\\"3\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nO=-7.5009,3.5000;-1,0,i0\\nO=-6.2020,5.7499;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[aspartic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[D]]></Cell>\\n</Row>\\n<Row id=\\\"4\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3830,8.0000;0,0,i0\\nO=-7.3830,9.5000;0,0,i0\\nC=-8.6820,7.2500;0,0,i1\\nX=-6.0840,7.2500;0,0,i0\\nN=-9.9811,8.0000;0,0,i1\\nC=-8.6820,5.7500;0,0,i2\\nC=-7.3830,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nO=-6.0838,2.7500;-1,0,i0\\nO=-8.6819,2.7500;0,0,i0\\nX=-11.2801,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamic acid]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Glu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[E]]></Cell>\\n</Row>\\n<Row id=\\\"5\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,13)\\nC=-8.8000,8.0000;0,0,i0\\nO=-8.8000,9.5000;0,0,i0\\nC=-10.0990,7.2500;0,0,i1\\nX=-7.5010,7.2500;0,0,i0\\nN=-11.3981,8.0000;0,0,i1\\nC=-10.0990,5.7500;0,0,i2\\nC=-8.8000,5.0000;0,0,i0\\nC=-8.8000,3.5000;0,0,i1\\nC=-7.5010,5.7500;0,0,i1\\nC=-7.5010,2.7500;0,0,i1\\nC=-6.2019,3.5000;0,0,i1\\nC=-6.2019,5.0000;0,0,i1\\nX=-12.6971,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[phenylalanine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Phe]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[F]]></Cell>\\n</Row>\\n<Row id=\\\"6\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(6,5)\\nC=-6.6349,8.0000;0,0,i0\\nO=-6.6349,9.5000;0,0,i0\\nC=-7.9339,7.2500;0,0,i2\\nX=-5.3359,7.2500;0,0,i0\\nN=-9.2330,8.0000;0,0,i1\\nX=-10.5320,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n5-6=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glycine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gly]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[G]]></Cell>\\n</Row>\\n<Row id=\\\"7\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=-8.4232,8.0000;0,0,i0\\nO=-8.4232,9.5000;0,0,i0\\nC=-9.7222,7.2500;0,0,i1\\nX=-7.1242,7.2500;0,0,i0\\nN=-11.0213,8.0000;0,0,i1\\nC=-9.7222,5.7500;0,0,i2\\nC=-8.4232,5.0000;0,0,i0\\nC=-6.0475,4.4955;0,0,i1\\nN=-6.7961,3.2002;0,0,i1\\nC=-8.2664,3.5081;0,0,i1\\nN=-7.0492,5.6069;0,0,i0\\nX=-12.3203,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n10-9=1,0\\n9-8=1,0\\n8-11=2,0\\n11-7=1,0\\n7-10=2,0\\n5-12=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[histidine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[His]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[H]]></Cell>\\n</Row>\\n<Row id=\\\"8\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-6.7216,8.0000;0,0,i0\\nO=-6.7216,9.5000;0,0,i0\\nC=-8.0206,7.2500;0,0,i1\\nX=-5.4226,7.2500;0,0,i0\\nN=-9.3197,8.0000;0,0,i1\\nC=-8.0206,5.7500;0,0,i1\\nC=-6.7216,5.0000;0,0,i2\\nC=-9.3196,5.0000;0,0,i3\\nC=-6.7214,3.5000;0,0,i3\\nX=-10.6187,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[isoleucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ile]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[I]]></Cell>\\n</Row>\\n<Row id=\\\"9\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.8553,8.0000;0,0,i0\\nO=-7.8553,9.5000;0,0,i0\\nC=-9.1543,7.2500;0,0,i1\\nX=-6.5563,7.2500;0,0,i0\\nN=-10.4534,8.0000;0,0,i1\\nC=-9.1543,5.7500;0,0,i2\\nC=-7.8553,5.0000;0,0,i2\\nC=-7.8552,3.5000;0,0,i2\\nC=-6.5561,2.7500;0,0,i2\\nN=-6.5561,1.2500;1,0,i3\\nX=-11.7524,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[lysine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Lys]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[K]]></Cell>\\n</Row>\\n<Row id=\\\"10\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i1\\nC=-7.5008,3.5000;0,0,i3\\nC=-6.2019,5.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[leucine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Leu]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[L]]></Cell>\\n</Row>\\n<Row id=\\\"11\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i2\\nS=-7.5008,3.5000;0,0,i0\\nC=-6.2018,2.7500;0,0,i3\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[methionine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Met]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[M]]></Cell>\\n</Row>\\n<Row id=\\\"12\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,9)\\nC=-7.5010,8.0000;0,0,i0\\nO=-7.5010,9.5000;0,0,i0\\nC=-8.8000,7.2500;0,0,i1\\nX=-6.2020,7.2500;0,0,i0\\nN=-10.0991,8.0000;0,0,i1\\nC=-8.8000,5.7500;0,0,i2\\nC=-7.5010,5.0000;0,0,i0\\nN=-7.5008,3.5000;0,0,i2\\nO=-6.2019,5.7500;0,0,i0\\nX=-11.3981,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n5-10=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[asparagine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Asn]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[N]]></Cell>\\n</Row>\\n<Row id=\\\"13\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-5.7561,8.0000;0,0,i0\\nO=-5.7561,9.5000;0,0,i0\\nC=-7.0551,7.2500;0,0,i1\\nX=-4.4571,7.2500;0,0,i0\\nC=-7.2122,5.7621;0,0,i2\\nC=-8.6806,5.4455;0,0,i2\\nN=-8.4222,7.8579;0,0,i0\\nC=-9.4306,6.7446;0,0,i2\\nX=-8.7323,9.3255;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n6-5=1,0\\n3-5=1,2\\n3-7=1,0\\n7-8=1,0\\n8-6=1,0\\n7-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[proline]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Pro]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[P]]></Cell>\\n</Row>\\n<Row id=\\\"14\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,10)\\nC=-7.3829,8.0000;0,0,i0\\nO=-7.3829,9.5000;0,0,i0\\nC=-8.6819,7.2500;0,0,i1\\nX=-6.0839,7.2500;0,0,i0\\nN=-9.9810,8.0000;0,0,i1\\nC=-8.6819,5.7500;0,0,i2\\nC=-7.3829,5.0000;0,0,i2\\nC=-7.3828,3.5000;0,0,i0\\nN=-6.0837,2.7500;0,0,i2\\nO=-8.6818,2.7500;0,0,i0\\nX=-11.2800,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n8-10=2,0\\n5-11=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[glutamine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Gln]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Q]]></Cell>\\n</Row>\\n<Row id=\\\"15\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(13,12)\\nC=-11.2850,5.8016;0,0,i0\\nO=-11.2850,7.3016;0,0,i0\\nC=-12.5840,5.0517;0,0,i1\\nX=-9.9860,5.0516;0,0,i0\\nN=-13.8830,5.8017;0,0,i1\\nC=-12.5840,3.5516;0,0,i2\\nC=-11.2849,2.8015;0,0,i2\\nC=-11.2849,1.3015;0,0,i2\\nN=-9.9859,0.5516;0,0,i1\\nC=-9.9859,-0.9483;0,0,i0\\nN=-11.2850,-1.6984;1,0,i2\\nN=-8.6869,-1.6983;0,0,i2\\nX=-15.1821,5.0517;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n8-9=1,0\\n9-10=1,0\\n10-11=2,0\\n10-12=1,0\\n5-13=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[arginine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Arg]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[R]]></Cell>\\n</Row>\\n<Row id=\\\"16\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(8,7)\\nC=-6.8514,8.0000;0,0,i0\\nO=-6.8514,9.5000;0,0,i0\\nC=-8.1504,7.2500;0,0,i1\\nX=-5.5525,7.2500;0,0,i0\\nN=-9.4496,8.0000;0,0,i1\\nC=-8.1504,5.7500;0,0,i2\\nO=-6.8514,5.0000;0,0,i1\\nX=-10.7486,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n5-8=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[serine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Ser]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[S]]></Cell>\\n</Row>\\n<Row id=\\\"17\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nO=-6.4906,5.0000;0,0,i1\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,2\\n3-6=1,0\\n6-7=1,0\\n6-8=1,2\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[threonine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Thr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[T]]></Cell>\\n</Row>\\n<Row id=\\\"18\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(14,14)\\nC=-9.3567,8.0000;0,0,i0\\nO=-9.3567,9.5000;0,0,i0\\nC=-10.6557,7.2500;0,0,i1\\nX=-8.0577,7.2500;0,0,i0\\nN=-11.9548,8.0000;0,0,i1\\nC=-10.6557,5.7500;0,0,i2\\nC=-9.3567,5.0000;0,0,i0\\nC=-9.3567,3.5000;0,0,i1\\nC=-8.0577,5.7500;0,0,i1\\nC=-8.0577,2.7500;0,0,i1\\nC=-6.7586,3.5000;0,0,i0\\nC=-6.7586,5.0000;0,0,i1\\nO=-5.4596,2.7500;0,0,i1\\nX=-13.2538,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n7-8=1,0\\n7-9=2,0\\n8-10=2,0\\n10-11=1,0\\n11-12=2,0\\n12-9=1,0\\n11-13=1,0\\n5-14=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tyrosine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Tyr]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[Y]]></Cell>\\n</Row>\\n<Row id=\\\"19\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,8)\\nC=-6.4906,8.0000;0,0,i0\\nO=-6.4906,9.5000;0,0,i0\\nC=-7.7896,7.2500;0,0,i1\\nX=-5.1916,7.2500;0,0,i0\\nN=-9.0887,8.0000;0,0,i1\\nC=-7.7896,5.7500;0,0,i1\\nC=-9.0887,5.0000;0,0,i3\\nC=-6.4906,5.0000;0,0,i3\\nX=-10.3877,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n6-8=1,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[valine]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Val]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[V]]></Cell>\\n</Row>\\n<Row id=\\\"20\\\">\\n<Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,17)\\nC=-9.1949,8.0000;0,0,i0\\nO=-9.1949,9.5000;0,0,i0\\nC=-10.4939,7.2500;0,0,i1\\nX=-7.8959,7.2500;0,0,i0\\nN=-11.7930,8.0000;0,0,i1\\nC=-10.4939,5.7500;0,0,i2\\nC=-9.1949,5.0000;0,0,i0\\nC=-9.4755,2.2797;0,0,i1\\nC=-8.7255,0.9806;0,0,i1\\nC=-8.7255,3.5787;0,0,i0\\nC=-7.2255,0.9806;0,0,i1\\nC=-6.4755,2.2797;0,0,i1\\nC=-7.2255,3.5787;0,0,i0\\nC=-7.9866,5.8824;0,0,i1\\nN=-6.7662,5.0065;0,0,i1\\nX=-13.0920,7.2501;0,0,i0\\n1-2=2,0\\n1-3=1,0\\n1-4=1,0\\n3-5=1,0\\n3-6=1,2\\n6-7=1,0\\n8-9=1,0\\n8-10=2,0\\n9-11=2,0\\n11-12=1,0\\n12-13=2,0\\n13-10=1,0\\n10-7=1,0\\n7-14=2,0\\n14-15=1,0\\n15-13=1,0\\n5-16=1,0\\n!End\\n]]></Cell>\\n<Cell id=\\\"2\\\"><![CDATA[tryptophan]]></Cell>\\n<Cell id=\\\"3\\\"><![CDATA[Trp]]></Cell>\\n<Cell id=\\\"4\\\"><![CDATA[W]]></Cell>\\n</Row>\\n</Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Biomolecules</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"8\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(11,12)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i1\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i0\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nN=0.7009,6.3000;0,0,i2\\nX=-2.4777,0.6523;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n7-11=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[adenine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,13)\\nN=0.7009,1.8000;0,0,i0\\nC=2.0000,2.5500;0,0,i0\\nC=-0.5981,2.5500;0,0,i0\\nN=2.0000,4.0500;0,0,i1\\nC=0.7009,4.8000;0,0,i0\\nC=-0.5981,4.0500;0,0,i0\\nN=-2.0194,2.0806;0,0,i0\\nC=-2.9018,3.2889;0,0,i1\\nN=-2.0260,4.5093;0,0,i0\\nO=0.7009,6.3000;0,0,i0\\nX=-2.4777,0.6523;0,0,i0\\nN=3.2990,1.8000;0,0,i2\\n1-2=2,0\\n1-3=1,0\\n2-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-3=2,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=2,0\\n7-11=1,0\\n2-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[guanine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i0\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nN=-1.7510,3.8500;0,0,i2\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=1,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[cytosine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(9,9)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i1\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[uracil]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(10,10)\\nC=-1.7510,2.3500;0,0,i0\\nC=-3.0500,1.6000;0,0,i0\\nN=-0.4519,1.6000;0,0,i1\\nC=-3.0500,0.1000;0,0,i1\\nN=-1.7510,-0.6500;0,0,i0\\nC=-0.4519,0.1000;0,0,i0\\nO=-1.7510,3.8500;0,0,i0\\nO=0.8471,-0.6500;0,0,i0\\nX=-1.7510,-2.1500;0,0,i0\\nC=-4.3490,2.3500;0,0,i3\\n1-2=1,0\\n3-1=1,0\\n2-4=2,0\\n4-5=1,0\\n5-6=1,0\\n6-3=1,0\\n1-7=2,0\\n6-8=2,0\\n5-9=1,0\\n2-10=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[thymine]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(27,29)\\nN=4.6026,-2.2500;0,0,i0\\nC=5.9018,-1.5000;0,0,i1\\nC=3.3036,-1.5000;0,0,i0\\nN=5.9018,0.0000;0,0,i0\\nC=4.6026,0.7500;0,0,i0\\nC=3.3036,0.0000;0,0,i0\\nN=1.8824,-1.9694;0,0,i0\\nC=1.0000,-0.7610;0,0,i1\\nN=1.8756,0.4593;0,0,i0\\nN=4.6026,2.2500;0,0,i2\\nC=1.4240,-3.3975;0,0,i1\\nO=0.0030,-3.8657;0,0,i0\\nC=0.0040,-5.3680;0,0,i1\\nC=2.3071,-4.6051;0,0,i1\\nC=1.4322,-5.8263;0,0,i1\\nO=3.8071,-4.5978;0,0,i1\\nO=1.9031,-7.2505;0,0,i1\\nC=-1.2076,-6.2522;0,0,i2\\nO=-2.5790,-5.6451;0,0,i0\\nP=-3.7905,-6.5296;0,0,i0\\nO=-4.6750,-5.3179;0,0,i0\\nO=-2.9062,-7.7412;0,0,i1\\nO=-5.0022,-7.4140;0,0,i0\\nP=-6.3738,-6.8069;0,0,i0\\nO=-5.7668,-5.4352;0,0,i0\\nO=-6.9808,-8.1786;0,0,i1\\nO=-7.7455,-6.1998;0,0,i1\\n1-2=1,0\\n1-3=2,0\\n2-4=2,0\\n4-5=1,0\\n5-6=2,0\\n6-3=1,0\\n3-7=1,0\\n7-8=1,0\\n8-9=2,0\\n9-6=1,0\\n5-10=1,0\\n11-7=1,1\\n13-12=1,0\\n12-11=1,0\\n11-14=1,0\\n14-15=1,0\\n15-13=1,0\\n14-16=1,2\\n15-17=1,2\\n13-18=1,1\\n18-19=1,0\\n20-21=2,0\\n20-22=1,0\\n20-23=1,0\\n20-19=1,0\\n24-25=2,0\\n24-26=1,0\\n24-27=1,0\\n24-23=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[ADP]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(18,19)\\nC=2.2100,1.1549;0,0,i0\\nN=1.0000,0.2749;0,0,i1\\nC=1.4600,-1.1549;0,0,i0\\nN=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i0\\nC=3.4282,-2.5763;0,0,i1\\nS=2.2199,-3.4587;0,0,i0\\nC=0.9995,-2.5829;0,0,i2\\nO=2.2100,2.6549;0,0,i0\\nH=4.4599,-1.1497;0,0,i0\\nH=-0.0399,-1.1545;0,0,i0\\nC=4.8563,-3.0352;0,0,i2\\nC=5.9677,-2.0279;0,0,i2\\nC=7.3958,-2.4869;0,0,i2\\nC=8.5073,-1.4796;0,0,i2\\nC=9.9353,-1.9386;0,0,i0\\nO=11.0468,-0.9314;0,0,i0\\nO=10.2519,-3.4048;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,0\\n6-7=1,0\\n7-8=1,0\\n8-3=1,0\\n1-9=2,0\\n5-10=1,1\\n3-11=1,1\\n6-12=1,2\\n12-13=1,0\\n13-14=1,0\\n14-15=1,0\\n16-17=2,0\\n16-18=1,0\\n16-15=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[biotin]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"8\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(24,27)\\nC=-7.1991,2.0500;0,0,i1\\nC=-8.4981,1.3000;0,0,i1\\nC=-8.4981,-0.2000;0,0,i0\\nC=-7.1991,-0.9500;0,0,i1\\nC=-5.9000,-0.2000;0,0,i0\\nC=-5.9000,1.3000;0,0,i0\\nC=-4.6009,-0.9500;0,0,i2\\nC=-3.3019,-0.2000;0,0,i2\\nC=-3.3019,1.3000;0,0,i0\\nC=-4.6009,2.0500;0,0,i0\\nC=-2.0028,2.0500;0,0,i0\\nC=-2.0028,3.5500;0,0,i0\\nC=-3.3018,4.3000;0,0,i2\\nC=-4.6008,3.5501;0,0,i2\\nC=-0.5814,4.0194;0,0,i1\\nC=0.3009,2.8111;0,0,i1\\nC=-0.5749,1.5907;0,0,i2\\nO=-9.7971,-0.9500;0,0,i1\\nH=-4.6009,0.5500;0,0,i0\\nH=-3.3019,2.8000;0,0,i0\\nH=-2.0028,0.5500;0,0,i0\\nC=-2.0028,5.0500;0,0,i3\\nO=-0.1231,5.4476;0,0,i1\\nO=1.8009,2.8174;0,0,i1\\n2-3=2,0\\n2-1=1,0\\n3-4=1,0\\n4-5=2,0\\n5-6=1,0\\n6-1=2,0\\n8-9=1,0\\n8-7=1,0\\n9-10=1,0\\n10-6=1,0\\n5-7=1,0\\n12-13=1,0\\n12-11=1,0\\n13-14=1,0\\n14-10=1,0\\n9-11=1,0\\n12-15=1,0\\n15-16=1,0\\n16-17=1,0\\n17-11=1,0\\n3-18=1,0\\n10-19=1,2\\n9-20=1,1\\n11-21=1,2\\n12-22=1,1\\n15-23=1,1\\n16-24=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[estrogen]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<DataSheet>\\n <Summary>\\n  <Title>Saccharides</Title>\\n  <Description><![CDATA[]]></Description>\\n </Summary>\\n <Header nrows=\\\"7\\\" ncols=\\\"3\\\">\\n  <Column name=\\\"Molecule\\\" type=\\\"molecule\\\" id=\\\"1\\\">Molecular structure</Column>\\n  <Column name=\\\"Name\\\" type=\\\"string\\\" id=\\\"2\\\">Template name</Column>\\n  <Column name=\\\"Abbrev\\\" type=\\\"string\\\" id=\\\"3\\\">Abbreviation code</Column>\\n </Header>\\n <Content>\\n  <Row id=\\\"1\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5911;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7078;0,0,i1\\nO=3.5981,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7078;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4079,1.3978;0,0,i2\\nO=2.0074,2.7728;0,0,i1\\nO=3.4372,-1.4066;0,0,i1\\nO=4.5368,-2.1958;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"2\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.0000,0.5910;0,0,i1\\nC=2.2990,0.1911;0,0,i1\\nC=1.7500,-0.7077;0,0,i1\\nO=3.5980,0.9411;0,0,i0\\nC=3.0490,0.0421;0,0,i1\\nC=4.3481,-0.7077;0,0,i1\\nO=-0.2797,-0.1912;0,0,i1\\nO=0.2727,-0.9682;0,0,i1\\nC=1.4078,1.3977;0,0,i2\\nO=2.0074,2.7727;0,0,i1\\nO=3.4372,-1.4065;0,0,i1\\nO=5.6169,0.0920;0,0,i1\\n1-2=1,0\\n1-3=1,0\\n2-4=1,0\\n3-5=1,0\\n6-5=1,0\\n4-6=1,0\\n1-7=1,0\\n3-8=1,0\\n2-9=1,0\\n9-10=1,0\\n5-11=1,0\\n6-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"3\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(16,15)\\nC=1.5000,0.0000;0,0,i0\\nC=1.4999,1.5000;0,0,i1\\nC=1.4999,-1.5000;0,0,i0\\nO=3.0000,0.0000;0,0,i1\\nH=0.0000,0.0000;0,0,i0\\nC=1.4999,-3.0000;0,0,i0\\nH=2.9999,-1.5000;0,0,i0\\nO=-0.0000,-1.4999;0,0,i1\\nC=1.4999,-4.5000;0,0,i0\\nO=2.9999,-3.0000;0,0,i1\\nH=-0.0000,-2.9999;0,0,i0\\nC=1.4999,-6.0000;0,0,i2\\nO=2.9999,-4.5000;0,0,i1\\nH=-0.0000,-4.5000;0,0,i0\\nO=2.7990,-6.7500;0,0,i1\\nO=0.2009,2.2499;0,0,i0\\n1-2=1,0\\n1-3=1,0\\n1-4=1,0\\n1-5=1,0\\n3-6=1,0\\n3-7=1,0\\n3-8=1,0\\n6-9=1,0\\n6-10=1,0\\n6-11=1,0\\n9-12=1,0\\n9-13=1,0\\n9-14=1,0\\n12-15=1,0\\n2-16=2,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose chain]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"4\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3913,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3913,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3912,2.7718;0,0,i2\\nO=4.1139,-1.4998;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,2\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"5\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nC=1.3912,1.2718;0,0,i1\\nC=0.4839,-0.0000;0,0,i1\\nC=1.3912,-1.2718;0,0,i1\\nC=3.2063,-1.2718;0,0,i1\\nC=4.1139,0.0000;0,0,i1\\nO=3.2063,1.2718;0,0,i0\\nC=1.3911,2.7718;0,0,i2\\nO=4.1139,1.4997;0,0,i1\\nO=3.2128,-2.7718;0,0,i1\\nO=1.3717,0.2280;0,0,i1\\nO=0.4839,-1.5000;0,0,i1\\nO=0.0922,3.5218;0,0,i1\\n2-3=1,0\\n2-1=1,0\\n3-4=1,0\\n4-5=1,0\\n5-6=1,0\\n6-1=1,0\\n1-7=1,1\\n5-8=1,1\\n4-9=1,2\\n3-10=1,1\\n2-11=1,2\\n7-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[glucose beta]]></Cell>\\n   <Cell id=\\\"3\\\"><![CDATA[]]></Cell>\\n  </Row>\\n  <Row id=\\\"6\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nC=-0.4260,0.7402;0,0,i2\\nO=-1.5419,-0.2621;0,0,i1\\nO=0.7658,1.7566;0,0,i1\\nO=0.5765,-2.3672;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n9-10=1,0\\n2-11=1,1\\n3-12=1,2\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose alpha]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n  <Row id=\\\"7\\\">\\n   <Cell id=\\\"1\\\"><![CDATA[SketchEl!(12,12)\\nO=2.2100,1.1549;0,0,i0\\nC=1.0000,0.2749;0,0,i0\\nC=1.4600,-1.1549;0,0,i1\\nC=3.4200,0.2749;0,0,i1\\nC=2.9600,-1.1549;0,0,i1\\nO=3.8434,-2.3672;0,0,i1\\nC=4.8460,0.7402;0,0,i2\\nO=5.1561,2.2078;0,0,i1\\nO=-0.4260,0.7402;0,0,i1\\nC=0.7658,1.7566;0,0,i2\\nO=0.5765,-2.3672;0,0,i1\\nO=-0.6344,2.2946;0,0,i1\\n3-2=1,0\\n2-1=1,0\\n1-4=1,0\\n4-5=1,0\\n5-3=1,0\\n5-6=1,1\\n4-7=1,2\\n7-8=1,0\\n2-9=1,2\\n2-10=1,1\\n3-11=1,2\\n10-12=1,0\\n!End\\n]]></Cell>\\n   <Cell id=\\\"2\\\"><![CDATA[fructose beta]]></Cell>\\n   <Cell id=\\\"3\\\"/>\\n  </Row>\\n </Content>\\n</DataSheet>\\n\";","import { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiffPos, DEGRAD, norm2_xy, norm_xy, signum, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class MetalLigate {\n    constructor(mol, metalAtom, ligandAttach) {\n        this.metalAtom = metalAtom;\n        this.ligandAttach = ligandAttach;\n        this.ligands = [];\n        this.mol = mol.clone();\n    }\n    generate() {\n        const { mol, metalAtom, ligandAttach, ligands } = this;\n        let g = Graph.fromMolecule(mol);\n        g.isolateNode(metalAtom - 1);\n        for (let cc of g.calculateComponentGroups()) {\n            Vec.addTo(cc, 1);\n            let anything = false;\n            for (let a of ligandAttach)\n                if (cc.indexOf(a) >= 0) {\n                    anything = true;\n                    break;\n                }\n            if (!anything)\n                continue;\n            let lig = { atoms: cc, attach: [] };\n            lig.atoms = cc;\n            let anyAttached = false;\n            for (let a of lig.atoms)\n                if (mol.findBond(a, metalAtom) > 0) {\n                    anyAttached = true;\n                    break;\n                }\n            for (let a of lig.atoms) {\n                let bonded = mol.findBond(a, metalAtom) > 0;\n                if (bonded || (!anyAttached && ligandAttach.includes(a)))\n                    lig.attach.push(a);\n            }\n            ligands.push(lig);\n            for (let a of lig.attach)\n                if (mol.findBond(a, metalAtom) == 0)\n                    this.makeLigandBond(a);\n        }\n        if (ligands.length == 0)\n            throw new Error('No ligand atoms');\n        let otherLigands = mol.atomAdjList(metalAtom);\n        for (let lig of ligands)\n            otherLigands = Vec.exclude(otherLigands, lig.attach);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let otherTheta = new Array(otherLigands.length);\n        for (let n = 0; n < otherLigands.length; n++)\n            otherTheta[n] = Math.atan2(mol.atomY(otherLigands[n]) - my, mol.atomX(otherLigands[n]) - mx);\n        for (let lig of ligands) {\n            if (lig.attach.length == 1) {\n                let a = lig.attach[0];\n                lig.avgTheta = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                this.orientLigand(lig);\n            }\n            else {\n                let theta = new Array(lig.attach.length);\n                for (let n = 0; n < lig.attach.length; n++) {\n                    let a = lig.attach[n];\n                    theta[n] = Math.atan2(mol.atomY(a) - my, mol.atomX(a) - mx);\n                }\n                theta = GeomUtil.sortAngles(theta);\n                let base = theta[0];\n                for (let n = 0; n < theta.length; n++)\n                    theta[n] = angleDiffPos(theta[n], base);\n                lig.avgTheta = base + Vec.sum(theta) / theta.length;\n                this.orientLigand(lig);\n            }\n        }\n        if (otherLigands.length == 0) {\n            ligands.sort((l1, l2) => signum(l1.avgTheta - l2.avgTheta));\n            this.arrangeLigandsFree(ligands);\n        }\n        else if (otherLigands.length == 1) {\n            ligands.sort((l1, l2) => {\n                let diff1 = angleDiffPos(l1.avgTheta, otherTheta[0]);\n                let diff2 = angleDiffPos(l2.avgTheta, otherTheta[0]);\n                return signum(diff1 - diff2);\n            });\n            this.arrangeLigandsRange(ligands, otherTheta[0], TWOPI, true);\n        }\n        else {\n            let otherOrder = Vec.idxSort(otherTheta);\n            for (let n = 0; n < otherOrder.length; n++) {\n                let nn = (n + 1) % otherOrder.length;\n                let theta = otherTheta[otherOrder[n]];\n                let extent = angleDiffPos(otherTheta[otherOrder[nn]], theta);\n                let batch = [];\n                for (let lig of ligands) {\n                    let diff = angleDiffPos(lig.avgTheta, theta);\n                    if (diff < extent)\n                        batch.push(lig);\n                }\n                if (batch.length == 0)\n                    continue;\n                batch.sort((l1, l2) => {\n                    let diff1 = angleDiffPos(l1.avgTheta, theta);\n                    let diff2 = angleDiffPos(l2.avgTheta, theta);\n                    return signum(diff1 - diff2);\n                });\n                this.arrangeLigandsRange(batch, theta, extent, true);\n            }\n        }\n        this.resolveClashes();\n        return mol;\n    }\n    makeLigandBond(ligAtom) {\n        const { mol, metalAtom } = this;\n        let mchg = mol.atomCharge(metalAtom), lchg = mol.atomCharge(ligAtom);\n        if (mchg > 0 && lchg < 0) {\n            mol.setAtomCharge(metalAtom, mchg - 1);\n            mol.setAtomCharge(ligAtom, lchg + 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        if (mchg < 0 && lchg > 0) {\n            mol.setAtomCharge(metalAtom, mchg + 1);\n            mol.setAtomCharge(ligAtom, lchg - 1);\n            mol.addBond(metalAtom, ligAtom, 1);\n            return;\n        }\n        let order = 0;\n        if (mol.atomHExplicit(ligAtom) == Molecule.HEXPLICIT_UNKNOWN && mol.atomHydrogens(ligAtom) > 0)\n            order = 1;\n        mol.addBond(metalAtom, ligAtom, order);\n    }\n    orientLigand(lig) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let lsz = lig.atoms.length, asz = lig.attach.length;\n        let idxAttach = new Array(asz);\n        for (let n = 0; n < asz; n++)\n            idxAttach[n] = lig.atoms.indexOf(lig.attach[n]);\n        let lx = new Array(lsz), ly = new Array(lsz);\n        let ax = MolUtil.arrayAtomX(mol), ay = MolUtil.arrayAtomY(mol);\n        let molExtent = Vec.max(ax) - Vec.min(ax) + Vec.max(ay) - Vec.min(ay);\n        let dx = molExtent * Math.cos(lig.avgTheta), dy = molExtent * Math.sin(lig.avgTheta);\n        for (let n = 0; n < lsz; n++) {\n            lx[n] = mol.atomX(lig.atoms[n]) + dx;\n            ly[n] = mol.atomY(lig.atoms[n]) + dy;\n        }\n        let cx = Vec.sum(lx) / lsz, cy = Vec.sum(ly) / lsz;\n        let weight = [];\n        for (let n = 0; n < lsz; n++) {\n            let closest = Number.POSITIVE_INFINITY;\n            for (let idx of idxAttach)\n                closest = Math.min(closest, norm2_xy(lx[n] - lx[idx], ly[n] - ly[idx]));\n            weight.push(1.0 / (1 + Math.sqrt(closest)));\n        }\n        let bestScore = Number.POSITIVE_INFINITY;\n        let bestLX = null, bestLY = null;\n        for (let theta = 0; theta < 360; theta += 15) {\n            let cosTheta = Math.cos(theta * DEGRAD), sinTheta = Math.sin(theta * DEGRAD);\n            let rx = new Array(lsz), ry = new Array(lsz);\n            let score = 0;\n            for (let n = 0; n < lsz; n++) {\n                let x = lx[n] - cx, y = ly[n] - cy;\n                rx[n] = cx + x * cosTheta - y * sinTheta;\n                ry[n] = cy + x * sinTheta + y * cosTheta;\n                let dist = norm_xy(rx[n] - mx, ry[n] - my);\n                if (lig.attach.indexOf(lig.atoms[n]) >= 0)\n                    score += dist;\n                else\n                    score -= dist * weight[n];\n            }\n            if (score < bestScore) {\n                bestScore = score;\n                bestLX = rx;\n                bestLY = ry;\n            }\n        }\n        lx = bestLX;\n        ly = bestLY;\n        if (asz == 1) {\n            dx = Molecule.IDEALBOND * Math.cos(lig.avgTheta);\n            dy = Molecule.IDEALBOND * Math.sin(lig.avgTheta);\n            Vec.addTo(lx, mx + dx - lx[idxAttach[0]]);\n            Vec.addTo(ly, my + dy - ly[idxAttach[0]]);\n        }\n        else {\n            let attTheta = new Array(asz), attDist = Vec.numberArray(0, asz), attDX = Vec.numberArray(0, asz), attDY = Vec.numberArray(0, asz);\n            for (let n = 0; n < asz; n++) {\n                let ox = lx[idxAttach[n]] - mx, oy = ly[idxAttach[n]] - my;\n                attTheta[n] = Math.atan2(oy, ox);\n                if (asz > 2) {\n                    attDist[n] = norm_xy(ox, oy);\n                    attDX[n] = ox / attDist[n];\n                    attDY[n] = oy / attDist[n];\n                }\n            }\n            Vec.addTo(attDist, -Vec.min(attDist));\n            let orderAttach = GeomUtil.idxSortAngles(attTheta);\n            let srcX = new Array(asz), srcY = new Array(asz);\n            let dstX = new Array(asz), dstY = new Array(asz);\n            let dtheta = 45 * DEGRAD / (asz - 1), theta = lig.avgTheta - 0.5 * dtheta;\n            for (let n = 0; n < asz; n++) {\n                srcX[n] = lx[idxAttach[orderAttach[n]]];\n                srcY[n] = ly[idxAttach[orderAttach[n]]];\n                dstX[n] = mx + Molecule.IDEALBOND * Math.cos(theta) + attDist[n] * attDX[n];\n                dstY[n] = my + Molecule.IDEALBOND * Math.sin(theta) + attDist[n] * attDY[n];\n                theta += dtheta / (asz - 1);\n            }\n            let tfm = GeomUtil.superimpose(srcX, srcY, dstX, dstY);\n            for (let n = 0; n < lsz; n++) {\n                let [x, y] = GeomUtil.applyAffine(lx[n], ly[n], tfm);\n                lx[n] = x;\n                ly[n] = y;\n            }\n        }\n        for (let n = 0; n < lsz; n++)\n            mol.setAtomPos(lig.atoms[n], lx[n], ly[n]);\n    }\n    arrangeLigandsFree(batch) {\n        if (batch.length == 1)\n            return;\n        let refTheta = Vec.last(batch).avgTheta;\n        refTheta += 0.5 * angleDiffPos(Vec.first(batch).avgTheta, refTheta);\n        this.arrangeLigandsRange(batch, refTheta, TWOPI, false);\n    }\n    arrangeLigandsRange(batch, refTheta, refSpan, bounded) {\n        const { mol, metalAtom } = this;\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        let bsz = batch.length;\n        let thetaMin = new Array(bsz), thetaSpan = new Array(bsz);\n        let ligandSpan = 0;\n        for (let n = 0; n < bsz; n++) {\n            let [theta1, theta2] = this.determineThetaBounds(batch[n]);\n            thetaMin[n] = theta1;\n            thetaSpan[n] = angleDiffPos(theta2, theta1);\n            ligandSpan += thetaSpan[n];\n        }\n        let residual = (refSpan - ligandSpan) / (bsz + (bounded ? 1 : 0));\n        let theta = refTheta + (bounded ? residual : 0.5 * residual);\n        for (let n = 0; n < bsz; n++) {\n            let rotTheta = theta - thetaMin[n];\n            let cosTheta = Math.cos(rotTheta), sinTheta = Math.sin(rotTheta);\n            for (let a of batch[n].atoms) {\n                let x = mol.atomX(a) - mx, y = mol.atomY(a) - my;\n                mol.setAtomPos(a, mx + x * cosTheta - y * sinTheta, my + x * sinTheta + y * cosTheta);\n            }\n            theta += thetaSpan[n] + residual;\n        }\n    }\n    determineThetaBounds(lig) {\n        const { mol, metalAtom } = this;\n        let theta = [];\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lig.attach.length; n++) {\n            let x = mol.atomX(lig.attach[n]) - mx;\n            let y = mol.atomY(lig.attach[n]) - my;\n            theta.push(Math.atan2(y, x));\n        }\n        Vec.sort(theta);\n        let bestScore = Number.POSITIVE_INFINITY, bestMin = 0, bestMax = 0;\n        for (let n = 0; n < theta.length; n++) {\n            let score = 0;\n            for (let i = 0; i < theta.length - 1; i++)\n                score += angleDiffPos(theta[i + 1], theta[i]);\n            if (score < bestScore) {\n                bestScore = score;\n                bestMin = Vec.first(theta);\n                bestMax = Vec.last(theta);\n            }\n            theta.push(theta.shift());\n        }\n        return [bestMin, bestMax];\n    }\n    resolveClashes() {\n        const { mol, metalAtom, ligands } = this;\n        const na = mol.numAtoms, nb = mol.numBonds, lsz = this.ligands.length;\n        let ablk = Vec.numberArray(-1, na), bblk = Vec.numberArray(-1, nb);\n        for (let n = 1; n <= na; n++)\n            if (mol.atomConnComp(n) == mol.atomConnComp(metalAtom))\n                ablk[n - 1] = 0;\n        for (let n = 0; n < lsz; n++)\n            for (let a of ligands[n].atoms)\n                ablk[a - 1] = n + 1;\n        for (let n = 1; n <= nb; n++) {\n            let blk1 = ablk[mol.bondFrom(n) - 1], blk2 = ablk[mol.bondTo(n) - 1];\n            if (blk1 < 0 || blk2 < 0) { }\n            else if (blk1 == blk2)\n                bblk[n - 1] = blk1;\n        }\n        let bumpDX = new Array(lsz), bumpDY = new Array(lsz);\n        let mx = mol.atomX(metalAtom), my = mol.atomY(metalAtom);\n        for (let n = 0; n < lsz; n++) {\n            let lig = ligands[n];\n            let dx = 0, dy = 0;\n            for (let a of lig.attach) {\n                dx += mol.atomX(a) - mx;\n                dy += mol.atomY(a) - my;\n            }\n            dx /= lig.attach.length;\n            dy /= lig.attach.length;\n            let invDist = 1.0 / norm_xy(dx, dy);\n            bumpDX[n] = dx * 0.5 * invDist;\n            bumpDY[n] = dy * 0.5 * invDist;\n        }\n        const CLOSE_SQ = sqr(0.5);\n        for (let count = 0; count < 12; count++) {\n            let tainted = Vec.booleanArray(false, lsz);\n            outer: for (let i = 0; i < na - 1; i++) {\n                if (ablk[i] < 0)\n                    continue;\n                for (let j = i + 1; j < na; j++)\n                    if (ablk[j] >= 0 && ablk[j] != ablk[i]) {\n                        if (norm2_xy(mol.atomX(i + 1) - mol.atomX(j + 1), mol.atomY(i + 1) - mol.atomY(j + 1)) < CLOSE_SQ) {\n                            if (ablk[i] > 0)\n                                tainted[ablk[i] - 1] = true;\n                            if (ablk[j] > 0)\n                                tainted[ablk[j] - 1] = true;\n                        }\n                        if (Vec.allTrue(tainted))\n                            break outer;\n                    }\n            }\n            if (Vec.anyFalse(tainted))\n                outer: for (let i = 0; i < nb - 1; i++) {\n                    if (bblk[i] < 0)\n                        continue;\n                    let x1 = mol.atomX(mol.bondFrom(i + 1)), y1 = mol.atomY(mol.bondFrom(i + 1));\n                    let x2 = mol.atomX(mol.bondTo(i + 1)), y2 = mol.atomY(mol.bondTo(i + 1));\n                    for (let j = i + 1; j < nb; j++)\n                        if (bblk[j] >= 0 && bblk[j] != bblk[i]) {\n                            let x3 = mol.atomX(mol.bondFrom(j + 1)), y3 = mol.atomY(mol.bondFrom(j + 1));\n                            let x4 = mol.atomX(mol.bondTo(j + 1)), y4 = mol.atomY(mol.bondTo(j + 1));\n                            if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                                if (bblk[i] > 0)\n                                    tainted[bblk[i] - 1] = true;\n                                if (bblk[j] > 0)\n                                    tainted[bblk[j] - 1] = true;\n                            }\n                            if (Vec.allTrue(tainted))\n                                break outer;\n                        }\n                }\n            if (Vec.allFalse(tainted))\n                break;\n            for (let n = 0; n < lsz; n++)\n                if (tainted[n]) {\n                    for (let a of ligands[n].atoms) {\n                        mol.setAtomPos(a, mol.atomX(a) + bumpDX[n], mol.atomY(a) + bumpDY[n]);\n                    }\n                }\n        }\n    }\n}\n//# sourceMappingURL=MetalLigate.js.map","import { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { angleDiff, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport class FusionPermutation {\n    constructor() {\n        this.attdist = 0;\n        this.guided = false;\n        this.bridged = false;\n        this.scoreModifier = 0;\n        this.chainSelect = 0;\n    }\n}\nclass TemplateFusion {\n    constructor(mol, templ, abbrev) {\n        this.mol = mol;\n        this.templ = templ;\n        this.abbrev = abbrev;\n        this.perms = [];\n        this.numAttach = 0;\n        this.withGuideOnly = false;\n        this.guidetempl = null;\n        this.guideidx = [];\n        this.guideadj = [];\n        this.timeLimit = 5.0;\n        let artif1 = new BondArtifact(mol), artif2 = new BondArtifact(templ);\n        artif2.harmoniseNumbering(artif1);\n        artif2.rewriteMolecule();\n        let poly1 = new PolymerBlock(mol), poly2 = new PolymerBlock(templ);\n        poly2.harmoniseNumbering(poly1);\n        poly2.rewriteMolecule();\n        this.huntForGuides();\n    }\n    permuteNone() {\n        let numAttach = 0;\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        if (oldmol.numAtoms > 0) {\n            let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n            let dx = oldbox.maxX() + 1 - newbox.minX();\n            let dy = 0.5 * (oldbox.minY() + oldbox.maxY()) - 0.5 * (newbox.minY() + newbox.maxY());\n            CoordUtil.translateMolecule(newmol, dx, dy);\n        }\n        else {\n            let newbox = newmol.boundary();\n            CoordUtil.translateMolecule(newmol, -newbox.midX(), -newbox.midY());\n        }\n        let oldbox = oldmol.boundary(), newbox = newmol.boundary();\n        let cx = newbox.midX(), cy = newbox.midY();\n        let ROTN = [0, 30, 45, 60, 90, 120, 135, 150, 180, 210, 225, 240, 270, 300, 315, 330];\n        duplicate: for (let n = 0; n < ROTN.length; n++) {\n            let rotmol = newmol.clone();\n            CoordUtil.rotateMolecule(rotmol, -ROTN[n] * DEGRAD, cx, cy);\n            for (let i = 0; i < this.perms.length; i++)\n                if (CoordUtil.sketchEquivalent(rotmol, this.perms[i].display))\n                    continue duplicate;\n            let p = new FusionPermutation();\n            p.mol = oldmol.clone();\n            p.mol.append(rotmol);\n            p.display = rotmol;\n            p.srcidx = this.sourceIndex(p.mol, oldmol);\n            p.attdist = 0;\n            p.guided = false;\n            this.perms.push(p);\n        }\n    }\n    permuteAtom(atom) {\n        this.numAttach = 1;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let n = 0; n < this.guideidx.length; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeGuidedOne(newperms, oldmol, this.guidetempl, atom, this.guideidx[n]);\n                this.composeGuidedOne(newperms, oldmol, fliptempl, atom, this.guideidx[n]);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectOne(newperms, oldmol, newmol, atom, n);\n                this.composeDirectOne(newperms, oldmol, flipmol, atom, n);\n                this.composeBridge(newperms, oldmol, newmol, atom, n);\n                this.composeBridge(newperms, oldmol, flipmol, atom, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteBond(a1, a2) {\n        this.numAttach = 2;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            for (let i = 0; i < this.guideidx.length; i++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let g1 = this.guideidx[i];\n                let adj = this.guidetempl.atomAdjList(g1);\n                for (let j = 0; j < adj.length; j++) {\n                    let g2 = adj[j];\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, true);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, this.guidetempl, a2, a1, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a1, a2, g1, g2, false);\n                    this.composeGuidedTwo(newperms, oldmol, fliptempl, a2, a1, g1, g2, false);\n                }\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numBonds; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                let nfr = newmol.bondFrom(n), nto = newmol.bondTo(n);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nfr, nto);\n                this.composeDirectTwo(newperms, oldmol, newmol, a1, a2, nto, nfr);\n                this.composeDirectTwo(newperms, oldmol, flipmol, a1, a2, nto, nfr);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    permuteMulti(atoms) {\n        this.numAttach = atoms.length;\n        let timeStart = new Date().getTime();\n        let oldmol = this.mol.clone(), newmol = this.templ.clone();\n        let newperms = [];\n        if (this.guidetempl != null) {\n            let fliptempl = CoordUtil.mirrorImage(this.guidetempl.clone());\n            if (this.guideidx.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideidx, true);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideidx, true);\n            }\n            if (this.guideadj.length == atoms.length) {\n                this.composeGuidedMulti(newperms, oldmol, this.guidetempl, atoms, this.guideadj, false);\n                this.composeGuidedMulti(newperms, oldmol, fliptempl, atoms, this.guideadj, false);\n            }\n        }\n        if (!this.withGuideOnly) {\n            let flipmol = newmol.clone();\n            CoordUtil.mirrorImage(flipmol);\n            for (let n = 1; n <= newmol.numAtoms; n++) {\n                if (new Date().getTime() - timeStart > this.timeLimit * 1000)\n                    break;\n                this.composeDirectMulti(newperms, oldmol, newmol, atoms, n);\n                this.composeDirectMulti(newperms, oldmol, flipmol, atoms, n);\n            }\n        }\n        this.affixRawPermutations(newperms);\n    }\n    huntForGuides() {\n        this.guideidx = [];\n        this.guideadj = [];\n        for (let n = 1; n <= this.templ.numAtoms; n++)\n            if (this.templ.atomElement(n) == 'X' && this.templ.atomAdjCount(n) > 0) {\n                this.guideidx.push(n);\n                let adj = this.templ.atomAdjList(n);\n                for (let i = 0; i < adj.length; i++)\n                    if (this.guideadj.indexOf(adj[i]) < 0)\n                        this.guideadj.push(adj[i]);\n            }\n        if (this.guideidx.length > 0) {\n            this.guidetempl = this.templ.clone();\n            for (let n = this.guideidx.length - 1; n >= 0; n--)\n                this.templ.deleteAtomAndBonds(this.guideidx[n]);\n        }\n    }\n    composeDirectOne(list, oldmol, newmol, o1, n1) {\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let ocurrent = CoordUtil.atomBondAngles(oldmol, o1);\n        let ncurrent = CoordUtil.atomBondAngles(newmol, n1);\n        let theta1 = [], theta2 = [], scoreMod = [];\n        for (let i = 0; i < ocurrent.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(ocurrent[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(-51);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ncurrent.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ncurrent[j]);\n                scoreMod.push(0);\n            }\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                theta1.push(otheta[i]);\n                theta2.push(ntheta[j]);\n                scoreMod.push(0);\n            }\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n        for (let n = 0; n < theta1.length; n++) {\n            let dth = angleDiff(theta1[n], theta2[n]);\n            let frag = newmol.clone();\n            CoordUtil.translateMolecule(frag, ox - nx, oy - ny);\n            CoordUtil.rotateMolecule(frag, dth, ox, oy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [o1];\n            p.temidx = [n1];\n            p.attdist = bfs[n1 - 1];\n            p.guided = false;\n            p.scoreModifier = scoreMod[n];\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeDirectTwo(list, oldmol, newmol, o1, o2, n1, n2) {\n        let oth = Math.atan2(oldmol.atomY(o2) - oldmol.atomY(o1), oldmol.atomX(o2) - oldmol.atomX(o1));\n        let nth = Math.atan2(newmol.atomY(n2) - newmol.atomY(n1), newmol.atomX(n2) - newmol.atomX(n1));\n        let cx = 0.5 * (oldmol.atomX(o1) + oldmol.atomX(o2)), cy = 0.5 * (oldmol.atomY(o1) + oldmol.atomY(o2));\n        let frag = newmol.clone();\n        CoordUtil.translateMolecule(frag, cx - 0.5 * (newmol.atomX(n1) + newmol.atomX(n2)), cy - 0.5 * (newmol.atomY(n1) + newmol.atomY(n2)));\n        CoordUtil.rotateMolecule(frag, oth - nth, cx, cy);\n        frag.setAtomPos(n1, oldmol.atomX(o1), oldmol.atomY(o1));\n        frag.setAtomPos(n2, oldmol.atomX(o2), oldmol.atomY(o2));\n        let pmol = oldmol.clone();\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [n1, n2];\n        p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n        p.guided = false;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeDirectMulti(list, oldmol, newmol, oidx, n1) {\n        let frag = newmol.clone();\n        let x0 = oldmol.atomX(oidx[0]), y0 = oldmol.atomY(oidx[0]);\n        CoordUtil.translateMolecule(frag, x0 - frag.atomX(n1), y0 - frag.atomY(n1));\n        let ox = oldmol.atomX(oidx[1]) - x0, oy = oldmol.atomY(oidx[1]) - y0;\n        let otheta = Math.atan2(oy, ox), orad = norm_xy(ox, oy);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(1);\n        let nidx = [];\n        for (let n2 = 1; n2 <= frag.numAtoms; n2++)\n            if (n1 != n2) {\n                let nx = frag.atomX(n2) - frag.atomX(n1), ny = frag.atomY(n2) - frag.atomY(n1), nrad = norm_xy(nx, ny);\n                if (Math.abs(nrad - orad) > 0.1)\n                    continue;\n                let ntheta = Math.atan2(ny, nx);\n                CoordUtil.rotateMolecule(frag, otheta - ntheta, x0, y0);\n                nidx = [n1, n2];\n                for (let i = 2; i < oidx.length; i++) {\n                    let hit = false;\n                    for (let j = 1; j <= frag.numAtoms; j++)\n                        if (nidx.indexOf(j) < 0)\n                            if (norm_xy(oldmol.atomX(oidx[i]) - frag.atomX(j), oldmol.atomY(oidx[i]) - frag.atomY(j)) < 0.1 * 0.1) {\n                                hit = true;\n                                nidx.push(j);\n                                break;\n                            }\n                    if (!hit)\n                        break;\n                }\n                if (nidx.length < oidx.length)\n                    continue;\n                let lowbfs = bfs.length;\n                for (let n = 0; n < nidx.length; n++)\n                    lowbfs = Math.min(lowbfs, bfs[nidx[n] - 1]);\n                let dx = 0, dy = 0;\n                for (let n = 0; n < oidx.length; n++) {\n                    dx += oldmol.atomX(oidx[n]) - frag.atomX(nidx[n]);\n                    dy += oldmol.atomY(oidx[n]) - frag.atomY(nidx[n]);\n                }\n                let invsz = 1.0 / oidx.length;\n                dx *= invsz;\n                dy *= invsz;\n                CoordUtil.translateMolecule(frag, dx, dy);\n                let pmol = oldmol.clone();\n                let osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                for (let n = 0; n < nidx.length; n++) {\n                    let x = pmol.atomX(oidx[n]), y = pmol.atomY(oidx[n]);\n                    pmol.setAtomPos(osz + nidx[n], x, y);\n                }\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag.clone();\n                p.srcidx = srcidx;\n                p.molidx = oidx.slice(0);\n                p.temidx = nidx.slice(0);\n                p.attdist = Math.min(bfs[n1 - 1], bfs[n2 - 1]);\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeBridge(list, oldmol, newmol, o1, n1) {\n        let busy1 = oldmol.atomRingBlock(o1) != 0 || oldmol.atomAdjCount(o1) >= 3;\n        let busy2 = newmol.atomRingBlock(n1) != 0 || newmol.atomAdjCount(n1) >= 3;\n        if (!busy1 || !busy2)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, o1);\n        let ntheta = SketchUtil.primeDirections(newmol, n1);\n        let bfs = Graph.fromMolecule(newmol).calculateBFS(0);\n        for (let i = 0; i < otheta.length; i++)\n            for (let j = 0; j < ntheta.length; j++) {\n                let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1), nx = newmol.atomX(n1), ny = newmol.atomY(n1);\n                let dx = Molecule.IDEALBOND * Math.cos(otheta[i]), dy = Molecule.IDEALBOND * Math.sin(otheta[i]);\n                let dth = angleDiff(otheta[i], Math.PI + ntheta[j]);\n                let frag = newmol.clone();\n                CoordUtil.translateMolecule(frag, ox - nx + dx, oy - ny + dy);\n                CoordUtil.rotateMolecule(frag, dth, ox + dx, oy + dy);\n                let pmol = oldmol.clone();\n                let att = pmol.numAtoms + n1, osz = pmol.numAtoms;\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                pmol.addBond(o1, att, 1);\n                att = frag.addAtom('C', ox, oy);\n                frag.addBond(n1, att, 1);\n                SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n                if (pmol.numAtoms == osz)\n                    continue;\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = [o1];\n                p.temidx = [att];\n                p.attdist = bfs[n1 - 1];\n                p.bridged = true;\n                p.guided = false;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    composeGuidedOne(list, oldmol, newmol, oidx, gidx) {\n        if (newmol.atomAdjCount(gidx) == 0)\n            return;\n        let otheta = SketchUtil.primeDirections(oldmol, oidx);\n        if (newmol.atomAdjCount(gidx) > 1 && oldmol.atomAdjCount(oidx) > 0) {\n            let ox = 0, oy = 0;\n            let adj = oldmol.atomAdjList(oidx);\n            for (let n = 0; n < adj.length; n++) {\n                ox += oldmol.atomX(adj[n]) - oldmol.atomX(oidx);\n                oy += oldmol.atomY(adj[n]) - oldmol.atomY(oidx);\n            }\n            let ang = Math.atan2(oy, ox);\n            let unique = true;\n            for (let n = 0; n < otheta.length; n++)\n                if (Math.abs(angleDiff(ang, otheta[n])) < 3 * RADDEG) {\n                    unique = false;\n                    break;\n                }\n            if (unique)\n                otheta.push(ang);\n        }\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let dx = 0, dy = 0;\n        let adj = newmol.atomAdjList(gidx);\n        for (let n = 0; n < adj.length; n++) {\n            dx += newmol.atomX(adj[n]) - gx;\n            dy += newmol.atomY(adj[n]) - gy;\n        }\n        dx /= adj.length;\n        dy /= adj.length;\n        let ntheta = Math.atan2(dy, dx);\n        let homoPenalty = 0;\n        if (adj.length == 1) {\n            let oel = oldmol.atomElement(oidx), nel = newmol.atomElement(adj[0]);\n            if (oel != 'C' && oel == nel)\n                homoPenalty = 1;\n        }\n        for (let n = 0; n < otheta.length; n++) {\n            let frag = newmol.clone();\n            if (this.guideidx.length == 2) {\n                for (let i = 1; i <= frag.numAtoms; i++)\n                    if (i != gidx && frag.atomElement(i) == 'X') {\n                        frag.setAtomElement(i, TemplateFusion.RESERVED_GUIDESYMBOL);\n                        break;\n                    }\n            }\n            CoordUtil.rotateMolecule(frag, otheta[n] - ntheta, gx, gy);\n            CoordUtil.translateMolecule(frag, oldmol.atomX(oidx) - gx, oldmol.atomY(oidx) - gy);\n            let pmol = oldmol.clone();\n            let osz = pmol.numAtoms;\n            pmol.append(frag);\n            let srcidx = this.sourceIndex(pmol, oldmol);\n            SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n            if (pmol.numAtoms == osz)\n                continue;\n            let sel = 0;\n            for (let i = 1; i <= pmol.numAtoms; i++)\n                if (pmol.atomElement(i) == TemplateFusion.RESERVED_GUIDESYMBOL) {\n                    let padj = pmol.atomAdjList(i);\n                    if (padj.length == 1) {\n                        sel = padj[0];\n                        if (sel > i)\n                            sel--;\n                    }\n                    pmol.deleteAtomAndBonds(i);\n                    srcidx.splice(i - 1, 1);\n                    break;\n                }\n            let p = new FusionPermutation();\n            p.mol = pmol;\n            p.display = frag;\n            p.srcidx = srcidx;\n            p.molidx = [oidx];\n            p.temidx = [gidx];\n            p.attdist = 0;\n            p.guided = true;\n            p.scoreModifier = homoPenalty;\n            p.chainSelect = sel;\n            this.removeExtraGuides(p, oldmol);\n            list.push(p);\n        }\n    }\n    composeGuidedTwo(list, oldmol, newmol, o1, o2, gidx, nidx, snapToGuide) {\n        let ox = oldmol.atomX(o1), oy = oldmol.atomY(o1);\n        let gx = newmol.atomX(gidx), gy = newmol.atomY(gidx);\n        let nx = newmol.atomX(nidx), ny = newmol.atomY(nidx);\n        let otheta = Math.atan2(oldmol.atomY(o2) - oy, oldmol.atomX(o2) - ox);\n        let gtheta = Math.atan2(ny - gy, nx - gx);\n        let isGuideOnTerminal = oldmol.atomAdjCount(o1) == 1;\n        let pmol = oldmol.clone(), frag = newmol.clone();\n        CoordUtil.rotateMolecule(frag, otheta - gtheta, gx, gy);\n        if (snapToGuide) {\n            CoordUtil.translateMolecule(frag, ox - gx, oy - gy);\n            pmol.setAtomPos(o2, frag.atomX(nidx), frag.atomY(nidx));\n        }\n        else {\n            CoordUtil.translateMolecule(frag, oldmol.atomX(o2) - frag.atomX(nidx), oldmol.atomY(o2) - frag.atomY(nidx));\n            frag.setAtomPos(gidx, ox, oy);\n        }\n        let osz = pmol.numAtoms;\n        pmol.append(frag);\n        let srcidx = this.sourceIndex(pmol, oldmol);\n        SketchUtil.mergeFragmentsMask(pmol, this.asMask(srcidx));\n        if (pmol.numAtoms == osz)\n            return;\n        let p = new FusionPermutation();\n        p.mol = pmol;\n        p.display = frag;\n        p.srcidx = srcidx;\n        p.molidx = [o1, o2];\n        p.temidx = [gidx, nidx];\n        p.attdist = isGuideOnTerminal ? 1 : 0;\n        p.guided = true;\n        this.removeExtraGuides(p, oldmol);\n        list.push(p);\n    }\n    composeGuidedMulti(list, oldmol, newmol, oidx, gidx, nudgenew) {\n        let cx1 = 0, cy1 = 0, cx2 = 0, cy2 = 0;\n        for (let n = 0; n < oidx.length; n++) {\n            cx1 += oldmol.atomX(oidx[n]);\n            cy1 += oldmol.atomY(oidx[n]);\n        }\n        for (let n = 0; n < gidx.length; n++) {\n            cx2 += newmol.atomX(gidx[n]);\n            cy2 += newmol.atomY(gidx[n]);\n        }\n        cx1 /= oidx.length;\n        cy1 /= oidx.length;\n        cx2 /= gidx.length;\n        cy2 /= gidx.length;\n        let osz = oldmol.numAtoms;\n        for (let i = 0; i < oidx.length; i++)\n            for (let j = 0; j < gidx.length; j++) {\n                let pmol = oldmol.clone(), frag = newmol.clone();\n                let th1 = Math.atan2(pmol.atomY(oidx[i]) - cy1, pmol.atomX(oidx[i]) - cx1);\n                let th2 = Math.atan2(frag.atomY(gidx[j]) - cy2, frag.atomX(gidx[j]) - cx2);\n                CoordUtil.rotateMolecule(frag, th1 - th2, cx2, cy2);\n                CoordUtil.translateMolecule(frag, cx1 - cx2, cy1 - cy2);\n                pmol.append(frag);\n                let srcidx = this.sourceIndex(pmol, oldmol);\n                let midx = Vec.numberArray(0, gidx.length), tidx = gidx.slice(0);\n                Vec.sort(tidx);\n                let mask = Vec.booleanArray(false, osz);\n                for (let g = tidx.length - 1; g >= 0; g--) {\n                    let gatom = tidx[g] + osz;\n                    let closest = 0, closeDSQ = 0;\n                    for (let n = 0; n < oidx.length; n++)\n                        if (!mask[oidx[n] - 1]) {\n                            let dx = pmol.atomX(oidx[n]) - pmol.atomX(gatom), dy = pmol.atomY(oidx[n]) - pmol.atomY(gatom);\n                            let dsq = norm_xy(dx, dy);\n                            if (closest == 0 || dsq < closeDSQ) {\n                                closest = oidx[n];\n                                closeDSQ = dsq;\n                            }\n                        }\n                    if (!nudgenew) {\n                        let dsq = norm_xy(pmol.atomX(gatom) - pmol.atomX(closest), pmol.atomY(gatom) - pmol.atomY(closest));\n                        if (dsq > 0.1 * 0.1) {\n                            let num = frag.addAtom('C', pmol.atomX(closest), pmol.atomY(closest));\n                            frag.addBond(num, tidx[g], 0);\n                        }\n                        pmol.setAtomPos(closest, pmol.atomX(gatom), pmol.atomY(gatom));\n                    }\n                    midx[g] = closest;\n                    mask[closest - 1] = true;\n                    let adj = pmol.atomAdjList(gatom);\n                    for (let n = 0; n < adj.length; n++) {\n                        let b = pmol.findBond(gatom, adj[n]);\n                        pmol.addBond(closest, adj[n], pmol.bondOrder(b), pmol.bondType(b));\n                    }\n                    pmol.deleteAtomAndBonds(gatom);\n                    srcidx.splice(gatom - 1, 1);\n                    frag.setAtomPos(tidx[g], pmol.atomX(closest), pmol.atomY(closest));\n                }\n                for (let n = pmol.numAtoms; n > osz; n--)\n                    if (pmol.atomElement(n) == 'X') {\n                        pmol.deleteAtomAndBonds(n);\n                        srcidx.splice(n - 1, 1);\n                        for (let k = 0; k < tidx.length; k++)\n                            if (n < tidx[k])\n                                tidx[k]--;\n                    }\n                for (let n = frag.numAtoms; n >= 1; n--)\n                    if (frag.atomElement(n) == 'X') {\n                        frag.setAtomElement(n, 'C');\n                    }\n                let p = new FusionPermutation();\n                p.mol = pmol;\n                p.display = frag;\n                p.srcidx = srcidx;\n                p.molidx = midx;\n                p.temidx = tidx;\n                p.attdist = 0;\n                p.guided = true;\n                this.removeExtraGuides(p, oldmol);\n                list.push(p);\n            }\n    }\n    affixRawPermutations(list) {\n        let npsz = list.length;\n        if (npsz == 0)\n            return;\n        let umask = Vec.booleanArray(true, npsz);\n        for (let i = 0; i < npsz - 1; i++)\n            if (umask[i]) {\n                let p1 = list[i];\n                for (let j = i + 1; j < npsz; j++)\n                    if (umask[j]) {\n                        let p2 = list[j];\n                        if (CoordUtil.sketchEquivalent(p1.mol, p2.mol)) {\n                            if (p1.scoreModifier + p1.attdist > p2.scoreModifier + p2.attdist) {\n                                list[i] = p2;\n                                list[j] = p1;\n                            }\n                            umask[j] = false;\n                        }\n                    }\n            }\n        let score = Vec.numberArray(0, npsz);\n        let numKeep = 0;\n        for (let n = 0; n < npsz; n++) {\n            if (umask[n]) {\n                score[n] = this.scorePermutation(list[n]);\n                if (score[n] < 1000)\n                    numKeep++;\n            }\n            else\n                score[n] = 0;\n        }\n        if (numKeep > 0)\n            for (let n = 0; n < npsz; n++)\n                if (umask[n] && score[n] >= 1000)\n                    umask[n] = false;\n        let uscore = [], uidx = [];\n        for (let n = 0; n < npsz; n++)\n            if (umask[n]) {\n                uscore.push(score[n]);\n                uidx.push(n);\n            }\n        let sidx = Vec.idxSort(uscore);\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (p.guided) {\n                this.perms.push(p);\n            }\n        }\n        for (let n = 0; n < sidx.length; n++) {\n            let p = list[uidx[sidx[n]]];\n            if (!p.guided) {\n                this.perms.push(p);\n            }\n        }\n    }\n    removeExtraGuides(perm, oldmol) {\n        MolUtil.removeDuplicateBonds(perm.mol);\n        for (let n = perm.temidx.length - 1; n >= 0; n--) {\n            let el = perm.display.atomElement(perm.temidx[n]);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            perm.molidx.splice(n, 1);\n            perm.temidx.splice(n, 1);\n        }\n        for (let n = perm.display.numAtoms; n >= 1; n--) {\n            let el = perm.display.atomElement(n);\n            if (el != 'X' && el != TemplateFusion.RESERVED_GUIDESYMBOL)\n                continue;\n            let a = CoordUtil.atomAtPoint(oldmol, perm.display.atomX(n), perm.display.atomY(n));\n            if (a > 0)\n                perm.display.setAtomElement(n, 'C');\n            else {\n                perm.display.deleteAtomAndBonds(n);\n                for (let i = 0; i < perm.temidx.length; i++)\n                    if (perm.temidx[i] > n)\n                        perm.temidx[i]--;\n            }\n        }\n    }\n    scorePermutation(perm) {\n        let mol = this.mol, tmol = perm.display, tunion = perm.mol;\n        let score = 0.2 * perm.attdist + perm.scoreModifier;\n        score += CoordUtil.congestionMolecule(tunion, 1e-3);\n        score -= tunion.numAtoms;\n        let sz1 = mol.numAtoms, sz2 = tmol.numAtoms;\n        let mx1 = [], my1 = [], mx2 = [], my2 = [];\n        for (let n = 0; n < sz1; n++) {\n            mx1.push(mol.atomX(n + 1));\n            my1.push(mol.atomY(n + 1));\n        }\n        for (let n = 0; n < sz2; n++) {\n            mx2.push(tmol.atomX(n + 1));\n            my2.push(tmol.atomY(n + 1));\n        }\n        for (let i = 0; i < sz1; i++)\n            for (let j = 0; j < sz2; j++) {\n                if (norm_xy(mx1[i] - mx2[j], my1[i] - my2[j]) > CoordUtil.OVERLAP_THRESHOLD_SQ)\n                    continue;\n                let contained = false;\n                for (let k = 0; k < perm.molidx.length; k++)\n                    if (perm.molidx[k] == i + 1 && perm.temidx[k] == j + 1) {\n                        contained = true;\n                        break;\n                    }\n                if (contained)\n                    continue;\n                score += 100;\n            }\n        if (!perm.guided)\n            for (let n = 0; n < perm.molidx.length; n++) {\n                let el = mol.atomElement(perm.molidx[n]);\n                if (el == 'C' || el == 'O' || el == 'S' || el == 'N' || el == 'P')\n                    continue;\n                let adj1 = mol.atomAdjList(perm.molidx[n]), adj2 = tmol.atomAdjList(perm.temidx[n]);\n                if (adj1.length + adj2.length >= 4)\n                    continue;\n                for (let i = 0; i < adj1.length; i++)\n                    for (let j = 0; j < adj2.length; j++) {\n                        let ai = adj1[i], aj = adj2[j];\n                        let bo1 = mol.bondOrder(mol.findBond(perm.molidx[n], ai));\n                        let bo2 = tmol.bondOrder(tmol.findBond(perm.temidx[n], aj));\n                        let wantTheta = 0;\n                        if ((bo1 == 1 && bo2 == 1) || (bo1 == 1 && bo2 == 2) || (bo1 == 2 && bo2 == 1))\n                            wantTheta = 120;\n                        else if ((bo1 == 2 && bo2 == 2) || (bo1 == 1 && bo2 == 3) || (bo1 == 3 && bo2 == 1))\n                            wantTheta = 180;\n                        else\n                            continue;\n                        let dx1 = mx1[ai - 1] - mx1[perm.molidx[n] - 1];\n                        let dy1 = my1[ai - 1] - my1[perm.molidx[n] - 1];\n                        let dx2 = mx2[aj - 1] - mx2[perm.temidx[n] - 1];\n                        let dy2 = my2[aj - 1] - my2[perm.temidx[n] - 1];\n                        let theta = Math.abs(angleDiff(Math.atan2(dy1, dx1), Math.atan2(dy2, dx2))) * RADDEG;\n                        if (Math.abs(theta - wantTheta) > 5)\n                            score += 50;\n                    }\n            }\n        for (let n = 1; n <= tunion.numAtoms; n++)\n            if (tunion.atomElement(n) == 'C' || tunion.atomElement(n) == 'N') {\n                let adjb = tunion.atomAdjBonds(n);\n                let totalBO = 0;\n                for (let i = 0; i < adjb.length; i++) {\n                    let bo = tunion.bondOrder(adjb[i]);\n                    totalBO += bo;\n                    if (bo == 0) {\n                        totalBO = 0;\n                        break;\n                    }\n                }\n                if (totalBO > 4)\n                    score += 1000;\n            }\n        if (perm.molidx.length >= 2) {\n            let mmask = Vec.booleanArray(false, sz1);\n            for (let n = 0; n < perm.molidx.length; n++)\n                mmask[perm.molidx[n] - 1] = true;\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                if (!mmask[bfr - 1] || !mmask[bto - 1])\n                    continue;\n                let tfr = perm.molidx.indexOf(bfr), tto = perm.molidx.indexOf(bto);\n                let tn = tmol.findBond(perm.temidx[tfr], perm.temidx[tto]);\n                if (tn == 0)\n                    continue;\n                if (mol.bondOrder(n) != tmol.bondOrder(tn))\n                    score += 1;\n            }\n        }\n        return score;\n    }\n    sourceIndex(xmol, wmol) {\n        let idx = Vec.numberArray(0, xmol.numAtoms);\n        for (let n = wmol.numAtoms; n >= 1; n--)\n            idx[n - 1] = n;\n        return idx;\n    }\n    asMask(imask) {\n        let ret = Vec.booleanArray(false, imask.length);\n        for (let n = 0; n < imask.length; n++)\n            ret[n] = imask[n] != 0;\n        return ret;\n    }\n}\nTemplateFusion.RESERVED_GUIDESYMBOL = 'XXX';\nexport { TemplateFusion };\n//# sourceMappingURL=TemplateFusion.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { Chemistry } from '../mol/Chemistry';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Graph } from '../mol/Graph';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { QueryTypeAtom, QueryUtil } from '../mol/QueryUtil';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { angleDiff, angleNorm, DEGRAD, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { MetalLigate } from './MetalLigate';\nimport { TemplateFusion } from './TemplateFusion';\nexport var ActivityType;\n(function (ActivityType) {\n    ActivityType[ActivityType[\"Delete\"] = 1] = \"Delete\";\n    ActivityType[ActivityType[\"Clear\"] = 2] = \"Clear\";\n    ActivityType[ActivityType[\"Copy\"] = 3] = \"Copy\";\n    ActivityType[ActivityType[\"Cut\"] = 4] = \"Cut\";\n    ActivityType[ActivityType[\"SelectAll\"] = 5] = \"SelectAll\";\n    ActivityType[ActivityType[\"SelectNone\"] = 6] = \"SelectNone\";\n    ActivityType[ActivityType[\"SelectPrevComp\"] = 7] = \"SelectPrevComp\";\n    ActivityType[ActivityType[\"SelectNextComp\"] = 8] = \"SelectNextComp\";\n    ActivityType[ActivityType[\"SelectSide\"] = 9] = \"SelectSide\";\n    ActivityType[ActivityType[\"SelectGrow\"] = 10] = \"SelectGrow\";\n    ActivityType[ActivityType[\"SelectShrink\"] = 11] = \"SelectShrink\";\n    ActivityType[ActivityType[\"SelectChain\"] = 12] = \"SelectChain\";\n    ActivityType[ActivityType[\"SelectSmRing\"] = 13] = \"SelectSmRing\";\n    ActivityType[ActivityType[\"SelectRingBlk\"] = 14] = \"SelectRingBlk\";\n    ActivityType[ActivityType[\"SelectCurElement\"] = 15] = \"SelectCurElement\";\n    ActivityType[ActivityType[\"SelectToggle\"] = 16] = \"SelectToggle\";\n    ActivityType[ActivityType[\"SelectUnCurrent\"] = 17] = \"SelectUnCurrent\";\n    ActivityType[ActivityType[\"Element\"] = 18] = \"Element\";\n    ActivityType[ActivityType[\"AtomPos\"] = 19] = \"AtomPos\";\n    ActivityType[ActivityType[\"Charge\"] = 20] = \"Charge\";\n    ActivityType[ActivityType[\"Connect\"] = 21] = \"Connect\";\n    ActivityType[ActivityType[\"Disconnect\"] = 22] = \"Disconnect\";\n    ActivityType[ActivityType[\"MetalLigate\"] = 23] = \"MetalLigate\";\n    ActivityType[ActivityType[\"BondOrder\"] = 24] = \"BondOrder\";\n    ActivityType[ActivityType[\"BondType\"] = 25] = \"BondType\";\n    ActivityType[ActivityType[\"BondGeom\"] = 26] = \"BondGeom\";\n    ActivityType[ActivityType[\"BondAtom\"] = 27] = \"BondAtom\";\n    ActivityType[ActivityType[\"BondSwitch\"] = 28] = \"BondSwitch\";\n    ActivityType[ActivityType[\"BondRotate\"] = 29] = \"BondRotate\";\n    ActivityType[ActivityType[\"BondAddTwo\"] = 30] = \"BondAddTwo\";\n    ActivityType[ActivityType[\"BondInsert\"] = 31] = \"BondInsert\";\n    ActivityType[ActivityType[\"Join\"] = 32] = \"Join\";\n    ActivityType[ActivityType[\"Nudge\"] = 33] = \"Nudge\";\n    ActivityType[ActivityType[\"NudgeLots\"] = 34] = \"NudgeLots\";\n    ActivityType[ActivityType[\"NudgeFar\"] = 35] = \"NudgeFar\";\n    ActivityType[ActivityType[\"Flip\"] = 36] = \"Flip\";\n    ActivityType[ActivityType[\"Scale\"] = 37] = \"Scale\";\n    ActivityType[ActivityType[\"Rotate\"] = 38] = \"Rotate\";\n    ActivityType[ActivityType[\"BondDist\"] = 39] = \"BondDist\";\n    ActivityType[ActivityType[\"AlignAngle\"] = 40] = \"AlignAngle\";\n    ActivityType[ActivityType[\"AlignRegular\"] = 41] = \"AlignRegular\";\n    ActivityType[ActivityType[\"AdjustTorsion\"] = 42] = \"AdjustTorsion\";\n    ActivityType[ActivityType[\"Move\"] = 43] = \"Move\";\n    ActivityType[ActivityType[\"Ring\"] = 44] = \"Ring\";\n    ActivityType[ActivityType[\"TemplateFusion\"] = 45] = \"TemplateFusion\";\n    ActivityType[ActivityType[\"AbbrevTempl\"] = 46] = \"AbbrevTempl\";\n    ActivityType[ActivityType[\"AbbrevGroup\"] = 47] = \"AbbrevGroup\";\n    ActivityType[ActivityType[\"AbbrevFormula\"] = 48] = \"AbbrevFormula\";\n    ActivityType[ActivityType[\"AbbrevClear\"] = 49] = \"AbbrevClear\";\n    ActivityType[ActivityType[\"AbbrevExpand\"] = 50] = \"AbbrevExpand\";\n    ActivityType[ActivityType[\"BondArtifactPath\"] = 51] = \"BondArtifactPath\";\n    ActivityType[ActivityType[\"BondArtifactRing\"] = 52] = \"BondArtifactRing\";\n    ActivityType[ActivityType[\"BondArtifactArene\"] = 53] = \"BondArtifactArene\";\n    ActivityType[ActivityType[\"BondArtifactClear\"] = 54] = \"BondArtifactClear\";\n    ActivityType[ActivityType[\"PolymerBlock\"] = 55] = \"PolymerBlock\";\n    ActivityType[ActivityType[\"AddHydrogens\"] = 56] = \"AddHydrogens\";\n    ActivityType[ActivityType[\"RemoveHydrogens\"] = 57] = \"RemoveHydrogens\";\n    ActivityType[ActivityType[\"QueryClear\"] = 58] = \"QueryClear\";\n    ActivityType[ActivityType[\"QueryCopy\"] = 59] = \"QueryCopy\";\n    ActivityType[ActivityType[\"QueryPaste\"] = 60] = \"QueryPaste\";\n    ActivityType[ActivityType[\"QuerySetAtom\"] = 61] = \"QuerySetAtom\";\n    ActivityType[ActivityType[\"QuerySetBond\"] = 62] = \"QuerySetBond\";\n    ActivityType[ActivityType[\"QueryBondAny\"] = 63] = \"QueryBondAny\";\n    ActivityType[ActivityType[\"SproutDirection\"] = 64] = \"SproutDirection\";\n})(ActivityType || (ActivityType = {}));\nexport class MoleculeActivity {\n    constructor(input, activity, param, owner) {\n        this.input = input;\n        this.activity = activity;\n        this.param = param;\n        this.owner = owner;\n        this.toClipboard = null;\n        this.output =\n            {\n                mol: null,\n                currentAtom: -1,\n                currentBond: -1,\n                selectedMask: null\n            };\n        let na = this.input.mol.numAtoms;\n        if (this.input.selectedMask == null)\n            this.input.selectedMask = Vec.booleanArray(false, na);\n        while (this.input.selectedMask.length < na)\n            this.input.selectedMask.push(false);\n        this.subjectMask = this.input.selectedMask.slice(0);\n        this.subjectLength = Vec.maskCount(this.subjectMask);\n        this.subjectIndex = [];\n        this.hasSelected = this.subjectLength > 0;\n        if (this.subjectLength == 0) {\n            if (this.input.currentAtom > 0) {\n                this.subjectLength = 1;\n                this.subjectMask[this.input.currentAtom - 1] = true;\n                this.subjectIndex = [this.input.currentAtom];\n            }\n            else if (this.input.currentBond > 0) {\n                let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n                let b1 = Math.min(bfr, bto), b2 = Math.max(bfr, bto);\n                this.subjectLength = 2;\n                this.subjectMask[b1 - 1] = true;\n                this.subjectMask[b2 - 1] = true;\n                this.subjectIndex = [b1, b2];\n            }\n        }\n        else {\n            this.subjectIndex = Vec.maskIdx(this.subjectMask);\n            Vec.addTo(this.subjectIndex, 1);\n        }\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    evaluate() {\n        return true;\n    }\n    execute() {\n        var _a;\n        let param = this.param;\n        if (this.activity == ActivityType.Delete)\n            this.execDelete();\n        else if (this.activity == ActivityType.Clear)\n            this.execClear();\n        else if (this.activity == ActivityType.Copy)\n            this.execCopy(false);\n        else if (this.activity == ActivityType.Cut)\n            this.execCopy(true);\n        else if (this.activity == ActivityType.SelectAll)\n            this.execSelectAll(true);\n        else if (this.activity == ActivityType.SelectNone)\n            this.execSelectAll(false);\n        else if (this.activity == ActivityType.SelectPrevComp)\n            this.execSelectComp(-1);\n        else if (this.activity == ActivityType.SelectNextComp)\n            this.execSelectComp(1);\n        else if (this.activity == ActivityType.SelectSide)\n            this.execSelectSide();\n        else if (this.activity == ActivityType.SelectGrow)\n            this.execSelectGrow();\n        else if (this.activity == ActivityType.SelectShrink)\n            this.execSelectShrink();\n        else if (this.activity == ActivityType.SelectChain)\n            this.execSelectChain();\n        else if (this.activity == ActivityType.SelectSmRing)\n            this.execSelectSmRing();\n        else if (this.activity == ActivityType.SelectRingBlk)\n            this.execSelectRingBlk();\n        else if (this.activity == ActivityType.SelectCurElement)\n            this.execSelectCurElement();\n        else if (this.activity == ActivityType.SelectToggle)\n            this.execSelectToggle();\n        else if (this.activity == ActivityType.SelectUnCurrent)\n            this.execSelectUnCurrent();\n        else if (this.activity == ActivityType.Element)\n            this.execElement(param.element, param.positionX, param.positionY, param.keepAbbrev);\n        else if (this.activity == ActivityType.Charge)\n            this.execCharge(param.delta);\n        else if (this.activity == ActivityType.Connect)\n            this.execConnect(1, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.Disconnect)\n            this.execDisconnect();\n        else if (this.activity == ActivityType.MetalLigate)\n            this.execMetalLigate();\n        else if (this.activity == ActivityType.BondOrder)\n            this.execBond(param.order, Molecule.BONDTYPE_NORMAL);\n        else if (this.activity == ActivityType.BondType)\n            this.execBond(1, param.type);\n        else if (this.activity == ActivityType.BondGeom)\n            this.execBondGeom(param.geom);\n        else if (this.activity == ActivityType.BondAtom)\n            this.execBondAtom(param.order, param.type, param.element, param.x1, param.y1, param.x2, param.y2);\n        else if (this.activity == ActivityType.BondSwitch)\n            this.execBondSwitch();\n        else if (this.activity == ActivityType.BondRotate)\n            this.execBondRotate();\n        else if (this.activity == ActivityType.BondAddTwo)\n            this.execBondAddTwo();\n        else if (this.activity == ActivityType.BondInsert)\n            this.execBondInsert();\n        else if (this.activity == ActivityType.Join)\n            this.execJoin();\n        else if (this.activity == ActivityType.Nudge)\n            this.execNudge(param.dir, 0.1);\n        else if (this.activity == ActivityType.NudgeLots)\n            this.execNudge(param.dir, 1);\n        else if (this.activity == ActivityType.NudgeFar)\n            this.execNudgeFar(param.dir);\n        else if (this.activity == ActivityType.Flip)\n            this.execFlip(param.axis);\n        else if (this.activity == ActivityType.Scale)\n            this.execScale(param.mag);\n        else if (this.activity == ActivityType.Rotate)\n            this.execRotate(param.theta, param.centreX, param.centreY);\n        else if (this.activity == ActivityType.BondDist)\n            this.execBondDist(param.dist);\n        else if (this.activity == ActivityType.AlignAngle)\n            this.execAlignAngle(param.angle);\n        else if (this.activity == ActivityType.AlignRegular)\n            this.execAlignRegular();\n        else if (this.activity == ActivityType.AdjustTorsion)\n            this.execAdjustTorsion(param.angle);\n        else if (this.activity == ActivityType.Move)\n            this.execMove(param.refAtom, param.deltaX, param.deltaY);\n        else if (this.activity == ActivityType.Ring)\n            this.execRing(param.ringX, param.ringY, param.aromatic);\n        else if (this.activity == ActivityType.TemplateFusion) {\n            this.execTemplateFusion((_a = param.frag) !== null && _a !== void 0 ? _a : Molecule.fromString(param.fragNative));\n            if (this.owner)\n                this.owner.setPermutations(this.output.permutations);\n            return;\n        }\n        else if (this.activity == ActivityType.AbbrevTempl)\n            this.execAbbrevTempl();\n        else if (this.activity == ActivityType.AbbrevGroup)\n            this.execAbbrevGroup();\n        else if (this.activity == ActivityType.AbbrevFormula)\n            this.execAbbrevFormula();\n        else if (this.activity == ActivityType.AbbrevClear)\n            this.execAbbrevClear();\n        else if (this.activity == ActivityType.AbbrevExpand)\n            this.execAbbrevExpand();\n        else if (this.activity == ActivityType.BondArtifactPath || this.activity == ActivityType.BondArtifactRing ||\n            this.activity == ActivityType.BondArtifactArene || this.activity == ActivityType.BondArtifactClear)\n            this.execBondArtifact(this.activity);\n        else if (this.activity == ActivityType.PolymerBlock)\n            this.execPolymerBlock();\n        else if (this.activity == ActivityType.AddHydrogens)\n            this.execAddHydrogens();\n        else if (this.activity == ActivityType.RemoveHydrogens)\n            this.execRemoveHydrogens();\n        else if (this.activity == ActivityType.QueryClear)\n            this.execQueryClear();\n        else if (this.activity == ActivityType.QueryCopy)\n            this.execQueryCopy();\n        else if (this.activity == ActivityType.QueryPaste)\n            this.execQueryPaste();\n        else if (this.activity == ActivityType.QuerySetAtom)\n            this.execQuerySetAtom();\n        else if (this.activity == ActivityType.QuerySetBond)\n            this.execQuerySetBond();\n        else if (this.activity == ActivityType.QueryBondAny)\n            this.execQueryBondAny();\n        else if (this.activity == ActivityType.SproutDirection)\n            this.execSproutDirection(param.deltaX, param.deltaY);\n        this.finish();\n    }\n    finish() {\n        if (!this.owner)\n            return;\n        if (this.output.mol != null || this.output.currentAtom >= 0 || this.output.currentBond >= 0 || this.output.selectedMask != null) {\n            this.owner.setState(this.output, true);\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, false);\n        }\n        else {\n            if (this.errmsg != null)\n                this.owner.showMessage(this.errmsg, true);\n        }\n    }\n    execDelete() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.mol = mol.clone();\n        this.zapSubject();\n        if (this.input.currentBond > 0 && !this.hasSelected) {\n            this.output.mol.deleteBond(this.input.currentBond);\n            this.output.currentBond = 0;\n            return;\n        }\n        if (this.subjectLength == 1 && this.subjectIndex[0] == this.input.currentAtom) {\n            let adj = mol.atomAdjList(this.input.currentAtom);\n            if (adj.length == 1) {\n                this.output.currentAtom = adj[0];\n                if (this.output.currentAtom > this.input.currentAtom)\n                    this.output.currentAtom--;\n            }\n        }\n        for (let n = this.subjectLength - 1; n >= 0; n--)\n            this.output.mol.deleteAtomAndBonds(this.subjectIndex[n]);\n    }\n    execCopy(withCut) {\n        let mol = this.input.mol;\n        if (this.subjectLength > 0)\n            mol = MolUtil.subgraphWithAttachments(mol, this.subjectMask);\n        if (this.owner)\n            this.owner.performCopy(mol);\n        else\n            this.toClipboard = mol.toString();\n        if (withCut) {\n            this.zapSubject();\n            this.output.mol = MolUtil.subgraphMask(this.input.mol, Vec.notMask(this.subjectMask));\n        }\n    }\n    execClear() {\n        this.output.mol = new Molecule();\n        this.zapSubject();\n    }\n    execSelectAll(all) {\n        let same = true;\n        for (let n = 0; n < this.input.mol.numAtoms; n++)\n            if (this.subjectMask[n] != all) {\n                same = false;\n                break;\n            }\n        if (same) {\n            this.errmsg = all ? 'All atoms already selected.' : 'All atoms already deselected.';\n            return;\n        }\n        this.output.selectedMask = Vec.booleanArray(all, this.input.mol.numAtoms);\n    }\n    execSelectComp(dir) {\n        let cclist = MolUtil.componentList(this.input.mol);\n        if (cclist.length == 1 && this.hasSelected && this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'All atoms already selected.';\n            return;\n        }\n        let sel = this.pickSelectedGroup(cclist, dir);\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n        for (let n = 0; n < cclist[sel].length; n++)\n            this.output.selectedMask[cclist[sel][n] - 1] = true;\n    }\n    execSelectSide() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        if (currentAtom > 0 && mol.atomAdjCount(currentAtom) == 0) {\n            this.errmsg = 'Current atom has no neighbours.';\n            return;\n        }\n        if (currentBond > 0 && mol.atomAdjCount(mol.bondFrom(currentBond)) == 1 && mol.atomAdjCount(mol.bondTo(currentBond)) == 1) {\n            this.errmsg = 'Current bond has no neighbours.';\n            return;\n        }\n        let sides = currentAtom > 0 ? MolUtil.getAtomSides(mol, currentAtom) : MolUtil.getBondSides(mol, currentBond);\n        let sel = this.pickSelectedGroup(sides, 1);\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let n = 0; n < sides[sel].length; n++)\n            this.output.selectedMask[sides[sel][n] - 1] = true;\n    }\n    execSelectGrow() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol, currentAtom = this.input.currentAtom, currentBond = this.input.currentBond;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (!this.hasSelected) {\n            if (currentAtom > 0) {\n                this.output.selectedMask[currentAtom - 1] = true;\n            }\n            else {\n                this.output.selectedMask[mol.bondFrom(currentBond) - 1] = true;\n                this.output.selectedMask[mol.bondTo(currentBond) - 1] = true;\n            }\n        }\n        else {\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n                if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto])\n                    this.output.selectedMask[bto] = true;\n                else if (this.input.selectedMask && !this.input.selectedMask[bfr])\n                    this.output.selectedMask[bfr] = true;\n            }\n        }\n    }\n    execSelectShrink() {\n        if (!this.requireSelected())\n            return;\n        let mol = this.input.mol;\n        let count = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (!this.input.selectedMask[bfr] || !this.input.selectedMask[bto])\n                continue;\n            count[bfr]++;\n            count[bto]++;\n        }\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 0; n < mol.numAtoms; n++)\n            this.output.selectedMask[n] = this.input.selectedMask[n] && count[n] >= 2;\n    }\n    execSelectChain() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n) - 1, bto = mol.bondTo(n) - 1;\n            if (this.input.selectedMask[bfr] && !this.input.selectedMask[bto] && mol.atomRingBlock(bto + 1) == 0)\n                this.output.selectedMask[bto] = true;\n            else if (this.input.selectedMask[bto] && !this.input.selectedMask[bfr] && mol.atomRingBlock(bfr + 1) == 0)\n                this.output.selectedMask[bfr] = true;\n        }\n    }\n    execSelectSmRing() {\n        if (!this.requireSubject())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        for (let r = 3; r <= 8; r++) {\n            let rings = this.input.mol.findRingsOfSize(r);\n            for (let i = 0; i < rings.length; i++) {\n                let any = false;\n                for (let j = 0; j < rings[i].length; j++)\n                    if (this.subjectMask[rings[i][j] - 1]) {\n                        any = true;\n                        break;\n                    }\n                if (any)\n                    for (let j = 0; j < rings[i].length; j++)\n                        this.output.selectedMask[rings[i][j] - 1] = true;\n            }\n        }\n    }\n    execSelectRingBlk() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let maxRB = 0;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            maxRB = Math.max(maxRB, mol.atomRingBlock(n));\n        if (maxRB == 0)\n            return;\n        let gotRB = Vec.booleanArray(false, maxRB);\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && this.subjectMask[n - 1])\n                gotRB[rb - 1] = true;\n        }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let rb = mol.atomRingBlock(n);\n            if (rb > 0 && gotRB[rb - 1])\n                this.output.selectedMask[n - 1] = true;\n        }\n    }\n    execSelectCurElement() {\n        if (!this.requireCurrent())\n            return;\n        let mol = this.input.mol;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        let el1 = '', el2 = '';\n        if (this.input.currentAtom > 0) {\n            el1 = mol.atomElement(this.input.currentAtom);\n        }\n        else {\n            el1 = mol.atomElement(mol.bondFrom(this.input.currentBond));\n            el2 = mol.atomElement(mol.bondTo(this.input.currentBond));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomElement(n) == el1 || mol.atomElement(n) == el2)\n                this.output.selectedMask[n - 1] = true;\n    }\n    execSelectToggle() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = !this.output.selectedMask[this.input.currentAtom - 1];\n        }\n        else {\n            let bfr = this.input.mol.bondFrom(this.input.currentBond), bto = this.input.mol.bondTo(this.input.currentBond);\n            let sel = !this.input.selectedMask[bfr - 1] || !this.input.selectedMask[bto - 1];\n            this.output.selectedMask[bfr - 1] = sel;\n            this.output.selectedMask[bto - 1] = sel;\n        }\n    }\n    execSelectUnCurrent() {\n        if (!this.requireCurrent())\n            return;\n        this.output.selectedMask = this.input.selectedMask.slice(0);\n        if (this.input.currentAtom > 0) {\n            this.output.selectedMask[this.input.currentAtom - 1] = false;\n        }\n        else {\n            this.output.selectedMask[this.input.mol.bondFrom(this.input.currentBond) - 1] = false;\n            this.output.selectedMask[this.input.mol.bondTo(this.input.currentBond) - 1] = false;\n        }\n    }\n    execElement(element, positionX, positionY, keepAbbrev) {\n        const QUERY_ELEMENTS = ['A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'R'];\n        if (this.subjectLength > 0 && !QUERY_ELEMENTS.includes(element)) {\n            let anyChange = false;\n            for (let n = 0; n < this.subjectLength; n++)\n                if (this.input.mol.atomElement(this.subjectIndex[n]) != element) {\n                    anyChange = true;\n                    break;\n                }\n            if (!anyChange) {\n                this.errmsg = 'Elements not changed.';\n                return;\n            }\n        }\n        let mol = this.output.mol = this.input.mol.clone();\n        let applyQuery = (atom) => {\n            if (element == 'A') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'X') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'I']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Y') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['O', 'S', 'Se', 'Te']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Z') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['F', 'Cl', 'Br', 'O', 'S']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'Q') {\n                QueryUtil.setQueryAtomElementsNot(mol, atom, ['H', 'C']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'M') {\n                const NON_METALS = ['H', 'B', 'C', 'N', 'O', 'F', 'Si', 'P', 'S', 'Cl', 'As', 'Se', 'Br', 'Te', 'I'];\n                QueryUtil.setQueryAtomElementsNot(mol, atom, NON_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.Elements);\n            }\n            else if (element == 'T') {\n                const TRANSITION_METALS = [\n                    'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n                    'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n                    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n                    'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n                    'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, TRANSITION_METALS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'E') {\n                const MAIN_GROUPS = [\n                    'B', 'N', 'O', 'F',\n                    'Al', 'Si', 'P', 'S', 'Cl',\n                    'Zn', 'Ga', 'Se', 'As', 'Se', 'Br',\n                    'Cd', 'In', 'Sn', 'Sb', 'Te', 'I',\n                    'Hg', 'Tl', 'Pb', 'Bi', 'Pb', 'At'\n                ];\n                QueryUtil.setQueryAtomElements(mol, atom, MAIN_GROUPS);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n            else if (element == 'R') {\n                QueryUtil.setQueryAtomElements(mol, atom, ['C', 'N', 'O', 'S', 'P', 'H']);\n                QueryUtil.deleteQueryAtom(mol, atom, QueryTypeAtom.ElementsNot);\n            }\n        };\n        if (mol.numAtoms == 0) {\n            mol.addAtom(element, 0, 0);\n            applyQuery(mol.numAtoms);\n        }\n        else if (this.subjectLength == 0) {\n            if (positionX != null && positionY != null)\n                mol.addAtom(element, positionX, positionY);\n            else\n                SketchUtil.placeNewAtom(mol, element);\n            applyQuery(mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                if (keepAbbrev)\n                    mol.setAtomElement(this.subjectIndex[n], element);\n                else\n                    MolUtil.setAtomElement(mol, this.subjectIndex[n], element);\n                applyQuery(this.subjectIndex[n]);\n            }\n        }\n    }\n    execCharge(delta) {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let chg = Math.max(-20, Math.min(20, this.input.mol.atomCharge(this.subjectIndex[n]) + delta));\n            this.output.mol.setAtomCharge(this.subjectIndex[n], chg);\n        }\n    }\n    execConnect(order, type) {\n        if (!this.requireSubject())\n            return;\n        let conn = SketchUtil.pickAtomsToConnect(this.input.mol, this.subjectIndex);\n        if (conn == null) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for connection.';\n            return;\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < conn.length; n += 2)\n            MolUtil.addBond(this.output.mol, conn[n], conn[n + 1], order, type);\n    }\n    execDisconnect() {\n        let zap = [];\n        let mol = this.input.mol;\n        if (this.hasSelected) {\n            for (let n = 1; n <= mol.numBonds; n++)\n                if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                    zap.push(n);\n        }\n        else if (this.input.currentAtom > 0) {\n            for (let a of mol.atomAdjBonds(this.input.currentAtom))\n                zap.push(a);\n        }\n        else if (this.input.currentBond > 0) {\n            zap.push(this.input.currentBond);\n        }\n        if (zap.length == 0) {\n            this.errmsg = 'Subject atoms contain no bonds suitable for disconnection.';\n            return;\n        }\n        let killmask = Vec.booleanArray(false, mol.numBonds);\n        for (let b of zap)\n            killmask[b - 1] = true;\n        this.output.mol = this.input.mol.clone();\n        for (let n = mol.numBonds; n >= 1; n--)\n            if (killmask[n - 1])\n                this.output.mol.deleteBond(n);\n    }\n    execMetalLigate() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let ligAtoms = this.subjectIndex.slice(0);\n        let metalAtom = this.input.currentAtom;\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_BLOCKS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            for (let a of this.subjectIndex) {\n                let atno = mol.atomicNumber(a);\n                if (Chemistry.ELEMENT_ROWS[atno] >= 3) {\n                    metalAtom = a;\n                    break;\n                }\n            }\n        }\n        if (metalAtom == 0) {\n            this.errmsg = 'Unsure which is the metal atom: try indicating as current.';\n            return;\n        }\n        let i = ligAtoms.indexOf(metalAtom);\n        if (i >= 0)\n            ligAtoms.splice(i, 1);\n        if (ligAtoms.length == 0)\n            ligAtoms = mol.atomAdjList(metalAtom);\n        if (ligAtoms.length == 0) {\n            this.errmsg = 'Metal centre has no attachments: try selecting atom join-points.';\n            return;\n        }\n        mol = new MetalLigate(mol, metalAtom, ligAtoms).generate();\n        this.output.mol = mol;\n        this.output.currentAtom = metalAtom;\n        this.output.currentBond = -1;\n        this.output.selectedMask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of ligAtoms)\n            this.output.selectedMask[a - 1] = true;\n    }\n    execBond(order, type) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == 1) {\n            this.performBondNew(this.subjectIndex[0], order, type);\n            return;\n        }\n        let ccmol = MolUtil.subgraphMask(this.input.mol, this.subjectMask);\n        let oneComp = true;\n        for (let n = ccmol.numAtoms; n >= 1; n--)\n            if (ccmol.atomConnComp(n) != 1) {\n                oneComp = false;\n                break;\n            }\n        if (oneComp)\n            this.performBondChange(order, type);\n        else\n            this.execConnect(order, type);\n    }\n    execBondGeom(geom) {\n        let bond = this.subjectLength == 2 ? this.input.mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) : 0;\n        if (this.subjectLength == 0 || this.subjectLength > 2 || (this.subjectLength == 2 && bond == 0)) {\n            this.errmsg = 'The subject must be a single atom or bond.';\n            return;\n        }\n        if (this.subjectLength == 1)\n            this.performBondGeomAtom(geom, this.subjectIndex[0]);\n        else\n            this.performBondGeomBond(geom, bond);\n    }\n    execBondAtom(order, type, element, x1, y1, x2, y2) {\n        let mol = this.input.mol;\n        let a1 = CoordUtil.atomAtPoint(mol, x1, y1, 0.01), a2 = CoordUtil.atomAtPoint(mol, x2, y2, 0.01);\n        if (a1 > 0 && a1 == a2)\n            return;\n        if (a1 > 0 && a2 > 0 && mol.findBond(a1, a2) > 0)\n            return;\n        this.output.mol = mol.clone();\n        if (a1 == 0)\n            a1 = this.output.mol.addAtom('C', x1, y1);\n        if (a2 == 0)\n            a2 = this.output.mol.addAtom(element, x2, y2);\n        this.output.mol.addBond(a1, a2, order, type);\n    }\n    execBondSwitch() {\n        if (this.input.altmol) {\n            this.output.mol = this.input.altmol;\n            this.output.altmol = this.input.mol;\n            return;\n        }\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol;\n        let src = 0, dst = [];\n        if (this.subjectLength == 1) {\n            src = this.subjectIndex[0];\n            let adj = mol.atomAdjList(src);\n            for (let n = 0; n < adj.length; n++)\n                if (mol.atomAdjCount(adj[n]) == 1)\n                    dst.push(adj[n]);\n        }\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0) {\n            let ac1 = mol.atomAdjCount(this.subjectIndex[0]), ac2 = mol.atomAdjCount(this.subjectIndex[1]);\n            if (ac1 > 1 && ac2 == 1) {\n                src = this.subjectIndex[0];\n                dst.push(this.subjectIndex[1]);\n            }\n            else if (ac1 == 1 && ac2 > 1) {\n                src = this.subjectIndex[1];\n                dst.push(this.subjectIndex[0]);\n            }\n        }\n        if (src == 0 || dst.length == 0) {\n            this.errmsg = 'Subject must include a terminal bond.';\n            return;\n        }\n        let geoms = SketchUtil.guessAtomGeometry(mol, src, 1);\n        if (geoms.length == 0) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = SketchUtil.switchAtomGeometry(mol, src, dst, geoms);\n        if (this.output.mol == null) {\n            this.errmsg = 'No alternative geometries identified.';\n        }\n    }\n    execBondRotate() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol;\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot rotate a ring-bond.';\n            return;\n        }\n        if (mol.atomAdjCount(mol.bondFrom(bond)) == 1 && mol.atomAdjCount(mol.bondTo(bond)) == 1) {\n            this.errmsg = 'Two-atom components do not rotate.';\n            return;\n        }\n        mol = mol.clone();\n        let [atom1, atom2, side] = this.mobileSide(bond, true);\n        let cx = mol.atomX(atom1), cy = mol.atomY(atom1);\n        let theta = Math.atan2(mol.atomY(atom1) - mol.atomY(atom2), mol.atomX(atom1) - mol.atomX(atom2));\n        for (let a of side)\n            if (a != atom1) {\n                let dx = mol.atomX(a) - cx, dy = mol.atomY(a) - cy, dist = norm_xy(dx, dy);\n                let dtheta = Math.atan2(dy, dx);\n                dtheta = theta - angleDiff(dtheta, theta);\n                mol.setAtomPos(a, cx + dist * Math.cos(dtheta), cy + dist * Math.sin(dtheta));\n            }\n        let mask = Vec.idxMask(Vec.add(side, -1), mol.numAtoms);\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (mask[mol.bondFrom(b) - 1] && mask[mol.bondTo(b) - 1]) {\n                let bt = mol.bondType(b);\n                if (bt == Molecule.BONDTYPE_INCLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_DECLINED);\n                else if (bt == Molecule.BONDTYPE_DECLINED)\n                    mol.setBondType(b, Molecule.BONDTYPE_INCLINED);\n            }\n        if (CoordUtil.sketchEquivalent(this.input.mol, mol)) {\n            this.errmsg = 'Rotation has no effect.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execBondAddTwo() {\n        if (this.subjectLength != 1) {\n            this.errmsg = 'Subject must be a single atom.';\n            return;\n        }\n        let atom = this.subjectIndex[0];\n        if (this.input.mol.atomAdjCount(atom) < 2) {\n            this.errmsg = 'Subject atom must already have at least 2 bonds.';\n            return;\n        }\n        let ang = SketchUtil.calculateNewBondAngles(this.input.mol, atom, 1);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(this.input.mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for new substituents.';\n            return;\n        }\n        let baseAng = ang[0];\n        let cx = this.input.mol.atomX(atom), cy = this.input.mol.atomY(atom);\n        if (ang.length > 1) {\n            let best = 0;\n            for (let n = 0; n < ang.length; n++) {\n                let x = cx + Molecule.IDEALBOND * Math.cos(ang[n]);\n                let y = cy + Molecule.IDEALBOND * Math.sin(ang[n]);\n                let score = CoordUtil.congestionPoint(this.input.mol, x, y);\n                if (n == 0 || score < best) {\n                    best = score;\n                    baseAng = ang[n];\n                }\n            }\n        }\n        let ang1 = baseAng - 30.0 * DEGRAD, ang2 = baseAng + 30.0 * DEGRAD;\n        let mol = this.input.mol.clone();\n        let a1 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang1), cy + Molecule.IDEALBOND * Math.sin(ang1));\n        let a2 = mol.addAtom('C', cx + Molecule.IDEALBOND * Math.cos(ang2), cy + Molecule.IDEALBOND * Math.sin(ang2));\n        mol.addBond(atom, a1, 1);\n        mol.addBond(atom, a2, 1);\n        this.output.mol = mol;\n    }\n    execBondInsert() {\n        let mol = this.input.mol, bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot insert into a ring-bond.';\n            return;\n        }\n        let [alink, _, side] = this.mobileSide(bond);\n        mol = mol.clone();\n        mol.setBondOrder(bond, 1);\n        let fragmask = Vec.booleanArray(false, mol.numAtoms);\n        for (let a of side)\n            fragmask[a - 1] = true;\n        let frag = MolUtil.subgraphWithAttachments(mol, fragmask);\n        for (let n = mol.numAtoms; n >= 1; n--)\n            if (fragmask[n - 1] && n != alink) {\n                mol.deleteAtomAndBonds(n);\n                if (n < alink)\n                    alink -= 1;\n            }\n        mol.setAtomElement(alink, 'C');\n        mol.setAtomCharge(alink, 0);\n        mol.setAtomUnpaired(alink, 0);\n        mol.setAtomHExplicit(alink, Molecule.HEXPLICIT_UNKNOWN);\n        mol.setAtomIsotope(alink, Molecule.ISOTOPE_NATURAL);\n        mol.setAtomMapNum(alink, 0);\n        mol.setAtomExtra(alink, []);\n        mol.setAtomTransient(alink, []);\n        let fusion = new TemplateFusion(mol, frag, '');\n        fusion.withGuideOnly = true;\n        fusion.permuteAtom(alink);\n        if (fusion.perms.length == 0) {\n            this.errmsg = 'Unable to insert.';\n            return;\n        }\n        this.output.mol = fusion.perms[0].mol;\n        this.zapSubject();\n        this.output.currentAtom = alink;\n    }\n    execJoin() {\n        if (!this.requireSubject())\n            return;\n        this.output.mol = SketchUtil.joinOverlappingAtoms(this.input.mol, this.subjectMask);\n        if (this.output.mol == null) {\n            this.errmsg = 'Subject contains no overlapping atoms.';\n        }\n        else {\n            this.zapSubject();\n        }\n    }\n    execNudge(dir, extent) {\n        if (!this.requireSubject())\n            return;\n        let dx = extent * (dir == 'left' ? -1 : dir == 'right' ? 1 : 0);\n        let dy = extent * (dir == 'down' ? -1 : dir == 'up' ? 1 : 0);\n        this.output.mol = this.input.mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]), y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], x + dx, y + dy);\n        }\n    }\n    execNudgeFar(dir) {\n        if (!this.requireSubject())\n            return;\n        if (this.subjectLength == this.input.mol.numAtoms) {\n            this.errmsg = 'Cannot apply to entire molecule.';\n            return;\n        }\n        let dx = dir == 'left' ? -1 : dir == 'right' ? 1 : 0;\n        let dy = dir == 'down' ? -1 : dir == 'up' ? 1 : 0;\n        this.output.mol = SketchUtil.moveToEdge(this.input.mol, this.subjectMask, dx, dy);\n        if (this.output.mol == null) {\n            this.execNudge(dir, 1);\n        }\n    }\n    execFlip(axis) {\n        if (this.input.mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let isVertical = axis == 'ver';\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask, mol = this.input.mol;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                if (!isVertical)\n                    this.output.mol.setAtomX(n, 2 * cx - this.output.mol.atomX(n));\n                else\n                    this.output.mol.setAtomY(n, 2 * cy - this.output.mol.atomY(n));\n            }\n    }\n    execScale(mag) {\n        const { mol, currentAtom, currentBond } = this.input;\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        if (currentAtom > 0) {\n            let connAtoms = [];\n            for (let a of this.subjectIndex)\n                if (a != currentAtom && mol.findBond(currentAtom, a) > 0)\n                    connAtoms.push(a);\n            let g = Graph.fromMolecule(mol);\n            g.isolateNode(currentAtom - 1);\n            let anything = false;\n            for (let cc of g.calculateComponentGroups()) {\n                Vec.addTo(cc, 1);\n                let sz = 0, dx = 0, dy = 0;\n                for (let a of cc)\n                    if (connAtoms.includes(a)) {\n                        dx += mol.atomX(a) - mol.atomX(currentAtom);\n                        dy += mol.atomY(a) - mol.atomY(currentAtom);\n                        sz++;\n                    }\n                if (sz == 0)\n                    continue;\n                [dx, dy] = [dx / sz, dy / sz];\n                if (Math.abs(dx) < 0.1 && Math.abs(dy) < 0.1)\n                    continue;\n                [dx, dy] = [dx * (mag - 1), dy * (mag - 1)];\n                if (!this.output.mol)\n                    this.output.mol = mol.clone();\n                for (let a of cc)\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                anything = true;\n            }\n            if (anything)\n                return;\n        }\n        let b;\n        if (this.subjectLength == 2 && (b = mol.findBond(this.subjectIndex[0], this.subjectIndex[1])) > 0 && !mol.bondInRing(b)) {\n            let a1 = this.subjectIndex[0], a2 = this.subjectIndex[1];\n            let ccmol = mol.clone();\n            ccmol.deleteBond(b);\n            let idx1 = [], idx2 = [];\n            for (let n = 1; n <= ccmol.numAtoms; n++) {\n                if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a1))\n                    idx1.push(n);\n                else if (ccmol.atomConnComp(n) == ccmol.atomConnComp(a2))\n                    idx2.push(n);\n            }\n            let dx = (mol.atomX(a2) - mol.atomX(a1)) * (mag - 1);\n            let dy = (mol.atomY(a2) - mol.atomY(a1)) * (mag - 1);\n            if (idx1.length == idx2.length) {\n                dx *= 0.5;\n                dy *= 0.5;\n            }\n            this.output.mol = mol.clone();\n            if (idx1.length <= idx2.length)\n                for (let n = 0; n < idx1.length; n++) {\n                    let a = idx1[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) - dx, this.output.mol.atomY(a) - dy);\n                }\n            if (idx2.length <= idx1.length)\n                for (let n = 0; n < idx2.length; n++) {\n                    let a = idx2[n];\n                    this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + dx, this.output.mol.atomY(a) + dy);\n                }\n            return;\n        }\n        let cx = 0, cy = 0;\n        if (currentAtom > 0) {\n            cx = mol.atomX(currentAtom);\n            cy = mol.atomY(currentAtom);\n        }\n        else if (currentBond > 0) {\n            let bfr = mol.bondFrom(currentBond), bto = mol.bondTo(currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        }\n        else {\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < this.subjectLength; n++) {\n            let x = this.output.mol.atomX(this.subjectIndex[n]);\n            let y = this.output.mol.atomY(this.subjectIndex[n]);\n            this.output.mol.setAtomPos(this.subjectIndex[n], (x - cx) * mag + cx, (y - cy) * mag + cy);\n        }\n    }\n    execRotate(theta, centreX, centreY) {\n        theta *= DEGRAD;\n        let mol = this.input.mol;\n        if (centreX != null && centreY != null) {\n            this.output.mol = mol.clone();\n            let mask = this.subjectLength == 0 ? Vec.booleanArray(true, mol.numAtoms) : this.subjectMask;\n            CoordUtil.rotateAtoms(this.output.mol, mask, centreX, centreY, theta);\n            return;\n        }\n        if (mol.numAtoms < 2) {\n            this.errmsg = 'At least 2 atoms are required.';\n            return;\n        }\n        let cx = 0, cy = 0;\n        let mask = this.subjectMask;\n        if (this.input.currentAtom > 0) {\n            cx = mol.atomX(this.input.currentAtom);\n            cy = mol.atomY(this.input.currentAtom);\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(this.input.currentAtom);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n            if (Vec.maskCount(mask) == 1 && mask[this.input.currentAtom - 1]) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n        }\n        else if (this.input.currentBond > 0) {\n            let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n            cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto));\n            cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n            if (!this.hasSelected) {\n                mask = Vec.booleanArray(false, mol.numAtoms);\n                let cc = mol.atomConnComp(bfr);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    mask[n - 1] = mol.atomConnComp(n) == cc;\n            }\n        }\n        else if (this.subjectLength == 0) {\n            let box = mol.boundary();\n            cx = 0.5 * (box.minX() + box.maxX());\n            cy = 0.5 * (box.minY() + box.maxY());\n            mask = Vec.booleanArray(true, mol.numAtoms);\n        }\n        else {\n            if (this.subjectLength == 1) {\n                this.errmsg = 'Component is isolated.';\n                return;\n            }\n            for (let n = 0; n < this.subjectLength; n++) {\n                cx += mol.atomX(this.subjectIndex[n]);\n                cy += mol.atomY(this.subjectIndex[n]);\n            }\n            let invSz = 1.0 / this.subjectLength;\n            cx *= invSz;\n            cy *= invSz;\n        }\n        this.output.mol = mol.clone();\n        CoordUtil.rotateAtoms(this.output.mol, mask, cx, cy, theta);\n    }\n    execBondDist(dist) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1), curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let sel1 = this.isSelected(atom1), sel2 = this.isSelected(atom2);\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            if (sel1 && !sel2) {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - ox, mol.atomY(atom1) - oy);\n            }\n            else if (sel2 && !sel1) {\n                mol.setAtomPos(atom2, mol.atomX(atom2) + ox, mol.atomY(atom2) + oy);\n            }\n            else {\n                mol.setAtomPos(atom1, mol.atomX(atom1) - 0.5 * ox, mol.atomY(atom1) - 0.5 * oy);\n                mol.setAtomPos(atom2, mol.atomX(atom2) + 0.5 * ox, mol.atomY(atom2) + 0.5 * oy);\n            }\n        }\n        else {\n            let [atom1, atom2, side] = this.mobileSide(bond);\n            let dx = mol.atomX(atom2) - mol.atomX(atom1), dy = mol.atomY(atom2) - mol.atomY(atom1);\n            let curDist = norm_xy(dx, dy), inv = 1.0 / curDist;\n            let ox = dx * (dist - curDist) * inv, oy = dy * (dist - curDist) * inv;\n            for (let a of side)\n                mol.setAtomPos(a, mol.atomX(a) - ox, mol.atomY(a) - oy);\n        }\n        this.output.mol = mol;\n    }\n    execAlignAngle(angle) {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        if (mol.bondInRing(bond)) {\n            this.errmsg = 'Cannot align a ring-bond.';\n            return;\n        }\n        let [atom1, atom2, side] = this.mobileSide(bond);\n        let cx = mol.atomX(atom2), cy = mol.atomY(atom2);\n        let delta = angle - Math.atan2(mol.atomY(atom1) - cy, mol.atomX(atom1) - cx);\n        let cosTheta = Math.cos(delta), sinTheta = Math.sin(delta);\n        for (let a of side) {\n            let x = mol.atomX(a) - cx, y = mol.atomY(a) - cy;\n            mol.setAtomPos(a, cx + x * cosTheta - y * sinTheta, cy + x * sinTheta + y * cosTheta);\n        }\n        this.output.mol = mol;\n    }\n    execAlignRegular() {\n        let bond = this.input.currentBond;\n        if (bond == 0) {\n            this.errmsg = 'There must be a current bond.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let bfr = mol.bondFrom(this.input.currentBond), bto = mol.bondTo(this.input.currentBond);\n        let theta = Math.atan2(mol.atomY(bto) - mol.atomY(bfr), mol.atomX(bto) - mol.atomX(bfr)) * RADDEG;\n        if (theta < 0)\n            theta += 360;\n        let snap = Math.round(theta / 30) * 30;\n        if (Math.abs(theta - snap) < 0.001)\n            return;\n        let delta = (snap - theta) * DEGRAD;\n        let mask = this.input.selectedMask;\n        if (Vec.allFalse(mask)) {\n            let cc = mol.atomConnComp(bfr);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                mask[n - 1] = cc == mol.atomConnComp(n);\n        }\n        let cx = 0.5 * (mol.atomX(bfr) + mol.atomX(bto)), cy = 0.5 * (mol.atomY(bfr) + mol.atomY(bto));\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mask[n - 1]) {\n                let dx = mol.atomX(n) - cx, dy = mol.atomY(n) - cy;\n                let th = Math.atan2(dy, dx) + delta, dist = norm_xy(dx, dy);\n                mol.setAtomPos(n, cx + dist * Math.cos(th), cy + dist * Math.sin(th));\n            }\n        this.output.mol = mol;\n    }\n    execAdjustTorsion(angle) {\n        if (this.input.currentAtom == 0 || Vec.maskCount(this.input.selectedMask) != 3) {\n            this.errmsg = 'Must be 3 selected atoms and a current atom.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        let a1 = this.input.currentAtom;\n        let atoms = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (n != a1 && this.input.selectedMask[n - 1])\n                atoms.push(n);\n        let a2 = mol.findBond(a1, atoms[0]) > 0 ? atoms.shift() :\n            mol.findBond(a1, atoms[1]) > 0 ? atoms.pop() : 0;\n        if (a2 == 0 || mol.findBond(a2, atoms[0]) == 0) {\n            this.errmsg = 'Selected atoms must be consecutive.';\n            return;\n        }\n        let a3 = atoms[0];\n        let cx = mol.atomX(a2), cy = mol.atomY(a2);\n        let theta1 = Math.atan2(mol.atomY(a1) - cy, mol.atomX(a1) - cx);\n        let theta3 = Math.atan2(mol.atomY(a3) - cy, mol.atomX(a3) - cx);\n        let delta = angle - angleDiff(theta3, theta1);\n        let group1 = [], group3 = [];\n        if (mol.atomRingBlock(a1) == 0 || mol.atomRingBlock(a1) != mol.atomRingBlock(a3)) {\n            let g = Graph.fromMolecule(mol);\n            g.removeEdge(a2 - 1, a1 - 1);\n            g.removeEdge(a2 - 1, a3 - 1);\n            let cc = g.calculateComponents();\n            for (let n = 0; n < g.numNodes; n++) {\n                if (cc[n] == cc[a1 - 1])\n                    group1.push(n + 1);\n                else if (cc[n] == cc[a3 - 1])\n                    group3.push(n + 1);\n            }\n        }\n        if (mol.atomRingBlock(a1) > 0 && mol.atomRingBlock(a1) == mol.atomRingBlock(a2))\n            group1 = [a1];\n        if (mol.atomRingBlock(a3) > 0 && mol.atomRingBlock(a3) == mol.atomRingBlock(a2))\n            group3 = [a3];\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group1, -1), mol.numAtoms), cx, cy, -0.5 * delta);\n        CoordUtil.rotateAtoms(mol, Vec.idxMask(Vec.add(group3, -1), mol.numAtoms), cx, cy, 0.5 * delta);\n        this.output.mol = mol;\n    }\n    execMove(refAtom, deltaX, deltaY) {\n        let subj = this.subjectIndex;\n        if (Vec.len(subj) == 0) {\n            if (refAtom == 0)\n                return;\n            subj = [refAtom];\n        }\n        this.output.mol = this.input.mol.clone();\n        for (let a of subj)\n            this.output.mol.setAtomPos(a, this.output.mol.atomX(a) + deltaX, this.output.mol.atomY(a) + deltaY);\n    }\n    execRing(ringX, ringY, aromatic) {\n        let rsz = ringX.length;\n        let atoms = Vec.numberArray(0, rsz), bonds = Vec.numberArray(0, rsz);\n        let outmol = this.input.mol.clone();\n        for (let n = 0; n < rsz; n++) {\n            atoms[n] = CoordUtil.atomAtPoint(outmol, ringX[n], ringY[n]);\n            if (atoms[n] == 0)\n                atoms[n] = outmol.addAtom('C', ringX[n], ringY[n]);\n        }\n        for (let n = 0; n < rsz; n++) {\n            let nn = n < rsz - 1 ? n + 1 : 0;\n            bonds[n] = outmol.findBond(atoms[n], atoms[nn]);\n            if (bonds[n] == 0)\n                bonds[n] = outmol.addBond(atoms[n], atoms[nn], 1);\n        }\n        if (aromatic) {\n            let valence = Vec.numberArray(0, rsz);\n            let pi = Vec.booleanArray(false, rsz);\n            for (let n = 0; n < rsz; n++) {\n                valence[n] = Chemistry.ELEMENT_BONDING[outmol.atomicNumber(atoms[n])] + outmol.atomCharge(atoms[n]);\n                if (outmol.atomHExplicit(atoms[n]) != Molecule.HEXPLICIT_UNKNOWN)\n                    valence[n] -= outmol.atomHExplicit(atoms[n]);\n                for (let b of outmol.atomAdjBonds(atoms[n]))\n                    valence[n] -= outmol.bondOrder(b);\n                if (outmol.bondOrder(bonds[n]) >= 2) {\n                    pi[n] = true;\n                    if (n < rsz - 1) {\n                        pi[n] = true;\n                        n++;\n                    }\n                    else\n                        pi[0] = true;\n                }\n            }\n            for (let n = 0; n < rsz; n++) {\n                let nn = n < rsz - 1 ? n + 1 : 0;\n                if (pi[n] || pi[nn])\n                    continue;\n                if (valence[n] > 0 && valence[nn] > 0) {\n                    outmol.setBondOrder(bonds[n], 2);\n                    pi[n] = true;\n                    pi[nn] = true;\n                    valence[n]--;\n                    valence[nn]--;\n                }\n            }\n        }\n        this.output.mol = outmol;\n    }\n    execTemplateFusion(frag) {\n        let mol = this.input.mol;\n        let fusion = new TemplateFusion(mol, frag, '');\n        if (this.subjectLength == 0)\n            fusion.permuteNone();\n        else if (this.subjectLength == 1)\n            fusion.permuteAtom(this.subjectIndex[0]);\n        else if (this.subjectLength == 2 && mol.findBond(this.subjectIndex[0], this.subjectIndex[1]) > 0)\n            fusion.permuteBond(this.subjectIndex[0], this.subjectIndex[1]);\n        else\n            fusion.permuteMulti(this.subjectIndex);\n        let permutations = [];\n        for (let perm of fusion.perms) {\n            let obj = {};\n            obj['mol'] = perm.mol.toString();\n            obj['display'] = perm.display.toString();\n            obj['molidx'] = perm.molidx;\n            obj['temidx'] = perm.temidx;\n            obj['srcidx'] = perm.srcidx;\n            permutations.push(obj);\n        }\n        this.output.permutations = permutations;\n    }\n    execAbbrevTempl() {\n    }\n    execAbbrevGroup() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), '?');\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        if (AbbrevContainer.main) {\n            AbbrevContainer.main.submitMolecule(mol, true);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomElement(n) == '?' && MolUtil.hasAbbrev(mol, n))\n                    AbbrevContainer.main.substituteAbbrevName(mol, n);\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevFormula() {\n        if (!this.requireSubject())\n            return;\n        if (!this.checkAbbreviationReady())\n            return;\n        let fixed = this.input.mol.clone();\n        for (let n = 1; n <= fixed.numAtoms; n++)\n            fixed.setAtomHExplicit(n, fixed.atomHydrogens(n));\n        let abv = MolUtil.subgraphMask(fixed, this.subjectMask);\n        let formula = MolUtil.molecularFormula(abv, true);\n        let mol = MolUtil.convertToAbbrev(this.input.mol, Vec.notMask(this.subjectMask), formula);\n        if (mol == null) {\n            this.errmsg = 'Inline abbreviations must be terminal with exactly one attachment point.';\n            return;\n        }\n        this.output.mol = mol;\n        this.zapSubject();\n        this.output.currentAtom = mol.numAtoms;\n    }\n    execAbbrevClear() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to clear.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.clearAbbrev(mol, n);\n        this.output.mol = mol;\n    }\n    execAbbrevExpand() {\n        let idx = [];\n        for (let n of this.subjectIndex)\n            if (MolUtil.hasAbbrev(this.input.mol, n))\n                idx.push(n);\n        if (idx.length == 0) {\n            this.errmsg = 'No abbreviations to expand.';\n            return;\n        }\n        let mol = this.input.mol.clone();\n        for (let n of idx)\n            MolUtil.expandOneAbbrev(mol, n, true);\n        this.output.mol = mol;\n        this.zapSubject();\n    }\n    execBondArtifact(activity) {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        let artif = new BondArtifact(this.input.mol.clone());\n        let subject = this.subjectIndex.slice(0), curAtom = this.input.currentAtom;\n        if (curAtom > 0 && subject.indexOf(curAtom) < 0)\n            subject.push(curAtom);\n        if (activity == ActivityType.BondArtifactPath) {\n            if (!artif.createPath(subject)) {\n                this.errmsg = 'Path artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactRing) {\n            if (!artif.createRing(subject)) {\n                this.errmsg = 'Ring artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactArene) {\n            if (!artif.createArene(subject)) {\n                this.errmsg = 'Arene artifact not suitable.';\n                return;\n            }\n        }\n        else if (activity == ActivityType.BondArtifactClear) {\n            if (!artif.removeArtifact(subject)) {\n                if (this.removePolymerBlock(subject))\n                    return;\n                this.errmsg = 'No artifact removed.';\n                return;\n            }\n        }\n        artif.rewriteMolecule();\n        this.output.mol = artif.mol;\n    }\n    execPolymerBlock() {\n        if (!this.requireAtoms() || !this.requireSubject())\n            return;\n        if (this.owner)\n            this.owner.performPolymerBlock(this.subjectIndex);\n    }\n    execAddHydrogens() {\n        let mol = this.input.mol.clone();\n        if (!this.requireAtoms())\n            return;\n        let atoms = this.subjectIndex;\n        if (atoms.length == 0)\n            atoms = Vec.identity1(mol.numAtoms);\n        for (let a of atoms) {\n            let hc = mol.atomHydrogens(a);\n            if (hc > 0)\n                SketchUtil.placeAdditionalHydrogens(mol, a, hc);\n        }\n        if (mol.numAtoms == this.input.mol.numAtoms) {\n            this.errmsg = 'Nothing needs to be added.';\n            return;\n        }\n        this.output.mol = mol;\n    }\n    execRemoveHydrogens() {\n        if (!this.requireAtoms())\n            return;\n        let mol = this.input.mol;\n        let selmask = this.subjectMask;\n        if (Vec.allFalse(selmask))\n            selmask = Vec.booleanArray(true, mol.numAtoms);\n        let keepmask = Vec.booleanArray(true, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.boringHydrogen(mol, n)) {\n                let nbr = mol.atomAdjList(n)[0];\n                if (selmask[n - 1] || selmask[nbr - 1])\n                    keepmask[n - 1] = false;\n            }\n        if (Vec.allTrue(keepmask)) {\n            this.errmsg = 'Nothing to be deleted.';\n            return;\n        }\n        this.output.mol = MolUtil.subgraphMask(mol, keepmask);\n    }\n    execQueryClear() {\n        if (!this.requireSubject())\n            return;\n        let mol = this.input.mol.clone();\n        const { currentBond } = this.input;\n        if (currentBond > 0 && QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n            QueryUtil.deleteQueryBondAll(mol, currentBond);\n            this.output.mol = mol;\n            return;\n        }\n        let anything = false;\n        for (let a of this.subjectIndex)\n            if (QueryUtil.hasAnyQueryAtom(mol, a)) {\n                QueryUtil.deleteQueryAtomAll(mol, a);\n                anything = true;\n            }\n        for (let b = 1; b <= mol.numBonds; b++)\n            if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1] && QueryUtil.hasAnyQueryBond(mol, b)) {\n                QueryUtil.deleteQueryBondAll(mol, b);\n                anything = true;\n            }\n        if (anything)\n            this.output.mol = mol;\n        else\n            this.errmsg = 'No query terms to clear.';\n    }\n    execQueryCopy() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        if (currentBond > 0) {\n            if (!QueryUtil.hasAnyQueryBond(mol, currentBond)) {\n                this.errmsg = 'Bond has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.addAtom('*', Molecule.IDEALBOND, 0);\n            qmol.addBond(1, 2, 1);\n            qmol.setBondExtra(1, mol.bondExtra(currentBond).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else if (this.subjectLength == 1) {\n            let atom = this.subjectIndex[0];\n            if (!QueryUtil.hasAnyQueryAtom(mol, atom)) {\n                this.errmsg = 'Atom has no query terms.';\n                return;\n            }\n            let qmol = new Molecule();\n            qmol.addAtom('*', 0, 0);\n            qmol.setAtomExtra(1, mol.atomExtra(atom).filter((xtra) => xtra.startsWith('q')));\n            this.toClipboard = qmol.toString();\n        }\n        else\n            this.errmsg = 'Subject has to be a single atom or bond.';\n    }\n    execQueryPaste() {\n        if (!this.requireSubject())\n            return;\n        let qmol = this.param.qmol;\n        if (!qmol) { }\n        else if (qmol.numAtoms == 1 && qmol.atomElement(1) == '*' && QueryUtil.hasAnyQueryAtom(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.atomExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let a of this.subjectIndex) {\n                let aterms = mol.atomExtra(a).filter((xtra) => xtra.startsWith('q'));\n                mol.setAtomExtra(a, [...aterms, ...qterms]);\n            }\n            return;\n        }\n        else if (qmol.numAtoms == 2 && qmol.atomElement(1) == '*' && qmol.atomElement(2) == '*' &&\n            qmol.numBonds == 1 && QueryUtil.hasAnyQueryBond(qmol, 1)) {\n            let mol = this.output.mol = this.input.mol.clone();\n            let qterms = qmol.bondExtra(1).filter((xtra) => xtra.startsWith('q'));\n            for (let b = 1; b <= mol.numBonds; b++)\n                if (this.subjectMask[mol.bondFrom(b) - 1] && this.subjectMask[mol.bondTo(b) - 1]) {\n                    let bterms = mol.bondExtra(b).filter((xtra) => xtra.startsWith('q'));\n                    mol.setBondExtra(b, [...bterms, ...qterms]);\n                }\n            return;\n        }\n        this.errmsg = 'Unable to paste query terms.';\n    }\n    execQuerySetAtom() {\n    }\n    execQuerySetBond() {\n    }\n    execQueryBondAny() {\n        if (!this.requireSubject())\n            return;\n        const { mol, currentBond } = this.input;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        if (bonds.length == 0) {\n            this.errmsg = 'Must select at least one bond.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let b of bonds) {\n            this.output.mol.setBondOrder(b, 0);\n            QueryUtil.setQueryBondOrders(this.output.mol, b, [-1, 0, 1, 2, 3, 4]);\n        }\n    }\n    execSproutDirection(deltaX, deltaY) {\n        var _a, _b;\n        if (!this.requireCurrent())\n            return;\n        if (deltaX == 0 && deltaY == 0)\n            return;\n        const { mol, currentAtom } = this.input;\n        let angleOptions;\n        if (mol.atomAdjCount(currentAtom) == 0)\n            angleOptions = Vec.identity0(12).map((n) => n * TWOPI / 12);\n        else\n            angleOptions = (_a = SketchUtil.primeDirections(mol, currentAtom)) !== null && _a !== void 0 ? _a : SketchUtil.exitVectors(mol, currentAtom);\n        if (angleOptions.length == 0)\n            return;\n        let theta = Math.atan2(deltaY, deltaX);\n        let idx = Vec.idxMin(angleOptions.map((look) => Math.abs(angleDiff(theta, look)) + 0.01 * Math.abs(Math.sin(look))));\n        let px = mol.atomX(currentAtom) + Molecule.IDEALBOND * Math.cos(angleOptions[idx]);\n        let py = mol.atomY(currentAtom) + Molecule.IDEALBOND * Math.sin(angleOptions[idx]);\n        this.output.mol = mol.clone();\n        let newAtom = this.output.mol.addAtom('C', px, py);\n        this.output.mol.addBond(currentAtom, newAtom, 1);\n        this.output.mol = (_b = SketchUtil.joinOverlappingAtoms(this.output.mol, Vec.booleanArray(true, this.output.mol.numAtoms))) !== null && _b !== void 0 ? _b : this.output.mol;\n        for (let n = 1; n <= this.output.mol.numAtoms; n++) {\n            let dx = this.output.mol.atomX(n) - px, dy = this.output.mol.atomY(n) - py;\n            if (norm2_xy(dx, dy) < CoordUtil.OVERLAP_THRESHOLD_SQ) {\n                this.output.currentAtom = n;\n                break;\n            }\n        }\n    }\n    requireSubject() {\n        if (this.subjectLength == 0)\n            this.errmsg = 'Subject required: current atom/bond or selected atoms.';\n        return this.subjectLength > 0;\n    }\n    requireAtoms() {\n        if (this.input.mol.numAtoms == 0)\n            this.errmsg = 'There are no atoms.';\n        return this.input.mol.numAtoms > 0;\n    }\n    requireCurrent() {\n        if (this.input.currentAtom == 0 && this.input.currentBond == 0) {\n            this.errmsg = 'There must be a current atom or bond.';\n            return false;\n        }\n        return true;\n    }\n    requireSelected() {\n        if (!this.hasSelected)\n            this.errmsg = 'No atoms are selected.';\n        return this.hasSelected;\n    }\n    pickSelectedGroup(groups, dir) {\n        if (this.subjectLength == 0)\n            return 0;\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            let all = true;\n            for (let j = 0; j < g.length; j++)\n                if (!this.subjectMask[g[j] - 1]) {\n                    all = false;\n                    break;\n                }\n            if (all) {\n                i += dir;\n                return i < 0 ? i + groups.length : i >= groups.length ? i - groups.length : i;\n            }\n        }\n        for (let i = 0; i < groups.length; i++) {\n            let g = groups[i];\n            for (let j = 0; j < g.length; j++)\n                if (this.subjectMask[g[j] - 1])\n                    return i;\n        }\n        return 0;\n    }\n    zapSubject() {\n        this.output.currentAtom = 0;\n        this.output.currentBond = 0;\n        this.output.selectedMask = Vec.booleanArray(false, this.input.mol.numAtoms);\n    }\n    performBondNew(atom, order, type) {\n        let mol = this.input.mol;\n        let ang = SketchUtil.calculateNewBondAngles(mol, atom, order);\n        if (ang.length == 0)\n            ang = SketchUtil.exitVectors(mol, atom);\n        if (ang.length == 0) {\n            this.errmsg = 'Could not find a suitable geometry for a new substituent.';\n            return;\n        }\n        let bx = [], by = [], bscore = [];\n        for (let n = 0; n < ang.length; n++) {\n            let x = mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(ang[n]);\n            let y = mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(ang[n]);\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(atom)] <= 2)\n                score += Math.abs(angleNorm(ang[n])) * 1E-8;\n            else\n                score += Math.abs(angleDiff(0.5 * Math.PI, ang[n])) * 1E-8;\n            bx.push(x);\n            by.push(y);\n            bscore.push(score);\n        }\n        let idx = Vec.idxSort(bscore);\n        this.output.mol = mol.clone();\n        let anum = CoordUtil.atomAtPoint(this.output.mol, bx[idx[0]], by[idx[0]]);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', bx[idx[0]], by[idx[0]]);\n        MolUtil.addBond(this.output.mol, atom, anum, order, type);\n        if (idx.length >= 2) {\n            this.output.altmol = mol.clone();\n            anum = CoordUtil.atomAtPoint(this.output.altmol, bx[idx[1]], by[idx[1]]);\n            if (anum == 0)\n                anum = this.output.altmol.addAtom('C', bx[idx[1]], by[idx[1]]);\n            MolUtil.addBond(this.output.altmol, atom, anum, order, type);\n        }\n    }\n    performBondChange(order, type) {\n        let mol = this.input.mol;\n        let bonds = [];\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (this.subjectMask[mol.bondFrom(n) - 1] && this.subjectMask[mol.bondTo(n) - 1])\n                bonds.push(n);\n        let switchType = type == Molecule.BONDTYPE_DECLINED || type == Molecule.BONDTYPE_INCLINED;\n        let stereoType = switchType || type == Molecule.BONDTYPE_UNKNOWN;\n        let anyChange = switchType;\n        for (let n = 0; n < bonds.length && !anyChange; n++) {\n            let b = bonds[n];\n            if (mol.bondOrder(b) != order && type == Molecule.BONDTYPE_NORMAL)\n                anyChange = true;\n            else if (mol.bondType(b) != type)\n                anyChange = true;\n        }\n        if (!anyChange) {\n            this.errmsg = 'No bond changes made.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        for (let n = 0; n < bonds.length; n++) {\n            let b = bonds[n], bfr = this.output.mol.bondFrom(b), bto = this.output.mol.bondTo(b);\n            if (switchType && this.output.mol.bondType(b) == type) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n            else if (this.output.mol.bondOrder(b) != order || this.output.mol.bondType(b) != type) {\n                if (!stereoType && order != this.output.mol.bondOrder(b))\n                    this.output.mol.setBondOrder(b, order);\n                else\n                    this.output.mol.setBondType(b, type);\n            }\n            else if (switchType) {\n                this.output.mol.setBondFromTo(b, bto, bfr);\n            }\n        }\n    }\n    performBondGeomAtom(geom, atom) {\n        let mol = this.input.mol;\n        let adj = mol.atomAdjList(atom);\n        let asz = adj.length, gsz = SketchUtil.GEOM_ANGLES[geom].length;\n        if (asz > gsz) {\n            this.errmsg = 'The current atom has more bonds than does the selected geometry.';\n            return;\n        }\n        if (asz == 0) {\n            this.performBondNew(atom, 1, Molecule.BONDTYPE_NORMAL);\n            return;\n        }\n        if (asz == gsz) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        let ang = CoordUtil.atomBondAngles(mol, atom);\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.output.mol = SketchUtil.refitAtomGeometry(mol, atom, geom);\n            if (this.output.mol == null)\n                this.errmsg = 'Could not re-fit the atom geometry.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        let theta = SketchUtil.pickNewAtomDirection(mol, atom, newang);\n        let x = this.output.mol.atomX(atom) + Molecule.IDEALBOND * Math.cos(theta);\n        let y = this.output.mol.atomY(atom) + Molecule.IDEALBOND * Math.sin(theta);\n        let anum = CoordUtil.atomAtPoint(this.output.mol, x, y);\n        if (anum == 0)\n            anum = this.output.mol.addAtom('C', x, y);\n        MolUtil.addBond(this.output.mol, atom, anum, 1);\n    }\n    performBondGeomBond(geom, bond) {\n        let mol = this.input.mol;\n        let bfr = mol.bondFrom(bond), bto = mol.bondTo(bond);\n        let ac1 = mol.atomAdjCount(bfr), ac2 = mol.atomAdjCount(bto);\n        if (ac1 > 1 && ac2 == 1) { }\n        else if (ac1 == 1 && ac2 > 1) {\n            let t = ac1;\n            ac1 = ac2;\n            ac2 = t;\n        }\n        else {\n            this.errmsg = 'One end of the bond must be terminal.';\n            return;\n        }\n        let adj = mol.atomAdjList(bfr);\n        let x1 = mol.atomX(bfr), y1 = mol.atomY(bfr);\n        let x2 = mol.atomX(bto), y2 = mol.atomY(bto);\n        let ang = [];\n        for (let n = 0, p = 0; n < adj.length; n++)\n            if (adj[n] != bto) {\n                ang.push(Math.atan2(mol.atomY(adj[n]) - y1, mol.atomX(adj[n]) - x1));\n            }\n        let newang = SketchUtil.mapAngleSubstituent(geom, ang);\n        if (newang == null) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        let bestAng = TWOPI + 1, bestX = 0, bestY = 0;\n        let curth = Math.atan2(y2 - y1, x2 - x1), r = norm_xy(x2 - x1, y2 - y1);\n        for (let n = 0; n < newang.length; n++) {\n            let th = angleDiff(newang[n], curth);\n            if (th < 0)\n                th += TWOPI;\n            if (n > 0 && th > bestAng)\n                continue;\n            let x = x1 + r * Math.cos(th + curth);\n            let y = y1 + r * Math.sin(th + curth);\n            if (CoordUtil.atomAtPoint(mol, x, y) > 0)\n                continue;\n            bestAng = th;\n            bestX = x;\n            bestY = y;\n        }\n        if (bestAng > TWOPI) {\n            this.errmsg = 'No alternative geometries identified.';\n            return;\n        }\n        this.output.mol = mol.clone();\n        this.output.mol.setAtomPos(bto, bestX, bestY);\n    }\n    checkAbbreviationReady() {\n        let junction = 0;\n        let mol = this.input.mol, subjmask = this.subjectMask;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let b1 = mol.bondFrom(n), b2 = mol.bondTo(n);\n            let atom = 0;\n            if ((subjmask[b1 - 1] && !subjmask[b2 - 1] && MolUtil.hasAbbrev(mol, b1)) ||\n                (subjmask[b2 - 1] && !subjmask[b1 - 1] && MolUtil.hasAbbrev(mol, b2))) {\n                this.errmsg = 'Already an abbreviation.';\n                return false;\n            }\n            if (subjmask[b1 - 1] && !subjmask[b2 - 1])\n                atom = b1;\n            else if (subjmask[b2 - 1] && !subjmask[b1 - 1])\n                atom = b2;\n            if (atom == 0 || atom == junction) { }\n            else if (junction == 0)\n                junction = atom;\n            else {\n                this.errmsg = 'The selected group must be terminal.';\n                return false;\n            }\n        }\n        return true;\n    }\n    mobileSide(bond, disqualTerminal = false) {\n        let { mol } = this.input;\n        let atom1 = mol.bondFrom(bond), atom2 = mol.bondTo(bond);\n        let g = Graph.fromMolecule(mol);\n        g.removeEdge(atom1 - 1, atom2 - 1);\n        let side1 = [], side2 = [];\n        for (let grp of g.calculateComponentGroups()) {\n            if (grp.includes(atom1 - 1))\n                side1 = Vec.add(grp, 1);\n            if (grp.includes(atom2 - 1))\n                side2 = Vec.add(grp, 1);\n        }\n        let weight1 = side1.length * (mol.atomRingBlock(atom1) > 0 ? 2 : 1);\n        let weight2 = side2.length * (mol.atomRingBlock(atom2) > 0 ? 2 : 1);\n        let sel1 = false, sel2 = false;\n        for (let a of side1)\n            if (this.isSelected(a)) {\n                sel1 = true;\n                break;\n            }\n        for (let a of side2)\n            if (this.isSelected(a)) {\n                sel2 = true;\n                break;\n            }\n        if (disqualTerminal && mol.atomAdjCount(atom1) == 1)\n            return [atom2, atom1, side2];\n        else if (disqualTerminal && mol.atomAdjCount(atom2) == 1)\n            return [atom1, atom2, side1];\n        else if (sel1 && !sel2) { }\n        else if ((sel2 && !sel1) || weight2 < weight1)\n            return [atom2, atom1, side2];\n        return [atom1, atom2, side1];\n    }\n    isSelected(atom) {\n        let mask = this.input.selectedMask;\n        return mask ? mask[atom - 1] : false;\n    }\n    removePolymerBlock(atoms) {\n        let polymer = new PolymerBlock(this.input.mol.clone());\n        for (let id of polymer.getIDList()) {\n            let unit = polymer.getUnit(id);\n            for (let atom of atoms)\n                if (unit.atoms.includes(atom)) {\n                    polymer.removeUnit(id);\n                    polymer.rewriteMolecule();\n                    this.output.mol = polymer.mol;\n                    return true;\n                }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=MoleculeActivity.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixture} from './Mixture';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {StandardUnits, Units} from './Units';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {ActivityType, MoleculeActivity, SketchState} from 'webmolkit/sketcher/MoleculeActivity';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tMixture normalisation options: recommendations for how to make a mixture more conformant. It is up to the caller\n\tto decide what to do with this information.\n*/\n\nexport interface NormMixtureNote\n{\n\torigin:number[];\n\n\tstereoEnum?:string[]; // if defined, contains stereo-enumerated versions of current\n\n\t// units converted into concentration, if both possible & necessary\n\tconcQuantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\tconcError?:number; // optional standard error (applies to quantity when it's a scalar)\n\tconcUnits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\tconcRelation?:string;\n}\n\nenum AbsType\n{\n\tNone,\n\tMass, // reference scale: g\n\tVolume, // reference scale: L\n\tMoles, // reference scale: mol\n}\n\nexport class NormMixture\n{\n\tpublic notes:NormMixtureNote[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(private mixture:Mixture)\n\t{\n\t}\n\n\tpublic analyse():void\n\t{\n\t\tlet origins = this.mixture.getOrigins();\n\t\tlet compList = origins.map((origin) => this.mixture.getComponent(origin));\n\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tlet note:NormMixtureNote = {origin: origins[n]};\n\n\t\t\t// stereocentres get expanded out\n\t\t\tlet comp = compList[n];\n\t\t\tif (comp.molfile && Vec.isBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet mol = MoleculeStream.readUnknown(comp.molfile);\n\t\t\t\tif (!mol) continue;\n\t\t\t\tlet stereo = this.enumerateStereo(mol);\n\t\t\t\tif (Vec.notBlank(stereo)) note.stereoEnum = stereo.map((mol) => MoleculeStream.writeMDLMOL(mol));\n\t\t\t}\n\n\t\t\tthis.notes.push(note);\n\t\t}\n\n\t\tlet childIndexes:number[][] = [];\n\t\tfor (let n = 0; n < origins.length; n++)\n\t\t{\n\t\t\tchildIndexes[n] = [];\n\t\t\tlet o = origins[n];\n\t\t\tfor (let i = n + 1; i < origins.length; i++)\n\t\t\t\tif (origins[i].length == o.length + 1 && Vec.equals(o, origins[i].slice(0, o.length))) childIndexes[n].push(i);\n\t\t}\n\n\t\t// conversion of \"absolute units\" to concentrations, where possible\n\t\tlet sumType = new Array(origins.length).fill(AbsType.None);\n\t\tlet sumAmount1 = Vec.numberArray(null, origins.length);\n\t\tlet sumAmount2 = Vec.numberArray(null, origins.length);\n\t\tlet sumError = Vec.numberArray(null, origins.length);\n\t\twhile (true)\n\t\t{\n\t\t\tlet modified = false;\n\n\t\t\tfor (let n = 0; n < origins.length; n++)\n\t\t\t{\n\t\t\t\tlet comp = compList[n], note = this.notes[n];\n\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\t[sumType[n], sumAmount1[n], sumAmount2[n], sumError[n]] = this.toAbsoluteUnits(comp);\n\t\t\t\t\tif (sumType[n] != AbsType.None) modified = true;\n\t\t\t\t}\n\n\t\t\t\tif (Vec.isBlank(comp.contents)) continue;\n\n\t\t\t\t// if there's no absolute quantity presently available, see if we can add up the sub-components\n\t\t\t\tif (sumType[n] == AbsType.None)\n\t\t\t\t{\n\t\t\t\t\tlet amount = 0, childType = AbsType.None;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None || sumAmount2[i] != null ||\n\t\t\t\t\t\t\t(childType != AbsType.None && sumType[i] != childType))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildType = AbsType.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchildType = sumType[i];\n\t\t\t\t\t\tamount += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childType != AbsType.None)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[n] = childType;\n\t\t\t\t\t\tsumAmount1[n] = amount;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if current type is an absolute unit, see if all-but-one of the children have that same type\n\t\t\t\tif (sumType[n] != AbsType.None && childIndexes[n].length >= 2)\n\t\t\t\t{\n\t\t\t\t\tlet idxOne = -1, sum = 0;\n\t\t\t\t\tfor (let i of childIndexes[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sumType[i] == AbsType.None)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (idxOne >= 0) {idxOne = -1; break;} // only one allowed\n\t\t\t\t\t\t\tidxOne = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (sumType[i] != sumType[n]) {idxOne = -1; break;} // can't be defined-but-different\n\t\t\t\t\t\telse if (sumAmount2[i] != null) {idxOne = -1; break;} // ranges disqualify\n\t\t\t\t\t\telse sum += sumAmount1[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (idxOne >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tsumType[idxOne] = sumType[n];\n\t\t\t\t\t\tsumAmount1[idxOne] = sumAmount1[n] - sum;\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!modified) break;\n\t\t}\n\n\t\t// now use derived absolute units to infer concentration-types\n\t\tfor (let n = 0; n < origins.length; n++) if (sumType[n] != AbsType.None)\n\t\t{\n\t\t\tfor (let i of childIndexes[n]) if (sumType[i] != AbsType.None)\n\t\t\t{\n\t\t\t\tlet scale = 0, denom = sumAmount1[n], uri:string = null;\n\t\t\t\tif (sumType[i] == AbsType.Mass)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) [scale, uri] = [100 / denom, StandardUnits.pcWW];\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcWV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Volume)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [100 / denom, StandardUnits.pcVV];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) {}\n\t\t\t\t}\n\t\t\t\telse if (sumType[i] == AbsType.Moles)\n\t\t\t\t{\n\t\t\t\t\tif (sumType[n] == AbsType.Mass) {}\n\t\t\t\t\telse if (sumType[n] == AbsType.Volume) [scale, uri] = [1.0 / denom, StandardUnits.mol_L];\n\t\t\t\t\telse if (sumType[n] == AbsType.Moles) [scale, uri] = [100 / denom, StandardUnits.pcMM];\n\t\t\t\t}\n\n\t\t\t\tif (uri != null)\n\t\t\t\t{\n\t\t\t\t\tif (sumAmount2[i] == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = sumAmount1[i] * scale;\n\t\t\t\t\t\tthis.notes[i].concError = sumError[i] == null ? null : sumError[i] * scale;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.notes[i].concQuantity = [sumAmount1[i] * scale, sumAmount2[i] * scale];\n\t\t\t\t\t}\n\t\t\t\t\tthis.notes[i].concUnits = Units.uriToName(uri);\n\t\t\t\t\tthis.notes[i].concRelation = compList[n].relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic findNote(origin:number[]):NormMixtureNote\n\t{\n\t\tfor (let note of this.notes) if (Vec.equals(origin, note.origin)) return note;\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// if the given molecule has stereogenic centres (i.e. wavy bonds), enumerate them explicitly\n\tprivate enumerateStereo(mol:Molecule):Molecule[]\n\t{\n\t\tlet splitMolecule = (mol:Molecule):Molecule[] =>\n\t\t{\n\t\t\tfor (let n = 1; n <= mol.numBonds; n++) if (mol.bondType(n) == Molecule.BONDTYPE_UNKNOWN)\n\t\t\t{\n\t\t\t\tlet mol1 = mol.clone(), mol2 = mol.clone();\n\t\t\t\tif (mol.bondOrder(n) == 1)\n\t\t\t\t{\n\t\t\t\t\t// make up & down versions of the bond\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\t\t\tmol2.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t\t\t\treturn [mol1, mol2];\n\t\t\t\t}\n\t\t\t\telse if (mol.bondOrder(n) == 2)\n\t\t\t\t{\n\t\t\t\t\t// for a cis/trans double bond, use the sketcher algorithm to rotate it; if the rotation is rejected,\n\t\t\t\t\t// it'll just return the input molecule, with the stereolabel removed\n\t\t\t\t\tlet mol1 = mol.clone();\n\t\t\t\t\tmol1.setBondType(n, Molecule.BONDTYPE_NORMAL);\n\n\t\t\t\t\tlet mol2:Molecule = null;\n\t\t\t\t\tif (!mol.bondInRing(n))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet state:SketchState = {mol: mol1, currentAtom: 0, currentBond: n, selectedMask: null};\n\t\t\t\t\t\tlet activ = new MoleculeActivity(state, ActivityType.BondRotate, {});\n\t\t\t\t\t\tactiv.execute();\n\t\t\t\t\t\tif (!activ.errmsg && activ.output.mol) mol2 = activ.output.mol;\n\t\t\t\t\t}\n\t\t\t\t\treturn mol2 ? [mol1, mol2] : [mol1];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tlet list:Molecule[] = [mol];\n\t\tfor (let n = 0; n < list.length; n++)\n\t\t{\n\t\t\tlet emols = splitMolecule(list[n]);\n\t\t\tif (!emols) continue;\n\n\t\t\tlist[n] = emols[0];\n\t\t\tfor (let i = emols.length - 1; i >= 1; i--) list.splice(n + 1, 0, emols[i]);\n\t\t\tn--;\n\t\t}\n\n\t\treturn list.length > 1 ? list : null;\n\t}\n\n\t// converts the units within the component to \"absolute\" form, at a singular scale; return is type followed by\n\t// quantity1, quantity2, error (to capture ranges & errors, where applicable)\n\tprivate toAbsoluteUnits(comp:MixfileComponent):[AbsType, number, number, number]\n\t{\n\t\tif (!comp.units || comp.quantity == null /*|| typeof comp.quantity != 'number'*/) return [AbsType.None, null, null, null];\n\t\tlet uri = Units.nameToURI(comp.units);\n\t\tif (!uri) return [AbsType.None, null, null, null];\n\n\t\tlet scale = 0, type = AbsType.None;\n\n\t\tif (uri == StandardUnits.kg) [scale, type] = [1E3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.g) [scale, type] = [1, AbsType.Mass];\n\t\telse if (uri == StandardUnits.mg) [scale, type] = [1E-3, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ug) [scale, type] = [1E-6, AbsType.Mass];\n\t\telse if (uri == StandardUnits.ng) [scale, type] = [1E-9, AbsType.Mass];\n\t\telse if (uri == StandardUnits.L) [scale, type] = [1, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mL) [scale, type] = [1E-3, AbsType.Volume];\n\t\telse if (uri == StandardUnits.uL) [scale, type] = [1E-6, AbsType.Volume];\n\t\telse if (uri == StandardUnits.nL) [scale, type] = [1E-9, AbsType.Volume];\n\t\telse if (uri == StandardUnits.mol) [scale, type] = [1, AbsType.Moles];\n\t\telse if (uri == StandardUnits.mmol) [scale, type] = [1E-3, AbsType.Moles];\n\t\telse if (uri == StandardUnits.umol) [scale, type] = [1E-6, AbsType.Moles];\n\t\telse if (uri == StandardUnits.nmol) [scale, type] = [1E-9, AbsType.Moles];\n\t\telse return [AbsType.None, null, null, null];\n\n\t\tif (typeof comp.quantity == 'number')\n\t\t{\n\t\t\tlet error = comp.error == null ? null : comp.error * scale;\n\t\t\treturn [type, (comp.quantity as number) * scale, null, error];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet [lo, hi] = comp.quantity as number[];\n\t\t\treturn [type, lo * scale, hi * scale, null];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Mixfile, MIXFILE_VERSION, MixfileComponent} from './Mixfile';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tData container for mixtures: basically wraps the Mixfile interface, with additional functionality.\n\n\tNote that functionality should be assumed to be using shallow pointers to the underlying dictionary, unless\n\tspecified otherwise (e.g. clone).\n*/\n\nexport class Mixture\n{\n\t// ------------ public methods ------------\n\n\tconstructor(public mixfile?:Mixfile)\n\t{\n\t\tif (!mixfile) this.mixfile = {mixfileVersion: MIXFILE_VERSION};\n\t\telse if (!this.mixfile.mixfileVersion) this.mixfile.mixfileVersion = MIXFILE_VERSION;\n\t}\n\n\t// instantiates a new mixture object by casting a component into a root mixfile\n\tpublic static fromComponent(comp:MixfileComponent):Mixture\n\t{\n\t\tlet mixfile = deepClone(comp) as Mixfile;\n\t\tmixfile.mixfileVersion = MIXFILE_VERSION;\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// returns true if the mixture is blank\n\tpublic isEmpty():boolean\n\t{\n\t\treturn Mixture.isComponentEmpty(this.mixfile);\n\t}\n\tpublic static isComponentEmpty(comp:MixfileComponent):boolean\n\t{\n\t\tconst BITS = ['name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t\t\t\t\t  'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links'];\n\t\tfor (let bit of BITS) if ((comp as any)[bit] != null) return false;\n\t\tif (Vec.arrayLength(comp.contents) > 0) return false;\n\t\treturn true;\n\t}\n\n\t// returns true if there's something to put in the quantity section\n\tpublic static hasQuantity(comp:MixfileComponent):boolean\n\t{\n\t\treturn comp.quantity != null || comp.ratio != null;\n\t}\n\n\t// makes a deep copy of self\n\tpublic clone():Mixture\n\t{\n\t\treturn new Mixture(deepClone(this.mixfile));\n\t}\n\n\t// returns true if the two mixtures are identical at all parts of their branch structure\n\tpublic equals(other:Mixture):boolean\n\t{\n\t\tif (other == null) return false;\n\t\treturn this.recursiveEqual(this.mixfile, other.mixfile);\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):Mixture\n\t{\n\t\tlet mixfile = JSON.parse(data);\n\t\treturn new Mixture(mixfile);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string\n\tpublic serialise():string\n\t{\n\t\treturn Mixture.beautify(this.mixfile);\n\t}\n\n\t// likewise, for a sub-component\n\tpublic static serialiseComponent(comp:MixfileComponent):string\n\t{\n\t\treturn Mixture.beautify(comp);\n\t}\n\n\t// uses the \"origin vector\" to fetch a particular component; this is an array of indices, where [] indicates the root; its first\n\t// component is [0], the second child of its first component is [0,1], etc.\n\tpublic getComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return this.mixfile;\n\t\tlet find:MixfileComponent = null, look = this.mixfile.contents || [];\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tif (!find) return null;\n\t\t\tlook = find.contents || [];\n\t\t}\n\t\treturn find;\n\t}\n\tpublic getParentComponent(origin:number[]):MixfileComponent\n\t{\n\t\tif (origin.length == 0) return null;\n\t\torigin = origin.slice();\n\t\torigin.pop();\n\t\treturn this.getComponent(origin);\n\t}\n\n\t// returns a flat list of all components, i.e. without any hierarchy; these are all pointers to the originals, so\n\t// modifications can be made directly\n\tpublic getComponents():MixfileComponent[]\n\t{\n\t\tlet list:MixfileComponent[] = [], stack:MixfileComponent[] = [this.mixfile];\n\t\twhile (stack.length > 0)\n\t\t{\n\t\t\tlet comp = stack.shift();\n\t\t\tlist.push(comp);\n\t\t\tif (comp.contents) for (let sub of comp.contents) stack.push(sub);\n\t\t}\n\t\treturn list;\n\t}\n\n\t// returns an array that is equal in size to the number of nodes; each entry contains origin of that node\n\tpublic getOrigins():number[][]\n\t{\n\t\tlet origins:number[][] = [];\n\n\t\tlet nodeEnum = (origin:number[], comp:MixfileComponent):void =>\n\t\t{\n\t\t\torigins.push(origin);\n\t\t\tfor (let n = 0; n < Vec.arrayLength(comp.contents); n++) nodeEnum(Vec.append(origin, n), comp.contents[n]);\n\t\t};\n\n\t\tnodeEnum([], this.mixfile);\n\t\treturn origins;\n\t}\n\n\t// replaces a component at a given position; returns true if the new component was different to the old one\n\tpublic setComponent(origin:number[], comp:MixfileComponent):boolean\n\t{\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\n\t\t// copy over the dictionary entries in 'comp', noting if anything changed\n\t\tlet modified = false;\n\t\tfor (let k in comp)\n\t\t{\n\t\t\tlet v = (comp as any)[k];\n\t\t\tif (v != (find as any)[k])\n\t\t\t{\n\t\t\t\t(find as any)[k] = v;\n\t\t\t\tmodified = true;\n\t\t\t}\n\t\t}\n\n\t\t// cleanup by removing explicit nulls\n\t\tObject.keys(find).forEach((key:string) => {if ((find as any)[key] == null) delete (find as any)[key];});\n\n\t\treturn modified;\n\t}\n\n\t// deletes the indicated component, and collapses any child nodes into its own position (as opposed to just deleting\n\t// them too)\n\tpublic deleteComponent(origin:number[]):void\n\t{\n\t\tif (origin.length == 0) return; // can't delete the whole thing\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent.splice(idx, 1);\n\t\tif (look) for (let c of look) parent.splice(idx++, 0, c);\n\t}\n\n\t// insert a new component \"above\" the existing one, and handle the reparenting\n\tpublic prependBefore(origin:number[], comp:MixfileComponent):void\n\t{\n\t\t// slightly different when prepending before the root element\n\t\tif (origin.length == 0)\n\t\t{\n\t\t\tlet mixfile = this.mixfile;\n\t\t\tlet subcomp:MixfileComponent = {};\n\t\t\tconst SKIP = ['mixfileVersion', 'contents'];\n\t\t\tfor (let key in (mixfile as any)) if (!SKIP.includes(key))\n\t\t\t{\n\t\t\t\t(subcomp as any)[key] = (mixfile as any)[key];\n\t\t\t\tdelete (mixfile as any)[key];\n\t\t\t}\n\t\t\tmixfile.contents = [subcomp];\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet find:MixfileComponent = this.mixfile, look = this.mixfile.contents, parent = look;\n\t\tfor (let o of origin)\n\t\t{\n\t\t\tparent = look;\n\t\t\tfind = look[o];\n\t\t\tlook = find.contents;\n\t\t}\n\t\tlet idx = origin[origin.length - 1];\n\t\tparent[idx] = comp;\n\t\tcomp.contents = [find];\n\t}\n\n\t// takes an origin vector and splits it into {parent origin} and {child index}; returns null on both counts if this is the root node\n\tpublic static splitOrigin(origin:number[]):[number[], number]\n\t{\n\t\tif (origin.length == 0) return [null, null];\n\t\tlet parent = origin.slice(0);\n\t\tlet idx = parent.splice(origin.length - 1, 1)[0];\n\t\treturn [parent, idx];\n\t}\n\n\t// makes a JSON object into a nicely formatted string for human readability\n\tpublic static beautify(json:any):string\n\t{\n\t\tlet lines = JSON.stringify(json, null, 4).split('\\n');\n\t\tlet regex = /^(\\s*\\\"\\w+\\\": )([\\[\\{].*)$/, regpad = /^(\\s*)/;\n\t\tfor (let n = 0; n < lines.length; n++)\n\t\t{\n\t\t\tlet match = regex.exec(lines[n]);\n\t\t\tif (!match) continue;\n\t\t\tlet padding = regpad.exec(lines[n]);\n\t\t\tlines[n] = match[1] + '\\n' + padding[1] + match[2];\n\t\t}\n\t\treturn lines.join('\\n');\n\t}\n\n\t// ------------ private methods ------------\n\n\t// returns true if this component, and all sub-components, are equal\n\tprivate recursiveEqual(comp1:MixfileComponent, comp2:MixfileComponent):boolean\n\t{\n\t\tlet dict1:any = comp1, dict2:any = comp2;\n\t\t/*let keys1 = Object.keys(dict1), keys2 = Object.keys(dict2);\n\t\tlet i:number;\n\t\tif ((i = keys1.indexOf('contents')) >= 0) keys1.splice(i, 1);\n\t\tif ((i = keys2.indexOf('contents')) >= 0) keys2.splice(i, 1);*/\n\t\tlet keys1:string[] = [], keys2:string[] = [];\n\t\tfor (let k in dict1) if (k != 'contents' && dict1[k] != null) keys1.push(k);\n\t\tfor (let k in dict2) if (k != 'contents' && dict2[k] != null) keys2.push(k);\n\t\tkeys1.sort();\n\t\tkeys2.sort();\n\t\tif (!Vec.equals(keys1, keys2)) return false; // different keys (less contents) is a dealbreaker\n\t\tfor (let k of keys1)\n\t\t{\n\t\t\tlet v1 = dict1[k], v2 = dict2[k];\n\t\t\tif (Array.isArray(v1) && Array.isArray(v2))\n\t\t\t{\n\t\t\t\tif (!Vec.equals(v1, v2)) return false;\n\t\t\t}\n\t\t\telse // assume scalar\n\t\t\t{\n\t\t\t\tif (v1 != v2) return false;\n\t\t\t}\n\t\t}\n\n\t\tlet len = Vec.arrayLength(comp1.contents);\n\t\tif (len != Vec.arrayLength(comp2.contents)) return false;\n\t\tfor (let n = 0; n < len; n++) if (!this.recursiveEqual(comp1.contents[n], comp2.contents[n])) return false;\n\n\t\treturn true;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n    \n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\n/*\n\tThe Mixfile is a raw definition of the contents of a mixture, which maps directly to the JSON datastructure\n\tthat holds the serialised content. For keeping an operable mixture instance, see the Mixture class.\n*/\n\nexport const MIXFILE_VERSION = 1.00; // version number to use for newly created instances\n\nexport type MixfileMetadatum = string | (string | number)[];\n\nexport interface Mixfile extends MixfileComponent\n{\n\tmixfileVersion:number;\n}\n\nexport interface MixfileComponent\n{\n\tname?:string;\n\tdescription?:string;\n\tsynonyms?:string[];\n\n\t// molecular specification: none of them are mandatory, but if more than one is specified, they must refer to the same species, \n\t// to the extent that the format allows; InChI strings are expected to be standard, while SMILES are not\n\tformula?:string;\n\tmolfile?:string;\n\tinchi?:string;\n\tinchiKey?:string;\n\tsmiles?:string;\n\n\t// if the concentration is known, then these fields should be filled out as appropriate; if the concentration is a ratio,\n\t// it is relative to all of the components within the same branch\n\tquantity?:number | number[]; // a concentration numeric which is associated with the units below (two numbers in case of a range)\n\terror?:number; // optional standard error (applies to quantity when it's a scalar)\n\tratio?:number[]; // a ratio, specified as [numerator, denominator]\n\tunits?:string; // units for quantity (e.g. %, mol/L, g, etc.)\n\trelation?:string; // optional modifier when applied to quantity (e.g. >, <, ~)\n\n\t// identifiers that map the substance to external databases (e.g. PubChem, ChemSpider, CAS, etc.); identifiers are ID numbers, and\n\t// the meaning is implied by the context; links should be resolvable URLs, which are an alternative way of locating external\n\t// resources; in some cases where there are multiple identifiers, the value should be specified as an array\n\tidentifiers?:Record<string, string | string[]>;\n\tlinks?:Record<string, string | string[]>;\n\n\t// metadata starts with an IRI that defines the core concept, and then may be followed by scalar data and/or other IRIs; this allows\n\t// discrete facts to be asserted about the component, as well as numeric values such as physical properties and their units\n\tmetadata?:MixfileMetadatum[];\n\n\t// subcomponents: if this is a discrete molecular entity, then there will be none; usually there are either 0 or 2-or-more; in cases\n\t// where there are any subcomponents, any of the properties above apply to all of these subcomponents collectively\n\tcontents?:MixfileComponent[];\n}\n\n// useful for cleaning up external JSON content\nexport const MIXFILE_COMPONENT_FIELDS =\n[\n\t'name', 'description', 'synonyms', 'formula', 'molfile', 'inchi', 'inchiKey', 'smiles',\n\t'ratio', 'quantity', 'units', 'relation', 'identifiers', 'links', 'contents'\n];\nexport const MIXFILE_ROOT_FIELDS =\n[\n\t'mixfileVersion', ...MIXFILE_COMPONENT_FIELDS\n];\n\n/* orignal example of what the format might look like (1st draft):\n{\n\t\"mixture\": \"1.0 M lithium diisopropyl amide in THF/hexanes\",\n\t\"contents\":\n\t[\n\t\t{\n\t\t\t\"name\": \"lithium diisopropylamide\",\n\t\t\t\"synonyms\": [\"LDA\", \"(iPr)2N.Li\"],\n\t\t\t\"formula\": \"C6H14LiN\",\n\t\t\t\"pubchem\": \"2724682\",\n\t\t\t\"chemspider\": \"2006804\",\n\t\t\t\"inchi\": \"InChI=1S/C6H14N.Li/c1-5(2)7-6(3)4;/h5-6H,1-4H3;/q-1;+1\",\n\t\t\t\"smiles\": \"[Li+].CC(C)[N-]C(C)C\",\n\t\t\t\"molfile\": \"\\nOpenMolecule\\n\\n  8  7  0  0  0  0  0  0  0  0999 V2000\\n    0.0000    0.0000    0.0000 N   0  0  0  0  0  0  0  0  0  0  0  0\\n    1.5000    0.0000    0.0000 Li  0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.7500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -0.0000    2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500    1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n    0.0000   -2.5981    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n   -2.2500   -1.2990    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0\\n  1  2  1  0  0  0  0\\n  1  3  1  0  0  0  0\\n  1  4  1  0  0  0  0\\n  3  5  1  0  0  0  0\\n  3  6  1  0  0  0  0\\n  4  7  1  0  0  0  0\\n  4  8  1  0  0  0  0\\nM  END\\n\",\n\t\t\t\"quantity\": 1.0,\n\t\t\t\"units\": \"mol/L\"\n\t\t},\n\t\t{\n\t\t\t\"group\": \"solvent\",\n\t\t\t\"contents\":\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"tetrahydrofuran\",\n\t\t\t\t\t\"synonyms\": [\"THF\"],\n\t\t\t\t\t\"formula\": \"C4H8O\",\n\t\t\t\t\t\"pubchem\": \"8028\",\n\t\t\t\t\t\"chemspider\": \"7737\",\n\t\t\t\t\t\"inchi\": \"InChI=1S/C4H8O/c1-2-4-5-3-1/h1-4H2\",\n\t\t\t\t\t\"smiles\": \"C1CCOC1\",\n\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\"fraction\": [1, 8]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"group\": \"hexanes\",\n\t\t\t\t\t\"fraction\": [7, 8],\n\t\t\t\t\t\"contents\":\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"n-hexane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"8058\",\n\t\t\t\t\t\t\t\"chemspider\": \"7767\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-3-5-6-4-2/h3-6H2,1-2H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCCCC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [50, 70]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"methylcyclopentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7296\",\n\t\t\t\t\t\t\t\"chemspider\": \"7024\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H12/c1-6-4-2-3-5-6/h6H,2-5H2,1H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CC1CCCC1\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [10, 20]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"2-methypentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7892\",\n\t\t\t\t\t\t\t\"chemspider\": \"7604\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-5-6(2)3/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCCC(C)C\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"3-methylpentane\",\n\t\t\t\t\t\t\t\"formula\": \"C6H14\",\n\t\t\t\t\t\t\t\"pubchem\": \"7282\",\n\t\t\t\t\t\t\t\"chemspider\": \"7010\",\n\t\t\t\t\t\t\t\"inchi\": \"InChI=1S/C6H14/c1-4-6(3)5-2/h6H,4-5H2,1-3H3\",\n\t\t\t\t\t\t\t\"smiles\": \"CCC(C)CC\",\n\t\t\t\t\t\t\t\"molfile\": \"...\",\n\t\t\t\t\t\t\t\"percentage\": [1, 5]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"other hexanes\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n*/\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {deepClone} from 'webmolkit/util/util';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Mixfile, MixfileComponent} from './Mixfile';\nimport {NormMixture, NormMixtureNote} from './NormMixture';\nimport {Mixture} from './Mixture';\nimport {InChIDelegate} from './InChIDelegate';\nimport {Units} from './Units';\n\n// quick implementation of CRC hash codes\nlet crc_table:number[] = [];\nfunction make_crc_table():void\n{\n\tif (crc_table.length > 0) return;\n\tfor (let n = 0; n < 256; n++)\n\t{\n\t\tlet c = n;\n\t\tfor (let i = 0; i < 8; i++) if ((c & 1) != 0) c = 0xEDB88320 ^ (c >>> 1); else c = (c >>> 1);\n\t\tcrc_table.push(c);\n\t}\n}\nconst BOOT_CRC = 0xFFFFFFFF;\nfunction start_crc():number {return BOOT_CRC;}\nfunction feed_crc(crc:number, byte:number):number\n{\n\tlet idx = (crc ^ byte) & 0xFF;\n\treturn crc_table[idx] ^ (crc >>> 8);\n}\nfunction end_crc(crc:number):number {return crc ^ BOOT_CRC;}\n\n// work-in-progress placeholder for the recursive MInChI assembler\ninterface MInChIBuilder\n{\n\tlayerN:string; // N-layer is the hierarchical form\n\tlayerG:string; // G-layer has the concentrations\n}\n\n// for marking the segments of the outgoing MInChI string according to category\nexport enum MInChISegment\n{\n\tNone = 0,\n\tHeader, // the initial recognition string\n\tComponent, // the components (of which there can be multiple contiguous instances)\n\tHierarchy, // the /n layer\n\tConcentration, // the /g layer\n}\n\n// augmented version of a component used to stash some MInChI-specific derived content\ninterface MInChIComponent extends MixfileComponent\n{\n\tinchiFrag:string;\n\tuseRatio:number;\n\tnote:NormMixtureNote;\n}\n\nconst MINCHI_VERSION = 'MInChI=0.99.1S';\n\n/*\n\tFormulates a MInChI string out of the given mixture.\n*/\n\nexport class ExportMInChI\n{\n\tprivate mixture:Mixture;\n\tprivate norm:NormMixture;\n\tprivate minchi = '?';\n\tprivate segment:MInChISegment[] = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixfile:Mixfile, private inchi:InChIDelegate)\n\t{\n\t\tthis.mixture = new Mixture(deepClone(mixfile));\n\t\tthis.norm = new NormMixture(this.mixture);\n\t\tthis.norm.analyse();\n\t}\n\n\t// this should generally be called first: any component that has a structure but not an InChI string gets one calculated,\n\t// which presumes that the external environment has been configured to allow this; returns true if anything was done, i.e.\n\t// the parameter mixture was modified; note that if any components have an InChI that is wrong, this will be believed\n\tpublic async fillInChI():Promise<boolean>\n\t{\n\t\tlet modified = false;\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile || comp.inchi) continue;\n\t\t\tlet mol:Molecule = null;\n\t\t\ttry {mol = MoleculeStream.readUnknown(comp.molfile);}\n\t\t\tcatch (e) {continue;} // silent failure if it's an invalid molecule\n\t\t\tif (MolUtil.isBlank(mol)) continue;\n\t\t\tlet {inchi, inchiKey} = await this.inchi.generate(mol);\n\t\t\tcomp.inchi = inchi;\n\t\t\tcomp.inchiKey = inchiKey;\n\t\t\tmodified = true;\n\t\t}\n\t\treturn modified;\n\t}\n\n\t// assembles the MInChI string: once this has completed, the result is available\n\tpublic formulate():void\n\t{\n\t\tlet modmix = this.mixture.clone();\n\t\t//this.sortContents(sortmix.contents);\n\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet note = this.norm.findNote(origin);\n\t\t\tif (note) (modmix.getComponent(origin) as MInChIComponent).note = note;\n\t\t}\n\n\t\t// special deal: any component with >2 mixtures that has a consistent ratio definition needs to be marked\n\t\t// at the parent-component level\n\t\tskip: for (let comp of modmix.getComponents()) if (Vec.len(comp.contents) >= 2)\n\t\t{\n\t\t\tif (Vec.len(comp.contents[0].ratio) != 2) continue;\n\t\t\tlet [numer, denom] = comp.contents[0].ratio;\n\t\t\tfor (let n = 1; n < comp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet ratio = comp.contents[n].ratio;\n\t\t\t\tif (Vec.len(ratio) != 2 || ratio[1] != denom) continue skip;\n\t\t\t\tnumer += ratio[0];\n\t\t\t}\n\t\t\tif (numer != denom) continue;\n\t\t\tfor (let sub of comp.contents) (sub as MInChIComponent).useRatio = sub.ratio[0];\n\t\t}\n\n\t\t// assemble the InChI fragments - which is sorted and unique and devoid of blanks; same for \"placenames\", which are\n\t\t// terminal components that have name and concentration information, but no InChI\n\t\tlet inchiList:string[] = [];\n\t\tconst PFX = 'InChI=1S/'; // if it doesn't start with this, we don't consider it a valid InChI\n\t\tfor (let origin of modmix.getOrigins())\n\t\t{\n\t\t\tlet mcomp = modmix.getComponent(origin) as MInChIComponent;\n\t\t\tif (Vec.len(mcomp.contents) > 0) continue; // leaf nodes only need apply\n\n\t\t\tmcomp.inchiFrag = mcomp.inchi || '';\n\t\t\tif (mcomp.inchiFrag.startsWith(PFX)) mcomp.inchiFrag = mcomp.inchiFrag.substring(PFX.length);\n\t\t\tif (!inchiList.includes(mcomp.inchiFrag)) inchiList.push(mcomp.inchiFrag);\n\t\t}\n\t\tinchiList.sort();\n\n\t\tlet root = modmix.mixfile as any as MInChIComponent;\n\t\tlet builder = this.assembleContents(root, inchiList);\n\n\t\tthis.minchi = '';\n\t\tthis.segment = [];\n\n\t\tlet appendSegment = (str:string, type:MInChISegment):void =>\n\t\t{\n\t\t\tthis.minchi += str;\n\t\t\tfor (let n = 0; n < str.length; n++) this.segment.push(type);\n\t\t};\n\n\t\tappendSegment(MINCHI_VERSION, MInChISegment.Header);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tfor (let n = 0; n < inchiList.length; n++)\n\t\t{\n\t\t\tif (n > 0) appendSegment('&', MInChISegment.None);\n\t\t\tappendSegment(inchiList[n], MInChISegment.Component);\n\t\t}\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('n' + builder.layerN, MInChISegment.Hierarchy);\n\t\tappendSegment('/', MInChISegment.None);\n\t\tappendSegment('g' + builder.layerG, MInChISegment.Concentration);\n\t}\n\n\t// returns the MInChI notationstring formulated as above\n\tpublic getResult():string\n\t{\n\t\treturn this.minchi;\n\t}\n\n\t// return the segmentation values that mark the type for each character (corresponding to the notation string)\n\tpublic getSegment():MInChISegment[]\n\t{\n\t\treturn this.segment;\n\t}\n\n\t// prepares a \"hash key\" for the mixture: this is basically a sorted unique list of the InChI keys for the structures; it has no concentration or hierarchy\n\t// information because these things are not canonical\n\tpublic makeLongHashKey():string\n\t{\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tbits = Vec.sortedUnique(bits);\n\t\treturn 'Long-MInChIKey=' + bits.join(';');\n\t}\n\n\t// similar to above except fixed length and quite short\n\tpublic makeShortHashKey():string\n\t{\n\t\tmake_crc_table();\n\t\tconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t\tconst NCRC = 4;\n\t\tlet crclist:number[] = [], pos = 0;\n\t\tfor (let n = 0; n < NCRC; n++) crclist.push(start_crc());\n\n\t\tlet feedCharacter = (letter:string) =>\n\t\t{\n\t\t\tlet idx = LETTERS.indexOf(letter);\n\t\t\tif (idx < 0) return;\n\t\t\tcrclist[pos] = feed_crc(crclist[pos], idx);\n\t\t\tpos = pos < NCRC - 1 ? pos + 1 : 0;\n\t\t};\n\n\t\tlet bits:string[] = [];\n\t\tfor (let comp of this.mixture.getComponents())\n\t\t{\n\t\t\tif (!comp.molfile) continue;\n\t\t\tif (!comp.inchiKey) throw 'Mixture has InChIKey(s) missing';\n\t\t\tif (!comp.inchiKey.startsWith('InChIKey=')) throw 'Invalid InChI key: ' + comp.inchiKey;\n\t\t\tbits.push(comp.inchiKey.substring(9));\n\t\t}\n\t\tfor (let bit of Vec.sortedUnique(bits)) for (let letter of bit)\n\t\t{\n\t\t\tfeedCharacter(letter);\n\t\t}\n\n\t\tlet key = 'Short-MInChIKey=';\n\n\t\tfor (let crc of crclist)\n\t\t{\n\t\t\tcrc = end_crc(crc) >>> 1; // clear the least significant bit and the sign as well\n\t\t\tfor (let n = 0; n < 7; n++)\n\t\t\t{\n\t\t\t\tlet idx = crc % 26;\n\t\t\t\tkey += LETTERS[idx];\n\t\t\t\tcrc = Math.trunc(crc / 26);\n\t\t\t}\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tpublic static formatConcentration(quantity:number | number[], error:number, useRatio:number, units:string, relation:string):string\n\t{\n\t\tlet mantissa = (value:number, exp:number):string => Math.round(value * Math.pow(10, -exp)).toString();\n\n\t\t// check for special deal: the \"useRatio\" property is defined if everything in this peer group has a ratio with\n\t\t// the same denominator and they add up correctly; when this isn't the case, it will fall through and convert to\n\t\t// a percentage\n\t\tif (useRatio != null)\n\t\t{\n\t\t\tlet exp = this.determineExponent([useRatio], 4);\n\t\t\treturn mantissa(useRatio, exp) + 'rt' + exp;\n\t\t}\n\n\t\t/*if (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\tlet value = 100 * numer / denom, exp = this.determineExponent([value], 4);\n\t\t\treturn mantissa(value, exp) + 'pp' + exp;\n\t\t}*/\n\n\t\tif (quantity == null || units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (relation != null) bits.push(relation);\n\n\t\tlet values:number[] = typeof quantity == 'number' ? [quantity as number] : quantity;\n\t\tif (error != null) values.push(error);\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\n\t\tlet exp = this.determineExponent(scaled, 4);\n\n\t\tbits.push(mantissa(scaled[0], exp));\n\t\tif (scaled.length > 1)\n\t\t{\n\t\t\tif (Array.isArray(quantity)) bits.push(':'); else bits.push('?');\n\t\t\tbits.push(mantissa(scaled[1], exp));\n\t\t}\n\t\tbits.push(mnemonic);\n\t\tbits.push(exp.toString());\n\n\t\treturn bits.join('');\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate assembleContents(mcomp:MInChIComponent, inchiList:string[]):MInChIBuilder\n\t{\n\t\tlet tree:MInChIBuilder = {layerN: '', layerG: ''};\n\t\tlet builder:MInChIBuilder = {layerN: '', layerG: ''};\n\n\t\t// emit sub-contents recursively\n\t\tif (Vec.len(mcomp.contents) > 0)\n\t\t{\n\t\t\tif (mcomp.contents != null) for (let subComp of mcomp.contents)\n\t\t\t{\n\t\t\t\tlet subTree = this.assembleContents(subComp as MInChIComponent, inchiList);\n\t\t\t\t//if (!subTree.layerN && !subTree.layerG) continue;\n\t\t\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttree.layerN += '&';\n\t\t\t\t\ttree.layerG += '&';\n\t\t\t\t}\n\t\t\t\ttree.layerN += subTree.layerN;\n\t\t\t\ttree.layerG += subTree.layerG;\n\t\t\t}\n\t\t}\n\n\t\t// append the current information\n\t\tlet idx = mcomp.inchiFrag != null ? inchiList.indexOf(mcomp.inchiFrag) + 1 : 0;\n\t\tif (idx > 0) builder.layerN += idx.toString();\n\n\t\tlet conc = ExportMInChI.formatConcentration(mcomp.quantity, mcomp.error, mcomp.useRatio, mcomp.units, mcomp.relation);\n\t\tif (!conc && mcomp.note)\n\t\t{\n\t\t\tlet {concQuantity, concError, concUnits, concRelation} = mcomp.note;\n\t\t\tconc = ExportMInChI.formatConcentration(concQuantity, concError, null, concUnits, concRelation);\n\t\t}\n\t\tif (conc) builder.layerG += conc;\n\n\t\tif (tree.layerN.length > 0 || tree.layerG.length > 0)\n\t\t{\n\t\t\tbuilder.layerN = '{' + tree.layerN + '}' + builder.layerN;\n\t\t\tbuilder.layerG = '{' + tree.layerG + '}' + builder.layerG;\n\t\t\tthis.shaveBeard(builder);\n\t\t}\n\n\t\treturn builder;\n\t}\n\n\t// removes unnecessary nesting stubble\n\tprivate shaveBeard(builder:MInChIBuilder):void\n\t{\n\t\twhile (builder.layerN.startsWith('{{') && builder.layerN.endsWith('}}') &&\n\t\t\t   builder.layerG.startsWith('{{') && builder.layerG.endsWith('}}'))\n\t\t{\n\t\t\tbuilder.layerN = builder.layerN.substring(1, builder.layerN.length - 1);\n\t\t\tbuilder.layerG = builder.layerG.substring(1, builder.layerG.length - 1);\n\t\t}\n\t}\n\n\t// given a positive number, gives out an appropriate exponent to scale it to, such that the mantissa can be an integer that accommodates\n\t// the required number of significant figures\n\tprivate static determineExponent(values:number[], sigfig:number):number\n\t{\n\t\tlet minval = Number.POSITIVE_INFINITY;\n\t\tfor (let v of values) minval = Math.min(minval, Math.abs(v));\n\n\t\tif (!Number.isFinite(minval) || Number.isNaN(minval) || minval <= 0) return 0;\n\n\t\tlet exp = Math.round(Math.log10(minval)) - sigfig;\n\t\t//let man = Math.round(minval * Math.pow(10, -exp));\n\n\t\tlet str:string[] = [];\n\t\tfor (let v of values) str.push(Math.round(v * Math.pow(10, -exp)).toString());\n\n\t\touter: while (true)\n\t\t{\n\t\t\tfor (let n = 0; n < str.length; n++)\n\t\t\t{\n\t\t\t\tif (!str[n].endsWith('0')) break outer;\n\t\t\t\tstr[n] = str[n].substring(0, str[n].length - 1);\n\t\t\t}\n\t\t\texp++;\n\t\t}\n\n\t\treturn exp;\n\t}\n}\n\n","import { clone } from '../util/util';\nexport class RenderPolicy {\n    constructor(data) {\n        if (!data) {\n            data =\n                {\n                    name: 'default',\n                    pointScale: 20,\n                    resolutionDPI: 100,\n                    fontSize: 0.65,\n                    lineSize: 0.075,\n                    bondSep: 0.2,\n                    defaultPadding: 0.2,\n                    foreground: 0x000000,\n                    background: 0xFFFFFF,\n                    atomCols: new Array(112)\n                };\n            for (let n = 0; n <= 111; n++)\n                data.atomCols[n] = 0x000000;\n            this.data = data;\n        }\n        else {\n            this.data = clone(data);\n        }\n    }\n    clone() { return new RenderPolicy(this.data); }\n    static defaultBlackOnWhite(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        return policy;\n    }\n    static defaultWhiteOnBlack(pixPerAng) {\n        let policy = new RenderPolicy();\n        if (pixPerAng)\n            policy.data.pointScale = pixPerAng;\n        policy.data.foreground = 0xFFFFFF;\n        policy.data.background = 0x000000;\n        for (let n = 0; n <= 111; n++)\n            policy.data.atomCols[n] = 0xFFFFFF;\n        return policy;\n    }\n    static defaultColourOnWhite(pixPerAng) {\n        let policy = RenderPolicy.defaultBlackOnWhite(pixPerAng);\n        policy.data.atomCols[0] = 0x404040;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0x000000;\n        policy.data.atomCols[7] = 0x0000FF;\n        policy.data.atomCols[8] = 0xFF0000;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0x808000;\n        policy.data.atomCols[17] = 0x00C000;\n        policy.data.atomCols[35] = 0xC04000;\n        return policy;\n    }\n    static defaultColourOnBlack(pixPerAng) {\n        let policy = RenderPolicy.defaultWhiteOnBlack(pixPerAng);\n        policy.data.atomCols[0] = 0xA0A0A0;\n        policy.data.atomCols[1] = 0x808080;\n        policy.data.atomCols[6] = 0xFFFFFF;\n        policy.data.atomCols[7] = 0x4040FF;\n        policy.data.atomCols[8] = 0xFF4040;\n        policy.data.atomCols[9] = 0xFF8080;\n        policy.data.atomCols[15] = 0xFF8000;\n        policy.data.atomCols[16] = 0xFFFF00;\n        policy.data.atomCols[17] = 0x40FF40;\n        policy.data.atomCols[35] = 0xFF8040;\n        return policy;\n    }\n    static defaultPrintedPublication() {\n        let policy = RenderPolicy.defaultBlackOnWhite(9.6);\n        policy.data.resolutionDPI = 600;\n        policy.data.fontSize = 0.80;\n        policy.data.bondSep = 0.27;\n        policy.data.lineSize = 0.0625;\n        return policy;\n    }\n}\nexport class RenderEffects {\n    constructor() {\n        this.colAtom = {};\n        this.colBond = {};\n        this.dottedRectOutline = {};\n        this.dottedBondCross = {};\n        this.hideAtoms = new Set();\n        this.hideBonds = new Set();\n        this.atomFrameDotSz = [];\n        this.atomFrameCol = [];\n        this.atomCircleSz = [];\n        this.atomCircleCol = [];\n        this.atomDecoText = [];\n        this.atomDecoCol = [];\n        this.atomDecoSize = [];\n        this.bondDecoText = [];\n        this.bondDecoCol = [];\n        this.bondDecoSize = [];\n        this.overlapAtoms = [];\n    }\n}\nexport var RenderMnemonicType;\n(function (RenderMnemonicType) {\n    RenderMnemonicType[\"Atom\"] = \"A\";\n    RenderMnemonicType[\"Bond\"] = \"B\";\n    RenderMnemonicType[\"Artifact\"] = \"R\";\n    RenderMnemonicType[\"Effect\"] = \"E\";\n})(RenderMnemonicType || (RenderMnemonicType = {}));\nexport class RenderMnemonics {\n    constructor(encoded) {\n        this.items = [];\n        let lines = (encoded || '').split('&');\n        for (let line of lines) {\n            let bits = line.split('|');\n            if (bits.length != 3)\n                continue;\n            let item = {\n                type: bits[0],\n                details: bits[1],\n                coords: bits[2].split(',').map((str) => parseFloat(str)),\n            };\n            this.items.push(item);\n        }\n    }\n    append(type, details, coords) {\n        for (let n = details.length - 1; n >= 0; n--)\n            if (details[n] == '|' || details[n] == '&')\n                details = details.substring(0, n) + details.substring(n + 1);\n        this.items.push({ type, details, coords });\n    }\n    serialise() {\n        var _a;\n        let lines = [];\n        for (let item of this.items) {\n            let coords = ((_a = item.coords) !== null && _a !== void 0 ? _a : []).map((coord) => coord.toFixed(1)).join(',');\n            lines.push(`${item.type}|${item.details}|${coords}`);\n        }\n        return lines.join('&');\n    }\n    packWithCoords() { return this.serialise(); }\n    packWithoutCoords() {\n        return this.items.map((item) => `${item.type}|${item.details}`).join('&');\n    }\n}\n//# sourceMappingURL=Rendering.js.map","import { PseudoEmbedding } from '../mol/PseudoEmbedding';\nimport { BondArtifact } from '../mol/BondArtifact';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { Molecule } from '../mol/Molecule';\nimport { PolymerBlock, PolymerBlockConnectivity } from '../mol/PolymerBlock';\nimport { QueryUtil } from '../mol/QueryUtil';\nimport { FitRotatedEllipse } from '../util/FitRotatedEllipse';\nimport { Box, GeomUtil, Line, Oval, QuickHull } from '../util/Geom';\nimport { angleDiff, clone, DEGRAD, invZ, norm2_xy, norm_xy, RADDEG, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nimport { RenderEffects } from './Rendering';\nexport var BLineType;\n(function (BLineType) {\n    BLineType[BLineType[\"Normal\"] = 1] = \"Normal\";\n    BLineType[BLineType[\"Inclined\"] = 2] = \"Inclined\";\n    BLineType[BLineType[\"Declined\"] = 3] = \"Declined\";\n    BLineType[BLineType[\"Unknown\"] = 4] = \"Unknown\";\n    BLineType[BLineType[\"Dotted\"] = 5] = \"Dotted\";\n    BLineType[BLineType[\"DotDir\"] = 6] = \"DotDir\";\n    BLineType[BLineType[\"IncDouble\"] = 7] = \"IncDouble\";\n    BLineType[BLineType[\"IncTriple\"] = 8] = \"IncTriple\";\n    BLineType[BLineType[\"IncQuadruple\"] = 9] = \"IncQuadruple\";\n})(BLineType || (BLineType = {}));\nconst MINBOND_LINE = 0.25;\nconst MINBOND_EXOTIC = 0.5;\nclass ArrangeMolecule {\n    static guestimateSize(mol, policy, maxW, maxH) {\n        let box = mol.boundary();\n        let minX = box.minX(), minY = box.minY(), maxX = box.maxX(), maxY = box.maxY();\n        let fontSize = policy.data.fontSize * this.FONT_CORRECT;\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomExplicit(n)) {\n                let numsym = 0;\n                for (let ch of mol.atomElement(n))\n                    if (!'|{}^'.includes(ch))\n                        numsym++;\n                let plusH = mol.atomHydrogens(n) > 0 ? 1 : 0;\n                const aw = 0.5 * 0.7 * fontSize * (numsym + plusH);\n                const ah = 0.75 * fontSize * (1 + 0.2 * plusH);\n                const ax = mol.atomX(n), ay = mol.atomY(n);\n                minX = Math.min(minX, ax - aw);\n                maxX = Math.max(maxX, ax + aw);\n                minY = Math.min(minY, ay - ah);\n                maxY = Math.max(maxY, ay + ah);\n            }\n        let w = Math.max(1, (maxX - minX)) * policy.data.pointScale;\n        let h = Math.max(1, (maxY - minY)) * policy.data.pointScale;\n        if (maxW > 0 && w > maxW) {\n            h *= maxW / w;\n            w = maxW;\n        }\n        if (maxH > 0 && h > maxH) {\n            w *= maxH / h;\n            h = maxH;\n        }\n        return [w, h];\n    }\n    constructor(mol, measure, policy, effects = new RenderEffects()) {\n        this.mol = mol;\n        this.measure = measure;\n        this.policy = policy;\n        this.effects = effects;\n        this.points = [];\n        this.lines = [];\n        this.rings = [];\n        this.paths = [];\n        this.space = [];\n        this.unsplitLines = null;\n        this.wantArtifacts = true;\n        this.wantCrossings = true;\n        this.artifacts = null;\n        this.bondOrder = [];\n        this.atomCharge = [];\n        this.atomUnpaired = [];\n        this.artifactCharge = new Map();\n        this.artifactUnpaired = new Map();\n        this.artifactFract = new Map();\n    }\n    getMolecule() { return this.mol; }\n    getMeasure() { return this.measure; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    getScale() { return this.scale; }\n    setWantArtifacts(want) { this.wantArtifacts = want; }\n    getArtifacts() { return this.artifacts; }\n    setArtifacts(artifacts) { this.artifacts = artifacts; }\n    setWantCrossings(want) { this.wantCrossings = want; }\n    arrange() {\n        const { mol, measure, policy, effects } = this;\n        this.scale = measure.scale();\n        this.bondSepPix = policy.data.bondSep * measure.scale();\n        this.lineSizePix = policy.data.lineSize * measure.scale();\n        this.fontSizePix = policy.data.fontSize * measure.scale() * ArrangeMolecule.FONT_CORRECT;\n        this.ymul = measure.yIsUp() ? -1 : 1;\n        let artmask = null;\n        if (this.wantArtifacts && this.artifacts == null) {\n            this.artifacts = new BondArtifact(mol);\n            artmask = Vec.booleanArray(false, mol.numAtoms);\n            for (let path of this.artifacts.getResPaths())\n                for (let a of path.atoms)\n                    artmask[a - 1] = true;\n            for (let ring of this.artifacts.getResRings())\n                for (let a of ring.atoms)\n                    artmask[a - 1] = true;\n            for (let arene of this.artifacts.getArenes()) {\n                artmask[arene.centre - 1] = true;\n                for (let a of arene.atoms)\n                    artmask[a - 1] = true;\n            }\n        }\n        this.setupBondOrders();\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            if (mol.atomElement(n).length > 2 && mol.atomHydrogens(n) == 0) {\n                this.points.push(null);\n                this.space.push(null);\n                continue;\n            }\n            let a = {\n                anum: n,\n                text: mol.atomExplicit(n) || CoordUtil.atomIsWeirdLinear(mol, n) ? mol.atomElement(n) : null,\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[mol.atomicNumber(n)],\n                oval: new Oval(this.measure.angToX(mol.atomX(n)), this.measure.angToY(mol.atomY(n)), 0, 0)\n            };\n            let overCol = this.effects.colAtom[n];\n            if (overCol)\n                a.col = overCol;\n            if (artmask && artmask[n - 1] && mol.atomElement(n) == 'C')\n                a.text = null;\n            if (a.text != null) {\n                let wad = this.measure.measureText(a.text, a.fsz);\n                const PADDING = 1.1;\n                a.oval.rw = 0.5 * wad[0] * PADDING;\n                a.oval.rh = 0.5 * wad[1] * PADDING;\n            }\n            this.points.push(a);\n            this.space.push(this.computeSpacePoint(a));\n        }\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (this.points[n - 1] == null)\n                this.processLabel(n);\n        let bdbl = Vec.booleanArray(false, mol.numBonds);\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let bt = mol.bondType(n), bo = this.bondOrder[n - 1];\n            if (bo < 0)\n                continue;\n            let col = this.effects.colBond[n];\n            if (!col)\n                col = this.policy.data.foreground;\n            bdbl[n - 1] = bo == 2 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN);\n            let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n            let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n            if (Math.abs(x2 - x1) <= 1 && Math.abs(y2 - y1) <= 1) {\n                bdbl[n - 1] = false;\n                continue;\n            }\n            if (bdbl[n - 1])\n                continue;\n            let minDist = (bo == 1 && bt == Molecule.BONDTYPE_NORMAL ? MINBOND_LINE : MINBOND_EXOTIC) * measure.scale();\n            let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(bfr, x1, y1, x2, y2, minDist));\n            let xy2 = this.shrinkBond(x2, y2, x1, y1, this.backOffAtom(bto, x2, y2, x1, y1, minDist));\n            this.ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist);\n            let sz = this.lineSizePix, head = 0;\n            let qbonds = QueryUtil.queryBondOrders(mol, n);\n            if (Vec.notBlank(qbonds)) {\n                Vec.sort(qbonds);\n                if (qbonds[0] == -1) {\n                    qbonds.splice(0, 1);\n                    qbonds.push(-1);\n                }\n                let qtxt = Vec.equals(qbonds, [0, 1, 2, 3, -1]) ? '?' : qbonds.map((o) => o == -1 ? 'A' : o.toString()).join('');\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], 1.3 * this.bondSepPix);\n                let v = -0.5;\n                for (let i = 0; i < 2; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: BLineType.Dotted,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: 0.5 * sz,\n                        head,\n                        col: (col & 0xFFFFFF) | 0x80000000,\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n                let rotation = Math.atan2(xy2[1] - xy1[1], xy2[0] - xy1[0]) * RADDEG;\n                if (rotation < -90 || rotation > 90)\n                    rotation += 180;\n                let a = {\n                    anum: 0,\n                    text: qtxt,\n                    fsz: 0.35 * this.fontSizePix,\n                    col,\n                    oval: new Oval(0.5 * (xy1[0] + xy2[0]), 0.5 * (xy1[1] + xy2[1]), 0, 0),\n                    rotation\n                };\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n                continue;\n            }\n            let ltype = BLineType.Normal;\n            if (bo == 1 && bt == Molecule.BONDTYPE_INCLINED) {\n                ltype = BLineType.Inclined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bo == 1 && bt == Molecule.BONDTYPE_DECLINED) {\n                ltype = BLineType.Declined;\n                head = 0.15 * measure.scale();\n            }\n            else if (bt == Molecule.BONDTYPE_UNKNOWN) {\n                ltype = BLineType.Unknown;\n                head = 0.2 * measure.scale();\n            }\n            else if (bo == 0) {\n                if (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)\n                    ltype = BLineType.DotDir;\n                else\n                    ltype = BLineType.Dotted;\n            }\n            else if ((bo == 2 || bo == 3 || bo == 4) && (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED)) {\n                ltype = bo == 2 ? BLineType.IncDouble : bo == 3 ? BLineType.IncTriple : BLineType.IncQuadruple;\n                head = (bo == 2 ? 0.20 : 0.25) * measure.scale();\n            }\n            if (bo == 0) {\n                let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n                let d = norm_xy(dx, dy), invD = 1 / d;\n                let ox = 0.5 * dx * invD * this.bondSepPix, oy = 0.5 * dy * invD * this.bondSepPix;\n                if (mol.atomAdjCount(bfr) > 1) {\n                    xy1[0] += ox;\n                    xy1[1] += oy;\n                }\n                if (mol.atomAdjCount(bto) > 1) {\n                    xy2[0] -= ox;\n                    xy2[1] -= oy;\n                }\n            }\n            if (bo != 1 && bt == Molecule.BONDTYPE_DECLINED)\n                [xy1, xy2] = [xy2, xy1];\n            if (bo > 1 && (bt == Molecule.BONDTYPE_NORMAL || bt == Molecule.BONDTYPE_UNKNOWN)) {\n                let oxy = this.orthogonalDelta(xy1[0], xy1[1], xy2[0], xy2[1], this.bondSepPix);\n                let ext1 = 1, ext2 = 1;\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext1 = Math.min(ext1, this.backOffAtom(bfr, lx1, ly1, lx2, ly2, minDist));\n                }\n                xy1 = this.shrinkBond(xy1[0], xy1[1], xy2[0], xy2[1], ext1);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    ext2 = Math.min(ext2, this.backOffAtom(bto, lx2, ly2, lx1, ly1, minDist));\n                }\n                xy2 = this.shrinkBond(xy2[0], xy2[1], xy1[0], xy1[1], ext2);\n                for (let i = 0, v = -0.5 * (bo - 1); i < bo; i++, v++) {\n                    let lx1 = xy1[0] + v * oxy[0], ly1 = xy1[1] + v * oxy[1], lx2 = xy2[0] + v * oxy[0], ly2 = xy2[1] + v * oxy[1];\n                    let b = {\n                        bnum: n,\n                        bfr,\n                        bto,\n                        type: ltype,\n                        line: new Line(lx1, ly1, lx2, ly2),\n                        size: sz,\n                        head,\n                        col\n                    };\n                    this.lines.push(b);\n                    this.space.push(this.computeSpaceLine(b));\n                }\n            }\n            else {\n                let b = {\n                    bnum: n,\n                    bfr,\n                    bto,\n                    type: ltype,\n                    line: new Line(xy1[0], xy1[1], xy2[0], xy2[1]),\n                    size: sz,\n                    head,\n                    col\n                };\n                this.lines.push(b);\n                this.space.push(this.computeSpaceLine(b));\n            }\n        }\n        let rings = this.orderedRingList();\n        for (let i = 0; i < rings.length; i++) {\n            for (let j = 0; j < rings[i].length; j++) {\n                let k = mol.findBond(rings[i][j], rings[i][j < rings[i].length - 1 ? j + 1 : 0]);\n                if (bdbl[k - 1]) {\n                    this.processDoubleBond(k, rings[i]);\n                    bdbl[k - 1] = false;\n                }\n            }\n        }\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (bdbl[i - 1])\n                this.processDoubleBond(i, this.priorityDoubleSubstit(i));\n        let hcount = Vec.numberArray(0, mol.numAtoms);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            hcount[n - 1] = this.points[n - 1].text == null ? 0 : mol.atomHydrogens(n);\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0 && this.placeHydrogen(n, hcount[n], true))\n                hcount[n] = 0;\n        for (let n = 0; n < mol.numAtoms; n++)\n            if (hcount[n] > 0)\n                this.placeHydrogen(n, hcount[n], false);\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (mol.atomIsotope(n) != Molecule.ISOTOPE_NATURAL) {\n                let isostr = mol.atomIsotope(n).toString();\n                let col = policy.data.atomCols[mol.atomicNumber(n)];\n                this.placeAdjunct(n, isostr, this.fontSizePix * 0.6, col, 150 * DEGRAD);\n            }\n        for (let n = 1; n <= mol.numAtoms; n++) {\n            let str = '';\n            let chg = this.atomCharge[n - 1];\n            if (chg == -1)\n                str = '-';\n            else if (chg == 1)\n                str = '+';\n            else if (chg < -1)\n                str = Math.abs(chg) + '-';\n            else if (chg > 1)\n                str = chg + '+';\n            for (let i = this.atomUnpaired[n - 1]; i > 0; i--)\n                str += '.';\n            if (str.length == 0)\n                continue;\n            let col = policy.data.atomCols[mol.atomicNumber(n)];\n            this.placeAdjunct(n, str, str.length == 1 ? 0.8 * this.fontSizePix : 0.6 * this.fontSizePix, col, 30 * DEGRAD);\n        }\n        for (let n = 0; n < effects.atomDecoText.length; n++) {\n            let txt = effects.atomDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateAtom(n + 1, txt, effects.atomDecoCol[n], effects.atomDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < effects.bondDecoText.length; n++) {\n            let txt = effects.bondDecoText[n];\n            if (!txt)\n                continue;\n            this.annotateBond(n + 1, txt, effects.bondDecoCol[n], effects.bondDecoSize[n] * this.scale * ArrangeMolecule.FONT_CORRECT);\n        }\n        for (let n = 0; n < Math.min(effects.atomCircleSz.length, mol.numAtoms); n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * this.scale;\n                let a = this.points[n];\n                let box = new Box(a.oval.cx - dw, a.oval.cy - dw, 2 * dw, 2 * dw);\n                let spc = {\n                    anum: 0,\n                    bnum: 0,\n                    box,\n                    px: [box.minX(), box.maxX(), box.maxX(), box.minX()],\n                    py: [box.minY(), box.minY(), box.maxY(), box.maxY()]\n                };\n                this.space.push(spc);\n            }\n        if (this.artifacts != null) {\n            for (let path of this.artifacts.getResPaths()) {\n                this.createCurvedPath(path.atoms, this.artifactFract.get(path), 0);\n                this.delocalisedAnnotation(path.atoms, this.artifactCharge.get(path), this.artifactUnpaired.get(path));\n            }\n            for (let ring of this.artifacts.getResRings()) {\n                this.createCircularRing(ring.atoms);\n                this.delocalisedAnnotation(ring.atoms, this.artifactCharge.get(ring), this.artifactUnpaired.get(ring));\n            }\n            for (let arene of this.artifacts.getArenes()) {\n                let isRing = arene.atoms.length > 2;\n                if (isRing)\n                    for (let n = 0; n < arene.atoms.length; n++) {\n                        let nn = n < arene.atoms.length - 1 ? n + 1 : 0;\n                        if (mol.findBond(arene.atoms[n], arene.atoms[nn]) == 0) {\n                            isRing = false;\n                            break;\n                        }\n                    }\n                let alkeneLike = arene.atoms.length == 2;\n                this.createBondCentroid(arene.centre, arene.atoms);\n                if (!alkeneLike) {\n                    if (isRing)\n                        this.createCircularRing(arene.atoms);\n                    else\n                        this.createCurvedPath(arene.atoms, false, arene.centre);\n                }\n                this.delocalisedAnnotation(arene.atoms, this.artifactCharge.get(arene), this.artifactUnpaired.get(arene));\n            }\n        }\n        if (this.wantCrossings) {\n            let emb = new PseudoEmbedding(mol);\n            emb.calculateCrossings();\n            for (let cross of emb.crossings) {\n                if (cross.higher == 1)\n                    this.resolveLineCrossings(cross.bond1, cross.bond2);\n                else if (cross.higher == 2)\n                    this.resolveLineCrossings(cross.bond2, cross.bond1);\n            }\n        }\n        let polymers = new PolymerBlock(mol);\n        for (let id of polymers.getIDList())\n            this.processPolymerUnit(polymers.getUnit(id), polymers.getUnits());\n    }\n    numPoints() { return this.points.length; }\n    getPoint(idx) { return this.points[idx]; }\n    getPoints() { return this.points; }\n    numLines() { return this.lines.length; }\n    getLine(idx) { return this.lines[idx]; }\n    getLines() { return this.lines; }\n    getUnsplitLines() { return this.unsplitLines; }\n    numRings() { return this.rings.length; }\n    getRing(idx) { return this.rings[idx]; }\n    getRings() { return this.rings; }\n    numPaths() { return this.paths.length; }\n    getPath(idx) { return this.paths[idx]; }\n    getPaths() { return this.paths; }\n    numSpace() { return this.space.length; }\n    getSpace(idx) { return this.space[idx]; }\n    getSpaces() { return this.space; }\n    offsetEverything(dx, dy) {\n        var _a;\n        for (let a of this.points)\n            a.oval.offsetBy(dx, dy);\n        for (let b of [...this.lines, ...((_a = this.unsplitLines) !== null && _a !== void 0 ? _a : [])])\n            b.line.offsetBy(dx, dy);\n        for (let r of this.rings) {\n            r.cx += dx;\n            r.cy += dy;\n        }\n        for (let p of this.paths) {\n            Vec.addTo(p.px, dx);\n            Vec.addTo(p.py, dy);\n        }\n        for (let spc of this.space) {\n            spc.box.offsetBy(dx, dy);\n            Vec.addTo(spc.px, dx);\n            Vec.addTo(spc.py, dy);\n        }\n    }\n    offsetOrigin() {\n        let bounds = this.determineBoundary();\n        if (bounds[0] != 0 || bounds[1] != 0)\n            this.offsetEverything(-bounds[0], -bounds[1]);\n    }\n    scaleEverything(scaleBy) {\n        var _a;\n        if (scaleBy == 1)\n            return;\n        this.scale *= scaleBy;\n        for (let a of this.points) {\n            a.oval.scaleBy(scaleBy);\n            a.fsz *= scaleBy;\n        }\n        for (let b of [...this.lines, ...((_a = this.unsplitLines) !== null && _a !== void 0 ? _a : [])]) {\n            b.line.scaleBy(scaleBy);\n            b.size *= scaleBy;\n            b.head *= scaleBy;\n        }\n        for (let r of this.rings) {\n            r.cx *= scaleBy;\n            r.cy *= scaleBy;\n            r.rw *= scaleBy;\n            r.rh *= scaleBy;\n            r.size *= scaleBy;\n        }\n        for (let p of this.paths) {\n            Vec.mulBy(p.px, scaleBy);\n            Vec.mulBy(p.py, scaleBy);\n            p.size *= scaleBy;\n        }\n        for (let spc of this.space) {\n            spc.box.scaleBy(scaleBy);\n            Vec.mulBy(spc.px, scaleBy);\n            Vec.mulBy(spc.py, scaleBy);\n        }\n    }\n    determineBoundary(padding) {\n        if (padding == null)\n            padding = 0;\n        if (this.space.length == 0)\n            return [0, 0, 2 * padding, 2 * padding];\n        let bounds = Vec.numberArray(0, 4);\n        let spc = this.space[0];\n        bounds[0] = spc.box.x;\n        bounds[1] = spc.box.y;\n        bounds[2] = spc.box.x + spc.box.w;\n        bounds[3] = spc.box.y + spc.box.h;\n        for (let n = this.space.length - 1; n > 0; n--) {\n            spc = this.space[n];\n            bounds[0] = Math.min(bounds[0], spc.box.x);\n            bounds[1] = Math.min(bounds[1], spc.box.y);\n            bounds[2] = Math.max(bounds[2], spc.box.x + spc.box.w);\n            bounds[3] = Math.max(bounds[3], spc.box.y + spc.box.h);\n        }\n        return bounds;\n    }\n    determineBoundaryBox() {\n        let [x1, y1, x2, y2] = this.determineBoundary();\n        return new Box(x1, y1, x2 - x1, y2 - y1);\n    }\n    squeezeInto(x, y, w, h, padding) {\n        if (padding != null && padding > 0) {\n            x += padding;\n            y += padding;\n            w -= 2 * padding;\n            h -= 2 * padding;\n        }\n        let bounds = this.determineBoundary(0);\n        let bw = bounds[2] - bounds[0], bh = bounds[3] - bounds[1];\n        if (bw > w || bh > h) {\n            let downScale = 1;\n            if (bw > w)\n                downScale = w / bw;\n            if (bh > h)\n                downScale = Math.min(downScale, h / bh);\n            this.scaleEverything(downScale);\n            Vec.mulBy(bounds, downScale);\n        }\n        this.offsetEverything(x - bounds[0] + 0.5 * (w - bounds[2] + bounds[0]), y - bounds[1] + 0.5 * (h - bounds[3] + bounds[1]));\n    }\n    limitBounds(w, h) {\n        let bounds = this.determineBoundary(0);\n        if (bounds[0] == bounds[2] && bounds[1] == bounds[3])\n            return;\n        let scale = Math.min(1, Math.min(w / (bounds[2] - bounds[0]), h / (bounds[3] - bounds[1])));\n        this.offsetEverything(-bounds[0], -bounds[1]);\n        this.scaleEverything(scale);\n    }\n    monochromate(col) {\n        for (let a of this.points)\n            a.col = col;\n        for (let b of this.lines)\n            b.col = col;\n    }\n    spatialCongestion(x, y, thresh) {\n        if (thresh == null)\n            thresh = 0.001;\n        let congest = 0;\n        for (let n = 0; n < this.points.length; n++) {\n            let a = this.points[n];\n            if (a == null)\n                continue;\n            let dx = a.oval.cx - x, dy = a.oval.cy - y;\n            congest += 1 / (dx * dx + dy * dy + thresh);\n        }\n        return congest;\n    }\n    clone() {\n        let dup = new ArrangeMolecule(this.mol, this.measure, this.policy, this.effects);\n        dup.scale = this.scale;\n        dup.bondSepPix = this.bondSepPix;\n        dup.lineSizePix = this.lineSizePix;\n        dup.fontSizePix = this.fontSizePix;\n        dup.ymul = this.ymul;\n        for (let a of this.points)\n            dup.points.push(clone(a));\n        for (let b of this.lines)\n            dup.lines.push(clone(b));\n        for (let s of this.space)\n            dup.space.push(clone(s));\n        return dup;\n    }\n    setupBondOrders() {\n        const mol = this.mol;\n        for (let n = 0; n < mol.numBonds; n++)\n            this.bondOrder[n] = mol.bondOrder(n + 1);\n        for (let n = 0; n < mol.numAtoms; n++) {\n            this.atomCharge[n] = mol.atomCharge(n + 1);\n            this.atomUnpaired[n] = mol.atomUnpaired(n + 1);\n        }\n        let delocalise = (obj, atoms) => {\n            let charge = 0, unpaired = 0;\n            for (let a of atoms) {\n                charge += this.atomCharge[a - 1];\n                unpaired += this.atomUnpaired[a - 1];\n                this.atomCharge[a - 1] = this.atomUnpaired[a - 1] = 0;\n            }\n            this.artifactCharge.set(obj, charge);\n            this.artifactUnpaired.set(obj, unpaired);\n            for (let a1 of atoms)\n                for (let a2 of mol.atomAdjList(a1))\n                    if (!atoms.includes(a2)) {\n                        let b = mol.findBond(a1, a2);\n                        if (this.bondOrder[b - 1] >= 0)\n                            this.bondOrder[b - 1] = 1;\n                    }\n        };\n        if (this.artifacts == null)\n            return;\n        for (let path of this.artifacts.getResPaths()) {\n            let charge = 0, unpaired = 0, orders = 0;\n            for (let n = 0; n < path.atoms.length; n++) {\n                charge += mol.atomCharge(path.atoms[n]);\n                unpaired += mol.atomUnpaired(path.atoms[n]);\n                let b = mol.findBond(path.atoms[n], path.atoms[n < path.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    orders += mol.bondOrder(b);\n            }\n            let fractional = (2 * orders - charge + unpaired) / path.atoms.length < 1;\n            this.artifactFract.set(path, fractional);\n            for (let n = 0; n < path.atoms.length - 1; n++) {\n                let b = mol.findBond(path.atoms[n], path.atoms[n + 1]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = fractional ? -1 : 1;\n            }\n            delocalise(path, path.atoms);\n        }\n        for (let ring of this.artifacts.getResRings()) {\n            for (let n = 0; n < ring.atoms.length; n++) {\n                let b = mol.findBond(ring.atoms[n], ring.atoms[n < ring.atoms.length - 1 ? n + 1 : 0]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = 1;\n            }\n            delocalise(ring, ring.atoms);\n        }\n        for (let arene of this.artifacts.getArenes()) {\n            let alkeneLike = arene.atoms.length == 2;\n            for (let n = 0; n < arene.atoms.length; n++) {\n                if (!alkeneLike) {\n                    let b = mol.findBond(arene.atoms[n], arene.atoms[n < arene.atoms.length - 1 ? n + 1 : 0]);\n                    if (b > 0)\n                        this.bondOrder[b - 1] = 1;\n                }\n                let b = mol.findBond(arene.centre, arene.atoms[n]);\n                if (b > 0)\n                    this.bondOrder[b - 1] = -1;\n            }\n            delocalise(arene, arene.atoms);\n        }\n    }\n    placeAdjunct(atom, str, fsz, col, angdir) {\n        let wad = this.measure.measureText(str, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        if (str == '..') {\n            let zeroBonds = this.mol.atomAdjBonds(atom).filter((b) => this.mol.bondOrder(b) == 0);\n            if (zeroBonds.length == 1) {\n                let zpt = this.getPoint(this.mol.bondOther(zeroBonds[0], atom) - 1);\n                let dx = zpt.oval.cx - cx, dy = zpt.oval.cy - cy, inv = 1 / norm_xy(dx, dy);\n                let r = fsz * 0.15;\n                let ox = dy * inv * 2.5 * r, oy = -dx * inv * 2.5 * r;\n                let ext = 1.2 * (rw + rh) * inv;\n                [dx, dy] = [dx * ext, dy * ext];\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx + ox, cy + dy + oy, r, r) });\n                this.points.push({ anum: 0, text: '.', fsz, col, oval: new Oval(cx + dx - ox, cy + dy - oy, r, r) });\n                return;\n            }\n        }\n        let bestScore = 0, bestDX = 0, bestDY = 0;\n        let px = Vec.numberArray(0, 4), py = Vec.numberArray(0, 4);\n        let angThresh = 10;\n        let shorted = false;\n        for (let ext = 0.5 * (a.oval.rw + a.oval.rh); !shorted && ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n            const DELTA = 5 * DEGRAD;\n            for (let d = 0; !shorted && d < Math.PI - 0.0001; d += DELTA)\n                for (let s = -1; s <= 1; s += 2) {\n                    let dang = d * s + (s > 0 ? DELTA : 0), ang = angdir + dang;\n                    let dx = ext * Math.cos(ang), dy = ext * Math.sin(ang) * -this.ymul;\n                    let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                    px[0] = x1;\n                    py[0] = y1;\n                    px[1] = x2;\n                    py[1] = y1;\n                    px[2] = x2;\n                    py[2] = y2;\n                    px[3] = x1;\n                    py[3] = y2;\n                    let viol = this.countPolyViolations(px, py, null, false);\n                    let score = 10 * viol + Math.abs(dang) + 10 * ext;\n                    let shortCircuit = viol == 0 && Math.abs(dang) < (angThresh + 1) * DEGRAD;\n                    if (bestScore == 0 || shortCircuit || score < bestScore) {\n                        bestScore = score;\n                        bestDX = dx;\n                        bestDY = dy;\n                    }\n                    if (shortCircuit) {\n                        shorted = true;\n                        break;\n                    }\n                }\n            angThresh += 5;\n        }\n        a =\n            {\n                anum: 0,\n                text: str,\n                fsz,\n                col,\n                oval: new Oval(cx + bestDX, cy + bestDY, rw, rh)\n            };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processLabel(anum) {\n        let ax = this.mol.atomX(anum), ay = this.mol.atomY(anum);\n        let left = 0, right = 0;\n        let adj = this.mol.atomAdjList(anum);\n        for (let n = 0; n < adj.length; n++) {\n            let theta = Math.atan2(this.mol.atomY(adj[n]) - ay, this.mol.atomX(adj[n]) - ax) * RADDEG;\n            if (theta >= -15 && theta <= 15)\n                right += 3;\n            else if (theta >= -85 && theta <= 85)\n                right++;\n            else if (theta > 85 && theta < 95) { }\n            else if (theta < -85 && theta > -95) { }\n            else if (theta > 165 || theta < -165)\n                left += 3;\n            else\n                left++;\n        }\n        let label = this.mol.atomElement(anum);\n        let ibar = label.indexOf('|'), ibrace = label.indexOf('{');\n        let side = 0;\n        if (left == 0 && right == 0 && ibar < 0 && ibrace < 0) { }\n        else if (left < right)\n            side = -1;\n        else if (right < left)\n            side = 1;\n        else {\n            let score1 = CoordUtil.congestionPoint(this.mol, ax - 1, ay);\n            let score2 = CoordUtil.congestionPoint(this.mol, ax + 1, ay);\n            if (score1 < 0.5 * score2)\n                side = -1;\n            else\n                side = 1;\n        }\n        let chunks = null;\n        let position = null;\n        let primary = null;\n        let refchunk = 0;\n        if (ibar < 0 && ibrace < 0) {\n            if (side == 0)\n                chunks = [label];\n            else if (side < 0) {\n                chunks = [label.substring(0, label.length - 1), label.substring(label.length - 1)];\n                refchunk = 1;\n            }\n            else\n                chunks = [label.substring(0, 1), label.substring(1)];\n        }\n        else {\n            let bits = [];\n            let bpos = [];\n            let bpri = [];\n            let blocks = label.split('|');\n            if (side < 0)\n                blocks = Vec.reverse(blocks);\n            let buff = '';\n            for (let i = 0; i < blocks.length; i++) {\n                let isPrimary = (side >= 0 && i == 0) || (side < 0 && i == blocks.length - 1);\n                if (side < 0 && refchunk == 0 && i == blocks.length - 1)\n                    refchunk = bits.length;\n                let pos = 0;\n                buff = '';\n                for (let j = 0; j < blocks[i].length; j++) {\n                    let ch = blocks[i].charAt(j);\n                    if (ch == '{' || ch == '}') {\n                        if (buff.length > 0) {\n                            bits.push(buff.toString());\n                            bpos.push(pos);\n                            bpri.push(isPrimary);\n                        }\n                        buff = '';\n                        pos = ch == '{' ? -1 : 0;\n                    }\n                    else if (ch == '^' && pos == -1 && buff.length == 0)\n                        pos = 1;\n                    else\n                        buff += ch;\n                }\n                if (buff.length > 0) {\n                    bits.push(buff.toString());\n                    bpos.push(pos);\n                    bpri.push(isPrimary);\n                }\n            }\n            chunks = bits;\n            position = bpos;\n            primary = bpri;\n            while (refchunk < chunks.length - 1 && position[refchunk] != 0)\n                refchunk++;\n        }\n        let PADDING = 1.1;\n        let SSFRACT = 0.6;\n        let chunkw = Vec.numberArray(0, chunks.length);\n        let tw = 0;\n        for (let n = 0; n < chunks.length; n++) {\n            chunkw[n] = this.measure.measureText(chunks[n], this.fontSizePix)[0];\n            if (position != null && position[n] != 0)\n                chunkw[n] *= SSFRACT;\n            tw += chunkw[n];\n        }\n        let x = this.measure.angToX(ax), y = this.measure.angToY(ay);\n        for (let n = 0; n < refchunk; n++)\n            x -= chunkw[n];\n        x -= 0.5 * chunkw[refchunk];\n        for (let n = 0; n < chunks.length; n++) {\n            let a = {\n                anum: (n == refchunk || (primary != null && primary[n])) ? anum : 0,\n                text: chunks[n],\n                fsz: this.fontSizePix,\n                col: this.policy.data.atomCols[this.mol.atomicNumber(anum)],\n                oval: new Oval(x + 0.5 * chunkw[n], y, 0.5 * chunkw[n] * PADDING, 0.5 * this.fontSizePix * PADDING)\n            };\n            if (position != null && position[n] != 0) {\n                a.fsz *= SSFRACT;\n                if (position[n] < 0)\n                    a.oval.cy += a.fsz * 0.7 * (this.measure.yIsUp() ? -1 : 1);\n                else\n                    a.oval.cy -= a.fsz * 0.3 * (this.measure.yIsUp() ? -1 : 1);\n            }\n            if (n == refchunk) {\n                this.points[anum - 1] = a;\n                this.space[anum - 1] = this.computeSpacePoint(a);\n            }\n            else {\n                this.points.push(a);\n                this.space.push(this.computeSpacePoint(a));\n            }\n            x += chunkw[n];\n        }\n    }\n    backOffAtom(atom, x, y, fx, fy, minDist) {\n        if (x == fx && y == fy)\n            return 1;\n        let dx = x - fx, dy = y - fy, dist = norm_xy(dx, dy), inv = 1.0 / dist;\n        const bump = 0.1 * this.measure.scale();\n        let xbump = x + 2 * bump * dx * inv, ybump = y + 2 * bump * dy * inv;\n        let ext = dist;\n        let active = false;\n        for (let spc of this.space)\n            if (spc.anum == atom) {\n                const sz = spc.px.length;\n                if (sz == 0)\n                    continue;\n                for (let n = 0; n < sz; n++) {\n                    let nn = n < sz - 1 ? n + 1 : 0;\n                    let x1 = spc.px[n], y1 = spc.py[n], x2 = spc.px[nn], y2 = spc.py[nn];\n                    if (!GeomUtil.doLineSegsIntersect(xbump, ybump, fx, fy, x1, y1, x2, y2))\n                        continue;\n                    let xy = GeomUtil.lineIntersect(x, y, fx, fy, x1, y1, x2, y2);\n                    active = true;\n                    ext = Math.min(ext, norm_xy(xy[0] - fx, xy[1] - fy));\n                }\n            }\n        if (active) {\n            ext = Math.max(minDist, ext - bump);\n            return ext / dist;\n        }\n        else\n            return 1;\n    }\n    backOffAtomDelta(atom, x, y, fx, fy, minDist) {\n        let ext = this.backOffAtom(atom, x, y, fx, fy, minDist);\n        if (ext >= 1)\n            return null;\n        ext = 1 - ext;\n        let dx = (fx - x) * ext, dy = (fy - y) * ext;\n        return [norm2_xy(dx, dy), dx, dy];\n    }\n    shrinkBond(x, y, fx, fy, ext) {\n        if (ext == 1)\n            return [x, y];\n        let dx = x - fx, dy = y - fy;\n        return [fx + ext * dx, fy + ext * dy];\n    }\n    ensureMinimumBondLength(xy1, xy2, x1, y1, x2, y2, minDist) {\n        let dx = xy2[0] - xy1[0], dy = xy2[1] - xy1[1];\n        let dsq = norm2_xy(dx, dy);\n        minDist = Math.min(minDist, norm_xy(x2 - x1, y2 - y1));\n        if (dsq >= sqr(minDist - 0.0001))\n            return;\n        let d12 = Math.sqrt(dsq), d1 = norm_xy(xy1[0] - x1, xy1[1] - y1), d2 = norm_xy(x2 - xy2[0], y2 - xy2[1]);\n        let mag = 1 - minDist / d12, invD12 = 1.0 / (d1 + d2), mag1 = d1 * mag * invD12, mag2 = d2 * mag * invD12;\n        xy1[0] -= dx * mag1;\n        xy1[1] -= dy * mag1;\n        xy2[0] += dx * mag2;\n        xy2[1] += dy * mag2;\n    }\n    orderedRingList() {\n        let rings = [];\n        let SIZE_ORDER = [6, 5, 7, 4, 3];\n        for (let i = 0; i < SIZE_ORDER.length; i++) {\n            let nring = this.mol.findRingsOfSize(SIZE_ORDER[i]);\n            for (let j = 0; j < nring.length; j++)\n                rings.push(nring[j]);\n        }\n        let ringsz = rings.length;\n        let ringbusy = Vec.numberArray(0, this.mol.numAtoms);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringbusy[r[i] - 1]++;\n        }\n        let ringscore = Vec.numberArray(0, ringsz);\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[n];\n            for (let i = 0; i < r.length; i++)\n                ringscore[n] += ringbusy[r[i] - 1];\n        }\n        let ringorder = Vec.idxSort(ringscore);\n        let resbcount = Vec.numberArray(0, ringsz), maxbcount = 0;\n        for (let n = 0; n < ringsz; n++) {\n            let r = rings[ringorder[n]];\n            for (let i = 0; i < r.length; i++) {\n                let j = this.mol.findBond(r[i], r[i + 1 < r.length ? i + 1 : 0]);\n                if (this.mol.bondOrder(j) == 2)\n                    resbcount[n]++;\n            }\n            maxbcount = Math.max(maxbcount, resbcount[n]);\n        }\n        let pos = 0, ret = [];\n        for (let sz = maxbcount; sz >= 0; sz--) {\n            for (let n = 0; n < ringsz; n++)\n                if (resbcount[n] == sz)\n                    ret.push(rings[ringorder[n]]);\n        }\n        return ret;\n    }\n    orthogonalDelta(x1, y1, x2, y2, d) {\n        let ox = y1 - y2, oy = x2 - x1, dsq = norm2_xy(ox, oy);\n        let sc = dsq > 0 ? d / Math.sqrt(dsq) : 1;\n        return [ox * sc, oy * sc];\n    }\n    processDoubleBond(idx, priority) {\n        let bfr = this.mol.bondFrom(idx), bto = this.mol.bondTo(idx);\n        let nfr = this.mol.atomAdjList(bfr), nto = this.mol.atomAdjList(bto);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n        const minDist = MINBOND_EXOTIC * this.measure.scale();\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let countFLeft = 0, countFRight = 0, countTLeft = 0, countTRight = 0;\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        let noshift = false;\n        for (let n = 0; n < nfr.length; n++)\n            if (nfr[n] != bto) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bfr, nfr[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nfr[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nfr[n] - 1].oval.cy - y1, this.points[nfr[n] - 1].oval.cx - x1), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countFLeft++;\n                    idxFLeft = nfr[n];\n                }\n                else {\n                    if (ispri)\n                        countFRight++;\n                    idxFRight = nfr[n];\n                }\n            }\n        for (let n = 0; n < nto.length; n++)\n            if (nto[n] != bfr) {\n                let bo = this.mol.bondOrder(this.mol.findBond(bto, nto[n]));\n                if (bo == 0)\n                    continue;\n                if (bo > 1) {\n                    noshift = true;\n                    break;\n                }\n                let ispri = false;\n                for (let i = 0; i < (priority == null ? 0 : priority.length); i++)\n                    if (priority[i] == nto[n])\n                        ispri = true;\n                let theta = angleDiff(Math.atan2(this.points[nto[n] - 1].oval.cy - y2, this.points[nto[n] - 1].oval.cx - x2), btheta);\n                if (Math.abs(theta) * RADDEG > 175) {\n                    noshift = true;\n                    break;\n                }\n                if (theta > 0) {\n                    if (ispri)\n                        countTLeft++;\n                    idxTLeft = nto[n];\n                }\n                else {\n                    if (ispri)\n                        countTRight++;\n                    idxTRight = nto[n];\n                }\n            }\n        let side = 0;\n        if (noshift || countFLeft > 1 || countFRight > 1 || countTLeft > 1 || countTRight > 1) { }\n        else if (countFLeft > 0 && countFRight > 0) { }\n        else if (countTLeft > 0 && countTRight > 0) { }\n        else if (countFLeft > 0 || countTLeft > 0)\n            side = 1;\n        else if (countFRight > 0 || countTRight > 0)\n            side = -1;\n        let sz = this.lineSizePix;\n        let ax1 = x1, ay1 = y1, ax2 = x2, ay2 = y2;\n        let bx1 = 0, by1 = 0, bx2 = 0, by2 = 0;\n        if (side == 0) {\n            ax1 = x1 + 0.5 * oxy[0];\n            ay1 = y1 + 0.5 * oxy[1];\n            ax2 = x2 + 0.5 * oxy[0];\n            ay2 = y2 + 0.5 * oxy[1];\n            bx1 = x1 - 0.5 * oxy[0];\n            by1 = y1 - 0.5 * oxy[1];\n            bx2 = x2 - 0.5 * oxy[0];\n            by2 = y2 - 0.5 * oxy[1];\n        }\n        else if (side > 0) {\n            bx1 = x1 + oxy[0];\n            by1 = y1 + oxy[1];\n            bx2 = x2 + oxy[0];\n            by2 = y2 + oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        else if (side < 0) {\n            bx1 = x1 - oxy[0];\n            by1 = y1 - oxy[1];\n            bx2 = x2 - oxy[0];\n            by2 = y2 - oxy[1];\n            if (nfr.length > 1 && this.points[bfr - 1].text == null) {\n                bx1 += oxy[1];\n                by1 -= oxy[0];\n            }\n            if (nto.length > 1 && this.points[bto - 1].text == null) {\n                bx2 -= oxy[1];\n                by2 += oxy[0];\n            }\n        }\n        if (side != 0) {\n            if (this.mol.atomElement(bfr).length <= 2 && this.mol.atomAdjCount(bfr) == 1 && this.points[bfr - 1].text != null) {\n                this.bumpAtomPosition(bfr, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n            if (this.mol.atomElement(bto).length <= 2 && this.mol.atomAdjCount(bto) == 1 && this.points[bto - 1].text != null) {\n                this.bumpAtomPosition(bto, 0.5 * oxy[0] * side, 0.5 * oxy[1] * side);\n            }\n        }\n        let delta1 = this.backOffAtomDelta(bfr, ax1, ay1, ax2, ay2, minDist), delta2 = this.backOffAtomDelta(bfr, bx1, by1, bx2, by2, minDist);\n        if (delta1 != null || delta2 != null) {\n            let delta = (delta1 == null ? 0 : delta1[0]) > (delta2 == null ? 0 : delta2[0]) ? delta1 : delta2;\n            ax1 += delta[1];\n            ay1 += delta[2];\n            bx1 += delta[1];\n            by1 += delta[2];\n        }\n        let delta3 = this.backOffAtomDelta(bto, ax2, ay2, ax1, ay1, minDist), delta4 = this.backOffAtomDelta(bto, bx2, by2, bx1, by1, minDist);\n        if (delta3 != null || delta4 != null) {\n            let delta = (delta3 == null ? 0 : delta3[0]) > (delta4 == null ? 0 : delta4[0]) ? delta3 : delta4;\n            ax2 += delta[1];\n            ay2 += delta[2];\n            bx2 += delta[1];\n            by2 += delta[2];\n        }\n        if (side == 0 && !noshift) {\n            let xy = null;\n            if (this.points[bfr - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxFLeft, bfr, ax1, ay1, ax2, ay2);\n                if (xy != null) {\n                    ax1 = xy[0];\n                    ay1 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxFRight, bfr, bx1, by1, bx2, by2);\n                if (xy != null) {\n                    bx1 = xy[0];\n                    by1 = xy[1];\n                }\n            }\n            if (this.points[bto - 1].text == null && !this.mol.bondInRing(idx)) {\n                xy = this.adjustBondPosition(idxTLeft, bto, ax2, ay2, ax1, ay1);\n                if (xy != null) {\n                    ax2 = xy[0];\n                    ay2 = xy[1];\n                }\n                xy = this.adjustBondPosition(idxTRight, bto, bx2, by2, bx1, by1);\n                if (xy != null) {\n                    bx2 = xy[0];\n                    by2 = xy[1];\n                }\n            }\n        }\n        let lt = this.mol.bondType(idx) == Molecule.BONDTYPE_UNKNOWN ? BLineType.Unknown : BLineType.Normal;\n        let head = lt == BLineType.Unknown ? 0.1 * this.scale : 0;\n        let col = this.effects.colBond[idx];\n        if (!col)\n            col = this.policy.data.foreground;\n        let b1 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(ax1, ay1, ax2, ay2),\n            size: sz,\n            head,\n            col\n        };\n        let b2 = {\n            bnum: idx,\n            bfr,\n            bto,\n            type: lt,\n            line: new Line(bx1, by1, bx2, by2),\n            size: sz,\n            head,\n            col\n        };\n        this.lines.push(b1);\n        this.lines.push(b2);\n        this.space.push(this.computeSpaceLine(b1));\n        this.space.push(this.computeSpaceLine(b2));\n    }\n    placeHydrogen(idx, hcount, fussy) {\n        let font = FontData.main;\n        const SSFRACT = 0.6;\n        const GLYPH_H = font.getIndex('H');\n        let a = this.points[idx];\n        let emscale = a.fsz * font.INV_UNITS_PER_EM;\n        let sub = hcount >= 2 ? hcount.toString() : '';\n        let outlineX = font.getOutlineX(GLYPH_H), outlineY = font.getOutlineY(GLYPH_H);\n        let firstEMW = font.HORIZ_ADV_X[GLYPH_H], emw = firstEMW;\n        for (let n = 0; n < sub.length; n++) {\n            let ch = sub.charAt(n), g = font.getIndex(ch);\n            if (n == 0) {\n                emw += font.getKerning('H', ch);\n            }\n            else {\n                let chp = sub.charAt(n - 1);\n                emw += font.getKerning(chp, ch) * SSFRACT;\n            }\n            let extraX = font.getOutlineX(g), extraY = font.getOutlineY(g);\n            Vec.addTo(extraX, emw / SSFRACT);\n            Vec.addTo(extraY, (SSFRACT - 1) * font.ASCENT * 1.30);\n            Vec.mulBy(extraX, SSFRACT);\n            Vec.mulBy(extraY, SSFRACT);\n            outlineX = outlineX.concat(extraX);\n            outlineY = outlineY.concat(extraY);\n            emw += font.HORIZ_ADV_X[g] * SSFRACT;\n        }\n        if (sub.length > 0) {\n            let qh = new QuickHull(outlineX, outlineY, 0);\n            outlineX = qh.hullX;\n            outlineY = qh.hullY;\n        }\n        let emdx = -0.5 * firstEMW, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n        for (let n = 0; n < outlineX.length; n++) {\n            outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n            outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n        }\n        let dx = 0, dy = 0;\n        let srcWAD = this.measure.measureText(a.text, a.fsz);\n        if (fussy) {\n            let RIGHTLEFT = [0, 1, 2, 3];\n            let LEFTRIGHT = [1, 0, 2, 3];\n            let UPDOWN = [2, 3, 0, 1];\n            let DOWNUP = [3, 2, 0, 1];\n            let quad = RIGHTLEFT, adj = this.mol.atomAdjList(a.anum);\n            if (adj.length == 0) {\n                let LEFTIES = ['O', 'S', 'F', 'Cl', 'Br', 'I'];\n                if (this.mol.atomCharge(a.anum) == 0 && this.mol.atomUnpaired(a.anum) == 0 &&\n                    LEFTIES.indexOf(this.mol.atomElement(a.anum)) >= 0)\n                    quad = LEFTRIGHT;\n                else\n                    quad = RIGHTLEFT;\n            }\n            else {\n                let allLeft = true, allRight = true, allUp = true, allDown = true;\n                const ax = this.mol.atomX(a.anum), ay = this.mol.atomY(a.anum);\n                for (let n = 0; n < adj.length; n++) {\n                    const bx = this.mol.atomX(adj[n]), by = this.mol.atomY(adj[n]);\n                    if (bx > ax + 0.01)\n                        allLeft = false;\n                    if (bx < ax - 0.01)\n                        allRight = false;\n                    if (by < ay - 0.01)\n                        allUp = false;\n                    if (by > ay + 0.01)\n                        allDown = false;\n                }\n                if (allLeft) { }\n                else if (allRight)\n                    quad = LEFTRIGHT;\n                else if (allUp)\n                    quad = DOWNUP;\n                else if (allDown)\n                    quad = UPDOWN;\n            }\n            for (let n = 0; n < 4; n++) {\n                let tx = 0, ty = 0;\n                if (quad[n] == 0)\n                    tx = 0.5 * srcWAD[0] + 0.5 * firstEMW * emscale;\n                else if (quad[n] == 1)\n                    tx = -0.5 * srcWAD[0] - (emw - 0.5 * firstEMW) * emscale;\n                else if (quad[n] == 2)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * -this.ymul;\n                else if (quad[n] == 3)\n                    ty = (1.1 * srcWAD[1] + 0.5 * srcWAD[2]) * this.ymul;\n                Vec.addTo(outlineX, tx);\n                Vec.addTo(outlineY, ty);\n                let viol = this.countPolyViolations(outlineX, outlineY, null, true);\n                Vec.addTo(outlineX, -tx);\n                Vec.addTo(outlineY, -ty);\n                if (viol == 0) {\n                    dx = tx;\n                    dy = ty;\n                    break;\n                }\n            }\n            if (dx == 0 && dy == 0)\n                return false;\n        }\n        else {\n            const mx1 = Vec.min(outlineY), mx2 = Vec.max(outlineX), my1 = Vec.min(outlineY), my2 = Vec.max(outlineY), cx = 0.5 * (mx1 + mx2), cy = 0.5 * (my1 + my2);\n            const mag = 1 + this.measure.scale() * this.policy.data.fontSize * ArrangeMolecule.FONT_CORRECT * 0.1 / Math.max(mx2 - cx, my2 - cy);\n            const psz = outlineX.length;\n            let magPX = outlineX.slice(0), magPY = outlineY.slice(0);\n            for (let n = 0; n < psz; n++) {\n                magPX[n] = (magPX[n] - cx) * mag + cx;\n                magPY[n] = (magPY[n] - cy) * mag + cy;\n            }\n            let bestScore = 0, bestExt = 0, bestAng = 0;\n            for (let ext = 0.5 * (a.oval.rw + a.oval.rh); ext < 1.5 * this.measure.scale(); ext += 0.1 * this.measure.scale()) {\n                let anyNoClash = false;\n                for (let ang = 0; ang < 2 * Math.PI; ang += 5 * DEGRAD) {\n                    let tx = ext * Math.cos(ang), ty = ext * Math.sin(ang);\n                    Vec.addTo(magPX, tx);\n                    Vec.addTo(magPY, ty);\n                    let viol = this.countPolyViolations(magPX, magPY, null, false);\n                    Vec.addTo(magPX, -tx);\n                    Vec.addTo(magPY, -ty);\n                    if (viol == 0)\n                        anyNoClash = true;\n                    let score = 10 * viol + this.spatialCongestion(a.oval.cx + tx, a.oval.cy + ty, 0.5) + 2 * ext;\n                    if (bestScore == 0 || score < bestScore) {\n                        bestScore = score;\n                        bestExt = ext;\n                        bestAng = ang;\n                        dx = tx;\n                        dy = ty;\n                    }\n                }\n                if (anyNoClash)\n                    break;\n            }\n        }\n        let wad = this.measure.measureText('H', a.fsz);\n        const PADDING = 1.1;\n        let ah = {\n            anum: 0,\n            text: 'H',\n            fsz: a.fsz,\n            col: a.col,\n            oval: new Oval(a.oval.cx + dx, a.oval.cy + dy, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n        };\n        this.points.push(ah);\n        if (sub.length > 0) {\n            const subFsz = SSFRACT * a.fsz;\n            wad = this.measure.measureText(sub, subFsz);\n            let an = {\n                anum: 0,\n                text: sub,\n                fsz: subFsz,\n                col: a.col,\n                oval: new Oval(ah.oval.cx + 0.5 * firstEMW * a.fsz * font.INV_UNITS_PER_EM + 0.5 * wad[0], ah.oval.cy + (1 - SSFRACT) * a.fsz, 0.5 * wad[0] * PADDING, 0.5 * wad[1] * PADDING)\n            };\n            this.points.push(an);\n        }\n        Vec.addTo(outlineX, dx);\n        Vec.addTo(outlineY, dy);\n        let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY),\n            px: outlineX,\n            py: outlineY\n        };\n        this.space.push(spc);\n        return true;\n    }\n    computeSpacePoint(a) {\n        let s = {\n            anum: a.anum,\n            bnum: 0,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        const font = FontData.main;\n        let outlineX = [], outlineY = [];\n        let emw = 0, nglyphs = 0;\n        if (a.text != null) {\n            for (let n = 0; n < a.text.length; n++) {\n                let ch1 = a.text.charAt(n);\n                let i = font.getIndex(ch1);\n                if (i >= 0) {\n                    if (emw == 0) {\n                        outlineX = font.getOutlineX(i);\n                        outlineY = font.getOutlineY(i);\n                        nglyphs = 1;\n                    }\n                    else {\n                        let extraX = font.getOutlineX(i), extraY = font.getOutlineY(i);\n                        if (extraX.length > 0) {\n                            Vec.addTo(extraX, emw);\n                            outlineX = outlineX.concat(extraX);\n                            outlineY = outlineY.concat(extraY);\n                            nglyphs++;\n                        }\n                    }\n                    emw += font.HORIZ_ADV_X[i];\n                }\n                else\n                    emw += font.MISSING_HORZ;\n                if (n < a.text.length - 1) {\n                    let ch2 = a.text.charAt(n + 1);\n                    emw += font.getKerning(ch1, ch2);\n                }\n            }\n        }\n        if (outlineX.length > 0) {\n            if (nglyphs > 1) {\n                let qh = new QuickHull(outlineX, outlineY, 0);\n                outlineX = qh.hullX;\n                outlineY = qh.hullY;\n            }\n            let emdx = -0.5 * emw, emdy = 0.5 * font.ASCENT * font.ASCENT_FUDGE;\n            let emscale = a.fsz * font.INV_UNITS_PER_EM;\n            for (let n = 0; n < outlineX.length; n++) {\n                outlineX[n] = a.oval.cx + (emdx + outlineX[n]) * emscale;\n                outlineY[n] = a.oval.cy + (emdy - outlineY[n]) * emscale * this.ymul;\n            }\n            s.px = outlineX;\n            s.py = outlineY;\n            let minX = Vec.min(outlineX), minY = Vec.min(outlineY);\n            s.box = new Box(minX, minY, Vec.max(outlineX) - minX, Vec.max(outlineY) - minY);\n        }\n        else {\n            s.box = Box.fromOval(a.oval);\n            if (s.box.w > 0 && s.box.h > 0) {\n                s.px = [s.box.minX(), s.box.maxX(), s.box.maxX(), s.box.minX()];\n                s.py = [s.box.minY(), s.box.minY(), s.box.maxY(), s.box.maxY()];\n            }\n        }\n        return s;\n    }\n    computeSpaceLine(b) {\n        let s = {\n            anum: 0,\n            bnum: b.bnum,\n            box: new Box(),\n            px: [],\n            py: []\n        };\n        if (b.type == BLineType.Normal || b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n            s.px = [b.line.x1, b.line.x2];\n            s.py = [b.line.y1, b.line.y2];\n        }\n        else {\n            const dx = b.line.x2 - b.line.x1, dy = b.line.y2 - b.line.y1;\n            const norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            const ox = norm * dy, oy = -norm * dx;\n            if (b.type == BLineType.Unknown) {\n                s.px = [b.line.x1 + ox, b.line.x1 - ox, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1 + oy, b.line.y1 - oy, b.line.y2 - oy, b.line.y2 + oy];\n            }\n            else {\n                s.px = [b.line.x1, b.line.x2 - ox, b.line.x2 + ox];\n                s.py = [b.line.y1, b.line.y2 - oy, b.line.y2 + oy];\n            }\n        }\n        s.box.x = Vec.min(s.px) - b.size;\n        s.box.y = Vec.min(s.py) - b.size;\n        s.box.w = Vec.max(s.px) - s.box.x + b.size;\n        s.box.h = Vec.max(s.py) - s.box.y + b.size;\n        return s;\n    }\n    bumpAtomPosition(atom, dx, dy) {\n        let p = this.points[atom - 1];\n        p.oval.cx += dx;\n        p.oval.cy += dy;\n        for (let n = this.space.length - 1; n >= 0; n--) {\n            let s = this.space[n - 1];\n            if (s == null || s.anum != atom)\n                continue;\n            s.box.x += dx;\n            s.box.y += dy;\n            Vec.addTo(s.px, dx);\n            Vec.addTo(s.py, dy);\n        }\n    }\n    spaceSubset(x, y, w, h) {\n        let subset = [];\n        for (let s of this.space)\n            if (GeomUtil.rectsIntersect(x, y, w, h, s.box.x, s.box.y, s.box.w, s.box.h))\n                subset.push(s);\n        return subset;\n    }\n    countPolyViolations(px, py, space, shortCircuit) {\n        if (space == null)\n            space = this.space;\n        let hits = 0;\n        const psz = px.length, nspc = space.length;\n        let pr = new Box(), sr = new Box();\n        for (let i1 = 0; i1 < psz; i1++) {\n            let i2 = i1 < psz - 1 ? i1 + 1 : 0;\n            pr.x = Math.min(px[i1], px[i2]) - 1;\n            pr.y = Math.min(py[i1], py[i2]) - 1;\n            pr.w = Math.max(px[i1], px[i2]) - pr.x + 2;\n            pr.h = Math.max(py[i1], py[i2]) - pr.y + 2;\n            for (let j = 0; j < nspc; j++) {\n                let spc = space[j];\n                if (spc.px == null)\n                    continue;\n                sr.x = spc.box.x - 1;\n                sr.y = spc.box.y - 1;\n                sr.w = spc.box.w + 1;\n                sr.h = spc.box.h + 1;\n                if (!pr.intersects(sr))\n                    continue;\n                let ssz = spc.px.length;\n                for (let j1 = 0; j1 < ssz; j1++) {\n                    let j2 = j1 < ssz - 1 ? j1 + 1 : 0;\n                    sr.x = Math.min(spc.px[j1], spc.px[j2]) - 1;\n                    sr.y = Math.min(spc.py[j1], spc.py[j2]) - 1;\n                    sr.w = Math.max(spc.px[j1], spc.px[j2]) - sr.x + 2;\n                    sr.h = Math.max(spc.py[j1], spc.py[j2]) - sr.y + 2;\n                    if (!pr.intersects(sr))\n                        continue;\n                    if (GeomUtil.doLineSegsIntersect(px[i1], py[i1], px[i2], py[i2], spc.px[j1], spc.py[j1], spc.px[j2], spc.py[j2])) {\n                        if (shortCircuit)\n                            return 1;\n                        hits++;\n                        break;\n                    }\n                    if (ssz == 1)\n                        break;\n                }\n            }\n        }\n        pr.x = Vec.min(px);\n        pr.y = Vec.min(py);\n        pr.w = Vec.max(px) - pr.x;\n        pr.h = Vec.max(py) - pr.y;\n        for (let n = nspc - 1; n >= 0; n--) {\n            let spc = space[n];\n            sr.x = spc.box.x;\n            sr.y = spc.box.y;\n            sr.w = spc.box.w;\n            sr.h = spc.box.h;\n            if (!pr.intersects(sr))\n                continue;\n            for (let i = spc.px.length - 1; i >= 0; i--)\n                if (GeomUtil.pointInPolygon(spc.px[i], spc.py[i], px, py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n            for (let i = 0; i < psz; i++)\n                if (GeomUtil.pointInPolygon(px[i], py[i], spc.px, spc.py)) {\n                    if (shortCircuit)\n                        return 1;\n                    hits++;\n                    break;\n                }\n        }\n        return hits;\n    }\n    adjustBondPosition(bf, bt, x1, y1, x2, y2) {\n        if (bf == 0 || bt == 0)\n            return null;\n        for (let n = 0; n < this.lines.length; n++) {\n            let b = this.lines[n];\n            if (this.mol.bondOrder(b.bnum) != 1 || this.mol.bondType(b.bnum) != Molecule.BONDTYPE_NORMAL)\n                continue;\n            let alt = false;\n            if (this.mol.bondFrom(b.bnum) == bf && this.mol.bondTo(b.bnum) == bt) { }\n            else if (this.mol.bondFrom(b.bnum) == bt && this.mol.bondTo(b.bnum) == bf)\n                alt = true;\n            else\n                continue;\n            let th = angleDiff(Math.atan2(b.line.y2 - b.line.y1, b.line.x2 - b.line.x1), Math.atan2(y2 - y1, x2 - x1)) * RADDEG;\n            if ((th > -5 && th < 5) || th > 175 || th < -175)\n                continue;\n            let xy = GeomUtil.lineIntersect(b.line.x1, b.line.y1, b.line.x2, b.line.y2, x1, y1, x2, y2);\n            if (this.mol.atomRingBlock(bt) == 0) {\n                if (alt) {\n                    b.line.x1 = xy[0];\n                    b.line.y1 = xy[1];\n                }\n                else {\n                    b.line.x2 = xy[0];\n                    b.line.y2 = xy[1];\n                }\n            }\n            return xy;\n        }\n        return null;\n    }\n    priorityDoubleSubstit(idx) {\n        let bf = this.mol.bondFrom(idx), bt = this.mol.bondTo(idx);\n        let nf = this.mol.atomAdjList(bf), nt = this.mol.atomAdjList(bt);\n        let a1 = this.points[bf - 1], a2 = this.points[bt - 1];\n        let x1 = a1.oval.cx, y1 = a1.oval.cy, x2 = a2.oval.cx, y2 = a2.oval.cy;\n        let dx = x2 - x1, dy = y2 - y1, btheta = Math.atan2(dy, dx);\n        let idxFLeft = 0, idxFRight = 0, idxTLeft = 0, idxTRight = 0;\n        for (let n = 0; n < nf.length; n++)\n            if (nf[n] != bt) {\n                let theta = angleDiff(Math.atan2(this.points[nf[n] - 1].oval.cy - y1, this.points[nf[n] - 1].oval.cx - x1), btheta);\n                if (theta > 0) {\n                    if (idxFLeft != 0)\n                        return null;\n                    idxFLeft = nf[n];\n                }\n                else {\n                    if (idxFRight != 0)\n                        return null;\n                    idxFRight = nf[n];\n                }\n            }\n        for (let n = 0; n < nt.length; n++)\n            if (nt[n] != bf) {\n                let theta = angleDiff(Math.atan2(this.points[nt[n] - 1].oval.cy - y2, this.points[nt[n] - 1].oval.cx - x2), btheta);\n                if (theta > 0) {\n                    if (idxTLeft != 0)\n                        return null;\n                    idxTLeft = nt[n];\n                }\n                else {\n                    if (idxTRight != 0)\n                        return null;\n                    idxTRight = nt[n];\n                }\n            }\n        let sumFrom = (idxFLeft > 0 ? 1 : 0) + (idxFRight > 0 ? 1 : 0), sumTo = (idxTLeft > 0 ? 1 : 0) + (idxTRight > 0 ? 1 : 0);\n        if (sumFrom == 1 && sumTo == 0)\n            return [idxFLeft > 0 ? idxFLeft : idxFRight];\n        if (sumFrom == 0 && sumTo == 1)\n            return [idxTLeft > 0 ? idxTLeft : idxTRight];\n        if (sumFrom == 1 && sumTo == 1) {\n            if (idxFLeft > 0 && idxTLeft > 0)\n                return [idxFLeft, idxTLeft];\n            if (idxFRight > 0 && idxTRight > 0)\n                return [idxFRight, idxTRight];\n            let oxy = this.orthogonalDelta(x1, y1, x2, y2, this.bondSepPix);\n            let congestLeft = this.spatialCongestion(0.5 * (x1 + x2) + oxy[0], 0.5 * (y1 + y2) + oxy[1]);\n            let congestRight = this.spatialCongestion(0.5 * (x1 + x2) - oxy[0], 0.5 * (y1 + y2) - oxy[1]);\n            if (congestLeft < congestRight)\n                return [idxFLeft > 0 ? idxFLeft : idxTLeft];\n            else\n                return [idxFRight > 0 ? idxFRight : idxTRight];\n        }\n        if (sumFrom == 2 && sumTo == 1) {\n            if (idxTLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        if (sumFrom == 1 && sumTo == 2) {\n            if (idxFLeft == 0)\n                return [idxFRight, idxTRight];\n            else\n                return [idxFLeft, idxTLeft];\n        }\n        return null;\n    }\n    annotateAtom(atom, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let a = this.points[atom - 1];\n        let cx = a.oval.cx, cy = a.oval.cy, rw = 0.6 * tw, rh = 0.6 * ta;\n        let otherTheta = [];\n        for (let a of this.mol.atomAdjList(atom)) {\n            let dx = this.points[a - 1].oval.cx - cx, dy = this.points[a - 1].oval.cy - cy;\n            otherTheta.push(Math.atan2(dy, dx));\n        }\n        let minExt = 0.5 * (a.oval.rw + a.oval.rh), stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    annotateBond(bond, text, col, fsz) {\n        let [tw, ta] = this.measure.measureText(text, fsz);\n        let bfr = this.mol.bondFrom(bond), bto = this.mol.bondTo(bond);\n        let a1 = this.points[bfr - 1], a2 = this.points[bto - 1];\n        let cx = 0.5 * (a1.oval.cx + a2.oval.cx), cy = 0.5 * (a1.oval.cy + a2.oval.cy), rw = 0.6 * tw, rh = 0.6 * ta;\n        let bth = Math.atan2(a2.oval.cy - a1.oval.cy, a2.oval.cx - a1.oval.cx);\n        let otherTheta = [bth, bth + Math.PI];\n        for (let a of this.mol.atomAdjList(bfr))\n            if (a != bto) {\n                let dx = this.points[a - 1].oval.cx - this.points[bfr - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bfr - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        for (let a of this.mol.atomAdjList(bto))\n            if (a != bfr) {\n                let dx = this.points[a - 1].oval.cx - this.points[bto - 1].oval.cx, dy = this.points[a - 1].oval.cy - this.points[bto - 1].oval.cy;\n                otherTheta.push(Math.atan2(dy, dx));\n            }\n        let minExt = 0.2 * this.scale * this.bondOrder[bond - 1], stepsz = 0.1 * this.scale, nsteps = 8;\n        let angsteps = 36, angsz = TWOPI / angsteps;\n        let bestScore = Number.POSITIVE_INFINITY, bestDX = 0, bestDY = 0;\n        let px = [0, 0, 0, 0], py = [0, 0, 0, 0];\n        let limX = rw + minExt + nsteps * stepsz, limY = rh + minExt + nsteps * stepsz;\n        let subSpace = this.spaceSubset(cx - limX, cy - limY, 2 * limX, 2 * limY);\n        for (let step = 0; step < nsteps; step++) {\n            let ext = minExt + step * stepsz;\n            for (let ang = 0; ang < angsteps; ang++) {\n                let th = angsz * ang;\n                let dx = ext * Math.cos(th), dy = ext * Math.sin(th);\n                let x1 = cx + dx - rw, x2 = cx + dx + rw, y1 = cy + dy - rh, y2 = cy + dy + rh;\n                px[0] = x1;\n                py[0] = y1;\n                px[1] = x2;\n                py[1] = y1;\n                px[2] = x2;\n                py[2] = y2;\n                px[3] = x1;\n                py[3] = y2;\n                let viol = this.countPolyViolations(px, py, subSpace, false);\n                let score = viol * 1000;\n                for (let oth of otherTheta)\n                    score -= Math.abs(angleDiff(th, oth));\n                if (score < bestScore) {\n                    bestScore = score;\n                    bestDX = dx;\n                    bestDY = dy;\n                }\n            }\n            if (bestScore < 500)\n                break;\n        }\n        let x = cx + bestDX, y = cy + bestDY;\n        let an = {\n            anum: 0,\n            text,\n            fsz,\n            col,\n            oval: new Oval(x, y, rw, rh),\n        };\n        this.points.push(an);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(x - rw, y - rh, 2 * rw, 2 * rh),\n            px: [x - rw, x + rw, x + rw, x - rw],\n            py: [y - rh, y - rh, y + rh, y + rh],\n        };\n        this.space.push(spc);\n    }\n    boxOverlaps(x, y, w, h, pointmask, linemask) {\n        let vx1 = x, vy1 = y, vx2 = x + w, vy2 = y + h;\n        for (let n = 0; n < this.points.length; n++) {\n            if (pointmask != null && !pointmask[n])\n                continue;\n            let a = this.points[n];\n            let wx1 = a.oval.cx - a.oval.rw, wy1 = a.oval.cy - a.oval.rh, wx2 = a.oval.cx + a.oval.rw, wy2 = a.oval.cy + a.oval.rh;\n            if (vx2 < wx1 || vx1 > wx2 || vy2 < wy1 || vy1 > wy2)\n                continue;\n            return true;\n        }\n        for (let n = 0; n < this.lines.length; n++) {\n            if (linemask != null && !linemask[n])\n                continue;\n            let b = this.lines[n];\n            let wx1 = b.line.x1, wy1 = b.line.y1, wx2 = b.line.x2, wy2 = b.line.y2;\n            if (vx2 < Math.min(wx1, wx2) || vx1 > Math.max(wx1, wx2) || vy2 < Math.min(wy1, wy2) || vy1 > Math.max(wy1, wy2))\n                continue;\n            if (wx1 >= vx1 && wx1 <= vx2 && wy1 >= vy1 && wy1 <= vy2)\n                return true;\n            if (wx2 >= vx1 && wx2 <= vx2 && wy2 >= vy1 && wy2 <= vy2)\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx2, vy1))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy2, vx2, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx1, vy1, vx1, vy2))\n                return true;\n            if (GeomUtil.doLineSegsIntersect(wx1, wy1, wx2, wy2, vx2, vy1, vx2, vy2))\n                return true;\n        }\n        return false;\n    }\n    resolveLineCrossings(bondHigher, bondLower) {\n        const TYPES = [BLineType.Normal, BLineType.Dotted, BLineType.DotDir];\n        const stashOriginals = () => {\n            if (!this.unsplitLines)\n                this.unsplitLines = this.lines.map((b) => {\n                    return Object.assign(Object.assign({}, b), { line: b.line.clone() });\n                });\n        };\n        for (let sanity = 10; sanity > 0; sanity--) {\n            let anything = false;\n            let linesHigher = this.lines.filter((b) => b.bnum == bondHigher && TYPES.includes(b.type));\n            let linesLower = this.lines.filter((b) => b.bnum == bondLower && TYPES.includes(b.type));\n            for (let b1 of linesHigher) {\n                for (let b2 of linesLower) {\n                    if (b1.bfr == b2.bfr || b1.bfr == b2.bto || b1.bto == b2.bfr || b1.bto == b2.bto)\n                        continue;\n                    if (b2.type == BLineType.DotDir)\n                        b2.type = BLineType.Dotted;\n                    if (!GeomUtil.doLineSegsIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2))\n                        continue;\n                    let [ix, iy] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2);\n                    let dx = b2.line.x2 - b2.line.x1, dy = b2.line.y2 - b2.line.y1;\n                    let ext = Math.abs(dx) > Math.abs(dy) ? (ix - b2.line.x1) / dx : (iy - b2.line.y1) / dy;\n                    let dist = norm_xy(dx, dy);\n                    let delta = b2.size / dist * (b2.type == BLineType.Normal ? 2 : 4);\n                    if (ext > delta && ext < 1 - delta) {\n                        stashOriginals();\n                        let b3 = {\n                            bnum: b2.bnum,\n                            bfr: b2.bfr,\n                            bto: b2.bto,\n                            type: b2.type,\n                            line: b2.line.clone(),\n                            size: b2.size,\n                            head: b2.head,\n                            col: b2.col\n                        };\n                        this.lines.push(b3);\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        b3.line.x1 = b3.line.x1 + dx * (ext + delta);\n                        b3.line.y1 = b3.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                    else if (ext > delta) {\n                        stashOriginals();\n                        b2.line.x2 = b2.line.x1 + dx * (ext - delta);\n                        b2.line.y2 = b2.line.y1 + dy * (ext - delta);\n                        anything = true;\n                    }\n                    else if (ext < 1 - delta) {\n                        stashOriginals();\n                        b2.line.x1 = b2.line.x1 + dx * (ext + delta);\n                        b2.line.y1 = b2.line.y1 + dy * (ext + delta);\n                        anything = true;\n                    }\n                }\n            }\n            if (!anything)\n                break;\n        }\n    }\n    createCircularRing(atoms) {\n        let px = new Array(atoms.length), py = new Array(atoms.length);\n        for (let n = 0; n < atoms.length; n++) {\n            let pt = this.points[atoms[n] - 1];\n            px[n] = pt.oval.cx;\n            py[n] = pt.oval.cy;\n        }\n        let cx = Vec.sum(px) / atoms.length, cy = Vec.sum(py) / atoms.length;\n        let bx = [], by = [];\n        let isRegular = true;\n        let regDist = Number.NaN;\n        const FRACT = 0.7;\n        for (let a of atoms) {\n            let pt = this.points[a - 1];\n            let x0 = pt.oval.cx - cx, y0 = pt.oval.cy - cy, x1 = x0 - pt.oval.rw, x2 = x0 + pt.oval.rw, y1 = y0 - pt.oval.rh, y2 = y0 + pt.oval.rh;\n            bx.push(x1);\n            by.push(y0);\n            bx.push(x1);\n            by.push(y1);\n            bx.push(x1);\n            by.push(y2);\n            bx.push(x0);\n            by.push(y1);\n            bx.push(x0);\n            by.push(y2);\n            bx.push(x2);\n            by.push(y0);\n            bx.push(x2);\n            by.push(y1);\n            bx.push(x2);\n            by.push(y2);\n            let dist = norm_xy(x0, y0), theta = Math.atan2(y0, x0);\n            bx.push(FRACT * dist * Math.cos(theta));\n            by.push(FRACT * dist * Math.sin(theta));\n            for (let b of this.mol.atomAdjList(a))\n                if (atoms.indexOf(b) >= 0) {\n                    let pb = this.points[b - 1];\n                    let mx = 0.5 * (pt.oval.cx + pb.oval.cx) - cx, my = 0.5 * (pt.oval.cy + pb.oval.cy) - cy;\n                    let mdist = norm_xy(mx, my), mtheta = Math.atan2(my, mx);\n                    bx.push(FRACT * mdist * Math.cos(mtheta));\n                    by.push(FRACT * mdist * Math.sin(mtheta));\n                }\n            if (!isRegular) { }\n            else if (Number.isFinite(regDist)) {\n                if (Math.abs(regDist - dist) > 1)\n                    isRegular = false;\n            }\n            else\n                regDist = dist;\n        }\n        let r = { atoms, cx, cy, rw: 0, rh: 0, theta: 0, size: 0 };\n        if (isRegular) {\n            r.rw = r.rh = GeomUtil.fitCircle(bx, by);\n        }\n        else {\n            let mdist = 0;\n            for (let n = 0; n < atoms.length; n++)\n                mdist += norm_xy(px[n] - cx, py[n] - cy);\n            let margin = mdist / atoms.length * (1 - FRACT);\n            var fit = new FitRotatedEllipse(px, py, margin);\n            fit.calculate();\n            r.cx = fit.cx;\n            r.cy = fit.cy;\n            r.rw = fit.rw;\n            r.rh = fit.rh;\n            r.theta = fit.theta;\n        }\n        r.size = this.lineSizePix;\n        this.rings.push(r);\n    }\n    createCurvedPath(atoms, fractional, extAtom) {\n        const sz = atoms.length, szn = sz - 1;\n        let x = [], y = [], symbol = [];\n        for (let n = 0; n < sz; n++) {\n            let pt = this.points[atoms[n] - 1];\n            x.push(pt.oval.cx);\n            y.push(pt.oval.cy);\n            symbol.push(pt.text != null);\n        }\n        let ox = [], oy = [];\n        const EXT = Molecule.IDEALBOND * 0.25 * this.scale;\n        for (let n = 0; n < sz - 1; n++) {\n            let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n], invD = EXT * invZ(norm_xy(dx, dy));\n            ox.push(dy * invD);\n            oy.push(-dx * invD);\n        }\n        const FAR = 1.2, CLOSE = 0.7;\n        let sx1 = Vec.numberArray(0, sz), sy1 = Vec.numberArray(0, sz), sx2 = Vec.numberArray(0, sz), sy2 = Vec.numberArray(0, sz);\n        const capA = symbol[0] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[0] = x[0] + ox[0] * capA;\n            sy1[0] = y[0] + oy[0] * capA;\n            sx2[0] = x[0] - ox[0] * capA;\n            sy2[0] = y[0] - oy[0] * capA;\n        }\n        else {\n            const dx = -oy[0], dy = ox[0];\n            sx1[0] = x[0] + dx * capA;\n            sy1[0] = y[0] + dy * capA;\n            sx2[0] = x[0] + dx * capA;\n            sy2[0] = y[0] + dy * capA;\n        }\n        let ncross1 = 0, ncross2 = 0;\n        for (let n = 1; n < sz - 1; n++) {\n            const fr1 = symbol[n] ? FAR : CLOSE, fr2 = fr1;\n            sx1[n] = x[n] + fr1 * (ox[n - 1] + ox[n]);\n            sy1[n] = y[n] + fr1 * (oy[n - 1] + oy[n]);\n            sx2[n] = x[n] - fr2 * (ox[n - 1] + ox[n]);\n            sy2[n] = y[n] - fr2 * (oy[n - 1] + oy[n]);\n            for (let a of this.mol.atomAdjList(atoms[n]))\n                if (atoms.indexOf(a) < 0 && a != extAtom) {\n                    let pt = this.points[a - 1];\n                    let dx = pt.oval.cx - x[n], dy = pt.oval.cy - y[n];\n                    let dot1 = dx * (sx1[n] - x[n]) + dy * (sy1[n] - x[n]);\n                    let dot2 = dy * (sx2[n] - x[n]) + dy * (sy2[n] - x[n]);\n                    if (dot1 > dot2)\n                        ncross1++;\n                    else\n                        ncross2++;\n                }\n        }\n        let nn = sz - 1;\n        let capB = symbol[nn] ? FAR : CLOSE;\n        if (!fractional) {\n            sx1[nn] = x[nn] + ox[nn - 1] * capB;\n            sy1[nn] = y[nn] + oy[nn - 1] * capB;\n            sx2[nn] = x[nn] - ox[nn - 1] * capB;\n            sy2[nn] = y[nn] - oy[nn - 1] * capB;\n        }\n        else {\n            let dx = -oy[nn - 1], dy = ox[nn - 1];\n            sx1[nn] = x[nn] - dx * capB;\n            sy1[nn] = y[nn] - dy * capB;\n            sx2[nn] = x[nn] - dx * capB;\n            sy2[nn] = y[nn] - dy * capB;\n        }\n        let score1 = 0, score2 = 0;\n        for (let n = 0; n < sz - 1; n++) {\n            score1 += norm_xy(sx1[n + 1] - sx1[n], sy1[n + 1] - sy1[n]);\n            score2 += norm_xy(sx2[n + 1] - sx2[n], sy2[n + 1] - sy2[n]);\n        }\n        score1 *= ncross1 + 1;\n        score2 *= ncross2 + 1;\n        let sx = score1 < score2 ? sx1 : sx2;\n        let sy = score1 < score2 ? sy1 : sy2;\n        let p = { atoms, px: null, py: null, ctrl: null, size: this.lineSizePix };\n        this.splineInterpolate(p, sx, sy);\n        this.paths.push(p);\n    }\n    createBondCentroid(from, to) {\n        let pt = this.points[from - 1];\n        let x1 = pt.oval.cx, y1 = pt.oval.cy, x2 = 0, y2 = 0;\n        for (let a of to) {\n            pt = this.points[a - 1];\n            x2 += pt.oval.cx;\n            y2 += pt.oval.cy;\n        }\n        x2 /= to.length;\n        y2 /= to.length;\n        if (to.length <= 2) {\n            x2 -= 0.1 * (x2 - x1);\n            y2 -= 0.1 * (y2 - y1);\n        }\n        const minDist = MINBOND_LINE * this.measure.scale();\n        let xy1 = this.shrinkBond(x1, y1, x2, y2, this.backOffAtom(from, x1, y1, x2, y2, minDist));\n        this.ensureMinimumBondLength(xy1, [x2, y2], x1, y1, x2, y2, minDist);\n        let b = {\n            bnum: 0,\n            bfr: from,\n            bto: 0,\n            type: BLineType.Normal,\n            line: new Line(xy1[0], xy1[1], x2, y2),\n            size: this.lineSizePix,\n            head: 0,\n            col: this.policy.data.foreground\n        };\n        this.lines.push(b);\n        this.space.push(this.computeSpaceLine(b));\n    }\n    splineInterpolate(path, x, y) {\n        const sz = x.length;\n        const scale = 0.25;\n        for (let n = 0; n < sz; n++) {\n            if (n == 0) {\n                let dx = x[n + 1] - x[n], dy = y[n + 1] - y[n];\n                let qx = x[n] + scale * dx, qy = y[n] + scale * dy;\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n            else if (n == sz - 1) {\n                let dx = x[n] - x[n - 1], dy = y[n] - y[n - 1];\n                let qx = x[n] - scale * dx, qy = y[n] - scale * dy;\n                path.px = Vec.append(path.px, qx);\n                path.py = Vec.append(path.py, qy);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n            }\n            else {\n                let dx = x[n + 1] - x[n - 1], dy = y[n + 1] - y[n - 1];\n                let invD = invZ(norm_xy(dx, dy));\n                dx *= invD;\n                dy *= invD;\n                let d1 = scale * norm_xy(x[n] - x[n - 1], y[n] - y[n - 1]), d2 = scale * norm_xy(x[n + 1] - x[n], y[n + 1] - y[n]);\n                let qx1 = x[n] - dx * d1, qy1 = y[n] - dy * d1;\n                let qx2 = x[n] + dx * d2, qy2 = y[n] + dy * d2;\n                path.px = Vec.append(path.px, qx1);\n                path.py = Vec.append(path.py, qy1);\n                path.ctrl = Vec.append(path.ctrl, true);\n                path.px = Vec.append(path.px, x[n]);\n                path.py = Vec.append(path.py, y[n]);\n                path.ctrl = Vec.append(path.ctrl, false);\n                path.px = Vec.append(path.px, qx2);\n                path.py = Vec.append(path.py, qy2);\n                path.ctrl = Vec.append(path.ctrl, true);\n            }\n        }\n    }\n    delocalisedAnnotation(atoms, charge, unpaired) {\n        const mol = this.mol;\n        let str = '';\n        if (charge == -1)\n            str = '-';\n        else if (charge == 1)\n            str = '+';\n        else if (charge < -1)\n            str = Math.abs(charge) + '-';\n        else if (charge > 1)\n            str = charge + '+';\n        if (unpaired > 0)\n            for (let n = 0; n < unpaired; n++)\n                str += '.';\n        if (str.length == 0)\n            return;\n        const sz = atoms.length;\n        let bestX = 0, bestY = 0;\n        for (let a of atoms) {\n            bestX += mol.atomX(a);\n            bestY += mol.atomY(a);\n        }\n        bestX /= sz;\n        bestY /= sz;\n        let bestScore = CoordUtil.congestionPoint(mol, bestX, bestY);\n        for (let n = 1; n < sz - 1; n++) {\n            let x = 0.5 * (mol.atomX(atoms[n - 1]) + mol.atomX(atoms[n + 1])), y = 0.5 * (mol.atomY(atoms[n - 1]) + mol.atomY(atoms[n + 1]));\n            let score = CoordUtil.congestionPoint(mol, x, y);\n            if (score < bestScore) {\n                bestScore = score;\n                bestX = x;\n                bestY = y;\n            }\n        }\n        let fsz = 0.8 * this.fontSizePix;\n        let wad = this.measure.measureText(str, fsz);\n        let rw = 0.55 * wad[0], rh = 0.55 * wad[1];\n        let a = {\n            anum: 0,\n            text: str,\n            fsz,\n            col: this.policy.data.foreground,\n            oval: new Oval(this.measure.angToX(bestX), this.measure.angToY(bestY), rw, rh)\n        };\n        this.points.push(a);\n        let spc = {\n            anum: 0,\n            bnum: 0,\n            box: new Box(a.oval.cx - rw, a.oval.cy - rh, 2 * rw, 2 * rh),\n            px: [a.oval.cx - rw, a.oval.cx + rw, a.oval.cx + rw, a.oval.cx - rw],\n            py: [a.oval.cy - rh, a.oval.cy - rh, a.oval.cy + rh, a.oval.cy + rh]\n        };\n        this.space.push(spc);\n    }\n    processPolymerUnit(unit, allUnits) {\n        if (Vec.len(unit.bondConn) == 4) {\n            this.processPolymerUnitPair(unit);\n            return;\n        }\n        let brackets = [];\n        const { mol, measure } = this;\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let a1 = mol.bondFrom(n), a2 = mol.bondTo(n);\n            let in1 = unit.atoms.indexOf(a1) >= 0, in2 = unit.atoms.indexOf(a2) >= 0;\n            let bracket = null;\n            if (in1 && !in2)\n                bracket = { a1, a2 };\n            else if (in2 && !in1)\n                bracket = { a1: a2, a2: a1 };\n            else\n                continue;\n            bracket.x1 = mol.atomX(bracket.a1);\n            bracket.y1 = mol.atomY(bracket.a1);\n            bracket.x2 = mol.atomX(bracket.a2);\n            bracket.y2 = mol.atomY(bracket.a2);\n            bracket.shared = false;\n            for (let other of allUnits)\n                if (unit !== other && other.atoms.includes(bracket.a2)) {\n                    bracket.shared = true;\n                    break;\n                }\n            let nestings = allUnits.filter((look) => look === unit || (look.atoms.includes(bracket.a1) && !look.atoms.includes(bracket.a2)));\n            if (nestings.length > 1) {\n                nestings.sort((u1, u2) => u1.atoms.length - u2.atoms.length);\n                for (let i = 0; i < nestings.length; i++)\n                    if (nestings[i] === unit)\n                        bracket.nestOrder = i;\n                bracket.nestCount = nestings.length;\n            }\n            brackets.push(bracket);\n        }\n        let tagidx = 0;\n        let atomX = unit.atoms.map((a) => mol.atomX(a)), atomY = unit.atoms.map((a) => mol.atomY(a));\n        let minX = Vec.min(atomX), minY = Vec.min(atomY);\n        let maxX = Vec.max(atomX), maxY = Vec.max(atomY);\n        for (let n = 1; n < brackets.length; n++) {\n            let b1 = brackets[tagidx], b2 = brackets[n];\n            let score1 = b1.x2 - minX - b1.y2 + minY;\n            let score2 = b2.x2 - minX - b2.y2 + minY;\n            if (score2 > score1)\n                tagidx = n;\n        }\n        let isLinear = false, isOuter = false;\n        if (brackets.length == 2) {\n            let left = brackets[tagidx == 0 ? 1 : 0], right = brackets[tagidx];\n            let theta1 = Math.atan2(left.y2 - left.y1, left.x2 - left.x1);\n            let theta2 = Math.atan2(right.y2 - right.y1, right.x2 - right.x1);\n            isLinear = (theta1 > 145 * DEGRAD || theta1 < -145 * DEGRAD) && theta2 < 35 * DEGRAD && theta2 > -35 * DEGRAD;\n        }\n        else if (brackets.length == 0) {\n            let ym = 0.5 * (minY + maxY);\n            brackets.push({ x1: minX, y1: ym, x2: minX - 1, y2: ym });\n            brackets.push({ x1: maxX, y1: ym, x2: maxX + 1, y2: ym });\n            tagidx = 1;\n            isOuter = true;\n        }\n        let bsz1 = (isOuter ? 0.5 * (maxY - minY + 1) : isLinear ? 1.0 : 0.5) * this.scale, bsz2 = 0.2 * this.scale;\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        for (let n = 0; n < brackets.length; n++) {\n            let bracket = brackets[n];\n            let x1 = measure.angToX(bracket.x1), y1 = measure.angToY(bracket.y1);\n            let x2 = measure.angToX(bracket.x2), y2 = measure.angToY(bracket.y2);\n            if (bracket.shared) {\n                x2 -= (x2 - x1) * 0.1;\n                y2 -= (y2 - y1) * 0.1;\n            }\n            if (bracket.nestCount > 1) {\n                let dx = x2 - x1, dy = y2 - y1, fract = (bracket.nestOrder + 1) / bracket.nestCount;\n                x2 = x1 + dx * fract;\n                y2 = y1 + dy * fract;\n            }\n            let mx = 0.5 * (x1 + x2), my = 0.5 * (y1 + y2);\n            if (isLinear) {\n                x1 = x2 = mx;\n                y1 = y2 = my;\n                if (n == tagidx) {\n                    x1--;\n                    x2++;\n                }\n                else {\n                    x1++;\n                    x2--;\n                }\n            }\n            let invDist = invZ(norm_xy(x2 - x1, y2 - y1));\n            let dx = (x2 - x1) * invDist, dy = (y2 - y1) * invDist;\n            let ox = dy, oy = -dx;\n            let px2 = mx - bsz1 * ox, py2 = my - bsz1 * oy;\n            let px3 = mx + bsz1 * ox, py3 = my + bsz1 * oy;\n            let px1 = px2 - bsz2 * dx, py1 = py2 - bsz2 * dy;\n            let px4 = px3 - bsz2 * dx, py4 = py3 - bsz2 * dy;\n            let line1 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px1, py1, px2, py2) });\n            let line2 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px2, py2, px3, py3) });\n            let line3 = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(px3, py3, px4, py4) });\n            this.lines.push(line1);\n            this.lines.push(line2);\n            this.lines.push(line3);\n            this.space.push(this.computeSpaceLine(line1));\n            this.space.push(this.computeSpaceLine(line2));\n            this.space.push(this.computeSpaceLine(line3));\n            if (n == tagidx) {\n                let xx, yy;\n                if (bracket.shared)\n                    [xx, yy] = [px2 - 0.5 * this.scale * ox, py2 - 0.5 * this.scale * oy];\n                else\n                    [xx, yy] = [px2 + bsz2 * 2 * dx, py2 + bsz2 * 2 * dy];\n                let pt1 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': 'n', 'oval': new Oval(xx, yy, 0, 0) });\n                this.points.push(pt1);\n                this.space.push(this.computeSpacePoint(pt1));\n                if (unit.connect != null) {\n                    let text = '?';\n                    if (unit.connect == PolymerBlockConnectivity.HeadToTail)\n                        text = 'ht';\n                    else if (unit.connect == PolymerBlockConnectivity.HeadToHead)\n                        text = 'hh';\n                    else if (unit.connect == PolymerBlockConnectivity.Random)\n                        text = 'eu';\n                    if (bracket.shared)\n                        [xx, yy] = [px3 + 0.5 * this.scale * ox, py3 + 0.5 * this.scale * oy];\n                    else\n                        [xx, yy] = [px3 + bsz2 * 2.5 * dx, py3 + bsz2 * 2.5 * dy];\n                    let pt2 = Object.assign(Object.assign({}, BASE_TEXT), { 'text': text, 'oval': new Oval(xx, yy, 0, 0) });\n                    this.points.push(pt2);\n                    this.space.push(this.computeSpacePoint(pt2));\n                }\n            }\n        }\n    }\n    processPolymerUnitPair(unit) {\n        const { mol, measure } = this;\n        let xpos = [], ypos = [];\n        for (let b of unit.bondConn) {\n            let bfr = mol.bondFrom(b), bto = mol.bondTo(b);\n            xpos.push(measure.angToX(0.5 * (mol.atomX(bfr) + mol.atomX(bto))));\n            ypos.push(measure.angToY(0.5 * (mol.atomY(bfr) + mol.atomY(bto))));\n        }\n        let cx = Vec.sum(xpos) * 0.25, cy = Vec.sum(ypos) * 0.25;\n        let bsz = 0.5 * this.scale;\n        let rx = [], ry = [];\n        for (let [i1, i2] of [[0, 1], [2, 3]]) {\n            let dx = xpos[i2] - xpos[i1], dy = ypos[i2] - ypos[i1], inv = bsz * invZ(norm_xy(dx, dy) + 0.001);\n            [dx, dy] = [dx * inv, dy * inv];\n            xpos[i1] -= 2 * dx;\n            ypos[i1] -= 2 * dy;\n            xpos[i2] += 2 * dx;\n            ypos[i2] += 2 * dy;\n            let ox = dy, oy = -dx;\n            let dsq1 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) + ox - cx, 0.5 * (ypos[i1] + ypos[i2]) + oy - cy);\n            let dsq2 = norm2_xy(0.5 * (xpos[i1] + xpos[i2]) - ox - cx, 0.5 * (ypos[i1] + ypos[i2]) - oy - cy);\n            if (dsq2 < dsq1)\n                [ox, oy] = [-ox, -oy];\n            rx.push(...[ox, ox]);\n            ry.push(...[oy, oy]);\n        }\n        const BASE_LINE = { bnum: 0, bfr: 0, bto: 0, type: BLineType.Normal, size: this.lineSizePix, head: 0, col: this.policy.data.foreground };\n        const BASE_TEXT = { anum: 0, fsz: 0.7 * this.fontSizePix, bold: false, col: this.policy.data.foreground };\n        let drawLine = (x1, y1, x2, y2) => {\n            let line = Object.assign(Object.assign({}, BASE_LINE), { 'line': new Line(x1, y1, x2, y2) });\n            this.lines.push(line);\n            this.space.push(this.computeSpaceLine(line));\n        };\n        let drawText = (x, y, txt) => {\n            let pt = Object.assign(Object.assign({}, BASE_TEXT), { 'text': txt, 'oval': new Oval(x, y, 0, 0) });\n            this.points.push(pt);\n            this.space.push(this.computeSpacePoint(pt));\n        };\n        drawLine(xpos[0], ypos[0], xpos[1], ypos[1]);\n        drawLine(xpos[0], ypos[0], xpos[0] + rx[0], ypos[0] + ry[0]);\n        drawLine(xpos[1], ypos[1], xpos[1] + rx[1], ypos[1] + ry[1]);\n        drawLine(xpos[2], ypos[2], xpos[3], ypos[3]);\n        drawLine(xpos[2], ypos[2], xpos[2] + rx[2], ypos[2] + ry[2]);\n        drawLine(xpos[3], ypos[3], xpos[3] + rx[3], ypos[3] + ry[3]);\n        let xmin = Vec.min(xpos), ymin = Vec.min(ypos);\n        let dist = [];\n        for (let n = 0; n < 4; n++)\n            dist.push(xpos[n] - xmin + ypos[n] - ymin);\n        let idxN = Vec.idxMax(dist);\n        drawText(xpos[idxN] - rx[idxN], ypos[idxN] - ry[idxN], 'n');\n        let idxD2 = idxN + (idxN % 2 == 1 ? -1 : 1), idxD1 = (idxD2 + 2) % 4;\n        drawText(xpos[idxD1] - 0.5 * rx[idxD1], ypos[idxD1] - 0.5 * ry[idxD1], '*');\n        drawText(xpos[idxD2] - 0.5 * rx[idxD2], ypos[idxD2] - 0.5 * ry[idxD2], '*');\n    }\n}\nArrangeMolecule.FONT_CORRECT = 1.5;\nexport { ArrangeMolecule };\n//# sourceMappingURL=ArrangeMolecule.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet, DataSheetColumn} from 'webmolkit/ds/DataSheet';\nimport {MDLSDFWriter} from 'webmolkit/io/MDLWriter';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MDLMOLReader} from 'webmolkit/io/MDLReader';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {ExportMInChI} from './ExportMInChI';\nimport {Mixfile, MixfileComponent} from './Mixfile';\n\n/*\n\tInteroperability with SDfiles: conversion of the Mixfile hierarchy into a flattened SDfile is useful for presenting to\n\tsoftware that can read this format, and is also a waypoint en route to a MInChI string.\n*/\n\nexport class ExportSDFile\n{\n\tprivate ds = new DataSheet();\n\tprivate colMol:number;\n\tprivate colName:number;\n\tprivate colHier:number;\n\tprivate colConc:number;\n\n\t// ------------ public methods ------------\n\n\tconstructor()\n\t{\n\t\tthis.colMol = this.ds.appendColumn('Molecule', DataSheetColumn.Molecule, '');\n\t\tthis.colName = this.ds.appendColumn('Name', DataSheetColumn.String, '');\n\t\tthis.colHier = this.ds.appendColumn('MINCHI$N', DataSheetColumn.String, '');\n\t\tthis.colConc = this.ds.appendColumn('MINCHI$C', DataSheetColumn.String, '');\n\t}\n\n\t// can add any number of mixtures, which will be numbered automatically\n\tpublic append(mixfile:Mixfile):void\n\t{\n\t\t// if the root node is something other than a pure placeholder, then add it explicitly\n\t\tif (mixfile.name || mixfile.molfile || mixfile.inchi)\n\t\t{\n\t\t\tthis.appendComponent(mixfile, [1]);\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, add all of contents of the root node as a series with incrementing primary indexes\n\t\tif (!mixfile.contents) return;\n\t\tfor (let n = 0; n < mixfile.contents.length; n++) this.appendComponent(mixfile.contents[n], [n + 1]);\n\t}\n\n\t// return the SDF-serialised representation\n\tpublic write():string\n\t{\n\t\treturn new MDLSDFWriter(this.ds).write();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// recursively add a component, and all of its subcomponents\n\tprivate appendComponent(comp:MixfileComponent, seq:number[]):void\n\t{\n\t\tlet row = this.ds.appendRow();\n\n\t\tlet mol:Molecule = null;\n\t\tif (comp.molfile)\n\t\t{\n\t\t\tmol = Molecule.fromString(comp.molfile);\n\t\t\tif (!mol)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmol = new MDLMOLReader(comp.molfile).parse();\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\t\t}\n\t\t}\n\t\tif (!mol) mol = new Molecule();\n\n\t\tthis.ds.setMolecule(row, this.colMol, mol);\n\t\tif (comp.name) this.ds.setString(row, this.colName, comp.name);\n\t\tthis.ds.setString(row, this.colHier, seq.join('.'));\n\t\tthis.ds.setString(row, this.colConc, this.formatConcentration(comp));\n\n\t\tif (comp.contents) for (let n = 0; n < comp.contents.length; n++)\n\t\t{\n\t\t\tlet subseq = seq.slice(0);\n\t\t\tsubseq.push(n + 1);\n\t\t\tthis.appendComponent(comp.contents[n], subseq);\n\t\t}\n\t}\n\n\t// turns a concentration into a suitable precursor string, or null otherwise\n\tprivate formatConcentration(comp:MixfileComponent):string\n\t{\n\t\t/* ... this is a pseudo-MInChI approach ...\n\t\t// TODO: need special deal for ratio without denominator - can sometimes add them up to form an implicit denominator\n\n\t\tif (comp.ratio && comp.ratio.length >= 2)\n\t\t{\n\t\t\tlet numer = comp.ratio[0], denom = comp.ratio[1];\n\t\t\tif (!(denom > 0)) return null;\n\t\t\treturn (100 * numer / denom) + ' pp';\n\t\t}\n\n\t\tif (comp.quantity == null || comp.units == null) return null;\n\n\t\t// special deal (maybe temporary): units that are written with common names that map to a URI are converted automatically\n\t\tlet unitURI = comp.units;\n\t\tif (!unitURI.startsWith('http://')) unitURI = Units.nameToURI(unitURI);\n\t\tif (!unitURI) return;\n\n\t\t// TODO: maybe another special deal for absolute weight/volume/mole quantities - convert them into ratios, to the extent that's\n\t\t// possible... maybe approximating where necessary\n\n\t\tlet bits:string[] = [];\n\n\t\tif (comp.relation != null) bits.push(comp.relation);\n\n\t\tlet values:number[] = typeof comp.quantity == 'number' ? [comp.quantity as number] : comp.quantity;\n\n\t\tlet [mnemonic, scaled] = Units.convertToMInChI(unitURI, values);\n\t\tif (!mnemonic) return;\n\t\tbits.push(scaled[0].toString());\n\t\tif (scaled.length > 1) {bits.push('..'); bits.push(scaled[1].toString());}\n\t\tbits.push(mnemonic);\n\n\t\treturn bits.join(' ');*/\n\n\t\tlet useRatio:number = null;\n\t\tif (Vec.len(comp.ratio) == 2) useRatio = comp.ratio[0]; // mixfile ratios are stored as [numer, denom] where denom is checksum; could verify that this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// is consistent before deigning to use it, but we're just passing it through\n\t\treturn ExportMInChI.formatConcentration(comp.quantity, comp.error, useRatio, comp.units, comp.relation);\n\t}\n}\n\n","class FontData {\n    constructor() {\n        this.UNITS_PER_EM = 2048;\n        this.INV_UNITS_PER_EM = 1.0 / this.UNITS_PER_EM;\n        this.PANOSE_1 = '2 11 6 4 3 5 4 4 2 4';\n        this.ASCENT = 1638;\n        this.DESCENT = -410;\n        this.MISSING_HORZ = 2048;\n        this.MISSING_DATA = 'M256 0v1536h1536v-1536h-1536zM384 128h1280v1280h-1280v-1280z';\n        this.ASCENT_FUDGE = 0.9;\n        this.UNICODE = [\n            ' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<',\n            '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n            '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\n            'x', 'y', 'z', '{', '|', '}', '~', '\\u00A0', '\\u00A1', '\\u00A2', '\\u00A3', '\\u00A4', '\\u00A5', '\\u00A6', '\\u00A7', '\\u00A8', '\\u00A9', '\\u00AA',\n            '\\u00AB', '\\u00AC', '\\u00AD', '\\u00AE', '\\u00AF', '\\u00B0', '\\u00B1', '\\u00B2', '\\u00B3', '\\u00B4', '\\u00B5', '\\u00B6', '\\u00B7', '\\u00B8', '\\u00B9',\n            '\\u00BA', '\\u00BB', '\\u00BC', '\\u00BD', '\\u00BE', '\\u00BF', '\\u00C0', '\\u00C1', '\\u00C2', '\\u00C3', '\\u00C4', '\\u00C5', '\\u00C6', '\\u00C7', '\\u00C8',\n            '\\u00C9', '\\u00CA', '\\u00CB', '\\u00CC', '\\u00CD', '\\u00CE', '\\u00CF', '\\u00D0', '\\u00D1', '\\u00D2', '\\u00D3', '\\u00D4', '\\u00D5', '\\u00D6', '\\u00D7',\n            '\\u00D8', '\\u00D9', '\\u00DA', '\\u00DB', '\\u00DC', '\\u00DD', '\\u00DE', '\\u00DF', '\\u00E0', '\\u00E1', '\\u00E2', '\\u00E3', '\\u00E4', '\\u00E5', '\\u00E6',\n            '\\u00E7', '\\u00E8', '\\u00E9', '\\u00EA', '\\u00EB', '\\u00EC', '\\u00ED', '\\u00EE', '\\u00EF', '\\u00F0', '\\u00F1', '\\u00F2', '\\u00F3', '\\u00F4', '\\u00F5',\n            '\\u00F6', '\\u00F7', '\\u00F8', '\\u00F9', '\\u00FA', '\\u00FB', '\\u00FC', '\\u00FD', '\\u00FE', '\\u037E', '\\u0384', '\\u0385', '\\u0386', '\\u0387', '\\u0388',\n            '\\u0389', '\\u038A', '\\u038C', '\\u038E', '\\u038F', '\\u0390', '\\u0391', '\\u0392', '\\u0393', '\\u0394', '\\u0395', '\\u0396', '\\u0397', '\\u0398', '\\u0399',\n            '\\u039A', '\\u039B', '\\u039C', '\\u039D', '\\u039E', '\\u039F', '\\u03A0', '\\u03A1', '\\u03A3', '\\u03A4', '\\u03A5', '\\u03A6', '\\u03A7', '\\u03A8', '\\u03A9',\n            '\\u03AA', '\\u03AB', '\\u03AC', '\\u03AD', '\\u03AE', '\\u03AF', '\\u03B0', '\\u03B1', '\\u03B2', '\\u03B3', '\\u03B4', '\\u03B5', '\\u03B6', '\\u03B7', '\\u03B8',\n            '\\u03B9', '\\u03BA', '\\u03BB', '\\u03BC', '\\u03BD', '\\u03BE', '\\u03BF', '\\u03C0', '\\u03C1', '\\u03C2', '\\u03C3', '\\u03C4', '\\u03C5', '\\u03C6', '\\u03C7',\n            '\\u03C8', '\\u03C9', '\\u03CA', '\\u03CB', '\\u03CC', '\\u03CD', '\\u03CE', '\\u2202', '\\u2206', '\\u220F', '\\u2211', '\\u2212', '\\u2215', '\\u2219', '\\u221A',\n            '\\u221E', '\\u222B', '\\u2248', '\\u2260', '\\u2264', '\\u2265'\n        ];\n        this.HORIZ_ADV_X = [\n            720, 806, 940, 1676, 1302, 2204, 1488, 550, 930, 930, 1302, 1676, 745, 930, 745, 930, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302, 1302,\n            930, 930, 1676, 1676, 1676, 1117, 2048, 1400, 1404, 1430, 1578, 1295, 1177, 1588, 1539, 862, 931, 1419, 1140, 1726, 1532, 1612, 1235, 1612, 1424,\n            1400, 1262, 1499, 1400, 2025, 1403, 1260, 1403, 930, 930, 930, 1676, 1302, 1302, 1230, 1276, 1067, 1276, 1220, 720, 1276, 1296, 562, 705, 1212, 562,\n            1992, 1296, 1243, 1276, 1276, 874, 1067, 807, 1296, 1212, 1676, 1212, 1212, 1076, 1300, 930, 1300, 1676, 720, 806, 1302, 1302, 1302, 1302, 930, 1302,\n            1302, 2048, 1117, 1320, 1676, 930, 2048, 1302, 1110, 1676, 1110, 1110, 1302, 1314, 1302, 745, 1302, 1110, 1117, 1320, 2048, 2048, 2048, 1117, 1400,\n            1400, 1400, 1400, 1400, 1400, 2016, 1430, 1295, 1295, 1295, 1295, 862, 862, 862, 862, 1588, 1532, 1612, 1612, 1612, 1612, 1612, 1676, 1612, 1499,\n            1499, 1499, 1499, 1260, 1240, 1270, 1230, 1230, 1230, 1230, 1230, 1230, 1956, 1067, 1220, 1220, 1220, 1220, 562, 562, 562, 562, 1253, 1296, 1243,\n            1243, 1243, 1243, 1243, 1676, 1243, 1296, 1296, 1296, 1296, 1212, 1276, 930, 1302, 1302, 1400, 930, 1538, 1782, 1105, 1804, 1543, 1859, 562, 1400,\n            1404, 1160, 1440, 1295, 1403, 1539, 1612, 862, 1419, 1404, 1726, 1532, 1329, 1612, 1539, 1235, 1377, 1262, 1260, 1677, 1403, 1783, 1676, 862, 1260,\n            1276, 1050, 1296, 562, 1293, 1276, 1270, 1212, 1245, 1050, 937, 1296, 1278, 562, 1212, 1212, 1310, 1212, 1030, 1243, 1305, 1280, 1040, 1291, 1016,\n            1293, 1618, 1208, 1683, 1666, 562, 1293, 1243, 1293, 1666, 1302, 1489, 1676, 1489, 1676, 740, 745, 1676, 2048, 1302, 1676, 1676, 1676, 1676\n        ];\n        this.GLYPH_DATA = [\n            '',\n            'M515 1489l-26 -1079h-170l-28 1079h224zM505 0h-204v211h204v-211z',\n            'M772 1556l-43 -579h-132l-43 579h218zM386 1556l-43 -579h-132l-43 579h218z',\n            'M1481 932h-333l-92 -376h308v-135h-343l-104 -421h-129l104 421h-270l-104 -421h-129l104 421h-298v135h333l92 376h-308v135h343l105 422h129l-105 -422h270l105 422h129l-105 -422h298v-135zM1022 934h-274l-94 -380h274z',\n            'M1160 380q0 -155 -121 -257.5t-317 -121.5v-362h-118v357q-132 1 -248 25.5t-201 63.5v198h16q19 -14 68 -40.5t95 -43.5q52 -19 121.5 -35.5t148.5 -19.5v433q-40 8 -74 15.5t-63 15.5q-163 41 -234 123.5t-71 203.5q0 148 116.5 250t325.5 119v272h118v-270 q101 -2 207 -24t178 -51v-196h-14q-75 46 -156.5 81.5t-214.5 44.5v-431q30 -5 65 -13.5t61 -13.5q149 -32 230.5 -110t81.5 -213zM604 747v413q-107 -8 -180 -58.5t-73 -140.5q0 -91 54 -137t199 -77zM971 354q0 94 -58.5 137.5t-190.5 68.5v-414q120 12 184.5 61t64.5 147 z',\n            'M884 1076q0 -224 -94.5 -333t-272.5 -109q-182 0 -275 109t-93 332q0 224 95 333t273 109q181 0 274 -110t93 -331zM1575 1489l-780 -1489h-165l780 1489h165zM2055 413q0 -224 -95 -333t-273 -109q-181 0 -274 110t-93 331q0 224 94.5 333t272.5 109q182 0 275 -109 t93 -332zM706 1076q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5zM1877 413q0 172 -44.5 240t-144.5 68q-102 0 -146 -68t-44 -241t44 -240.5t146 -67.5q100 0 144.5 67.5t44.5 241.5z',\n            'M792 1191q0 95 -56.5 149.5t-144.5 54.5q-92 0 -150 -61.5t-58 -150.5q0 -75 39.5 -133t170.5 -137q98 35 148.5 102.5t50.5 175.5zM986 315l-478 466q-31 -15 -62 -39.5t-62 -66.5q-28 -39 -46 -94t-18 -124q0 -146 85.5 -235.5t242.5 -89.5q93 0 184.5 45.5 t153.5 137.5zM1287 909v-96q0 -96 -25 -216t-85 -229l378 -368h-246l-229 224q-115 -142 -235 -198.5t-247 -56.5q-208 0 -345.5 121.5t-137.5 318.5q0 92 26 159t61 116q35 47 87 88.5t105 72.5q-110 72 -158.5 145t-48.5 184q0 67 26.5 127.5t79.5 110.5q50 48 130.5 78 t177.5 30q173 0 280 -87.5t107 -221.5q0 -44 -12 -99.5t-41 -99.5q-32 -49 -91 -94t-153 -77l371 -362q14 40 21 88t8 100q2 56 1.5 125t-0.5 117h195z',\n            'M386 1556l-43 -579h-136l-43 579h222z',\n            'M783 -412h-229q-177 203 -275 443t-98 541t98 541t275 443h229v-10q-81 -73 -154.5 -168.5t-136.5 -222.5q-60 -123 -97.5 -271t-37.5 -312q0 -171 36.5 -313t98.5 -270q60 -123 137 -222.5t154 -168.5v-10z',\n            'M749 572q0 -301 -98 -541t-275 -443h-229v10q77 69 154.5 168.5t136.5 222.5q62 128 98.5 270t36.5 313q0 164 -37 312t-98 271q-63 127 -136.5 222.5t-154.5 168.5v10h229q177 -203 275 -443t98 -541z',\n            'M1137 887l-64 -110l-362 213l6 -360h-129l5 360l-361 -214l-65 110l381 207l-381 207l65 110l362 -213l-6 359h129l-7 -359l363 212l64 -110l-380 -205z',\n            'M1466 572h-545v-545h-166v545h-545v160h545v545h166v-545h545v-160z',\n            'M575 285l-282 -655h-146l174 655h254z',\n            'M777 561h-624v181h624v-181z',\n            'M492 0h-239v285h239v-285z',\n            'M860 1556l-717 -1860h-173l714 1860h176z',\n            'M1167 745q0 -401 -125.5 -588.5t-389.5 -187.5q-268 0 -391.5 190t-123.5 584q0 397 125 586.5t390 189.5q268 0 391.5 -192.5t123.5 -581.5zM904 291q35 81 47.5 190.5t12.5 263.5q0 152 -12.5 264t-48.5 190q-35 77 -95.5 116t-155.5 39q-94 0 -155.5 -39t-97.5 -118 q-34 -74 -46.5 -193t-12.5 -261q0 -156 11 -261t47 -188q33 -78 93.5 -119t160.5 -41q94 0 156 39t96 118z',\n            'M1084 0h-806v152h310v998h-310v136q63 0 135 10.5t109 30.5q46 25 72.5 63.5t30.5 103.5h155v-1342h304v-152z',\n            'M1169 0h-1008v209q105 90 210.5 180t196.5 179q192 186 263 295.5t71 236.5q0 116 -76.5 181.5t-213.5 65.5q-91 0 -197 -32t-207 -98h-10v210q71 35 189.5 64t229.5 29q229 0 359 -110.5t130 -299.5q0 -85 -21.5 -158.5t-63.5 -139.5q-39 -62 -91.5 -122t-127.5 -133 q-107 -105 -221 -203.5t-213 -182.5h801v-171z',\n            'M1038 717q48 -43 79 -108t31 -168q0 -102 -37 -187t-104 -148q-75 -70 -176.5 -103.5t-222.5 -33.5q-124 0 -244 29.5t-197 64.5v209h15q85 -56 200 -93t222 -37q63 0 134 21t115 62q46 44 68.5 97t22.5 134q0 80 -25.5 132.5t-70.5 82.5q-45 31 -109 42.5t-138 11.5h-90 v166h70q152 0 242.5 63.5t90.5 185.5q0 54 -23 94.5t-64 66.5q-43 26 -92 36t-111 10q-95 0 -202 -34t-202 -96h-10v209q71 35 189.5 64.5t229.5 29.5q109 0 192 -20t150 -64q72 -48 109 -116t37 -159q0 -124 -87.5 -216.5t-206.5 -116.5v-14q48 -8 110 -33.5t105 -63.5z ',\n            'M1203 419h-221v-419h-192v419h-713v230l721 840h184v-910h221v-160zM790 579v672l-577 -672h577z',\n            'M1157 473q0 -104 -38 -199t-104 -160q-72 -70 -171.5 -107.5t-230.5 -37.5q-122 0 -235 25.5t-191 61.5v211h14q82 -52 192 -88.5t216 -36.5q71 0 137.5 20t118.5 70q44 43 66.5 103t22.5 139q0 77 -26.5 130t-73.5 85q-52 38 -126.5 53.5t-166.5 15.5q-88 0 -169.5 -12 t-140.5 -24v767h896v-175h-703v-396q43 4 88 6t78 2q121 0 212 -20.5t167 -72.5q80 -55 124 -142t44 -218z',\n            'M1191 483q0 -227 -149.5 -370.5t-366.5 -143.5q-110 0 -200 34t-159 101q-86 83 -132.5 220t-46.5 330q0 198 42.5 351t135.5 272q88 113 227 176.5t324 63.5q59 0 99 -5t81 -18v-191h-10q-28 15 -84.5 28.5t-115.5 13.5q-215 0 -343 -134.5t-149 -363.5 q84 51 165.5 77.5t188.5 26.5q95 0 167.5 -17.5t148.5 -70.5q88 -61 132.5 -154t44.5 -226zM988 475q0 93 -27.5 154t-90.5 106q-46 32 -102 42t-117 10q-85 0 -158 -20t-150 -62q-2 -22 -3 -42.5t-1 -51.5q0 -158 32.5 -249.5t89.5 -144.5q46 -44 99.5 -64.5t116.5 -20.5 q145 0 228 88.5t83 254.5z',\n            'M1173 1266l-674 -1266h-214l717 1314h-848v175h1019v-223z',\n            'M1180 415q0 -193 -150.5 -321t-378.5 -128q-242 0 -385.5 125t-143.5 320q0 124 72 224.5t203 159.5v6q-120 64 -177.5 140t-57.5 190q0 168 138 280t351 112q223 0 356 -107t133 -272q0 -101 -63 -198.5t-185 -152.5v-6q140 -60 214 -148t74 -224zM943 1142 q0 107 -82.5 170.5t-210.5 63.5q-126 0 -206.5 -60t-80.5 -162q0 -72 40.5 -124.5t122.5 -93.5q37 -18 106.5 -47t135.5 -48q99 66 137 137t38 164zM974 396q0 92 -40.5 147.5t-158.5 111.5q-47 22 -103 41t-149 53q-90 -49 -144.5 -133t-54.5 -190q0 -135 93 -223t236 -88 q146 0 233.5 75t87.5 206z',\n            'M1167 834q0 -195 -44.5 -354t-134.5 -271q-91 -114 -228 -176t-322 -62q-52 0 -98 5.5t-82 17.5v191h10q29 -15 82 -28.5t118 -13.5q221 0 346.5 132.5t145.5 365.5q-93 -56 -175 -80t-179 -24q-92 0 -166.5 18t-149.5 70q-88 61 -132.5 155t-44.5 225q0 228 150 371 t366 143q108 0 200 -33.5t161 -100.5q85 -83 131 -213.5t46 -337.5zM965 877q0 155 -32 249t-88 146q-47 45 -101 64.5t-117 19.5q-144 0 -227.5 -90t-83.5 -253q0 -95 27 -155t91 -105q45 -31 99 -41.5t120 -10.5q78 0 158 21t150 61q1 21 2.5 41.5t1.5 52.5z',\n            'M585 832h-239v285h239v-285zM585 0h-239v285h239v-285z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M1408 77l-1154 513v124l1154 513v-180l-910 -395l910 -395v-180z',\n            'M1431 782h-1186v160h1186v-160zM1431 362h-1186v160h1186v-160z',\n            'M1422 590l-1154 -513v180l910 395l-910 395v180l1154 -513v-124z',\n            'M1005 1139q0 -98 -35 -174.5t-92 -135.5q-56 -57 -129 -107t-155 -97v-225h-179v305q65 37 140.5 81t123.5 89q58 52 90 107.5t32 141.5q0 113 -76.5 168.5t-197.5 55.5q-108 0 -204.5 -34t-152.5 -69h-10v204q70 27 177.5 48.5t203.5 21.5q215 0 339.5 -104.5 t124.5 -275.5zM610 0h-204v211h204v-211z',\n            'M1870 663q0 -139 -40.5 -269t-115.5 -237h-440l-27 116q-74 -60 -142 -92t-156 -32q-168 0 -268.5 127t-100.5 355q0 227 123 362t294 135q73 0 129 -16.5t121 -49.5v48h159v-842h243q42 75 63.5 187.5t21.5 201.5q0 164 -45.5 298t-133.5 230t-218 147.5t-295 51.5 q-160 0 -292.5 -58t-227.5 -156q-96 -98 -150.5 -234.5t-54.5 -290.5q0 -165 52 -301.5t147 -233.5q99 -101 232 -152.5t290 -51.5q86 0 177.5 11t175.5 35v-142q-97 -21 -181 -28.5t-173 -7.5q-186 0 -345 63.5t-273 177.5q-115 115 -179 276t-64 356q0 185 67 344.5 t183 276.5t275 184t340 67q196 0 350 -62t260 -174t162.5 -269.5t56.5 -350.5zM1245 408v518q-63 29 -113 41.5t-107 12.5q-129 0 -202 -90t-73 -256q0 -163 58 -246.5t181 -83.5q67 0 134 31t122 73z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-61 -19 -132.5 -32.5t-157.5 -13.5q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47 q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1458 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v1489h372q218 0 346.5 -31.5t217.5 -86.5q152 -95 237 -253t85 -375zM1251 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-186v-1149h186q143 0 249.5 21t195.5 78 q111 71 166.5 187t55.5 290z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1151 1313h-753v-420h647v-176h-647v-717h-198v1489h951v-176z',\n            'M1442 110q-122 -56 -266.5 -97.5t-279.5 -41.5q-174 0 -319 48t-247 144q-103 97 -159 242.5t-56 340.5q0 357 208.5 563.5t572.5 206.5q127 0 259.5 -30.5t285.5 -103.5v-235h-18q-31 24 -90 63t-116 65q-69 31 -156.5 51.5t-198.5 20.5q-250 0 -395.5 -160.5 t-145.5 -434.5q0 -289 152 -449.5t414 -160.5q96 0 191.5 19t167.5 49v365h-399v174h595v-639z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M746 387q0 -196 -119.5 -302t-320.5 -106q-48 0 -128 8.5t-134 20.5v185h11q41 -14 101 -29t123 -15q92 0 146.5 21t80.5 60q27 40 34.5 98t7.5 134v869h-315v158h513v-1102z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1142 0h-942v1489h198v-1313h744v-176z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1528 -365q-60 -15 -118.5 -21.5t-119.5 -6.5q-174 0 -279.5 95.5t-114.5 273.5q-24 -4 -46.5 -5.5t-43.5 -1.5q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5 q91 -100 139.5 -245t48.5 -329q0 -273 -111.5 -460t-299.5 -262q4 -114 54 -177t182 -63q41 0 97.5 12.5t80.5 22.5h27v-182zM1292 744q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1432 0h-257l-498 592h-279v-592h-198v1489h417q135 0 225 -17.5t162 -62.5q81 -51 126.5 -128.5t45.5 -196.5q0 -161 -81 -269.5t-223 -163.5zM969 1070q0 64 -22.5 113.5t-74.5 83.5q-43 29 -102 40.5t-139 11.5h-233v-562h200q94 0 164 16.5t119 61.5q45 42 66.5 96.5 t21.5 138.5z',\n            'M1282 425q0 -87 -40.5 -172t-113.5 -144q-80 -64 -186.5 -100t-256.5 -36q-161 0 -289.5 30t-261.5 89v248h14q113 -94 261 -145t278 -51q184 0 286.5 69t102.5 184q0 99 -48.5 146t-147.5 73q-75 20 -162.5 33t-185.5 33q-198 42 -293.5 143.5t-95.5 264.5 q0 187 158 306.5t401 119.5q157 0 288 -30t232 -74v-234h-14q-85 72 -223.5 119.5t-283.5 47.5q-159 0 -255.5 -66t-96.5 -170q0 -93 48 -146t169 -81q64 -14 182 -34t200 -41q166 -44 250 -133t84 -249z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891z',\n            'M1374 1489l-542 -1489h-264l-542 1489h212l467 -1310l467 1310h202z',\n            'M1933 1489l-387 -1489h-223l-313 1236l-306 -1236h-218l-394 1489h203l313 -1238l308 1238h201l311 -1250l311 1250h194z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M759 -392h-520v1948h520v-143h-346v-1662h346v-143z',\n            'M960 -304h-173l-717 1860h176z',\n            'M691 -392h-520v143h346v1662h-346v143h520v-1948z',\n            'M1490 684h-198l-455 627l-454 -629h-197l589 807h126z',\n            'M1306 -300h-1310v120h1310v-120z',\n            'M762 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5z',\n            'M1168 567q0 -140 -39.5 -252t-106.5 -188q-71 -79 -156 -118.5t-187 -39.5q-95 0 -166 22.5t-140 60.5l-12 -52h-176v1556h188v-556q79 65 168 106.5t200 41.5q198 0 312.5 -152t114.5 -429zM974 562q0 200 -66 303.5t-213 103.5q-82 0 -166 -35.5t-156 -91.5v-640 q80 -36 137.5 -50t130.5 -14q156 0 244.5 102.5t88.5 321.5z',\n            'M1011 70q-94 -45 -178.5 -70t-179.5 -25q-121 0 -222 35.5t-173 107.5q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5 q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -18.5t143 -57.5v484h188v-1556zM903 275v641q-76 34 -136 47t-131 13q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640z',\n            'M786 1374h-10q-31 9 -81 18.5t-88 9.5q-121 0 -175.5 -53.5t-54.5 -193.5v-38h339v-158h-333v-959h-188v959h-127v158h127v37q0 199 99 305.5t286 106.5q63 0 113.5 -6t92.5 -14v-172z',\n            'M1091 127q0 -284 -129 -417t-397 -133q-89 0 -173.5 12.5t-166.5 35.5v192h10q46 -18 146 -44.5t200 -26.5q96 0 159 23t98 64q35 39 50 94t15 123v102q-85 -68 -162.5 -101.5t-197.5 -33.5q-200 0 -317.5 144.5t-117.5 407.5q0 144 40.5 248.5t110.5 180.5 q65 71 158 110.5t185 39.5q97 0 162.5 -19.5t138.5 -59.5l12 48h176v-990zM903 307v609q-75 34 -139.5 48.5t-128.5 14.5q-155 0 -244 -104t-89 -302q0 -188 66 -285t219 -97q82 0 164.5 31.5t151.5 84.5z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1556h188v-563q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M387 1304h-212v195h212v-195zM375 0h-188v1117h188v-1117z',\n            'M533 1304h-212v195h212v-195zM521 -27q0 -196 -100 -296t-268 -100q-40 0 -105.5 8t-109.5 20v179h10q28 -11 75.5 -25t92.5 -14q72 0 116 20t66 60t28.5 96.5t6.5 137.5v900h-233v158h421v-1144z',\n            'M1199 0h-248l-448 489l-122 -116v-373h-188v1556h188v-998l543 559h237l-519 -516z',\n            'M375 0h-188v1556h188v-1556z',\n            'M1815 0h-188v636q0 72 -6.5 139t-27.5 107q-23 43 -66 65t-124 22q-79 0 -158 -39.5t-158 -100.5q3 -23 5 -53.5t2 -60.5v-715h-188v636q0 74 -6.5 140.5t-27.5 106.5q-23 43 -66 64.5t-124 21.5q-77 0 -154.5 -38t-154.5 -97v-834h-188v1117h188v-124q88 73 175.5 114 t186.5 41q114 0 193.5 -48t118.5 -133q114 96 208 138.5t201 42.5q184 0 271.5 -111.5t87.5 -311.5v-725z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1529h188v-117q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M1091 -412h-188v538q-87 -75 -173 -111.5t-186 -36.5q-199 0 -317.5 153.5t-118.5 423.5q0 144 41.5 254.5t109.5 185.5q66 73 155 113t188 40q90 0 159.5 -20t141.5 -59l12 48h176v-1529zM903 284v632q-78 35 -138 49t-130 14q-163 0 -248 -110.5t-85 -304.5 q0 -196 68.5 -301.5t215.5 -105.5q82 0 164 35.5t153 91.5z',\n            'M882 912h-10q-42 10 -81.5 14.5t-93.5 4.5q-87 0 -168 -38.5t-156 -99.5v-793h-188v1117h188v-165q112 90 197.5 127.5t174.5 37.5q49 0 71 -2.5t66 -9.5v-193z',\n            'M983 322q0 -153 -126.5 -251t-345.5 -98q-124 0 -227.5 29.5t-173.5 64.5v211h10q89 -67 198 -106.5t209 -39.5q124 0 194 40t70 126q0 66 -38 100t-146 58q-40 9 -104.5 21t-117.5 26q-147 39 -208.5 114.5t-61.5 185.5q0 69 28.5 130t86.5 109q56 47 142.5 74.5 t193.5 27.5q100 0 202.5 -24.5t170.5 -59.5v-201h-10q-72 53 -175 89.5t-202 36.5q-103 0 -174 -39.5t-71 -117.5q0 -69 43 -104q42 -35 136 -57q52 -12 116.5 -24t107.5 -22q131 -30 202 -103q71 -74 71 -196z',\n            'M765 10q-53 -14 -115.5 -23t-111.5 -9q-171 0 -260 92t-89 295v594h-127v158h127v321h188v-321h388v-158h-388v-509q0 -88 4 -137.5t28 -92.5q22 -40 60.5 -58.5t117.5 -18.5q46 0 96 13.5t72 22.5h10v-169z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1590 1117l-291 -1117h-174l-287 861l-285 -861h-173l-294 1117h196l205 -865l279 865h155l286 -865l194 865h189z',\n            'M1152 0h-237l-317 429l-319 -429h-219l436 557l-432 560h237l315 -422l316 422h220l-439 -550z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197z',\n            'M995 0h-902v139l651 821h-637v157h871v-134l-654 -824h671v-159z',\n            'M1113 -392h-150q-179 0 -290.5 99.5t-111.5 287.5v149q0 169 -83 264.5t-254 95.5h-51v156h51q171 0 254 95.5t83 264.5v149q0 188 111.5 287.5t290.5 99.5h150v-138h-114q-136 0 -197.5 -63t-61.5 -203v-175q0 -139 -77 -233.5t-214 -149.5v-24q137 -55 214 -149.5 t77 -233.5v-175q0 -140 61.5 -203t197.5 -63h114v-138z',\n            'M552 -392h-174v1948h174v-1948z',\n            'M1127 504h-51q-171 0 -254 -95.5t-83 -264.5v-149q0 -188 -111.5 -287.5t-290.5 -99.5h-150v138h114q136 0 197.5 63t61.5 203v175q0 139 77 233.5t214 149.5v24q-137 55 -214 149.5t-77 233.5v175q0 140 -61.5 203t-197.5 63h-114v138h150q179 0 290.5 -99.5 t111.5 -287.5v-149q0 -169 83 -264.5t254 -95.5h51v-156z',\n            'M1489 927q-2 -99 -22.5 -195t-65.5 -171q-46 -77 -111 -121t-165 -44q-94 0 -167 39.5t-157 141.5q-102 125 -148 157t-96 32q-94 0 -144 -87.5t-59 -283.5h-167q2 100 22.5 194.5t64.5 171.5q43 74 112 119.5t165 45.5q93 0 166.5 -38.5t158.5 -142.5q80 -98 131 -143.5 t112 -45.5q103 0 151.5 101t51.5 270h167z',\n            '',\n            'M505 1278h-204v211h204v-211zM515 0h-224l26 1079h170z',\n            'M1120 74q-71 -30 -161 -53.5t-194 -26.5v-355h-118v359q-227 21 -357.5 165t-130.5 394q0 242 133.5 391.5t354.5 171.5v355h118v-351q104 -3 197 -25t158 -53v-203h-11q-55 44 -142 85t-202 50v-839q120 10 206.5 52.5t137.5 83.5h11v-201zM647 142v834 q-135 -20 -216 -125t-81 -294q0 -181 76 -286t221 -129z',\n            'M1163 0h-1026v207q118 32 169.5 126.5t51.5 279.5h-176v138h176v310q0 200 126.5 328.5t331.5 128.5q105 0 181 -17t140 -34v-206h-10q-62 42 -138 66t-162 24q-140 0 -209.5 -82.5t-69.5 -226.5v-291h415v-138h-415v-61q0 -126 -62 -219.5t-160 -150.5v-11h837v-171z ',\n            'M1168 257l-110 -110l-236 234q-44 -26 -81 -37t-89 -11q-46 0 -89.5 12.5t-79.5 35.5l-236 -236l-109 113l233 234q-23 37 -35 81.5t-12 87.5q0 52 11 88.5t37 79.5l-234 237l111 110l235 -235q36 23 79.5 35.5t88.5 12.5q44 0 88 -12t81 -35l234 234l113 -109l-235 -237 q24 -38 36 -79.5t12 -89.5q0 -45 -12.5 -89t-35.5 -80zM832 661q0 73 -52.5 129t-127.5 56q-73 0 -126.5 -55t-53.5 -130q0 -74 52.5 -129.5t127.5 -55.5q73 0 126.5 54.5t53.5 130.5z',\n            'M1191 1489l-448 -831v-94h372v-138h-370v-426h-188v426h-370v138h372v73l-451 852h212l332 -659l336 659h203z',\n            'M552 758h-174v798h174v-798zM552 -392h-174v798h174v-798z',\n            'M1128 601q0 -106 -59 -187t-158 -136v-7q97 -46 141 -118.5t44 -162.5q0 -77 -33 -146t-98 -119q-72 -56 -169 -83t-221 -27q-87 0 -170.5 13.5t-175.5 44.5v194h10q79 -37 169 -62t198 -25q134 0 215 48.5t81 135.5q0 56 -19.5 88.5t-64.5 57.5q-41 23 -113 41.5 t-154 38.5q-214 52 -296 133q-83 81 -83 210q0 98 57 182.5t159 141.5v7q-101 48 -143 121t-42 162q0 81 32 146.5t99 117.5q64 50 163.5 79t227.5 29q87 0 171 -14t175 -43v-194h-10q-58 27 -152.5 57t-215.5 30q-127 0 -211.5 -46t-84.5 -133q0 -57 21.5 -92.5t64.5 -58.5 t109 -41.5t157 -39.5q200 -46 290 -125q89 -79 89 -218zM881 399q28 33 43 65.5t15 90.5q0 51 -16.5 86t-45.5 58q-28 24 -67 39.5t-83 27.5q-39 11 -85.5 21.5t-116.5 30.5q-18 -9 -49 -31.5t-53 -46.5q-24 -26 -43 -69t-19 -92q0 -50 15.5 -85t44.5 -59q27 -23 67.5 -39 t84.5 -27q38 -10 86 -22t115 -31q20 11 53 34.5t54 48.5z',\n            'M958 1304h-199v195h199v-195zM545 1304h-199v195h199v-195z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1375 258 q-86 -39 -165.5 -58.5t-157.5 -19.5q-227 0 -359 123t-132 357q0 225 134.5 354t356.5 129q89 0 175 -24t148 -52v-181h-16q-54 40 -138.5 75t-173.5 35q-142 0 -221.5 -85.5t-79.5 -250.5q0 -159 76.5 -246t224.5 -87q83 0 161.5 29t150.5 81h16v-179z',\n            'M944 554h-170v94q-28 -20 -52.5 -38.5t-68.5 -37.5q-45 -20 -85.5 -30.5t-113.5 -10.5q-128 0 -215.5 85t-87.5 217q0 106 46.5 173.5t123.5 103.5q78 36 197.5 51.5t255.5 21.5v18q0 53 -18 85t-51 51q-34 18 -77.5 23t-91.5 5q-84 0 -168 -24t-123 -38h-14v172 q45 13 137 29t169 16q217 0 312 -84.5t95 -243.5v-638zM774 796v245q-69 -4 -160.5 -12t-145.5 -23q-64 -18 -103 -56.5t-39 -106.5q0 -76 45.5 -114t139.5 -38q82 0 147.5 33.5t115.5 71.5z',\n            'M1146 191l-528 419v85l528 418v-188l-357 -273l357 -273v-188zM716 162l-550 446v89l550 445v-196l-371 -294l371 -294v-196z',\n            'M1456 57h-171v545h-1075v160h1246v-705z',\n            'M777 561h-624v181h624v-181z',\n            'M1889 655q0 -358 -253.5 -611.5t-611.5 -253.5t-611.5 253.5t-253.5 611.5t253.5 611.5t611.5 253.5t611.5 -253.5t253.5 -611.5zM1773 655q0 310 -219.5 532t-529.5 222t-529.5 -222t-219.5 -532t219.5 -532t529.5 -222t529.5 222t219.5 532zM1581 215h-223l-331 355 h-162v-355h-165v915h312q94 0 155 -8t120 -39q63 -34 92.5 -82.5t29.5 -121.5q0 -97 -56.5 -161.5t-155.5 -102.5zM1229 868q0 36 -14 64t-47 46q-31 17 -66 22t-88 5h-149v-309h127q62 0 107 9.5t74 32.5q31 25 43.5 55t12.5 75z',\n            'M1306 1668h-1305l-5 120h1310v-120z',\n            'M956 1116q0 -168 -116 -284t-285 -116t-285 115.5t-116 284.5q0 168 116 284t285 116q170 0 285.5 -116t115.5 -284zM791 1116q0 102 -67 171.5t-169 69.5t-169 -69.5t-67 -171.5q0 -104 68.5 -172.5t167.5 -68.5q102 0 169 70t67 171z',\n            'M1461 179h-1246v158h540v422h-540v158h540v545h166v-545h540v-158h-540v-422h540v-158z',\n            'M967 566h-760v156q100 62 183.5 117t134.5 96q131 103 168 154.5t37 135.5q0 69 -53.5 107t-143.5 38q-89 0 -175 -30.5t-134 -61.5h-13v180q71 26 158.5 43.5t174.5 17.5q180 0 273.5 -78.5t93.5 -203.5q0 -99 -48.5 -174.5t-163.5 -165.5q-55 -43 -132.5 -94 t-143.5 -92h544v-145z',\n            'M956 817q0 -75 -33 -131.5t-89 -90.5q-57 -35 -131 -51.5t-163 -16.5q-94 0 -176.5 15t-156.5 43v179h14q41 -36 138.5 -65.5t190.5 -29.5q100 0 166.5 35.5t66.5 110.5q0 85 -59 115t-171 30h-143v141h128q112 0 165.5 38.5t53.5 106.5q0 61 -49.5 96.5t-153.5 35.5 q-77 0 -174.5 -31t-141.5 -67h-14v178q74 27 160.5 44.5t176.5 17.5q175 0 271.5 -68t96.5 -174q0 -89 -55 -146t-144 -83v-8q95 -17 160.5 -72.5t65.5 -151.5z',\n            'M963 1676l-273 -374h-149l179 374h243z',\n            'M1124 0h-178l-10 118q-59 -65 -123.5 -102t-155.5 -37q-86 0 -149.5 35t-129.5 99v-525h-188v1529h188v-838q32 -39 109.5 -80t168.5 -41q93 0 159.5 33.5t120.5 93.5v832h188v-1117z',\n            'M1106 -363h-148v1722h-214v-1722h-149v956q-206 5 -332 129t-126 328q0 207 130 323t373 116h466v-1852z',\n            'M492 511h-239v283h239v-283z',\n            'M880 -89q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 29 -3 65.5t-6 61.5h153q2 -19 5 -45t3 -64z',\n            'M914 566h-615v122h234v568h-242v112q45 0 99 6.5t84 18.5q37 16 59 38t25 62h135v-805h221v-122z',\n            'M996 1025q0 -235 -122 -364.5t-315 -129.5q-201 0 -319.5 132.5t-118.5 361.5t118.5 362t319.5 133q193 0 315 -130t122 -365zM814 1025q0 172 -67.5 258t-187.5 86q-122 0 -189 -87t-67 -257t67 -256.5t189 -86.5q120 0 187.5 85.5t67.5 257.5z',\n            'M1154 608l-550 -446v196l371 294l-371 294v196l550 -445v-89zM702 610l-528 -419v188l357 273l-357 273v188l528 -418v-85z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1857 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1548 353v400l-353 -400h353z',\n            'M545 565h-165v681h-209v117q102 0 165 22t72 108h137v-928zM1410 1489l-780 -1489h-165l780 1489h165zM1955 0h-688v148q91 69 158 121t106 89q109 103 141 157.5t32 136.5q0 70 -44 107t-120 37q-70 0 -141.5 -30t-112.5 -62h-15v179q65 27 140.5 44t152.5 17 q157 0 241.5 -79t84.5 -201q0 -93 -41 -167t-147 -168q-49 -43 -119.5 -96t-125.5 -94h498v-139z',\n            'M793 826q0 -71 -30 -127t-78 -90q-53 -37 -114.5 -53t-140.5 -16q-82 0 -153.5 15t-136.5 43v175h17q37 -35 114 -64.5t156 -29.5q84 0 139 36.5t55 108.5q0 83 -50 112.5t-141 29.5h-140v139h125q87 0 134.5 38t47.5 104q0 60 -41 95.5t-128 35.5q-66 0 -142.5 -31 t-113.5 -66h-17v175q64 27 139 44t154 17q152 0 237 -70t85 -168q0 -87 -48.5 -143.5t-125.5 -82.5v-8q80 -16 138.5 -70.5t58.5 -148.5zM1500 1489l-780 -1489h-165l780 1489h165zM1913 220h-163v-220h-150v220h-465v185l466 539h149v-591h163v-133zM1604 353v400 l-353 -400h353z',\n            'M712 1278h-204v211h204v-211zM958 40q-83 -30 -176 -50t-205 -20q-215 0 -339.5 104.5t-124.5 275.5q0 98 34.5 173t93.5 137q58 62 136.5 112.5t146.5 91.5v225h179v-305q-60 -33 -139 -81.5t-125 -88.5q-54 -47 -88 -109t-34 -140q0 -113 76.5 -168.5t197.5 -55.5 q103 0 201.5 33t155.5 70h10v-204z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM862 1675h-149l-273 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM955 2049l-273 -374h-149l179 374h243z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1033 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1119 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5 t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM1005 1677h-199v195h199v-195zM592 1677h-199v195h199v-195z',\n            'M1374 0h-211l-148 415h-640l-148 -415h-201l519 1407q-89 44 -142.5 123.5t-53.5 181.5q0 143 102 240t248 97q147 0 248.5 -97t101.5 -240q0 -100 -52.5 -181.5t-141.5 -123.5zM899 1710q0 86 -57 143.5t-143 57.5t-143 -58t-57 -143q0 -86 57.5 -143.5t142.5 -57.5 q86 0 143 57.5t57 143.5zM953 585l-258 715l-259 -715h517z',\n            'M1901 0h-944v556h-524l-212 -556h-207l594 1489h1293v-176h-749v-408h749v-176h-749v-553h749v-176zM957 723v601h-219l-239 -601h458z',\n            'M1350 108q-55 -24 -99.5 -45t-116.5 -44q-11 -3 -24 -7.5t-31 -7.5q2 -19 3.5 -44.5t1.5 -48.5q0 -162 -93.5 -248t-240.5 -86q-38 0 -97.5 7t-104.5 19v162h9q26 -10 71.5 -24t95.5 -14q106 0 155 40t49 126q0 19 -1 41.5t-3 42.5q-19 -2 -40.5 -3t-39.5 -1 q-162 0 -294.5 45.5t-230.5 142.5q-96 95 -150 241.5t-54 340.5q0 184 52 329t150 245q95 97 229.5 148t298.5 51q120 0 239.5 -29t265.5 -102v-235h-15q-123 103 -244 150t-259 47q-113 0 -203.5 -36.5t-161.5 -113.5q-69 -75 -107.5 -189.5t-38.5 -264.5q0 -157 42.5 -270 t109.5 -184q70 -74 163.5 -109.5t197.5 -35.5q143 0 268 49t234 147h14v-232z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM822 1675h-149l-273 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM993 2049l-273 -374h-149l179 374h243z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1031 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM1038 1677h-199v195h199v-195zM625 1677h-199v195h199v-195z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM568 1675h-149l-273 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM725 2049l-273 -374h-149l179 374h243z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM776 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1468 743q0 -203 -88.5 -368t-235.5 -256q-102 -63 -227.5 -91t-330.5 -28h-376v740h-196v143h196v606h372q218 0 347 -31.5t217 -86.5q152 -95 237 -253t85 -375zM1261 746q0 175 -61 295t-182 189q-88 50 -187 69.5t-237 19.5h-188v-436h361v-143h-361v-570h188 q143 0 249.5 21t195.5 78q111 71 166.5 187t55.5 290z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489zM1208 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5 q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM932 1675h-149l-273 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1083 2049l-273 -374h-149l179 374h243z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1136 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1207 1992q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228 t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1307 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1289 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1108 1677h-199v195h199v-195zM695 1677h-199v195h199v-195z',\n            'M1385 216l-111 -111l-436 440l-436 -440l-111 111l440 436l-440 436l111 111l436 -440l436 440l111 -111l-440 -436z',\n            'M1498 744q0 -184 -49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-115 0 -215.5 29t-179.5 84l-159 -228h-132l205 294q-101 100 -155.5 250t-54.5 346q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q118 0 215 -27.5t179 -82.5l142 201h132 l-188 -268q101 -100 156.5 -248.5t55.5 -350.5zM1097 1260q-57 46 -129 68.5t-161 22.5q-110 0 -200 -38.5t-156 -116.5q-64 -76 -98.5 -190.5t-34.5 -261.5q0 -140 29.5 -252t87.5 -188zM1295 744q0 139 -30 253t-88 189l-664 -957q60 -45 132.5 -68t161.5 -23 q110 0 201.5 40t153.5 116q67 82 100 194.5t33 255.5z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM932 1675h-149l-273 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1073 2049l-273 -374h-149l179 374h243z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1084 1670h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1321 598q0 -162 -35.5 -282.5t-116.5 -200.5q-77 -76 -180 -111t-240 -35q-140 0 -244 37t-175 109q-81 82 -116.5 198t-35.5 285v891h198v-901q0 -121 16.5 -191t55.5 -127q44 -65 119.5 -98t181.5 -33q107 0 182 32.5t120 98.5q39 57 55.5 130.5t16.5 182.5v906h198 v-891zM1056 1677h-199v195h199v-195zM643 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM935 2049l-273 -374h-149l179 374h243z',\n            'M1174 787q0 -92 -35 -176.5t-95 -141.5q-78 -75 -187.5 -111t-260.5 -36h-198v-322h-198v1489h198v-270h205q133 0 230 -22.5t164 -66.5q83 -53 130 -138t47 -205zM968 782q0 72 -26 125.5t-82 88.5q-48 30 -112 42.5t-154 12.5h-196v-563h167q119 0 195 20.5t123 65.5 q44 41 64.5 92t20.5 116z',\n            'M1165 481q0 -214 -135.5 -359.5t-354.5 -145.5q-44 0 -101.5 7.5t-93.5 20.5v165h10q42 -24 91.5 -33t105.5 -9q74 0 129 29t88 78q35 52 50.5 115.5t15.5 139.5q0 166 -105.5 250.5t-303.5 84.5v150q157 0 234 59.5t77 188.5q0 35 -11 68t-41 64q-27 29 -71 46.5 t-105 17.5q-57 0 -103 -14.5t-86 -53.5q-37 -36 -59.5 -102t-22.5 -161v-1087h-188v1080q0 124 36 215.5t100 153.5q60 58 149.5 87.5t183.5 29.5q183 0 297.5 -87t114.5 -238q0 -112 -71 -201t-184 -121v-9q164 -37 259 -148.5t95 -280.5z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM738 1302h-149l-273 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM934 1676l-273 -374h-149l179 374h243z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM961 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5 q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM926 1304h-199v195h199v-195zM513 1304h-199v195h199v-195z',\n            'M1053 0h-187v119q-25 -17 -67.5 -47.5t-82.5 -48.5q-47 -23 -108 -38.5t-143 -15.5q-151 0 -256 100t-105 255q0 127 54.5 205.5t155.5 123.5q102 45 245 61t307 24v29q0 64 -22.5 106t-64.5 66q-40 23 -96 31t-117 8q-74 0 -165 -19.5t-188 -56.5h-10v191q55 15 159 33 t205 18q118 0 205.5 -19.5t151.5 -66.5q63 -46 96 -119t33 -181v-758zM866 275v311q-86 -5 -202.5 -15t-184.5 -29q-81 -23 -131 -71.5t-50 -133.5q0 -96 58 -144.5t177 -48.5q99 0 181 38.5t152 92.5zM956 1630q0 -143 -102 -242t-248 -99q-144 0 -247 98.5t-103 242.5 q0 143 102 241t248 98q147 0 248.5 -98t101.5 -241zM811 1630q0 86 -58.5 145.5t-146.5 59.5t-146.5 -59t-58.5 -146t59 -146t146 -59q88 0 146.5 59t58.5 146z',\n            'M1855 559h-819q0 -114 30 -195t85 -133q52 -48 123 -70.5t157 -22.5q111 0 217.5 41.5t172.5 93.5h12v-205q-78 -35 -184.5 -64.5t-215.5 -29.5q-166 0 -284.5 52t-194.5 155q-21 -19 -67 -59t-96 -68q-63 -36 -137 -59.5t-189 -23.5q-150 0 -255.5 97t-105.5 249 q0 124 54 200.5t155 118.5q95 39 241 53t308 17v61q0 65 -23 107.5t-64 65.5q-40 23 -96 31.5t-116 8.5q-79 0 -168.5 -21t-179.5 -57h-13v191q55 15 158 34t204 19q159 0 264.5 -46.5t162.5 -137.5q69 82 170 134t226 52q217 0 342.5 -128t125.5 -379v-82zM1673 703 q-5 68 -23.5 119t-50.5 88q-34 39 -88.5 61t-133.5 22q-133 0 -223 -75t-115 -215h634zM894 298q-20 53 -30.5 119t-10.5 141q-105 -3 -201 -7.5t-178 -25.5q-79 -20 -127.5 -65.5t-48.5 -128.5q0 -95 58 -141t176 -46q99 0 195.5 43t166.5 111z',\n            'M1011 70q-33 -15 -71.5 -30.5t-67.5 -24.5q3 -19 5.5 -47.5t2.5 -56.5q0 -162 -91.5 -248t-237.5 -86q-37 0 -95 7t-103 19v160h9q26 -10 70 -23t94 -13q104 0 153 39t49 127q0 22 -1.5 45t-3.5 43q-16 -2 -30.5 -4t-39.5 -2q-121 0 -222 35.5t-173 107.5 q-73 72 -113 182t-40 257q0 274 150.5 430t397.5 156q96 0 188.5 -27t169.5 -66v-209h-10q-86 67 -177.5 103t-178.5 36q-160 0 -252.5 -107.5t-92.5 -315.5q0 -202 90.5 -310.5t254.5 -108.5q57 0 116 15t106 39q41 21 77 44.5t57 40.5h10v-207z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM759 1302h-149l-273 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM960 1676l-273 -374h-149l179 374h243z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM986 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1120 539h-823q0 -103 31 -179.5t85 -125.5q52 -48 123.5 -72t157.5 -24q114 0 229.5 45.5t164.5 89.5h10v-205q-95 -40 -194 -67t-208 -27q-278 0 -434 150.5t-156 427.5q0 274 149.5 435t393.5 161q226 0 348.5 -132t122.5 -375v-102zM937 683q-1 148 -74.5 229 t-223.5 81q-151 0 -240.5 -89t-101.5 -221h640zM951 1304h-199v195h199v-195zM538 1304h-199v195h199v-195z',\n            'M375 0h-188v1117h188v-1117zM401 1302h-149l-273 374h243z',\n            'M375 0h-188v1117h188v-1117zM582 1676l-273 -374h-149l179 374h243z',\n            'M572 1297h-151l-143 267l-142 -267h-147l178 379h227zM375 0h-188v1117h188v-1117z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1137 637q0 -324 -142 -496t-383 -172q-229 0 -367.5 135t-138.5 380q0 226 137 358t339 132q108 0 185.5 -26.5t163.5 -79.5q-32 112 -99.5 219t-154.5 181l-264 -162l-66 97l237 142q-84 67 -156 107.5t-165 87.5v16h295q35 -25 84 -58.5t86 -59.5l210 128l66 -97 l-186 -109q153 -147 236 -325.5t83 -397.5zM847 226q49 59 75 143.5t26 234.5q0 32 -1.5 59.5t-3.5 57.5q-75 45 -157.5 66.5t-168.5 21.5q-147 0 -231.5 -87.5t-84.5 -239.5q0 -180 84.5 -267t227.5 -87q66 0 127.5 22t106.5 76z',\n            'M1119 0h-188v636q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-725zM1075 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5 t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M732 1302h-149l-273 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M933 1676l-273 -374h-149l179 374h243z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M963 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M1038 1619q-11 -152 -77 -229t-177 -77q-54 0 -100 19.5t-87 56.5q-47 43 -79.5 64.5t-71.5 21.5q-52 0 -78 -45t-30 -121h-131q8 151 79 228t174 77q50 0 96.5 -19.5t88.5 -55.5q47 -41 83.5 -61.5t69.5 -20.5q51 0 79.5 46t31.5 116h129z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M928 1304h-199v195h199v-195zM515 1304h-199v195h199v-195z',\n            'M957 1022h-238v275h238v-275zM1466 572h-1256v160h1256v-160zM957 7h-238v275h238v-275z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-84 0 -155.5 21t-130.5 60l-133 -198h-110l171 256q-75 77 -116.5 190t-41.5 260q0 273 139.5 431.5t376.5 158.5q87 0 158 -22t125 -57l116 172h111l-155 -231q76 -76 118 -188t42 -264zM813 930q-37 29 -86.5 43.5t-104.5 14.5 q-155 0 -240 -110t-85 -320q0 -97 17 -171t52 -128zM946 558q0 97 -17.5 173t-51.5 130l-448 -671q39 -31 86.5 -46t106.5 -15q150 0 237 108.5t87 320.5z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM764 1302h-149l-273 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM945 1676l-273 -374h-149l179 374h243z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM985 1297h-159l-185 256l-184 -256h-155l228 379h227z',\n            'M1111 0h-188v124q-95 -75 -182 -115t-192 -40q-176 0 -274 107.5t-98 315.5v725h188v-636q0 -85 8 -145.5t34 -103.5q27 -44 70 -64t125 -20q73 0 159.5 38t161.5 97v834h188v-1117zM955 1304h-199v195h199v-195zM542 1304h-199v195h199v-195z',\n            'M1151 1117l-652 -1529h-201l208 466l-445 1063h204l343 -828l346 828h197zM928 1676l-273 -374h-149l179 374h243z',\n            'M1168 572q0 -136 -39 -248.5t-110 -190.5q-66 -74 -155.5 -114.5t-189.5 -40.5q-87 0 -157.5 19t-143.5 59v-468h-188v1968h188v-556q75 63 168.5 105.5t199.5 42.5q202 0 314.5 -152.5t112.5 -423.5zM974 567q0 202 -69 302t-212 100q-81 0 -163 -35t-157 -92v-633 q80 -36 137.5 -49t130.5 -13q157 0 245 106t88 314z',\n            'M585 832h-239v285h239v-285zM658 285l-282 -655h-146l174 655h254z',\n            'M773 1676l-49 -384h-145l-49 384h243z',\n            'M765 1676l-49 -384h-128l-49 384h226zM1048 1304h-191v195h191v-195zM447 1304h-191v195h191v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523zM250 1489l-49 -384h-145l-49 384h243z',\n            'M585 832h-239v285h239v-285z',\n            'M1424 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1582 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489zM243 1489l-49 -384h-145l-49 384h243z',\n            'M968 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1501 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1483 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1537 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM243 1489l-49 -384h-145l-49 384h243z',\n            'M1751 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174zM243 1489l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM379 1676l-56 -384h-84l-56 384h196zM615 1304h-171v195h171v-195zM118 1304h-171v195h171v-195z',\n            'M1374 0h-211l-146 415h-644l-146 -415h-201l542 1489h264zM956 585l-261 731l-262 -731h523z',\n            'M1323 458q0 -111 -42 -196t-113 -140q-84 -66 -184.5 -94t-255.5 -28h-528v1489h441q163 0 244 -12t155 -50q82 -43 119 -110.5t37 -161.5q0 -106 -54 -180.5t-144 -119.5v-8q151 -31 238 -132.5t87 -256.5zM990 1129q0 54 -18 91t-58 60q-47 27 -114 33.5t-166 6.5h-236 v-430h256q93 0 148 9.5t102 39.5t66.5 77.5t19.5 112.5zM1117 450q0 90 -27 143t-98 90q-48 25 -116.5 32.5t-166.5 7.5h-311v-554h262q130 0 213 13.5t136 49.5q56 39 82 89t26 129z',\n            'M1162 1313h-764v-1313h-198v1489h962v-176z',\n            'M1414 0h-1388l562 1489h264zM1147 168l-432 1147l-431 -1147h863z',\n            'M1181 0h-981v1489h981v-176h-783v-408h783v-176h-783v-553h783v-176z',\n            'M1288 0h-1162v184l913 1129h-879v176h1106v-179l-922 -1134h944v-176z',\n            'M1339 0h-198v729h-743v-729h-198v1489h198v-584h743v584h198v-1489z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5zM1120 713h-627v179h627v-179z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152z',\n            'M1397 0h-257l-589 663l-148 -158v-505h-198v1489h198v-777l723 777h240l-665 -700z',\n            'M1378 0h-213l-468 1285l-468 -1285h-203l556 1489h240z',\n            'M1526 0h-198v1283l-414 -873h-118l-411 873v-1283h-185v1489h270l397 -829l384 829h275v-1489z',\n            'M1336 0h-245l-706 1332v-1332h-185v1489h307l644 -1216v1216h185v-1489z',\n            'M1215 1313h-1101v176h1101v-176zM1163 729h-997v176h997v-176zM1215 0h-1101v176h1101v-176z',\n            'M1310 1318q91 -100 139.5 -245t48.5 -329t-49.5 -329.5t-138.5 -242.5q-92 -101 -217.5 -152t-286.5 -51q-157 0 -285.5 52t-218.5 151t-138.5 243t-48.5 329q0 182 48 326.5t140 247.5q88 98 218.5 150t284.5 52q160 0 287.5 -52.5t216.5 -149.5zM1292 744 q0 290 -130 447.5t-355 157.5q-227 0 -356.5 -157.5t-129.5 -447.5q0 -293 132 -448.5t354 -155.5t353.5 155.5t131.5 448.5z',\n            'M1339 0h-198v1313h-743v-1313h-198v1489h1139v-1489z',\n            'M1174 1039q0 -99 -34.5 -183.5t-96.5 -146.5q-77 -77 -182 -115.5t-265 -38.5h-198v-555h-198v1489h404q134 0 227 -22.5t165 -70.5q85 -57 131.5 -142t46.5 -215zM968 1034q0 77 -27 134t-82 93q-48 31 -109.5 44.5t-155.5 13.5h-196v-595h167q120 0 195 21.5t122 68.5 q47 48 66.5 101t19.5 119z',\n            'M1280 0h-1162v184l620 600l-600 526v179h1096v-176h-832l586 -506v-26l-630 -605h922v-176z',\n            'M1262 1313h-532v-1313h-198v1313h-532v176h1262v-176z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211z',\n            'M1572 755q0 -140 -44.5 -248.5t-123.5 -181.5q-85 -79 -207 -125.5t-260 -49.5v-166h-197v166q-134 3 -257 48t-210 127q-79 74 -123.5 182t-44.5 248q0 136 43 238t119 178q81 81 202.5 128t270.5 51v155h197v-155q148 -3 271 -52t202 -127q75 -73 118.5 -177t43.5 -239 zM1366 763q0 99 -32 182t-91 140q-58 56 -129 82t-177 28v-890q94 2 171 30.5t127 75.5q65 60 98 147t33 205zM740 305v890q-106 -1 -177 -28t-129 -82t-90.5 -140t-32.5 -182q0 -112 33.5 -203t97.5 -149q49 -45 126.5 -75t171.5 -31z',\n            'M1336 1489l-514 -736l513 -753h-229l-406 613l-416 -613h-216l519 744l-507 745h228l401 -605l410 605h217z',\n            'M1604 910q0 -157 -40.5 -264.5t-117.5 -174.5q-80 -69 -192.5 -104t-263.5 -45v-322h-197v322q-154 11 -267 47t-188 102q-78 69 -118.5 176t-40.5 263v579h198v-602q0 -109 29.5 -180t81.5 -115q53 -45 130 -68.5t175 -30.5v996h197v-996q97 8 175 30.5t131 68.5 q56 49 83 115.5t27 179.5v602h198v-579z',\n            'M1568 0h-576v387q60 38 119.5 82t103.5 101q45 59 71 138.5t26 185.5q0 206 -127 330.5t-347 124.5t-347 -124.5t-127 -330.5q0 -106 26 -185.5t71 -138.5q45 -57 104 -101t119 -82v-387h-576v174h410v124q-157 90 -258.5 246t-101.5 350q0 276 187.5 451t492.5 175 t492.5 -175t187.5 -451q0 -194 -101.5 -350t-258.5 -246v-124h410v-174z',\n            'M725 0h-588v152h195v1185h-195v152h588v-152h-195v-1185h195v-152zM738 1677h-199v195h199v-195zM325 1677h-199v195h199v-195z',\n            'M1254 1489l-524 -836v-653h-198v632l-526 857h219l407 -666l411 666h211zM939 1677h-199v195h199v-195zM526 1677h-199v195h199v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5zM743 1676l-49 -384h-145l-49 384h243z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206zM721 1676 l-49 -384h-145l-49 384h243z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137zM802 1676l-49 -384h-145l-49 384h243z',\n            'M375 0h-188v1117h188v-1117zM403 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM760 1676l-49 -384h-128l-49 384h226zM1043 1304h-191 v195h191v-195zM442 1304h-191v195h191v-195z',\n            'M1091 0h-188v117q-81 -70 -169 -109t-191 -39q-200 0 -317.5 154t-117.5 427q0 142 40.5 253t109.5 189q68 76 158.5 116t187.5 40q88 0 156 -22t143 -61v52h188v-1117zM903 275v636q-76 34 -136 49.5t-131 15.5q-158 0 -246 -110t-88 -312q0 -199 68 -302.5t218 -103.5 q80 0 162 35.5t153 91.5z',\n            'M1165 444q0 -202 -134.5 -334t-339.5 -132q-79 0 -167 22t-151 64v-476h-188v1490q0 224 126.5 351t349.5 127q90 0 164.5 -21.5t133.5 -67.5q57 -43 91 -112t34 -160q0 -127 -69.5 -221.5t-196.5 -131.5v-17q159 -26 253 -125.5t94 -255.5zM971 449q0 89 -34.5 144.5 t-92.5 86.5q-59 32 -132 43t-146 11h-36v160h36q66 0 131 14.5t104 44.5q46 34 68.5 83t22.5 134q0 112 -69 170t-178 58q-73 0 -125 -26.5t-85 -70.5q-32 -44 -47 -102.5t-15 -120.5v-862q66 -38 141 -53.5t147 -15.5q149 0 229.5 78.5t80.5 223.5z',\n            'M1151 1117l-457 -1061v-468h-188v468l-445 1061h204l343 -828l346 828h197z',\n            'M1139 551q0 -272 -138.5 -427t-376.5 -155q-241 0 -379.5 151.5t-138.5 413.5q0 141 43 239.5t107 162.5q69 72 159 113t182 58q-76 63 -166 130.5t-192 139.5v179h810v-158h-561v-10q68 -46 179 -124t204 -162q150 -136 209 -261.5t59 -289.5zM945 551q0 135 -55 249 t-165 200q-66 -8 -138.5 -32t-138.5 -77q-63 -50 -105.5 -137t-42.5 -214q0 -201 85 -305t241 -104q153 0 236 105.5t83 314.5z',\n            'M1006 64q-107 -48 -210 -69t-218 -21q-79 0 -161 16t-152 56q-69 39 -112.5 102.5t-43.5 157.5q0 96 56.5 168t177.5 110v7q-91 24 -145 90t-54 158q0 89 47.5 147.5t112.5 92.5q64 33 145 49t160 16q98 0 180 -16.5t172 -44.5v-207h-13q-66 51 -163.5 79t-197.5 28 q-45 0 -84 -5.5t-81 -25.5q-35 -15 -60.5 -48.5t-25.5 -77.5q0 -61 28 -95t76 -49q45 -14 97 -15.5t105 -1.5h111v-166h-158q-62 0 -112 -4.5t-92 -21.5q-41 -17 -65.5 -54t-24.5 -96q0 -53 26 -90t67 -58q37 -19 87.5 -29t106.5 -10q102 0 218 36t187 98h13v-206z',\n            'M922 75q32 -40 46 -85.5t14 -85.5q0 -84 -45 -168.5t-112 -147.5h-179v14q90 79 128 138.5t38 128.5q0 57 -30.5 95t-77.5 38h-145q-229 0 -340 116t-111 345q0 140 46 268t124 247q75 112 173.5 214.5t206.5 196.5v9h-460v158h744v-135q-117 -78 -231.5 -181 t-204.5 -223q-89 -117 -146 -257t-57 -283q0 -34 3 -70t15 -76q10 -38 34.5 -75.5t63.5 -61.5q36 -22 96.5 -24.5t116.5 -2.5h86q71 0 122 -26t82 -66z',\n            'M1119 -412h-188v1048q0 77 -9 144.5t-33 105.5q-25 42 -72 62.5t-122 20.5q-77 0 -161 -38t-161 -97v-834h-188v1117h188v-124q88 73 182 114t193 41q181 0 276 -109t95 -314v-1137z',\n            'M1141 768q0 -190 -23 -316.5t-59 -210.5q-58 -135 -163 -203.5t-257 -68.5t-257 68.5t-163 203.5q-37 84 -59.5 210.5t-22.5 316.5q0 174 22.5 305.5t60.5 214.5q57 130 162.5 199t256.5 69t256.5 -69t162.5 -199q37 -84 60 -215t23 -305zM952 858q-4 143 -28.5 250 t-56.5 161q-41 70 -95 98.5t-133 28.5t-133 -28.5t-95 -98.5q-34 -55 -57.5 -161.5t-27.5 -249.5h626zM952 697h-626q0 -142 23 -258.5t59 -178.5q40 -69 96 -100t135 -31t135 31t96 100q36 62 59 178.5t23 258.5z',\n            'M375 0h-188v1117h188v-1117z',\n            'M1192 0h-248l-451 489l-112 -109v-380h-188v1117h188v-550l384 417q72 79 135.5 107t126.5 28q28 0 58 -1t37 -1v-166h-11q-16 2 -39.5 3t-36.5 1q-47 0 -85.5 -23.5t-67.5 -56.5l-251 -271z',\n            'M1151 0h-205l-328 829l-361 -829h-196l465 1056l-215 500h211z',\n            'M1125 0h-186v118q-74 -78 -141.5 -108.5t-145.5 -30.5q-75 0 -135 27t-144 107v-525h-188v1529h188v-838q32 -39 111 -80t170 -41q93 0 161 33.5t122 93.5v832h188v-1117z',\n            'M1151 1117l-452 -1117h-189l-449 1117h204l346 -889l343 889h197z',\n            'M1041 -96q0 -85 -45.5 -169t-111.5 -147h-180v14q92 79 129.5 139t37.5 128q0 55 -29 94t-75 39h-140q-140 0 -232.5 27t-155.5 84q-66 60 -100.5 135.5t-34.5 163.5q0 78 25 144t73 119q44 49 112.5 83.5t144.5 53.5v11q-125 28 -200 110.5t-75 186.5q0 83 43.5 150.5 t133.5 125.5v6h-228v154h824v-158h-256q-68 0 -122.5 -14.5t-102.5 -48.5q-45 -32 -72 -83t-27 -118q0 -79 32.5 -128t83.5 -75q45 -23 104 -34t139 -11h170v-165h-295q-66 0 -118.5 -20t-99.5 -59q-43 -37 -68.5 -90t-25.5 -112q0 -102 37.5 -159t101.5 -82 q63 -25 139.5 -28.5t166.5 -3.5h28q68 0 119.5 -23.5t84.5 -60.5q31 -35 48 -82.5t17 -96.5z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z',\n            'M1120 0h-188v955h-559v-955h-188v1117h935v-1117z',\n            'M1172 577q0 -258 -138.5 -428.5t-360.5 -170.5q-65 0 -146.5 18t-153.5 61v-469h-188v1058q0 123 35.5 215.5t101.5 158.5q62 62 155.5 95t195.5 33q243 0 371 -147t128 -424zM978 565q0 218 -80 320t-226 102q-158 0 -228.5 -96t-70.5 -278v-403q73 -34 132.5 -48.5 t134.5 -14.5q162 0 250 111t88 307z',\n            'M1018 -96q0 -87 -47 -172t-109 -144h-177v14q86 75 124.5 135.5t38.5 131.5q0 54 -30 93.5t-75 39.5h-92q-117 0 -216 30t-174 97q-73 66 -114.5 170t-41.5 250q0 270 155.5 432t414.5 162q84 0 164 -18.5t147 -45.5v-211h-12q-94 62 -172.5 87t-146.5 25 q-166 0 -260.5 -119t-94.5 -312q0 -112 28.5 -183t78.5 -116q50 -44 114.5 -63.5t139.5 -19.5h100q115 0 186 -76.5t71 -186.5z',\n            'M1137 558q0 -281 -140.5 -435t-373.5 -154q-241 0 -379 158t-138 431q0 275 141 432.5t378 157.5q55 0 108 -11t82 -20h480v-165h-288q62 -73 96 -170t34 -224zM943 558q0 215 -82 322t-236 107q-161 0 -243 -112t-82 -317q0 -209 83.5 -318t239.5 -109q152 0 236 107.5 t84 319.5z',\n            'M1006 952h-404v-952h-188v952h-404v165h996v-165z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710z',\n            'M1514 576q0 -259 -171.5 -417t-440.5 -173v-398h-187v398q-130 6 -240.5 46.5t-191.5 109.5q-85 74 -132 172t-47 232q0 159 59 296t192 275h229v-17q-136 -99 -210 -232t-74 -300q0 -189 112.5 -304t301.5 -121v1000q33 2 70.5 2.5t76.5 0.5q304 0 478.5 -149.5 t174.5 -420.5zM1319 586q0 184 -112 293.5t-305 109.5v-846q206 10 311.5 126t105.5 317z',\n            'M1160 -412h-213l-346 619l-350 -619h-203l444 770l-433 759h213l335 -600l339 600h203l-433 -751z',\n            'M1507 446q0 -114 -48 -198t-127 -137q-82 -55 -182 -82.5t-215 -32.5v-408h-187v408q-115 6 -214.5 32t-182.5 83q-80 54 -127.5 137.5t-47.5 197.5v671h188v-612q0 -113 37.5 -180.5t89.5 -102.5q56 -38 123 -53t134 -19v967h187v-967q67 5 134 19t123 53 q59 40 93 101.5t34 181.5v612h188v-671z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5z',\n            'M557 1304h-189v195h189v-195zM194 1304h-189v195h189v-195zM375 0h-188v1117h188v-1117z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM953 1304h-199v195h199v-195zM540 1304h-199v195h199 v-195z',\n            'M1137 558q0 -273 -140 -431t-375 -158q-237 0 -376.5 158t-139.5 431t139.5 431.5t376.5 158.5q235 0 375 -158.5t140 -431.5zM943 558q0 217 -85 322.5t-236 105.5q-153 0 -237.5 -105.5t-84.5 -322.5q0 -210 85 -318.5t237 -108.5q150 0 235.5 107.5t85.5 319.5z M743 1676l-49 -384h-145l-49 384h243z',\n            'M1116 407q0 -218 -122 -327.5t-348 -109.5q-223 0 -346 107.5t-123 329.5v710h188v-641q0 -93 10 -153t42 -106q31 -43 84.5 -64.5t145.5 -21.5q86 0 143.5 22t87.5 66q29 44 39.5 105.5t10.5 151.5v641h188v-710zM768 1676l-49 -384h-145l-49 384h243z',\n            'M1553 503q0 -96 -23.5 -192.5t-74.5 -171.5q-55 -80 -133.5 -124.5t-193.5 -44.5q-96 0 -177 49.5t-118 116.5h-6q-39 -68 -113 -117t-176 -49q-113 0 -194.5 46.5t-132.5 122.5t-74.5 171.5t-23.5 192.5q0 170 57 308.5t201 305.5h228v-17q-135 -108 -214.5 -262 t-79.5 -337q0 -66 8 -122.5t38 -119.5q26 -55 72.5 -91.5t117.5 -36.5q51 0 86.5 12.5t55.5 29.5q22 18 36.5 40t20.5 37v584h186v-584q9 -17 23 -39t35 -39q24 -19 52.5 -30t86.5 -11q70 0 117 35.5t74 92.5q25 55 36 116t11 126q0 182 -78.5 336t-215.5 263v17h228 q144 -167 201 -305.5t57 -308.5zM955 1676l-49 -384h-145l-49 384h243z',\n            'M1145 837q0 -164 -39 -344t-121 -303q-85 -124 -186.5 -173t-214.5 -49q-192 0 -313.5 126.5t-121.5 329.5q0 228 134.5 372.5t336.5 144.5q90 0 169.5 -26t158.5 -91q2 26 3 55.5t1 55.5q0 217 -79 318t-231 101q-78 0 -169.5 -31.5t-169.5 -86.5h-11v194 q81 44 181.5 66.5t196.5 22.5q137 0 239.5 -54.5t164.5 -178.5q42 -86 56.5 -189t14.5 -260zM942 678q-60 47 -136 74t-148 27q-141 0 -225 -91t-84 -261q0 -145 67.5 -221.5t179.5 -76.5q128 0 209.5 97t115.5 287q6 33 11.5 73t9.5 92z',\n            'M1438 0h-1388l562 1489h264zM1171 168l-432 1147l-431 -1147h863z',\n            'M1532 1315h-200v-1508h-198v1508h-592v-1508h-198v1508h-200v174h1388v-174z',\n            'M1369 -189h-1182v191l673 668l-663 631v188h1133v-176h-891l648 -601v-72l-666 -653h948v-176z',\n            'M1456 572h-1236v160h1236v-160z',\n            'M843 1489l-780 -1489h-165l780 1489h165z',\n            'M492 511h-239v283h239v-283z',\n            'M1737 1788l-880 -1939h-102l-384 993h-237v139h393l313 -821l730 1628h167z',\n            'M1887 663q0 -239 -122.5 -372.5t-329.5 -133.5q-133 0 -244 76.5t-180 222.5q-79 -151 -184.5 -225t-248.5 -74q-191 0 -304 135.5t-113 349.5q0 238 125 372t327 134q134 0 245 -77t179 -222q79 150 185.5 224.5t247.5 74.5q191 0 304 -135.5t113 -349.5zM967 729 q-63 117 -155 175.5t-188 58.5q-138 0 -216 -83.5t-78 -237.5q0 -133 63.5 -216t182.5 -83q110 0 172 48.5t119 142.5q34 57 52.5 92.5t47.5 102.5zM1718 663q0 134 -64 216.5t-182 82.5q-88 0 -152.5 -35.5t-138.5 -155.5q-30 -48 -55.5 -99.5t-44.5 -95.5 q60 -115 153.5 -174.5t189.5 -59.5q138 0 216 83t78 238z',\n            'M1168 1367h-10q-32 8 -89.5 18.5t-89.5 10.5q-129 0 -181 -61q-53 -61 -53 -210v-1123q0 -206 -104 -315q-105 -110 -293 -110q-52 0 -106.5 5.5t-103.5 15.5v178h10q33 -8 87 -18.5t88 -10.5q129 0 182 61q52 61 52 210v1123q0 204 104 315q104 110 293 110 q58 0 109 -5.5t105 -15.5v-178z',\n            'M1431 1104q-20 -194 -111 -293t-249 -99q-77 0 -147 37.5t-126 82.5q-65 52 -117 79.5t-96 27.5q-75 0 -117 -48t-70 -172h-155q23 182 112.5 280t248.5 98q72 0 143 -37t130 -83q61 -48 114.5 -77.5t98.5 -29.5q76 0 120.5 54.5t63.5 179.5h157zM1432 588 q-25 -184 -112 -281.5t-250 -97.5q-72 0 -144 37.5t-129 82.5q-39 31 -103 69t-110 38q-78 0 -121 -55t-63 -179h-157q19 192 110.5 292t249.5 100q77 0 146 -37t127 -83q35 -28 97 -67.5t116 -39.5q75 0 117 49.5t69 171.5h157z',\n            'M1431 362h-608l-104 -335h-153l104 335h-425v156h474l84 268h-558v156h606l105 335h153l-105 -335h427v-156h-476l-83 -268h559v-156z',\n            'M1408 303l-1154 483v124l1154 483v-183l-889 -362l889 -362v-183zM1408 0h-1154v160h1154v-160z',\n            'M1422 786l-1154 -483v183l889 362l-889 362v183l1154 -483v-124zM1422 0h-1154v160h1154v-160z'\n        ];\n        this.OUTLINE_X = [\n            [], [291, 301, 505, 515], [168, 211, 729, 772, 554], [195, 389, 917, 1364, 1481, 1481, 1288, 760, 312, 195],\n            [155, 604, 722, 1129.8, 1160, 1107, 722, 604, 278.5, 191.1, 162, 155], [149, 172.3, 242, 630, 1687, 1844.3, 1960, 2031.3, 2055, 2031.8, 1962, 1575, 517, 359.8, 244, 172.8],\n            [115, 149.4, 252.5, 407.6, 598, 1555, 1287, 961.3, 881, 757.5, 601, 423.5, 293, 213.5, 187], [164, 207, 343, 386], [181, 205.5, 279, 554, 783, 783, 554, 279, 205.5],\n            [147, 376, 651, 724.5, 749, 724.5, 651, 376, 147], [167, 232, 588, 717, 1073, 1137, 1137, 1073, 717, 588, 232, 167], [210, 755, 921, 1466, 1466, 921, 755, 210],\n            [147, 293, 575, 321], [153, 777, 777, 153], [253, 492, 492, 253], [-30, 143, 860, 684],\n            [137, 167.9, 260.5, 420.1, 652, 881.4, 1041.5, 1135.6, 1167, 1136.1, 1043.5, 883.9, 652, 422, 262, 168.3], [278, 1084, 1084, 780, 625, 278],\n            [161, 1169, 1169, 1106, 1073.5, 976, 821.3, 617, 387.5, 198, 161], [167, 364, 608, 830.5, 1007, 1111, 1148, 1117, 1080, 971, 821, 629, 399.5, 210, 167],\n            [77, 790, 982, 1203, 1203, 982, 798, 77], [187, 378, 613, 843.5, 1015, 1119, 1157, 1147, 251, 187],\n            [137, 183.5, 316, 475, 675, 875.1, 1041.5, 1153.6, 1191, 1046, 965, 866, 542, 315, 179.5], [154, 285, 499, 1173, 1173, 154],\n            [122, 157.9, 265.5, 433.6, 651, 859.6, 1029.5, 1142.4, 1180, 1140, 1106.8, 1007, 851.5, 651, 456.8, 300, 196.5, 162],\n            [113, 258, 340, 438, 760, 988, 1122.5, 1167, 1121, 990, 829, 629, 429.5, 263, 150.5], [346, 585, 585, 346], [230, 376, 658, 585, 346], [254, 1408, 1408, 254],\n            [245, 1431, 1431, 245], [268, 1422, 1422, 268], [160, 406, 610, 970, 1005, 973.9, 880.5, 733.4, 541, 337.5, 160],\n            [176, 240, 419, 692, 1037, 1210, 1391, 1714, 1829.5, 1870, 1813.5, 1651, 1391, 1041, 701, 426, 243], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [115, 169, 319, 549.5, 844, 1001.5, 1134, 1250.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167],\n            [200, 576, 906.5, 1134, 1369.5, 1458, 1373, 1136, 918.5, 572, 200], [200, 1181, 1181, 200], [200, 398, 1045, 1151, 1151, 200],\n            [115, 171, 330, 577, 896, 1175.5, 1442, 1442, 1441, 1155.5, 896, 570.9, 323.5, 167.1], [200, 1339, 1339, 200], [137, 725, 725, 137],\n            [44, 178, 306, 486.6, 626.5, 716.1, 746, 746, 233, 44], [205, 1397, 1366, 205], [200, 1142, 1142, 398, 200], [200, 1526, 1526, 200], [200, 1336, 1336, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200],\n            [115, 163.5, 302, 520.5, 1010.5, 1133.1, 1290, 1409.5, 1528, 1528, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1432, 1130.5, 1004, 842, 617, 200],\n            [134, 395.5, 685, 941.5, 1128, 1241.5, 1282, 1222, 990, 702, 480.3, 301, 182.5, 143, 134], [0, 532, 730, 1262, 1262, 0],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 178], [26, 568, 832, 1374, 238], [92, 486, 1546, 1933, 295], [68, 1335, 1336, 80], [6, 532, 730, 1254, 225],\n            [126, 1288, 1288, 1266, 160, 126], [239, 759, 759, 239], [70, 787, 960, 246], [171, 691, 691, 171], [186, 383, 1490, 901, 775], [-4, 1306, 1306, -4], [340, 613, 762, 583],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 924, 772.5, 567, 362, 203], [185, 679, 866, 1022, 1128.5, 1168, 1139.4, 1053.5, 918.1, 373, 185],\n            [105, 145, 258, 431, 653, 832.5, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 903, 258, 148.5],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 849.1, 649, 428.6, 255.5, 143.4], [68, 195, 383, 716, 786, 786, 693.5, 580, 415, 294, 68],\n            [108, 225, 391.5, 565, 798.3, 962, 1058.8, 1091, 1091, 602, 417, 259, 148.5], [185, 1119, 1119, 1095.3, 1024, 373, 185], [175, 187, 375, 387, 387, 175],\n            [-62, 47.5, 153, 304, 421, 496, 521, 533, 533, 321, 100, -62], [193, 1199, 1161, 381, 193], [187, 375, 375, 187], [185, 1815, 1815, 1793.1, 1727.5, 1615.9, 1456, 735, 185],\n            [185, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9],\n            [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 741, 185], [108, 137.6, 226.5, 365.1, 903, 1091, 1091, 602, 414, 259, 149.5], [185, 373, 882, 882, 816, 745, 185],\n            [110, 283.5, 511, 706.9, 856.5, 951.4, 983, 939, 768.5, 566, 372.5, 230, 143.5, 115, 110], [62, 211.3, 278, 387.5, 538, 649.5, 765, 765, 377, 189, 62],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 177], [61, 510, 699, 1151, 265], [86, 380, 1299, 1590, 766], [60, 1152, 1152, 64], [61, 298, 499, 1151, 265],\n            [93, 995, 995, 978, 107, 93], [173, 588.9, 672.5, 800.9, 963, 1113, 1113, 963, 800.9, 672.5, 588.9, 173], [378, 552, 552, 378],\n            [187, 337, 499.1, 627.5, 711.1, 1127, 1127, 711.1, 627.5, 499.1, 337, 187], [187, 354, 1125, 1290, 1401, 1466.5, 1489, 1322, 551, 386, 274, 209.5], [], [291, 515, 505, 301],\n            [159, 191.6, 289.5, 647, 765, 1120, 1120, 765, 647, 292.5, 192.4], [137, 1163, 1163, 1137, 997, 816, 630.6, 484.5, 389.6, 182, 137],\n            [138, 247, 1058, 1168, 1168, 1055, 249, 138], [108, 187, 557, 745, 1115, 1191, 320], [378, 552, 552, 378],\n            [172, 229, 404.5, 575, 796, 965, 1063, 1096, 1128, 1071, 896, 725, 497.5, 334, 235, 203], [346, 958, 958, 346],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4],\n            [151, 238.5, 454, 944, 944, 920.3, 849, 723.5, 537, 368, 231], [166, 716, 1146, 1146, 716, 166], [210, 1285, 1456, 1456, 210], [153, 777, 777, 153],\n            [159, 222.4, 412.5, 692.1, 1024, 1355.9, 1635.5, 1825.6, 1889, 1825.6, 1635.5, 1355.9, 1024, 692.1, 412.5, 222.4], [-4, 1, 1306, 1306],\n            [154, 183, 270, 399.3, 555, 710.8, 840, 927, 956, 927.1, 840.5, 711.4, 555, 399.3, 270, 183], [215, 1461, 1461, 921, 755, 215],\n            [207, 967, 967, 911, 887.6, 817.5, 544, 369.5, 211, 207], [207, 363.5, 540, 703, 834, 923, 956, 929, 904.9, 832.5, 561, 384.5, 224, 207], [541, 690, 963, 720],\n            [190, 378, 1124, 1124, 190], [137, 168.5, 595, 1106, 1106, 640, 425.3, 267, 169.5], [253, 492, 492, 253], [353, 456, 551, 788.5, 857.1, 880, 877, 872, 719, 353],\n            [291, 299, 914, 914, 693, 558, 291], [121, 150.6, 239.5, 378.6, 559, 734.3, 874, 965.5, 996, 965.5, 874, 734.3, 559, 378.6, 239.5, 150.6], [174, 604, 1154, 1154, 604, 174],\n            [171, 465, 1694, 1857, 1857, 1694, 1410, 545, 408, 171], [171, 465, 1955, 1955, 1890, 1805.5, 1410, 545, 408, 171], [140, 555, 1750, 1913, 1913, 1750, 1500, 448, 294, 155, 140],\n            [113, 144.1, 237.5, 384.6, 577, 782, 958, 958, 712, 508, 147.5], [26, 1374, 862, 683, 440], [26, 1374, 955, 712, 533], [26, 1374, 1033, 805, 578, 350],\n            [26, 1374, 1119, 990, 541, 367, 288], [26, 1374, 1005, 806, 393], [26, 1374, 1049, 1023.6, 947.5, 834.6, 699, 564, 451, 374.5, 349], [14, 1901, 1901, 608],\n            [115, 169, 548, 652.5, 750, 990.5, 1350, 1350, 1084.5, 845, 546.5, 317, 167], [200, 1181, 1181, 643, 400, 200], [200, 1181, 1181, 993, 750, 200],\n            [200, 1181, 1181, 803, 576, 200], [200, 1181, 1181, 1038, 426, 200], [137, 725, 725, 389, 146, 137], [137, 725, 725, 482, 137], [93, 137, 725, 776, 548, 321],\n            [126, 137, 725, 738, 738, 126], [14, 210, 586, 916.5, 1144, 1379.5, 1468, 1383, 1146, 929, 582, 210, 14], [200, 1336, 1336, 1208, 1079, 630, 456, 200],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 753, 510, 163], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1083, 840, 303, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1136, 908, 681, 453, 163],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1207, 1078, 629, 455, 163],\n            [112, 160.5, 299, 517.5, 803, 1089.5, 1307, 1445.5, 1495, 1446.5, 1108, 909, 496, 160], [291, 402, 1274, 1385, 1385, 1274, 402, 291],\n            [115, 120, 252, 1092.5, 1310, 1448.5, 1498, 1474, 1342, 806, 521.5, 303, 163], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 753, 510, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1073, 830, 178], [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 856, 629, 178],\n            [178, 213.5, 330, 505, 749, 989, 1169, 1285.5, 1321, 1321, 1056, 444, 178], [6, 532, 730, 1254, 935, 692], [200, 398, 1044, 1139, 1174, 1127, 997, 398, 200],\n            [185, 675, 873.1, 1029.5, 1131.1, 1165, 1066, 1037.4, 951.5, 819.9, 654, 470.5, 321, 221, 185], [104, 130.3, 209, 325.5, 465, 1053, 1053, 1020, 559, 316, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 934, 691, 203], [104, 130.3, 209, 325.5, 465, 1053, 1053, 961, 733, 506, 278, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 1038, 909, 460, 286, 207], [104, 130.3, 209, 325.5, 465, 1053, 1053, 926, 314, 203],\n            [104, 130.3, 209, 325.5, 465, 1053, 1053, 956, 930.6, 854.5, 741.6, 606, 471, 358, 281.5, 256],\n            [104, 130.4, 209.5, 326.1, 465, 1433, 1648.5, 1833, 1855, 1855, 1823.6, 1729.5, 1581.1, 1387, 564, 360, 202],\n            [105, 145, 353, 456, 551, 788.5, 857.1, 1011, 1011, 841.5, 653, 430.1, 255.5, 142.6], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 997.5, 580, 337, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 960, 717, 255.5, 143.4], [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 986, 758, 531, 303, 143.4],\n            [106, 145, 262, 448.5, 696, 904, 1098, 1120, 1120, 1089.4, 951, 339, 143.4], [-21, 187, 375, 401, 222], [160, 187, 375, 582, 339], [-11, 187, 375, 572, 394, 167],\n            [5, 187, 375, 557, 557, 5], [106, 140.6, 244.5, 405.6, 612, 828.3, 995, 1101.5, 1137, 1004, 938, 263], [185, 1119, 1119, 1075, 946, 497, 323, 244, 185],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 553, 310, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 933, 690, 245.5, 140.9],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 963, 735, 508, 280, 140.9], [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1038, 909, 460, 286, 207],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 928, 729, 316, 140.9], [210, 719, 957, 1466, 1466, 957, 719, 210],\n            [93, 203, 833.3, 997, 1102, 1137, 1132, 1021, 409.4, 245.5, 140.9, 106], [177, 201.5, 275, 392.5, 549, 1111, 1111, 585, 342, 177],\n            [177, 201.5, 275, 392.5, 549, 1111, 1111, 945, 702, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 757, 530, 177], [177, 201.5, 275, 392.5, 549, 1111, 1111, 955, 343, 177],\n            [61, 298, 499, 1151, 928, 685], [185, 373, 1019, 1129, 1168, 1139.9, 1055.5, 920.6, 373, 185], [230, 376, 658, 585, 346], [530, 579, 724, 773],\n            [256, 588, 716, 1048, 1048, 765, 539, 256], [7, 26, 1374, 832], [346, 585, 585, 346], [0, 49, 443, 1424, 1424, 443], [0, 49, 443, 1582, 1582, 443], [0, 49, 380, 968, 968, 380],\n            [0, 49, 354.5, 493, 711.5, 997, 1283.5, 1501, 1639.5, 1689, 1640.5, 1501, 1284.5, 997], [0, 49, 815, 1013, 1537, 289],\n            [0, 49, 291, 1751, 1751, 1701, 1654.1, 1513.5, 1296.6, 1021], [-53, 187, 375, 615, 615, 379, 183, -53], [26, 1374, 832, 568],\n            [200, 728, 983.5, 1168, 1281, 1323, 1196, 1159, 1040, 885, 641, 200], [200, 398, 1162, 1162, 200], [26, 1414, 852, 588], [200, 1181, 1181, 200],\n            [126, 1288, 1288, 1266, 160, 126], [200, 1339, 1339, 200], [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163],\n            [137, 725, 725, 137], [205, 1397, 1366, 205], [26, 1378, 822, 582], [200, 1526, 1526, 200], [200, 1336, 1336, 200], [114, 1215, 1215, 114],\n            [115, 163.5, 302, 520.5, 806, 1092.5, 1310, 1448.5, 1498, 1449.5, 1310, 1093.5, 806, 521.5, 303, 163], [200, 1339, 1339, 200],\n            [200, 398, 1043, 1139.5, 1174, 1127.5, 996, 831, 604, 200], [118, 1280, 1280, 1234, 138, 118], [0, 532, 730, 1262, 1262, 0], [6, 532, 730, 1254, 225],\n            [105, 149.5, 273, 740, 937, 1404, 1527.5, 1572, 1528.5, 1410, 937, 740, 267, 148], [68, 1335, 1336, 80], [179, 219.5, 338, 793, 990, 1446, 1563.5, 1604, 1604, 179],\n            [108, 1568, 1568, 1518, 1471.1, 1330.5, 1113.6, 838, 562.4, 345.5, 204.9, 158, 108], [126, 137, 725, 738, 738, 126], [6, 532, 730, 1254, 939, 740, 327],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 743, 500, 148.5], [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 721, 478, 191.5, 144],\n            [185, 931, 1119, 1119, 1095.3, 802, 559, 185], [160, 187, 375, 403], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 1043, 760, 534, 251, 177],\n            [108, 137.4, 225.5, 363.6, 543, 1091, 1091, 604, 416.5, 258, 148.5], [185, 373, 1030.5, 1131.4, 1165, 1084, 1050, 959, 825.5, 661, 462.1, 311.5, 216.6, 185],\n            [61, 506, 694, 1151, 265], [106, 140.6, 244.5, 408.6, 624, 837.1, 1000.5, 1104.4, 1139, 1049, 239],\n            [109, 152.5, 265, 417, 578, 796, 1006, 1006, 961, 789, 609, 449, 304, 191.5, 144], [108, 135.8, 219, 646, 825, 937, 982, 942, 198],\n            [185, 931, 1119, 1119, 1095.3, 1024, 907.5, 748, 185], [137, 159.5, 219, 382, 639, 896, 1059, 1118, 1141, 1118, 1058, 895.5, 639, 382.5, 220, 159.5], [187, 375, 375, 187],\n            [193, 1192, 1122, 1085, 1027, 193], [61, 1151, 522, 311], [185, 373, 1125, 1125, 185], [61, 510, 699, 1151, 265], [104, 138.5, 239, 704, 884, 995.5, 1041, 957, 133],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 997, 833.3, 622, 409.4, 245.5, 140.9], [185, 1120, 1120, 185],\n            [185, 373, 1033.5, 1137.4, 1172, 1140, 1044, 887.3, 673, 477.5, 322, 220.5, 185], [105, 146.5, 261, 685, 862, 971, 1018, 986, 839, 675, 441.9, 260.5, 143.9],\n            [106, 140.5, 244, 407.8, 623, 832.9, 996.5, 1101.9, 1295, 1295, 625, 412, 247, 141.3], [10, 414, 602, 1006, 1006, 10],\n            [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 177], [104, 151, 283, 715, 902, 1342.5, 1471.1, 1514, 1470.4, 1339.5, 1132.6, 861, 784.5, 714, 355, 163],\n            [48, 1160, 1149, 59], [176, 223.5, 748, 935, 1459, 1507, 1507, 176], [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 1295, 371, 170],\n            [5, 187, 375, 557, 557, 5], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 953, 341, 177],\n            [106, 140.9, 245.5, 409.4, 622, 833.3, 997, 1102, 1137, 1102, 743, 500, 140.9], [177, 207.8, 300, 448, 646, 846, 994, 1085.5, 1116, 1116, 768, 525, 177],\n            [113, 136.5, 211, 343.5, 538, 1128, 1321.5, 1455, 1529.5, 1553, 1496, 955, 712, 170],\n            [149, 179.4, 270.5, 409.6, 584, 798.5, 985, 1106, 1145, 1130.5, 1074, 909.5, 670, 473.5, 292], [50, 1438, 876, 612], [144, 344, 1332, 1532, 1532, 144],\n            [187, 1369, 1369, 1330, 197, 187], [220, 1456, 1456, 220], [-102, 63, 843, 678], [253, 492, 492, 253], [134, 755, 857, 1737, 1570, 134],\n            [161, 189.3, 274, 406.5, 578, 1435, 1620.9, 1764.5, 1856.4, 1887, 1858.8, 1774, 1641.5, 1470, 613, 430.3, 286, 192.3],\n            [138, 241.5, 348, 515.3, 641, 719, 1168, 1168, 1063, 954, 786.3, 661, 583, 138], [243, 400, 1070, 1214, 1320, 1432, 1431, 1274, 604, 462.4, 355.5, 243],\n            [245, 566, 719, 1431, 1431, 1109, 956, 245], [254, 1408, 1408, 254], [268, 1422, 1422, 268]\n        ];\n        this.OUTLINE_Y = [\n            [], [1489, 0, 0, 1489], [1556, 977, 977, 1556, 1556], [421, 0, 0, 421, 932, 1067, 1489, 1489, 1067, 556],\n            [85, -361, -361, 238.1, 380, 1231, 1576, 1576, 1185, 1071.5, 935, 283], [1075, 880.5, 743, 0, -29, -1.8, 80, 217.8, 413, 607.5, 745, 1489, 1517, 1489.8, 1408, 1270.3],\n            [409, 230.9, 90.5, -0.6, -31, 0, 909, 1333.4, 1432.5, 1498.1, 1520, 1490, 1412, 1301.5, 1174], [1556, 977, 977, 1556], [572, 286.3, 31, -412, -412, 1556, 1556, 1113, 857.8],\n            [-412, -412, 31, 286.3, 572, 857.8, 1113, 1556, 1556], [886, 776, 630, 630, 777, 887, 1299, 1409, 1556, 1556, 1410, 1300], [572, 27, 27, 572, 732, 1277, 1277, 732],\n            [-370, -370, 285, 285], [561, 561, 742, 742], [0, 0, 285, 285], [-304, -304, 1556, 1556],\n            [743, 400, 159, 16.5, -31, 15.9, 156.5, 397.4, 745, 1084.9, 1326.5, 1470.9, 1519, 1471.6, 1329.5, 1088.1], [0, 0, 152, 1494, 1494, 1286],\n            [0, 0, 171, 1110, 1279.4, 1409.5, 1492.4, 1520, 1491, 1427, 209], [63, -1.5, -31, 2.5, 106, 254, 441, 1161, 1320, 1436, 1500, 1520, 1490.5, 1426, 272],\n            [419, 0, 0, 419, 579, 1489, 1489, 649], [56, -5.5, -31, 6.5, 114, 274, 473, 1489, 1489, 267],\n            [654, 324, 104, 3, -31, 4.9, 112.5, 276.9, 483, 1494, 1512, 1517, 1453.5, 1277, 1005], [1314, 0, 0, 1266, 1489, 1489],\n            [411, 233.5, 91, -2.8, -34, -2, 94, 238.3, 415, 1144, 1294.5, 1416, 1496.3, 1523, 1495, 1411, 1285, 1131],\n            [1005, -6, -23.5, -29, 33, 209, 480, 834, 1171.5, 1385, 1485.5, 1519, 1483.3, 1376, 1211.8], [0, 0, 1117, 1117], [-370, -370, 285, 1117, 1117], [590, 77, 1227, 714],\n            [362, 362, 942, 942], [77, 590, 714, 1227], [1245, 0, 0, 964.5, 1139, 1293.4, 1414.5, 1492.9, 1519, 1497.5, 1449],\n            [647, 291, 15, -162.5, -226, -218.5, -190, 157, 394, 663, 1013.5, 1283, 1457, 1519, 1452, 1268, 991.5], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [743, 402.5, 161, 18.5, -27, -13.5, 19, 63, 108, 1385, 1487, 1516, 1465, 1317, 1072],\n            [0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 717, 1313, 1489, 1489],\n            [746, 405.5, 163, 19, -29, 12.5, 110, 749, 1382, 1485.5, 1516, 1464.4, 1309.5, 1065.4], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [8, -12.5, -21, 5.5, 85, 213.5, 387, 1489, 1489, 193], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489],\n            [744, 415, 172, 21, -297.5, -369.1, -393, -386.5, -365, -183, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1280.5, 1409, 1471.5, 1489, 1489],\n            [92, 3, -27, 9, 109, 253, 425, 1412, 1486, 1516, 1486.1, 1396.5, 1260.1, 1090, 340], [1313, 0, 0, 1313, 1489, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1489],\n            [1489, 0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 1489, 1489], [1489, 0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [-392, -392, 1556, 1556],\n            [1556, -304, -304, 1556], [-392, -392, 1556, 1556], [682, 682, 684, 1489, 1489], [-300, -300, -180, -180], [1676, 1302, 1302, 1676],\n            [324, 182.8, 69, -6, -31, 0, 758, 939, 1058, 1124.5, 1144, 1126, 1093], [0, -31, 8.5, 127, 315, 567, 812.8, 996, 1110, 1556, 1556],\n            [557, 300, 118, 10.5, -25, 0, 70, 1050, 1116, 1143, 1104, 987, 801.5], [550, 306.8, 123, 7.5, -31, 0, 1556, 1556, 992, 803],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1115, 1148, 1107.8, 987, 797.8], [959, 0, 0, 959, 1374, 1546, 1560, 1566, 1539.4, 1459.5, 1117],\n            [569, -375, -410.5, -423, -389.8, -290, -119.3, 127, 1117, 1148, 1108.5, 998, 817.5], [0, 0, 725, 906, 1039, 1556, 1556], [1304, 0, 0, 1304, 1499, 1499],\n            [-395, -415, -423, -398, -323, -199, -27, 1304, 1499, 1499, 1117, -216], [0, 0, 1117, 1556, 1556], [0, 0, 1556, 1556], [0, 0, 725, 902.9, 1036.5, 1120.1, 1148, 1148, 1117],\n            [0, 0, 725, 906, 1039, 1120.8, 1148, 1117], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4],\n            [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1148, 1117], [555, 314.1, 131.5, 16.4, -412, -412, 1117, 1148, 1108, 995, 809.5], [0, 0, 912, 1105, 1114.5, 1117, 1117],\n            [67, 2.5, -27, -2.5, 71, 182.8, 322, 1060, 1119.5, 1144, 1116.5, 1042, 933, 803, 278], [959, 189.8, 70, 1, -22, -13, 10, 1117, 1438, 1438, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [0, 0, 1117, 1117], [1117, -412, -412, 1117, 1117],\n            [0, 0, 159, 1117, 1117, 139], [504, -170.9, -292.5, -367.1, -392, -392, 1556, 1556, 1531.1, 1456.5, 1334.9, 660], [-392, -392, 1556, 1556],\n            [-392, -392, -367.1, -292.5, -170.9, 504, 660, 1334.9, 1456.5, 1531.1, 1556, 1556], [395, 395, 396, 440, 561, 732, 927, 927, 926, 880.5, 761, 589.5], [], [0, 0, 1489, 1489],\n            [557, 333.5, 163, -361, -361, 74, 1046, 1475, 1475, 948.5, 775.9], [0, 0, 171, 1467, 1501, 1518, 1485.9, 1389.5, 1243.1, 751, 207],\n            [258, 145, 147, 257, 1067, 1176, 1176, 1066], [1489, 426, 0, 0, 426, 1489, 1489], [-392, -392, 1556, 1556],\n            [533, -327, -371.5, -385, -358, -275, -156, -10, 601, 1462, 1505, 1519, 1490, 1411, 1293.5, 1147], [1304, 1304, 1499, 1499],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9],\n            [833, 616, 531, 554, 1192, 1332.4, 1435.5, 1498.9, 1520, 1504, 1475], [608, 162, 191, 1113, 1142, 697], [602, 57, 57, 762, 762], [561, 561, 742, 742],\n            [655, 323.1, 43.5, -146.6, -210, -146.6, 43.5, 323.1, 655, 986.9, 1266.5, 1456.6, 1520, 1456.6, 1266.5, 986.9], [1788, 1668, 1668, 1788],\n            [1116, 960.4, 831.5, 744.9, 716, 745, 832, 961, 1116, 1271, 1400, 1487, 1516, 1487, 1400, 1271], [179, 179, 917, 1462, 1462, 917],\n            [566, 566, 711, 1237, 1350.4, 1440.5, 1519, 1501.5, 1458, 722], [585, 542, 527, 543.5, 595, 685.5, 817, 1278, 1374.5, 1452, 1520, 1502.5, 1458, 764],\n            [1302, 1302, 1676, 1676], [-412, -412, 0, 1117, 1117], [1050, 866, -363, -363, 1489, 1489, 1460, 1373, 1234.3], [511, 511, 794, 794],\n            [-397, -416, -423, -337, -232, -89, -25, 20, 20, -237], [1256, 566, 566, 688, 1493, 1493, 1368],\n            [1025, 820.1, 663.5, 564.1, 531, 563.4, 660.5, 816.4, 1025, 1233.8, 1390, 1487.5, 1520, 1486.8, 1387, 1230], [191, 162, 608, 697, 1142, 1113],\n            [1246, 0, 0, 220, 353, 944, 1489, 1493, 1493, 1363], [1246, 0, 0, 139, 664, 865, 1489, 1493, 1493, 1363], [598, 0, 0, 220, 353, 944, 1489, 1517, 1500, 1456, 773],\n            [350, 195.6, 74.5, -3.9, -30, -10, 40, 244, 1489, 1489, 523], [0, 0, 1675, 2049, 2049], [0, 0, 2049, 2049, 1675], [0, 0, 1670, 2049, 2049, 1670],\n            [0, 0, 1992, 1992, 1987, 1910, 1682], [0, 0, 1872, 1872, 1872], [0, 0, 1712, 1843.5, 1952, 2024.8, 2049, 2024.8, 1952, 1843.5, 1712], [0, 0, 1489, 1489],\n            [743, 402.5, -397, -416, -423, -337, 108, 1385, 1487, 1516, 1465, 1317, 1072], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 1489, 2049, 2049, 1489],\n            [0, 0, 1489, 1872, 1872, 1489], [0, 0, 1489, 2049, 2049, 1489], [0, 0, 2049, 2049, 1489], [1670, 0, 0, 1670, 2049, 2049], [1677, 0, 0, 1677, 1872, 1872],\n            [740, 0, 0, 28, 119, 375, 743, 1118, 1371, 1457.5, 1489, 1489, 883], [0, 0, 1489, 1992, 1992, 1987, 1910, 1489],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 2049, 2049, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 2049, 2049, 1318, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1670, 2049, 2049, 1670, 1070.5], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1992, 1992, 1987, 1910, 1070.5],\n            [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1872, 1872, 1872, 1070.5], [216, 105, 105, 216, 1088, 1199, 1199, 1088],\n            [744, -146, -146, 20, 172, 414.5, 744, 1611, 1611, 1520, 1468, 1318, 1070.5], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489], [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 2049, 2049, 1489],\n            [598, 313, 115, 6, -31, 4, 115, 315.5, 598, 1489, 1872, 1872, 1489], [1489, 0, 0, 1489, 2049, 2049], [0, 0, 469, 610.5, 787, 992, 1130, 1489, 1489],\n            [0, -24, 12.4, 121.5, 284.1, 481, 1241, 1376, 1479, 1544.3, 1566, 1536.5, 1449, 1295.5, 1080], [324, 182.8, 69, -6, -31, 0, 758, 939, 1676, 1676, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1676, 1676, 1093], [324, 182.8, 69, -6, -31, 0, 758, 1297, 1676, 1676, 1297, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1619, 1619, 1614, 1537, 1309], [324, 182.8, 69, -6, -31, 0, 758, 1499, 1499, 1093],\n            [324, 182.8, 69, -6, -31, 0, 758, 1630, 1761.8, 1871, 1944.5, 1969, 1944.5, 1871, 1761.8, 1630],\n            [317, 178.8, 68, -4.8, -29, -26, 3.5, 68, 559, 641, 861.3, 1020, 1116, 1148, 1146, 1127, 1093], [557, 300, -397, -416, -423, -337, -232, 70, 1050, 1116, 1143, 1104, 987, 801.5],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1016, 1676, 1676, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1676, 1676, 987, 797.8],\n            [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1297, 1676, 1676, 1297, 797.8], [552, 306.6, 124.5, 11.6, -26, 1, 68, 539, 641, 856.3, 1499, 1499, 797.8],\n            [1676, 0, 0, 1302, 1676], [1302, 0, 0, 1676, 1676], [1297, 0, 0, 1297, 1676, 1676], [1304, 0, 0, 1304, 1499, 1499],\n            [484, 266.5, 104, 2.8, -31, 12, 141, 351, 637, 1469, 1566, 1556], [0, 0, 725, 1619, 1619, 1614, 1537, 1309, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1676, 1676, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 989.5, 802.4],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1297, 1676, 1676, 1297, 802.4], [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 1619, 1619, 1614, 1537, 1309],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1499, 1499, 1499, 802.4], [572, 7, 7, 572, 732, 1297, 1297, 732],\n            [-148, -148, 8.5, 127, 313.8, 558, 1241, 1241, 1108.4, 989.5, 802.4, 558], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117],\n            [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1676, 1676, 1117], [392, 209.1, 76.5, -4.1, -31, 0, 1117, 1499, 1499, 1117],\n            [1117, -412, -412, 1117, 1676, 1676], [-412, -412, 133, 323.5, 572, 813.4, 995.5, 1109.9, 1556, 1556], [-370, -370, 285, 1117, 1117], [1676, 1292, 1292, 1676],\n            [1304, 1292, 1292, 1304, 1499, 1676, 1676, 1499], [1489, 0, 0, 1489], [832, 832, 1117, 1117], [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 1489, 1489], [1489, 1105, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520], [1489, 1105, 0, 0, 1489, 1489],\n            [1489, 1105, 0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520], [1304, 0, 0, 1304, 1499, 1676, 1676, 1499], [0, 0, 1489, 1489],\n            [0, 0, 28, 122, 262, 458, 1155, 1316.5, 1427, 1477, 1489, 1489], [0, 0, 1313, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 176, 1489, 1489, 184],\n            [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489],\n            [0, 0, 1489, 1489], [0, 0, 1489, 1489], [0, 0, 1489, 1489], [744, 415, 172, 21, -31, 20, 172, 414.5, 744, 1073, 1318, 1467.5, 1520, 1468, 1318, 1070.5], [0, 0, 1489, 1489],\n            [0, 0, 709, 855.5, 1039, 1254, 1396, 1466.5, 1489, 1489], [0, 0, 176, 1489, 1489, 184], [1313, 0, 0, 1313, 1489, 1489], [1489, 0, 0, 1489, 1489],\n            [755, 507, 325, -16, -16, 325, 506.5, 755, 994, 1171, 1505, 1505, 1171, 993], [0, 0, 1489, 1489], [910, 647, 471, 0, 0, 471, 645.5, 910, 1489, 1489],\n            [0, 0, 174, 894, 1144.8, 1345, 1476.3, 1520, 1476.3, 1345, 1144.8, 894, 174], [1677, 0, 0, 1677, 1872, 1872], [1489, 0, 0, 1489, 1872, 1872, 1872],\n            [550, 306.8, 123, 7.5, -31, 0, 1117, 1676, 1676, 803], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1676, 1676, 986.5, 839], [0, -412, -412, 725, 906, 1676, 1676, 1117],\n            [1676, 0, 0, 1676], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1676, 1676, 1499, 1117], [550, 306.8, 123, 7.5, -31, 0, 1117, 1148, 1108, 992, 803],\n            [-412, -412, 110, 259.5, 444, 1195, 1355, 1467, 1534.5, 1556, 1524.3, 1429, 1277.8, 1078], [1117, -412, -412, 1117, 1117],\n            [534, 299.6, 120.5, 6.9, -31, 7.8, 124, 308.3, 551, 1556, 1556], [306, 148.5, 46, -10, -26, -5, 64, 270, 1083, 1127.5, 1144, 1128, 1079, 986.5, 839],\n            [463, 262.3, 118, -412, -412, -264.5, -96, 1556, 1556], [0, -412, -412, 725, 906, 1039, 1120.8, 1148, 1117],\n            [768, 451.5, 241, 37.5, -31, 37.5, 241, 451.5, 768, 1073, 1288, 1487, 1556, 1487, 1288, 1073.5], [0, 0, 1117, 1117], [0, 0, 1117, 1118, 1119, 1117], [0, 0, 1556, 1556],\n            [-412, -412, 0, 1117, 1117], [1117, 0, 0, 1117, 1117], [412, 248.5, 113, -412, -412, -265, -96, 1556, 1556],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 989.5, 1108.4, 1148, 1108.4, 989.5, 802.4], [0, 0, 1117, 1117],\n            [-412, -412, 148.5, 340.9, 577, 821.5, 1001, 1111.3, 1148, 1115, 1020, 861.5, 646], [549, 299, 129, -412, -412, -268, -96, 1079, 1124.5, 1143, 1102.5, 981, 792],\n            [558, 313.8, 127, 8.5, -31, 7.5, 123, 308.8, 952, 1117, 1148, 1108.6, 990.5, 803.6], [952, 0, 0, 952, 1117, 1117],\n            [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1117], [546, 314, 142, -412, -412, 159, 342.3, 576, 816.6, 996.5, 1108.6, 1146, 1145.5, 1143, 1117, 842],\n            [-412, -412, 1117, 1117], [446, 248.5, -412, -412, 248, 446, 1117, 1117], [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1117, 1117, 811.5],\n            [1304, 0, 0, 1304, 1499, 1499], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1499, 1499, 1117],\n            [558, 313.8, 127, 8.5, -31, 8.5, 127, 313.8, 558, 802.4, 1676, 1676, 802.4], [407, 213.6, 77.5, -3.1, -30, -2.6, 79.5, 216.1, 407, 1117, 1676, 1676, 1117],\n            [503, 310.5, 139, 16.5, -30, -30, 14.5, 139, 310.5, 503, 811.5, 1676, 1676, 811.5], [424, 240.1, 94.5, -0.4, -32, 17, 190, 493, 837, 1097, 1286, 1464.5, 1519, 1496.5, 1430],\n            [0, 0, 1489, 1489], [1315, -193, -193, 1315, 1489, 1489], [-189, -189, -13, 1489, 1489, 2], [572, 572, 732, 732], [0, 0, 1489, 1489], [511, 511, 794, 794],\n            [842, -151, -151, 1788, 1788, 981], [642, 447.6, 292.5, 190.9, 157, 157, 190.4, 290.5, 450.4, 663, 857.4, 1012.5, 1114.1, 1148, 1148, 1114.5, 1014, 854],\n            [-402, -417.5, -423, -395.5, -313, -179.8, 1367, 1545, 1560.5, 1566, 1538.5, 1456, 1321.8, -224], [202, 202, 209, 233.4, 306.5, 588, 1104, 1104, 1097, 1072.5, 999, 719],\n            [362, 27, 27, 362, 942, 1277, 1277, 942], [0, 0, 1393, 910], [0, 0, 910, 1393]\n        ];\n        this.KERN_C1 = [\n            '\\'', '\\'', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '.', '.', 'A', 'A', 'A', 'A', 'A', 'A', 'A',\n            'A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'C', 'D', 'D', 'D', 'D', 'D', 'D', 'D', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F',\n            'I', 'J', 'J', 'J', 'J', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'K', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L',\n            'L', 'O', 'O', 'O', 'O', 'O', 'O', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'Q', 'Q', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'R', 'S',\n            'S', 'S', 'S', 'S', 'S', 'S', 'S', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T', 'T',\n            'T', 'T', 'T', 'T', 'T', 'T', 'U', 'U', 'U', 'U', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'V', 'W', 'W', 'W', 'W', 'W', 'W',\n            'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'X', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y',\n            'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z', 'Z',\n            'a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'e', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'h', 'h', 'h', 'k', 'k', 'k', 'k', 'm', 'm',\n            'm', 'n', 'n', 'n', 'o', 'o', 'o', 'o', 'o', 'p', 'p', 'p', 'r', 'r', 'r', 'r', 'r', 't', 't', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'v', 'w', 'w', 'w',\n            'w', 'w', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'z', 'z', 'z', 'z', 'z', 'z', 'z',\n            'z', 'z', '\\u00C7', '\\u00E7', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00D8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8', '\\u00F8'\n        ];\n        this.KERN_C2 = [\n            '\\u00C6', 'A', '\\u00E6', '\\u00C6', 'z', 'y', 'x', 'w', 'v', 'a', 'Z', 'Y', 'X', 'W', 'V', 'T', 'S', 'J', 'I', 'A', '-', ',', 'y', 'w', 'v', 'u', 't',\n            'Y', 'W', 'V', 'U', 'T', 'S', '-', 'T', '.', '-', ',', '-', 'Z', 'Y', 'X', 'W', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'T', 'A',\n            '?', ';', ':', '.', ',', '-', '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00D8', 'y', 'w', 'v', 'u', 'o', 'e', 'a', 'O', '-', '\\u00D8', '\\u00C7',\n            'y', 'v', 'Y', 'W', 'V', 'T', 'O', 'J', 'G', 'C', '-', '\\'', 'Z', 'Y', 'X', 'T', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'o', 'e', 'a', 'Y', 'A',\n            '.', ',', '.', ',', '\\u00F8', '\\u00E6', 'y', 'u', 'o', 'e', 'a', 'Y', 'T', '-', '\\u00C6', 'y', 'w', 'v', 'S', 'A', '.', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C6', '\\u00C7', 'z', 'y', 'w', 'v', 'u', 's', 'r', 'o', 'g', 'e', 'c', 'a', 'T', 'S', 'O', 'G', 'C', 'A', '?', ';', ':', '.', '-', ',',\n            '\\u00C6', 'A', '.', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00C6', 'y', 'u',\n            'r', 'o', 'e', 'a', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6', '\\u00D8', '\\u00C7', 'y', 'u', 'o', 'e', 'a', 'O', 'G', 'C', '-', '\\u00F8',\n            '\\u00E6', '\\u00D8', '\\u00C6', 'v', 'u', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'g', 'e', 'd', 'a', 'O', 'A', ';', ':', '.', '-', ',', '\\u00F8', '\\u00E6',\n            '\\u00D8', '\\u00C7', 'y', 'w', 'o', 'e', 'a', 'Z', 'O', 'G', 'C', '-', 'y', 'w', 'v', 'y', '.', ',', 'T', '-', 'T', '}', 'y', ']', '\\\\', '?', '.',\n            '-', ',', '*', ')', '\\'', '\"', 'y', 'w', 'v', '\\u00F8', 'o', 'e', '-', 'y', 'w', 'v', 'y', 'w', 'v', 'y', 'x', 'v', '.', ',', 'y', '.', ',',\n            '\\u00E6', 'a', '.', '-', ',', 'y', '-', '\\u00F8', '\\u00E6', 'o', 'e', 'a', '.', '-', ',', '\\u00E6', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'o', 'g',\n            'e', 'd', 'c', '-', '\\u00F8', '\\u00E6', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c', 'a', '.', '-', ',', '\\u00F8', '\\u00E7', 'q', 'o', 'g', 'e', 'd', 'c',\n            '-', '-', '-', 'Z', 'Y', 'X', 'T', '.', ',', 'y', 'x', 'v', '.', ','\n        ];\n        this.KERN_K = [\n            100, 100, 20, 50, 40, 40, 50, 20, 40, 20, 30, 140, 80, 50, 50, 150, 20, 100, 30, 50, 160, 130, 50, 30, 50, 10, 20, 80, 50, 60, 10, 120, 10, 50, 60,\n            20, -10, 20, 50, 20, 20, 10, 20, 50, 50, 50, 50, 100, 110, 50, 50, 100, -30, 100, -60, 60, 60, 300, 300, 30, 10, 10, 20, 20, 70, 60, 20, 80, 70, 80,\n            50, 70, 70, 60, 20, 110, 20, 20, 110, 110, 160, 100, 110, 170, 20, -100, 20, 20, 160, 120, 20, 20, 10, 50, 30, 30, 50, 50, 70, 50, 50, 50, -20, 50,\n            300, 300, 30, 30, 50, 50, 55, 20, 50, 50, 40, 20, 60, 100, 20, 30, 20, 30, 22, 20, 20, 20, 220, 240, 50, 130, 40, 170, 200, 200, 200, 200, 180, 200,\n            220, 210, 220, 220, 240, 70, 12, 50, 40, 40, 120, -60, 200, 200, 290, 150, 290, 20, 10, 20, 20, 100, 100, 70, 65, 60, 100, 100, 100, 60, 80, 80, 290,\n            50, 290, 100, 100, 60, 65, 60, 60, 100, 100, 100, 50, 80, 80, 220, 50, 290, 60, 50, 10, 10, 80, 30, 60, 60, 50, 10, 10, 10, 80, 130, 140, 20, 80,\n            100, 110, 110, 100, 130, 100, 130, 100, 100, 130, 130, 120, 140, 20, 80, 200, 200, 290, 140, 290, 60, 50, 20, 20, 65, 40, 60, 60, 50, 10, 20, 20, 20,\n            60, 16, 10, 16, 5, 20, 30, 60, 20, 140, -100, 10, -100, -100, -110, 120, 50, 130, -50, -100, -60, -60, 20, 10, 20, 20, 20, 20, 100, 20, 10, 20, 20,\n            10, 20, 15, 20, 15, 20, 30, 5, 20, 30, 40, 36, 290, 20, 290, 10, 40, 18, 40, 18, 18, 40, 180, 40, 180, 20, 20, 70, 20, 70, 24, 20, 24, 10, 24, 10,\n            20, 50, 18, 40, 18, 10, 18, 10, 18, 10, 18, 40, 190, 40, 190, 12, 10, 10, 12, 10, 12, 10, 10, 20, 50, 20, 20, 20, 10, 50, 30, 30, 15, 20, 15, 20, 30\n        ];\n        this.pathCache = [];\n        this.pathMissing = null;\n        this.ctxReference = null;\n        for (let n = this.GLYPH_DATA.length - 1; n >= 0; n--)\n            this.pathCache[n] = null;\n    }\n    getKerning(ch1, ch2) {\n        const sz = this.KERN_K.length;\n        for (let n = 0; n < sz; n++)\n            if (this.KERN_C1[n] == ch1 && this.KERN_C2[n] == ch2)\n                return -this.KERN_K[n];\n        return 0;\n    }\n    static measureText(txt, size) { return this.main.measureText(txt, size); }\n    measureText(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n        return [dx * scale, font.ASCENT * scale * font.ASCENT_FUDGE, -font.DESCENT * scale];\n    }\n    static measureWidths(txt, size) { return this.main.measureWidths(txt, size); }\n    measureWidths(txt, size) {\n        let font = FontData.main;\n        let scale = size / font.UNITS_PER_EM;\n        let xpos = [0];\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = this.getIndex(ch);\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                xpos.push(dx * scale);\n                continue;\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n            xpos.push(dx * scale);\n        }\n        return xpos;\n    }\n    getIndex(ch) {\n        return this.UNICODE.indexOf(ch);\n    }\n    getRawGlyph(idx) {\n        return this.GLYPH_DATA[idx];\n    }\n    getGlyphPath(idx) {\n        let path = this.pathCache[idx];\n        if (path != null)\n            return path;\n        path = new Path2D(this.GLYPH_DATA[idx]);\n        this.pathCache[idx] = path;\n        return path;\n    }\n    getMissingPath() {\n        if (!this.pathMissing)\n            this.pathMissing = new Path2D(this.MISSING_DATA);\n        return this.pathMissing;\n    }\n    getOutlineX(idx) { return this.OUTLINE_X[idx].slice(0); }\n    getOutlineY(idx) { return this.OUTLINE_Y[idx].slice(0); }\n    initNativeFont(ctx) {\n        if (ctx == null && this.ctxReference)\n            return;\n        if (ctx == null) {\n            let canvas = new OffscreenCanvas(256, 256);\n            this.ctxReference = canvas.getContext('2d');\n        }\n        else\n            this.ctxReference = ctx;\n    }\n    static measureTextNative(txt, family, size, opt = {}) {\n        return this.main.measureTextNative(txt, family, size, opt);\n    }\n    measureTextNative(txt, family, size, opt = {}) {\n        if (!this.ctxReference)\n            throw 'Calling measureTextNative without having called initNativeFont first';\n        this.ctxReference.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        this.ctxReference.font = pfx + size + 'px ' + family;\n        let metrics = this.ctxReference.measureText(txt);\n        this.ctxReference.restore();\n        const FUDGE = this.ASCENT_FUDGE * this.ASCENT / this.UNITS_PER_EM;\n        return [metrics.width, size * FUDGE, size * (-this.DESCENT / this.ASCENT) * FUDGE];\n    }\n}\nFontData.main = new FontData();\nexport { FontData };\n//# sourceMappingURL=FontData.js.map","import { FontData } from './FontData';\nexport class OutlineMeasurement {\n    constructor(offsetX, offsetY, pointScale) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.pointScale = pointScale;\n        this.invScale = 1 / pointScale;\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) { return ax * this.pointScale + this.offsetX; }\n    angToY(ay) { return ay * -this.pointScale + this.offsetY; }\n    xToAng(px) { return (px - this.offsetX) * this.invScale; }\n    yToAng(py) { return (py - this.offsetY) * -this.invScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n}\n//# sourceMappingURL=ArrangeMeasurement.js.map","import { Vec } from '../util/Vec';\nimport { Molecule } from './Molecule';\nimport { Graph } from './Graph';\nimport { GeomUtil } from '../util/Geom';\nimport { norm2_xy, norm_xy } from '../util/util';\nexport class PseudoEmbedding {\n    constructor(mol) {\n        this.mol = mol;\n        this.bondMask = null;\n        this.crossings = [];\n    }\n    calculateCrossings() {\n        const { mol, bondMask, crossings } = this;\n        let na = mol.numAtoms, nb = mol.numBonds;\n        let maskCross = Vec.booleanArray(false, na);\n        for (let i = 1; i < nb; i++) {\n            if (bondMask && !bondMask[i - 1])\n                continue;\n            let x1 = mol.atomX(mol.bondFrom(i)), y1 = mol.atomY(mol.bondFrom(i));\n            let x2 = mol.atomX(mol.bondTo(i)), y2 = mol.atomY(mol.bondTo(i));\n            let dx = x2 - x1, dy = y2 - y1;\n            x1 += dx * 0.001;\n            y1 += dy * 0.001;\n            x2 -= dx * 0.001;\n            y2 -= dy * 0.001;\n            for (let j = i + 1; j <= nb; j++) {\n                if (bondMask && !bondMask[j - 1])\n                    continue;\n                let x3 = mol.atomX(mol.bondFrom(j)), y3 = mol.atomY(mol.bondFrom(j));\n                let x4 = mol.atomX(mol.bondTo(j)), y4 = mol.atomY(mol.bondTo(j));\n                dx = x4 - x3;\n                dy = y4 - y3;\n                x3 += dx * 0.001;\n                y3 += dy * 0.001;\n                x4 -= dx * 0.001;\n                y4 -= dy * 0.001;\n                if (GeomUtil.doLineSegsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)) {\n                    crossings.push({ bond1: i, bond2: j, higher: 0 });\n                    maskCross[mol.bondFrom(i) - 1] = true;\n                    maskCross[mol.bondTo(i) - 1] = true;\n                    maskCross[mol.bondFrom(j) - 1] = true;\n                    maskCross[mol.bondTo(j) - 1] = true;\n                }\n            }\n        }\n        if (crossings.length == 0)\n            return;\n        let crossRblk = new Set();\n        for (let n = 1; n <= na; n++) {\n            let rblk = mol.atomRingBlock(n);\n            if (rblk > 0)\n                crossRblk.add(rblk);\n        }\n        for (let n = 1; n <= na; n++)\n            if (!maskCross[n - 1]) {\n                let rblk = mol.atomRingBlock(n);\n                if (rblk > 0 && crossRblk.has(rblk))\n                    maskCross[n - 1] = true;\n            }\n        let maskComp = this.connectMaskedComponents(maskCross);\n        let g = Graph.fromMoleculeMask(mol, maskComp);\n        let ccgrp = g.calculateComponentGroups();\n        for (let n = 0; n < ccgrp.length; n++) {\n            for (let i = 0; i < ccgrp[n].length; i++)\n                ccgrp[n][i] = g.getIndex(ccgrp[n][i]);\n            this.embedComponent(ccgrp[n]);\n        }\n    }\n    connectMaskedComponents(imask) {\n        const { mol } = this;\n        let omask = Vec.duplicate(imask);\n        let gmol = Graph.fromMolecule(mol);\n        let na = mol.numAtoms, nb = mol.numBonds;\n        let maskNever = Vec.booleanArray(false, na);\n        while (true) {\n            let anything = false;\n            for (let n = 1; n <= nb; n++) {\n                let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n                let aidx = 0;\n                if (omask[bfr - 1] && !omask[bto - 1])\n                    aidx = bto;\n                else if (omask[bto - 1] && !omask[bfr - 1])\n                    aidx = bfr;\n                else\n                    continue;\n                if (maskNever[aidx - 1])\n                    continue;\n                let g = gmol.clone();\n                g.removeEdge(bfr - 1, bto - 1);\n                let cc = g.calculateComponents();\n                let hit = false;\n                for (let i = 0; i < na; i++)\n                    if (omask[i] && cc[i] == cc[aidx - 1]) {\n                        hit = true;\n                        break;\n                    }\n                if (hit) {\n                    omask[aidx - 1] = true;\n                    anything = true;\n                }\n                else\n                    maskNever[aidx - 1] = true;\n            }\n            if (!anything)\n                break;\n        }\n        return omask;\n    }\n    embedComponent(atoms) {\n        const { mol, crossings } = this;\n        let na = mol.numAtoms, gsz = atoms.length;\n        let amask = Vec.booleanArray(false, na);\n        for (let n = 0; n < gsz; n++)\n            amask[atoms[n] - 1] = true;\n        let z = Vec.numberArray(0, gsz), newZ = new Array(gsz);\n        if (this.seedFromInternalWedges(atoms, amask, z)) { }\n        else if (this.seedFromExternalWedges(atoms, amask, z)) { }\n        else if (this.seedFromPerspective(atoms, amask, z)) { }\n        else if (this.seedFromDensity(atoms, amask, z)) { }\n        else\n            return;\n        let ucount = this.normaliseHeights(z);\n        while (ucount < gsz) {\n            this.expandOutward(z, newZ, atoms, amask);\n            let ncount = this.normaliseHeights(newZ);\n            if (ncount == ucount)\n                break;\n            for (let n = 0; n < gsz; n++)\n                z[n] = newZ[n];\n            ucount = ncount;\n        }\n        for (let cross of crossings) {\n            if (amask[mol.bondFrom(cross.bond1) - 1])\n                this.updateCrossing(cross, atoms, z);\n        }\n    }\n    seedFromInternalWedges(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let success = false;\n        for (let n = 1; n <= nb; n++) {\n            let bt = mol.bondType(n);\n            if (bt != Molecule.BONDTYPE_INCLINED && bt != Molecule.BONDTYPE_DECLINED)\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (!amask[bfr - 1] || !amask[bto - 1])\n                continue;\n            if (bt == Molecule.BONDTYPE_INCLINED) {\n                z[atoms.indexOf(bfr)] -= 0.5;\n                z[atoms.indexOf(bto)] += 0.5;\n            }\n            else {\n                z[atoms.indexOf(bfr)] += 0.5;\n                z[atoms.indexOf(bto)] -= 0.5;\n            }\n            success = true;\n        }\n        return success;\n    }\n    seedFromExternalWedges(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let success = false;\n        for (let n = 1; n <= nb; n++) {\n            let bt = mol.bondType(n);\n            if (bt != Molecule.BONDTYPE_INCLINED && bt != Molecule.BONDTYPE_DECLINED)\n                continue;\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (amask[bfr - 1]) {\n                z[atoms.indexOf(bfr)] += bt == Molecule.BONDTYPE_INCLINED ? 1 : -1;\n                success = true;\n            }\n            else if (amask[bto - 1]) {\n                z[atoms.indexOf(bto)] += bt == Molecule.BONDTYPE_INCLINED ? -1 : 1;\n                success = true;\n            }\n        }\n        return success;\n    }\n    seedFromPerspective(atoms, amask, z) {\n        const { mol } = this;\n        let nb = mol.numBonds;\n        let avgdist = 0, maxdist = 0;\n        let count = 0, bidx = 0;\n        for (let n = 1; n <= nb; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            if (!amask[bfr - 1] || !amask[bto - 1])\n                continue;\n            let d = norm_xy(mol.atomX(bfr) - mol.atomX(bto), mol.atomY(bfr) - mol.atomY(bto));\n            avgdist += d;\n            count++;\n            if (d > maxdist) {\n                maxdist = d;\n                bidx = n;\n            }\n        }\n        if (count == 0 || bidx == 0)\n            return false;\n        avgdist /= count;\n        if (maxdist < avgdist * 1.02)\n            return false;\n        z[atoms.indexOf(mol.bondFrom(bidx))] = 1;\n        z[atoms.indexOf(mol.bondTo(bidx))] = 1;\n        return true;\n    }\n    seedFromDensity(atoms, amask, z) {\n        const { mol } = this;\n        let highIdx = 0;\n        let highCongest = 0;\n        for (let i = 0; i < atoms.length; i++) {\n            let x1 = mol.atomX(atoms[i]), y1 = mol.atomY(atoms[i]);\n            let congest = 0;\n            for (let j = 0; j < atoms.length; j++)\n                if (i != j)\n                    congest += 1.0 / (0.001 + norm2_xy(mol.atomX(atoms[j]) - x1, mol.atomY(atoms[j]) - y1));\n            if (congest > highCongest) {\n                highIdx = atoms[i];\n                highCongest = congest;\n            }\n        }\n        if (highIdx == 0)\n            return false;\n        z[atoms.indexOf(highIdx)] = 1;\n        return true;\n    }\n    normaliseHeights(z) {\n        Vec.addTo(z, -Vec.min(z));\n        let eps = Vec.max(z) * 1E-6;\n        let idx = Vec.idxSort(z);\n        let prevZ = -1;\n        let mark = 0;\n        for (let n = 0; n < idx.length; n++) {\n            if (prevZ < 0 || Math.abs(prevZ - z[idx[n]]) > eps)\n                mark++;\n            prevZ = z[idx[n]];\n            z[idx[n]] = mark;\n        }\n        Vec.addTo(z, -0.5 * (1 + Vec.max(z)));\n        return mark;\n    }\n    expandOutward(z, newZ, atoms, amask) {\n        const { mol } = this;\n        let gsz = atoms.length;\n        for (let n = 0; n < gsz; n++)\n            newZ[n] = z[n];\n        for (let n = 0; n < gsz; n++) {\n            let adj = mol.atomAdjList(atoms[n]);\n            for (let i = 0; i < adj.length; i++)\n                if (amask[adj[i] - 1])\n                    newZ[atoms.indexOf(adj[i])] += 0.1 * z[n];\n        }\n    }\n    updateCrossing(cross, atoms, z) {\n        const { mol } = this;\n        let bfr1 = mol.bondFrom(cross.bond1), bto1 = mol.bondTo(cross.bond1);\n        let bfr2 = mol.bondFrom(cross.bond2), bto2 = mol.bondTo(cross.bond2);\n        let idx1 = atoms.indexOf(bfr1), idx2 = atoms.indexOf(bto1);\n        let idx3 = atoms.indexOf(bfr2), idx4 = atoms.indexOf(bto2);\n        if (idx1 < 0 || idx2 < 0 || idx3 < 0 || idx4 < 0)\n            return;\n        let x1a = mol.atomX(bfr1), y1a = mol.atomY(bfr1), x1b = mol.atomX(bto1), y1b = mol.atomY(bto1);\n        let x2a = mol.atomX(bfr2), y2a = mol.atomY(bfr2), x2b = mol.atomX(bto2), y2b = mol.atomY(bto2);\n        let xy = GeomUtil.lineIntersect(x1a, y1a, x1b, y1b, x2a, y2a, x2b, y2b);\n        let dx1 = x1b - x1a, dy1 = y1b - y1a, dx2 = x2b - x2a, dy2 = y2b - y2a;\n        let ext1 = Math.abs(dx1) > Math.abs(dy1) ? (xy[0] - x1a) / dx1 : (xy[1] - y1a) / dy1;\n        let ext2 = Math.abs(dx2) > Math.abs(dy2) ? (xy[0] - x2a) / dx2 : (xy[1] - y2a) / dy2;\n        if (ext1 < 0 || ext1 > 1 || ext2 < 0 || ext2 > 1)\n            return;\n        let z1a = z[idx1], z1b = z[idx2], z2a = z[idx3], z2b = z[idx4];\n        let z1 = z1a + ext1 * (z1b - z1a), z2 = z2a + ext2 * (z2b - z2a);\n        cross.higher = z1 > z2 ? 1 : 2;\n    }\n}\n//# sourceMappingURL=PseudoEmbedding.js.map","import { GeomUtil } from './Geom';\nimport { DEGRAD, fltEqual, norm2_xy, norm_xy, sqr, TWOPI } from './util';\nimport { Vec } from './Vec';\nconst CACHE_SIZE = 1000;\nclass FitRotatedEllipse {\n    constructor(px, py, margin) {\n        this.px = px;\n        this.py = py;\n        this.margin = margin;\n        this.theta = 0;\n        this.stop = false;\n        this.hashKey = JSON.stringify([this.px, this.py]);\n    }\n    calculate() {\n        if (this.lookupCache())\n            return;\n        this.setupParameters();\n        if (this.stop)\n            return;\n        this.currentScore = this.calculateScore(this.cx, this.cy, this.rw, this.rh);\n        this.coarseDiscovery();\n        this.fineImprovement();\n        this.theta = -this.theta;\n        this.saveCache();\n    }\n    getSpline() {\n        return GeomUtil.createBezierEllipse(this.cx, this.cy, this.rw, this.rh, this.theta);\n    }\n    lookupCache() {\n        let hashKey = this.hashKey;\n        let look = FitRotatedEllipse.cacheMap.get(hashKey);\n        if (look) {\n            this.cx = look.cx;\n            this.cy = look.cy;\n            this.rw = look.rw;\n            this.rh = look.rh;\n            this.theta = look.theta;\n            const { cacheVal } = FitRotatedEllipse;\n            for (let n = cacheVal.length - 1; n >= 0; n--)\n                if (cacheVal[n].hashKey == hashKey) {\n                    if (n < cacheVal.length - 1) {\n                        cacheVal.push(cacheVal[n]);\n                        cacheVal.splice(n, 1);\n                    }\n                    break;\n                }\n            return true;\n        }\n        return false;\n    }\n    saveCache() {\n        let hashKey = this.hashKey;\n        const { cacheVal, cacheMap } = FitRotatedEllipse;\n        cacheVal.push(this);\n        cacheMap.set(hashKey, this);\n        while (cacheVal.length > CACHE_SIZE) {\n            cacheMap.delete(cacheVal[0].hashKey);\n            cacheVal.splice(0);\n        }\n    }\n    setupParameters() {\n        const psz = this.psz = this.px.length;\n        const invpsz = this.invpsz = 1.0 / psz;\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        let ptheta = new Array(psz), pdist = new Array(psz);\n        for (let n = 0; n < psz; n++) {\n            ptheta[n] = Math.atan2(this.py[n] - this.cy, this.px[n] - this.cx);\n            pdist[n] = norm_xy(this.px[n] - this.cx, this.py[n] - this.cy);\n        }\n        let order = Vec.idxSort(ptheta);\n        this.px = Vec.idxGet(this.px, order);\n        this.py = Vec.idxGet(this.py, order);\n        ptheta = Vec.idxGet(ptheta, order);\n        pdist = Vec.idxGet(pdist, order);\n        let buffX = new Array(psz), buffY = new Array(psz);\n        const rotatedScore = (ptheta, pdist, rtheta) => {\n            for (let n = 0; n < psz; n++) {\n                buffX[n] = pdist[n] * Math.cos(ptheta[n] + rtheta);\n                buffY[n] = pdist[n] * Math.sin(ptheta[n] + rtheta);\n            }\n            let scx = Vec.sum(buffX) * invpsz, scy = Vec.sum(buffY) * invpsz;\n            let devx = 0, devy = 0;\n            for (let n = 0; n < psz; n++) {\n                devx += sqr(buffX[n] - scx);\n                devy += Math.abs(buffY[n] - scy);\n            }\n            return devy / (1 + devx);\n        };\n        let bestScore = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < 360; n++) {\n            let th = n * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let dth = -1; dth <= 1; dth += 0.05) {\n            let th = this.theta + dth * DEGRAD;\n            let score = rotatedScore(ptheta, pdist, th);\n            if (score < bestScore) {\n                this.theta = th;\n                bestScore = score;\n            }\n        }\n        for (let n = 0; n < psz; n++) {\n            this.px[n] = this.cx + pdist[n] * Math.cos(ptheta[n] + this.theta);\n            this.py[n] = this.cy + pdist[n] * Math.sin(ptheta[n] + this.theta);\n        }\n        this.cx = Vec.sum(this.px) * invpsz;\n        this.cy = Vec.sum(this.py) * invpsz;\n        this.rw = this.rh = 1;\n    }\n    coarseDiscovery() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const DELTA_OPTIONS = [\n            { dx: -1, dy: 0, dw: 0, dh: 0 },\n            { dx: 1, dy: 0, dw: 0, dh: 0 },\n            { dx: 0, dy: -1, dw: 0, dh: 0 },\n            { dx: 0, dy: 1, dw: 0, dh: 0 },\n            { dx: 0, dy: 0, dw: -1, dh: 0 },\n            { dx: 0, dy: 0, dw: 1, dh: 0 },\n            { dx: 0, dy: 0, dw: 0, dh: -1 },\n            { dx: 0, dy: 0, dw: 0, dh: 1 },\n        ];\n        for (let sanity = 0; sanity < 1000; sanity++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let delta of DELTA_OPTIONS) {\n                let newCX = this.cx + delta.dx * deltaD;\n                let newCY = this.cy + delta.dy * deltaD;\n                let newRW = this.rw + delta.dw * deltaR;\n                let newRH = this.rh + delta.dh * deltaR;\n                let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                    anything = true;\n                    bestScore = newScore;\n                    bestCX = newCX;\n                    bestCY = newCY;\n                    bestRW = newRW;\n                    bestRH = newRH;\n                }\n            }\n            if (!anything)\n                break;\n            this.currentScore = bestScore;\n            this.cx = bestCX;\n            this.cy = bestCY;\n            this.rw = bestRW;\n            this.rh = bestRH;\n        }\n    }\n    fineImprovement() {\n        const { margin } = this;\n        let deltaD = 0.1 * margin, deltaR = 0.5 * deltaD;\n        const REDUCTION = 2.0 / 3;\n        const MAX_REDUCTIONS = 20;\n        for (let reduc = 0; reduc < MAX_REDUCTIONS; reduc++) {\n            let anything = false;\n            let bestScore = this.currentScore;\n            let bestCX = this.cx, bestCY = this.cy, bestRW = this.rw, bestRH = this.rh;\n            for (let dCX = -1; dCX <= 1; dCX++) {\n                let newCX = this.cx + dCX * deltaD;\n                for (let dCY = -1; dCY <= 1; dCY++) {\n                    let newCY = this.cy + dCY * deltaD;\n                    for (let dRW = -1; dRW <= 1; dRW++) {\n                        let newRW = this.rw + dRW * deltaR;\n                        for (let dRH = -1; dRH <= 1; dRH++) {\n                            let newRH = this.rh + dRH * deltaR;\n                            if (dCX == 0 && dCY == 0 && dRW == 0 && dRH == 0)\n                                continue;\n                            let newScore = this.calculateScore(newCX, newCY, newRW, newRH);\n                            if (newScore > bestScore && !fltEqual(newScore, bestScore)) {\n                                anything = true;\n                                bestScore = newScore;\n                                bestCX = newCX;\n                                bestCY = newCY;\n                                bestRW = newRW;\n                                bestRH = newRH;\n                            }\n                        }\n                    }\n                }\n            }\n            if (anything) {\n                this.currentScore = bestScore;\n                this.cx = bestCX;\n                this.cy = bestCY;\n                this.rw = bestRW;\n                this.rh = bestRH;\n            }\n            else {\n                reduc++;\n                deltaD *= REDUCTION;\n                deltaR *= REDUCTION;\n            }\n        }\n    }\n    calculateScore(cx, cy, rw, rh) {\n        const { px, py, margin } = this, psz = px.length;\n        const nseg = 24;\n        let cosTheta = 1, sinTheta = 0;\n        let incrAlpha = TWOPI / nseg;\n        let closestDSQ = Vec.numberArray(Number.POSITIVE_INFINITY, psz);\n        for (let n = 0; n < nseg; n++) {\n            let alpha = n * incrAlpha;\n            let cosAlpha = Math.cos(alpha), sinAlpha = Math.sin(alpha);\n            let dx = rw * cosAlpha * cosTheta - rh * sinAlpha * sinTheta;\n            let dy = rw * cosAlpha * sinTheta + rh * sinAlpha * cosTheta;\n            let d = norm_xy(dx, dy) + margin, eth = Math.atan2(dy, dx);\n            let x = cx + d * Math.cos(eth);\n            let y = cy + d * Math.sin(eth);\n            for (let i = 0; i < psz; i++) {\n                let ii = i == psz - 1 ? 0 : i + 1;\n                if (GeomUtil.doLineSegsIntersect(cx, cy, x, y, px[i], py[i], px[ii], py[ii]))\n                    return 0;\n            }\n            for (let i = 0; i < psz; i++)\n                closestDSQ[i] = Math.min(closestDSQ[i], norm2_xy(x - px[i], y - py[i]));\n        }\n        let proxSum = 0;\n        for (let dsq of closestDSQ)\n            proxSum += 1.0 / (1 + Math.sqrt(dsq));\n        return rw * rh + proxSum;\n    }\n}\nFitRotatedEllipse.cacheVal = [];\nFitRotatedEllipse.cacheMap = new Map();\nexport { FitRotatedEllipse };\n//# sourceMappingURL=FitRotatedEllipse.js.map","import { Vec } from '../util/Vec';\nlet globalInstance = null;\nimport ontoUnits from '../res/data/ontology/units.onto';\nconst ONTOLOGY_SOURCE = {\n    'units': ontoUnits,\n};\nexport class OntologyTree {\n    static get main() { return globalInstance; }\n    static getOntologyKeys() { return Object.keys(ONTOLOGY_SOURCE); }\n    static getOntologyData(key) { return ONTOLOGY_SOURCE[key]; }\n    constructor() {\n        this.roots = [];\n        this.mapTerms = new Map();\n        this.alreadyLoaded = new Set();\n    }\n    static init() {\n        if (globalInstance)\n            return;\n        globalInstance = new OntologyTree();\n        for (let key of this.getOntologyKeys()) {\n            globalInstance.loadFromString(key, this.getOntologyData(key));\n        }\n    }\n    getRoots() {\n        return this.roots;\n    }\n    hasTerm(uri) { return this.mapTerms.has(uri); }\n    getBranch(uri) {\n        return this.mapTerms.get(uri);\n    }\n    getBranchList(root) {\n        if (typeof root == 'string') {\n            let look = this.mapTerms.get(root);\n            if (!look)\n                throw `Unknown branch URI: ${root}`;\n            if (look.length > 1)\n                throw `Ambiguous branch URI occurs more than once: ${root}`;\n            root = look[0];\n        }\n        let list = [];\n        let accumulate = (branch) => {\n            list.push(branch);\n            for (let child of Vec.safeArray(branch.children))\n                accumulate(child);\n        };\n        accumulate(root);\n        return list;\n    }\n    loadFromString(key, text) {\n        if (this.alreadyLoaded.has(key))\n            return;\n        this.alreadyLoaded.add(key);\n        this.loadContent(text);\n    }\n    loadContent(text) {\n        let termList = [];\n        let pos = 0;\n        for (let line of text.split(/\\n/)) {\n            pos++;\n            line = line.trim();\n            if (!line || line.startsWith('#'))\n                continue;\n            let idx = line.indexOf('http');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no URI term: ${line}`;\n            let depth = 0;\n            for (let n = 0; n < idx; n++)\n                if (line.charAt(n) == '-')\n                    depth++;\n            let uri = line.substring(idx);\n            idx = uri.indexOf(' ');\n            if (idx < 0)\n                throw `Line ${pos} invalid, no label: ${line}`;\n            let label = uri.substring(idx + 1);\n            uri = uri.substring(0, idx);\n            let term = null;\n            if (depth == 0)\n                term = this.roots.find((look) => look.uri == uri);\n            if (!term) {\n                term = { uri, label, 'parent': null, 'children': [], depth };\n                if (depth == 0)\n                    this.roots.push(term);\n                else {\n                    for (let n = termList.length - 1; n >= 0; n--)\n                        if (termList[n].depth == depth - 1) {\n                            term.parent = termList[n];\n                            termList[n].children.push(term);\n                            break;\n                        }\n                    if (!term.parent)\n                        throw `Line ${pos} invalid hierarchy, no parent found`;\n                }\n                let list = this.mapTerms.get(uri);\n                if (list)\n                    list.push(term);\n                else\n                    this.mapTerms.set(uri, [term]);\n            }\n            termList.push(term);\n        }\n    }\n    debugString(term) {\n        let lines = [];\n        let emit = (term) => {\n            lines.push('* '.repeat(term.depth) + `<${term.uri}> \"${term.label}\"`);\n            for (let child of term.children)\n                emit(child);\n        };\n        emit(term);\n        return lines.join('\\n');\n    }\n}\n//# sourceMappingURL=OntologyTree.js.map","export default \"http://purl.obolibrary.org/obo/UO_0000000 units\\n- http://purl.obolibrary.org/obo/UO_0000051 concentration units\\n- - http://www.bioassayontology.org/bao#BAO_0000102 -log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000175 grams per litre (g/L)\\n- - http://www.bioassayontology.org/bao#BAO_0000101 log10[mol/L]\\n- - http://purl.obolibrary.org/obo/UO_0000275 micrograms per litre (ug/L)\\n- - http://purl.obolibrary.org/obo/UO_0000064 micromoles per litre (umol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000273 milligrams per litre (mg/L)\\n- - http://purl.obolibrary.org/obo/UO_0000063 millimoles per litre (mmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000062 moles per litre (mol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000065 nanomoles per litre (nmol/L)\\n- - http://purl.obolibrary.org/obo/UO_0000066 picomoles per litre (pmol/L)\\n- http://purl.obolibrary.org/obo/UO_0000186 dimensionless unit\\n- - http://www.bioassayontology.org/bao#BAO_0080023 binary (true/false)\\n- - http://purl.obolibrary.org/obo/UO_0000187 percent\";","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {Vec} from 'webmolkit/util/Vec';\n\n/*\n\tTry to arrange a list of boxes into a more rectangular pattern, which has a better ratio than stacking everything vertically.\n*/\n\nenum SquarePackingSpring\n{\n\tStrong = 0,\n\tMedium = 1,\n\tWeak = 2,\n}\n\ninterface SquarePackingCandidate\n{\n\tidxStart:number;\n\tsprings:SquarePackingSpring[];\n\tlayout?:Box[];\n\toutline?:Size;\n\tscore?:number; // lower is better\n\thash?:string;\n}\n\ninterface SquarePackingSegment\n{\n\ty:number;\n\tx1:number;\n\tx2:number;\n}\n\nexport class SquarePacking\n{\n\tpublic outline:Size;\n\tpublic layout:Box[] = null;\n\n\tprivate wantRatio:number;\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(private packSize:Size, private boxes:Box[], private hspace:number, private vspace:number)\n\t{\n\t\tthis.wantRatio = packSize.w / packSize.h;\n\n\t\t/*\n\t\t// !! temporary validation\n\t\tlet segs:SquarePackingSegment[] =\n\t\t[\n\t\t\t{'y': 0, 'x1': 0, 'x2': 1},\n\t\t\t{'y': 2, 'x1': 1, 'x2': 3},\n\t\t\t{'y': 1, 'x1': 3, 'x2': Number.POSITIVE_INFINITY}\n\t\t];\n\t\tthis.mergeSegmentAbove(segs, {'y': 2.5, 'x1': 1.5, 'x2': 2.5});\n\t\t//this.mergeSegmentBelow(segs, {'y': -1.5, 'x1': 2, 'x2': 3.5});\n\t\tfor (let seg of segs) console.log(JSON.stringify(seg));\n\t\tthrow 'blork';*/\n\t}\n\n\t// carries out the arrangement: returns whether it got something good\n\tpublic pack():boolean\n\t{\n\t\tlet candidates:SquarePackingCandidate[] = [];\n\t\tlet num = this.boxes.length;\n\t\tfor (let n = 0; n < num; n++)\n\t\t{\n\t\t\tlet cand:SquarePackingCandidate = {idxStart: n, springs: Vec.anyArray(SquarePackingSpring.Weak, num)};\n\t\t\tcand.hash = cand.idxStart + '/' + cand.springs;\n\t\t\tthis.processCandidate(cand);\n\t\t\tcandidates.push(cand);\n\t\t}\n\n\t\tconst KEEP = 100;\n\t\tcandidates = candidates.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\tfor (let sanity = 100; sanity > 0; sanity--)\n\t\t{\n\t\t\tlet hashes = new Set<string>();\n\t\t\tfor (let cand of candidates) hashes.add(cand.hash);\n\n\t\t\tlet batch = candidates.slice(0);\n\t\t\tfor (let cand of candidates) for (let n = 0; n < num; n++) if (n != cand.idxStart)\n\t\t\t{\n\t\t\t\tfor (let sp of [SquarePackingSpring.Strong, SquarePackingSpring.Medium, SquarePackingSpring.Weak]) if (cand.springs[n] != sp)\n\t\t\t\t{\n\t\t\t\t\tlet mod:SquarePackingCandidate = {idxStart: cand.idxStart, springs: cand.springs.slice(0)};\n\t\t\t\t\tmod.springs[n] = sp;\n\t\t\t\t\tmod.hash = mod.idxStart + '/' + mod.springs;\n\t\t\t\t\tif (hashes.has(mod.hash)) continue;\n\t\t\t\t\tthis.processCandidate(mod);\n\t\t\t\t\tbatch.push(mod);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbatch = batch.sort((c1, c2) => c1.score - c2.score).slice(0, KEEP);\n\n\t\t\tlet same = true;\n\t\t\tfor (let n = 0; n < candidates.length && n < batch.length; n++) if (candidates[n].hash != batch[n].hash) {same = false; break;}\n\n\t\t\tif (!same) break;\n\n\t\t\tcandidates = batch;\n\t\t}\n\n\t\tlet best = candidates[0];\n\n\t\tthis.outline = best.outline;\n\t\tthis.layout = best.layout;\n\t\tlet minY = Vec.min(this.layout.map((b) => b.y));\n\t\tfor (let box of this.layout) box.y -= minY;\n\n\t\treturn true;\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate processCandidate(cand:SquarePackingCandidate):void\n\t{\n\t\tlet len = this.boxes.length;\n\t\tcand.layout = this.boxes.map((box) => new Box(0, 0, box.w, box.h));\n\t\tlet placed = Vec.booleanArray(false, len);\n\t\tplaced[cand.idxStart] = true;\n\n\t\tlet placeAbove = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx + 1; n < len; n++) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() - this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.minY() - this.vspace + 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentAbove(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.min(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y > bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY - box.h;\n\t\t\tplaced[idx] = true;\n\t\t};\n\t\tlet placeBelow = (idx:number, spring:SquarePackingSpring):void =>\n\t\t{\n\t\t\tlet box = cand.layout[idx];\n\t\t\tlet segs:SquarePackingSegment[] = null;\n\t\t\tfor (let n = idx - 1; n >= 0; n--) if (placed[n])\n\t\t\t{\n\t\t\t\tlet ref = cand.layout[n];\n\t\t\t\tlet newsegs:SquarePackingSegment[] = [];\n\t\t\t\tif (ref.minX() > 0) newsegs.push({y: ref.midY() + this.vspace, x1: 0, x2: ref.minX() - this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace, x1: Math.max(0, ref.minX() - this.hspace), x2: ref.maxX() + this.hspace});\n\t\t\t\tnewsegs.push({y: ref.maxY() + this.vspace - 0.5 * box.h, x1: ref.maxX() + this.hspace, x2: Number.POSITIVE_INFINITY});\n\t\t\t\tif (segs == null) segs = newsegs;\n\t\t\t\telse for (let nseg of newsegs) this.mergeSegmentBelow(segs, nseg);\n\t\t\t}\n\n\t\t\tlet bestX = 0, bestY = Number.POSITIVE_INFINITY;\n\t\t\tfor (let n = 0; n < segs.length; n++)\n\t\t\t{\n\t\t\t\tlet x = segs[n].x1, y = Number.NEGATIVE_INFINITY;\n\t\t\t\tfor (let i = n; i < segs.length; i++)\n\t\t\t\t{\n\t\t\t\t\ty = Math.max(y, segs[i].y);\n\t\t\t\t\tif (box.w < segs[i].x2 - x) break;\n\t\t\t\t}\n\t\t\t\tif (y < bestY) [bestX, bestY] = [x, y];\n\t\t\t\tif (spring == SquarePackingSpring.Strong) break;\n\t\t\t\tif (spring == SquarePackingSpring.Medium && x > 0.5 * this.packSize.w) break;\n\t\t\t}\n\t\t\tbox.x = bestX;\n\t\t\tbox.y = bestY;\n\t\t\tplaced[idx] = true;\n\t\t};\n\n\t\tfor (let d = 1; d < len; d++)\n\t\t{\n\t\t\tlet i1 = cand.idxStart - d, i2 = cand.idxStart + d;\n\t\t\tif (i1 >= 0) placeAbove(i1, cand.springs[i1]);\n\t\t\tif (i2 < len) placeBelow(i2, cand.springs[i2]);\n\t\t}\n\n\t\tlet loX = 0, hiX = Vec.max(cand.layout.map((box) => box.maxX()));\n\t\tlet loY = Vec.min(cand.layout.map((box) => box.minY())), hiY = Vec.max(cand.layout.map((box) => box.maxY()));\n\t\tcand.outline = new Size(hiX - loX, hiY - loY);\n\t\tlet ratio = cand.outline.w / cand.outline.h;\n\t\tcand.score = Math.abs(ratio - this.wantRatio) * (cand.outline.w + cand.outline.h);\n\t\tcand.score += Vec.sum((cand.layout.map((box) => box.x)));\n\t\tfor (let n = 0; n < cand.layout.length - 1; n++) cand.score += Math.max(0, cand.layout[n].minY() - cand.layout[n].maxY());\n\t}\n\n\tprivate mergeSegmentAbove(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n\tprivate mergeSegmentBelow(segs:SquarePackingSegment[], merge:SquarePackingSegment):void\n\t{\n\t\tfor (let look of segs)\n\t\t{\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2 && merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y < look.y) return; // completely buried\n\t\t\t\tsegs.push({y: look.y, x1: merge.x2, x2: look.x2});\n\t\t\t\tlook.x2 = merge.x1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (merge.x1 >= look.x1 && merge.x1 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x2 = merge.x1; else merge.x1 = look.x2;\n\t\t\t}\n\t\t\tif (merge.x2 >= look.x1 && merge.x2 <= look.x2)\n\t\t\t{\n\t\t\t\tif (merge.y > look.y) look.x1 = merge.x2; else merge.x2 = look.x1;\n\t\t\t}\n\t\t}\n\t\tfor (let n = segs.length - 1; n >= 0; n--) if (segs[n].x1 >= segs[n].x2) segs.splice(n, 1);\n\t\tif (merge.x1 < merge.x2)\n\t\t{\n\t\t\tsegs.push(merge);\n\t\t\tsegs.sort((seg1, seg2) => seg1.x1 - seg2.x1);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {formatDouble} from 'webmolkit/util/util';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {SquarePacking} from './SquarePacking';\nimport {FontData} from 'webmolkit/gfx/FontData';\nimport {MixfileComponent} from './Mixfile';\nimport {NormMixture} from './NormMixture';\nimport {Mixture} from './Mixture';\n\n/*\n\tArranging a Mixfile: will create a tree layout for all of the components, according to parameters.\n*/\n\nexport enum ArrangeMixtureLineSource\n{\n\tName,\n\tQuantity,\n\tIdentifier,\n\tMeta,\n}\n\nexport interface ArrangeMixtureLine\n{\n\ttext:string;\n\tcol:number;\n\tsource:ArrangeMixtureLineSource;\n}\n\nexport interface ArrangeMixtureComponent\n{\n\torigin:number[];\n\tcontent:MixfileComponent;\n\tparentIdx:number;\n\n\tboundary?:Box; // outer boundary (position on canvas)\n\n\tmol?:Molecule;\n\tmolLayout?:ArrangeMolecule;\n\tmolBox?:Box;\n\n\tnameBox?:Box;\n\tnameLines?:ArrangeMixtureLine[];\n\tfontSize?:number;\n\n\toutline?:Box; // inner boundary (surrounds molecule, names, etc.)\n\n\tisCollapsed?:boolean;\n\tcollapseBox?:Box;\n}\n\nconst PADDING = 0.25;\nconst VSPACE = 0.5;\nconst HSPACE = 1;\nconst COLLAPSE_SIZE = 0.3;\nconst COLLAPSE_GAP = 0.05;\n\nexport class ArrangeMixture\n{\n\tpublic norm:NormMixture = null; // optional: contents may be used for additional decoration\n\n\tpublic scale:number;\n\tpublic nameFontSize:number;\n\tpublic width = 0;\n\tpublic height = 0;\n\n\tpublic components:ArrangeMixtureComponent[] = [];\n\n\t// parameters to influence the drawing\n\tpublic limitStructW:number;\n\tpublic limitStructH:number;\n\tpublic minBoxSize:Size = null;\n\tpublic showCollapsors = false; // if true, boxes for [+]/[-] will be created for interactive use\n\tpublic collapsedBranches:number[][] = []; // any origin specified in this list will not display its children\n\tpublic packBranches:Size = null; // if defined, makes an effort to pack branches into the box size\n\tpublic hardwrapName:number; // name width guaranteed not longer than this\n\tpublic softwrapName:number; // name wrapping at selected characters kicks in after this width\n\tpublic includeIdentifiers = true; // if switched off, identifiers won't be included in text\n\n\t// optionally override the size estimation for the molecule: note that this should be paired with overriding\n\t// the actual drawing; return null to fall back to default sizing, or zero-size to indicate nothing\n\tpublic callbackMoleculeSize:(comp:ArrangeMixtureComponent) => Size = null;\n\n\t// --------------------- public methods ---------------------\n\n\t// sets up the object with the mandatory information\n\tconstructor(public mixture:Mixture, public measure:ArrangeMeasurement, public policy:RenderPolicy)\n\t{\n\t\tthis.scale = policy.data.pointScale;\n\t\tthis.nameFontSize = 0.5 * this.scale;\n\t\tthis.limitStructW = this.limitStructH = this.scale * 10;\n\t\tthis.hardwrapName = 12 * this.scale;\n\t\tthis.softwrapName = 8 * this.scale;\n\t}\n\n\t// carries out the arrangement\n\tpublic arrange():void\n\t{\n\t\tthis.createComponents();\n\t\tthis.layoutSubComponents(0);\n\t\tthis.contractComponents();\n\n\t\t// normalize boundaries\n\t\tlet outline:Box = null;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tif (outline) outline = outline.union(comp.boundary); else outline = comp.boundary;\n\t\t}\n\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.x -= outline.x;\n\t\t\tcomp.boundary.y -= outline.y;\n\n\t\t\tif (comp.molLayout)\n\t\t\t{\n\t\t\t\tlet b1 = comp.boundary, b2 = comp.molBox;\n\t\t\t\tcomp.molLayout.squeezeInto(b1.x + b2.x, b1.y + b2.y, b2.w, b2.h);\n\t\t\t}\n\t\t}\n\t\tthis.width = outline.w;\n\t\tthis.height = outline.h;\n\t}\n\n\t// resize the whole thing\n\tpublic scaleComponents(modScale:number):void\n\t{\n\t\tif (modScale == 1) return;\n\n\t\tthis.scale *= modScale;\n\t\tthis.width *= modScale;\n\t\tthis.height *= modScale;\n\t\tfor (let comp of this.components)\n\t\t{\n\t\t\tcomp.boundary.scaleBy(modScale);\n\t\t\tcomp.outline.scaleBy(modScale);\n\t\t\tif (comp.molBox)\n\t\t\t{\n\t\t\t\tcomp.molBox.scaleBy(modScale);\n\t\t\t\tif (comp.molLayout)\n\t\t\t\t{\n\t\t\t\t\tlet mx = comp.boundary.x + comp.molBox.x, my = comp.boundary.y + comp.molBox.y;\n\t\t\t\t\tcomp.molLayout.squeezeInto(mx, my, comp.molBox.w, comp.molBox.h);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (comp.nameBox) comp.nameBox.scaleBy(modScale);\n\t\t\tif (comp.collapseBox) comp.collapseBox.scaleBy(modScale);\n\t\t\tcomp.fontSize *= modScale;\n\t\t}\n\t}\n\n\t// returns the index of the indicated origin vector, or -1 if not present\n\tpublic findComponent(origin:number[]):number\n\t{\n\t\tfor (let n = 0; n < this.components.length; n++) if (Vec.equals(this.components[n].origin, origin)) return n;\n\t\treturn -1;\n\t}\n\n\t// turn quantity info into a readable string\n\tpublic static formatQuantity(mixcomp:MixfileComponent):string\n\t{\n\t\tlet prec = (val:number):string =>\n\t\t{\n\t\t\tif (val == null) return '';\n\t\t\tif (val > 10000) return Math.round(val).toString();\n\t\t\tlet str = val.toPrecision(6);\n\t\t\tif (str.indexOf('e') >= 0 || str.indexOf('.') < 0) return str;\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tif (str.endsWith('0')) str = str.substring(0, str.length - 1);\n\t\t\t\telse if (str.endsWith('.')) {str = str.substring(0, str.length - 1); break;}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\treturn str;\n\t\t};\n\n\t\tif (mixcomp.ratio)\n\t\t{\n\t\t\tif (mixcomp.ratio.length == 2) return prec(mixcomp.ratio[0]) + '/' + prec(mixcomp.ratio[1]);\n\t\t\treturn null; // invalid ratio\n\t\t}\n\n\t\tif (mixcomp.quantity == null) return null;\n\n\t\tlet str = '';\n\t\tif (mixcomp.relation && mixcomp.relation != '=')\n\t\t{\n\t\t\tlet rel = mixcomp.relation;\n\t\t\tif (rel == '>=') rel = '\\u{2265}'; else if (rel == '<=') rel = '\\u{2264}';\n\t\t\tstr += rel /*+ ' '*/;\n\t\t}\n\t\tif (mixcomp.quantity instanceof Array)\n\t\t{\n\t\t\tif (mixcomp.quantity.length == 0) return;\n\t\t\tstr += prec(mixcomp.quantity[0]);\n\t\t\tif (mixcomp.quantity.length >= 2) str += ' - ' + prec(mixcomp.quantity[1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr += prec(mixcomp.quantity); // is presumed to be scalar\n\t\t\tif (mixcomp.error)\n\t\t\t{\n\t\t\t\t// TODO: match the significant figures more carefully\n\t\t\t\tstr += ' \\u{00B1} ' + prec(mixcomp.error);\n\t\t\t}\n\t\t}\n\n\t\tif (mixcomp.units)\n\t\t{\n\t\t\tif (!mixcomp.units.startsWith('%')) str += ' ';\n\t\t\tstr += mixcomp.units;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\t// if the component has a \"standardised\" quantity, format and return\n\tprivate formatNormQuantity(origin:number[]):string\n\t{\n\t\tif (!this.norm) return;\n\t\tlet note = this.norm.findNote(origin);\n\t\tif (!note || !note.concQuantity) return;\n\n\t\tlet comp:MixfileComponent =\n\t\t{\n\t\t\tquantity: note.concQuantity,\n\t\t\terror: note.concError,\n\t\t\tunits: note.concUnits,\n\t\t\trelation: note.concRelation,\n\t\t};\n\t\treturn ArrangeMixture.formatQuantity(comp);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\t// instantiate each component in the diagram (which includes pluses and arrows)\n\tprivate createComponents():void\n\t{\n\t\t// assemble the components into a flat hierarchy\n\t\tlet examineBranch = (origin:number[], mixcomp:MixfileComponent, idx:number):void =>\n\t\t{\n\t\t\tlet comp:ArrangeMixtureComponent = {origin, content: mixcomp, parentIdx: idx};\n\t\t\tlet parentIdx = this.components.push(comp) - 1;\n\n\t\t\t// see if it's been indicated as collapsed\n\t\t\tcomp.isCollapsed = false;\n\t\t\tfor (let origin of this.collapsedBranches) if (Vec.equals(origin, comp.origin)) comp.isCollapsed = true;\n\n\t\t\tif (mixcomp.contents && !comp.isCollapsed) for (let n = 0; n < mixcomp.contents.length; n++)\n\t\t\t{\n\t\t\t\tlet subOrigin = Vec.append(origin, n);\n\t\t\t\texamineBranch(subOrigin, mixcomp.contents[n], parentIdx);\n\t\t\t}\n\t\t};\n\t\texamineBranch([], this.mixture.mixfile, -1);\n\n\t\tlet padding = PADDING * this.scale;\n\n\t\t// do the sizing for each component\n\t\tfor (let [idx, comp] of this.components.entries())\n\t\t{\n\t\t\tlet mixcomp = comp.content;\n\n\t\t\t// handle molecule, if any\n\t\t\tif (mixcomp.molfile) comp.mol = MoleculeStream.readUnknown(mixcomp.molfile);\n\n\t\t\tlet molsz = this.callbackMoleculeSize && this.callbackMoleculeSize(comp);\n\t\t\tif (molsz)\n\t\t\t{\n\t\t\t\tcomp.molBox = Box.fromSize(molsz);\n\t\t\t}\n\t\t\telse if (comp.mol)\n\t\t\t{\n\t\t\t\tcomp.molLayout = new ArrangeMolecule(comp.mol, this.measure, this.policy);\n\t\t\t\tcomp.molLayout.arrange();\n\t\t\t\tcomp.molLayout.squeezeInto(0, 0, this.limitStructW, this.limitStructH);\n\t\t\t\tlet bounds = comp.molLayout.determineBoundary();\n\t\t\t\tcomp.molBox = new Box(padding, padding, Math.ceil(bounds[2] - bounds[0]), Math.ceil(bounds[3] - bounds[1]));\n\t\t\t}\n\t\t\telse comp.molBox = Box.zero();\n\n\t\t\t// handle name, or other content needing representation\n\t\t\tcomp.nameLines = [];\n\t\t\tif (mixcomp.name) this.wrapSplitName(comp.nameLines, mixcomp.name, 0x000000, ArrangeMixtureLineSource.Name);\n\n\t\t\t// (... synonyms, and linewrapping ...)\n\t\t\tlet qline = ArrangeMixture.formatQuantity(mixcomp);\n\t\t\tif (qline) comp.nameLines.push({text: qline, col: 0x000000, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tqline = this.formatNormQuantity(comp.origin);\n\t\t\tif (qline) comp.nameLines.push({text: `(${qline})`, col: 0x808080, source: ArrangeMixtureLineSource.Quantity});\n\n\t\t\tif (this.includeIdentifiers && mixcomp.identifiers) for (let key in mixcomp.identifiers)\n\t\t\t{\n\t\t\t\tlet line = key + ' ';\n\t\t\t\tlet val = mixcomp.identifiers[key];\n\t\t\t\tif (val instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let n = 0; n < val.length; n++) line += (n == 0 ? '' : ', ') + val[n];\n\t\t\t\t}\n\t\t\t\telse line += val;\n\t\t\t\tcomp.nameLines.push({text: this.truncateEllipsis(line), col: 0x42007E, source: ArrangeMixtureLineSource.Identifier});\n\t\t\t}\n\t\t\tif (mixcomp.metadata) for (let meta of mixcomp.metadata)\n\t\t\t{\n\t\t\t\tlet metaString = (m:string | number):string =>\n\t\t\t\t{\n\t\t\t\t\tif (typeof m == 'number') return formatDouble(m, 4);\n\t\t\t\t\tif (!OntologyTree.main) return m;\n\t\t\t\t\tlet branch = OntologyTree.main.getBranch(m);\n\t\t\t\t\tif (Vec.notBlank(branch)) return branch[0].label;\n\t\t\t\t\treturn m;\n\t\t\t\t};\n\t\t\t\tlet bits:string[] = [];\n\t\t\t\tif (Array.isArray(meta)) bits = meta.map((m) => metaString(m)); else bits = [metaString(meta as string | number)];\n\t\t\t\tcomp.nameLines.push({text: bits.join(' '), col: 0x002B88, source: ArrangeMixtureLineSource.Meta});\n\t\t\t}\n\n\t\t\tcomp.nameBox = new Box(padding, padding);\n\t\t\tcomp.fontSize = this.nameFontSize;\n\t\t\tfor (let n = 0; n < comp.nameLines.length; n++)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(comp.nameLines[n].text, comp.fontSize);\n\t\t\t\tcomp.nameBox.w = Math.max(comp.nameBox.w, wad[0]);\n\t\t\t\tcomp.nameBox.h += wad[1] + (n > 0 ? wad[2] * 2 : 0);\n\t\t\t}\n\n\t\t\tcomp.outline = Box.zero();\n\t\t\tcomp.outline.w = Math.max(comp.molBox.w, comp.nameBox.w) + 2 * padding;\n\t\t\tcomp.outline.h = comp.molBox.h + comp.nameBox.h + 2 * padding;\n\t\t\tif (comp.molBox.notEmpty() && comp.nameBox.notEmpty())\n\t\t\t{\n\t\t\t\tcomp.outline.h += padding;\n\t\t\t\tcomp.nameBox.y += comp.molBox.h + padding;\n\t\t\t\tcomp.molBox.w = comp.nameBox.w = Math.max(comp.molBox.w, comp.nameBox.w);\n\t\t\t}\n\n\t\t\tif (this.minBoxSize)\n\t\t\t{\n\t\t\t\tlet minsz = this.minBoxSize;\n\t\t\t\tlet dw = minsz.w - comp.outline.w, dh = minsz.h - comp.outline.h;\n\t\t\t\tif (dw > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.w += dw;\n\t\t\t\t\tcomp.molBox.w += dw;\n\t\t\t\t}\n\t\t\t\tif (dh > 0)\n\t\t\t\t{\n\t\t\t\t\tcomp.outline.h += dh;\n\t\t\t\t\tcomp.molBox.h += dh;\n\t\t\t\t\tcomp.nameBox.y += dh;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomp.boundary = comp.outline.clone();\n\n\t\t\tif ((this.showCollapsors || comp.isCollapsed) && Vec.notBlank(comp.content.contents))\n\t\t\t{\n\t\t\t\tlet gap = COLLAPSE_GAP * this.scale, wh = COLLAPSE_SIZE * this.scale;\n\t\t\t\tcomp.collapseBox = new Box(comp.boundary.maxX() + gap, comp.boundary.midY() - 0.5 * wh, wh, wh);\n\t\t\t\tcomp.boundary.w += gap + wh;\n\t\t\t}\n\t\t}\n\t}\n\n\t// arranges all of the subcomponents for a given index, positioning them relative to the current position; returns the indices of\n\t// the entire branch, for subsequent touchup\n\tprivate layoutSubComponents(idx:number):number[]\n\t{\n\t\tlet wholeBranch:number[] = [idx];\n\t\tlet branchBlock:number[][] = [];\n\t\tlet branchBox:Box[] = [];\n\n\t\tlet totalWidth = 0, totalHeight = 0;\n\n\t\tfor (let n = idx + 1; n < this.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.components[n];\n\t\t\tif (comp.parentIdx != idx) continue;\n\n\t\t\tlet branch = this.layoutSubComponents(n);\n\t\t\tif (branch.length == 0) continue;\n\n\t\t\tlet box:Box = null;\n\t\t\tfor (let i of branch)\n\t\t\t{\n\t\t\t\twholeBranch.push(i);\n\t\t\t\tlet bound = this.components[i].boundary;\n\t\t\t\tif (box) box = box.union(bound); else box = bound;\n\t\t\t}\n\n\t\t\tbranchBlock.push(branch);\n\t\t\tbranchBox.push(box);\n\n\t\t\ttotalWidth = Math.max(totalWidth, box.w);\n\t\t\ttotalHeight += box.h;\n\t\t}\n\t\tif (branchBlock.length == 0) return wholeBranch;\n\n\t\tlet hspace = HSPACE * this.scale, vspace = VSPACE * this.scale;\n\t\ttotalHeight += vspace * (branchBlock.length - 1);\n\n\t\tlet cbox = this.components[idx].boundary;\n\t\tlet x = cbox.maxX() + hspace;\n\n\t\t// special case: may try to pack the boxes into a smaller area rather than vertically on top of each other\n\t\tif (this.packBranches && branchBlock.length > 2 && totalHeight > this.packBranches.h)\n\t\t{\n\t\t\tlet packSize = this.packBranches.clone();\n\t\t\tfor (let box of branchBox) packSize.h = Math.max(packSize.h, box.h); // if a sub-box is bigger than overall, no need to limit it further\n\n\t\t\tlet sq = new SquarePacking(packSize, branchBox, /*hspace*/ vspace, vspace);\n\t\t\tif (sq.pack())\n\t\t\t{\n\t\t\t\tlet y = cbox.midY() - 0.5 * sq.outline.h;\n\t\t\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet box = sq.layout[n];\n\t\t\t\t\tlet dx = x - branchBox[n].x + box.x, dy = y - branchBox[n].y + box.y;\n\t\t\t\t\tfor (let i of branchBlock[n])\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn wholeBranch;\n\t\t\t}\n\t\t}\n\n\t\t// !! note: not guaranteed that x is high enough to not interfere with other boxes; will need a post-check of some kind, maybe here,\n\t\t//    maybe further down the line\n\n\t\tlet y = cbox.midY() - 0.5 * totalHeight;\n\t\tfor (let n = 0; n < branchBlock.length; n++)\n\t\t{\n\t\t\tlet dx = x - branchBox[n].x, dy = y - branchBox[n].y;\n\t\t\tfor (let i of branchBlock[n])\n\t\t\t{\n\t\t\t\tthis.components[i].boundary.x += dx;\n\t\t\t\tthis.components[i].boundary.y += dy;\n\t\t\t}\n\t\t\ty += branchBox[n].h + vspace;\n\t\t}\n\n\t\treturn wholeBranch;\n\t}\n\n\t// component layout is done, but may be able to \"reel in\" some of the branches to make it smaller\n\tprivate contractComponents():void\n\t{\n\t\tlet allChildren:number[][] = [];\n\t\tfor (let n = 0; n < this.components.length; n++)\n\t\t{\n\t\t\tallChildren.push([]);\n\t\t\tfor (let idx = this.components[n].parentIdx; idx >= 0; idx = this.components[idx].parentIdx) allChildren[idx].push(n);\n\t\t}\n\n\t\tlet hspace = HSPACE * this.scale, padding = PADDING * this.scale;\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\n\t\t\tfor (let n = 1; n < allChildren.length; n++)\n\t\t\t{\n\t\t\t\tlet pidx = this.components[n].parentIdx;\n\t\t\t\tlet boundX = this.components[pidx].boundary.maxX() + hspace;\n\t\t\t\tlet dx = this.components[n].boundary.minX() - boundX; // how far to move to the left\n\t\t\t\tif (dx < 1) continue; // no room to contract\n\n\t\t\t\tlet idxInside = [n, ...allChildren[n]];\n\t\t\t\tlet idxOutside = Vec.identity0(allChildren.length).filter((idx) => !idxInside.includes(idx));\n\n\t\t\t\tfor (let i of idxInside)\n\t\t\t\t{\n\t\t\t\t\tlet box1 = this.components[i].boundary.withGrow(padding, padding);\n\t\t\t\t\tfor (let j of idxOutside)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet box2 = this.components[j].boundary;\n\t\t\t\t\t\tif (box2.minX() > box1.maxX()) continue;\n\t\t\t\t\t\tif (box1.minY() > box2.maxY() || box1.maxY() < box2.minY()) continue;\n\n\t\t\t\t\t\tdx = Math.min(dx, box1.minX() - box2.maxX());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dx > 1)\n\t\t\t\t{\n\t\t\t\t\tfor (let n of idxInside) this.components[n].boundary.x -= dx;\n\t\t\t\t\tanything = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!anything) break;\n\t\t}\n\t}\n\n\t// if the given string is longer than the soft/hard limit, looks to break it up into smaller pieces; each of them is\n\t// appended to the list parameter\n\tprivate wrapSplitName(list:ArrangeMixtureLine[], text:string, col:number, source:ArrangeMixtureLineSource):void\n\t{\n\t\tif (!text) return;\n\t\tlet xpos = FontData.measureWidths(text, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.softwrapName)\n\t\t{\n\t\t\tlist.push({text, col, source});\n\t\t\treturn;\n\t\t}\n\n\t\tlet p = 0;\n\t\tfor (; xpos[p] < this.softwrapName; p++) {}\n\t\tfor (; xpos[p] < this.hardwrapName; p++)\n\t\t{\n\t\t\tlet ch = text.charAt(p);\n\t\t\tif (' ,;-/'.includes(ch))\n\t\t\t{\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlist.push({text: text.substring(0, p).trim(), col, source});\n\t\tthis.wrapSplitName(list, text.substring(p).trim(), col, source);\n\t}\n\n\t// if the line is longer than the hard wrap limit, just truncate with ellipsis\n\tprivate truncateEllipsis(txt:string):string\n\t{\n\t\tlet xpos = FontData.measureWidths(txt, this.nameFontSize);\n\t\tif (Vec.last(xpos) <= this.hardwrapName) return txt;\n\t\tlet ellipsis = '...', ellw = FontData.measureText(ellipsis, this.nameFontSize)[0];\n\t\tlet keep = 1;\n\t\tfor (; keep < txt.length; keep++) if (xpos[keep] + ellw > this.hardwrapName) break;\n\t\treturn txt.substring(0, keep) + ellipsis;\n\t}\n}\n\n","import { Box } from '../util/Geom';\nimport { colourAlpha, colourCanvas, colourCode, DEGRAD, newElement, pixelDensity } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { FontData } from './FontData';\nexport var TextAlign;\n(function (TextAlign) {\n    TextAlign[TextAlign[\"Centre\"] = 0] = \"Centre\";\n    TextAlign[TextAlign[\"Left\"] = 1] = \"Left\";\n    TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\n    TextAlign[TextAlign[\"Baseline\"] = 0] = \"Baseline\";\n    TextAlign[TextAlign[\"Middle\"] = 4] = \"Middle\";\n    TextAlign[TextAlign[\"Top\"] = 8] = \"Top\";\n    TextAlign[TextAlign[\"Bottom\"] = 16] = \"Bottom\";\n})(TextAlign || (TextAlign = {}));\nvar PrimClass;\n(function (PrimClass) {\n    PrimClass[PrimClass[\"Line\"] = 1] = \"Line\";\n    PrimClass[PrimClass[\"Rect\"] = 2] = \"Rect\";\n    PrimClass[PrimClass[\"Oval\"] = 3] = \"Oval\";\n    PrimClass[PrimClass[\"Path\"] = 4] = \"Path\";\n    PrimClass[PrimClass[\"Text\"] = 5] = \"Text\";\n    PrimClass[PrimClass[\"TextNative\"] = 6] = \"TextNative\";\n})(PrimClass || (PrimClass = {}));\nfunction pixelCoord(val) {\n    var _a;\n    let str = val.toFixed(4);\n    let match = (_a = /^(.*\\.\\d*?[1-9]+)0+$/.exec(str)) !== null && _a !== void 0 ? _a : /^(.*)\\.0+$/.exec(str);\n    if (match)\n        str = match[1];\n    return str;\n}\nclass SpoolSVG {\n    constructor(prettyPrint) {\n        this.prettyPrint = prettyPrint;\n        this.lines = [];\n        this.depth = 0;\n    }\n    spool(str) { if ((str === null || str === void 0 ? void 0 : str.length) > 0)\n        this.lines.push(str); }\n    start(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n    }\n    stop(str) {\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    whole(str) {\n        if (this.prettyPrint && this.depth > 0)\n            this.lines.push('  '.repeat(this.depth));\n        this.spool(str);\n        if (this.prettyPrint)\n            this.lines.push('\\n');\n    }\n    attr(key, val) {\n        if (typeof val == 'number') {\n            val = pixelCoord(val);\n        }\n        this.spool(` ${key}=\"${val}\"`);\n    }\n    inc() { this.depth++; }\n    dec() { this.depth--; }\n    toString() { return this.lines.join(''); }\n}\nclass MetaVector {\n    constructor(vec) {\n        this.types = [];\n        this.prims = [];\n        this.width = 0;\n        this.height = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.scale = 1;\n        this.density = 1;\n        this.charMissing = false;\n        this.lowX = null;\n        this.lowY = null;\n        this.highX = null;\n        this.highY = null;\n        const font = FontData.main;\n        this.charMask = Vec.booleanArray(false, font.UNICODE.length);\n        if (vec != null) {\n            if (vec.size != null) {\n                this.width = vec.size[0];\n                this.height = vec.size[1];\n            }\n            if (vec.types != null)\n                this.types = vec.types;\n            if (vec.prims != null)\n                this.prims = vec.prims;\n            for (let p of this.prims)\n                if (p.primClass == PrimClass.Text) {\n                    let { txt } = p;\n                    for (let n = 0; n < txt.length; n++) {\n                        let i = font.getIndex(txt.charAt(n));\n                        if (i >= 0)\n                            this.charMask[i] = true;\n                        else\n                            this.charMissing = true;\n                    }\n                }\n        }\n    }\n    drawLine(x1, y1, x2, y2, colour, thickness) {\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Line, thickness, colour });\n        const bump = 0.5 * thickness;\n        this.updateBounds(Math.min(x1, x2) - bump, Math.min(y1, y2) - bump);\n        this.updateBounds(Math.max(x1, x2) + bump, Math.max(y1, y2) + bump);\n        this.prims.push({ primClass: PrimClass.Line, typeidx, x1, y1, x2, y2 });\n    }\n    drawRect(x, y, w, h, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Rect, edgeCol, fillCol, thickness });\n        const bump = 0.5 * thickness;\n        this.updateBounds(x - bump, y - bump);\n        this.updateBounds(x + w + bump, y + h + bump);\n        this.prims.push({ primClass: PrimClass.Rect, typeidx, x, y, w, h });\n    }\n    drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        const bump = 0.5 * thickness;\n        this.updateBounds(cx - rw - bump, cy - rh - bump);\n        this.updateBounds(cx + rw + bump, cy + rh + bump);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Oval, edgeCol, fillCol, thickness });\n        this.prims.push({ primClass: PrimClass.Oval, typeidx, cx, cy, rw, rh });\n    }\n    drawPath(xpoints, ypoints, ctrlFlags, isClosed, edgeCol, thickness, fillCol, hardEdge) {\n        if (edgeCol == null)\n            edgeCol = MetaVector.NOCOLOUR;\n        if (fillCol == null)\n            fillCol = MetaVector.NOCOLOUR;\n        if (thickness == null)\n            thickness = 1;\n        if (hardEdge == null)\n            hardEdge = false;\n        const bump = 0.5 * thickness;\n        for (let n = 0; n < xpoints.length; n++) {\n            this.updateBounds(xpoints[n] - bump, ypoints[n] - bump);\n            if (bump != 0)\n                this.updateBounds(xpoints[n] + bump, ypoints[n] + bump);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Path, edgeCol, fillCol, thickness, hardEdge });\n        this.prims.push({ primClass: PrimClass.Path, typeidx, count: xpoints.length,\n            x: Vec.duplicate(xpoints), y: Vec.duplicate(ypoints), ctrl: ctrlFlags && [...ctrlFlags], closed: isClosed });\n    }\n    drawPoly(xpoints, ypoints, edgeCol, thickness, fillCol, hardEdge) {\n        this.drawPath(xpoints, ypoints, null, true, edgeCol, thickness, fillCol, hardEdge);\n    }\n    drawText(x, y, txt, size, colour, align, direction) {\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        if (direction == null)\n            direction = 0;\n        let cosTheta = 1, sinTheta = 0;\n        if (direction != 0)\n            [cosTheta, sinTheta] = [Math.cos(direction * DEGRAD), Math.sin(direction * DEGRAD)];\n        const font = FontData.main;\n        for (let n = 0; n < txt.length; n++) {\n            let i = font.getIndex(txt.charAt(n));\n            if (i >= 0)\n                this.charMask[i] = true;\n            else\n                this.charMissing = true;\n        }\n        let metrics = font.measureText(txt, size);\n        let bx = 0, by = 0;\n        let dx = 0;\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            dx = -metrics[0];\n        else\n            dx = -0.5 * metrics[0];\n        if (dx != 0) {\n            bx += dx * cosTheta;\n            by += dx * sinTheta;\n        }\n        let dy = 0;\n        if ((align & TextAlign.Middle) != 0)\n            dy = 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            dy = metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            dy = -metrics[2];\n        if (dy != 0) {\n            bx -= dy * sinTheta;\n            by += dy * cosTheta;\n        }\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0;\n        let tx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            if (i >= 0) {\n                let outlineX = font.getOutlineX(i), outlineY = font.getOutlineY(i);\n                x1 = Math.min(x1, tx + Vec.min(outlineX));\n                x2 = Math.max(x2, tx + Vec.max(outlineX));\n                y1 = Math.min(y1, -Vec.max(outlineY));\n                y2 = Math.max(y2, -Vec.min(outlineY));\n                tx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    tx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                tx += font.MISSING_HORZ;\n        }\n        const mscale = size * font.INV_UNITS_PER_EM;\n        if (direction == 0) {\n            this.updateBounds(x + bx + x1 * mscale, y + by + y1 * mscale);\n            this.updateBounds(x + bx + x2 * mscale, y + by + y2 * mscale);\n        }\n        else {\n            let rx1 = x1 * mscale, ry1 = y1 * mscale;\n            let rx2 = x2 * mscale, ry2 = y2 * mscale;\n            this.updateBounds(x + bx + rx1 * cosTheta - ry1 * sinTheta, y + by + rx1 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry1 * sinTheta, y + by + rx2 * sinTheta + ry1 * cosTheta);\n            this.updateBounds(x + bx + rx2 * cosTheta - ry2 * sinTheta, y + by + rx2 * sinTheta + ry2 * cosTheta);\n            this.updateBounds(x + bx + rx1 * cosTheta - ry2 * sinTheta, y + by + rx1 * sinTheta + ry2 * cosTheta);\n        }\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.Text, size, colour });\n        this.prims.push({ primClass: PrimClass.Text, typeidx, x: x + bx, y: y + by, txt, direction });\n    }\n    drawTextNative(x, y, txt, fontFamily, fontSize, colour, align, opt) {\n        if (!opt)\n            opt = {};\n        if (align == null)\n            align = TextAlign.Left | TextAlign.Baseline;\n        const font = FontData.main;\n        let metrics = font.measureTextNative(txt, fontFamily, fontSize, opt);\n        if ((align & TextAlign.Left) != 0) { }\n        else if ((align & TextAlign.Right) != 0)\n            x -= metrics[0];\n        else\n            x -= 0.5 * metrics[0];\n        if ((align & TextAlign.Middle) != 0)\n            y += 0.5 * metrics[1];\n        else if ((align & TextAlign.Top) != 0)\n            y += metrics[1];\n        else if ((align & TextAlign.Bottom) != 0)\n            y -= metrics[2];\n        this.updateBounds(x, y - metrics[1]);\n        this.updateBounds(x + metrics[0], y + metrics[2]);\n        let typeidx = this.findOrCreateType({ primClass: PrimClass.TextNative, family: fontFamily, size: fontSize, colour, opt });\n        this.prims.push({ primClass: PrimClass.TextNative, typeidx, x, y, txt });\n    }\n    boundLowX() { return this.lowX; }\n    boundLowY() { return this.lowY; }\n    boundHighX() { return this.highX; }\n    boundHighY() { return this.highY; }\n    getBounds() { return new Box(this.lowX, this.lowY, this.highX - this.lowX, this.highY - this.lowY); }\n    measure() {\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    normalise() {\n        if (this.lowX != 0 || this.lowY != 0)\n            this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        this.width = Math.ceil(this.highX - this.lowX);\n        this.height = Math.ceil(this.highY - this.lowY);\n    }\n    setSize(width, height) { this.width = width; this.height = height; }\n    transformIntoBox(box) {\n        this.transformPrimitives(-this.lowX, -this.lowY, 1, 1);\n        let nw = Math.ceil(this.highX - this.lowX), nh = Math.ceil(this.highY - this.lowY);\n        let scale = 1;\n        if (nw > box.w) {\n            let mod = box.w / nw;\n            nw = box.w;\n            nh *= mod;\n            scale *= mod;\n        }\n        if (nh > box.h) {\n            let mod = box.h / nh;\n            nh = box.h;\n            nw *= mod;\n            scale *= mod;\n        }\n        let ox = 0.5 * (box.w - nw), oy = 0.5 * (box.h - nh);\n        this.transformPrimitives(box.x + ox, box.y + oy, scale, scale);\n    }\n    scaleExtent(maxWidth, maxHeight) {\n        let w = this.highX - this.lowX, h = this.highY - this.lowY;\n        if (w <= maxWidth && h <= maxHeight)\n            return;\n        let scale = Math.min(maxWidth / w, maxHeight / h);\n        this.transformPrimitives(0, 0, scale, scale);\n    }\n    transformPrimitives(ox, oy, sw, sh) {\n        if (ox == 0 && oy == 0 && sw == 1 && sh == 1)\n            return;\n        for (let a of this.prims) {\n            const type = a.primClass;\n            if (type == PrimClass.Line) {\n                let line = a;\n                line.x1 = ox + line.x1 * sw;\n                line.y1 = oy + line.y1 * sh;\n                line.x2 = ox + line.x2 * sw;\n                line.y2 = oy + line.y2 * sh;\n            }\n            else if (type == PrimClass.Rect) {\n                let rect = a;\n                rect.x = ox + rect.x * sw;\n                rect.y = oy + rect.y * sh;\n                rect.w = rect.w * sw;\n                rect.h = rect.h * sh;\n            }\n            else if (type == PrimClass.Oval) {\n                let oval = a;\n                oval.cx = ox + oval.cx * sw;\n                oval.cy = oy + oval.cy * sh;\n                oval.rw *= sw;\n                oval.rh *= sh;\n            }\n            else if (type == PrimClass.Path) {\n                let path = a;\n                let sz = path.count, px = path.x, py = path.y;\n                for (let n = 0; n < sz; n++) {\n                    px[n] = ox + px[n] * sw;\n                    py[n] = oy + py[n] * sh;\n                }\n            }\n            else if (type == PrimClass.Text || type == PrimClass.TextNative) {\n                let text = a;\n                text.x = ox + text.x * sw;\n                text.y = oy + text.y * sh;\n            }\n        }\n        let swsh = 0.5 * (sw + sh);\n        if (swsh != 1)\n            for (let t of this.types) {\n                const type = t.primClass;\n                if (type == PrimClass.Line)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Rect)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Oval)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Path)\n                    t.thickness *= swsh;\n                else if (type == PrimClass.Text)\n                    t.size *= swsh;\n                else if (type == PrimClass.TextNative)\n                    t.size *= swsh;\n            }\n        this.lowX = ox + this.lowX * sw;\n        this.lowY = oy + this.lowY * sh;\n        this.highX = ox + this.highX * sw;\n        this.highY = oy + this.highY * sh;\n    }\n    renderInto(parent) {\n        let canvas = newElement(parent, 'canvas', { 'width': this.width, 'height': this.height });\n        this.renderCanvas(canvas);\n        return canvas;\n    }\n    renderCanvas(canvas, clearFirst) {\n        let ctx = canvas.getContext('2d');\n        if (clearFirst)\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        let w = this.width, h = this.height;\n        this.density = pixelDensity();\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        canvas.width = w * this.density;\n        canvas.height = h * this.density;\n        this.renderContext(ctx);\n    }\n    renderContext(ctx) {\n        ctx.save();\n        ctx.scale(this.density, this.density);\n        this.typeObj = [];\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length; n++) {\n            let p = this.prims[n];\n            if (p.primClass == PrimClass.Line)\n                this.renderLine(ctx, p);\n            else if (p.primClass == PrimClass.Rect)\n                this.renderRect(ctx, p);\n            else if (p.primClass == PrimClass.Oval)\n                this.renderOval(ctx, p);\n            else if (p.primClass == PrimClass.Path)\n                this.renderPath(ctx, p);\n            else if (p.primClass == PrimClass.Text)\n                this.renderText(ctx, p);\n            else if (p.primClass == PrimClass.TextNative)\n                this.renderTextNative(ctx, p);\n        }\n        ctx.restore();\n    }\n    createSVG(prettyPrint = false, withXlink = false) {\n        let svg = new SpoolSVG(prettyPrint);\n        svg.start('<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        if (withXlink)\n            svg.attr('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.attr('width', this.width);\n        svg.attr('height', this.height);\n        svg.attr('viewBox', `0 0 ${this.width} ${this.height}`);\n        svg.stop('>');\n        svg.inc();\n        this.renderSVG(svg, withXlink);\n        svg.dec();\n        svg.whole('</svg>');\n        return svg.toString();\n    }\n    renderSVG(svg, withXlink = false) {\n        this.typeObj = [];\n        const font = FontData.main;\n        svg.whole('<defs>');\n        svg.inc();\n        if (this.charMissing) {\n            svg.start('<path');\n            svg.attr('id', 'missing');\n            svg.attr('d', font.MISSING_DATA);\n            svg.attr('edge', 'none');\n            svg.stop('/>');\n        }\n        for (let n = 0; n < font.UNICODE.length; n++)\n            if (this.charMask[n]) {\n                svg.start('<path');\n                svg.attr('id', 'char' + n);\n                svg.attr('d', font.GLYPH_DATA[n]);\n                svg.attr('edge', 'none');\n                svg.stop('/>');\n            }\n        svg.dec();\n        svg.whole('</defs>');\n        for (let n = 0; n < this.types.length; n++) {\n            let t = this.types[n];\n            if (t.primClass == PrimClass.Line)\n                this.typeObj[n] = this.setupTypeLine(t);\n            else if (t.primClass == PrimClass.Rect)\n                this.typeObj[n] = this.setupTypeRect(t);\n            else if (t.primClass == PrimClass.Oval)\n                this.typeObj[n] = this.setupTypeOval(t);\n            else if (t.primClass == PrimClass.Path)\n                this.typeObj[n] = this.setupTypePath(t);\n            else if (t.primClass == PrimClass.Text)\n                this.typeObj[n] = this.setupTypeText(t);\n            else if (t.primClass == PrimClass.TextNative)\n                this.typeObj[n] = this.setupTypeTextNative(t);\n        }\n        for (let n = 0; n < this.prims.length;) {\n            let p = this.prims[n], num = 1;\n            if (p.primClass != PrimClass.Path && p.primClass != PrimClass.Text && p.primClass != PrimClass.TextNative) {\n                for (; n + num < this.prims.length; num++)\n                    if (this.prims[n + num].primClass != p.primClass || this.prims[n + num].typeidx != p.typeidx)\n                        break;\n            }\n            if (p.primClass == PrimClass.Line) {\n                if (num == 1)\n                    this.svgLine1(svg, p);\n                else\n                    this.svgLineN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                if (num == 1)\n                    this.svgRect1(svg, p);\n                else\n                    this.svgRectN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                if (num == 1)\n                    this.svgOval1(svg, p);\n                else\n                    this.svgOvalN(svg, this.prims.slice(n, n + num));\n            }\n            else if (p.primClass == PrimClass.Path)\n                this.svgPath(svg, p);\n            else if (p.primClass == PrimClass.Text)\n                this.svgText(svg, p, withXlink);\n            else if (p.primClass == PrimClass.TextNative)\n                this.svgTextNative(svg, p);\n            n += num;\n        }\n    }\n    spool(into) {\n        for (let p of this.prims) {\n            if (p.primClass == PrimClass.Line) {\n                let { typeidx, x1, y1, x2, y2 } = p;\n                let { thickness, colour } = this.types[typeidx];\n                into.drawLine(x1, y1, x2, y2, colour, thickness);\n            }\n            else if (p.primClass == PrimClass.Rect) {\n                let { typeidx, x, y, w, h } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawRect(x, y, w, h, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Oval) {\n                let { typeidx, cx, cy, rw, rh } = p;\n                let { edgeCol, fillCol, thickness } = this.types[typeidx];\n                into.drawOval(cx, cy, rw, rh, edgeCol, thickness, fillCol);\n            }\n            else if (p.primClass == PrimClass.Path) {\n                let { typeidx, count, x, y, ctrl, closed } = p;\n                let { edgeCol, fillCol, thickness, hardEdge } = this.types[typeidx];\n                into.drawPath(x, y, ctrl, closed, edgeCol, thickness, fillCol, hardEdge);\n            }\n            else if (p.primClass == PrimClass.Text) {\n                let { typeidx, x, y, txt, direction } = p;\n                let { size, colour } = this.types[typeidx];\n                into.drawText(x, y, txt, size, colour, null, direction);\n            }\n            else if (p.primClass == PrimClass.TextNative) {\n                let { typeidx, x, y, txt } = p;\n                let { family, size, colour } = this.types[typeidx];\n                into.drawTextNative(x, y, txt, family, size, colour);\n            }\n        }\n    }\n    setupTypeLine(t) {\n        let thickness = t.thickness * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, thickness, colour };\n    }\n    setupTypeRect(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypeOval(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness };\n    }\n    setupTypePath(t) {\n        let edgeCol = t.edgeCol;\n        let fillCol = t.fillCol;\n        let thickness = t.thickness * this.scale;\n        let hardEdge = t.hardEdge;\n        return { primClass: t.primClass, edgeCol, fillCol, thickness, hardEdge };\n    }\n    setupTypeText(t) {\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        return { primClass: t.primClass, colour, size };\n    }\n    setupTypeTextNative(t) {\n        let family = t.family;\n        let size = t.size * this.scale;\n        let colour = t.colour;\n        let opt = t.opt;\n        return { primClass: t.primClass, colour, family, size, opt };\n    }\n    renderLine(ctx, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != null) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.strokeStyle = colourCanvas(colour);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'round';\n            ctx.stroke();\n        }\n    }\n    renderRect(ctx, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fillRect(x, y, w, h);\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.lineCap = 'square';\n            ctx.strokeRect(x, y, w, h);\n        }\n    }\n    renderOval(ctx, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        if (fillCol != MetaVector.NOCOLOUR) {\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.fill();\n        }\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            ctx.strokeStyle = colourCanvas(edgeCol);\n            ctx.lineWidth = thickness;\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rw, rh, 0, 0, 2 * Math.PI, true);\n            ctx.stroke();\n        }\n    }\n    renderPath(ctx, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        for (let layer = 1; layer <= 2; layer++) {\n            if (layer == 1 && fillCol == MetaVector.NOCOLOUR)\n                continue;\n            if (layer == 2 && edgeCol == MetaVector.NOCOLOUR)\n                continue;\n            ctx.beginPath();\n            ctx.moveTo(x[0], y[0]);\n            for (let i = 1; i < count; i++) {\n                if (!ctrl || !ctrl[i]) {\n                    ctx.lineTo(x[i], y[i]);\n                }\n                else if (i < count - 1 && !ctrl[i + 1]) {\n                    ctx.quadraticCurveTo(x[i], y[i], x[i + 1], y[i + 1]);\n                    i++;\n                }\n                else if (i < count - 1 && !ctrl[i + 2]) {\n                    ctx.bezierCurveTo(x[i], y[i], x[i + 1], y[i + 1], x[i + 2], y[i + 2]);\n                    i += 2;\n                }\n            }\n            if (closed)\n                ctx.closePath();\n            if (layer == 1) {\n                ctx.fillStyle = colourCanvas(fillCol);\n                ctx.fill();\n            }\n            else {\n                ctx.strokeStyle = colourCanvas(edgeCol);\n                ctx.lineWidth = thickness;\n                ctx.lineCap = hardEdge ? 'square' : 'round';\n                ctx.lineJoin = hardEdge ? 'miter' : 'round';\n                ctx.stroke();\n            }\n        }\n    }\n    renderText(ctx, text) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            let path = null;\n            if (i < 0) {\n                dx += font.MISSING_HORZ;\n                path = font.getMissingPath();\n            }\n            else\n                path = font.getGlyphPath(i);\n            if (path) {\n                ctx.save();\n                let theta = direction != 0 ? direction * DEGRAD : 0;\n                if (theta == 0)\n                    ctx.translate(x + dx * scale, y);\n                else\n                    ctx.translate(x + Math.cos(theta) * dx * scale, y + Math.sin(theta) * dx * scale);\n                ctx.scale(scale, -scale);\n                if (theta != 0)\n                    ctx.rotate(-theta);\n                ctx.fillStyle = fill;\n                ctx.fill(path);\n                ctx.restore();\n            }\n            dx += font.HORIZ_ADV_X[i];\n            if (n < txt.length - 1)\n                dx += font.getKerning(ch, txt.charAt(n + 1));\n        }\n    }\n    renderTextNative(ctx, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        let fill = colourCanvas(colour);\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        ctx.save();\n        let pfx = '';\n        if (opt.bold)\n            pfx += 'bold ';\n        if (opt.italic)\n            pfx += 'italic ';\n        ctx.font = pfx + (size * this.scale) + 'px ' + family;\n        ctx.fillStyle = fill;\n        ctx.fillText(txt, x, y);\n        ctx.restore();\n    }\n    svgLine1(svg, line) {\n        let { x1, y1, x2, y2 } = line;\n        let { colour, thickness } = this.typeObj[line.typeidx];\n        x1 = this.offsetX + this.scale * x1;\n        y1 = this.offsetY + this.scale * y1;\n        x2 = this.offsetX + this.scale * x2;\n        y2 = this.offsetY + this.scale * y2;\n        if (colour != MetaVector.NOCOLOUR) {\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            this.defineSVGStroke(svg, colour);\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'round');\n            svg.stop('/>');\n        }\n    }\n    svgLineN(svg, lines) {\n        let { colour, thickness } = this.typeObj[lines[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, colour);\n        svg.attr('stroke-width', thickness);\n        svg.attr('stroke-linecap', 'round');\n        svg.stop('>');\n        svg.inc();\n        for (let line of lines) {\n            let { x1, y1, x2, y2 } = line;\n            x1 = this.offsetX + this.scale * x1;\n            y1 = this.offsetY + this.scale * y1;\n            x2 = this.offsetX + this.scale * x2;\n            y2 = this.offsetY + this.scale * y2;\n            svg.start('<line');\n            svg.attr('x1', x1);\n            svg.attr('y1', y1);\n            svg.attr('x2', x2);\n            svg.attr('y2', y2);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgRect1(svg, rect) {\n        let { x, y, w, h } = rect;\n        let { edgeCol, fillCol, thickness } = this.typeObj[rect.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        w *= this.scale;\n        h *= this.scale;\n        svg.start('<rect');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('width', w);\n        svg.attr('height', h);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgRectN(svg, rects) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[rects[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linecap', 'square');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let rect of rects) {\n            let { x, y, w, h } = rect;\n            x = this.offsetX + this.scale * x;\n            y = this.offsetY + this.scale * y;\n            w *= this.scale;\n            h *= this.scale;\n            svg.start('<rect');\n            svg.attr('x', x);\n            svg.attr('y', y);\n            svg.attr('width', w);\n            svg.attr('height', h);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgOval1(svg, oval) {\n        let { cx, cy, rw, rh } = oval;\n        let { edgeCol, fillCol, thickness } = this.typeObj[oval.typeidx];\n        cx = this.offsetX + this.scale * cx;\n        cy = this.offsetY + this.scale * cy;\n        rw *= this.scale;\n        rh *= this.scale;\n        svg.start('<ellipse');\n        svg.attr('cx', cx);\n        svg.attr('cy', cy);\n        svg.attr('rx', rw);\n        svg.attr('ry', rh);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgOvalN(svg, ovals) {\n        let { edgeCol, fillCol, thickness } = this.typeObj[ovals[0].typeidx];\n        svg.start('<g');\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('>');\n        svg.inc();\n        for (let oval of ovals) {\n            let { cx, cy, rw, rh } = oval;\n            cx = this.offsetX + this.scale * cx;\n            cy = this.offsetY + this.scale * cy;\n            rw *= this.scale;\n            rh *= this.scale;\n            svg.start('<ellipse');\n            svg.attr('cx', cx);\n            svg.attr('cy', cy);\n            svg.attr('rx', rw);\n            svg.attr('ry', rh);\n            svg.stop('/>');\n        }\n        svg.dec();\n        svg.whole('</g>');\n    }\n    svgPath(svg, path) {\n        let { count, x, y, ctrl, closed } = path;\n        let { edgeCol, fillCol, thickness, hardEdge } = this.typeObj[path.typeidx];\n        x = [...x];\n        y = [...y];\n        for (let n = 0; n < count; n++) {\n            x[n] = this.offsetX + this.scale * x[n];\n            y[n] = this.offsetY + this.scale * y[n];\n        }\n        let shape = 'M ' + pixelCoord(x[0]) + ' ' + pixelCoord(y[0]);\n        let n = 1;\n        while (n < count) {\n            if (!ctrl || !ctrl[n]) {\n                shape += ' L ' + pixelCoord(x[n]) + ' ' + pixelCoord(y[n]);\n                n++;\n            }\n            else if (ctrl[n] && n < count - 1 && !ctrl[n + 1]) {\n                shape += ' Q ' + pixelCoord(x[n]) + ' ' + pixelCoord(y[n]) + ' '\n                    + pixelCoord(x[n + 1]) + ' ' + pixelCoord(y[n + 1]);\n                n += 2;\n            }\n            else if (ctrl[n] && n < count - 2 && ctrl[n + 1] && !ctrl[n + 2]) {\n                shape += ' C ' + pixelCoord(x[n]) + ' ' + pixelCoord(y[n]) + ' '\n                    + pixelCoord(x[n + 1]) + ' ' + pixelCoord(y[n + 1]) + ' '\n                    + pixelCoord(x[n + 2]) + ' ' + pixelCoord(y[n + 2]);\n                n += 3;\n            }\n            else\n                n++;\n        }\n        if (closed)\n            shape += ' Z';\n        svg.start('<path');\n        svg.attr('d', shape);\n        this.defineSVGStroke(svg, edgeCol);\n        if (edgeCol != MetaVector.NOCOLOUR) {\n            svg.attr('stroke-width', thickness);\n            svg.attr('stroke-linejoin', hardEdge ? 'miter' : 'round');\n            svg.attr('stroke-linecap', hardEdge ? 'square' : 'round');\n        }\n        this.defineSVGFill(svg, fillCol);\n        svg.stop('/>');\n    }\n    svgText(svg, text, withXlink = true) {\n        let { x, y, txt, direction } = text;\n        let { size, colour } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let font = FontData.main;\n        let scale = size * this.scale / font.UNITS_PER_EM;\n        if (direction != 0) {\n            svg.start('<g');\n            svg.attr('transform', `rotate(${direction},${pixelCoord(x)},${pixelCoord(y)})`);\n            svg.stop('>');\n            svg.inc();\n        }\n        svg.start('<g');\n        svg.attr('transform', `translate(${pixelCoord(x)},${pixelCoord(y)})`);\n        this.defineSVGFill(svg, colour);\n        svg.stop('>');\n        svg.inc();\n        svg.start('<g');\n        svg.attr('transform', `scale(${pixelCoord(scale)},${pixelCoord(-scale)})`);\n        svg.stop('>');\n        svg.inc();\n        let dx = 0;\n        for (let n = 0; n < txt.length; n++) {\n            let ch = txt.charAt(n);\n            let i = font.getIndex(ch);\n            svg.start('<use');\n            let ref = i < 0 ? '#missing' : '#char' + i;\n            if (withXlink)\n                svg.attr('xlink:href', ref);\n            else\n                svg.attr('href', ref);\n            svg.attr('x', dx);\n            svg.stop('/>');\n            if (i >= 0) {\n                dx += font.HORIZ_ADV_X[i];\n                if (n < txt.length - 1)\n                    dx += font.getKerning(ch, txt.charAt(n + 1));\n            }\n            else\n                dx += font.MISSING_HORZ;\n        }\n        svg.dec();\n        svg.whole('</g>');\n        svg.dec();\n        svg.whole('</g>');\n        if (direction != 0) {\n            svg.dec();\n            svg.whole('</g>');\n        }\n    }\n    svgTextNative(svg, text) {\n        let { x, y, txt } = text;\n        let { size, colour, family, opt } = this.typeObj[text.typeidx];\n        x = this.offsetX + this.scale * x;\n        y = this.offsetY + this.scale * y;\n        let fill = colourCanvas(colour);\n        let style = `fill: ${fill}; font-family: ${family}; font-size: ${size * this.scale};`;\n        if (opt.bold)\n            style += ' font-weight: bold;';\n        if (opt.italic)\n            style += ' font-style: italic;';\n        const escapeXML = (str) => {\n            return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n        };\n        svg.start('<text');\n        svg.attr('xml:space', 'preserve');\n        svg.attr('x', x);\n        svg.attr('y', y);\n        svg.attr('style', style);\n        svg.stop('>' + escapeXML(txt) + '</text>');\n    }\n    defineSVGStroke(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('stroke-opacity', '0');\n            return;\n        }\n        svg.attr('stroke', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('stroke-opacity', alpha);\n    }\n    defineSVGFill(svg, col) {\n        if (col == MetaVector.NOCOLOUR) {\n            svg.attr('fill-opacity', '0');\n            return;\n        }\n        svg.attr('fill', colourCode(col));\n        let alpha = colourAlpha(col);\n        if (alpha != 1)\n            svg.attr('fill-opacity', alpha);\n    }\n    findOrCreateType(typeDef) {\n        for (let n = 0; n < this.types.length; n++) {\n            if (this.types[n].primClass != typeDef.primClass)\n                continue;\n            let keys = Object.keys(typeDef);\n            let match = keys.every((k) => typeDef[k] == this.types[n][k]);\n            if (match)\n                return n;\n        }\n        this.types.push(typeDef);\n        return this.types.length - 1;\n    }\n    updateBounds(x, y) {\n        if (this.lowX == null) {\n            this.lowX = x;\n            this.lowY = y;\n            this.highX = x;\n            this.highY = y;\n            return;\n        }\n        this.lowX = Math.min(this.lowX, x);\n        this.lowY = Math.min(this.lowY, y);\n        this.highX = Math.max(this.highX, x);\n        this.highY = Math.max(this.highY, y);\n    }\n}\nMetaVector.NOCOLOUR = -1;\nexport { MetaVector };\n//# sourceMappingURL=MetaVector.js.map","import { Molecule } from '../mol/Molecule';\nimport { GeomUtil } from '../util/Geom';\nimport { angleDiff, DEGRAD, invZ, norm2_xy, norm_xy } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { BLineType } from './ArrangeMolecule';\nimport { MetaVector, TextAlign } from './MetaVector';\nimport { RenderMnemonicType } from './Rendering';\nexport class DrawMolecule {\n    constructor(layout, vg) {\n        this.layout = layout;\n        this.vg = vg;\n        this.mnemonics = null;\n        this.mol = layout.getMolecule();\n        this.policy = layout.getPolicy();\n        this.effects = layout.getEffects();\n        this.scale = layout.getScale();\n        this.invScale = 1.0 / this.scale;\n    }\n    getMolecule() { return this.mol; }\n    getMetaVector() { return this.vg; }\n    getLayout() { return this.layout; }\n    getPolicy() { return this.policy; }\n    getEffects() { return this.effects; }\n    draw() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        let DRAW_SPACE = false;\n        if (DRAW_SPACE) {\n            let bounds = this.layout.determineBoundary();\n            this.vg.drawRect(bounds[0], bounds[1], bounds[2] - bounds[0], bounds[3] - bounds[1], 0xFF0000, 1, MetaVector.NOCOLOUR);\n            for (let n = 0; n < this.layout.numSpace(); n++) {\n                let spc = this.layout.getSpace(n);\n                this.vg.drawRect(spc.box.x, spc.box.y, spc.box.w, spc.box.h, MetaVector.NOCOLOUR, 0, 0xE0E0E0);\n                if (spc.px != null && spc.py != null && spc.px.length > 2)\n                    this.vg.drawPoly(spc.px, spc.py, 0x000000, 1, 0x808080FF, true);\n            }\n        }\n        this.drawUnderEffects();\n        let { mol, layout, effects, policy, vg } = this;\n        let hideBonds = new Set(effects.hideBonds);\n        for (let i = 1; i <= mol.numBonds; i++)\n            if (mol.bondType(i) == Molecule.BONDTYPE_INCLINED && !hideBonds.has(i)) {\n                let atom = mol.bondTo(i);\n                if (layout.getPoint(atom - 1).text)\n                    continue;\n                for (let j of mol.atomAdjBonds(atom))\n                    if (j != i && mol.bondType(j) == Molecule.BONDTYPE_INCLINED && mol.bondTo(j) == atom && !hideBonds.has(j)) {\n                        let b1 = layout.getLines().find((b) => b.bnum == i);\n                        let b2 = layout.getLines().find((b) => b.bnum == j);\n                        let th1 = Math.atan2(b1.line.y1 - b1.line.y2, b1.line.x1 - b1.line.x2);\n                        let th2 = Math.atan2(b2.line.y1 - b2.line.y2, b2.line.x1 - b2.line.x2);\n                        if (Math.abs(angleDiff(th1, th2)) < 170 * DEGRAD) {\n                            this.drawFusedWedge(b1, b2);\n                            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Artifact, 'Fused', [b1.line.x1, b1.line.y1, b1.line.x2, b1.line.y2, b2.line.x1, b2.line.y1, b2.line.x2, b2.line.y2]);\n                            hideBonds.add(i);\n                            hideBonds.add(j);\n                            break;\n                        }\n                    }\n            }\n        for (let n = 0; n < layout.numLines(); n++) {\n            let b = layout.getLine(n);\n            if (hideBonds.has(b.bnum))\n                continue;\n            if (b.type == BLineType.Normal) {\n                vg.drawLine(b.line.x1, b.line.y1, b.line.x2, b.line.y2, b.col, b.size);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Bond, 'L', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Inclined) {\n                this.drawBondInclined(b);\n                (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Bond, 'I', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Declined) {\n                this.drawBondDeclined(b);\n                (_d = this.mnemonics) === null || _d === void 0 ? void 0 : _d.append(RenderMnemonicType.Bond, 'D', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Unknown) {\n                this.drawBondUnknown(b);\n                (_e = this.mnemonics) === null || _e === void 0 ? void 0 : _e.append(RenderMnemonicType.Bond, 'U', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.Dotted || b.type == BLineType.DotDir) {\n                this.drawBondDotted(b);\n                (_f = this.mnemonics) === null || _f === void 0 ? void 0 : _f.append(RenderMnemonicType.Bond, 'O', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n            else if (b.type == BLineType.IncDouble || b.type == BLineType.IncTriple || b.type == BLineType.IncQuadruple) {\n                this.drawBondIncMulti(b);\n                (_g = this.mnemonics) === null || _g === void 0 ? void 0 : _g.append(RenderMnemonicType.Bond, 'M', [b.line.x1, b.line.y1, b.line.x2, b.line.y2]);\n            }\n        }\n        let fg = policy.data.foreground;\n        for (let r of layout.getRings()) {\n            if (r.theta != 0) {\n                var bez = GeomUtil.createBezierEllipse(r.cx, r.cy, r.rw, r.rh, r.theta);\n                vg.drawPath(bez.px, bez.py, bez.ctrl, true, fg, r.size, MetaVector.NOCOLOUR, false);\n                (_h = this.mnemonics) === null || _h === void 0 ? void 0 : _h.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh, r.theta]);\n            }\n            else {\n                vg.drawOval(r.cx, r.cy, r.rw, r.rh, fg, r.size, MetaVector.NOCOLOUR);\n                (_j = this.mnemonics) === null || _j === void 0 ? void 0 : _j.append(RenderMnemonicType.Artifact, 'Ring', [r.cx, r.cy, r.rw, r.rh]);\n            }\n        }\n        for (let p of layout.getPaths()) {\n            vg.drawPath(p.px, p.py, p.ctrl, false, fg, p.size, MetaVector.NOCOLOUR, false);\n            (_k = this.mnemonics) === null || _k === void 0 ? void 0 : _k.append(RenderMnemonicType.Artifact, 'Path', [...p.px, ...p.py]);\n        }\n        for (let n = 0; n < layout.numPoints(); n++) {\n            let p = layout.getPoint(n);\n            if (effects.hideAtoms.has(p.anum))\n                continue;\n            let txt = p.text;\n            let cx = p.oval.cx, cy = p.oval.cy, rw = p.oval.rw;\n            if (txt == null) {\n                (_l = this.mnemonics) === null || _l === void 0 ? void 0 : _l.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n                continue;\n            }\n            let fsz = p.fsz;\n            let col = p.col;\n            while (txt.endsWith('.')) {\n                let dw = rw / txt.length;\n                let r = fsz * 0.15;\n                vg.drawOval(cx + rw - dw, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n                cx -= dw;\n                rw -= dw;\n                txt = txt.substring(0, txt.length - 1);\n            }\n            while (txt.startsWith('+')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                vg.drawLine(x, y - r, x, y + r, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            while (txt.startsWith('-')) {\n                let dw = rw / txt.length;\n                let x = cx - rw + dw, y = cy, r = fsz * 0.18, lsz = fsz * 0.1;\n                vg.drawLine(x - r, y, x + r, y, col, lsz);\n                cx += dw;\n                rw -= dw;\n                txt = txt.substring(1, txt.length);\n            }\n            if (txt.length > 0) {\n                vg.drawText(cx, cy, txt, fsz, col, TextAlign.Centre | TextAlign.Middle, p.rotation || 0);\n                (_m = this.mnemonics) === null || _m === void 0 ? void 0 : _m.append(RenderMnemonicType.Atom, txt, [cx, cy]);\n            }\n            else\n                (_o = this.mnemonics) === null || _o === void 0 ? void 0 : _o.append(RenderMnemonicType.Atom, '.', [cx, cy]);\n        }\n        this.drawOverEffects();\n    }\n    drawUnderEffects() {\n        var _a, _b, _c;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let n = 0, num = Math.min(effects.atomFrameDotSz.length, mol.numAtoms); n < num; n++) {\n            if (effects.hideAtoms.has(n + 1))\n                continue;\n            let dw = effects.atomFrameDotSz[n] * scale, col = effects.atomFrameCol[n];\n            let a = layout.getPoint(n);\n            let rw = a.oval.rw + 0.1 * scale, rh = a.oval.rh + 0.1 * scale;\n            let wdots = Math.ceil(2 * rw / (3 * dw));\n            let hdots = Math.ceil(2 * rh / (3 * dw));\n            let wspc = 2 * rw / wdots, hspc = 2 * rh / hdots;\n            for (let i = 0; i <= wdots; i++) {\n                let x = a.oval.cx - rw + i * wspc;\n                vg.drawOval(x, a.oval.cy - rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let i = 1; i < hdots; i++) {\n                let y = a.oval.cy - rh + i * hspc;\n                vg.drawOval(a.oval.cx - rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, dw, dw, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Dot', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedRectOutline) {\n            let atom = parseInt(key), col = effects.dottedRectOutline[key];\n            let a = layout.getPoint(atom - 1);\n            let rw = Math.max(a.oval.rw, 0.2 * scale), rh = Math.max(a.oval.rh, 0.2 * scale);\n            let sz = 0.05 * scale;\n            let xdots = Math.max(1, Math.round(rw / (2 * sz)));\n            let ydots = Math.max(1, Math.round(rh / (2 * sz)));\n            let invX = (2 * rw) / xdots, invY = (2 * rh) / ydots;\n            for (let n = 0; n <= xdots; n++) {\n                let x = a.oval.cx - rw + n * invX;\n                vg.drawOval(x, a.oval.cy - rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(x, a.oval.cy + rh, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            for (let n = 1; n < ydots; n++) {\n                let y = a.oval.cy - rh + n * invY;\n                vg.drawOval(a.oval.cx - rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n                vg.drawOval(a.oval.cx + rw, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Rect', [a.oval.cx, a.oval.cy, a.oval.rw, a.oval.rh]);\n        }\n        for (let key in effects.dottedBondCross) {\n            let bond = parseInt(key), col = effects.dottedBondCross[key];\n            let x1 = 0, y1 = 0, x2 = 0, y2 = 0, bcount = 0;\n            for (let n = 0; n < layout.numLines(); n++) {\n                let b = layout.getLine(n);\n                if (b.bnum == bond) {\n                    x1 += b.line.x1;\n                    y1 += b.line.y1;\n                    x2 += b.line.x2;\n                    y2 += b.line.y2;\n                    bcount += 1;\n                }\n            }\n            if (bcount > 1) {\n                let inv = 1 / bcount;\n                [x1, y1, x2, y2] = [x1 * inv, y1 * inv, x2 * inv, y2 * inv];\n            }\n            let dx = x2 - x1, dy = y2 - y1;\n            let inv = 0.2 * scale * invZ(norm_xy(dx, dy)), ox = dy * inv, oy = -dx * inv;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), sz = 0.05 * scale;\n            for (let p of [-2, -1, 1, 2]) {\n                let x = cx + p * ox, y = cy + p * oy;\n                vg.drawOval(x, y, sz, sz, MetaVector.NOCOLOUR, 0, col);\n            }\n            (_c = this.mnemonics) === null || _c === void 0 ? void 0 : _c.append(RenderMnemonicType.Effect, 'Crossing', [x1, y1, x2, y2]);\n        }\n    }\n    drawOverEffects() {\n        var _a, _b;\n        let mol = this.mol, policy = this.policy, effects = this.effects, layout = this.layout, scale = this.scale, vg = this.vg;\n        for (let a of effects.overlapAtoms) {\n            let p = layout.getPoint(a - 1);\n            let rad = scale * 0.2;\n            vg.drawLine(p.oval.cx - rad, p.oval.cy - rad, p.oval.cx + rad, p.oval.cy + rad, 0xFF0000, 1);\n            vg.drawLine(p.oval.cx + rad, p.oval.cy - rad, p.oval.cx - rad, p.oval.cy + rad, 0xFF0000, 1);\n            (_a = this.mnemonics) === null || _a === void 0 ? void 0 : _a.append(RenderMnemonicType.Effect, 'Overlap', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n        }\n        for (let n = 0, num = Math.min(effects.atomCircleSz.length, mol.numAtoms); n < num; n++)\n            if (effects.atomCircleSz[n] > 0) {\n                let dw = effects.atomCircleSz[n] * scale, col = effects.atomCircleCol[n];\n                let p = layout.getPoint(n);\n                vg.drawOval(p.oval.cx, p.oval.cy, dw, dw, MetaVector.NOCOLOUR, 0, col);\n                (_b = this.mnemonics) === null || _b === void 0 ? void 0 : _b.append(RenderMnemonicType.Effect, 'Circle', [p.oval.cx, p.oval.cy, p.oval.rw, p.oval.rh]);\n            }\n    }\n    drawBondInclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        let px = [x1, x2 - ox, x2 + ox], py = [y1, y2 - oy, y2 + oy];\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 2) {\n            let other = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other != null) {\n                        other = null;\n                        break;\n                    }\n                    other = o;\n                }\n            }\n            if (other != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other.line.y1 - other.line.y2, other.line.x1 - other.line.x2);\n                if (b.bto == other.bfr)\n                    th2 += Math.PI;\n                let diff = Math.abs(angleDiff(th1, th2));\n                if (diff > 105 * DEGRAD && diff < 135 * DEGRAD) {\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other.line.x1, other.line.y1, other.line.x2, other.line.y2);\n                    px[1] = ixy1[0];\n                    py[1] = ixy1[1];\n                    px[2] = ixy2[0];\n                    py[2] = ixy2[1];\n                    let dx1 = px[1] - px[0], dy1 = py[1] - py[0], inv1 = 0.5 * other.size / norm_xy(dx1, dy1);\n                    px[1] += dx1 * inv1;\n                    py[1] += dy1 * inv1;\n                    let dx2 = px[2] - px[0], dy2 = py[2] - py[0], inv2 = 0.5 * other.size / norm_xy(dx2, dy2);\n                    px[2] += dx2 * inv1;\n                    py[2] += dy2 * inv1;\n                }\n            }\n        }\n        if (this.layout.getPoint(b.bto - 1).text == null && this.mol.atomAdjCount(b.bto) == 3) {\n            let other1 = null, other2 = null;\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let o = this.layout.getLine(n);\n                if (o.type == BLineType.Normal && (o.bfr == b.bto || o.bto == b.bto)) {\n                    if (other1 == null)\n                        other1 = o;\n                    else if (other2 == null)\n                        other2 = o;\n                    else {\n                        other1 = other2 = null;\n                        break;\n                    }\n                }\n            }\n            if (other1 != null && other2 != null) {\n                let th1 = Math.atan2(y1 - y2, x1 - x2);\n                let th2 = Math.atan2(other1.line.y1 - other1.line.y2, other1.line.x1 - other1.line.x2);\n                let th3 = Math.atan2(other2.line.y1 - other2.line.y2, other2.line.x1 - other2.line.x2);\n                if (b.bto == other1.bfr)\n                    th2 += Math.PI;\n                if (b.bto == other2.bfr)\n                    th3 += Math.PI;\n                let dth1 = angleDiff(th1, th2), diff1 = Math.abs(dth1);\n                let dth2 = angleDiff(th1, th3), diff2 = Math.abs(dth2);\n                let diff3 = Math.abs(angleDiff(th2, th3));\n                if (diff1 > 105 * DEGRAD && diff1 < 135 * DEGRAD ||\n                    diff2 > 105 * DEGRAD && diff2 < 135 * DEGRAD ||\n                    diff3 > 105 * DEGRAD && diff3 < 135 * DEGRAD) {\n                    if (dth1 < 0)\n                        [other1, other2] = [other2, other1];\n                    let ixy1 = GeomUtil.lineIntersect(px[0], py[0], px[1], py[1], other1.line.x1, other1.line.y1, other1.line.x2, other1.line.y2);\n                    let ixy2 = GeomUtil.lineIntersect(px[0], py[0], px[2], py[2], other2.line.x1, other2.line.y1, other2.line.x2, other2.line.y2);\n                    px = [x1, ixy1[0], x2, ixy2[0]];\n                    py = [y1, ixy1[1], y2, ixy2[1]];\n                }\n            }\n        }\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, col, true);\n    }\n    drawFusedWedge(b1, b2) {\n        const terminalPoints = (b, other) => {\n            let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n            let dx = x2 - x1, dy = y2 - y1;\n            let norm = b.head / Math.sqrt(dx * dx + dy * dy);\n            let ox = norm * dy, oy = -norm * dx;\n            let tx1 = x2 - ox, ty1 = y2 - oy, tx2 = x2 + ox, ty2 = y2 + oy;\n            let dsq1 = norm2_xy(tx1 - other.line.x1, ty1 - other.line.y1);\n            let dsq2 = norm2_xy(tx2 - other.line.x1, ty2 - other.line.y1);\n            if (dsq1 > dsq2)\n                return { outerX: tx1, outerY: ty1, innerX: tx2, innerY: ty2 };\n            else\n                return { outerX: tx2, outerY: ty2, innerX: tx1, innerY: ty1 };\n        };\n        let u = terminalPoints(b1, b2), v = terminalPoints(b2, b1);\n        let [innerX, innerY] = GeomUtil.lineIntersect(b1.line.x1, b1.line.y1, u.innerX, u.innerY, b2.line.x1, b2.line.y1, v.innerX, v.innerY);\n        let px = [b1.line.x1, u.outerX, v.outerX, b2.line.x1, innerX];\n        let py = [b1.line.y1, u.outerY, v.outerY, b2.line.y1, innerY];\n        this.vg.drawPoly(px, py, MetaVector.NOCOLOUR, 0, b1.col, true);\n    }\n    drawBondDeclined(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 2.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx, invSteps = 1.0 / (nsteps + 1);\n        let holdout = this.mol.atomAdjCount(b.bto) == 1 && this.layout.getPoint(b.bto - 1).text == null ? 1 : 1 - (0.15 * this.scale) / ext;\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let cx = x1 + i * dx * invSteps * holdout, cy = y1 + i * dy * invSteps * holdout;\n            let ix = ox * i * invSteps, iy = oy * i * invSteps;\n            this.vg.drawLine(cx - ix, cy - iy, cx + ix, cy + iy, col, size);\n        }\n    }\n    drawBondUnknown(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let ext = Math.sqrt(dx * dx + dy * dy);\n        let nsteps = Math.ceil(ext * 3.5 * this.invScale);\n        let norm = head / ext;\n        let ox = norm * dy, oy = -norm * dx;\n        let sz = 1 + 3 * (nsteps + 1);\n        let x = Vec.numberArray(0, sz), y = Vec.numberArray(0, sz), ctrl = Vec.booleanArray(false, sz);\n        x[0] = x1;\n        y[0] = y1;\n        ctrl[0] = false;\n        for (let i = 0, j = 1; i <= nsteps; i++, j += 3) {\n            let ax = x1 + i * dx / (nsteps + 1), ay = y1 + i * dy / (nsteps + 1);\n            let cx = x1 + (i + 1) * dx / (nsteps + 1), cy = y1 + (i + 1) * dy / (nsteps + 1);\n            let bx = (ax + cx) / 2, by = (ay + cy) / 2;\n            let sign = i % 2 == 0 ? 1 : -1;\n            x[j] = ax;\n            x[j + 1] = bx + sign * ox;\n            x[j + 2] = cx;\n            y[j] = ay;\n            y[j + 1] = by + sign * oy;\n            y[j + 2] = cy;\n            ctrl[j] = true;\n            ctrl[j + 1] = true;\n            ctrl[j + 2] = false;\n        }\n        this.vg.drawPath(x, y, ctrl, false, col, size, MetaVector.NOCOLOUR, false);\n    }\n    drawBondDotted(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size;\n        let radius = size, dist = norm_xy(dx, dy);\n        if (dist < 0.01)\n            return;\n        let nudge = 0.5 * size / dist;\n        x1 += nudge * dx;\n        y1 += nudge * dy;\n        x2 -= nudge * dx;\n        y2 -= nudge * dy;\n        dx = x2 - x1;\n        dy = y2 - y1;\n        let nsteps = Math.ceil(0.2 * dist / radius);\n        let invSteps = 1.0 / (nsteps + 1);\n        for (let i = 0; i <= nsteps + 1; i++) {\n            let r = radius;\n            if (b.type == BLineType.DotDir)\n                r *= 1 + (i * (1.0 / (nsteps + 2)) - 0.5);\n            let cx = x1 + i * dx * invSteps, cy = y1 + i * dy * invSteps;\n            this.vg.drawOval(cx, cy, r, r, MetaVector.NOCOLOUR, 0, col);\n        }\n    }\n    drawBondIncMulti(b) {\n        let x1 = b.line.x1, y1 = b.line.y1, x2 = b.line.x2, y2 = b.line.y2;\n        let dx = x2 - x1, dy = y2 - y1;\n        let col = b.col;\n        let size = b.size, head = b.head;\n        let norm = head / Math.sqrt(dx * dx + dy * dy);\n        let ox = norm * dy, oy = -norm * dx;\n        this.vg.drawPoly([x1, x2 - ox, x2 + ox], [y1, y2 - oy, y2 + oy], col, this.scale * 0.05, MetaVector.NOCOLOUR, true);\n        if (b.type == BLineType.IncDouble) {\n            this.vg.drawLine(x1, y1, x2, y2, col, this.scale * 0.03);\n        }\n        else {\n            this.vg.drawLine(x1, y1, x2 + 0.33 * ox, y2 + 0.33 * oy, col, this.scale * 0.03);\n            this.vg.drawLine(x1, y1, x2 - 0.33 * ox, y2 - 0.33 * oy, col, this.scale * 0.03);\n        }\n    }\n}\n//# sourceMappingURL=DrawMolecule.js.map","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {ArrangeMixture, ArrangeMixtureComponent, ArrangeMixtureLine} from './ArrangeMixture';\nimport {Box} from 'webmolkit/util/Geom';\nimport {ArrangeMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\n\n/*\n\tDrawing a Mixfile, which has been arranged already.\n*/\n\nexport class DrawMixture\n{\n\tpublic hoverIndex = -1; // component to give a faint tinting to (for hover-over effect)\n\tpublic activeIndex = -1; // component that is actively engaged with UI\n\tpublic selectedIndex = -1; // component that is passively selected\n\n\t// optionally override drawing functionality within a component; return true if the rendering was intercepted,\n\t// or false to fall back to default rendering\n\tpublic callbackDrawMolecule:(comp:ArrangeMixtureComponent, gfx:MetaVector, box:Box) => boolean = null;\n\tpublic callbackDrawNameLine:(comp:ArrangeMixtureComponent, line:ArrangeMixtureLine, gfx:MetaVector, box:Box) => boolean = null;\n\n\tprivate measure:ArrangeMeasurement;\n\tprivate policy:RenderPolicy;\n\n\tprivate scale:number;\n\tprivate invScale:number;\n\n\t// --------------------- public methods ---------------------\n\n\tconstructor(private layout:ArrangeMixture, private vg:MetaVector)\n\t{\n\t\tthis.measure = layout.measure;\n\t\tthis.policy = layout.policy;\n\t\tthis.scale = layout.scale;\n\t\tthis.invScale = 1.0 / this.scale;\n\t}\n\n\t// renders the experiment, one component at a time\n\tpublic draw():void\n\t{\n\t\tfor (let comp of this.layout.components) if (comp.parentIdx >= 0)\n\t\t\tthis.drawConnection(this.layout.components[comp.parentIdx], comp);\n\n\t\tfor (let n = 0; n < this.layout.components.length; n++) this.drawComponent(n);\n\t}\n\n\t// --------------------- private methods ---------------------\n\n\tprivate drawConnection(parent:ArrangeMixtureComponent, child:ArrangeMixtureComponent):void\n\t{\n\t\tlet x1 = parent.boundary.maxX(), x2 = child.boundary.minX();\n\t\tlet y1 = parent.boundary.midY(), y2 = child.boundary.midY();\n\t\t//let xm = 0.5 * (x1 + x2);\n\t\tlet xm = x1 + 0.25 * this.scale;\n\t\tlet ym = 0.5 * (y1 + y2);\n\t\tlet d = 4, xd = d, yd = y1 < y2 - 1 ? -d : y1 > y2 + 1 ? d : 0;\n\n\t\tlet px = [x1, xm - xd, xm, xm, xm, xm, xm + xd, x2];\n\t\tlet py = [y1, y1, y1, y1 - yd, y2 + yd, y2, y2, y2];\n\t\tlet lsz = this.scale * 0.1;\n\t\tthis.vg.drawPath(px, py, [false, false, true, false, false, true, false, false], false, 0x000000, lsz, MetaVector.NOCOLOUR, false);\n\t}\n\n\tprivate drawComponent(idx:number):void\n\t{\n\t\tlet comp = this.layout.components[idx];\n\n\t\tlet box = comp.outline.clone();\n\t\tbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\tlet bg = 0xF8F8F8;\n\t\tif (idx == this.activeIndex) bg = 0x8296E4;\n\t\telse if (idx == this.selectedIndex) bg = 0xA9BBFF;\n\t\telse if (idx == this.hoverIndex) bg = 0xE0E0E0;\n\n\t\tthis.vg.drawRect(box.x, box.y, box.w, box.h, 0x808080, 1, bg);\n\n\t\t\tif (comp.molLayout)\n\t\t\t{\n\t\t\t\tlet b1 = comp.boundary, b2 = comp.molBox;\n\t\t\t\tcomp.molLayout.squeezeInto(b1.x + b2.x, b1.y + b2.y, b2.w, b2.h);\n\t\t\t}\n\n\t\tlet molBox = new Box(comp.boundary.x + comp.molBox.x, comp.boundary.y + comp.molBox.y, comp.molBox.w, comp.molBox.h);\n\t\tlet override = this.callbackDrawMolecule && this.callbackDrawMolecule(comp, this.vg, molBox);\n\n\t\tif (!override && comp.molLayout) new DrawMolecule(comp.molLayout, this.vg).draw();\n\n\t\tif (comp.nameLines.length > 0)\n\t\t{\n\t\t\tlet x = box.x, cx = x + comp.nameBox.midX(), y = box.y + comp.nameBox.y;\n\t\t\tfor (let line of comp.nameLines)\n\t\t\t{\n\t\t\t\tlet wad = this.measure.measureText(line.text, comp.fontSize), h = wad[1] + 2 * wad[2];\n\t\t\t\tlet override = this.callbackDrawNameLine && this.callbackDrawNameLine(comp, line, this.vg, new Box(x, y, box.w, h));\n\t\t\t\tif (!override) this.vg.drawText(cx, y, line.text, comp.fontSize, line.col, TextAlign.Centre | TextAlign.Top);\n\t\t\t\ty += h;\n\t\t\t}\n\t\t}\n\n\t\tif (comp.collapseBox)\n\t\t{\n\t\t\tlet cbox = comp.collapseBox.clone();\n\t\t\tcbox.offsetBy(comp.boundary.x, comp.boundary.y);\n\t\t\tthis.vg.drawRect(cbox.x, cbox.y, cbox.w, cbox.h, 0x808080, 1, 0xF8F8F8);\n\t\t\tlet cx = cbox.midX(), cy = cbox.midY(), d = Math.min(cbox.w, cbox.h) * 0.4, sz = d * 0.2;\n\t\t\tthis.vg.drawLine(cx - d, cy, cx + d, cy, 0x000000, sz);\n\t\t\tif (comp.isCollapsed) this.vg.drawLine(cx, cy - d, cx, cy + d, 0x000000, sz);\n\t\t}\n\t}\n}\n\n","import { clearTooltip } from '../ui/Tooltip';\nimport { dom, domLegacy } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst CSS_DIALOG = `\n    *.wmk-dialog\n    {\n        font-family: 'Open Sans', sans-serif;\n\t\tfont-size: 16px;\n\t\tcolor: black;\n\t\tuser-select: none;\n    }\n\t*.wmk-noscroll\n\t{\n\t\toverflow: hidden;\n\t}\n`;\nexport class Dialog {\n    constructor(parent = null) {\n        this.minPortionWidth = 80;\n        this.maxPortionWidth = 80;\n        this.maximumWidth = 0;\n        this.maximumHeight = 0;\n        this.minPortionHeight = 20;\n        this.maxPortionHeight = 0;\n        this.topMargin = 50;\n        this.title = 'Dialog';\n        this.allowScroller = true;\n        this.zindex = null;\n        this.callbackClose = null;\n        this.callbackShown = null;\n        this.parent = domLegacy(parent);\n        installInlineCSS('dialog', CSS_DIALOG);\n    }\n    onClose(callback) {\n        this.callbackClose = callback;\n    }\n    onShown(callback) {\n        this.callbackShown = callback;\n    }\n    open() {\n        clearTooltip();\n        let body = this.parent || dom(document.body);\n        body.addClass('wmk-noscroll');\n        let bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n        bg.css({ 'position': 'fixed' });\n        bg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        bg.css({ 'background-color': 'black', 'opacity': 0.8 });\n        bg.onClick(() => this.close());\n        let fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n        fg.css({ 'position': 'fixed' });\n        fg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        if (this.zindex > 0) {\n            bg.setCSS('z-index', this.zindex);\n            fg.setCSS('z-index', this.zindex + 1);\n        }\n        let pb = this.domPanelBoundary = dom('<div class=\"wmk-dialog\"/>').appendTo(fg);\n        pb.css({ 'min-width': this.minPortionWidth + '%' });\n        if (this.maximumWidth > 0)\n            pb.css({ 'max-width': this.maximumWidth + 'px' });\n        else if (this.maxPortionWidth != null)\n            pb.css({ 'max-width': this.maxPortionWidth + '%' });\n        if (this.maximumHeight > 0)\n            pb.css({ 'max-height': this.maximumHeight + 'px' });\n        else if (this.maxPortionHeight > 0)\n            pb.css({ 'max-height': this.maxPortionHeight + 'vh' });\n        pb.css({ 'background-color': 'white', 'border-radius': '6px', 'border': '1px solid black' });\n        pb.css({ 'position': 'absolute' });\n        pb.css({ 'left': (50 - 0.5 * this.minPortionWidth) + '%' });\n        pb.css({ 'top': this.topMargin + 'px' });\n        pb.css({ 'min-height': this.minPortionHeight + '%' });\n        let divOuter = dom('<div/>').appendTo(pb).css({ 'display': 'flex' });\n        divOuter.css({ 'flex-direction': 'column', 'align-items': 'stretch' });\n        if (this.maximumHeight > 0)\n            divOuter.css({ 'max-height': this.maximumHeight + 'px' });\n        else if (this.maxPortionHeight > 0)\n            divOuter.css({ 'max-height': this.maxPortionHeight + 'vh' });\n        let tdiv = this.domTitle = dom('<div/>').appendTo(divOuter);\n        tdiv.css({ 'flex-shrink': '0', 'flex-grow': '0' });\n        tdiv.css({ 'margin': '0', 'padding': '0' });\n        tdiv.css({ 'background-color': '#F0F0F0' });\n        tdiv.css({ 'background-image': 'linear-gradient(to right bottom, #FFFFFF, #E0E0E0)' });\n        tdiv.css({ 'border-bottom': '1px solid #C0C0C0' });\n        tdiv.css({ 'border-radius': '6px 6px 0 0' });\n        let bdiv = dom('<div/>').appendTo(divOuter).css({ 'width': '100%' });\n        bdiv.css({ 'flex-shrink': '1', 'flex-grow': '0' });\n        if (this.allowScroller)\n            bdiv.css({ 'overflow-y': 'auto' });\n        this.domBody = dom('<div/>').appendTo(bdiv).css({ 'padding': '0.5em' });\n        let ttlTable = dom('<table/>').appendTo(tdiv), tr = dom('<tr/>').appendTo(ttlTable);\n        ttlTable.attr({ 'width': '100%' });\n        let tdTitle = dom('<td valign=\"center\"/>').appendTo(tr).css({ 'padding': '0.5em' });\n        let ttl = dom('<font/>').appendTo(tdTitle).css({ 'font-size': '1.5em', 'font-weight': '600' });\n        ttl.setText(this.title);\n        let tdButtons = this.domTitleButtons = dom('<td align=\"right\" valign=\"center\"/>').appendTo(tr).css({ 'padding': '0.5em' });\n        this.domClose = dom('<button class=\"wmk-button wmk-button-default\">Close</button>').appendTo(tdButtons);\n        this.domClose.onClick(() => this.close());\n        this.populate();\n        this.repositionSize();\n        if (this.callbackShown)\n            this.callbackShown(this);\n    }\n    close() {\n        clearTooltip();\n        this.domObscureBackground.remove();\n        this.domObscureForeground.remove();\n        let body = this.parent || dom(document.body);\n        body.removeClass('wmk-noscroll');\n        if (this.callbackClose)\n            this.callbackClose(this);\n    }\n    bump() {\n        this.repositionSize();\n    }\n    bodyDOM() { return this.domBody; }\n    buttonsDOM() { return this.domTitleButtons; }\n    populate() {\n        this.bodyDOM().setText('Empty dialog box.');\n    }\n    repositionSize() {\n        let docW = window.innerWidth, dlgW = this.domPanelBoundary.width();\n        this.domPanelBoundary.css({ 'left': (0.5 * (docW - dlgW)) + 'px' });\n    }\n}\n//# sourceMappingURL=Dialog.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","import { dom } from '../util/dom';\nimport { addTooltip } from './Tooltip';\nexport class Widget {\n    get contentDOM() { return this.domContent; }\n    constructor() {\n        this.tagType = 'div';\n        this.domContent = null;\n    }\n    render(parent) {\n        let tag = this.tagType;\n        this.domContent = dom(`<${tag}/>`).appendTo(parent);\n    }\n    remove() {\n        if (this.domContent)\n            this.domContent.remove();\n        this.domContent = null;\n    }\n    addTooltip(bodyHTML, titleHTML) {\n        addTooltip(this.contentDOM, bodyHTML, titleHTML);\n    }\n    grabFocus() {\n        this.domContent.grabFocus();\n    }\n}\n//# sourceMappingURL=Widget.js.map","import { FontData } from '../gfx/FontData';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { dom } from '../util/dom';\nimport { Theme } from '../util/Theme';\nimport { colourCanvas, eventCoords, newElement, pathRoundedRect, pixelDensity, setBoundaryPixels } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { addTooltip } from './Tooltip';\nimport { Widget } from './Widget';\nexport var ButtonViewPosition;\n(function (ButtonViewPosition) {\n    ButtonViewPosition[ButtonViewPosition[\"Left\"] = 0] = \"Left\";\n    ButtonViewPosition[ButtonViewPosition[\"Right\"] = 1] = \"Right\";\n    ButtonViewPosition[ButtonViewPosition[\"Top\"] = 2] = \"Top\";\n    ButtonViewPosition[ButtonViewPosition[\"Bottom\"] = 3] = \"Bottom\";\n    ButtonViewPosition[ButtonViewPosition[\"Centre\"] = 4] = \"Centre\";\n})(ButtonViewPosition || (ButtonViewPosition = {}));\nexport class ButtonView extends Widget {\n    constructor(position, parentX, parentY, parentWidth, parentHeight) {\n        super();\n        this.position = position;\n        this.parentX = parentX;\n        this.parentY = parentY;\n        this.parentWidth = parentWidth;\n        this.parentHeight = parentHeight;\n        this.idealSize = 50;\n        this.width = 0;\n        this.height = 0;\n        this.selectedButton = null;\n        this.highlightButton = null;\n        this.maxButtonColumns = 0;\n        this.maxButtonRows = 0;\n        this.border = 0x808080;\n        this.background = 0xFFFFFF;\n        this.buttonColNorm1 = 0x47D5D2;\n        this.buttonColNorm2 = 0x008FD1;\n        this.buttonColActv1 = 0x30FF69;\n        this.buttonColActv2 = 0x008650;\n        this.buttonColSel1 = 0xFFFFFF;\n        this.buttonColSel2 = 0xE0E0E0;\n        this.canvas = null;\n        this.stack = [];\n        this.display = [];\n        this.hasBigButtons = true;\n        this.prefabImgSize = 44;\n        this.gripHeight = 30;\n        this.gripWidth = 50;\n        this.isRaised = true;\n        this.outPadding = 2;\n        this.inPadding = 2;\n        this.x = 0;\n        this.y = 0;\n        this.isMacLike = false;\n        this.isMacLike = !!navigator.platform.match(/(Mac|iPhone|iPod|iPad)/i);\n    }\n    setParentSize(width, height) {\n        this.parentWidth = width;\n        this.parentHeight = height;\n        if (this.contentDOM) {\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    get topBank() {\n        return this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n    }\n    get stackSize() { return this.stack.length; }\n    render(parent) {\n        super.render(parent);\n        this.contentDOM.css({ 'position': 'absolute', 'width': `${this.width}px`, 'height': `${this.height}px` });\n        this.contentDOM.addClass('no_selection');\n        this.layoutButtons();\n        let canvasStyle = 'position: absolute; left: 0; top: 0;';\n        canvasStyle += 'pointer-events: none;';\n        this.canvas = newElement(this.contentDOM.el, 'canvas', { 'width': this.width, 'height': this.height, 'style': canvasStyle });\n        this.canvas.style.width = this.width + 'px';\n        this.canvas.style.height = this.height + 'px';\n        this.applyOffset();\n        this.redraw();\n        this.contentDOM.onClick((event) => this.mouseClick(event));\n        this.contentDOM.onDblClick((event) => this.mouseDoubleClick(event));\n        this.contentDOM.onMouseDown((event) => { event.preventDefault(); this.mouseDown(event); });\n        this.contentDOM.onMouseUp((event) => this.mouseUp(event));\n        this.contentDOM.onMouseOver((event) => this.mouseOver(event));\n        this.contentDOM.onMouseLeave((event) => this.mouseOut(event));\n        this.contentDOM.onMouseMove((event) => this.mouseMove(event));\n    }\n    pushBank(bank) {\n        bank.buttonView = this;\n        bank.isSubLevel = this.stack.length > 0;\n        bank.init();\n        this.stack.push(bank);\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    popBank() {\n        if (this.stack.length == 0)\n            return;\n        Vec.last(this.stack).bankClosed();\n        this.stack.length--;\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    refreshBank() {\n        if (this.canvas != null) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    getSelectedButton() {\n        return this.selectedButton;\n    }\n    setSelectedButton(id) {\n        if (id != this.selectedButton) {\n            this.selectedButton = id;\n            this.redraw();\n        }\n    }\n    cycleSelected(dir) {\n        let sorted = this.display.filter((s) => s.id != '*');\n        sorted.sort((d1, d2) => (d1.y * 10000 + d1.x) - (d2.y * 10000 + d2.x));\n        let idx = 0, sz = sorted.length;\n        for (let n = 0; n < sz; n++)\n            if (sorted[n].id == this.selectedButton) {\n                idx = n;\n                break;\n            }\n        this.selectedButton = sorted[(idx + dir + sz) % sz].id;\n        this.redraw();\n    }\n    raiseBank() {\n        if (this.isRaised)\n            return;\n        this.isRaised = true;\n        if (this.contentDOM) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    lowerBank() {\n        if (!this.isRaised)\n            return;\n        this.isRaised = false;\n        if (this.contentDOM) {\n            this.layoutButtons();\n            this.replaceCanvas();\n            this.applyOffset();\n            this.redraw();\n        }\n    }\n    getHasBigButtons() {\n        return this.hasBigButtons;\n    }\n    setHasBigButtons(flag) {\n        this.hasBigButtons = flag;\n        this.prefabImgSize = flag ? 44 : 36;\n        this.idealSize = flag ? 50 : 40;\n    }\n    withinOutline(x, y) {\n        let w = this.width, h = this.height;\n        if (x < 0 || x > w || y < 0 || y > h)\n            return false;\n        if (this.position == ButtonViewPosition.Centre || this.stack.length == 0)\n            return true;\n        if (this.position == ButtonViewPosition.Left) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return x < w - gw || (y > my - hg && y < my + hg);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return x > gw || (y > my - hg && y < my + hg);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return y < h - gh || (x > mx - hg && x < mx + hg);\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            return y > gh || (x > mx - hg && x < mx + hg);\n        }\n        return true;\n    }\n    gripSize() {\n        return this.gripHeight;\n    }\n    sizeForButtons(nbtn) {\n        return this.idealSize * nbtn + this.inPadding * (nbtn - 1) + 2 * this.outPadding;\n    }\n    layoutButtons() {\n        if (this.contentDOM == null)\n            return;\n        let outPadding = this.outPadding, inPadding = this.inPadding;\n        this.removeDisplayButtons();\n        if (this.stack.length == 0) {\n            this.width = 10;\n            this.height = 10;\n            if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n                this.height = this.parentHeight;\n            else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n                this.width = this.parentWidth;\n            return;\n        }\n        if (!this.isRaised) {\n            if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n                this.width = this.gripHeight;\n                this.height = this.gripWidth + 2 * outPadding;\n            }\n            else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n                this.width = this.gripWidth + 2 * outPadding;\n                this.height = this.gripHeight;\n            }\n            this.addGripButton();\n            return;\n        }\n        let bank = this.stack[this.stack.length - 1];\n        bank.buttons = [];\n        bank.update();\n        let popWidth = 0, popHeight = 0;\n        if (this.stack.length == 1) { }\n        else if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n            popHeight = this.gripHeight + inPadding;\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n            popWidth = this.gripHeight + inPadding;\n        let bestLayout = null, bestScore = null;\n        if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n            let maxSlotHeight = Math.floor((this.parentHeight - 2 * outPadding - inPadding) / (this.idealSize + inPadding));\n            let minSlotHeight = Math.ceil(0.5 * maxSlotHeight);\n            for (let i = maxSlotHeight; i >= minSlotHeight; i--) {\n                let slotWidth = Math.ceil(bank.buttons.length / i);\n                for (let j = slotWidth; j <= slotWidth + 1; j++) {\n                    let layout = this.layoutMaxHeight(bank, i, j);\n                    let score = this.scoreLayout(layout) + 1 * layout[0].length;\n                    if (bestLayout == null || score < bestScore) {\n                        bestLayout = layout;\n                        bestScore = score;\n                    }\n                }\n            }\n        }\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n            let maxSlotWidth = Math.floor((this.parentWidth - 2 * outPadding - inPadding - popWidth) / (this.idealSize + inPadding));\n            let minSlotWidth = Math.ceil(0.5 * maxSlotWidth);\n            for (let n = maxSlotWidth; n >= minSlotWidth; n--) {\n                let layout = this.layoutMaxWidth(bank, n);\n                let score = this.scoreLayout(layout) + 1 * layout.length;\n                if (bestLayout == null || score < bestScore) {\n                    bestLayout = layout;\n                    bestScore = score;\n                }\n            }\n        }\n        else {\n        }\n        let ncols = bestLayout[0].length, nrows = bestLayout.length;\n        this.width = 2 * outPadding + inPadding + (this.idealSize + inPadding) * ncols + popWidth;\n        this.height = 2 * outPadding + inPadding + (this.idealSize + inPadding) * nrows + popHeight;\n        if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right)\n            this.width += this.gripHeight;\n        else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom)\n            this.height += this.gripHeight;\n        this.addGripButton();\n        if (popWidth > 0 || popHeight > 0) {\n            let d = {\n                id: '!',\n                x: outPadding + inPadding,\n                y: outPadding + inPadding,\n                width: popWidth - inPadding,\n                height: popHeight - inPadding\n            };\n            if (this.position == ButtonViewPosition.Right)\n                d.x += this.gripHeight;\n            else if (this.position == ButtonViewPosition.Bottom)\n                d.y += this.gripHeight;\n            if (popWidth == 0)\n                d.width = ncols * this.idealSize + inPadding * (ncols - 1);\n            if (popHeight == 0)\n                d.height = nrows * this.idealSize + inPadding * (nrows - 1);\n            this.display.push(d);\n        }\n        for (let y = 0; y < nrows; y++)\n            for (let x = 0; x < ncols; x++) {\n                for (let n = 0; n < bank.buttons.length; n++)\n                    if (bestLayout[y][x] == bank.buttons[n].id) {\n                        let b = bank.buttons[n], d = { id: b.id };\n                        d.x = outPadding + inPadding + popWidth + (this.idealSize + inPadding) * x;\n                        d.y = outPadding + inPadding + popHeight + (this.idealSize + inPadding) * y;\n                        if (this.position == ButtonViewPosition.Right)\n                            d.x += this.gripHeight;\n                        else if (this.position == ButtonViewPosition.Bottom)\n                            d.y += this.gripHeight;\n                        d.width = this.idealSize;\n                        d.height = this.idealSize;\n                        this.display.push(d);\n                    }\n            }\n    }\n    addGripButton() {\n        if (this.position == ButtonViewPosition.Centre)\n            return;\n        let d = { id: '*' }, spc = 3;\n        if (this.position == ButtonViewPosition.Left) {\n            d.width = this.gripHeight - spc;\n            d.height = this.gripWidth - 2 * spc;\n            d.x = this.width - d.width - spc - 1;\n            d.y = 0.5 * (this.height - d.height);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            d.width = this.gripHeight - spc;\n            d.height = this.gripWidth - 2 * spc;\n            d.x = spc + 1;\n            d.y = 0.5 * (this.height - d.height);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            d.width = this.gripWidth - 2 * spc;\n            d.height = this.gripHeight - spc;\n            d.x = 0.5 * (this.width - d.width);\n            d.y = this.height - d.height - spc - 1;\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            d.width = this.gripWidth - 2 * spc;\n            d.height = this.gripHeight - spc;\n            d.x = 0.5 * (this.width - d.width);\n            d.y = spc + 1;\n        }\n        this.display.push(d);\n    }\n    replaceCanvas() {\n        this.contentDOM.empty();\n        for (let n = 0; n < this.display.length; n++) {\n            this.display[n].imgDOM = null;\n            this.display[n].helpSpan = null;\n        }\n        let canvasStyle = 'position: absolute; left: 0; top: 0;';\n        canvasStyle += 'pointer-events: none;';\n        this.canvas = newElement(this.contentDOM.el, 'canvas', { 'width': this.width, 'height': this.height, 'style': canvasStyle });\n    }\n    removeDisplayButtons() {\n        this.contentDOM.empty();\n        this.display = [];\n    }\n    applyOffset() {\n        let x, y;\n        if (this.position == ButtonViewPosition.Left) {\n            x = 0;\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            x = this.parentWidth - this.width;\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = 0;\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = this.parentHeight - this.height;\n        }\n        else {\n            x = 0.5 * (this.parentWidth - this.width);\n            y = 0.5 * (this.parentHeight - this.height);\n        }\n        this.x = this.parentX + x;\n        this.y = this.parentY + y;\n        this.contentDOM.css({ 'position': 'absolute' });\n        setBoundaryPixels(this.contentDOM, this.x, this.y, this.width, this.height);\n    }\n    redraw() {\n        if (!this.contentDOM || !this.canvas)\n            return;\n        let density = pixelDensity();\n        this.canvas.width = this.width * density;\n        this.canvas.height = this.height * density;\n        this.canvas.style.width = this.width + 'px';\n        this.canvas.style.height = this.height + 'px';\n        let ctx = this.canvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        let path = this.traceOutline();\n        ctx.fillStyle = colourCanvas(this.background);\n        ctx.fill(path);\n        ctx.strokeStyle = colourCanvas(this.border);\n        ctx.lineWidth = 1;\n        ctx.stroke(path);\n        let bank = this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\n        this.contentDOM.css({ 'width': this.width + 'px', 'height': this.height + 'px' });\n        for (let n = 0; n < this.display.length; n++) {\n            const d = this.display[n], b = this.buttonFromID(d.id);\n            let col1, col2;\n            if (this.highlightButton != null && d.id == this.highlightButton) {\n                col1 = this.buttonColActv1;\n                col2 = this.buttonColActv2;\n            }\n            else if (this.selectedButton != null && d.id == this.selectedButton) {\n                col1 = this.buttonColSel1;\n                col2 = this.buttonColSel2;\n            }\n            else {\n                col1 = this.buttonColNorm1;\n                col2 = this.buttonColNorm2;\n            }\n            ctx.save();\n            path = pathRoundedRect(d.x + 0.5, d.y + 0.5, d.x + d.width - 1, d.y + d.height - 1, 5);\n            if (col2 != null) {\n                let grad = ctx.createLinearGradient(d.x, d.y, d.x + d.width, d.y + d.height);\n                grad.addColorStop(0, colourCanvas(col1));\n                grad.addColorStop(1, colourCanvas(col2));\n                ctx.fillStyle = grad;\n            }\n            else\n                ctx.fillStyle = colourCanvas(col1);\n            ctx.fill(path);\n            ctx.strokeStyle = colourCanvas(this.border);\n            ctx.lineWidth = 0.5;\n            ctx.stroke(path);\n            ctx.restore();\n            if (d.imgDOM != null) {\n                d.imgDOM.remove();\n                d.imgDOM = null;\n            }\n            if (b != null) {\n                if (d.helpSpan == null) {\n                    d.helpSpan = dom('<span style=\"position: absolute;\"/>').appendTo(this.contentDOM);\n                    let txt = b.helpText;\n                    if (b.mnemonic) {\n                        while (txt.endsWith('.'))\n                            txt = txt.substring(0, txt.length - 1);\n                        let keyText = b.mnemonic;\n                        let match = keyText.match(/^(.*)CmdOrCtrl(.*)$/);\n                        if (match)\n                            keyText = match[1] + (this.isMacLike ? 'Cmd' : 'Ctrl') + match[2];\n                        txt += ' [' + keyText + ']';\n                    }\n                    addTooltip(d.helpSpan, txt);\n                }\n                setBoundaryPixels(d.helpSpan, d.x, d.y, d.width, d.height);\n            }\n            if (b == null) { }\n            else if (b.imageFN != null && d.imgDOM == null) {\n                d.imgDOM = dom('<img/>').appendTo(this.contentDOM).css({ 'position': 'absolute', 'pointer-events': 'none' });\n                d.imgDOM.setAttr('src', Theme.RESOURCE_URL + '/img/actions/' + b.imageFN + '.svg');\n                const sz = this.prefabImgSize;\n                const bx = d.x + Math.floor(0.5 * (d.width - sz));\n                const by = d.y + Math.floor(0.5 * (d.height - sz));\n                setBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n            }\n            else if (b.svg != null) {\n                d.imgDOM = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'block', 'position': 'absolute', 'pointer-events': 'none' });\n                const sz = this.prefabImgSize;\n                const bx = d.x + Math.floor(0.5 * (d.width - sz));\n                const by = d.y + Math.floor(0.5 * (d.height - sz));\n                setBoundaryPixels(d.imgDOM, bx, by, sz, sz);\n                let svg = dom(b.svg.substring(b.svg.indexOf('<svg'))).appendTo(d.imgDOM);\n                let oldWidth = svg.getAttr('width'), oldHeight = svg.getAttr('height');\n                svg.attr({ 'viewBox': `0 0 ${oldWidth} ${oldHeight}`, 'width': `${sz}`, 'height': `${sz}` });\n                svg.css({ 'width': `${sz}px`, 'height': `${sz}px`, 'pointer-events': 'none' });\n                dom(svg).appendTo(d.imgDOM);\n            }\n            else if (b.metavec != null) {\n                let draw = b.metavec instanceof MetaVector ? b.metavec : new MetaVector(b.metavec);\n                draw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n                draw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n                draw.renderContext(ctx);\n            }\n            else if (b.text != null) {\n                let sz = this.idealSize;\n                let draw = new MetaVector({ 'size': [sz, sz] });\n                let fsz = sz * 0.6;\n                let wad = FontData.main.measureText(b.text, fsz);\n                if (wad[1] + wad[2] > sz) {\n                    fsz *= sz / (wad[1] + wad[2]);\n                    wad = FontData.main.measureText(b.text, fsz);\n                }\n                if (wad[0] > sz) {\n                    fsz *= sz / wad[0];\n                    wad = FontData.main.measureText(b.text, fsz);\n                }\n                let x = 0.5 * (sz - wad[0]), y = 0.5 * (sz + wad[1]);\n                draw.drawText(x - 1, y, b.text, fsz, 0x000000);\n                draw.drawText(x + 1, y, b.text, fsz, 0x000000);\n                draw.drawText(x, y - 1, b.text, fsz, 0x000000);\n                draw.drawText(x, y + 1, b.text, fsz, 0x000000);\n                draw.drawText(x, y, b.text, fsz, 0xFFFFFF);\n                draw.offsetX = d.x + Math.floor(0.5 * (d.width - draw.width));\n                draw.offsetY = d.y + Math.floor(0.5 * (d.height - draw.height));\n                draw.renderContext(ctx);\n            }\n            if (b != null && b.isSubMenu) {\n                ctx.save();\n                let sx = d.x + d.width - 3, sy = d.y + d.height - 3;\n                ctx.beginPath();\n                ctx.moveTo(sx, sy);\n                ctx.lineTo(sx - 6, sy);\n                ctx.lineTo(sx, sy - 6);\n                ctx.closePath();\n                ctx.fillStyle = 'black';\n                ctx.fill();\n                ctx.restore();\n            }\n            if (d.id == '*') {\n                ctx.save();\n                path = new Path2D();\n                let px, py, flip = this.isRaised;\n                if (this.position == ButtonViewPosition.Left || this.position == ButtonViewPosition.Right) {\n                    px = [0.2, 0.7, 0.7];\n                    py = [0.5, 0.3, 0.7];\n                    if (this.position == ButtonViewPosition.Left)\n                        flip = !flip;\n                }\n                else if (this.position == ButtonViewPosition.Top || this.position == ButtonViewPosition.Bottom) {\n                    px = [0.5, 0.3, 0.7];\n                    py = [0.2, 0.7, 0.7];\n                    if (this.position == ButtonViewPosition.Top)\n                        flip = !flip;\n                }\n                if (flip) {\n                    px = [1 - px[0], 1 - px[1], 1 - px[2]];\n                    py = [1 - py[0], 1 - py[1], 1 - py[2]];\n                }\n                path.moveTo(d.x + d.width * px[0], d.y + d.height * py[0]);\n                path.lineTo(d.x + d.width * px[1], d.y + d.height * py[1]);\n                path.lineTo(d.x + d.width * px[2], d.y + d.height * py[2]);\n                path.closePath();\n                ctx.fillStyle = 'white';\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0;\n                ctx.fill(path);\n                ctx.stroke(path);\n                ctx.restore();\n            }\n            else if (d.id == '!') {\n                ctx.save();\n                let path1 = new Path2D(), path2 = new Path2D();\n                let inset = 5;\n                let w = d.width - inset * 2, h = d.height - inset * 2;\n                for (let z = 5; z < w + h - 1; z += 12) {\n                    let x1 = 0, y1 = z, x2 = z, y2 = 0;\n                    if (y1 > h) {\n                        let delta = y1 - h;\n                        x1 += delta;\n                        y1 -= delta;\n                    }\n                    if (x2 > w) {\n                        let delta = x2 - w;\n                        x2 -= delta;\n                        y2 += delta;\n                    }\n                    path1.moveTo(d.x + inset + x1, d.y + inset + y1);\n                    path1.lineTo(d.x + inset + x2, d.y + inset + y2);\n                    path2.moveTo(d.x + inset + x1 + 1, d.y + inset + y1);\n                    path2.lineTo(d.x + inset + x2 + 1, d.y + inset + y2);\n                }\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = '#404040';\n                ctx.stroke(path1);\n                ctx.strokeStyle = 'white';\n                ctx.stroke(path2);\n                ctx.restore();\n            }\n        }\n        ctx.restore();\n    }\n    delayedRedraw() {\n        window.setTimeout(() => this.redraw(), 100);\n    }\n    buttonFromID(id) {\n        let bank = this.stack[this.stack.length - 1];\n        for (let n = 0; n < bank.buttons.length; n++)\n            if (bank.buttons[n].id == id)\n                return bank.buttons[n];\n        return null;\n    }\n    displayFromID(id) {\n        for (let n = 0; n < this.display.length; n++)\n            if (this.display[n].id == id)\n                return this.display[n];\n        return null;\n    }\n    traceOutline() {\n        let w = this.width, h = this.height, uw = w - 1, uh = h - 1, r = 8;\n        if (this.position == ButtonViewPosition.Centre || this.stack.length == 0)\n            return pathRoundedRect(0.5, 0.5, w - 0.5, h - 0.5, r);\n        let path = new Path2D();\n        if (this.position == ButtonViewPosition.Left) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, 0.5);\n            path.lineTo(0.5 + uw - gw - r, 0.5);\n            path.bezierCurveTo(0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5, 0.5 + uw - gw, 0.5 + r);\n            path.lineTo(0.5 + uw - gw, 0.5 + my - hg);\n            path.lineTo(0.5 + uw - r, 0.5 + my - hg);\n            path.bezierCurveTo(0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg, 0.5 + uw, 0.5 + my - hg + r);\n            path.lineTo(0.5 + uw, 0.5 + my + hg - r);\n            path.bezierCurveTo(0.5 + uw, 0.5 + my + hg, 0.5 + uw, 0.5 + my + hg, 0.5 + uw - r, 0.5 + my + hg);\n            path.lineTo(0.5 + uw - gw, 0.5 + my + hg);\n            path.lineTo(0.5 + uw - gw, 0.5 + uh - r);\n            path.bezierCurveTo(0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw, 0.5 + uh, 0.5 + uw - gw - r, 0.5 + uh);\n            path.lineTo(0.5, 0.5 + uh);\n        }\n        else if (this.position == ButtonViewPosition.Right) {\n            let my = 0.5 * h - 1, gw = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(w - 0.5, 0.5);\n            path.lineTo(w - (0.5 + uw - gw - r), 0.5);\n            path.bezierCurveTo(w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5, w - (0.5 + uw - gw), 0.5 + r);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + my - hg);\n            path.lineTo(w - (0.5 + uw - r), 0.5 + my - hg);\n            path.bezierCurveTo(w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg, w - (0.5 + uw), 0.5 + my - hg + r);\n            path.lineTo(w - (0.5 + uw), 0.5 + my + hg - r);\n            path.bezierCurveTo(w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw), 0.5 + my + hg, w - (0.5 + uw - r), 0.5 + my + hg);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + my + hg);\n            path.lineTo(w - (0.5 + uw - gw), 0.5 + uh - r);\n            path.bezierCurveTo(w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw), 0.5 + uh, w - (0.5 + uw - gw - r), 0.5 + uh);\n            path.lineTo(w - 0.5, 0.5 + uh);\n        }\n        else if (this.position == ButtonViewPosition.Top) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, h - (0.5 + uh));\n            path.lineTo(0.5, h - (0.5 + gh + r));\n            path.bezierCurveTo(0.5, h - (0.5 + gh), 0.5, h - (0.5 + gh), 0.5 + r, h - (0.5 + gh));\n            path.lineTo(0.5 + mx - hg, h - (0.5 + gh));\n            path.lineTo(0.5 + mx - hg, h - (0.5 + r));\n            path.bezierCurveTo(0.5 + mx - hg, h - 0.5, 0.5 + mx - hg, h - 0.5, 0.5 + mx - hg + r, h - 0.5);\n            path.lineTo(0.5 + mx + hg - r, h - 0.5);\n            path.bezierCurveTo(0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - 0.5, 0.5 + mx + hg, h - (0.5 + r));\n            path.lineTo(0.5 + mx + hg, h - (0.5 + gh));\n            path.lineTo(0.5 + uw - r, h - (0.5 + gh));\n            path.bezierCurveTo(0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh), 0.5 + uw, h - (0.5 + gh + r));\n            path.lineTo(0.5 + uw, h - (0.5 + uh));\n        }\n        else if (this.position == ButtonViewPosition.Bottom) {\n            let mx = 0.5 * w - 1, gh = this.gripHeight, hg = 0.5 * this.gripWidth;\n            path.moveTo(0.5, 0.5 + uh);\n            path.lineTo(0.5, 0.5 + gh + r);\n            path.bezierCurveTo(0.5, 0.5 + gh, 0.5, 0.5 + gh, 0.5 + r, 0.5 + gh);\n            path.lineTo(0.5 + mx - hg, 0.5 + gh);\n            path.lineTo(0.5 + mx - hg, 0.5 + r);\n            path.bezierCurveTo(0.5 + mx - hg, 0.5, 0.5 + mx - hg, 0.5, 0.5 + mx - hg + r, 0.5);\n            path.lineTo(0.5 + mx + hg - r, 0.5);\n            path.bezierCurveTo(0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5, 0.5 + mx + hg, 0.5 + r);\n            path.lineTo(0.5 + mx + hg, 0.5 + gh);\n            path.lineTo(0.5 + uw - r, 0.5 + gh);\n            path.bezierCurveTo(0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh, 0.5 + uw, 0.5 + gh + r);\n            path.lineTo(0.5 + uw, 0.5 + uh);\n        }\n        return path;\n    }\n    layoutMaxWidth(bank, slotWidth) {\n        if (bank.buttons.length == 0)\n            return [[null]];\n        let bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n        let x = 0, y = 0, w = 0, h = 0;\n        for (let n = 0; n < bank.buttons.length; n++) {\n            w = Math.max(x + 1, w);\n            h = Math.max(y + 1, h);\n            bx[n] = x;\n            by[n] = y;\n            x++;\n            if (x >= slotWidth) {\n                x = 0;\n                y++;\n            }\n        }\n        let slot = new Array(h);\n        for (let n = 0; n < h; n++)\n            slot[n] = new Array(w);\n        for (let n = 0; n < bank.buttons.length; n++) {\n            slot[by[n]][bx[n]] = bank.buttons[n].id;\n        }\n        return slot;\n    }\n    layoutMaxHeight(bank, slotHeight, slotWidth) {\n        if (bank.buttons.length == 0)\n            return [[null]];\n        let bx = new Array(bank.buttons.length), by = new Array(bank.buttons.length);\n        let x = 0, y = 0, w = 0, h = 0;\n        for (let n = 0; n < bank.buttons.length; n++) {\n            w = Math.max(x + 1, w);\n            h = Math.max(y + 1, h);\n            bx[n] = x;\n            by[n] = y;\n            x++;\n            if (x >= slotWidth) {\n                x = 0;\n                y++;\n            }\n        }\n        let slot = new Array(h);\n        for (let n = 0; n < h; n++)\n            slot[n] = new Array(w);\n        for (let n = 0; n < bank.buttons.length; n++) {\n            slot[by[n]][bx[n]] = bank.buttons[n].id;\n        }\n        return slot;\n    }\n    scoreLayout(slots) {\n        let score = 0;\n        let nrows = slots.length, ncols = slots[0].length;\n        for (let y = 0; y < nrows; y++)\n            for (let x = 0; x < ncols; x++) {\n                if (slots[y][x] == null)\n                    score++;\n            }\n        if (this.maxButtonRows > 0 && nrows > this.maxButtonRows)\n            score += (nrows - this.maxButtonRows) * 100;\n        if (this.maxButtonColumns > 0 && ncols > this.maxButtonColumns)\n            score += (ncols - this.maxButtonColumns) * 100;\n        return score;\n    }\n    pickButtonIndex(x, y) {\n        for (let n = 0; n < this.display.length; n++) {\n            let d = this.display[n];\n            if (x >= d.x && y >= d.y && x < d.x + d.width && y < d.y + d.height)\n                return n;\n        }\n        return -1;\n    }\n    pickButtonID(x, y) {\n        let idx = this.pickButtonIndex(x, y);\n        if (idx < 0)\n            return undefined;\n        return this.display[idx].id;\n    }\n    triggerButton(id) {\n        if (id == '*') {\n            if (this.isRaised)\n                this.lowerBank();\n            else\n                this.raiseBank();\n            return;\n        }\n        else if (id == '!') {\n            this.popBank();\n            return;\n        }\n        let bank = this.stack[this.stack.length - 1];\n        bank.hitButton(id);\n    }\n    mouseClick(event) {\n    }\n    mouseDoubleClick(event) {\n        event.stopImmediatePropagation();\n    }\n    mouseDown(event) {\n        this.contentDOM.parent().grabFocus();\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        let id = this.pickButtonID(xy[0], xy[1]);\n        if (id != this.highlightButton) {\n            this.highlightButton = id;\n            this.redraw();\n        }\n        event.stopPropagation();\n    }\n    mouseUp(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        let id = this.pickButtonID(xy[0], xy[1]);\n        if (id != null && this.highlightButton == id) {\n            this.highlightButton = undefined;\n            this.triggerButton(id);\n            this.delayedRedraw();\n        }\n        else {\n            this.highlightButton = undefined;\n            this.delayedRedraw();\n        }\n        event.stopPropagation();\n    }\n    mouseOver(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n        event.stopPropagation();\n    }\n    mouseOut(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1])) {\n            if (this.highlightButton != null) {\n                this.highlightButton = null;\n                this.delayedRedraw();\n            }\n            return;\n        }\n        if (this.highlightButton != null) {\n            let xy = eventCoords(event, this.contentDOM);\n            let id = this.pickButtonID(xy[0], xy[1]);\n            if (id != this.highlightButton) {\n                this.highlightButton = null;\n                this.delayedRedraw();\n            }\n        }\n        event.stopPropagation();\n    }\n    mouseMove(event) {\n        let xy = eventCoords(event, this.contentDOM);\n        if (!this.withinOutline(xy[0], xy[1]))\n            return;\n    }\n}\n//# sourceMappingURL=ButtonView.js.map","export class ButtonBank {\n    constructor() {\n        this.isSubLevel = false;\n        this.buttons = [];\n    }\n    init() { }\n    claimKey(event) { return false; }\n    bankClosed() { }\n    static matchKey(event, mnemonic, key) {\n        if (mnemonic == null || mnemonic == '')\n            return false;\n        let mshift = false, mctrl = false, malt = false, mmeta = false, mkey = mnemonic;\n        while (true) {\n            if (mkey.startsWith('Shift+')) {\n                mshift = true;\n                mkey = mkey.substring(6);\n            }\n            else if (mkey.startsWith('Ctrl+')) {\n                mctrl = true;\n                mkey = mkey.substring(5);\n            }\n            else if (mkey.startsWith('Alt+')) {\n                malt = true;\n                mkey = mkey.substring(4);\n            }\n            else if (mkey.startsWith('Cmd+')) {\n                mmeta = true;\n                mkey = mkey.substring(4);\n            }\n            else\n                break;\n        }\n        if (mshift != event.shiftKey)\n            return false;\n        if (mctrl != event.ctrlKey)\n            return false;\n        if (malt != event.altKey)\n            return false;\n        if (mmeta != event.metaKey)\n            return false;\n        if (key)\n            mkey = key;\n        return mkey.toLowerCase() == event.key.toLowerCase();\n    }\n}\n//# sourceMappingURL=ButtonBank.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainUndo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainExport.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3604\\\">\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.25098041;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3606\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.1254902;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3608\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective23\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3604\\\"\\n       id=\\\"radialGradient3610\\\"\\n       cx=\\\"210\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"210\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"152.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(1.0491803,-0.78688524,0.78096126,1.0412817,-119.66246,159.46646)\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.2586836\\\"\\n     inkscape:cx=\\\"163.14968\\\"\\n     inkscape:cy=\\\"164.16609\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1716\\\"\\n     inkscape:window-height=\\\"1116\\\"\\n     inkscape:window-x=\\\"144\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3600\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3610);fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"path3602\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:rx=\\\"150\\\"\\n       sodipodi:ry=\\\"150\\\"\\n       d=\\\"m 310,160 a 150,150 0 1 1 -300,0 150,150 0 1 1 300,0 z\\\"\\n       transform=\\\"matrix(0.93333333,0,0,0.93333333,10.666666,10.666666)\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 196.07064,12.690252 -90,50 90,49.999998 0,-12.8125 c 20.29664,12.07637 33.75,34.2109 33.75,59.78125 0,38.68907 -30.81093,69.5 -69.5,69.5 -38.68907,0 -69.531254,-30.81093 -69.531254,-69.5 0.0934,-6.60391 -2.559001,-13.20451 -7.195999,-17.90755 -4.636997,-4.70304 -11.199433,-7.4485 -17.804001,-7.4485 -6.604568,0 -13.167004,2.74546 -17.804001,7.4485 -4.636998,4.70304 -7.289395,11.30364 -7.195999,17.90755 0,65.71107 53.82018,119.5 119.531254,119.5 65.71107,0 119.5,-53.78892 119.5,-119.5 0,-53.27576 -35.34828,-98.733461 -83.75,-114.031248 l 0,-32.9375 z\\\"\\n       id=\\\"path3612\\\"\\n       sodipodi:nodetypes=\\\"ccccsscssscsscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomPlus.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomPlus.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective10\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-64.472045\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2818\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:8.13591309000000070\\\"\\n       id=\\\"path3758\\\"\\n       sodipodi:cx=\\\"161.07143\\\"\\n       sodipodi:cy=\\\"160.35715\\\"\\n       sodipodi:rx=\\\"149.64285\\\"\\n       sodipodi:ry=\\\"149.64285\\\"\\n       d=\\\"m 310.71428,160.35715 a 149.64285,149.64285 0 1 1 -299.285706,0 149.64285,149.64285 0 1 1 299.285706,0 z\\\"\\n       transform=\\\"matrix(0.60145026,0,0,0.6014321,63.123549,63.556079)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:14.75459385;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 91.367971,160.26223 230.74482,159.73468\\\"\\n       id=\\\"path3754\\\"\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:14.75459385;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 160.52478,90.246356 0.53163,138.246984\\\"\\n       id=\\\"path3756\\\"\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomMinus.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomMinus.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective9\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"59.813669\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"467\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2815\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:8.13591309000000070\\\"\\n       id=\\\"path3758\\\"\\n       sodipodi:cx=\\\"161.07143\\\"\\n       sodipodi:cy=\\\"160.35715\\\"\\n       sodipodi:rx=\\\"149.64285\\\"\\n       sodipodi:ry=\\\"149.64285\\\"\\n       d=\\\"m 310.71428,160.35715 a 149.64285,149.64285 0 1 1 -299.285706,0 149.64285,149.64285 0 1 1 299.285706,0 z\\\"\\n       transform=\\\"matrix(0.60591986,0,0,0.60381033,62.403623,63.530598)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12.95214939;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 96.131868,160.58706 129.596922,-0.4623\\\"\\n       id=\\\"path3754\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOne.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,160 L 39.961095,160\\\"\\n       id=\\\"path3152\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTwo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondOne.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,140 L 39.961095,140\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,179.98053 L 39.941666,179.98053\\\"\\n       id=\\\"path3574\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondThree.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTwo.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,160 L 39.961095,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,199.98053 L 39.941666,199.98053\\\"\\n       id=\\\"path3574\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,119.98053 L 39.941663,119.98053\\\"\\n       id=\\\"path3576\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondZero.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2966\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4517786\\\"\\n     inkscape:cx=\\\"160\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1390\\\"\\n     inkscape:window-height=\\\"1119\\\"\\n     inkscape:window-x=\\\"422\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2968\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3742\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,132.5,-8.75)\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,-17.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3744\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3746\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,32.5,-8.75)\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,82.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3748\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       transform=\\\"matrix(1.25,0,0,1.25,232.5,-8.75)\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       id=\\\"path3750\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"path3752\\\"\\n       sodipodi:cx=\\\"40\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"10\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"m 50,135 a 10,10 0 1 1 -20,0 10,10 0 1 1 20,0 z\\\"\\n       transform=\\\"matrix(1.25,0,0,1.25,182.5,-8.75)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondUp.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#000000;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 10,160 L 300,100 L 300,220.71429 L 10,160 z \\\"\\n       id=\\\"path3610\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondDown.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 40.382649,165.00403 L 40.382649,155.19597\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 100,174.2408 L 100,144.59666\\\"\\n       id=\\\"path3712\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,184.32705 L 160,134.74379\\\"\\n       id=\\\"path3714\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280,204.78908 L 280,115.08664\\\"\\n       id=\\\"path3716\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:20;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 220,195.22384 L 220,125.64966\\\"\\n       id=\\\"path3718\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondSquig.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSquig.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.70939255;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 13.854696,160 C 23.404427,145.60525 31.644659,120.73451 42.883757,119.8547 C 52.560111,118.19483 66.522178,143.90673 71.912818,160 C 82.300825,178.10026 83.522733,199.152 100.94188,200.1453 C 119.40219,200.81786 121.80479,177.7981 129.97094,160 C 137.74367,142.33593 144.46966,118.67452 159,119.8547 C 175.82856,118.93206 179.97706,143.36954 188.02906,160 C 196.14175,177.45474 205.82635,200.76232 217.05812,200.1453 C 231.09125,199.83385 237.2755,175.9758 246.08718,160 C 254.09821,142.34457 263.95628,119.88399 275.11624,119.8547 C 289.09333,120.33425 295.4277,143.74196 304.1453,160 L 304.1453,160 L 304.1453,160\\\"\\n       id=\\\"path3749\\\"\\n       sodipodi:nodetypes=\\\"ccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","import { Molecule } from '../mol/Molecule';\nimport { Geometry } from '../mol/SketchUtil';\nimport { ButtonBank } from '../ui/ButtonBank';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nconst ELEMENTS_NOBLE = [\n    'He', 'Ar', 'Kr', 'Xe', 'Rn'\n];\nconst ELEMENTS_S_BLOCK = [\n    'Li', 'Na', 'K', 'Rb', 'Cs', 'Fr', 'Sc',\n    'Be', 'Mg', 'Ca', 'Sr', 'Ba', 'Ra', 'Y'\n];\nconst ELEMENTS_P_BLOCK = [\n    'B', 'Al', 'Si', 'Ga', 'Ge', 'As', 'Se',\n    'In', 'Sn', 'Sb', 'Te', 'Tl', 'Pb', 'Bi', 'Po', 'At'\n];\nconst ELEMENTS_D_BLOCK = [\n    'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n    'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n    'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg'\n];\nconst ELEMENTS_F_BLOCK = [\n    'La', 'Ce', 'Pr', 'Nd', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy',\n    'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Ac', 'Th', 'Pa', 'U'\n];\nconst ELEMENTS_ABBREV = [\n    '*', 'A', 'X', 'Y', 'Z', 'Q', 'M', 'T', 'E', 'L', 'R',\n    'R0', 'R1', 'R2', 'R3', 'R4', 'R5', 'R6', 'R7', 'R8'\n];\nvar CommandType;\n(function (CommandType) {\n    CommandType[CommandType[\"Main\"] = 0] = \"Main\";\n    CommandType[CommandType[\"Atom\"] = 1] = \"Atom\";\n    CommandType[CommandType[\"Bond\"] = 2] = \"Bond\";\n    CommandType[CommandType[\"Select\"] = 3] = \"Select\";\n    CommandType[CommandType[\"Move\"] = 4] = \"Move\";\n    CommandType[CommandType[\"Abbrev\"] = 5] = \"Abbrev\";\n    CommandType[CommandType[\"SBlock\"] = 6] = \"SBlock\";\n    CommandType[CommandType[\"PBlock\"] = 7] = \"PBlock\";\n    CommandType[CommandType[\"DBlock\"] = 8] = \"DBlock\";\n    CommandType[CommandType[\"FBlock\"] = 9] = \"FBlock\";\n    CommandType[CommandType[\"Noble\"] = 10] = \"Noble\";\n})(CommandType || (CommandType = {}));\nimport svgMainUndo from '../res/img/actions/MainUndo.svg';\nimport svgMainRedo from '../res/img/actions/MainRedo.svg';\nimport svgMainZoomIn from '../res/img/actions/MainZoomIn.svg';\nimport svgMainZoomOut from '../res/img/actions/MainZoomOut.svg';\nimport svgMainZoomFit from '../res/img/actions/MainZoomFit.svg';\nimport svgMainSelSide from '../res/img/actions/MainSelSide.svg';\nimport svgMainSelAll from '../res/img/actions/MainSelAll.svg';\nimport svgMainSelNone from '../res/img/actions/MainSelNone.svg';\nimport svgMainDelete from '../res/img/actions/MainDelete.svg';\nimport svgMainCut from '../res/img/actions/MainCut.svg';\nimport svgMainCopy from '../res/img/actions/MainCopy.svg';\nimport svgMainPaste from '../res/img/actions/MainPaste.svg';\nimport svgMainAtom from '../res/img/actions/MainAtom.svg';\nimport svgMainBond from '../res/img/actions/MainBond.svg';\nimport svgMainSelect from '../res/img/actions/MainSelect.svg';\nimport svgMainMove from '../res/img/actions/MainMove.svg';\nconst COMMANDS_MAIN = [\n    { id: 'undo', svg: svgMainUndo, helpText: 'Undo last change.', mnemonic: 'CmdOrCtrl+Z' },\n    { id: 'redo', svg: svgMainRedo, helpText: 'Cancel last undo.', mnemonic: 'CmdOrCtrl+Shift+Z' },\n    { id: 'zoomin', svg: svgMainZoomIn, helpText: 'Zoom in.', mnemonic: '=' },\n    { id: 'zoomout', svg: svgMainZoomOut, helpText: 'Zoom out.', mnemonic: '-' },\n    { id: 'zoomfit', svg: svgMainZoomFit, helpText: 'Show whole diagram onscreen.', mnemonic: '' },\n    { id: 'selside', svg: svgMainSelSide, helpText: 'Select alternate side of current atom or bond.', mnemonic: 'E' },\n    { id: 'selall', svg: svgMainSelAll, helpText: 'Select all atoms.', mnemonic: 'Shift+A' },\n    { id: 'selnone', svg: svgMainSelNone, helpText: 'Clear selection.', mnemonic: 'Shift+Q' },\n    { id: 'delete', svg: svgMainDelete, helpText: 'Delete selected atoms and bonds.', mnemonic: 'D' },\n    { id: 'cut', svg: svgMainCut, helpText: 'Copy selection to clipboard, and remove.', mnemonic: 'CmdOrCtrl+X' },\n    { id: 'copy', svg: svgMainCopy, helpText: 'Copy selection to clipboard.', mnemonic: 'CmdOrCtrl+C' },\n    { id: 'paste', svg: svgMainPaste, helpText: 'Paste clipboard contents.' },\n    { id: 'atom', svg: svgMainAtom, helpText: 'Open the Atom submenu.', isSubMenu: true, mnemonic: 'A' },\n    { id: 'bond', svg: svgMainBond, helpText: 'Open the Bond submenu.', isSubMenu: true, mnemonic: 'B' },\n    { id: 'select', svg: svgMainSelect, helpText: 'Open the Selection submenu.', isSubMenu: true, mnemonic: 'S' },\n    { id: 'move', svg: svgMainMove, helpText: 'Open the Move submenu.', isSubMenu: true, mnemonic: 'M' },\n];\nimport svgAtomPlus from '../res/img/actions/AtomPlus.svg';\nimport svgAtomMinus from '../res/img/actions/AtomMinus.svg';\nimport svgAtomAbbrev from '../res/img/actions/AtomAbbrev.svg';\nimport svgAtomSBlock from '../res/img/actions/AtomSBlock.svg';\nimport svgAtomPBlock from '../res/img/actions/AtomPBlock.svg';\nimport svgAtomDBlock from '../res/img/actions/AtomDBlock.svg';\nimport svgAtomFBlock from '../res/img/actions/AtomFBlock.svg';\nimport svgAtomNoble from '../res/img/actions/AtomNoble.svg';\nconst COMMANDS_ATOM = [\n    { id: 'element:C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: 'Shift+C' },\n    { id: 'element:N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: 'Shift+N' },\n    { id: 'element:O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: 'Shift+O' },\n    { id: 'element:S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: 'Shift+S' },\n    { id: 'element:P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: 'Shift+P' },\n    { id: 'element:H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: 'Shift+H' },\n    { id: 'element:F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: 'Shift+F' },\n    { id: 'element:Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: 'Shift+L' },\n    { id: 'element:Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: 'Shift+B' },\n    { id: 'element:I', text: 'I', helpText: 'Change elements to Iodine.', mnemonic: 'Shift+I' },\n    { id: 'plus', svg: svgAtomPlus, helpText: 'Increase the atom charge.', mnemonic: 'Shift+=', key: '+' },\n    { id: 'minus', svg: svgAtomMinus, helpText: 'Decrease the atom charge.', mnemonic: 'Shift+-', key: '_' },\n    { id: 'abbrev', svg: svgAtomAbbrev, helpText: 'Open list of common labels.', isSubMenu: true, mnemonic: '' },\n    { id: 'sblock', svg: svgAtomSBlock, helpText: 'Open list of s-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'pblock', svg: svgAtomPBlock, helpText: 'Open list of p-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'dblock', svg: svgAtomDBlock, helpText: 'Open list of d-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'fblock', svg: svgAtomFBlock, helpText: 'Open list of f-block elements.', isSubMenu: true, mnemonic: '' },\n    { id: 'noble', svg: svgAtomNoble, helpText: 'Open list of noble elements.', isSubMenu: true, mnemonic: '' },\n];\nimport svgBondOne from '../res/img/actions/BondOne.svg';\nimport svgBondTwo from '../res/img/actions/BondTwo.svg';\nimport svgBondThree from '../res/img/actions/BondThree.svg';\nimport svgBondFour from '../res/img/actions/BondFour.svg';\nimport svgBondZero from '../res/img/actions/BondZero.svg';\nimport svgBondUp from '../res/img/actions/BondUp.svg';\nimport svgBondDown from '../res/img/actions/BondDown.svg';\nimport svgBondSquig from '../res/img/actions/BondSquig.svg';\nimport svgBondQAny from '../res/img/actions/BondQAny.svg';\nimport svgBondAddTwo from '../res/img/actions/BondAddTwo.svg';\nimport svgBondInsert from '../res/img/actions/BondInsert.svg';\nimport svgBondSwitch from '../res/img/actions/BondSwitch.svg';\nimport svgBondRotate from '../res/img/actions/BondRotate.svg';\nimport svgBondLinear from '../res/img/actions/BondLinear.svg';\nimport svgBondTrigonal from '../res/img/actions/BondTrigonal.svg';\nimport svgBondTetra1 from '../res/img/actions/BondTetra1.svg';\nimport svgBondTetra2 from '../res/img/actions/BondTetra2.svg';\nimport svgBondSqPlan from '../res/img/actions/BondSqPlan.svg';\nimport svgBondOcta1 from '../res/img/actions/BondOcta1.svg';\nimport svgBondOcta2 from '../res/img/actions/BondOcta2.svg';\nimport svgBondMetalLigate from '../res/img/actions/BondMetalLigate.svg';\nimport svgBondArtifactPath from '../res/img/actions/BondArtifactPath.svg';\nimport svgBondArtifactRing from '../res/img/actions/BondArtifactRing.svg';\nimport svgBondArtifactArene from '../res/img/actions/BondArtifactArene.svg';\nimport svgBondArtifactClear from '../res/img/actions/BondArtifactClear.svg';\nimport svgBondPolymer from '../res/img/actions/BondPolymer.svg';\nconst COMMANDS_BOND = [\n    { id: 'one', svg: svgBondOne, helpText: 'Create or set bonds to single.', mnemonic: '1' },\n    { id: 'two', svg: svgBondTwo, helpText: 'Create or set bonds to double.', mnemonic: '2' },\n    { id: 'three', svg: svgBondThree, helpText: 'Create or set bonds to triple.', mnemonic: '3' },\n    { id: 'four', svg: svgBondFour, helpText: 'Create or set bonds to quadruple.', mnemonic: '' },\n    { id: 'zero', svg: svgBondZero, helpText: 'Create or set bonds to zero-order.', mnemonic: '0' },\n    { id: 'inclined', svg: svgBondUp, helpText: 'Create or set bonds to inclined.', mnemonic: '5' },\n    { id: 'declined', svg: svgBondDown, helpText: 'Create or set bonds to declined.', mnemonic: '6' },\n    { id: 'squig', svg: svgBondSquig, helpText: 'Create or set bonds to unknown stereochemistry.', mnemonic: '4' },\n    { id: 'bondQAny', svg: svgBondQAny, helpText: 'Query bond that matches anything.' },\n    { id: 'addtwo', svg: svgBondAddTwo, helpText: 'Add two new bonds to the subject atom.', mnemonic: 'Shift+D' },\n    { id: 'insert', svg: svgBondInsert, helpText: 'Insert a methylene into the subject bond.', mnemonic: '' },\n    { id: 'switch', svg: svgBondSwitch, helpText: 'Cycle through likely bond geometries.', mnemonic: '\\'' },\n    { id: 'rotate', svg: svgBondRotate, helpText: 'Rotate bond to invert substituent orientation.', mnemonic: '' },\n    { id: 'linear', svg: svgBondLinear, helpText: 'Apply linear geometry.', mnemonic: 'Shift+V' },\n    { id: 'trigonal', svg: svgBondTrigonal, helpText: 'Apply trigonal geometry.', mnemonic: 'Shift+W' },\n    { id: 'tetra1', svg: svgBondTetra1, helpText: 'Apply tetrahedral geometry #1.', mnemonic: 'Shift+E' },\n    { id: 'tetra2', svg: svgBondTetra2, helpText: 'Apply tetrahedral geometry #2.', mnemonic: 'Shift+R' },\n    { id: 'sqplan', svg: svgBondSqPlan, helpText: 'Apply square planar geometry.', mnemonic: 'Shift+T' },\n    { id: 'octa1', svg: svgBondOcta1, helpText: 'Apply octahedral geometry #1.', mnemonic: 'Shift+Y' },\n    { id: 'octa2', svg: svgBondOcta2, helpText: 'Apply octahedral geometry #2.', mnemonic: 'Shift+U' },\n    { id: 'metalligate', svg: svgBondMetalLigate, helpText: 'Arrange ligands around metal centre.', mnemonic: '' },\n    { id: 'artifactpath', svg: svgBondArtifactPath, helpText: 'Add a path bond artifact.', mnemonic: '' },\n    { id: 'artifactring', svg: svgBondArtifactRing, helpText: 'Add a ring bond artifact.', mnemonic: '' },\n    { id: 'artifactarene', svg: svgBondArtifactArene, helpText: 'Add an arene bond artifact.', mnemonic: '' },\n    { id: 'artifactclear', svg: svgBondArtifactClear, helpText: 'Remove a bond artifact.', mnemonic: '' },\n    { id: 'polymer', svg: svgBondPolymer, helpText: 'Create a polymer block.', mnemonic: '' },\n];\nimport svgSelectionGrow from '../res/img/actions/SelectionGrow.svg';\nimport svgSelectionShrink from '../res/img/actions/SelectionShrink.svg';\nimport svgSelectionChain from '../res/img/actions/SelectionChain.svg';\nimport svgSelectionSmRing from '../res/img/actions/SelectionSmRing.svg';\nimport svgSelectionRingBlk from '../res/img/actions/SelectionRingBlk.svg';\nimport svgSelectionCurElement from '../res/img/actions/SelectionCurElement.svg';\nimport svgMainSelPrev from '../res/img/actions/MainSelPrev.svg';\nimport svgMainSelNext from '../res/img/actions/MainSelNext.svg';\nimport svgSelectionToggle from '../res/img/actions/SelectionToggle.svg';\nimport svgSelectionUncurrent from '../res/img/actions/SelectionUncurrent.svg';\nimport svgMoveJoin from '../res/img/actions/MoveJoin.svg';\nimport svgMainNew from '../res/img/actions/MainNew.svg';\nimport svgAtomInline from '../res/img/actions/AtomInline.svg';\nimport svgAtomFormula from '../res/img/actions/AtomFormula.svg';\nimport svgAtomExpandAbbrev from '../res/img/actions/AtomExpandAbbrev.svg';\nimport svgAtomClearAbbrev from '../res/img/actions/AtomClearAbbrev.svg';\nconst COMMANDS_SELECT = [\n    { id: 'selgrow', svg: svgSelectionGrow, helpText: 'Add adjacent atoms to selection.', mnemonic: '' },\n    { id: 'selshrink', svg: svgSelectionShrink, helpText: 'Unselect exterior atoms.', mnemonic: '' },\n    { id: 'selchain', svg: svgSelectionChain, helpText: 'Extend selection to non-ring atoms.', mnemonic: '' },\n    { id: 'smallring', svg: svgSelectionSmRing, helpText: 'Extend selection to small rings.', mnemonic: '' },\n    { id: 'ringblock', svg: svgSelectionRingBlk, helpText: 'Extend selection to ring blocks.', mnemonic: '' },\n    { id: 'curelement', svg: svgSelectionCurElement, helpText: 'Select all atoms of current element type.', mnemonic: '' },\n    { id: 'selprev', svg: svgMainSelPrev, helpText: 'Select previous connected component.', mnemonic: '[' },\n    { id: 'selnext', svg: svgMainSelNext, helpText: 'Select next connected component.', mnemonic: ']' },\n    { id: 'toggle', svg: svgSelectionToggle, helpText: 'Toggle selection of current.', mnemonic: ',' },\n    { id: 'uncurrent', svg: svgSelectionUncurrent, helpText: 'Undefine current object.', mnemonic: '.' },\n    { id: 'join', svg: svgMoveJoin, helpText: 'Overlapping atoms will be joined as one.', mnemonic: '' },\n    { id: 'new', svg: svgMainNew, helpText: 'Clear the molecular structure.', mnemonic: '' },\n    { id: 'inline', svg: svgAtomInline, helpText: 'Make selected atoms into an inline abbreviation.', mnemonic: '/' },\n    { id: 'formula', svg: svgAtomFormula, helpText: 'Make selected atoms into their molecule formula.', mnemonic: '\\\\' },\n    { id: 'expandabbrev', svg: svgAtomExpandAbbrev, helpText: 'Expand out the inline abbreviation.', mnemonic: 'Shift+/', key: '?' },\n    { id: 'clearabbrev', svg: svgAtomClearAbbrev, helpText: 'Remove inline abbreviation.', mnemonic: 'Shift+\\\\', key: '|' },\n];\nimport svgMoveUp from '../res/img/actions/MoveUp.svg';\nimport svgMoveDown from '../res/img/actions/MoveDown.svg';\nimport svgMoveLeft from '../res/img/actions/MoveLeft.svg';\nimport svgMoveRight from '../res/img/actions/MoveRight.svg';\nimport svgMoveUpLots from '../res/img/actions/MoveUpLots.svg';\nimport svgMoveDownLots from '../res/img/actions/MoveDownLots.svg';\nimport svgMoveLeftLots from '../res/img/actions/MoveLeftLots.svg';\nimport svgMoveRightLots from '../res/img/actions/MoveRightLots.svg';\nimport svgMoveUpFar from '../res/img/actions/MoveUpFar.svg';\nimport svgMoveDownFar from '../res/img/actions/MoveDownFar.svg';\nimport svgMoveLeftFar from '../res/img/actions/MoveLeftFar.svg';\nimport svgMoveRightFar from '../res/img/actions/MoveRightFar.svg';\nimport svgMoveRotP01 from '../res/img/actions/MoveRotP01.svg';\nimport svgMoveRotM01 from '../res/img/actions/MoveRotM01.svg';\nimport svgMoveRotP05 from '../res/img/actions/MoveRotP05.svg';\nimport svgMoveRotM05 from '../res/img/actions/MoveRotM05.svg';\nimport svgMoveRotP15 from '../res/img/actions/MoveRotP15.svg';\nimport svgMoveRotM15 from '../res/img/actions/MoveRotM15.svg';\nimport svgMoveRotP30 from '../res/img/actions/MoveRotP30.svg';\nimport svgMoveRotM30 from '../res/img/actions/MoveRotM30.svg';\nimport svgMoveHFlip from '../res/img/actions/MoveHFlip.svg';\nimport svgMoveVFlip from '../res/img/actions/MoveVFlip.svg';\nimport svgMoveShrink from '../res/img/actions/MoveShrink.svg';\nimport svgMoveGrow from '../res/img/actions/MoveGrow.svg';\nconst COMMANDS_MOVE = [\n    { id: 'up', svg: svgMoveUp, helpText: 'Move subject atoms up slightly.', mnemonic: 'Shift+Up', key: \"ArrowUp\" },\n    { id: 'down', svg: svgMoveDown, helpText: 'Move subject atoms down slightly.', mnemonic: 'Shift+Down', key: \"ArrowDown\" },\n    { id: 'left', svg: svgMoveLeft, helpText: 'Move subject atoms slightly to the left.', mnemonic: 'Shift+Left', key: \"ArrowLeft\" },\n    { id: 'right', svg: svgMoveRight, helpText: 'Move subject atoms slightly to the right.', mnemonic: 'Shift+Right', key: \"ArrowRight\" },\n    { id: 'uplots', svg: svgMoveUpLots, helpText: 'Move subject atoms up somewhat.', mnemonic: '' },\n    { id: 'downlots', svg: svgMoveDownLots, helpText: 'Move subject atoms down somewhat.', mnemonic: '' },\n    { id: 'leftlots', svg: svgMoveLeftLots, helpText: 'Move subject atoms somewhat to the left.', mnemonic: '' },\n    { id: 'rightlots', svg: svgMoveRightLots, helpText: 'Move subject atoms somewhat to the right.', mnemonic: '' },\n    { id: 'upfar', svg: svgMoveUpFar, helpText: 'Move subject atoms far up.', mnemonic: '' },\n    { id: 'downfar', svg: svgMoveDownFar, helpText: 'Move subject atoms far down.', mnemonic: '' },\n    { id: 'leftfar', svg: svgMoveLeftFar, helpText: 'Move subject atoms far to the left.', mnemonic: '' },\n    { id: 'rightfar', svg: svgMoveRightFar, helpText: 'Move subject atoms far to the right.', mnemonic: '' },\n    { id: 'rotp01', svg: svgMoveRotP01, helpText: 'Rotate 1\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm01', svg: svgMoveRotM01, helpText: 'Rotate 1\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp05', svg: svgMoveRotP05, helpText: 'Rotate 5\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm05', svg: svgMoveRotM05, helpText: 'Rotate 5\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp15', svg: svgMoveRotP15, helpText: 'Rotate 15\\u00B0 counter-clockwise.', mnemonic: '' },\n    { id: 'rotm15', svg: svgMoveRotM15, helpText: 'Rotate 15\\u00B0 clockwise.', mnemonic: '' },\n    { id: 'rotp30', svg: svgMoveRotP30, helpText: 'Rotate 30\\u00B0 counter-clockwise.', mnemonic: 'Shift+[', key: '{' },\n    { id: 'rotm30', svg: svgMoveRotM30, helpText: 'Rotate 30\\u00B0 clockwise.', mnemonic: 'Shift+]', key: '}' },\n    { id: 'hflip', svg: svgMoveHFlip, helpText: 'Flip subject atoms horizontally.', mnemonic: 'Shift+,', key: '<' },\n    { id: 'vflip', svg: svgMoveVFlip, helpText: 'Flip subject atoms vertically.', mnemonic: 'Shift+.', key: '>' },\n    { id: 'shrink', svg: svgMoveShrink, helpText: 'Decrease subject bond distances.', mnemonic: 'Shift+Z' },\n    { id: 'grow', svg: svgMoveGrow, helpText: 'Increase subject bond distances.', mnemonic: 'Shift+X' },\n];\nexport class CommandBank extends ButtonBank {\n    constructor(owner, cmdType = CommandType.Main) {\n        super();\n        this.owner = owner;\n        this.cmdType = cmdType;\n    }\n    update() {\n        if (this.cmdType == CommandType.Main)\n            for (let btn of COMMANDS_MAIN)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Atom)\n            for (let btn of COMMANDS_ATOM)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Bond)\n            for (let btn of COMMANDS_BOND)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Select)\n            for (let btn of COMMANDS_SELECT)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Move)\n            for (let btn of COMMANDS_MOVE)\n                this.buttons.push(btn);\n        else if (this.cmdType == CommandType.Abbrev)\n            this.populateElements(ELEMENTS_ABBREV);\n        else if (this.cmdType == CommandType.SBlock)\n            this.populateElements(ELEMENTS_S_BLOCK);\n        else if (this.cmdType == CommandType.PBlock)\n            this.populateElements(ELEMENTS_P_BLOCK);\n        else if (this.cmdType == CommandType.DBlock)\n            this.populateElements(ELEMENTS_D_BLOCK);\n        else if (this.cmdType == CommandType.FBlock)\n            this.populateElements(ELEMENTS_F_BLOCK);\n        else if (this.cmdType == CommandType.Noble)\n            this.populateElements(ELEMENTS_NOBLE);\n    }\n    populateElements(elements) {\n        for (let el of elements) {\n            this.buttons.push({ id: `element:${el}`, text: el, helpText: `Change elements to ${el}.` });\n        }\n    }\n    hitButton(id) {\n        let actv = 0, param = null;\n        if (id.startsWith('element:')) {\n            let el = id.substring(8);\n            actv = ActivityType.Element;\n            param = { element: el };\n        }\n        else if (id == 'delete')\n            actv = ActivityType.Delete;\n        else if (id == 'undo') {\n            if (this.owner.canUndo())\n                this.owner.performUndo();\n            else\n                this.owner.showMessage('Nothing to undo.');\n        }\n        else if (id == 'redo') {\n            if (this.owner.canRedo())\n                this.owner.performRedo();\n            else\n                this.owner.showMessage('Nothing to redo.');\n        }\n        else if (id == 'cut')\n            actv = ActivityType.Cut;\n        else if (id == 'copy')\n            actv = ActivityType.Copy;\n        else if (id == 'paste')\n            this.owner.performPaste();\n        else if (id == 'new')\n            actv = ActivityType.Clear;\n        else if (id == 'zoomfit')\n            this.owner.autoScale();\n        else if (id == 'zoomout')\n            this.owner.zoom(0.8);\n        else if (id == 'zoomin')\n            this.owner.zoom(1.25);\n        else if (id == 'selall')\n            actv = ActivityType.SelectAll;\n        else if (id == 'selnone')\n            actv = ActivityType.SelectNone;\n        else if (id == 'selprev')\n            actv = ActivityType.SelectPrevComp;\n        else if (id == 'selnext')\n            actv = ActivityType.SelectNextComp;\n        else if (id == 'selside')\n            actv = ActivityType.SelectSide;\n        else if (id == 'plus') {\n            actv = ActivityType.Charge;\n            param = { delta: 1 };\n        }\n        else if (id == 'minus') {\n            actv = ActivityType.Charge;\n            param = { delta: -1 };\n        }\n        else if (id == 'one') {\n            actv = ActivityType.BondOrder;\n            param = { order: 1 };\n        }\n        else if (id == 'two') {\n            actv = ActivityType.BondOrder;\n            param = { order: 2 };\n        }\n        else if (id == 'three') {\n            actv = ActivityType.BondOrder;\n            param = { order: 3 };\n        }\n        else if (id == 'four') {\n            actv = ActivityType.BondOrder;\n            param = { order: 4 };\n        }\n        else if (id == 'zero') {\n            actv = ActivityType.BondOrder;\n            param = { order: 0 };\n        }\n        else if (id == 'inclined') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_INCLINED };\n        }\n        else if (id == 'declined') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_DECLINED };\n        }\n        else if (id == 'squig') {\n            actv = ActivityType.BondType;\n            param = { type: Molecule.BONDTYPE_UNKNOWN };\n        }\n        else if (id == 'linear') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Linear };\n        }\n        else if (id == 'trigonal') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Trigonal };\n        }\n        else if (id == 'tetra1') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Tetra1 };\n        }\n        else if (id == 'tetra2') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Tetra2 };\n        }\n        else if (id == 'sqplan') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.SqPlan };\n        }\n        else if (id == 'octa1') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Octa1 };\n        }\n        else if (id == 'octa2') {\n            actv = ActivityType.BondGeom;\n            param = { geom: Geometry.Octa2 };\n        }\n        else if (id == 'switch')\n            actv = ActivityType.BondSwitch;\n        else if (id == 'rotate')\n            actv = ActivityType.BondRotate;\n        else if (id == 'connect')\n            actv = ActivityType.Connect;\n        else if (id == 'disconnect')\n            actv = ActivityType.Disconnect;\n        else if (id == 'metalligate')\n            actv = ActivityType.MetalLigate;\n        else if (id == 'artifactpath')\n            actv = ActivityType.BondArtifactPath;\n        else if (id == 'artifactring')\n            actv = ActivityType.BondArtifactRing;\n        else if (id == 'artifactarene')\n            actv = ActivityType.BondArtifactArene;\n        else if (id == 'artifactclear')\n            actv = ActivityType.BondArtifactClear;\n        else if (id == 'polymer')\n            actv = ActivityType.PolymerBlock;\n        else if (id == 'addtwo')\n            actv = ActivityType.BondAddTwo;\n        else if (id == 'insert')\n            actv = ActivityType.BondInsert;\n        else if (id == 'curelement')\n            actv = ActivityType.SelectCurElement;\n        else if (id == 'selgrow')\n            actv = ActivityType.SelectGrow;\n        else if (id == 'selshrink')\n            actv = ActivityType.SelectShrink;\n        else if (id == 'selprev')\n            actv = ActivityType.SelectPrevComp;\n        else if (id == 'selnext')\n            actv = ActivityType.SelectNextComp;\n        else if (id == 'selchain')\n            actv = ActivityType.SelectChain;\n        else if (id == 'smallring')\n            actv = ActivityType.SelectSmRing;\n        else if (id == 'ringblock')\n            actv = ActivityType.SelectRingBlk;\n        else if (id == 'toggle')\n            actv = ActivityType.SelectToggle;\n        else if (id == 'uncurrent')\n            actv = ActivityType.SelectUnCurrent;\n        else if (id == 'join')\n            actv = ActivityType.Join;\n        else if (id == 'inline')\n            actv = ActivityType.AbbrevGroup;\n        else if (id == 'formula')\n            actv = ActivityType.AbbrevFormula;\n        else if (id == 'clearabbrev')\n            actv = ActivityType.AbbrevClear;\n        else if (id == 'expandabbrev')\n            actv = ActivityType.AbbrevExpand;\n        else if (id == 'up') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'up' };\n        }\n        else if (id == 'down') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'down' };\n        }\n        else if (id == 'left') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'left' };\n        }\n        else if (id == 'right') {\n            actv = ActivityType.Nudge;\n            param = { dir: 'right' };\n        }\n        else if (id == 'uplots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'up' };\n        }\n        else if (id == 'downlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'down' };\n        }\n        else if (id == 'leftlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'left' };\n        }\n        else if (id == 'rightlots') {\n            actv = ActivityType.NudgeLots;\n            param = { dir: 'right' };\n        }\n        else if (id == 'upfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'up' };\n        }\n        else if (id == 'downfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'down' };\n        }\n        else if (id == 'leftfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'left' };\n        }\n        else if (id == 'rightfar') {\n            actv = ActivityType.NudgeFar;\n            param = { dir: 'right' };\n        }\n        else if (id == 'rotp01') {\n            actv = ActivityType.Rotate;\n            param = { theta: 1 };\n        }\n        else if (id == 'rotm01') {\n            actv = ActivityType.Rotate;\n            param = { theta: -1 };\n        }\n        else if (id == 'rotp05') {\n            actv = ActivityType.Rotate;\n            param = { theta: 5 };\n        }\n        else if (id == 'rotm05') {\n            actv = ActivityType.Rotate;\n            param = { theta: -5 };\n        }\n        else if (id == 'rotp15') {\n            actv = ActivityType.Rotate;\n            param = { theta: 15 };\n        }\n        else if (id == 'rotm15') {\n            actv = ActivityType.Rotate;\n            param = { theta: -15 };\n        }\n        else if (id == 'rotp30') {\n            actv = ActivityType.Rotate;\n            param = { theta: 30 };\n        }\n        else if (id == 'rotm30') {\n            actv = ActivityType.Rotate;\n            param = { theta: -30 };\n        }\n        else if (id == 'hflip') {\n            actv = ActivityType.Flip;\n            param = { axis: 'hor' };\n        }\n        else if (id == 'vflip') {\n            actv = ActivityType.Flip;\n            param = { axis: 'ver' };\n        }\n        else if (id == 'shrink') {\n            actv = ActivityType.Scale;\n            param = { mag: 1 / 1.1 };\n        }\n        else if (id == 'grow') {\n            actv = ActivityType.Scale;\n            param = { mag: 1.1 };\n        }\n        else if (id == 'bondQAny')\n            actv = ActivityType.QueryBondAny;\n        else if (id == 'atom')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Atom));\n        else if (id == 'bond')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Bond));\n        else if (id == 'select')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Select));\n        else if (id == 'move')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Move));\n        else if (id == 'abbrev')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Abbrev));\n        else if (id == 'sblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.SBlock));\n        else if (id == 'pblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.PBlock));\n        else if (id == 'dblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.DBlock));\n        else if (id == 'fblock')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.FBlock));\n        else if (id == 'noble')\n            this.buttonView.pushBank(new CommandBank(this.owner, CommandType.Noble));\n        else\n            alert('Unhandled command: \"' + id + '\"');\n        if (actv > 0) {\n            new MoleculeActivity(this.owner.getState(), actv, param, this.owner).execute();\n        }\n    }\n    claimKey(event) {\n        for (let listItems of [COMMANDS_MAIN, COMMANDS_ATOM, COMMANDS_BOND, COMMANDS_SELECT, COMMANDS_MOVE])\n            for (let item of listItems) {\n                if (ButtonBank.matchKey(event, item.mnemonic, item.key)) {\n                    this.hitButton(item.id);\n                    return true;\n                }\n            }\n        return false;\n    }\n}\n//# sourceMappingURL=CommandBank.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainRedo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainExport.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3604\\\">\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.25098041;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3606\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.1254902;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3608\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective23\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3604\\\"\\n       id=\\\"radialGradient3610\\\"\\n       cx=\\\"210\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"210\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"152.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(1.0491803,-0.78688524,0.78096126,1.0412817,-119.66246,159.46646)\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.2586836\\\"\\n     inkscape:cx=\\\"16.170725\\\"\\n     inkscape:cy=\\\"164.16609\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1716\\\"\\n     inkscape:window-height=\\\"1116\\\"\\n     inkscape:window-x=\\\"144\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3600\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3610);fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"path3602\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:rx=\\\"150\\\"\\n       sodipodi:ry=\\\"150\\\"\\n       d=\\\"m 310,160 a 150,150 0 1 1 -300,0 150,150 0 1 1 300,0 z\\\"\\n       transform=\\\"matrix(0.93333333,0,0,0.93333333,10.666666,10.666666)\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 124.537,12.690252 90,50 -90,49.999998 0,-12.8125 c -20.29664,12.07637 -33.75,34.2109 -33.75,59.78125 0,38.68907 30.81093,69.5 69.5,69.5 38.68907,0 69.53125,-30.81093 69.53125,-69.5 -0.0934,-6.60391 2.559,-13.20451 7.196,-17.90755 4.637,-4.70304 11.19944,-7.4485 17.804,-7.4485 6.60457,0 13.16701,2.74546 17.804,7.4485 4.637,4.70304 7.2894,11.30364 7.196,17.90755 0,65.71107 -53.82018,119.5 -119.53125,119.5 -65.71107,0 -119.5,-53.78892 -119.5,-119.5 0,-53.27576 35.34828,-98.733461 83.75,-114.031248 l 0,-32.9375 z\\\"\\n       id=\\\"path3612\\\"\\n       sodipodi:nodetypes=\\\"ccccsscssscsscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomIn.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomIn.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective3766\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"184.61711\\\"\\n     inkscape:cy=\\\"128.35938\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3768\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\"\\n         style=\\\"stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000;stroke-width:817.664;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\"\\n       style=\\\"stroke-width:4.791;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\"\\n         style=\\\"stroke-width:1635.328;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000;stroke-width:1635.328;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.791;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 159.9337,7.3957969 c -1.22836,0.017783 -2.44251,0.5361707 -3.31003,1.4132395 L 127.99649,37.675208 c -1.32116,1.336065 -1.7593,3.488685 -1.0437,5.231992 0.71562,1.743309 2.54225,2.973143 4.41336,2.976825 l 23.85599,0 0,32.594718 c -19.03094,1.043649 -36.29578,8.792862 -49.59062,20.927974 L 81.596615,75.50192 98.593999,58.603182 c 1.337912,-1.329214 1.784181,-3.508978 1.073521,-5.262062 -0.710656,-1.753085 -2.535151,-2.973199 -4.413356,-2.976825 l -40.46571,-0.270619 c -0.158907,-0.0079 -0.318211,-0.0079 -0.477119,0 -2.335535,0.221972 -4.319354,2.415492 -4.323896,4.780958 l -0.298201,40.803535 c -0.01994,1.896771 1.188724,3.743885 2.922358,4.480271 1.733635,0.73639 3.886482,0.31711 5.218495,-1.022343 L 74.797659,82.237359 98.922018,106.26244 c -11.630556,13.42652 -19.014244,30.73454 -19.949562,49.73401 l -33.487834,0 0,-24.05515 c 9.54e-4,-2.56989 -2.372929,-4.89108 -4.920297,-4.81103 -1.198278,0.0406 -2.374437,0.55669 -3.220558,1.41324 L 8.7165889,157.40968 c -1.7614043,1.78077 -1.7614043,5.01481 0,6.79558 l 28.6271781,28.86618 c 1.325004,1.33218 3.4598,1.77398 5.188676,1.0524 1.728876,-0.72158 2.948527,-2.56345 2.952179,-4.4502 l 0,-24.05515 33.607114,0 c 1.240981,18.80865 8.766006,35.88989 20.486319,49.10257 L 76.169379,238.65594 59.171991,221.75718 c -1.335156,-1.31903 -3.467046,-1.72624 -5.188676,-0.99227 -1.72163,0.73398 -2.930541,2.56544 -2.922358,4.4502 l 0.26838,40.83362 c 0.01573,2.5291 2.322811,4.81236 4.830836,4.78095 l 40.465711,-0.30069 c 1.873236,-0.0154 3.680176,-1.25616 4.383526,-3.00689 0.70337,-1.75074 0.26095,-3.90631 -1.073508,-5.232 L 82.968334,245.39136 106.3472,221.48657 c 13.35681,11.91347 30.59938,19.44988 49.56079,20.32659 l 0,32.38424 -23.85597,0 c -1.87113,0.004 -3.69775,1.23352 -4.41337,2.97683 -0.71561,1.7433 -0.27746,3.89593 1.0437,5.23198 l 28.62718,28.86618 c 1.76603,1.7761 4.97329,1.7761 6.73932,0 l 28.62718,-28.86618 c 1.32117,-1.33605 1.75932,-3.48868 1.0437,-5.23198 -0.71562,-1.74331 -2.54224,-2.97314 -4.41336,-2.97683 l -23.85599,0 0,-32.50452 c 18.91988,-1.36942 36.01699,-9.38124 49.11351,-21.70975 l 23.67706,25.97954 -16.99739,16.89874 c -1.33789,1.32921 -1.78418,3.50897 -1.07351,5.26207 0.71065,1.75307 2.53515,2.97319 4.41336,2.97682 l 40.4657,0.27062 c 2.49814,0.0155 4.7852,-2.26196 4.80102,-4.78097 l 0.29821,-40.80352 c 0.009,-1.88477 -1.20074,-3.71624 -2.92237,-4.45021 -1.72162,-0.73397 -3.85353,-0.32678 -5.18866,0.99227 l -16.9974,16.89875 -23.8858,-26.19004 c 11.5936,-13.79235 18.76194,-31.49959 19.23388,-50.87663 l 34.11406,0 0,24.05514 c -0.008,1.89176 1.19113,3.72124 2.92236,4.45021 1.73125,0.72896 3.88998,0.31342 5.21849,-1.02234 l 28.62718,-28.86617 c 1.77918,-1.78291 1.77918,-5.04275 0,-6.82565 L 282.6429,125.08559 c -0.90259,-0.91262 -2.1811,-1.43496 -3.45912,-1.41325 -2.46815,0.047 -4.68191,2.32184 -4.68173,4.81103 l 0,24.05515 -34.44207,0 c -1.6396,-17.98221 -9.04936,-34.27895 -20.33723,-46.99774 l 23.40868,-24.536247 16.99739,16.898738 c 1.33515,1.319049 3.46704,1.726245 5.18867,0.992274 1.72162,-0.73397 2.93055,-2.565432 2.92236,-4.4502 L 267.97148,53.61174 c -0.0313,-2.519034 -2.33266,-4.782323 -4.83084,-4.750891 l -40.46571,0.270621 c -1.87323,0.01535 -3.68017,1.256162 -4.38354,3.006893 -0.70337,1.750731 -0.26095,3.906314 1.07352,5.231992 L 236.36229,74.269093 212.95361,98.7452 C 199.918,87.125675 183.17867,79.683488 164.76453,78.508812 l 0,-32.624787 23.85598,0 c 1.87112,-0.0037 3.69774,-1.233516 4.41336,-2.976825 0.71561,-1.743307 0.27747,-3.895927 -1.0437,-5.231992 L 163.36299,8.8090364 C 162.46736,7.9036606 161.20183,7.3821292 159.9337,7.3957969 z m -0.29821,90.1767151 c 37.68702,2.849578 62.29024,31.065418 61.69754,62.543368 -0.66052,35.07958 -25.42255,62.86092 -61.69754,62.54337 -33.68472,-0.29486 -64.464992,-23.49428 -63.576187,-62.54337 0.890095,-39.10566 27.382967,-61.739358 63.576187,-62.543368 z\\\"\\n       id=\\\"path4847\\\"\\n       sodipodi:nodetypes=\\\"cccsccccccscccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsccccccsccccsssc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomOut.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomOut.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective3832\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"154.5481\\\"\\n     inkscape:cy=\\\"146.35603\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3854\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.25 10 C 77.278938 10 10.71875 76.943918 10.71875 159.21875 C 10.71875 241.49357 77.278938 308.40625 159.25 308.40625 C 241.22106 308.40625 307.84375 241.49357 307.84375 159.21875 C 307.84375 76.943918 241.22106 10 159.25 10 z M 155.875 27.59375 C 155.91666 27.592693 155.95833 27.594768 156 27.59375 L 156 61.4375 L 131 61.4375 C 129.03915 61.4413 127.12493 62.719466 126.375 64.53125 C 125.62507 66.343035 126.08423 68.580206 127.46875 69.96875 L 157.46875 99.96875 C 159.32168 101.83325 162.70957 101.83325 164.5625 99.96875 L 194.5625 69.96875 C 195.95072 68.576522 196.3826 66.314253 195.625 64.5 C 194.8674 62.685746 192.96606 61.429035 191 61.4375 L 166 61.4375 L 166 27.71875 C 233.43435 31.142779 287.33666 85.620853 290.1875 153.5625 L 258.4375 153.5625 L 258.4375 128.5625 C 258.4385 125.89168 255.95078 123.47931 253.28125 123.5625 C 252.02551 123.6047 250.79295 124.14106 249.90625 125.03125 L 219.90625 155.03125 C 218.06038 156.88197 218.06038 160.24303 219.90625 162.09375 L 249.90625 192.09375 C 251.29479 193.47827 253.53196 193.93743 255.34375 193.1875 C 257.15553 192.43757 258.43367 190.52335 258.4375 188.5625 L 258.4375 163.5625 L 290.25 163.5625 C 288.03607 232.42829 233.36911 287.73364 165.0625 290.71875 L 165.0625 260 L 190.0625 260 C 192.03598 260.009 193.96634 258.73069 194.71875 256.90625 C 195.47117 255.08181 194.99955 252.82257 193.59375 251.4375 L 163.59375 221.4375 C 162.64999 220.50778 161.3246 219.97762 160 220 C 158.71699 220.0103 157.44542 220.53722 156.53125 221.4375 L 126.53125 251.4375 C 125.12545 252.82257 124.65383 255.08181 125.40625 256.90625 C 126.15866 258.73069 128.08902 260.00857 130.0625 260 L 155.0625 260 L 155.0625 290.78125 C 86.483864 288.62253 31.34883 233.7369 28.40625 165 L 62.15625 165 L 62.15625 190 C 62.16005 191.96085 63.438216 193.84382 65.25 194.59375 C 67.061785 195.34368 69.298956 194.91577 70.6875 193.53125 L 100.6875 163.53125 C 102.53337 161.68053 102.53337 158.31947 100.6875 156.46875 L 70.6875 126.46875 C 69.741627 125.52028 68.401813 124.97743 67.0625 125 C 64.475993 125.0488 62.156049 127.41303 62.15625 130 L 62.15625 155 L 28.34375 155 C 30.519811 85.260706 86.399976 29.356768 155.875 27.59375 z \\\"\\n       id=\\\"path4847\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainZoomFit.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"C:\\\\work\\\\eclipse\\\\MMDS\\\\scratch\\\\msk\\\\MainZoomFit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective60\\\" />\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(0,0)\\\"\\n       id=\\\"pattern5043\\\">\\n      <rect\\n         id=\\\"rect5041\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <path\\n         id=\\\"path5039\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5037\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5035\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5033\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </pattern>\\n    <pattern\\n       patternUnits=\\\"userSpaceOnUse\\\"\\n       width=\\\"30\\\"\\n       height=\\\"33\\\"\\n       patternTransform=\\\"translate(18.5,-71.5)\\\"\\n       id=\\\"pattern5062\\\">\\n      <path\\n         id=\\\"path5060\\\"\\n         d=\\\"M 1.5,21.5 L 21.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5058\\\"\\n         d=\\\"M 1.5,31.5 L 31.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5056\\\"\\n         d=\\\"M 11.5,31.5 L 31.5,11.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         id=\\\"path5054\\\"\\n         d=\\\"M 21.5,31.5 L 31.5,21.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5052\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none;stroke-linecap:round\\\" />\\n      <rect\\n         id=\\\"rect5050\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n      <path\\n         id=\\\"path5000\\\"\\n         d=\\\"M 1.5,11.5 L 11.5,1.5\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <rect\\n         id=\\\"rect5030\\\"\\n         y=\\\"0\\\"\\n         x=\\\"0\\\"\\n         height=\\\"33\\\"\\n         width=\\\"30\\\"\\n         style=\\\"fill:none;stroke:none\\\" />\\n    </pattern>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"282.47425\\\"\\n     inkscape:cy=\\\"140.55244\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1478\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"166\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#dddddd;fill-opacity:0.5;stroke:#000000;stroke-width:10.00008255000000000;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path4971\\\"\\n       sodipodi:cx=\\\"157.5\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"148.21428\\\"\\n       sodipodi:ry=\\\"147.5\\\"\\n       d=\\\"M 305.71428 158.92857 A 148.21428 147.5 0 1 1  9.2857208,158.92857 A 148.21428 147.5 0 1 1  305.71428 158.92857 z\\\"\\n       transform=\\\"matrix(0.8709386,0,0,0.8950109,23.61288,16.185766)\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:10.44176006px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       id=\\\"text4835\\\">\\n      <path\\n         d=\\\"m 70.985713,183.23596 11.216734,0 0,-38.71472 L 70,146.96852 l 0,-6.25418 12.134467,-2.44728 6.866001,0 0,44.9689 11.216732,0 0,5.77832 -29.231487,0 0,-5.77832 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4188\\\" />\\n      <path\\n         d=\\\"m 128.80288,142.78774 q -5.30246,0 -7.98768,5.23448 -2.65123,5.20048 -2.65123,15.66943 0,10.43497 2.65123,15.66944 2.68522,5.20049 7.98768,5.20049 5.33644,0 7.98767,-5.20049 2.68522,-5.23447 2.68522,-15.66944 0,-10.46895 -2.68522,-15.66943 -2.65123,-5.23448 -7.98767,-5.23448 z m 0,-5.43842 q 8.53151,0 13.01821,6.76404 4.52068,6.73004 4.52068,19.57829 0,12.81427 -4.52068,19.5783 Q 137.33439,190 128.80288,190 q -8.53152,0 -13.0522,-6.73005 -4.4867,-6.76403 -4.4867,-19.5783 0,-12.84825 4.4867,-19.57829 4.52068,-6.76404 13.0522,-6.76404 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4190\\\" />\\n      <path\\n         d=\\\"m 173.12597,142.78774 q -5.30246,0 -7.98767,5.23448 -2.65123,5.20048 -2.65123,15.66943 0,10.43497 2.65123,15.66944 2.68521,5.20049 7.98767,5.20049 5.33645,0 7.98768,-5.20049 2.68521,-5.23447 2.68521,-15.66944 0,-10.46895 -2.68521,-15.66943 -2.65123,-5.23448 -7.98768,-5.23448 z m 0,-5.43842 q 8.53152,0 13.01821,6.76404 4.52068,6.73004 4.52068,19.57829 0,12.81427 -4.52068,19.5783 Q 181.65749,190 173.12597,190 q -8.53152,0 -13.0522,-6.73005 -4.48669,-6.76403 -4.48669,-19.5783 0,-12.84825 4.48669,-19.57829 4.52068,-6.76404 13.0522,-6.76404 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4192\\\" />\\n      <path\\n         d=\\\"m 245.93277,166.68278 q -2.95713,0 -4.65664,2.51527 -1.66551,2.51527 -1.66551,7.00196 0,4.41872 1.66551,6.96797 1.69951,2.51527 4.65664,2.51527 2.88916,0 4.55468,-2.51527 1.6995,-2.54925 1.6995,-6.96797 0,-4.4527 -1.6995,-6.96797 -1.66552,-2.54926 -4.55468,-2.54926 z m 0,-4.31674 q 5.37044,0 8.53152,3.73891 3.16108,3.73891 3.16108,10.09506 0,6.35615 -3.19507,10.09506 Q 251.26922,190 245.93277,190 q -5.43841,0 -8.59949,-3.70493 -3.16108,-3.73891 -3.16108,-10.09506 0,-6.39014 3.16108,-10.09506 3.19507,-3.73891 8.59949,-3.73891 z m -35.07778,-20.69997 q -2.92315,0 -4.62266,2.54926 -1.66551,2.51526 -1.66551,6.93398 0,4.48669 1.66551,7.00196 1.66552,2.51527 4.62266,2.51527 2.95714,0 4.62265,-2.51527 1.69951,-2.51527 1.69951,-7.00196 0,-4.38473 -1.69951,-6.93398 -1.6995,-2.54926 -4.62265,-2.54926 z m 30.69306,-4.31675 5.43842,0 L 215.23971,190 l -5.43842,0 31.74676,-52.65068 z m -30.69306,0 q 5.37043,0 8.5655,3.73892 3.19507,3.70492 3.19507,10.06107 0,6.42413 -3.19507,10.12905 -3.16108,3.70492 -8.5655,3.70492 -5.40443,0 -8.56551,-3.70492 -3.12709,-3.73891 -3.12709,-10.12905 0,-6.32216 3.16108,-10.06107 3.16108,-3.73892 8.53152,-3.73892 z\\\"\\n         style=\\\"font-size:69.61173248px\\\"\\n         id=\\\"path4194\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path4967\\\"\\n       sodipodi:cx=\\\"157.5\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"148.21428\\\"\\n       sodipodi:ry=\\\"147.5\\\"\\n       d=\\\"M 305.71428 158.92857 A 148.21428 147.5 0 1 1  9.2857208,158.92857 A 148.21428 147.5 0 1 1  305.71428 158.92857 z\\\"\\n       transform=\\\"matrix(0.981039,0,0,1.0003176,5.8435029,-5.0472616e-2)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionSide.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"199.96541\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 48.664209,245.16396 L 108.91547,160.16396 L 50.664209,75.163966\\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 108.7868,160.70711 L 226.16295,161.41421\\\"\\n       id=\\\"path2170\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 283.22481,77.213358 L 226.68065,159.21336 L 284.22481,241.21336\\\"\\n       id=\\\"path3271\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,165.10228,132.56626)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-343.98648,267.653)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-69.132419,130.55198)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,164.75661,294.92979)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-341.57497,437.10883)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-69.803983,299.05197)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.2656501,-1.2656501,0.9968499,0.9968499,-283.31663,352.18587)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,107.42818,214.60137)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.37604,-0.37604,0.3179989,0.3179989,-10.218211,214.29461)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainSelAll.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 76.36753,113.52483 L 77.074637,213.93399 L 167.5843,264.84567 L 255.97265,210.39845 L 254.55843,117.06036 L 165.46298,53.420751 L 76.36753,113.52483 z \\\"\\n       id=\\\"path3251\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3241\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-248.04603,-85.05335)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,42.797336,11.621703)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-337.35469,-26.947524)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-46.092499,68.688162)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-159.19783,-25.889527)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.0984,71.516592)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3249\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-336.95273,70.72442)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-45.385389,166.73337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-246.2033,123.92331)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,43.58874,218.47348)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-158.39386,69.713238)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.21973,165.31915)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainSelNone.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective14\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 76.36753,113.52483 0.707107,100.40916 88.509663,50.91168 90.38835,-54.44722 -1.41422,-93.33809 -89.09545,-59.639609 -89.09545,56.104079 z\\\"\\n       id=\\\"path3251\\\"\\n       sodipodi:nodetypes=\\\"ccccccc\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,42.797336,11.621703)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-46.092499,68.688162)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.0984,71.516592)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-45.385389,166.73337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,43.58874,218.47348)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,132.21973,165.31915)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainDelete.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainQuit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"opacity:1;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       d=\\\"M 159.65625 30.71875 C 88.093395 30.71875 30 88.487677 30 159.65625 C 30 230.82482 88.093395 288.56252 159.65625 288.5625 C 231.2191 288.5625 289.28125 230.82482 289.28125 159.65625 C 289.28125 88.487677 231.2191 30.71875 159.65625 30.71875 z M 157.84375 72 C 158.59438 71.985792 159.33922 71.994392 160.09375 72 C 176.61399 72.122789 194.05818 77.018142 211.4375 88.5625 L 86.4375 213.5625 C 60.537368 184.56234 69.685666 120.89857 96.4375 96.4375 C 113.21391 82.331272 134.57422 72.440433 157.84375 72 z M 235.53125 110.625 C 261.43138 139.62516 252.28307 203.32017 225.53125 227.78125 C 196.3648 252.30549 153.31112 264.04188 110.53125 235.625 L 235.53125 110.625 z \\\"\\n       id=\\\"path3281\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainCut.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective13\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"2.8284272\\\"\\n     inkscape:cx=\\\"170.6097\\\"\\n     inkscape:cy=\\\"215.55961\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.93447638;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 159.84431,4.0536087 c -0.29508,0.00449 -0.58207,0.030042 -0.87522,0.060857 -0.0514,-0.00404 -0.10482,0.00322 -0.15629,0 -0.26793,-0.016729 -0.54407,-0.036361 -0.8127,-0.030428 -2.52061,0.055258 -5.00989,1.1162381 -6.75172,2.8907158 -1.74182,1.7744777 -2.71473,4.2405775 -2.65692,6.6942895 L 149.90429,134.04453 47.472011,85.328366 45.346471,83.624365 c -1.676342,-1.065683 -3.687289,-1.624994 -5.688946,-1.582287 -0.143902,0.003 -0.294356,0.02089 -0.437611,0.03043 -0.397202,-0.03723 -0.78889,-0.04182 -1.187802,-0.03043 -4.295438,0.112766 -8.28419,3.359535 -9.158577,7.455004 -0.874388,4.09547 1.451553,8.636997 5.345108,10.406581 l 0.562644,0.273857 109.840403,68.03832 c 1.67488,1.03918 3.67355,1.56833 5.6577,1.52143 l 0.46886,43.99973 c 0.005,0.64693 0.10661,1.28576 0.25007,1.91701 -8.81541,5.38078 -15.33495,12.77739 -19.41119,21.75644 -5.08278,11.19622 -6.52603,24.62804 -5.15756,39.98316 0.0144,0.14281 0.0352,0.28499 0.0625,0.426 1.83482,10.3447 4.15972,19.71772 9.34612,26.95973 5.16099,7.20651 13.78411,11.64917 24.97511,11.13687 l 0,0.0304 c 18.09365,-0.39567 30.45126,-6.60038 37.25946,-16.7053 6.80821,-10.10493 8.17398,-23.08912 7.65819,-37.0316 -0.007,-0.1017 -0.0175,-0.20319 -0.0312,-0.30428 -1.7739,-18.11192 -9.59128,-28.87305 -18.53596,-35.54059 -6.03478,-4.49844 -12.34072,-7.3741 -17.56696,-10.01101 0.27934,-0.90435 0.41844,-1.85482 0.40635,-2.79942 l -0.53139,-49.32475 46.69938,22.21288 c 0.083,0.0395 0.16586,0.0847 0.25006,0.1217 -3.31001,17.14209 2.79839,30.23586 11.78424,40.2266 0.34773,0.39526 0.76108,0.73572 1.21906,1.00414 11.30221,6.4521 20.79655,6.99911 28.38221,4.41215 7.58567,-2.58696 13.73725,-4.92629 18.81728,-10.68044 6.76902,-5.94633 9.04203,-16.49269 9.90878,-25.01229 0.11784,-10.04709 -5.59112,-21.3058 -20.88032,-28.75502 -0.45188,-0.22178 -0.93854,-0.37626 -1.43786,-0.45643 -6.30082,-1.02286 -12.65323,-2.0926 -18.97357,-1.94743 -2.10678,0.0484 -4.22421,0.23694 -6.3141,0.60857 -4.21959,0.75035 -8.31043,2.4329 -12.00305,5.17287 -0.69153,-0.62747 -1.46297,-1.14863 -2.3131,-1.55187 l -42.94844,-20.41753 c 1.1306,-1.8011 1.65144,-3.95307 1.43786,-6.05529 L 169.94063,12.999613 c -0.20349,-2.429755 -1.39886,-4.7794669 -3.25082,-6.4204317 -1.85197,-1.6409647 -4.34143,-2.5562438 -6.8455,-2.5255726 z m -9.59618,163.9492313 0,0 z m 111.55959,12.82428 c 8.34066,2.98048 12.80146,8.83371 12.7225,15.56559 -0.52192,14.16651 -10.39975,21.02728 -20.03685,22.62502 -4.93943,1.6845 -12.73755,-0.57732 -17.22364,-5.22544 -4.30437,-5.36245 -8.22528,-12.25024 -4.56467,-27.41058 6.00237,-10.50581 21.04796,-10.76963 29.10266,-5.55459 z m -101.33825,50.22103 c 9.69468,-0.0714 19.13216,5.11216 24.59899,13.04553 8.86571,10.18835 10.08761,40.94213 0.62719,47.7922 -10.21171,9.37645 -27.6858,12.97759 -37.42521,3.78947 -3.54224,-4.94619 -6.12245,-9.52873 -7.86958,-19.28591 -2.56041,-21.47176 7.13036,-43.01402 20.06861,-45.34129 z\\\"\\n       id=\\\"path3256\\\"\\n       sodipodi:nodetypes=\\\"cssssccccssssccccccsccsccsccscccccccscccssscccccsccccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainCopy.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective26\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3630\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1\\\"\\n     inkscape:cx=\\\"103.77793\\\"\\n     inkscape:cy=\\\"88.169551\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2832\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.5;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 47.647496,250.03858 46.764383,-103.11546 0,-29.46156 -62.352511,0 0,-29.46156 L 110,88 C 94.411879,88 85.058997,73.26922 85.058997,58.538439 c 0,-14.73078 9.352882,-29.46156 24.941003,-29.46156 l 15.58814,0 c 15.58811,0 24.94098,14.73078 24.94098,29.46156 C 150.52912,73.26922 141.17625,88 125.58814,88 l 77.94063,0 0,29.46156 -62.35252,0 0,29.46156 46.76439,103.11546 -37.41152,0 -31.17624,-73.65389 -34.293883,73.65389 -37.411501,0 z\\\"\\n       id=\\\"path3606-1\\\"\\n       sodipodi:nodetypes=\\\"cccccccccccccccccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 148.05936,290.03859 46.76439,-103.11546 0,-29.46157 -62.35252,0 0,-29.46156 77.94063,0 c -15.58811,0 -24.941,-14.73077 -24.941,-29.46156 0,-14.73078 9.35289,-29.46156 24.941,-29.46156 l 15.58814,0 c 15.58811,0 24.941,14.73078 24.941,29.46156 C 250.941,113.26923 241.58811,128 226,128 l 77.94063,0 0,29.46156 -62.35252,0 0,29.46157 46.76439,103.11546 -37.4115,0 -31.17626,-73.6539 -34.29388,73.6539 -37.4115,0 z\\\"\\n       id=\\\"path3606\\\"\\n       sodipodi:nodetypes=\\\"cccccccccccccccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionPaste.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"174.19811\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#646169;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 49.497473,254.94617 C 47.825874,262.83305 36.201583,261.20579 30.405591,265.55278 C 28.322858,267.11483 31.539377,271.49006 29.698484,273.33095 C 26.809794,276.21964 14.54002,280.60096 21.213203,283.93756 C 25.917942,286.28992 18.777684,290.61571 16.970562,292.42284 C 16.407185,292.98621 11.862619,303.34583 10.606601,305.85786 C 8.8718742,309.32732 0.66378058,311.62811 -1.4142135,312.22183 C -5.3815501,313.35535 -6.7727732,317.67427 -2.1213203,320 C 4.7353319,323.42833 10.071931,322.29954 16.970562,320 C 21.596201,318.45812 26.669572,317.77844 31.112698,320 C 36.578588,322.73295 50.364949,320 56.568541,320 C 62.249059,320 67.612413,321.41421 73.539103,321.41421 C 78.147222,321.41421 83.161272,321.90643 86.974132,320 C 87.233912,319.87011 86.176512,316.99055 84.852811,314.34315 C 84.737012,314.11155 86.869217,308.51143 84.852811,305.15076 C 82.266966,300.84102 73.174191,304.07874 70.003569,300.90812 C 68.147372,299.05192 69.987876,293.16133 71.417783,290.30152 C 71.59232,289.95244 65.401454,280.15842 65.053822,279.69491 C 63.028881,276.99499 57.766096,271.20963 63.639609,271.20963 C 66.398433,271.20963 65.234252,265.89903 66.468036,263.43146 C 68.386098,259.59534 68.589356,257.469 68.589356,252.82486 C 68.589356,252.05846 63.356113,251.15582 62.225395,250.70354 C 60.461018,249.99779 62.861998,252.89536 61.518288,254.23907 C 60.546463,255.2109 50.675985,254.23907 49.497473,254.94617 z \\\"\\n       id=\\\"path3196\\\"\\n       sodipodi:nodetypes=\\\"cssssssssssssssssssssssc\\\" />\\n    <path\\n       style=\\\"fill:#c5c2c2;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 53.8295,185.43081 C 48.117551,230.16693 94.90917,267.3379 133.61555,268.32077 C 162.93137,153.99105 110.3127,171.17033 53.8295,185.43081 z \\\"\\n       id=\\\"path3188\\\"\\n       sodipodi:nodetypes=\\\"ccc\\\" />\\n    <path\\n       style=\\\"fill:#fcfbff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 182.96729,2.557079 L 54.035294,186.04372 C 85.905043,179.15842 144.16417,242.05257 133.15455,268.24096 L 321.426,146.40224 C 302.97323,72.703226 258.08103,23.582864 182.96729,2.557079 z \\\"\\n       id=\\\"path3184\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#fcfbff;fill-opacity:1;fill-rule:evenodd;stroke:#030303;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 86.523375,220.41621 L 50.5,255.09065 C 61.048111,255.62428 64.617354,261.18692 64.369775,269.5 L 100.39315,234.82557 C 100.05192,225.90076 96.35526,220.20575 86.523375,220.41621 z \\\"\\n       id=\\\"path3190\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 141.76067,103.45156 L 152.49269,163.67952 L 212.07438,184.96328 L 259.56663,143.19171 L 249.13583,87.282865 L 189.09687,58.210192 L 141.76067,103.45156 z \\\"\\n       id=\\\"path3251\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3277\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,110.7288,43.297737)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,63.614871,89.09596)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,170.91744,72.502614)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,74.104227,147.90424)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,132.84879,169.84315)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.319372,-5.459132e-2,4.6165247e-2,0.2700775,180.61948,128.82311)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainAtom.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainAtom.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2848\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"48.145029\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"597\\\"\\n     inkscape:window-y=\\\"53\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:0.99991798;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path2173\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(3.9083767,0,0,4.4541355,-191.02317,-104.15694)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3146\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(4.1274211,0,0,4.7037667,-170.63132,-160.28246)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3148\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(3.9083767,0,0,4.4541355,-123.67417,-89.452119)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3150\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(4.1274211,0,0,4.7037667,-189.79433,-79.64646)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.5817451;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3152\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.5559432,-0.9629219,0.8671851,0.5006696,-82.679852,232.98137)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174519;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3160\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(-0.5559432,-0.962922,0.8671851,-0.5006694,98.56249,410.307)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3166\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,177.55034,-16.166303)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3168\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,147.55034,143.8337)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainBond.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainAtom.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"479\\\"\\n     inkscape:window-y=\\\"21\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3182\\\"\\n       transform=\\\"translate(11.909887,59.760501)\\\">\\n      <path\\n         transform=\\\"matrix(2.0292346,0,0,2.3125933,-112.32262,-38.207236)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.1429628,0,0,2.4422022,-101.73514,-67.347684)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.0292346,0,0,2.3125933,-77.354923,-30.572473)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(2.1429628,0,0,2.4422022,-111.6846,-25.481361)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3188\\\"\\n       transform=\\\"translate(-15.161547,-19.009179)\\\">\\n      <path\\n         transform=\\\"matrix(-2.0292346,0,0,2.3125933,428.39405,40.562444)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3174\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.1429628,0,0,2.4422022,417.80657,11.421996)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3176\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.0292346,0,0,2.3125933,393.42635,48.197207)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3178\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(-2.1429628,0,0,2.4422022,427.75603,53.288319)\\\"\\n         d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3180\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3152\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(-1.3630223e-8,-1.1150628,0.8671872,4.2624012e-8,9.4810906,343.88434)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3195\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.8308212,-1.0223571e-8,-3.1758687e-8,0.6504479,-60.492046,52.100836)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#7b7777;stroke-width:7.58174515;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3197\\\"\\n       sodipodi:cx=\\\"164.28572\\\"\\n       sodipodi:cy=\\\"173.57143\\\"\\n       sodipodi:rx=\\\"85.714287\\\"\\n       sodipodi:ry=\\\"157.14285\\\"\\n       d=\\\"M 250.00001 173.57143 A 85.714287 157.14285 0 1 1  78.571434,173.57143 A 85.714287 157.14285 0 1 1  250.00001 173.57143 z\\\"\\n       transform=\\\"matrix(0.8308212,-1.0223571e-8,-3.1758687e-8,0.6504479,107.50794,52.100828)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3168\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,89.896893,-11.387448)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,-12.449661,159.8337)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,-74.103107,22.612552)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       id=\\\"path3204\\\"\\n       sodipodi:cx=\\\"80\\\"\\n       sodipodi:cy=\\\"59.285713\\\"\\n       sodipodi:rx=\\\"9.2857141\\\"\\n       sodipodi:ry=\\\"8.5714283\\\"\\n       d=\\\"M 89.285714 59.285713 A 9.2857141 8.5714283 0 1 1  70.714286,59.285713 A 9.2857141 8.5714283 0 1 1  89.285714 59.285713 z\\\"\\n       transform=\\\"matrix(1.1659548,0,0,1.3287666,179.55034,179.8337)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainSelect.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:1.89162562, 18.91625616;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       d=\\\"M 30.44335,26.729064 L 30.44335,291.55665 L 295.27094,291.55665 L 295.27094,26.729064 L 30.44335,26.729064 z \\\"\\n       id=\\\"path3343\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 89.051436,52.692713 L 80.264142,218.75776 L 136.18329,186.31714 L 190.50474,269.73586 L 246.42389,237.29525 L 192.10243,153.87653 L 248.02157,121.43591 L 89.051436,52.692713 z \\\"\\n       id=\\\"path3345\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MainMove.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainMove.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"198.18854\\\"\\n     inkscape:cy=\\\"129.1885\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"166\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       transform=\\\"translate(62.703026,241.98783)\\\"\\n       id=\\\"g3444\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3446\\\">\\n        <use\\n           xlink:href=\\\"#char51\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3448\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(92.31631,241.98783)\\\"\\n       id=\\\"g3450\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3452\\\">\\n        <use\\n           xlink:href=\\\"#char46\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3454\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,211.98783)\\\"\\n       id=\\\"g3456\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3458\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3460\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(62.081933,271.98783)\\\"\\n       id=\\\"g3462\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3464\\\">\\n        <use\\n           xlink:href=\\\"#char47\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3466\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(243.63564,271.98783)\\\"\\n       id=\\\"g3468\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3470\\\">\\n        <use\\n           xlink:href=\\\"#char38\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3472\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n        <use\\n           xlink:href=\\\"#char69\\\"\\n           x=\\\"1227\\\"\\n           id=\\\"use3474\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(208.2958,247.96859)\\\"\\n       id=\\\"g3476\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3478\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3480\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(215.2958,204.00707)\\\"\\n       id=\\\"g3482\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3484\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3486\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(275.2958,204.00707)\\\"\\n       id=\\\"g3488\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3490\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3492\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(283.2958,243.96859)\\\"\\n       id=\\\"g3494\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3496\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3498\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(102.68629,241.50525)\\\"\\n       id=\\\"g3500\\\">\\n      <g\\n         transform=\\\"scale(5.859375e-3,-5.859375e-3)\\\"\\n         id=\\\"g3502\\\">\\n        <use\\n           xlink:href=\\\"#char40\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3504\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <g\\n       transform=\\\"translate(112.65748,242.7117)\\\"\\n       id=\\\"g3506\\\">\\n      <g\\n         transform=\\\"scale(2.9296875e-3,-2.9296875e-3)\\\"\\n         id=\\\"g3508\\\">\\n        <use\\n           xlink:href=\\\"#char18\\\"\\n           x=\\\"0\\\"\\n           id=\\\"use3510\\\"\\n           style=\\\"fill:#000000\\\"\\n           y=\\\"0\\\"\\n           width=\\\"320\\\"\\n           height=\\\"320\\\" />\\n      </g>\\n    </g>\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 130,130 L 70,130 L 70,100 L 10,160 L 70,220 L 70,190 L 130,190 L 130,250 L 100,250 L 160,310 L 220,250 L 190,250 L 190,190 L 250,190 L 250,220 L 310,160 L 250,100 L 250,130 L 190,130 L 190,70 L 220,70 L 160,10 L 100,70 L 130,70 L 130,130 z \\\"\\n       id=\\\"path4831\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 70,181.11523 13.227539,0 16.743164,44.64844 16.831057,-44.64844 13.22754,0 0,65.61036 -8.65723,0 0,-57.61231 -16.91894,45 -8.920903,0 -16.918946,-45 0,57.61231 -8.613281,0 0,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7008\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 109.11328,107.96387 q 2.85645,0.96679 5.53711,4.13086 2.72461,3.16406 5.44922,8.70117 l 9.00879,17.92969 -9.53613,0 -8.39356,-16.83106 q -3.25195,-6.5918 -6.32812,-8.74512 -3.03223,-2.15332 -8.305668,-2.15332 l -9.667969,0 0,27.7295 -8.876953,0 0,-65.610356 20.039062,0 q 11.249998,0 16.787108,4.702149 5.53711,4.702148 5.53711,14.194336 0,6.196289 -2.90039,10.283201 -2.85644,4.08692 -8.34961,5.66895 z m -22.236327,-27.553714 0,23.291014 11.162109,0 q 6.416018,0 9.667968,-2.94433 3.2959,-2.988285 3.2959,-8.745121 0,-5.756836 -3.2959,-8.657227 -3.25195,-2.944336 -9.667968,-2.944336 l -11.162109,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7017\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 191.65039,72 9.53613,0 16.30371,24.389648 L 233.88184,72 l 9.53613,0 -21.09375,31.50879 22.5,34.10156 -9.53613,0 -18.45704,-27.90527 -18.58886,27.90527 -9.58008,0 23.42285,-35.02441 L 191.65039,72 Z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7014\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 200,180.38965 8.87695,0 0,58.13965 31.94825,0 0,7.4707 -40.8252,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7011\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomSBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"98.625641\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1447\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 52.876953,215.39258 0,24.03808 14.238281,0 q 7.163086,0 10.590821,-2.94433 3.471679,-2.98828 3.471679,-9.09668 0,-6.15235 -3.471679,-9.05274 -3.427735,-2.94433 -10.590821,-2.94433 l -14.238281,0 z m 0,-26.98242 0,19.77539 13.139649,0 q 6.503906,0 9.667968,-2.417 3.208008,-2.46093 3.208008,-7.4707 0,-4.96582 -3.208008,-7.42676 -3.164062,-2.46093 -9.667968,-2.46093 l -13.139649,0 z M 44,181.11523 l 22.675781,0 q 10.151367,0 15.644531,4.21875 5.493165,4.21875 5.493165,11.99707 0,6.02051 -2.8125,9.58008 -2.8125,3.55957 -8.261719,4.43848 6.547851,1.40625 10.151367,5.88867 3.647461,4.43848 3.647461,11.11817 0,8.78906 -5.976563,13.5791 -5.976562,4.79004 -17.006836,4.79004 l -23.554687,0 0,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6940\\\" />\\n      <path\\n         d=\\\"m 147.44727,220.09473 0,3.95507 -37.17774,0 q 0.52735,8.34961 5.00977,12.74415 4.52636,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35059,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77735,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08496 6.50391,-19.16016 6.54785,-7.11914 17.62207,-7.11914 9.93164,0 15.68847,6.41602 5.80079,6.37207 5.80079,17.3584 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.59082 -3.60352,-3.95508 -9.58008,-3.95508 -6.76758,0 -10.85449,3.82324 -4.04297,3.82325 -4.65821,10.7666 l 28.82813,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6942\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 64,73.115234 8.876953,0 0,58.139646 31.948247,0 0,7.47071 -40.8252,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6945\\\" />\\n      <path\\n         d=\\\"m 113.74609,89.506836 8.08594,0 0,49.218754 -8.08594,0 0,-49.218754 z m 0,-19.160156 8.08594,0 0,10.239257 -8.08594,0 0,-10.239257 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6947\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 178.81445,72 11.95313,0 29.09179,54.8877 0,-54.8877 8.61329,0 0,65.61035 -11.95313,0 -29.0918,-54.887694 0,54.887694 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6932\\\" />\\n      <path\\n         d=\\\"m 268.15527,112.86914 q -9.7998,0 -13.5791,2.24121 -3.7793,2.24121 -3.7793,7.64649 0,4.30664 2.8125,6.85546 2.85645,2.50489 7.73438,2.50489 6.72363,0 10.7666,-4.7461 4.08692,-4.79004 4.08692,-12.70019 l 0,-1.80176 -8.042,0 z m 16.12793,-3.33984 0,28.08105 -8.08593,0 0,-7.4707 q -2.76856,4.48242 -6.89942,6.63574 -4.13086,2.10938 -10.10742,2.10938 -7.55859,0 -12.04102,-4.21875 -4.43847,-4.2627 -4.43847,-11.38184 0,-8.30566 5.53711,-12.52441 5.58105,-4.21875 16.61132,-4.21875 l 11.3379,0 0,-0.79102 q 0,-5.58105 -3.69141,-8.613281 -3.64746,-3.076172 -10.2832,-3.076172 -4.21875,0 -8.21778,1.010742 -3.99902,1.010742 -7.69043,3.032227 l 0,-7.470704 q 4.43848,-1.713867 8.61328,-2.548828 4.17481,-0.878906 8.12989,-0.878906 10.67871,0 15.95215,5.537109 5.27343,5.53711 5.27343,16.787113 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6934\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 174,184.38965 13.22754,0 16.74316,44.64844 16.83106,-44.64844 13.22754,0 0,65.61035 -8.65723,0 0,-57.6123 -16.91895,45 -8.92089,0 -16.91895,-45 0,57.6123 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6937\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text2248\\\">\\n      <path\\n         d=\\\"m 275.90332,226.09863 q 0,-8.78906 -3.64746,-13.62304 -3.60352,-4.83399 -10.15137,-4.83399 -6.5039,0 -10.15137,4.83399 -3.60351,4.83398 -3.60351,13.62304 0,8.74512 3.60351,13.5791 3.64747,4.83399 10.15137,4.83399 6.54785,0 10.15137,-4.83399 3.64746,-4.83398 3.64746,-13.5791 z m 8.08594,19.07227 q 0,12.56836 -5.58106,18.67676 Q 272.82715,270 261.31348,270 q -4.2627,0 -8.042,-0.65918 -3.77929,-0.61523 -7.33886,-1.93359 l 0,-7.86621 q 3.55957,1.93359 7.03125,2.85644 3.47168,0.92285 7.07519,0.92285 7.9541,0 11.90918,-4.1748 3.95508,-4.13086 3.95508,-12.52442 l 0,-3.99902 q -2.50488,4.35059 -6.41602,6.50391 -3.91113,2.15332 -9.36035,2.15332 -9.05273,0 -14.58984,-6.89942 Q 240,237.48047 240,226.09863 q 0,-11.42578 5.53711,-18.32519 5.53711,-6.89942 14.58984,-6.89942 5.44922,0 9.36035,2.15332 3.91114,2.15332 6.41602,6.50391 l 0,-7.4707 8.08594,0 0,43.11035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6929\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomPBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective18\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 107.33105,183.26855 0,8.65723 q -5.05371,-2.41699 -9.536128,-3.60351 -4.482422,-1.18653 -8.657227,-1.18653 -7.250976,0 -11.206054,2.8125 -3.911133,2.8125 -3.911133,7.99805 0,4.35058 2.592773,6.5918 2.636719,2.19726 9.931641,3.55957 l 5.361328,1.09863 q 9.93164,1.88965 14.63379,6.67969 4.74609,4.74609 4.74609,12.74414 0,9.53613 -6.41601,14.458 Q 98.498047,248 86.149414,248 q -4.658203,0 -9.931641,-1.05469 -5.229492,-1.05469 -10.854492,-3.12011 l 0,-9.14063 q 5.405274,3.03223 10.590821,4.57031 5.185546,1.53809 10.195312,1.53809 7.602539,0 11.733398,-2.98828 4.130858,-2.98828 4.130858,-8.52539 0,-4.83399 -2.988279,-7.5586 -2.944336,-2.72461 -9.711914,-4.08691 l -5.405274,-1.05469 q -9.931641,-1.97754 -14.370117,-6.19629 -4.438477,-4.21875 -4.438477,-11.7334 0,-8.70117 6.108399,-13.71093 6.152344,-5.00977 16.918945,-5.00977 4.614258,0 9.404297,0.83496 4.79004,0.83496 9.7998,2.50488 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6942\\\" />\\n      <path\\n         d=\\\"m 124.77734,197.50684 8.08594,0 0,49.21875 -8.08594,0 0,-49.21875 z m 0,-19.16016 8.08594,0 0,10.23926 -8.08594,0 0,-10.23926 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6944\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 84.876953,107.39258 0,24.03808 14.238281,0 q 7.163086,0 10.590816,-2.94433 3.47168,-2.98828 3.47168,-9.09668 0,-6.15235 -3.47168,-9.05274 -3.42773,-2.94433 -10.590816,-2.94433 l -14.238281,0 z m 0,-26.982424 0,19.775394 13.139649,0 q 6.503908,0 9.667968,-2.416995 3.20801,-2.460938 3.20801,-7.470703 0,-4.965821 -3.20801,-7.426758 -3.16406,-2.460938 -9.667968,-2.460938 l -13.139649,0 z M 76,73.115234 l 22.675781,0 q 10.151369,0 15.644529,4.21875 5.49317,4.21875 5.49317,11.997071 0,6.020507 -2.8125,9.580078 -2.8125,3.559567 -8.26172,4.438477 6.54785,1.40625 10.15137,5.88867 3.64746,4.43848 3.64746,11.11817 0,8.78906 -5.97657,13.5791 -5.97656,4.79004 -17.006833,4.79004 l -23.554687,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6947\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 210.74316,80.745117 -12.04101,32.651363 24.12597,0 -12.08496,-32.651363 z M 205.7334,72 l 10.06347,0 25.00489,65.61035 -9.22852,0 -5.97656,-16.83105 -29.5752,0 -5.97656,16.83105 -9.36035,0 L 205.7334,72 Z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6932\\\" />\\n      <path\\n         d=\\\"m 281.36328,89.841797 0,7.646484 q -3.42773,-1.757812 -7.11914,-2.636719 -3.69141,-0.878906 -7.64648,-0.878906 -6.02051,0 -9.05274,1.845703 -2.98828,1.845703 -2.98828,5.537111 0,2.8125 2.15332,4.43848 2.15332,1.58203 8.65723,3.03222 l 2.76855,0.61524 q 8.61328,1.8457 12.2168,5.22949 3.64746,3.33984 3.64746,9.36035 0,6.85547 -5.44922,10.85449 -5.40527,3.99903 -14.89746,3.99903 -3.95508,0 -8.26172,-0.79102 -4.26269,-0.74707 -9.00879,-2.28516 l 0,-8.34961 q 4.48242,2.32911 8.83301,3.51563 4.35059,1.14258 8.61328,1.14258 5.71289,0 8.78906,-1.9336 3.07618,-1.97754 3.07618,-5.53711 0,-3.29589 -2.24122,-5.05371 -2.19726,-1.75781 -9.71191,-3.38379 l -2.8125,-0.65918 q -7.51465,-1.58203 -10.85449,-4.83398 -3.33985,-3.2959 -3.33985,-9.00879 0,-6.943358 4.92188,-10.722655 4.92187,-3.779297 13.97461,-3.779297 4.48242,0 8.4375,0.65918 3.95508,0.659179 7.29492,1.977539 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6934\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 190.87695,189.68457 0,24.65332 11.16211,0 q 6.19629,0 9.58008,-3.20801 3.38379,-3.20801 3.38379,-9.14062 0,-5.88867 -3.38379,-9.09668 -3.38379,-3.20801 -9.58008,-3.20801 l -11.16211,0 z M 182,182.38965 l 20.03906,0 q 11.03028,0 16.65528,5.00976 5.66894,4.96582 5.66894,14.58985 0,9.71191 -5.66894,14.67773 -5.625,4.96582 -16.65528,4.96582 l -11.16211,0 0,26.36719 -8.87695,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6937\\\" />\\n      <path\\n         d=\\\"m 271.29687,223.43457 q 0,-8.9209 -3.6914,-13.97461 -3.64746,-5.09766 -10.06348,-5.09766 -6.41601,0 -10.10742,5.09766 -3.64746,5.05371 -3.64746,13.97461 0,8.9209 3.64746,14.01855 3.69141,5.05372 10.10742,5.05372 6.41602,0 10.06348,-5.05372 3.6914,-5.09765 3.6914,-14.01855 z m -27.50976,-17.18262 q 2.54883,-4.39453 6.41601,-6.5039 3.91114,-2.15332 9.31641,-2.15332 8.96484,0 14.5459,7.11914 5.625,7.11914 5.625,18.7207 0,11.60156 -5.625,18.7207 -5.58106,7.11914 -14.5459,7.11914 -5.40527,0 -9.31641,-2.10937 -3.86718,-2.15332 -6.41601,-6.54785 l 0,7.38281 -8.12988,0 0,-68.37891 8.12988,0 0,26.63086 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6939\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomDBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 73.413235,217.96387 q 2.856445,0.96679 5.537109,4.13086 2.724609,3.16406 5.449219,8.70117 l 9.008789,17.92969 -9.536133,0 -8.393555,-16.83106 q -3.251953,-6.5918 -6.328125,-8.74512 -3.032226,-2.15332 -8.305664,-2.15332 l -9.667968,0 0,27.7295 -8.876954,0 0,-65.61036 20.039063,0 q 11.25,0 16.787109,4.70215 5.53711,4.70215 5.53711,14.19434 0,6.19629 -2.900391,10.2832 -2.856445,4.08692 -8.349609,5.66895 z m -22.236328,-27.55371 0,23.29101 11.162109,0 q 6.416016,0 9.667969,-2.94433 3.295898,-2.98829 3.295898,-8.74512 0,-5.75684 -3.295898,-8.65723 -3.251953,-2.94433 -9.667969,-2.94433 l -11.162109,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6988\\\" />\\n      <path\\n         d=\\\"m 99.648586,229.30176 0,-29.79492 8.085934,0 0,29.4873 q 0,6.98731 2.72461,10.50293 2.72461,3.47168 8.17383,3.47168 6.54785,0 10.32715,-4.1748 3.82324,-4.17481 3.82324,-11.38184 l 0,-27.90527 8.08594,0 0,49.21875 -8.08594,0 0,-7.5586 q -2.94433,4.48242 -6.85547,6.67969 Q 122.0607,250 116.91909,250 q -8.48144,0 -12.87597,-5.27344 -4.394534,-5.27344 -4.394534,-15.4248 z m 20.346684,-30.98145 0,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6990\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 48,73.115234 37.705078,0 0,7.470703 -28.828125,0 0,19.335938 26.015625,0 0,7.470705 -26.015625,0 0,31.33301 -8.876953,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7003\\\" />\\n      <path\\n         d=\\\"m 136.68164,112.09473 0,3.95507 -37.177734,0 q 0.527344,8.34961 5.009764,12.74415 4.52637,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35058,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.676755,-6.85547 -6.855469,-6.85547 -6.855469,-18.54492 0,-12.08496 6.503906,-19.160157 6.547848,-7.119141 17.622068,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.372072 5.80078,17.358402 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.590821 -3.60351,-3.955078 -9.58008,-3.955078 -6.76757,0 -10.85449,3.823242 -4.04297,3.823247 -4.658202,10.766607 l 28.828122,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7005\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 229.94531,77.053711 0,9.360351 q -4.48242,-4.174804 -9.58008,-6.240234 -5.05371,-2.06543 -10.7666,-2.06543 -11.25,0 -17.22656,6.899414 -5.97656,6.855469 -5.97656,19.863278 0,12.96387 5.97656,19.86329 5.97656,6.85546 17.22656,6.85546 5.71289,0 10.7666,-2.06543 5.09766,-2.06543 9.58008,-6.24023 l 0,9.27246 q -4.6582,3.16406 -9.88769,4.74609 -5.18555,1.58204 -10.98633,1.58204 -14.89746,0 -23.4668,-9.09668 -8.56933,-9.14063 -8.56933,-24.917 0,-15.820309 8.56933,-24.916988 8.56934,-9.140625 23.4668,-9.140625 5.88867,0 11.07422,1.582031 5.22949,1.538086 9.7998,4.658203 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6998\\\" />\\n      <path\\n         d=\\\"m 262.46484,94.060547 q -6.5039,0 -10.2832,5.097656 -3.7793,5.053707 -3.7793,13.886717 0,8.83301 3.73536,13.93067 3.77929,5.05371 10.32714,5.05371 6.45996,0 10.23926,-5.09766 3.7793,-5.09766 3.7793,-13.88672 0,-8.74512 -3.7793,-13.842772 -3.7793,-5.141601 -10.23926,-5.141601 z m 0,-6.855469 q 10.54688,0 16.56739,6.855469 6.0205,6.855473 6.0205,18.984373 0,12.08496 -6.0205,18.98438 -6.02051,6.85547 -16.56739,6.85547 -10.59082,0 -16.61132,-6.85547 -5.97657,-6.89942 -5.97657,-18.98438 0,-12.1289 5.97657,-18.984373 6.0205,-6.855469 16.61132,-6.855469 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path7000\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 211.11328,219.23828 q 2.85645,0.9668 5.53711,4.13086 2.72461,3.16406 5.44922,8.70117 L 231.1084,250 l -9.53613,0 -8.39356,-16.83105 q -3.25195,-6.5918 -6.32812,-8.74512 -3.03223,-2.15332 -8.30567,-2.15332 l -9.66797,0 0,27.72949 -8.87695,0 0,-65.61035 20.03906,0 q 11.25,0 16.78711,4.70215 5.53711,4.70215 5.53711,14.19433 0,6.19629 -2.90039,10.28321 -2.85644,4.08691 -8.34961,5.66894 z m -22.23633,-27.55371 0,23.29102 11.16211,0 q 6.41602,0 9.66797,-2.94434 3.2959,-2.98828 3.2959,-8.74512 0,-5.75683 -3.2959,-8.65722 -3.25195,-2.94434 -9.66797,-2.94434 l -11.16211,0 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6993\\\" />\\n      <path\\n         d=\\\"m 283.13965,220.29297 0,29.70703 -8.08594,0 0,-29.44336 q 0,-6.9873 -2.72461,-10.45898 -2.72461,-3.47168 -8.17383,-3.47168 -6.54785,0 -10.32715,4.1748 -3.77929,4.17481 -3.77929,11.38184 l 0,27.81738 -8.12988,0 0,-68.37891 8.12988,0 0,26.80664 q 2.90039,-4.43847 6.81152,-6.63574 3.95508,-2.19726 9.09668,-2.19726 8.48145,0 12.83203,5.27343 4.35059,5.2295 4.35059,15.42481 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6995\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomFBlock.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective18\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"81.839927\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1680\\\"\\n     inkscape:window-height=\\\"974\\\"\\n     inkscape:window-x=\\\"96\\\"\\n     inkscape:window-y=\\\"14\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 68.82914,189.86035 -12.041016,32.65137 24.125977,0 -12.084961,-32.65137 z m -5.009766,-8.74512 10.063477,0 25.004882,65.61036 -9.228515,0 -5.976563,-16.83106 -29.575195,0 -5.976562,16.83106 -9.360352,0 25.048828,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6970\\\" />\\n      <path\\n         d=\\\"m 141.91019,199.39648 0,7.5586 q -3.42773,-1.88965 -6.89941,-2.8125 -3.42773,-0.9668 -6.94336,-0.9668 -7.86621,0 -12.2168,5.00977 -4.35058,4.96582 -4.35058,13.97461 0,9.00879 4.35058,14.01855 4.35059,4.96582 12.2168,4.96582 3.51563,0 6.94336,-0.92285 3.47168,-0.9668 6.89941,-2.85645 l 0,7.47071 q -3.38378,1.58203 -7.03125,2.37304 Q 131.27543,248 127.18851,248 q -11.11816,0 -17.66601,-6.9873 -6.54785,-6.98731 -6.54785,-18.85254 0,-12.04102 6.59179,-18.94043 6.63575,-6.89942 18.14942,-6.89942 3.73535,0 7.29492,0.79102 3.55957,0.74707 6.89941,2.28515 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6972\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 50,73.115234 8.876953,0 0,58.139646 31.948242,0 0,7.47071 -40.825195,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6983\\\" />\\n      <path\\n         d=\\\"m 122.11426,113.98438 q -9.79981,0 -13.5791,2.24121 -3.7793,2.24121 -3.7793,7.64648 0,4.30664 2.8125,6.85547 2.85644,2.50488 7.73437,2.50488 6.72364,0 10.76661,-4.74609 4.08691,-4.79004 4.08691,-12.7002 l 0,-1.80175 -8.04199,0 z m 16.12793,-3.33985 0,28.08106 -8.08594,0 0,-7.47071 q -2.76855,4.48242 -6.89941,6.63574 Q 119.12598,140 113.14941,140 q -7.55859,0 -12.04101,-4.21875 -4.438478,-4.2627 -4.438478,-11.38184 0,-8.30566 5.537108,-12.52441 5.58106,-4.21875 16.61133,-4.21875 l 11.33789,0 0,-0.79102 q 0,-5.58105 -3.69141,-8.613277 -3.64746,-3.076172 -10.2832,-3.076172 -4.21875,0 -8.21777,1.010742 -3.99903,1.010743 -7.69043,3.032227 l 0,-7.470703 q 4.43847,-1.713867 8.61328,-2.548828 4.1748,-0.878907 8.12988,-0.878907 10.67871,0 15.95215,5.53711 5.27344,5.537109 5.27344,16.787108 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6985\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 233.94531,77.053711 0,9.360351 q -4.48242,-4.174804 -9.58008,-6.240234 -5.05371,-2.06543 -10.7666,-2.06543 -11.25,0 -17.22656,6.899414 -5.97656,6.855469 -5.97656,19.863278 0,12.96387 5.97656,19.86329 5.97656,6.85546 17.22656,6.85546 5.71289,0 10.7666,-2.06543 5.09766,-2.06543 9.58008,-6.24023 l 0,9.27246 q -4.6582,3.16406 -9.88769,4.74609 -5.18555,1.58204 -10.98633,1.58204 -14.89746,0 -23.4668,-9.09668 -8.56933,-9.14063 -8.56933,-24.917 0,-15.820309 8.56933,-24.916988 8.56934,-9.140625 23.4668,-9.140625 5.88867,0 11.07422,1.582031 5.22949,1.538086 9.7998,4.658203 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6978\\\" />\\n      <path\\n         d=\\\"m 289.49219,110.97949 0,3.95508 -37.17774,0 q 0.52735,8.34961 5.00977,12.74414 4.52637,4.35059 12.56836,4.35059 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42774 l 0,7.64649 q -4.35059,1.8457 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08497 6.50391,-19.160161 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.37207 5.80078,17.358396 z m -8.08594,-2.37304 q -0.0879,-6.63575 -3.73535,-10.590825 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823241 -4.65821,10.766601 l 28.82813,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6980\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 194.98926,184.38965 8.9209,0 0,39.8584 q 0,10.54687 3.82324,15.20507 3.82324,4.61426 12.39258,4.61426 8.52539,0 12.34863,-4.61426 3.82324,-4.6582 3.82324,-15.20507 l 0,-39.8584 8.9209,0 0,40.95703 q 0,12.83203 -6.37207,19.37988 -6.32813,6.54785 -18.7207,6.54785 -12.43653,0 -18.8086,-6.54785 -6.32812,-6.54785 -6.32812,-19.37988 l 0,-40.95703 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6975\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomNoble.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomElement.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:0;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:8.13591309;stroke-opacity:1\\\"\\n       id=\\\"path3960\\\"\\n       sodipodi:cx=\\\"159.28572\\\"\\n       sodipodi:cy=\\\"158.92857\\\"\\n       sodipodi:rx=\\\"159.28572\\\"\\n       sodipodi:ry=\\\"158.92857\\\"\\n       d=\\\"M 318.57144 158.92857 A 159.28572 158.92857 0 1 1  0,158.92857 A 159.28572 158.92857 0 1 1  318.57144 158.92857 z\\\"\\n       transform=\\\"matrix(0.9738456,0,0,0.9782812,4.8803045,5.5945903)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 160,0 L 160,320\\\"\\n       id=\\\"path3962\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 0,160 L 320,160\\\"\\n       id=\\\"path3964\\\" />\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3966\\\">\\n      <path\\n         d=\\\"m 71.928711,191.86035 -12.041016,32.65137 24.125977,0 -12.084961,-32.65137 z m -5.009766,-8.74512 10.063477,0 25.004878,65.61036 -9.228511,0 -5.976562,-16.83106 -29.575196,0 -5.976562,16.83106 -9.360352,0 25.048828,-65.61036 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6950\\\" />\\n      <path\\n         d=\\\"m 139.69238,207.06543 q -1.3623,-0.79102 -2.98828,-1.14258 -1.58203,-0.39551 -3.51562,-0.39551 -6.85547,0 -10.54688,4.48243 -3.64746,4.43847 -3.64746,12.78808 l 0,25.92774 -8.12988,0 0,-49.21875 8.12988,0 0,7.64648 q 2.54883,-4.48242 6.63574,-6.63574 4.08692,-2.19727 9.93164,-2.19727 0.83496,0 1.84571,0.13184 1.01074,0.0879 2.24121,0.30762 l 0.0439,8.30566 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6952\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3970\\\">\\n      <path\\n         d=\\\"m 40,73.115234 8.876953,0 0,26.894536 32.255859,0 0,-26.894536 8.876954,0 0,65.610356 -8.876954,0 0,-31.24512 -32.255859,0 0,31.24512 -8.876953,0 0,-65.610356 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6965\\\" />\\n      <path\\n         d=\\\"m 149.42383,112.09473 0,3.95507 -37.17774,0 q 0.52735,8.34961 5.00977,12.74415 4.52637,4.35058 12.56836,4.35058 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42773 l 0,7.64648 q -4.35059,1.84571 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08496 6.50391,-19.160157 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.372072 5.80078,17.358402 z m -8.08594,-2.37305 q -0.0879,-6.63574 -3.73535,-10.590821 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823247 -4.6582,10.766607 l 28.82812,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6967\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3974\\\">\\n      <path\\n         d=\\\"m 184.81445,72 11.95313,0 29.09179,54.8877 0,-54.8877 8.61329,0 0,65.61035 -11.95313,0 -29.0918,-54.887694 0,54.887694 -8.61328,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6960\\\" />\\n      <path\\n         d=\\\"m 293.88672,110.97949 0,3.95508 -37.17774,0 q 0.52735,8.34961 5.00977,12.74414 4.52637,4.35059 12.56836,4.35059 4.6582,0 9.00879,-1.14258 4.39453,-1.14258 8.70117,-3.42774 l 0,7.64649 q -4.35059,1.8457 -8.9209,2.8125 -4.57031,0.9668 -9.27246,0.9668 -11.77734,0 -18.67676,-6.85547 -6.85547,-6.85547 -6.85547,-18.54492 0,-12.08497 6.50391,-19.160161 6.54785,-7.119141 17.62207,-7.119141 9.93164,0 15.68848,6.416016 5.80078,6.37207 5.80078,17.358396 z m -8.08594,-2.37304 q -0.0879,-6.63575 -3.73535,-10.590825 -3.60352,-3.955078 -9.58008,-3.955078 -6.76758,0 -10.85449,3.823242 -4.04297,3.823241 -4.6582,10.766601 l 28.82812,-0.0439 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6962\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-size:80px\\\"\\n       id=\\\"text3978\\\">\\n      <path\\n         d=\\\"m 180,184.38965 8.87695,0 0,27.72949 29.44336,-27.72949 11.42578,0 -32.56347,30.58594 L 232.0752,250 l -11.68946,0 -31.50879,-31.59668 0,31.59668 -8.87695,0 0,-65.61035 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6955\\\" />\\n      <path\\n         d=\\\"m 267.23145,208.33984 q -1.36231,-0.79101 -2.98829,-1.14257 -1.58203,-0.39551 -3.51562,-0.39551 -6.85547,0 -10.54688,4.48242 -3.64746,4.43848 -3.64746,12.78809 l 0,25.92773 -8.12988,0 0,-49.21875 8.12988,0 0,7.64648 q 2.54883,-4.48242 6.63575,-6.63574 4.08691,-2.19726 9.93164,-2.19726 0.83496,0 1.8457,0.13183 1.01074,0.0879 2.24121,0.30762 l 0.0439,8.30566 z\\\"\\n         style=\\\"font-size:90px\\\"\\n         id=\\\"path6957\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondFour.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondFour.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.0389,180 L 39.961095,180\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,219.98053 L 39.941666,219.98053\\\"\\n       id=\\\"path3574\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,139.98053 L 39.941663,139.98053\\\"\\n       id=\\\"path3576\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.96105766;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 280.01947,99.980529 L 39.941665,99.980529\\\"\\n       id=\\\"path3578\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"1.0.2 (1.0.2+r75+1)\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondAny.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2966\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.36294465\\\"\\n     inkscape:cx=\\\"-23.567935\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1023\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:document-rotation=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2968\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <circle\\n       id=\\\"path3744\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25\\\"\\n       cx=\\\"20.5\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"12.5\\\" />\\n    <circle\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25\\\"\\n       id=\\\"path3746\\\"\\n       cx=\\\"60.5\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"12.5\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 150,160 H 100\\\"\\n       id=\\\"path838\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 230,140 H 180\\\"\\n       id=\\\"path840\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 230,180 H 180\\\"\\n       id=\\\"path842\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,120 H 260\\\"\\n       id=\\\"path844\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,160 H 260\\\"\\n       id=\\\"path846\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:20;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,200 H 260\\\"\\n       id=\\\"path848\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondAddTwo.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2948\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"39.099383\\\"\\n     inkscape:cy=\\\"92.512755\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1421\\\"\\n     inkscape:window-height=\\\"893\\\"\\n     inkscape:window-x=\\\"278\\\"\\n     inkscape:window-y=\\\"110\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:2.00970001\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"m 140.71429,135 a 8.9285717,9.2857141 0 1 1 -17.85714,0 8.9285717,9.2857141 0 1 1 17.85714,0 z\\\"\\n       transform=\\\"matrix(0,1.9791656,-1.9030439,0,400.81202,-104.81214)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 126.24182,130.35436 51.64564,35.560356\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;fill-rule:nonzero;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 176.5625,165.59375 a 9.6254627,9.6254627 0 0 0 -3.875,18.3125 L 280,237 a 9.6254627,9.6254627 0 1 0 8.53125,-17.25 l -107.3125,-53.09375 a 9.6254627,9.6254627 0 0 0 -4.65625,-1.0625 z\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 126.24182,181.56035 51.64564,276.35436\\\"\\n       id=\\\"path3162\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;fill-rule:nonzero;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"m 283.65625,72.625 a 9.6254627,9.6254627 0 0 0 -4.34375,1.0625 l -107.34375,53.125 a 9.6254627,9.6254627 0 1 0 8.53125,17.25 l 107.34375,-53.125 a 9.6254627,9.6254627 0 0 0 -4.1875,-18.3125 z\\\"\\n       id=\\\"path3164\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondInsert.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2958\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"103.22259\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1204\\\"\\n     inkscape:window-height=\\\"925\\\"\\n     inkscape:window-x=\\\"508\\\"\\n     inkscape:window-y=\\\"54\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4800\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 113.39098,158.69004 53.078266,263.15473\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 299.98723,58.483019 240.10753,162.19765\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans\\\"\\n       d=\\\"M 116.5625 151.3125 A 9.6254923 9.6254923 0 0 0 111.09375 152.90625 A 9.6254923 9.6254923 0 0 0 116.53125 170.53125 L 159.75 170.5625 C 158.10087 167.65453 157.15625 164.30057 157.15625 160.71875 C 157.15625 157.31663 158.0016 154.11729 159.5 151.3125 L 116.5625 151.3125 z M 194.78125 151.3125 C 196.27965 154.11729 197.15625 157.31663 197.15625 160.71875 C 197.15625 164.30057 196.18038 167.65453 194.53125 170.5625 L 236.28125 170.59375 A 9.6321508 9.6321508 0 0 0 236.28125 151.3125 L 194.78125 151.3125 z \\\"\\n       id=\\\"path4284\\\" />\\n    <path\\n       transform=\\\"translate(157.71429,141.42857)\\\"\\n       d=\\\"M 40,20 A 20,20 0 1 1 0,20 20,20 0 1 1 40,20 z\\\"\\n       sodipodi:ry=\\\"20\\\"\\n       sodipodi:rx=\\\"20\\\"\\n       sodipodi:cy=\\\"20\\\"\\n       sodipodi:cx=\\\"20\\\"\\n       id=\\\"path3660\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:9;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       sodipodi:type=\\\"arc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondSwitch.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective4871\\\" />\\n    <marker\\n       inkscape:stockid=\\\"Arrow2Send\\\"\\n       orient=\\\"auto\\\"\\n       refY=\\\"0.0\\\"\\n       refX=\\\"0.0\\\"\\n       id=\\\"Arrow2Send\\\"\\n       style=\\\"overflow:visible;\\\">\\n      <path\\n         id=\\\"path3178\\\"\\n         style=\\\"font-size:12px;fill:#8b8b8b;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\\\"\\n         d=\\\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \\\"\\n         transform=\\\"matrix(-0.3,0,0,-0.3,0.69,0)\\\" />\\n    </marker>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"39.099383\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1215\\\"\\n     inkscape:window-height=\\\"839\\\"\\n     inkscape:window-x=\\\"145\\\"\\n     inkscape:window-y=\\\"105\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-indent:0;text-align:start;text-decoration:none;line-height:normal;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;color:#000000;fill:#ffffff;fill-opacity:0.75294119;stroke:#000000;stroke-width:8;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate;font-family:Bitstream Vera Sans;-inkscape-font-specification:Bitstream Vera Sans;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"m 225.375,15.59375 a 9.6254923,9.6254923 0 0 0 -8.125,5.5 l -60.28125,123.0625 a 9.6295647,9.6295647 0 1 0 17.3125,8.4375 l 60.25,-123.03125 A 9.6254923,9.6254923 0 0 0 225.375,15.59375 z\\\"\\n       id=\\\"path3132\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-104.82577,-96.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15.49904156;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 141.61589,160 L 63.973265,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 225.41813,293.9522 L 165.1533,170.90493\\\"\\n       id=\\\"path3158\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.58357668;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send)\\\"\\n       d=\\\"M 197.79178,142.41668 C 208.33227,154.9762 208.33227,166.6984 197.79178,177.58331\\\"\\n       id=\\\"path3134\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.58357668;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send)\\\"\\n       d=\\\"M 213.88997,98.458413 C 237.84561,141.99804 237.84561,183.02576 213.88997,221.54158\\\"\\n       id=\\\"path3136\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#8b8b8b;stroke-width:6.584;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#Arrow2Send);fill-opacity:1\\\"\\n       d=\\\"M 238.03726,63.291789 C 275.40805,126.92663 275.40805,191.39877 238.03726,256.70821\\\"\\n       id=\\\"path3140\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondRotate.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective4871\\\" />\\n    <marker\\n       inkscape:stockid=\\\"Arrow2Send\\\"\\n       orient=\\\"auto\\\"\\n       refY=\\\"0.0\\\"\\n       refX=\\\"0.0\\\"\\n       id=\\\"Arrow2Send\\\"\\n       style=\\\"overflow:visible;\\\">\\n      <path\\n         id=\\\"path3178\\\"\\n         style=\\\"font-size:12px;fill:#8b8b8b;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\\\"\\n         d=\\\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \\\"\\n         transform=\\\"matrix(-0.3,0,0,-0.3,0.69,0)\\\" />\\n    </marker>\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#4a8be0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"229.81367\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1859\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"61\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4149\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4477\\\"\\n       transform=\\\"translate(-6.9348763,2.361824)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3132\\\"\\n         d=\\\"m 285.375,15.59375 a 9.6254923,9.6254923 0 0 0 -8.125,5.5 l -60.28125,123.0625 a 9.6295647,9.6295647 0 1 0 17.3125,8.4375 l 60.25,-123.03125 A 9.6254923,9.6254923 0 0 0 285.375,15.59375 Z\\\"\\n         style=\\\"color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:'Bitstream Vera Sans';-inkscape-font-specification:'Bitstream Vera Sans';text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;letter-spacing:normal;word-spacing:normal;text-transform:none;direction:ltr;block-progression:tb;writing-mode:lr-tb;text-anchor:start;display:inline;overflow:visible;visibility:visible;fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker:none;enable-background:accumulate\\\" />\\n      <circle\\n         r=\\\"17.671122\\\"\\n         cy=\\\"160\\\"\\n         cx=\\\"216\\\"\\n         inkscape:export-ydpi=\\\"9\\\"\\n         inkscape:export-xdpi=\\\"9\\\"\\n         id=\\\"path2160\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970006;stroke-opacity:1\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3152\\\"\\n         d=\\\"M 201.61589,160 63.97327,160\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15.49904156;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         sodipodi:nodetypes=\\\"cc\\\"\\n         id=\\\"path3158\\\"\\n         d=\\\"M 285.41813,293.9522 225.1533,170.90493\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <circle\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970006;stroke-opacity:1\\\"\\n         id=\\\"circle4151\\\"\\n         inkscape:export-xdpi=\\\"9\\\"\\n         inkscape:export-ydpi=\\\"9\\\"\\n         cx=\\\"56\\\"\\n         cy=\\\"160\\\"\\n         r=\\\"17.671122\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"ccccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4155\\\"\\n         d=\\\"m 110,140 c 0,-30 10,-80 36,-80 24,0 34,60 34,100 0,40 -10.12741,99.49035 -34,100 -26,0 -36,-48.6 -36,-78.6\\\"\\n         style=\\\"fill:none;fill-rule:evenodd;stroke:#ffffff;stroke-width:8;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4475\\\"\\n         d=\\\"m 110,175 -15,25 30,0 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondLinear.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTrigonal.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"743\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-82.82577,-96.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 148.66986,160 L 28.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 248.37547,27.62453 L 195.2535,134.95751\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 247.41813,293.9522 L 194.29616,186.61922\\\"\\n       id=\\\"path3158\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTetra1.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTrigonal.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"148.55302\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"743\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.1221571;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-96.82577,-80.910927)\\\"\\n       inkscape:export-xdpi=\\\"9\\\"\\n       inkscape:export-ydpi=\\\"9\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 138.34073,193.65927 L 43.546726,268.25545\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 236.37547,43.62453 L 183.2535,150.95751\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 189.54672,193.65927 L 284.34073,268.25545\\\"\\n       id=\\\"path3162\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 90.29616,44.33351 L 143.41813,151.66649\\\"\\n       id=\\\"path3164\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondTetra2.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondTetra2.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"146.11708\\\"\\n     inkscape:cy=\\\"127.88711\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 256.37547,43.62453 L 176.82086,133.14201\\\"\\n       id=\\\"path2233\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 255.17914,276.37547 L 175.62453,186.85799\\\"\\n       id=\\\"path2235\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondSqPlan.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSqPlan.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOcta1.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondOcta2.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 26.905712,230.35583 L 132.37547,173.62453\\\"\\n       id=\\\"path2305\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 188.12226,146.50851 L 293.59202,89.777207\\\"\\n       id=\\\"path2505\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 26.905714,89.62453 L 132.37547,146.35583\\\"\\n       id=\\\"path2507\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 188.55084,173.92006 L 294.02059,230.65136\\\"\\n       id=\\\"path2509\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"BondOcta2.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondSqPlan.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"171.24224\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:4.12215689;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:2.00970001;stroke-opacity:1\\\"\\n       id=\\\"path2160\\\"\\n       sodipodi:cx=\\\"131.78572\\\"\\n       sodipodi:cy=\\\"135\\\"\\n       sodipodi:rx=\\\"8.9285717\\\"\\n       sodipodi:ry=\\\"9.2857141\\\"\\n       d=\\\"M 140.71429 135 A 8.9285717 9.2857141 0 1 1  122.85715,135 A 8.9285717 9.2857141 0 1 1  140.71429 135 z\\\"\\n       transform=\\\"matrix(1.9791656,0,0,1.9030439,-100.82577,-96.910927)\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.31853294;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 130.66986,160 L 10.04443,160\\\"\\n       id=\\\"path3152\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 309.02255,160 L 189.26316,160\\\"\\n       id=\\\"path3154\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 159.62453,130.37547 L 159.62453,10.616072\\\"\\n       id=\\\"path2271\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160.37547,309.38392 L 160.37547,189.62453\\\"\\n       id=\\\"path2273\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 182.07157,136.65434 L 268.37547,53.62453\\\"\\n       id=\\\"path2303\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:19.24905968;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 52.07157,264.65433 L 138.37547,181.62453\\\"\\n       id=\\\"path2305\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   inkscape:export-ydpi=\\\"9\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   sodipodi:docname=\\\"BondMetalLigate.svg\\\"\\n   version=\\\"1.0\\\"\\n   inkscape:version=\\\"1.0 (4035a4f, 2020-05-01)\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   id=\\\"svg2\\\"\\n   height=\\\"320\\\"\\n   width=\\\"320\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <path\\n       id=\\\"char45\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       edge=\\\"none\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     inkscape:document-rotation=\\\"0\\\"\\n     inkscape:object-paths=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-y=\\\"23\\\"\\n     inkscape:window-x=\\\"53\\\"\\n     inkscape:window-height=\\\"943\\\"\\n     inkscape:window-width=\\\"1650\\\"\\n     showborder=\\\"true\\\"\\n     height=\\\"320px\\\"\\n     width=\\\"320px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:cy=\\\"146.31871\\\"\\n     inkscape:cx=\\\"74.452978\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     objecttolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     gridtolerance=\\\"10000\\\"\\n     borderopacity=\\\"1.0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     id=\\\"base\\\">\\n    <inkscape:grid\\n       id=\\\"grid4135\\\"\\n       type=\\\"xygrid\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     inkscape:label=\\\"Layer 1\\\">\\n    <use\\n       transform=\\\"matrix(0.03709198,0,0,-0.03709198,127.98962,187.61498)\\\"\\n       id=\\\"use4287\\\"\\n       x=\\\"0\\\"\\n       xlink:href=\\\"#char45\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       y=\\\"0\\\"\\n       width=\\\"100%\\\"\\n       height=\\\"100%\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path850\\\"\\n       d=\\\"M 160,110 V 20\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,300 V 210\\\"\\n       id=\\\"path852\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 205,135 282.94228,90\\\"\\n       id=\\\"path854\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path856\\\"\\n       d=\\\"m 205,185 77.94228,45\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 37.05772,90 115,135\\\"\\n       id=\\\"path858\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       id=\\\"path860\\\"\\n       d=\\\"M 37.05772,230 115,185\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactPath.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"161.66868\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4206\\\"\\n       transform=\\\"matrix(1.1572994,0,0,1.1572994,-14.188294,6.2718173)\\\"\\n       style=\\\"stroke-width:6.91264508;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <line\\n         x1=\\\"150.51276\\\"\\n         y1=\\\"99.510551\\\"\\n         x2=\\\"35.082012\\\"\\n         y2=\\\"166.15654\\\"\\n         id=\\\"line4180\\\"\\n         style=\\\"stroke:#000000;stroke-width:6.91264508;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"150.51276\\\"\\n         y1=\\\"99.510551\\\"\\n         x2=\\\"265.94345\\\"\\n         y2=\\\"166.15654\\\"\\n         id=\\\"line4182\\\"\\n         style=\\\"stroke:#000000;stroke-width:6.91264508;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:6\\\"\\n       d=\\\"m 60,210 c 90,-70 110,-70 200,0\\\"\\n       id=\\\"path4210\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"14.186408\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4271\\\"\\n       style=\\\"stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       transform=\\\"translate(27.870353,1.568337)\\\">\\n      <line\\n         x1=\\\"132.12965\\\"\\n         y1=\\\"38.988956\\\"\\n         x2=\\\"17.069948\\\"\\n         y2=\\\"122.58849\\\"\\n         id=\\\"line4215\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"17.069948\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"61.017296\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4217\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"61.017296\\\"\\n         y1=\\\"257.85382\\\"\\n         x2=\\\"203.24199\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4219\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"247.18935\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"203.24199\\\"\\n         y2=\\\"257.85382\\\"\\n         id=\\\"line4221\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"247.18935\\\"\\n         y1=\\\"122.58849\\\"\\n         x2=\\\"132.12965\\\"\\n         y2=\\\"38.988956\\\"\\n         id=\\\"line4223\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <circle\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:24;stroke-linecap:round;stroke-linejoin:round\\\"\\n       id=\\\"ellipse4231\\\"\\n       cy=\\\"160\\\"\\n       cx=\\\"160\\\"\\n       r=\\\"66.571121\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactArene.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <path\\n       edge=\\\"none\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       id=\\\"char45\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-12.077558\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"false\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4369\\\"\\n       style=\\\"stroke-width:8;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <line\\n         x1=\\\"79.874969\\\"\\n         y1=\\\"53.341728\\\"\\n         x2=\\\"42.383801\\\"\\n         y2=\\\"124.96636\\\"\\n         id=\\\"line4253\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"42.383801\\\"\\n         y1=\\\"124.96636\\\"\\n         x2=\\\"159.32974\\\"\\n         y2=\\\"157.25311\\\"\\n         id=\\\"line4255\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"159.32974\\\"\\n         y1=\\\"157.25311\\\"\\n         x2=\\\"277.61575\\\"\\n         y2=\\\"130.34207\\\"\\n         id=\\\"line4257\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"277.61575\\\"\\n         y1=\\\"130.34207\\\"\\n         x2=\\\"243.44348\\\"\\n         y2=\\\"57.081509\\\"\\n         id=\\\"line4259\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n      <line\\n         x1=\\\"243.44348\\\"\\n         y1=\\\"57.081509\\\"\\n         x2=\\\"79.874969\\\"\\n         y2=\\\"53.341728\\\"\\n         id=\\\"line4261\\\"\\n         style=\\\"stroke:#000000;stroke-width:8;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\" />\\n    </g>\\n    <line\\n       style=\\\"stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       id=\\\"line4275\\\"\\n       y2=\\\"104.59695\\\"\\n       x2=\\\"160.5295\\\"\\n       y1=\\\"208.16769\\\"\\n       x1=\\\"160.5295\\\" />\\n    <ellipse\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:39\\\"\\n       id=\\\"ellipse4281\\\"\\n       ry=\\\"28.668024\\\"\\n       rx=\\\"69.736992\\\"\\n       cy=\\\"100.79803\\\"\\n       cx=\\\"160\\\" />\\n    <use\\n       height=\\\"100%\\\"\\n       width=\\\"100%\\\"\\n       y=\\\"0\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       xlink:href=\\\"#char45\\\"\\n       x=\\\"0\\\"\\n       id=\\\"use4287\\\"\\n       transform=\\\"matrix(0.03709198,0,0,-0.03709198,128.5194,269.61687)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"BondArtifactClear.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.7\\\"\\n     inkscape:cx=\\\"109.54685\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1394\\\"\\n     inkscape:window-height=\\\"855\\\"\\n     inkscape:window-x=\\\"46\\\"\\n     inkscape:window-y=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <circle\\n       style=\\\"fill:none;stroke:#000000;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:15,30;stroke-dashoffset:13.15014392\\\"\\n       id=\\\"ellipse4231\\\"\\n       cy=\\\"160\\\"\\n       cx=\\\"160\\\"\\n       r=\\\"121.49729\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 131.71573,131.71573 56.56854,56.56854\\\"\\n       id=\\\"path4142\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 188.28427,131.71573 -56.56854,56.56854\\\"\\n       id=\\\"path4144\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   inkscape:export-ydpi=\\\"9\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   sodipodi:docname=\\\"BondPolymer.svg\\\"\\n   version=\\\"1.0\\\"\\n   inkscape:version=\\\"1.0 (4035a4f, 2020-05-01)\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   id=\\\"svg2\\\"\\n   height=\\\"320\\\"\\n   width=\\\"320\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <path\\n       id=\\\"char45\\\"\\n       d=\\\"M1526 0H1328V1283L914 410H796L385 1283V0H200V1489H470L867 660L1251 1489H1526V0Z\\\"\\n       edge=\\\"none\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     inkscape:document-rotation=\\\"0\\\"\\n     inkscape:object-paths=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\"\\n     inkscape:snap-smooth-nodes=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:snap-global=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-y=\\\"23\\\"\\n     inkscape:window-x=\\\"56\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-width=\\\"1864\\\"\\n     showborder=\\\"true\\\"\\n     height=\\\"320px\\\"\\n     width=\\\"320px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:cy=\\\"163.33901\\\"\\n     inkscape:cx=\\\"23.277781\\\"\\n     inkscape:zoom=\\\"0.35\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     objecttolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     gridtolerance=\\\"10000\\\"\\n     borderopacity=\\\"1.0\\\"\\n     bordercolor=\\\"#666666\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     id=\\\"base\\\">\\n    <inkscape:grid\\n       id=\\\"grid4135\\\"\\n       type=\\\"xygrid\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     id=\\\"layer1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     inkscape:label=\\\"Layer 1\\\">\\n    <text\\n       id=\\\"text844\\\"\\n       y=\\\"296.98486\\\"\\n       x=\\\"241.67216\\\"\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:97.5637px;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#000000;fill-opacity:1;stroke:none;stroke-width:2.43909\\\"\\n       xml:space=\\\"preserve\\\"><tspan\\n         style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:97.5637px;font-family:sans-serif;-inkscape-font-specification:'sans-serif, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;stroke-width:2.43909\\\"\\n         y=\\\"296.98486\\\"\\n         x=\\\"241.67216\\\"\\n         id=\\\"tspan842\\\"\\n         sodipodi:role=\\\"line\\\">n</tspan></text>\\n    <path\\n       sodipodi:nodetypes=\\\"cccc\\\"\\n       id=\\\"path846\\\"\\n       d=\\\"M 110,30 H 50 v 260 h 60\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cccc\\\"\\n       style=\\\"fill:none;stroke:#000000;stroke-width:12;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"m 164,30 h 60 v 260 h -60\\\"\\n       id=\\\"path848\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionGrow.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"90.708135\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g2858\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9600019,0,0,2.9600019,0.86338889,59.519971)\\\">\\n      <line\\n         id=\\\"line2860\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"54\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2862\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2864\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2866\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2868\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"105.96152\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2870\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"2.0384758\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n      <line\\n         id=\\\"line2872\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-114.54779,78.005469)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,133.10042,159.32054)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-268.45509,78.218145)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,-20.806885,159.53322)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-191.89451,34.331302)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,55.753684,115.64637)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.75000000000000000;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-4\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-193.01077,-55.760055)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-0\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,54.637436,25.555021)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionShrink.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g2858\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9600019,0,0,2.9600019,0.86338889,59.519971)\\\">\\n      <line\\n         id=\\\"line2860\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"54\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2862\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2864\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"54\\\" />\\n      <line\\n         id=\\\"line2866\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"79.980759\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2868\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"105.96152\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.980759\\\" />\\n      <line\\n         id=\\\"line2870\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"2.0384758\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n      <line\\n         id=\\\"line2872\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"28.019238\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28.019238\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-114.54779,78.005469)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,133.10042,159.32054)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-268.45509,78.218145)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-8\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,-20.806885,159.53322)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-191.89451,34.331302)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,55.753684,115.64637)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:5.92314277;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:5.92314277,17.76942831;stroke-dashoffset:0\\\"\\n       id=\\\"path3171-1-4\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(1.5218776,0,0,1.1986594,-193.01077,-55.760055)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n       id=\\\"path3173-7-0\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"m 255.97266,101.15045 a 24.748737,30.052038 0 1 1 -49.49747,0 24.748737,30.052038 0 1 1 49.49747,0 z\\\"\\n       transform=\\\"matrix(0.45216823,0,0,0.38237687,54.637436,25.555021)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionChain.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3810\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.621464,0,0,2.621464,4.540555,48.791192)\\\">\\n      <line\\n         id=\\\"line3812\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"2\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3814\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3816\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3818\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3820\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3822\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3824\\\"\\n         y2=\\\"31.999731\\\"\\n         x2=\\\"79.942604\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3826\\\"\\n         y2=\\\"46.999462\\\"\\n         x2=\\\"105.92352\\\"\\n         y1=\\\"31.999731\\\"\\n         x1=\\\"79.942604\\\" />\\n      <line\\n         id=\\\"line3828\\\"\\n         y2=\\\"1.999732\\\"\\n         x2=\\\"79.942299\\\"\\n         y1=\\\"31.999731\\\"\\n         x1=\\\"79.942604\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3885\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-171.09202,33.69748)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,158.10549,34.777218)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,405.75369,116.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3889\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-141.7775,-40.634342)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,48.105487,74.777215)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-1\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,295.75368,156.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-7\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881\\\"\\n       transform=\\\"matrix(0.8900413,0,0,0.8900413,-196.12626,-147.6538)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionSmRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4170\\\"\\n       inkscape:persp3d-origin=\\\"54 : 21.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 32 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 32 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-0\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective4190-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4150\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.9029405,0,0,2.9029405,4.6189711,81.382589)\\\">\\n      <line\\n         id=\\\"line4152\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"28\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4154\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4156\\\"\\n         y2=\\\"62\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4158\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"79.961998\\\"\\n         y1=\\\"62\\\"\\n         x1=\\\"53.98\\\" />\\n      <line\\n         id=\\\"line4160\\\"\\n         y2=\\\"17\\\"\\n         x2=\\\"79.961998\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"79.961998\\\" />\\n      <line\\n         id=\\\"line4162\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"53.98\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"79.961998\\\" />\\n      <line\\n         id=\\\"line4164\\\"\\n         y2=\\\"2.000165\\\"\\n         x2=\\\"2.0191426\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"28\\\" />\\n      <line\\n         id=\\\"line4166\\\"\\n         y2=\\\"1.999732\\\"\\n         x2=\\\"105.9426\\\"\\n         y1=\\\"17\\\"\\n         x1=\\\"79.961998\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-255.281,-36.286753)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-6\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-179.98369,-79.76244)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-8\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-103.88435,-36.613327)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-6\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-5\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-9\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-104.66888,51.903875)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-00\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-6\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-3\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-179.98369,92.833999)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-9\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65-4\\\"\\n       transform=\\\"matrix(0.74111664,0,0,0.74111664,-254.51397,52.038479)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0-4\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28-60\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionRingBlk.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"201.01679\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3937\\\"\\n       style=\\\"stroke:#000000;stroke-width:1.5;stroke-linecap:round\\\"\\n       transform=\\\"matrix(2.4899701,0,0,2.4899701,26.948713,30.700421)\\\">\\n      <line\\n         id=\\\"line3939\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"2\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3941\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3943\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"2\\\" />\\n      <line\\n         id=\\\"line3945\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3947\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"53.962002\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3949\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"27.98\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3951\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3953\\\"\\n         y2=\\\"92\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"53.962002\\\" />\\n      <line\\n         id=\\\"line3955\\\"\\n         y2=\\\"77\\\"\\n         x2=\\\"105.924\\\"\\n         y1=\\\"92\\\"\\n         x1=\\\"79.942001\\\" />\\n      <line\\n         id=\\\"line3957\\\"\\n         y2=\\\"47\\\"\\n         x2=\\\"105.924\\\"\\n         y1=\\\"77\\\"\\n         x1=\\\"105.924\\\" />\\n      <line\\n         id=\\\"line3959\\\"\\n         y2=\\\"32\\\"\\n         x2=\\\"79.942001\\\"\\n         y1=\\\"47\\\"\\n         x1=\\\"105.924\\\" />\\n      <line\\n         id=\\\"line3961\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"27.9795\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"27.98\\\" />\\n      <line\\n         id=\\\"line3963\\\"\\n         y2=\\\"2\\\"\\n         x2=\\\"79.941498\\\"\\n         y1=\\\"32\\\"\\n         x1=\\\"79.942001\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-81.933097,-38.115125)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-7\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-210.7766,109.10718)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-6\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-1\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-2\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-276.17313,72.504683)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-3\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-2\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-1\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-276.17314,-1.722748)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-68\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-5\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-6\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-210.77659,-38.895518)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-1\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-8\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-27\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-146.06844,-3.787902)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-9\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-54\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-12\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-146.75682,71.934407)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-33\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-4\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-13\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-82.048668,108.41879)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-7\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-77\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-18.028899,71.246022)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-93\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-19\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n    <g\\n       id=\\\"g3881-65\\\"\\n       transform=\\\"matrix(0.66797841,0,0,0.66797841,-17.340514,-3.217626)\\\">\\n      <path\\n         transform=\\\"matrix(1.5218776,0,0,1.1986594,108.10549,104.77721)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3171-15-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(0.45216823,0,0,0.38237687,355.75368,186.09229)\\\"\\n         d=\\\"m 255.97266,101.15045 c 0,16.59728 -11.08039,30.05204 -24.74874,30.05204 -13.66835,0 -24.74873,-13.45476 -24.74873,-30.05204 0,-16.597281 11.08038,-30.052037 24.74873,-30.052037 13.66835,0 24.74874,13.454756 24.74874,30.052037 z\\\"\\n         sodipodi:ry=\\\"30.052038\\\"\\n         sodipodi:rx=\\\"24.748737\\\"\\n         sodipodi:cy=\\\"101.15045\\\"\\n         sodipodi:cx=\\\"231.22392\\\"\\n         id=\\\"path3173-2-28\\\"\\n         style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:4.00000022\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionCurElement.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2915\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2915-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"-30.914228\\\"\\n     inkscape:cy=\\\"168.99852\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <ellipse\\n       ry=\\\"45.784992\\\"\\n       rx=\\\"47.872509\\\"\\n       cy=\\\"170\\\"\\n       cx=\\\"160.1275\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:5.40349102;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841\\\"\\n       transform=\\\"translate(-1.19968,0)\\\">\\n      <path\\n         d=\\\"m 162.0258,144.65547 -10.63798,28.84679 21.31479,0 -10.67681,-28.84679 z m -4.42602,-7.72612 8.89087,0 22.09128,57.96535 -8.1532,0 -5.28016,-14.86988 -26.12906,0 -5.28016,14.86988 -8.26967,0 22.1301,-57.96535 z\\\"\\n         id=\\\"path4196\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4\\\"\\n       cx=\\\"255.71176\\\"\\n       cy=\\\"259.69077\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1\\\">\\n      <path\\n         d=\\\"m 257.17732,233.76078 -10.63798,28.84678 21.31479,0 -10.67681,-28.84678 z m -4.42602,-7.72613 8.89087,0 22.09128,57.96535 -8.1532,0 -5.28016,-14.86988 -26.12906,0 -5.28016,14.86988 -8.26967,0 22.1301,-57.96535 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4190\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4-9\\\"\\n       cx=\\\"62.127495\\\"\\n       cy=\\\"260\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1-4\\\">\\n      <path\\n         d=\\\"m 63.593049,234.07001 -10.637981,28.84679 21.314787,0 -10.676806,-28.84679 z m -4.426021,-7.72612 8.890868,0 22.091281,57.96534 -8.153197,0 -5.280166,-14.86987 -26.129055,0 -5.280166,14.86987 -8.269671,0 22.130106,-57.96534 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4187\\\" />\\n    </g>\\n    <ellipse\\n       style=\\\"fill:#ffffff;fill-opacity:0.75;stroke:#000000;stroke-width:10.16818333;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.16818342, 30.50455026;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3171-1-4-5\\\"\\n       cx=\\\"160.1275\\\"\\n       cy=\\\"60\\\"\\n       rx=\\\"47.872509\\\"\\n       ry=\\\"45.784992\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:79.51308441px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2841-1-5\\\"\\n       transform=\\\"translate(-1.49992,0)\\\">\\n      <path\\n         d=\\\"m 161.59305,34.070018 -10.63798,28.846788 21.31479,0 -10.67681,-28.846788 z m -4.42602,-7.726125 8.89087,0 22.09128,57.965349 -8.1532,0 -5.28017,-14.869878 -26.12905,0 -5.28017,14.869878 -8.26967,0 22.13011,-57.965349 z\\\"\\n         id=\\\"path4193\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionPrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 144.95689,266.25988 L 265.16504,266.25988 L 266.57925,147.46595 L 144.95689,266.25988 z \\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 55.861434,55.542071 L 56.568541,172.21469 L 171.82694,55.542071 L 55.861434,55.542071 z \\\"\\n       id=\\\"path3271\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3241\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-241.68207,-85.517816)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,49.161297,11.157237)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3171\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-357.86079,-84.223172)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-66.598595,11.412514)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.705,101.92218)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3249\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-357.45883,29.712228)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-65.891485,125.72117)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,23.082644,220.5948)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.11922,219.76637)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"SelectionNext.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"189.90735\\\"\\n     inkscape:cy=\\\"158.99107\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"false\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 144.95689,266.25988 L 265.16504,266.25988 L 266.57925,147.46595 L 144.95689,266.25988 z \\\"\\n       id=\\\"path3273\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 55.861434,55.542071 L 56.568541,172.21469 L 171.82694,55.542071 L 55.861434,55.542071 z \\\"\\n       id=\\\"path3271\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3288\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,49.161297,11.157237)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3173\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-66.598595,11.412514)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3243\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-148.59123,4.5160638)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3177\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.705,101.92218)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3181\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,-65.891485,125.72117)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3247\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-266.7094,126.04463)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3185\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,23.082644,220.5948)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:3.14762712;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3245\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(1.7898996,0,0,1.4097586,-148.49437,124.16046)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#6c6666;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:4.00000022;stroke-opacity:1\\\"\\n       id=\\\"path3189\\\"\\n       sodipodi:cx=\\\"231.22392\\\"\\n       sodipodi:cy=\\\"101.15045\\\"\\n       sodipodi:rx=\\\"24.748737\\\"\\n       sodipodi:ry=\\\"30.052038\\\"\\n       d=\\\"M 255.97266 101.15045 A 24.748737 30.052038 0 1 1  206.47519,101.15045 A 24.748737 30.052038 0 1 1  255.97266 101.15045 z\\\"\\n       transform=\\\"matrix(0.5318008,0,0,0.4497183,142.11922,219.76637)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionToggle.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2885\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2908\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"90.708135\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,244 c -46.9442,0 -85,-38.0558 -85,-85 0,-46.9442 38.0558,-85 85,-85 l 0,170 z\\\"\\n       id=\\\"path2875-1\\\"\\n       sodipodi:nodetypes=\\\"cscc\\\" />\\n    <path\\n       style=\\\"fill:#000000;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,244 c 46.9442,0 85,-38.0558 85,-85 0,-46.9442 -38.0558,-85 -85,-85 l 0,170 z\\\"\\n       id=\\\"path2875-1-7\\\"\\n       sodipodi:nodetypes=\\\"cscc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"SelectionUncurrent.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/AtomEdit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective20\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2876\\\"\\n       inkscape:persp3d-origin=\\\"54 : 26.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 39.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 39.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2895\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3692\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3742-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3832\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3853-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3967\\\"\\n       inkscape:persp3d-origin=\\\"54 : 31.333333 : 1\\\"\\n       inkscape:vp_z=\\\"108 : 47 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 47 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-2\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-7\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-9\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-3\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-42\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3992-8\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2885\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2908\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4142136\\\"\\n     inkscape:cx=\\\"-40.106616\\\"\\n     inkscape:cy=\\\"170.41273\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1850\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"70\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid3770\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:0.75294118;stroke:#000000;stroke-width:4.25;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       d=\\\"M 160 74 C 113.0558 74 75 112.0558 75 159 C 75 205.9442 113.0558 244 160 244 C 206.9442 244 245 205.9442 245 159 C 245 112.0558 206.9442 74 160 74 z \\\"\\n       id=\\\"path2875-1\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveJoin.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 10,160 L 310,160\\\"\\n       id=\\\"path2161\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#000000;fill-opacity:1\\\"\\n       id=\\\"path2163\\\"\\n       sodipodi:cx=\\\"160.35715\\\"\\n       sodipodi:cy=\\\"160.71428\\\"\\n       sodipodi:rx=\\\"10.357142\\\"\\n       sodipodi:ry=\\\"10\\\"\\n       d=\\\"M 170.71429 160.71428 A 10.357142 10 0 1 1  150,160.71428 A 10.357142 10 0 1 1  170.71429 160.71428 z\\\"\\n       transform=\\\"matrix(1.9310346,0,0,2,-149.65519,-161.42855)\\\" />\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:none;fill-opacity:1;stroke:#000000;stroke-width:10.5;stroke-miterlimit:4;stroke-dasharray:10.5, 21;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path3136\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"159.64285\\\"\\n       sodipodi:rx=\\\"40\\\"\\n       sodipodi:ry=\\\"39.642857\\\"\\n       d=\\\"M 200 159.64285 A 40 39.642857 0 1 1  120,159.64285 A 40 39.642857 0 1 1  200 159.64285 z\\\"\\n       transform=\\\"matrix(0.8835172,0,0,0.8914768,18.63725,17.682092)\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MainNew.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainNew.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3748\\\">\\n      <stop\\n         id=\\\"stop3750\\\"\\n         offset=\\\"0\\\"\\n         style=\\\"stop-color:#b1b1b1;stop-opacity:1;\\\" />\\n      <stop\\n         id=\\\"stop3752\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#f8f8f8;stop-opacity:1;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3732\\\">\\n      <stop\\n         style=\\\"stop-color:#2c2c2c;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3734\\\" />\\n      <stop\\n         style=\\\"stop-color:#aaaaaa;stop-opacity:0.75294119;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3736\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3724\\\">\\n      <stop\\n         style=\\\"stop-color:#888888;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3726\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3728\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective14\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3302\\\">\\n      <stop\\n         style=\\\"stop-color:#9d9d9d;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3304\\\" />\\n      <stop\\n         style=\\\"stop-color:#dfdfdf;stop-opacity:1;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3306\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       id=\\\"perspective2858\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2858-1\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2858-4\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2919\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3732\\\"\\n       id=\\\"radialGradient3738\\\"\\n       cx=\\\"162.18814\\\"\\n       cy=\\\"173.88938\\\"\\n       fx=\\\"162.18814\\\"\\n       fy=\\\"173.88938\\\"\\n       r=\\\"121.40368\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.99372304,0,1.0914969)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3748\\\"\\n       id=\\\"radialGradient3746\\\"\\n       cx=\\\"159.69394\\\"\\n       cy=\\\"159.28571\\\"\\n       fx=\\\"159.69394\\\"\\n       fy=\\\"159.28571\\\"\\n       r=\\\"155.90823\\\"\\n       gradientTransform=\\\"matrix(1,0,0,1.0019631,0,-0.31268812)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"51.002171\\\"\\n     inkscape:cy=\\\"165.43111\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1283\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"23\\\"\\n     inkscape:window-y=\\\"14\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3738);stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;opacity:1\\\"\\n       d=\\\"M 70.323695,204.27689 C 41.841631,206.80461 27.43488,166.54249 59.305446,137.55529 49.873891,113.58226 39.63241,89.128318 90.523819,87.361033 106.27301,49.269942 126.50785,43.380107 172.54857,70.221535 c 24.08035,-4.949896 54.09769,-38.514586 71.00648,30.606245 42.5116,9.78214 51.34305,33.15299 23.87288,77.12773 16.04417,28.54308 14.43112,49.54596 -18.36375,56.92763 0.70405,25.67554 0.0649,50.80591 -47.13361,31.8305 -27.699,35.95486 -57.19689,38.30078 -88.146,-3.67275 -34.966493,0.38164 -56.960187,2.40605 -43.460875,-58.764 z\\\"\\n       id=\\\"path2948\\\"\\n       sodipodi:nodetypes=\\\"cccccccccc\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3746);stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;opacity:1\\\"\\n       d=\\\"M 77.05707,182.24039 C 63.933812,160.98392 31.572476,151.75124 4.2142019,139.39165 30.679923,141.54169 57.327987,144.60344 81.954069,137.55529 72.559539,108.605 63.929901,79.569724 37.881073,52.469912 c 24.509908,20.813833 50.021015,38.957802 80.188367,44.68512 4.8179,-29.638769 8.20842,-60.229129 7.3455,-93.6551159 7.91156,33.7919259 24.82706,63.0818819 44.073,91.2066169 18.18443,-22.393883 31.73946,-46.639529 40.40025,-72.842869 -3.97926,28.157749 -6.10209,56.315497 1.22425,84.473246 30.1815,-5.53135 54.99364,-18.221839 79.57624,-31.218376 -21.4992,23.026775 -42.89749,46.093916 -55.09124,72.842866 25.48741,8.04662 52.18744,10.03009 79.57624,8.56974 -29.54737,11.57525 -58.76632,23.25998 -77.12774,38.56388 12.53395,26.2048 32.69325,46.69059 52.64274,67.33374 -25.06648,-10.42451 -44.73179,-24.08972 -78.35199,-29.38199 -3.69624,29.59544 5.33453,54.10007 10.40613,80.18837 -17.43375,-21.93842 -27.4327,-46.35509 -60.60037,-63.04887 -35.09654,11.6295 -42.37898,40.95888 -58.15188,64.88524 4.3981,-26.75973 7.48188,-53.95757 0.61212,-84.47325 -28.70497,-0.76993 -55.11896,14.49699 -82.02474,26.32138 19.90929,-22.09375 43.397129,-38.46182 54.47912,-74.67925 z\\\"\\n       id=\\\"path2950\\\"\\n       sodipodi:nodetypes=\\\"ccccccccccccccccccccc\\\" />\\n    <g\\n       id=\\\"g2933\\\"\\n       transform=\\\"matrix(0.66308916,0,0,0.66308916,51.085812,66.604893)\\\">\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-168.76512,-87.437593)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-8-5\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-170.1158,-189.26245)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150-9\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-231.66709,-98.469883)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-99.709926,-156.21097)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-189.70992,-49.068112)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148-0\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-133.68722,-145.69101)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150-4\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-209.20179,-147.34435)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-148.68722,-55.691026)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3150\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-198.80993,-119.18415)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-8\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-93.487486,-110.91579)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173-7\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-152.05893,-154.48722)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path2173-8\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(3.9083767,0,0,4.4541355,-144.70993,-87.639533)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3148-2\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;stroke:#050404;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n      <path\\n         transform=\\\"matrix(4.1274211,0,0,4.7037667,-104.52421,-89.184173)\\\"\\n         d=\\\"m 89.285714,59.285713 c 0,4.733869 -4.157356,8.571428 -9.285714,8.571428 -5.128358,0 -9.285714,-3.837559 -9.285714,-8.571428 0,-4.733869 4.157356,-8.571428 9.285714,-8.571428 5.128358,0 9.285714,3.837559 9.285714,8.571428 z\\\"\\n         sodipodi:ry=\\\"8.5714283\\\"\\n         sodipodi:rx=\\\"9.2857141\\\"\\n         sodipodi:cy=\\\"59.285713\\\"\\n         sodipodi:cx=\\\"80\\\"\\n         id=\\\"path3146-4\\\"\\n         style=\\\"fill:#000000;fill-opacity:1;stroke:none\\\"\\n         sodipodi:type=\\\"arc\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomInline.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98125\\\"\\n     inkscape:cx=\\\"72.356688\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1213\\\"\\n     inkscape:window-height=\\\"876\\\"\\n     inkscape:window-x=\\\"161\\\"\\n     inkscape:window-y=\\\"103\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3704);fill-opacity:1;stroke:#000000;stroke-width:10.24196363;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2910\\\"\\n       sodipodi:cx=\\\"140\\\"\\n       sodipodi:cy=\\\"140\\\"\\n       sodipodi:rx=\\\"140\\\"\\n       sodipodi:ry=\\\"140\\\"\\n       d=\\\"m 280,140 a 140,140 0 1 1 -280,0 140,140 0 1 1 280,0 z\\\"\\n       transform=\\\"matrix(0.97637527,0,0,0.97637527,39.246505,23.488986)\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,198 -6.20029,-21.88337 -26.74634,0 L 97.263545,198 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4152\\\" />\\n      <path\\n         d=\\\"m 211.84729,164.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4154\\\" />\\n      <path\\n         d=\\\"m 252.57467,198 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,198 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4156\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomFormula.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3645\\\"\\n       cx=\\\"165\\\"\\n       cy=\\\"160\\\"\\n       fx=\\\"165\\\"\\n       fy=\\\"160\\\"\\n       r=\\\"130\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.80769231,0,30.769231)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.1503782\\\"\\n     inkscape:cx=\\\"147.23233\\\"\\n     inkscape:cy=\\\"155.47208\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1213\\\"\\n     inkscape:window-height=\\\"876\\\"\\n     inkscape:window-x=\\\"161\\\"\\n     inkscape:window-y=\\\"103\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <rect\\n       style=\\\"fill:url(#radialGradient3645);fill-opacity:1.0;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\\\"\\n       id=\\\"rect2865\\\"\\n       width=\\\"250\\\"\\n       height=\\\"200\\\"\\n       x=\\\"40\\\"\\n       y=\\\"60\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 103.57242,189.11313 q 4.13353,0 7.17288,-1.39811 3.03936,-1.45889 5.2277,-3.7688 2.24912,-2.30991 3.70801,-5.22769 1.45889,-2.91778 2.43149,-5.89635 l 12.76529,5.89635 q -1.51967,4.61982 -4.01195,9.05728 -2.49227,4.43746 -6.26107,7.84154 -3.70802,3.40408 -8.87492,5.53163 -5.16691,2.06676 -12.15743,2.06676 -9.118068,0 -15.804652,-3.2825 -6.625797,-3.34329 -11.002471,-9.23965 -4.376673,-5.95713 -6.504223,-14.10261 -2.066762,-8.14548 -2.066762,-17.81063 0,-10.02988 2.066762,-18.11456 2.12755,-8.08469 6.382649,-13.7379 4.315886,-5.71399 10.880896,-8.75334 6.56501,-3.10015 15.439931,-3.10015 6.86895,0 12.03585,1.76283 5.16691,1.76283 8.87492,4.98455 3.76881,3.16093 6.20029,7.5376 2.49227,4.31589 3.89038,9.54358 l -12.94766,4.31589 q -0.66866,-2.73543 -2.12755,-5.2277 -1.45889,-2.55306 -3.70802,-4.49825 -2.18833,-1.94518 -5.1669,-3.10014 -2.97857,-1.21574 -6.74737,-1.21574 -5.349271,0 -9.178861,2.12755 -3.829589,2.06676 -6.321861,5.95714 -2.431485,3.89037 -3.647228,9.36121 -1.154955,5.41006 -1.154955,12.15743 0,6.68658 1.154955,12.279 1.215743,5.53163 3.708015,9.54358 2.492272,4.01195 6.382649,6.26107 3.890376,2.24913 9.361216,2.24913 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4157\\\" />\\n      <path\\n         d=\\\"m 218.21695,202 0,-36.71543 -30.57592,0 0,36.71543 -14.71049,0 0,-85.64907 14.71049,0 0,34.10158 30.57592,0 0,-34.10158 14.71049,0 0,85.64907 -14.71049,0 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4159\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:87.69158173px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2857\\\">\\n      <path\\n         d=\\\"m 162.47581,218.36884 -8.86336,-16.78472 -8.90617,16.78472 -10.53327,0 13.9159,-23.93535 -13.23081,-22.3939 10.66172,0 8.09263,15.15763 8.09263,-15.15763 10.70454,0 -13.23081,22.26544 14.00154,24.06381 -10.70454,0 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4162\\\" />\\n    </g>\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:87.69158173px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2861\\\">\\n      <path\\n         d=\\\"m 260.83842,220.80946 q -1.37018,4.06772 -2.78318,7.02217 -1.41299,2.95446 -3.12572,4.88127 -1.66991,1.96964 -3.81082,2.91164 -2.09809,0.942 -4.92408,0.942 -1.54146,0 -3.16855,-0.12846 -1.58427,-0.12845 -3.04009,-0.42818 l 0,-8.56363 q 0.68509,0.12845 1.66991,0.21409 1.02764,0.12845 1.71273,0.12845 1.45581,0 2.56909,-0.38536 1.15609,-0.38536 2.05527,-1.28454 0.89918,-0.89918 1.66991,-2.39782 0.81354,-1.49864 1.54145,-3.768 l 0.64227,-2.05527 -15.02917,-45.85824 10.44763,0 5.95172,21.7088 q 0,0 0.42818,1.58427 l 0.68509,2.56909 0.77073,2.99727 0.72791,2.99727 q 0.34255,1.45582 0.55664,2.56909 0.25691,1.11328 0.38536,1.58427 0.0856,-0.47099 0.29973,-1.58427 l 0.55663,-2.48345 0.64227,-2.91163 0.6851,-2.95446 0.55663,-2.52627 q 0.25691,-1.15609 0.42818,-1.66991 l 5.60918,-21.88007 10.31918,0 -15.02918,48.76988 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4165\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomExpandAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.9625\\\"\\n     inkscape:cx=\\\"167.64331\\\"\\n     inkscape:cy=\\\"160\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-midpoints=\\\"true\\\"\\n     inkscape:snap-intersection-paths=\\\"true\\\"\\n     inkscape:object-paths=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#929292;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,202 -6.20029,-21.88337 -26.74634,0 L 97.263545,202 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4723\\\" />\\n      <path\\n         d=\\\"m 211.84729,168.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4725\\\" />\\n      <path\\n         d=\\\"m 252.57467,202 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,202 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4727\\\" />\\n    </g>\\n    <path\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,164.47283 63.562761,0\\\"\\n       id=\\\"path2916\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       id=\\\"path4449\\\"\\n       d=\\\"M 209.1153,300.40828 165.33392,216.00234\\\"\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       sodipodi:nodetypes=\\\"cc\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"color:#000000;display:inline;overflow:visible;visibility:visible;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34300041;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;marker:none;enable-background:accumulate\\\"\\n       d=\\\"M 165.33392,98.40828 209.1153,14.00234\\\"\\n       id=\\\"path4451\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"AtomClearAbbrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/iMMDS/res/actions/GenericBack.png\\\"\\n   inkscape:export-xdpi=\\\"12.375\\\"\\n   inkscape:export-ydpi=\\\"12.375\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3690\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.75294119;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3692\\\" />\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:0.25098041;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3694\\\" />\\n    </linearGradient>\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective2906\\\" />\\n    <linearGradient\\n       id=\\\"linearGradient3136\\\">\\n      <stop\\n         style=\\\"stop-color:#b2a5a5;stop-opacity:0.50196081;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3138\\\" />\\n      <stop\\n         style=\\\"stop-color:#000000;stop-opacity:0.19607843;\\\"\\n         offset=\\\"1\\\"\\n         id=\\\"stop3140\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3136\\\"\\n       id=\\\"linearGradient3142\\\"\\n       x1=\\\"301.78571\\\"\\n       y1=\\\"158.57143\\\"\\n       x2=\\\"6.0714264\\\"\\n       y2=\\\"158.57143\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       gradientTransform=\\\"matrix(0.8629045,0,0,0.8712017,23.773609,21.988053)\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3696\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3690\\\"\\n       id=\\\"radialGradient3704\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       cx=\\\"140\\\"\\n       cy=\\\"140\\\"\\n       fx=\\\"140\\\"\\n       fy=\\\"140\\\"\\n       r=\\\"142.5\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#00faff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98125\\\"\\n     inkscape:cx=\\\"80.025296\\\"\\n     inkscape:cy=\\\"157.96178\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\"\\n     inkscape:object-nodes=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2908\\\"\\n       empspacing=\\\"5\\\"\\n       visible=\\\"true\\\"\\n       enabled=\\\"true\\\"\\n       snapvisiblegridlinesonly=\\\"true\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-variant:normal;font-weight:bold;font-stretch:condensed;font-size:124.49204254px;font-family:'Arial Narrow';-inkscape-font-specification:'Arial Narrow Bold Condensed';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text2912\\\">\\n      <path\\n         d=\\\"m 136.41046,198 -6.20029,-21.88337 -26.74634,0 L 97.263545,198 l -14.710486,0 25.591381,-85.64907 17.32433,0 25.5306,85.64907 -14.58891,0 z m -16.41253,-59.9969 q 0,0 -1.21574,-4.31588 -0.54709,-2.12755 -0.9726,-3.89038 l -0.72944,-2.97857 q -0.24315,-1.15495 -0.24315,-1.27653 -0.0608,0.18236 -0.30393,1.33732 -0.24315,1.15495 -0.66866,2.91778 -0.42551,1.76283 -0.9726,3.89038 l -1.21574,4.31588 -6.92973,24.61879 20.18132,0 -6.92973,-24.61879 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4716\\\" />\\n      <path\\n         d=\\\"m 211.84729,164.87101 q 0,7.47682 -1.21575,13.79868 -1.21574,6.26108 -3.7688,10.8809 -2.55306,4.55903 -6.50422,7.11209 -3.89038,2.55306 -9.17886,2.55306 -2.3707,0 -4.80218,-0.60787 -2.3707,-0.60787 -4.55904,-2.00597 -2.12754,-1.39811 -3.95116,-3.64723 -1.76283,-2.24913 -3.03936,-5.53163 l -0.12157,0 q 0,1.27653 -0.0608,2.91778 -0.0608,1.64125 -0.18236,3.22172 -0.12157,1.51968 -0.24315,2.73542 -0.12157,1.21574 -0.18236,1.70204 l -13.61631,0 q 0.12157,-2.12755 0.24314,-6.01793 0.12158,-3.95116 0.12158,-8.99649 l 0,-75.19368 14.04182,0 0,25.16587 q 0,1.94519 -0.0608,3.82959 0,1.82361 -0.0608,3.40408 -0.0608,1.82361 -0.12157,3.46487 l 0.24314,0 q 2.55306,-6.80816 6.99052,-9.72595 4.43747,-2.91778 10.27303,-2.91778 5.16691,0 8.87492,2.55306 3.7688,2.49227 6.1395,7.05131 2.43149,4.49825 3.58644,10.69853 1.15496,6.20029 1.15496,13.55553 z m -14.58891,0 q 0,-11.18483 -2.73542,-16.59488 -2.67464,-5.41006 -8.26705,-5.41006 -2.12755,0 -4.2551,1.03338 -2.12755,1.03339 -3.76881,3.64723 -1.64125,2.55306 -2.67463,6.92973 -0.97259,4.31589 -0.97259,10.94169 0,6.44343 0.97259,10.69853 1.03338,4.2551 2.61385,6.80816 1.64125,2.55306 3.70801,3.58644 2.12755,1.03338 4.2551,1.03338 5.34927,0 8.20626,-5.34926 2.91779,-5.41006 2.91779,-17.32434 z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4718\\\" />\\n      <path\\n         d=\\\"m 252.57467,198 -16.71646,0 -19.26952,-65.77167 14.77127,0 9.42201,36.77621 q 0,0 0.9118,3.82959 0.54709,2.06676 0.9726,4.07274 l 0.9118,3.89037 q 0.42551,1.8844 0.72945,3.40408 0.30393,-1.45889 0.79023,-3.34329 l 0.91181,-3.82959 1.03338,-4.01195 0.97259,-3.82959 9.84752,-36.95857 14.6497,0 L 252.57467,198 Z\\\"\\n         style=\\\"\\\"\\n         id=\\\"path4720\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:url(#radialGradient3704);fill-opacity:1;stroke:#000000;stroke-width:10.24196363;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2910\\\"\\n       sodipodi:cx=\\\"140\\\"\\n       sodipodi:cy=\\\"140\\\"\\n       sodipodi:rx=\\\"140\\\"\\n       sodipodi:ry=\\\"140\\\"\\n       d=\\\"m 280,140 a 140,140 0 1 1 -280,0 140,140 0 1 1 280,0 z\\\"\\n       transform=\\\"matrix(0.97637527,0,0,0.97637527,39.246505,23.488986)\\\" />\\n    <path\\n       style=\\\"color:#000000;fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:17.34259796;stroke-linecap:square;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\\\"\\n       d=\\\"m 8.105653,160.47283 23.562761,0\\\"\\n       id=\\\"path2916\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 80,255 265,55\\\"\\n       id=\\\"path4714\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUp.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 159.78571,43.691929 L 57.691929,148.05551 L 114.0424,148.05551 L 114.0424,275.02236 L 205.58038,275.05896 L 206.19198,148.7332 L 261.8795,148.05551 L 159.78571,43.691929 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDown.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"75\\\"\\n     inkscape:window-y=\\\"20\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 159.78571,275.05896 L 57.691929,170.69538 L 114.0424,170.69538 L 114.0424,43.728529 L 205.58038,43.691929 L 206.19198,170.01769 L 261.8795,170.69538 L 159.78571,275.05896 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeft.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 44.102199,159.37544 L 148.46578,57.281659 L 148.46578,113.63213 L 275.43263,113.63213 L 275.46923,205.17011 L 149.14347,205.78171 L 148.46578,261.46923 L 44.102199,159.37544 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRight.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 275.46923,159.37544 L 171.10565,57.281659 L 171.10565,113.63213 L 44.138799,113.63213 L 44.102199,205.17011 L 170.42796,205.78171 L 171.10565,261.46923 L 275.46923,159.37544 z \\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUpFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2833\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 160,26 102.09379,104.36358 -204.18757,0 L 160,26 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,61.691929 57.691929,166.05551 l 56.350471,0 0,126.96685 91.53798,0.0366 0.6116,-126.32576 55.68752,-0.67769 L 159.78571,61.691929 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDownFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.90621,296.36358 262,192 57.812425,192 159.90621,296.36358 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,257.05896 57.691929,152.69538 l 56.350471,0 0,-126.966851 91.53798,-0.0366 0.6116,126.325761 55.68752,0.67769 -102.09379,104.36358 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeftFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2824\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 25.63642,160.09378 130,58 130,262.18757 25.63642,160.09378 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 64.102199,159.37544 168.46578,57.281659 l 0,56.350471 126.96685,0 0.0366,91.53798 -126.32576,0.6116 -0.67769,55.68752 L 64.102199,159.37544 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRightFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 296,160 191.63642,57.90622 l 0,204.18757 L 296,160 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 257.46923,159.37544 153.10565,57.281659 l 0,56.350471 -126.966851,0 -0.0366,91.53798 126.325761,0.6116 0.67769,55.68752 104.36358,-102.09379 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveUpFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2833\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2838\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 261.25104,24.788943 c 30.31102,5.508007 30.31102,22.032027 0,27.540034 l -202.073498,0 c -30.311025,-5.508007 -30.311025,-22.032027 0,-27.540034 l 202.073498,0 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 160,64 -102.093781,104.36358 56.350471,0 0,126.96685 91.53798,0.0366 0.6116,-126.32576 55.68752,-0.67769 L 160,64 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveDownFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"585\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 261.03675,297.27002 c 30.31102,-5.50801 30.31102,-22.03203 0,-27.54004 l -202.073498,0 c -30.311025,5.50801 -30.311025,22.03203 0,27.54004 l 202.073498,0 z\\\"\\n       id=\\\"path3982-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 159.78571,257.05896 57.691929,152.69538 l 56.350471,0 0,-126.966851 91.53798,-0.0366 0.6116,126.325761 55.68752,0.67769 -102.09379,104.36358 z\\\"\\n       id=\\\"path3982\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveLeftFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2824\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2838\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.42203379;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 24.849388,259.83188 c 5.515594,29.96228 22.062373,29.96228 27.577967,0 l 0,-199.748559 c -5.515594,-29.962283 -22.062373,-29.962283 -27.577967,0 l 0,199.748559 z\\\"\\n       id=\\\"path3982-1-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 63.63642,159.74331 168,57.64953 168,114 l 126.96685,0 0.0366,91.53798 -126.32576,0.6116 L 168,261.8371 63.63642,159.74331 z\\\"\\n       id=\\\"path3982-7\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRightFar.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveLeft.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2846\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2839\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"458\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2814\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:7.45996714;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"m 295.57464,260.99435 c -5.50801,30.31102 -22.03203,30.31102 -27.54004,0 l 0,-202.073498 c 5.50801,-30.311025 22.03203,-30.311025 27.54004,0 l 0,202.073498 z\\\"\\n       id=\\\"path3982-1-1\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       d=\\\"M 256.36358,159.74331 152,57.64953 152,114 l -126.96685,0 -0.0366,91.53798 126.32576,0.6116 L 152,261.8371 256.36358,159.74331 z\\\"\\n       id=\\\"path3982-7\\\"\\n       sodipodi:nodetypes=\\\"cccccccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP01.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2850\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-2.4457843\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1468\\\"\\n     inkscape:window-height=\\\"892\\\"\\n     inkscape:window-x=\\\"267\\\"\\n     inkscape:window-y=\\\"87\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2840\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g8189\\\"\\n       transform=\\\"matrix(0.82715321,0,0,0.82715321,58.222329,-1.8743271)\\\">\\n      <path\\n         d=\\\"m 210.48975,15.472333 0,15.230468 15.23046,0 0,4.648438 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648438 15.23047,0 0,-15.230468 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8057\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 241.75504,55.953626 13.12364,0 0,-45.296451 -14.27693,2.86334 0,-7.3174247 14.19739,-2.8633402 8.03326,0 0,52.6138759 13.12364,0 0,6.760665 -34.201,0 0,-6.760665 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8059\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 303.87362,7.3961487 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872739 -2.18727,5.3687629 0,3.14172 2.18727,5.328994 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328994 0,-3.141721 -2.22704,-5.3687629 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563982 0.91468,2.266811 0.91468,4.89154 0,5.249457 -3.69849,8.908169 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579175 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289943 3.65872,-9.0274754 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8061\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(35,58)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 287,181.00001 -250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 159,298.65435 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159,179.00001 101.14286,74.71429\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 159,179.00001 -110,-60\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 158.42857,180.57143 152,20 l 7,-1 -0.57143,161.57143 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM01.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM01.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective2850\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"206.12564\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1644\\\"\\n     inkscape:window-height=\\\"898\\\"\\n     inkscape:window-x=\\\"154\\\"\\n     inkscape:window-y=\\\"90\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2840\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.82715322,0,0,0.82715322,1.6734456,-2.9378058)\\\">\\n      <path\\n         d=\\\"m -2.0231386,38.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8041\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 33.530002,57.239336 13.123642,0 0,-45.296452 -14.276932,2.863341 0,-7.3174253 14.197395,-2.8633402 8.03326,0 0,52.6138765 13.123643,0 0,6.760664 -34.201008,0 0,-6.760664 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8043\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 95.648579,8.6818581 q -3.181489,0 -5.368763,2.2270419 -2.187274,2.187274 -2.187274,5.368763 0,3.141721 2.187274,5.328995 2.187274,2.147505 5.368763,2.147505 3.181489,0 5.368761,-2.147505 2.18728,-2.187274 2.18728,-5.328995 0,-3.14172 -2.22705,-5.368763 -2.187271,-2.2270419 -5.328991,-2.2270419 z m 0,-5.1301512 q 2.545191,0 4.891541,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82935,1.7895877 2.74403,4.0563988 0.91468,2.266811 0.91468,4.891539 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.987709,3.618944 -5.368762,0 -8.947938,-3.579176 -3.579175,-3.579175 -3.579175,-8.947938 0,-5.328994 3.658713,-9.027475 3.658712,-3.6984811 8.947938,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8045\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,286,58)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 34,181.00001 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 162,298.65435 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 162,179.00001 219.85714,74.71429\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 162,179.00001 110,-60\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 162.57143,180.57143 169,20 l -7,-1 0.57143,161.57143 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP05.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM05.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"63.2685\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g8172\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,63.934934,-1.0275628)\\\">\\n      <path\\n         d=\\\"m 209.48975,15.04897 0,15.230469 15.23046,0 0,4.648437 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8080\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 239.44267,2.3397425 31.53651,0 0,6.7606643 -24.17931,0 0,14.5553132 q 1.74981,-0.59653 3.49963,-0.87491 1.74982,-0.318149 3.49964,-0.318149 9.94216,0 15.74837,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.96529,14.91323 -5.96529,5.289226 -16.82213,5.289226 -3.73824,0 -7.63557,-0.636298 -3.85755,-0.636298 -7.99349,-1.908893 l 0,-8.073029 q 3.57917,1.948662 7.39696,2.903109 3.81779,0.954446 8.07303,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.22126,0 -6.44252,0.715836 -3.18148,0.715835 -6.52205,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8082\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 302.87362,6.3961411 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942153 2.34635,0.9544468 4.0564,2.783803 1.82936,1.7895876 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8084\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,58.999997)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 102.14286,75.714283\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159.42857,181.57142 142.14286,22.142854 160,19.999997 159.42857,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM05.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM05.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-138.16008\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8064\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 32.217638,2.6254595 31.53651,0 0,6.7606643 -24.179317,0 0,14.5553132 q 1.749819,-0.59653 3.499638,-0.87491 1.749819,-0.318149 3.499638,-0.318149 9.942154,0 15.748371,5.4483 5.806218,5.4483 5.806218,14.754156 0,9.584236 -5.965292,14.91323 -5.965292,5.289226 -16.822124,5.289226 -3.73825,0 -7.635574,-0.636298 -3.857555,-0.636298 -7.993491,-1.908893 l 0,-8.073029 q 3.579175,1.948662 7.396962,2.903109 3.817787,0.954446 8.073029,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.221258,0 -6.442516,0.715836 -3.181489,0.715835 -6.522052,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8066\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 95.648579,6.6818581 q -3.181489,0 -5.368763,2.2270424 -2.187274,2.1872735 -2.187274,5.3687625 0,3.141721 2.187274,5.328995 2.187274,2.147505 5.368763,2.147505 3.181489,0 5.368761,-2.147505 2.18728,-2.187274 2.18728,-5.328995 0,-3.14172 -2.22705,-5.3687625 -2.187271,-2.2270424 -5.328991,-2.2270424 z m 0,-5.1301512 q 2.545191,0 4.891541,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82935,1.7895877 2.74403,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.987709,3.618944 -5.368762,0 -8.947938,-3.579176 -3.579175,-3.579175 -3.579175,-8.947938 0,-5.3289939 3.658713,-9.027475 3.658712,-3.6984811 8.947938,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8068\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,58.999997)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 220.85714,75.714283\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163.57143,181.57142 180.85714,22.142854 163,19.999997 163.57143,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP15.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM15.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3653\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"108.98279\\\"\\n     inkscape:cy=\\\"152.56698\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     showguides=\\\"false\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2849\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 102.14286,75.714286\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 159.42857,181.57142 120.71429,24.285714 160,20 159.42857,181.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       id=\\\"g8177\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,64.049971,-1.0275659)\\\">\\n      <path\\n         d=\\\"m 157.48975,14.472329 0,15.230469 15.23046,0 0,4.648437 -15.23046,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8087\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 188.75504,54.953622 13.12364,0 0,-45.2964508 -14.27693,2.8633398 0,-7.3174245 14.19739,-2.8633402 8.03326,0 0,52.6138757 13.12364,0 0,6.760665 -34.201,0 0,-6.760665 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8089\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 239.30095,2.3397463 31.53651,0 0,6.7606643 -24.17932,0 0,14.5553124 q 1.74982,-0.596529 3.49964,-0.874909 1.74982,-0.318149 3.49964,-0.318149 9.94215,0 15.74837,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.9653,14.91323 -5.96529,5.289226 -16.82212,5.289226 -3.73825,0 -7.63557,-0.636298 -3.85756,-0.636298 -7.99349,-1.908894 l 0,-8.073028 q 3.57917,1.948662 7.39696,2.903109 3.81779,0.954446 8.07303,0.954446 6.87997,0 10.8966,-3.618944 4.01663,-3.618943 4.01663,-9.822847 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.22126,0 -6.44252,0.715835 -3.18149,0.715835 -6.52205,2.227043 l 0,-29.8264607 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8091\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 302.73189,6.3961449 q -3.18149,0 -5.36876,2.2270424 -2.18728,2.1872737 -2.18728,5.3687627 0,3.141721 2.18728,5.328994 2.18727,2.147506 5.36876,2.147506 3.18149,0 5.36876,-2.147506 2.18728,-2.187273 2.18728,-5.328994 0,-3.14172 -2.22704,-5.3687627 -2.18728,-2.2270424 -5.329,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89154,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74403,4.0563986 0.91468,2.2668114 0.91468,4.8915394 0,5.249457 -3.69848,8.90817 -3.65871,3.618944 -8.98771,3.618944 -5.36876,0 -8.94793,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289941 3.65871,-9.0274752 3.65872,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8093\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM15.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM15.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3631\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3653\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"-133.16007\\\"\\n     inkscape:cy=\\\"148.99555\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2849\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 220.85714,75.714286\\\"\\n       id=\\\"path3617\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163.57143,181.57142 202.28571,24.285714 163,20 l 0.57143,161.57142 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8071\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 33.530002,55.239336 13.123642,0 0,-45.2964516 -14.276932,2.8633406 0,-7.3174253 14.197395,-2.8633402 8.03326,0 0,52.6138765 13.123643,0 0,6.760664 -34.201008,0 0,-6.760664 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8073\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 84.075912,2.6254595 31.536508,0 0,6.7606643 -24.179314,0 0,14.5553132 q 1.749819,-0.59653 3.499638,-0.87491 1.749819,-0.318149 3.499638,-0.318149 9.942158,0 15.748368,5.4483 5.80622,5.4483 5.80622,14.754156 0,9.584236 -5.96529,14.91323 -5.96529,5.289226 -16.822125,5.289226 -3.73825,0 -7.635574,-0.636298 -3.857556,-0.636298 -7.993492,-1.908893 l 0,-8.073029 q 3.579176,1.948662 7.396963,2.903109 3.817786,0.954446 8.073028,0.954446 6.87997,0 10.8966,-3.618943 4.01663,-3.618944 4.01663,-9.822848 0,-6.203904 -4.01663,-9.822848 -4.01663,-3.618944 -10.8966,-3.618944 -3.221258,0 -6.442515,0.715836 -3.181489,0.715835 -6.522053,2.227042 l 0,-29.8264605 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8075\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 147.50686,6.6818581 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36877,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8077\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotP30.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM30.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3603\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"12.554216\\\"\\n     inkscape:cy=\\\"162.54324\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"translate(36,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:3,9;stroke-dashoffset:0\\\"\\n       d=\\\"M 288,182 38,182\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 160,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 160,180 50,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;fill-opacity:1\\\"\\n       d=\\\"M 160,180.71428 78.571427,33.571428 160,16 l 0,164.71428 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       id=\\\"g8183\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,63.136667,-0.79565869)\\\">\\n      <path\\n         d=\\\"m 158.61496,14.226381 0,15.230469 15.23047,0 0,4.648437 -15.23047,0 0,15.230469 -4.59375,0 0,-15.230469 -15.23047,0 0,-4.648437 15.23047,0 0,-15.230469 4.59375,0 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:56px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8096\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 212.82674,29.414836 q 5.76645,1.232827 8.98771,5.130151 3.26102,3.897324 3.26102,9.624004 0,8.788864 -6.04483,13.600866 -6.04483,4.812003 -17.18004,4.812003 -3.73825,0 -7.71511,-0.755604 -3.93709,-0.715835 -8.15256,-2.187274 l 0,-7.75488 q 3.34056,1.948663 7.31742,2.942878 3.97686,0.994215 8.31164,0.994215 7.55604,0 11.49313,-2.982646 3.97686,-2.982646 3.97686,-8.669558 0,-5.249457 -3.69848,-8.192334 -3.65871,-2.982646 -10.22053,-2.982646 l -6.91974,0 0,-6.60159 7.23789,0 q 5.92552,0 9.06724,-2.346348 3.14172,-2.386117 3.14172,-6.840202 0,-4.57339 -3.26103,-6.999276 -3.22125,-2.4656539 -9.26608,-2.4656539 -3.3008,0 -7.07882,0.715835 -3.77801,0.7158351 -8.31164,2.2270419 l 0,-7.15835 q 4.57339,-1.2725957 8.55026,-1.9088935 4.01663,-0.6362978 7.55603,-0.6362978 9.14678,0 14.47578,4.1757045 5.32899,4.1359358 5.32899,11.2147488 0,4.931308 -2.82357,8.351409 -2.82357,3.380332 -8.03326,4.692697 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8098\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 257.52667,7.3432549 q -6.20391,0 -9.34563,6.1243661 -3.10195,6.084598 -3.10195,18.333331 0,12.208965 3.10195,18.333331 3.14172,6.084598 9.34563,6.084598 6.24367,0 9.34562,-6.084598 3.14172,-6.124366 3.14172,-18.333331 0,-12.248733 -3.14172,-18.333331 -3.10195,-6.1243661 -9.34562,-6.1243661 z m 0,-6.3629782 q 9.98192,0 15.23138,7.9139542 5.28922,7.8741851 5.28922,22.9067211 0,14.992768 -5.28922,22.906722 -5.24946,7.874186 -15.23138,7.874186 -9.98193,0 -15.27115,-7.874186 -5.24946,-7.913954 -5.24946,-22.906722 0,-15.032536 5.24946,-22.9067211 5.28922,-7.9139542 15.27115,-7.9139542 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8100\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 303.85711,6.1104279 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872737 -2.18727,5.3687627 0,3.141721 2.18727,5.328994 2.18728,2.147506 5.36877,2.147506 3.18148,0 5.36876,-2.147506 2.18727,-2.187273 2.18727,-5.328994 0,-3.14172 -2.22704,-5.3687627 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895876 2.74404,4.0563986 0.91468,2.2668114 0.91468,4.8915394 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36876,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289941 3.65872,-9.0274752 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-style:normal;font-weight:normal;font-size:81.44612122px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n         id=\\\"path8102\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"MoveRotM30.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveRotM30.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective11\\\" />\\n    <inkscape:perspective\\n       id=\\\"perspective3603\\\"\\n       inkscape:persp3d-origin=\\\"0.5 : 0.33333333 : 1\\\"\\n       inkscape:vp_z=\\\"1 : 0.5 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 0.5 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"152.55422\\\"\\n     inkscape:cy=\\\"163.97182\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1156\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2817\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"arc\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:0.25;stroke:#000000;stroke-width:5;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\"\\n       id=\\\"path2819\\\"\\n       sodipodi:cx=\\\"125\\\"\\n       sodipodi:cy=\\\"125\\\"\\n       sodipodi:rx=\\\"125\\\"\\n       sodipodi:ry=\\\"125\\\"\\n       d=\\\"m 250,125 a 125,125 0 1 1 -250,0 125,125 0 1 1 250,0 z\\\"\\n       transform=\\\"matrix(-1,0,0,1,287,59)\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:3;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:3, 9;stroke-dashoffset:0\\\"\\n       d=\\\"m 35,182 250,0\\\"\\n       id=\\\"path3593\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:2.86018682;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:2.86018677, 8.58056031;stroke-dashoffset:0\\\"\\n       d=\\\"m 163,299.65434 0,-112.27312\\\"\\n       id=\\\"path3593-1\\\" />\\n    <path\\n       style=\\\"fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180 273,120\\\"\\n       id=\\\"path3619\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"M 163,180.71428 244.42857,33.571428 163,16 l 0,164.71428 z\\\"\\n       id=\\\"path3643\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:19.54706955px;font-family:'Bitstream Vera Sans';fill:#000000;fill-opacity:1;stroke:none\\\"\\n       id=\\\"text3988\\\"\\n       transform=\\\"matrix(0.81166745,0,0,0.81166745,1.6421157,-1.25947)\\\">\\n      <path\\n         d=\\\"m -2.0231386,36.428781 21.4352826,0 0,6.522053 -21.4352826,0 0,-6.522053 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8048\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 56.476492,29.986266 q 5.766449,1.232827 8.987707,5.130151 3.261026,3.897324 3.261026,9.624005 0,8.788863 -6.044829,13.600866 -6.04483,4.812002 -17.180041,4.812002 -3.73825,0 -7.715112,-0.755604 -3.937092,-0.715835 -8.152565,-2.187274 l 0,-7.754879 q 3.340563,1.948662 7.317425,2.942877 3.976861,0.994215 8.31164,0.994215 7.556037,0 11.493129,-2.982646 3.976862,-2.982646 3.976862,-8.669557 0,-5.249457 -3.698481,-8.192335 -3.658713,-2.982646 -10.220534,-2.982646 l -6.919739,0 0,-6.60159 7.237888,0 q 5.925523,0 9.067244,-2.346348 3.14172,-2.386117 3.14172,-6.840202 0,-4.57339 -3.261026,-6.999276 -3.221258,-2.4656537 -9.266087,-2.4656537 -3.300795,0 -7.078813,0.715835 -3.778019,0.7158351 -8.311641,2.2270427 l 0,-7.1583508 q 4.573391,-1.2725956 8.550252,-1.9088935 4.01663,-0.6362978 7.556037,-0.6362978 9.146781,0 14.475775,4.1757045 5.328995,4.1359358 5.328995,11.2147486 0,4.931309 -2.823572,8.351409 -2.823572,3.380333 -8.03326,4.692697 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8050\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 101.17642,7.9146851 q -6.203908,0 -9.345628,6.1243669 -3.101952,6.084598 -3.101952,18.333331 0,12.208964 3.101952,18.333331 3.14172,6.084598 9.345628,6.084598 6.24367,0 9.34562,-6.084598 3.14172,-6.124367 3.14172,-18.333331 0,-12.248733 -3.14172,-18.333331 -3.10195,-6.1243669 -9.34562,-6.1243669 z m 0,-6.3629782 q 9.98192,0 15.23138,7.9139542 5.28922,7.8741859 5.28922,22.9067219 0,14.992767 -5.28922,22.906721 -5.24946,7.874186 -15.23138,7.874186 -9.981926,0 -15.271152,-7.874186 -5.249457,-7.913954 -5.249457,-22.906721 0,-15.032536 5.249457,-22.9067219 5.289226,-7.9139542 15.271152,-7.9139542 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8052\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n      <path\\n         d=\\\"m 147.50686,6.6818581 q -3.18149,0 -5.36877,2.2270424 -2.18727,2.1872735 -2.18727,5.3687625 0,3.141721 2.18727,5.328995 2.18728,2.147505 5.36877,2.147505 3.18148,0 5.36876,-2.147505 2.18727,-2.187274 2.18727,-5.328995 0,-3.14172 -2.22704,-5.3687625 -2.18727,-2.2270424 -5.32899,-2.2270424 z m 0,-5.1301512 q 2.54519,0 4.89153,0.9942154 2.34635,0.9544467 4.0564,2.7838029 1.82936,1.7895877 2.74404,4.0563986 0.91468,2.2668112 0.91468,4.8915392 0,5.249457 -3.69849,8.90817 -3.65871,3.618944 -8.9877,3.618944 -5.36877,0 -8.94794,-3.579176 -3.57918,-3.579175 -3.57918,-8.947938 0,-5.3289939 3.65872,-9.027475 3.65871,-3.6984811 8.94794,-3.6984811 z\\\"\\n         style=\\\"font-size:81.44612122px\\\"\\n         id=\\\"path8054\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveHFlip.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;fill-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 10,160 L 100,70 L 100,130 L 220,130 L 220,70 L 310,160 L 220,250 L 220,190 L 100,190 L 100,250 L 10,160 z \\\"\\n       id=\\\"path3274\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveVFlip.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveDown.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 160,10 L 250,100 L 190,100 L 190,220 L 250,220 L 160,310 L 70,220 L 130,220 L 130,100 L 70,100 L 160,10 z \\\"\\n       id=\\\"path3274\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveShrink.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3210\\\"\\n       cx=\\\"97.784004\\\"\\n       cy=\\\"119.01254\\\"\\n       fx=\\\"97.784004\\\"\\n       fy=\\\"119.01254\\\"\\n       r=\\\"150.23499\\\"\\n       gradientTransform=\\\"matrix(1.0943065,0.3182308,-0.3235039,0.6950983,44.992262,22.609241)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3222\\\"\\n       cx=\\\"156.07143\\\"\\n       cy=\\\"300.35715\\\"\\n       fx=\\\"156.07143\\\"\\n       fy=\\\"300.35715\\\"\\n       r=\\\"40.35714\\\"\\n       gradientTransform=\\\"matrix(1.0080384,0,0,0.4019374,14.926879,158.58684)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3210);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:8.96230125;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 169.01275,265.3672 C 93.306764,264.91973 184.09594,254.28496 171.89287,196.49891 C 136.81751,116.90916 48.312987,78.904811 130.8513,57.624012 C 173.1434,48.101242 249.69276,67.159794 188.4535,112.26331 C 168.91776,123.45431 278.69027,247.58954 169.01275,265.3672 z \\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\"\\n       inkscape:transform-center-x=\\\"55.442114\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3222);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:8.42706966;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 166.08095,266.83675 C 151.36577,272.95804 139.47952,280.37536 136.31052,291.78647 L 208.19524,290.28949 C 196.71794,282.11994 186.82775,273.73226 166.08095,266.83675 z \\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 110,226 L 83.571429,243.85714\\\"\\n       id=\\\"path3224\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 90,176 L 57.857143,183.14286\\\"\\n       id=\\\"path3226\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 80,116 L 50,116\\\"\\n       id=\\\"path3228\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 80,56 L 50,36\\\"\\n       id=\\\"path3230\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 230,56 L 260,46\\\"\\n       id=\\\"path3232\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 230,116 L 265.71429,116\\\"\\n       id=\\\"path3234\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 240,166 L 275,171\\\"\\n       id=\\\"path3236\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 240,226 L 270,246\\\"\\n       id=\\\"path3238\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 120,36 L 110,6\\\"\\n       id=\\\"path3240\\\" />\\n    <path\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\\\"\\n       d=\\\"M 180,36 L 190,6\\\"\\n       id=\\\"path3242\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"MoveGrow.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MoveUp.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <linearGradient\\n       id=\\\"linearGradient3204\\\">\\n      <stop\\n         style=\\\"stop-color:#ffffff;stop-opacity:1;\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop3206\\\" />\\n      <stop\\n         id=\\\"stop3212\\\"\\n         offset=\\\"1\\\"\\n         style=\\\"stop-color:#000000;stop-opacity:0.29591838;\\\" />\\n    </linearGradient>\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3210\\\"\\n       cx=\\\"97.784004\\\"\\n       cy=\\\"119.01254\\\"\\n       fx=\\\"97.784004\\\"\\n       fy=\\\"119.01254\\\"\\n       r=\\\"150.23499\\\"\\n       gradientTransform=\\\"matrix(1.0855802,0.3993744,-0.3209242,0.8723369,29.825633,-21.800103)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n    <radialGradient\\n       inkscape:collect=\\\"always\\\"\\n       xlink:href=\\\"#linearGradient3204\\\"\\n       id=\\\"radialGradient3222\\\"\\n       cx=\\\"156.07143\\\"\\n       cy=\\\"300.35715\\\"\\n       fx=\\\"156.07143\\\"\\n       fy=\\\"300.35715\\\"\\n       r=\\\"40.35714\\\"\\n       gradientTransform=\\\"matrix(1,0,0,0.5044248,0,148.84954)\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"204.69707\\\"\\n     inkscape:cy=\\\"158.25753\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"814\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:url(#radialGradient3210);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 152.85714,282.85714 C 77.754858,282.29557 25.677197,216.09197 13.571429,143.57143 C 7.347206,39.401886 96.731177,13.499887 162.85714,13.571429 C 250.16174,20.445262 307.17949,64.110107 303.57143,149.28571 C 297.04861,249.7588 215.23148,282.68932 152.85714,282.85714 z \\\"\\n       id=\\\"path3200\\\"\\n       sodipodi:nodetypes=\\\"ccccc\\\"\\n       inkscape:transform-center-x=\\\"55\\\" />\\n    <path\\n       style=\\\"fill:url(#radialGradient3222);fill-rule:evenodd;stroke:#000000;stroke-width:9.40279675;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;fill-opacity:1.0\\\"\\n       d=\\\"M 149.94872,284.7014 C 135.35088,292.38351 123.55941,301.69213 120.41569,316.01289 L 191.72717,314.1342 C 180.3414,303.88155 170.53007,293.35515 149.94872,284.7014 z \\\"\\n       id=\\\"path3202\\\"\\n       sodipodi:nodetypes=\\\"cccc\\\" />\\n  </g>\\n</svg>\\n\";","import { Molecule } from '../mol/Molecule';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { Vec } from '../util/Vec';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nexport class ContextSketch {\n    constructor(state, sketcher, proxyClip) {\n        this.state = state;\n        this.sketcher = sketcher;\n        this.proxyClip = proxyClip;\n    }\n    populate() {\n        const { state, sketcher } = this;\n        let menu = [];\n        if (sketcher.canUndo() || sketcher.canRedo()) {\n            if (sketcher.canUndo())\n                menu.push({ label: 'Undo', accelerator: 'CmdOrCtrl+Z', click: () => sketcher.performUndo() });\n            if (sketcher.canRedo())\n                menu.push({ label: 'Redo', accelerator: 'CmdOrCtrl+Shift+Z', click: () => sketcher.performRedo() });\n            menu.push(null);\n        }\n        if (state.currentAtom > 0 || state.currentBond > 0)\n            menu.push({ label: 'Edit', 'accelerator': 'Enter', click: () => sketcher.editCurrent() });\n        this.maybeAppend(menu, 'Delete', 'D', ActivityType.Delete);\n        this.maybeAppend(menu, 'Cut', 'CmdOrCtrl+X', ActivityType.Cut);\n        this.maybeAppend(menu, 'Copy', 'CmdOrCtrl+C', ActivityType.Copy);\n        if (this.proxyClip.canAlwaysGet())\n            menu.push({ label: 'Paste', 'accelerator': 'CmdOrCtrl+V', click: () => sketcher.performPaste() });\n        this.maybeAppend(menu, 'Charge +', 'Shift+=', ActivityType.Charge, { delta: 1 });\n        this.maybeAppend(menu, 'Charge -', 'Shift+-', ActivityType.Charge, { delta: -1 });\n        this.maybeAppend(menu, 'Bond Order 0', '0', ActivityType.BondOrder, { order: 0 });\n        this.maybeAppend(menu, 'Bond Order 1', '1', ActivityType.BondOrder, { order: 1 });\n        this.maybeAppend(menu, 'Bond Order 2', '2', ActivityType.BondOrder, { order: 2 });\n        this.maybeAppend(menu, 'Bond Order 3', '3', ActivityType.BondOrder, { order: 3 });\n        this.maybeAppend(menu, 'Bond Order 4', null, ActivityType.BondOrder, { order: 4 });\n        this.maybeAppend(menu, 'Unknown Stereochemistry', '4', ActivityType.BondType, { type: Molecule.BONDTYPE_UNKNOWN });\n        this.maybeAppend(menu, 'Bond Wedge Up', '5', ActivityType.BondType, { type: Molecule.BONDTYPE_INCLINED });\n        this.maybeAppend(menu, 'Bond Wedge Down', '6', ActivityType.BondType, { type: Molecule.BONDTYPE_DECLINED });\n        this.maybeAppend(menu, 'Switch Geometry', null, ActivityType.BondSwitch);\n        this.maybeAppend(menu, 'Add Two Bonds', 'Shift+D', ActivityType.BondAddTwo);\n        this.maybeAppend(menu, 'Insert Atom', null, ActivityType.BondInsert);\n        this.maybeAppend(menu, 'Join Atoms', null, ActivityType.Join);\n        this.maybeAppend(menu, 'Abbreviate Group', '/', ActivityType.AbbrevGroup);\n        this.maybeAppend(menu, 'Abbreviate Formula', '\\\\', ActivityType.AbbrevFormula);\n        this.maybeAppend(menu, 'Clear Abbreviation', 'Shift+\\\\', ActivityType.AbbrevClear);\n        this.maybeAppend(menu, 'Expand Abbreviation', 'Shift+/', ActivityType.AbbrevExpand);\n        let rotateSub = this.rotateSubMenu();\n        if (Vec.notBlank(rotateSub))\n            menu.push({ label: 'Rotate', subMenu: rotateSub });\n        let querySub = this.querySubMenu();\n        if (Vec.notBlank(querySub))\n            menu.push({ label: 'Query', subMenu: querySub });\n        let poly = new PolymerBlock(state.mol);\n        for (let units of poly.getUnits()) {\n            let a1 = state.currentAtom, a2 = 0;\n            if (state.currentBond > 0)\n                [a1, a2] = state.mol.bondFromTo(state.currentBond);\n            if (units.atoms.includes(a1) || units.atoms.includes(a2)) {\n                let label = 'Polymer Block (' + units.atoms.length + ' atom' + (units.atoms.length == 1 ? '' : 's') + ')';\n                menu.push({ label: label, click: () => sketcher.performPolymerBlock(units.atoms) });\n            }\n        }\n        if (menu.length > 0)\n            menu.push(null);\n        menu.push({ label: 'Scale to Fit', click: () => sketcher.autoScale() });\n        menu.push({ label: 'Zoom In', 'accelerator': '=', click: () => sketcher.zoom(1.25) });\n        menu.push({ label: 'Zoom Out', 'accelerator': '-', click: () => sketcher.zoom(0.8) });\n        return menu;\n    }\n    maybeAppend(menu, title, accelerator, activ, param = null) {\n        let molact = new MoleculeActivity(this.state, activ, param);\n        molact.execute();\n        if (!molact.output.mol && !molact.toClipboard)\n            return;\n        menu.push({ label: title, 'accelerator': accelerator, click: () => {\n                this.sketcher.setState(molact.output, true);\n                if (molact.toClipboard)\n                    this.proxyClip.setString(molact.toClipboard);\n            } });\n    }\n    rotateSubMenu() {\n        let menu = [];\n        this.maybeAppend(menu, 'Bond', null, ActivityType.BondRotate);\n        this.maybeAppend(menu, '+1 \\u{00B0}', null, ActivityType.Rotate, { theta: 1 });\n        this.maybeAppend(menu, '-1 \\u{00B0}', null, ActivityType.Rotate, { theta: -1 });\n        this.maybeAppend(menu, '+5 \\u{00B0}', null, ActivityType.Rotate, { theta: 5 });\n        this.maybeAppend(menu, '-5 \\u{00B0}', null, ActivityType.Rotate, { theta: -5 });\n        this.maybeAppend(menu, '+15 \\u{00B0}', null, ActivityType.Rotate, { theta: 15 });\n        this.maybeAppend(menu, '-15 \\u{00B0}', null, ActivityType.Rotate, { theta: -15 });\n        this.maybeAppend(menu, '+30 \\u{00B0}', 'Shift+[', ActivityType.Rotate, { theta: 30 });\n        this.maybeAppend(menu, '-30 \\u{00B0}', 'Shift+]', ActivityType.Rotate, { theta: -30 });\n        this.maybeAppend(menu, 'H-Flip', 'Shift+,', ActivityType.Flip, { axis: 'hor' });\n        this.maybeAppend(menu, 'V-Flip', 'Shift+.', ActivityType.Flip, { axis: 'ver' });\n        this.maybeAppend(menu, 'Align', null, ActivityType.AlignRegular);\n        return menu;\n    }\n    querySubMenu() {\n        let menu = [];\n        this.maybeAppend(menu, 'Clear', null, ActivityType.QueryClear);\n        this.maybeAppend(menu, 'Copy', null, ActivityType.QueryCopy);\n        return menu;\n    }\n}\n//# sourceMappingURL=ContextSketch.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { MetaMolecule } from '../mol/MetaMolecule';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, POLYMERBLOCK_SPECIAL_UNCAPPED, PolymerBlockConnectivity } from '../mol/PolymerBlock';\nimport { QueryTypeBond, QueryUtil } from '../mol/QueryUtil';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { Stereochemistry } from '../mol/Stereochemistry';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { FontData } from '../gfx/FontData';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { GeomUtil } from '../util/Geom';\nimport { Theme } from '../util/Theme';\nimport { colourCanvas, drawLine, fontSansSerif, invZ, norm2_xy, norm_xy, pixelDensity, setBoundaryPixels, sqr, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport var DraggingTool;\n(function (DraggingTool) {\n    DraggingTool[DraggingTool[\"None\"] = 0] = \"None\";\n    DraggingTool[DraggingTool[\"Press\"] = 1] = \"Press\";\n    DraggingTool[DraggingTool[\"Lasso\"] = 2] = \"Lasso\";\n    DraggingTool[DraggingTool[\"Pan\"] = 3] = \"Pan\";\n    DraggingTool[DraggingTool[\"Zoom\"] = 4] = \"Zoom\";\n    DraggingTool[DraggingTool[\"Rotate\"] = 5] = \"Rotate\";\n    DraggingTool[DraggingTool[\"Move\"] = 6] = \"Move\";\n    DraggingTool[DraggingTool[\"Erasor\"] = 7] = \"Erasor\";\n    DraggingTool[DraggingTool[\"Atom\"] = 8] = \"Atom\";\n    DraggingTool[DraggingTool[\"Bond\"] = 9] = \"Bond\";\n    DraggingTool[DraggingTool[\"Charge\"] = 10] = \"Charge\";\n    DraggingTool[DraggingTool[\"Ring\"] = 11] = \"Ring\";\n})(DraggingTool || (DraggingTool = {}));\nexport var DrawCanvasDecoration;\n(function (DrawCanvasDecoration) {\n    DrawCanvasDecoration[DrawCanvasDecoration[\"None\"] = 0] = \"None\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"Stereochemistry\"] = 1] = \"Stereochemistry\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"MappingNumber\"] = 2] = \"MappingNumber\";\n    DrawCanvasDecoration[DrawCanvasDecoration[\"AtomIndex\"] = 3] = \"AtomIndex\";\n})(DrawCanvasDecoration || (DrawCanvasDecoration = {}));\nexport class DrawCanvas extends Widget {\n    constructor() {\n        super();\n        this.mol = null;\n        this.policy = null;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.pointScale = 1;\n        this.viewOpt = {\n            decoration: DrawCanvasDecoration.Stereochemistry,\n            showOxState: true,\n            showQuery: true,\n            showArtifacts: true,\n        };\n        this.width = 0;\n        this.height = 0;\n        this.border = 0x808080;\n        this.borderRadius = 4;\n        this.background = 0xF8F8F8;\n        this.canvasUnder = null;\n        this.canvasMolecule = null;\n        this.canvasOver = null;\n        this.divMessage = null;\n        this.layout = null;\n        this.metavec = null;\n        this.stereo = null;\n        this.guidelines = null;\n        this.filthy = false;\n        this.dragType = DraggingTool.None;\n        this.currentAtom = 0;\n        this.currentBond = 0;\n        this.hoverAtom = 0;\n        this.hoverBond = 0;\n        this.selectedMask = null;\n        this.opAtom = 0;\n        this.opBond = 0;\n        this.opBudged = false;\n        this.opShift = false;\n        this.opCtrl = false;\n        this.opAlt = false;\n        this.lassoX = null;\n        this.lassoY = null;\n        this.lassoMask = null;\n        this.clickX = 0;\n        this.clickY = 0;\n        this.mouseX = 0;\n        this.mouseY = 0;\n        this.dragGuides = null;\n        this.templatePerms = null;\n        this.currentPerm = 0;\n        this.fusionBank = null;\n        this.cursorWatermark = 0;\n        this.cursorDX = 0;\n        this.cursorDY = 0;\n        this.toolAtomSymbol = '';\n        this.toolBondOrder = 0;\n        this.toolBondType = 0;\n        this.toolChargeDelta = 0;\n        this.toolRingArom = false;\n        this.toolRingFreeform = false;\n        this.toolRotateIncr = 0;\n        this.redrawCacheKey = '';\n        this.abbrevPolicy = RenderPolicy.defaultBlackOnWhite();\n        this.abbrevPolicy.data.foreground = 0xD0D0D0;\n        this.abbrevPolicy.data.atomCols = Vec.numberArray(0xD0D0D0, this.abbrevPolicy.data.atomCols.length);\n    }\n    render(parent) {\n        if (!this.width || !this.height)\n            throw 'Sketcher.render called without width and height';\n        super.render(parent);\n        this.container = dom('<div/>').appendTo(this.contentDOM);\n        this.container.css({ 'position': 'relative', 'width': this.width + 'px', 'height': this.height + 'px' });\n        this.container.css({ 'background-color': colourCanvas(this.background) });\n        if (this.border != MetaVector.NOCOLOUR) {\n            this.container.css({ 'border': '1px solid ' + colourCanvas(this.border) });\n            this.container.css({ 'border-radius': this.borderRadius + 'px' });\n        }\n        this.container.css({ 'outline': 'none' });\n        this.container.attr({ 'tabindex': '0' });\n        let canvasStyle = { 'position': 'absolute', 'left': '0', 'top': '0', 'width': `${this.width}px`, 'height': `${this.height}`, 'pointer-events': 'none' };\n        this.divInfo = dom('<div/>').appendTo(this.container).css({ 'position': 'absolute', 'left': '0', 'top': '0', 'pointer-events': 'none' });\n        this.canvasUnder = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.canvasMolecule = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.canvasOver = dom('<canvas/>').appendTo(this.container).css(canvasStyle);\n        this.divMessage = dom('<div/>').appendTo(this.container).css(canvasStyle);\n        this.divMessage.css({ 'text-align': 'center', 'vertical-align': 'middle', 'font-weight': 'bold', 'font-size': '120%' });\n    }\n    getState() {\n        let state = {\n            mol: this.mol.clone(),\n            currentAtom: this.currentAtom,\n            currentBond: this.currentBond,\n            selectedMask: this.selectedMask == null ? null : this.selectedMask.slice(0)\n        };\n        return state;\n    }\n    getSelected(atom) {\n        if (this.selectedMask == null || atom > this.selectedMask.length)\n            return false;\n        return this.selectedMask[atom - 1];\n    }\n    getLassoed(atom) {\n        if (this.lassoMask == null || atom > this.lassoMask.length)\n            return false;\n        return this.lassoMask[atom - 1];\n    }\n    scale() { return this.pointScale; }\n    angToX(ax) {\n        return ax * this.pointScale + this.offsetX;\n    }\n    angToY(ay) {\n        return ay * -this.pointScale + this.offsetY;\n    }\n    xToAng(px) {\n        return (px - this.offsetX) / this.pointScale;\n    }\n    yToAng(py) {\n        return (py - this.offsetY) / -this.pointScale;\n    }\n    scaleToAng(scale) { return scale / this.pointScale; }\n    angToScale(ang) { return ang * this.pointScale; }\n    yIsUp() { return false; }\n    measureText(str, fontSize) { return FontData.main.measureText(str, fontSize); }\n    delayedRedraw() {\n        if (this.canvasMolecule == null)\n            return;\n        this.filthy = true;\n        window.setTimeout(() => { if (this.filthy)\n            this.redraw(); }, 10);\n    }\n    layoutMolecule() {\n        let mol = this.mol;\n        if (this.hoverAtom > 0 && MolUtil.hasAbbrev(mol, this.hoverAtom)) {\n            mol = mol.clone();\n            mol.setAtomElement(this.hoverAtom, '');\n            mol.setAtomCharge(this.hoverAtom, 0);\n            mol.setAtomUnpaired(this.hoverAtom, 0);\n            MolUtil.clearAbbrev(mol, this.hoverAtom);\n        }\n        let effects = this.sketchEffects(mol);\n        this.layout = new ArrangeMolecule(mol, this, this.policy, effects);\n        this.layout.setWantArtifacts(this.viewOpt.showArtifacts);\n        this.layout.arrange();\n    }\n    redrawMetaVector() {\n        this.metavec = new MetaVector();\n        new DrawMolecule(this.layout, this.metavec).draw();\n        if (this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom)) {\n            let abbrevMol = MolUtil.getAbbrev(this.mol, this.hoverAtom);\n            this.orientAbbreviation(this.hoverAtom, abbrevMol);\n            this.abbrevPolicy.data.pointScale = this.policy.data.pointScale;\n            let layout = new ArrangeMolecule(abbrevMol, this, this.abbrevPolicy, new RenderEffects());\n            layout.arrange();\n            new DrawMolecule(layout, this.metavec).draw();\n        }\n    }\n    redraw() {\n        this.filthy = false;\n        this.redrawInfo();\n        this.redrawUnder();\n        this.redrawMolecule();\n        this.redrawOver();\n    }\n    redrawInfo() {\n        let cacheKey = JSON.stringify([this.width, this.height, this.mol.toString()]);\n        if (cacheKey == this.redrawCacheKey)\n            return;\n        this.redrawCacheKey = cacheKey;\n        this.divInfo.empty();\n        this.divInfo.css({ 'visibility': 'hidden', 'left': '0', 'top': '0' });\n        if (this.mol.numAtoms == 0)\n            return;\n        let divText = dom('<div/>').appendTo(this.divInfo);\n        divText.css({ 'display': 'inline-block', 'text-align': 'right', 'font-family': 'sans-serif', 'font-size': '80%', 'color': '#C0C0C0' });\n        let html = MolUtil.molecularFormula(this.mol, ['<sub>', '</sub>', '<sup>', '</sup>']);\n        let chg = 0;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            chg += this.mol.atomCharge(n);\n        if (chg == -1)\n            html += '<sup>-</sup>';\n        else if (chg < -1)\n            html += `<sup>${chg}</sup>`;\n        else if (chg == 1)\n            html += '<sup>+</sup>';\n        else if (chg > 1)\n            html += `<sup>+${chg}</sup>`;\n        html += '<br>' + MolUtil.molecularWeight(this.mol).toFixed(2);\n        divText.setHTML(html);\n        setTimeout(() => {\n            let w = divText.width(), h = divText.height();\n            setBoundaryPixels(this.divInfo, this.width - w - 1, 1, w, h);\n            this.divInfo.css({ 'visibility': 'visible' });\n        }, 1);\n    }\n    redrawUnder() {\n        let HOVER_COL = 0xE0E0E0;\n        let CURRENT_COL = 0xA0A0A0, CURRENT_BORD = 0x808080;\n        let SELECT_COL = 0xC0C0C0;\n        let LASSO_COL = 0xD0D0D0;\n        let density = pixelDensity();\n        this.canvasUnder.elCanvas.width = this.width * density;\n        this.canvasUnder.elCanvas.height = this.height * density;\n        this.canvasUnder.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasUnder.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if (this.hoverAtom > 0) {\n            let units = new PolymerBlock(this.mol).getUnits();\n            for (let unit of units)\n                if (unit.atoms.includes(this.hoverAtom))\n                    this.drawPolymerUnit(ctx, unit, units);\n            let sz = 0;\n            if (this.hoverAtom == this.currentAtom)\n                sz += 0.1;\n            if (this.getSelected(this.hoverAtom))\n                sz += 0.1;\n            if (this.currentBond > 0 && (this.mol.bondFrom(this.currentBond) == this.hoverAtom || this.mol.bondTo(this.currentBond) == this.hoverAtom))\n                sz += 0.1;\n            this.drawAtomShade(ctx, this.hoverAtom, HOVER_COL, -1, sz);\n        }\n        if (this.hoverBond > 0) {\n            let bfr = this.mol.bondFrom(this.hoverBond), bto = this.mol.bondTo(this.hoverBond);\n            let units = new PolymerBlock(this.mol).getUnits();\n            for (let unit of units)\n                if (unit.atoms.includes(bfr) && unit.atoms.includes(bto))\n                    this.drawPolymerUnit(ctx, unit, units);\n            let sz = 0;\n            if (this.hoverBond == this.currentBond)\n                sz += 0.1;\n            if (this.getSelected(bfr) && this.getSelected(bto))\n                sz += 0.1;\n            this.drawBondShade(ctx, this.hoverBond, HOVER_COL, -1, sz);\n        }\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let sz = n == this.currentBond ? 0.1 : 0;\n            let bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n            let sfr = this.getSelected(bfr), sto = this.getSelected(bto), lfr = this.getLassoed(bfr), lto = this.getLassoed(bto);\n            if (sfr && sto)\n                this.drawBondShade(ctx, n, SELECT_COL, -1, sz);\n            else if ((sfr || lfr) && (sto || lto))\n                this.drawBondShade(ctx, n, LASSO_COL, -1, sz);\n        }\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let sz = this.currentAtom == n ? 0.1 : 0;\n            if (this.getSelected(n))\n                this.drawAtomShade(ctx, n, SELECT_COL, -1, sz);\n            else if (this.getLassoed(n))\n                this.drawAtomShade(ctx, n, LASSO_COL, -1, sz);\n        }\n        if (this.currentAtom > 0) {\n            this.drawAtomShade(ctx, this.currentAtom, CURRENT_COL, CURRENT_BORD, 0);\n        }\n        if (this.currentBond > 0) {\n            this.drawBondShade(ctx, this.currentBond, CURRENT_COL, CURRENT_BORD, 0);\n        }\n        if (this.dragType == DraggingTool.Move || (this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond) {\n            if (this.dragGuides != null && this.dragGuides.length > 0) {\n                for (let g of this.dragGuides)\n                    for (let n = 0; n < g.x.length; n++) {\n                        let lw = this.policy.data.lineSize * this.pointScale;\n                        ctx.strokeStyle = '#C0C0C0';\n                        ctx.lineWidth = lw;\n                        drawLine(ctx, g.sourceX, g.sourceY, g.destX[n], g.destY[n]);\n                        ctx.beginPath();\n                        ctx.ellipse(g.destX[n], g.destY[n], 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                        ctx.fillStyle = '#C0C0C0';\n                        ctx.fill();\n                    }\n            }\n        }\n        if (this.dragType == DraggingTool.Ring) {\n            let [ringX, ringY] = this.determineFauxRing();\n            let rsz = ringX == null ? 0 : ringX.length;\n            if (rsz > 0) {\n                let scale = this.pointScale;\n                let lw = this.policy.data.lineSize * scale;\n                ctx.strokeStyle = '#C0C0C0';\n                ctx.lineWidth = lw;\n                for (let n = 0; n < rsz; n++) {\n                    let nn = n < rsz - 1 ? n + 1 : 0;\n                    let x1 = this.angToX(ringX[n]), y1 = this.angToY(ringY[n]);\n                    let x2 = this.angToX(ringX[nn]), y2 = this.angToY(ringY[nn]);\n                    drawLine(ctx, x1, y1, x2, y2);\n                }\n                if (this.toolRingArom) {\n                    let cx = 0, cy = 0;\n                    for (let n = 0; n < rsz; n++) {\n                        cx += ringX[n];\n                        cy += ringY[n];\n                    }\n                    cx /= rsz;\n                    cy /= rsz;\n                    let rad = 0;\n                    for (let n = 0; n < rsz; n++)\n                        rad += norm_xy(ringX[n] - cx, ringY[n] - cy);\n                    rad = this.angToScale(rad * 0.5 / rsz);\n                    ctx.beginPath();\n                    ctx.ellipse(this.angToX(cx), this.angToY(cy), rad, rad, 0, 0, TWOPI, false);\n                    ctx.stroke();\n                }\n            }\n        }\n        ctx.restore();\n    }\n    redrawMolecule() {\n        let density = pixelDensity();\n        this.canvasMolecule.elCanvas.width = this.width * density;\n        this.canvasMolecule.elCanvas.height = this.height * density;\n        this.canvasMolecule.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasMolecule.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if (this.metavec != null)\n            this.metavec.renderContext(ctx);\n        if (this.templatePerms != null) {\n            let perm = this.templatePerms[this.currentPerm];\n            if (perm.metavec != null)\n                perm.metavec.renderContext(ctx);\n        }\n        ctx.restore();\n    }\n    redrawOver() {\n        let density = pixelDensity();\n        this.canvasOver.elCanvas.width = this.width * density;\n        this.canvasOver.elCanvas.height = this.height * density;\n        this.canvasOver.css({ 'width': `${this.width}px`, 'height': `${this.height}px` });\n        let ctx = this.canvasOver.elCanvas.getContext('2d');\n        ctx.save();\n        ctx.scale(density, density);\n        ctx.clearRect(0, 0, this.width, this.height);\n        if ((this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) && this.lassoX.length > 1) {\n            let erasing = this.dragType == DraggingTool.Erasor;\n            let path = new Path2D();\n            path.moveTo(this.lassoX[0], this.lassoY[0]);\n            for (let n = 1; n < this.lassoX.length; n++)\n                path.lineTo(this.lassoX[n], this.lassoY[n]);\n            path.closePath();\n            ctx.fillStyle = colourCanvas(erasing ? 0xD0FF0000 : 0xF0000000);\n            ctx.fill(path);\n            ctx.strokeStyle = erasing ? '#804040' : '#808080';\n            ctx.lineWidth = 0.5;\n            ctx.stroke(path);\n        }\n        if (this.dragType == DraggingTool.Rotate) {\n            let [x0, y0, theta, magnitude] = this.determineDragTheta();\n            let scale = this.pointScale;\n            let lw = this.policy.data.lineSize * scale;\n            ctx.strokeStyle = '#E0E0E0';\n            ctx.lineWidth = 0.5 * lw;\n            drawLine(ctx, x0, y0, x0 + magnitude, y0);\n            ctx.strokeStyle = '#808080';\n            ctx.lineWidth = lw;\n            drawLine(ctx, x0, y0, x0 + magnitude * Math.cos(theta), y0 + magnitude * Math.sin(theta));\n            ctx.beginPath();\n            ctx.ellipse(x0, y0, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n            ctx.fillStyle = '#808080';\n            ctx.fill();\n            for (let atom of this.subjectAtoms(true, false)) {\n                let ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n                let ang = Math.atan2(ay - y0, ax - x0), dist = norm_xy(ax - x0, ay - y0);\n                let nx = x0 + dist * Math.cos(ang + theta), ny = y0 + dist * Math.sin(ang + theta);\n                ctx.beginPath();\n                ctx.ellipse(nx, ny, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0.5;\n                ctx.stroke();\n            }\n        }\n        if (this.dragType == DraggingTool.Move) {\n            let [dx, dy] = this.determineMoveDelta();\n            let scale = this.pointScale;\n            let lw = this.policy.data.lineSize * scale;\n            for (let atom of this.subjectAtoms(false, true)) {\n                let ax = this.angToX(this.mol.atomX(atom)), ay = this.angToY(this.mol.atomY(atom));\n                ctx.beginPath();\n                ctx.ellipse(ax + dx, ay + dy, 2 * lw, 2 * lw, 0, 0, TWOPI, false);\n                ctx.strokeStyle = 'black';\n                ctx.lineWidth = 0.5;\n                ctx.stroke();\n            }\n        }\n        if ((this.dragType == DraggingTool.Atom && this.opAtom > 0) || this.dragType == DraggingTool.Bond) {\n            let element = this.dragType == DraggingTool.Atom ? this.toolAtomSymbol : 'C';\n            let order = this.dragType == DraggingTool.Bond ? this.toolBondOrder : 1;\n            let type = this.dragType == DraggingTool.Bond ? this.toolBondType : Molecule.BONDTYPE_NORMAL;\n            this.drawOriginatingBond(ctx, element, order, type);\n        }\n        if (this.viewOpt.showQuery)\n            this.drawQueryFeatures(ctx);\n        ctx.restore();\n    }\n    subjectAtoms(allIfNone = false, useOpAtom = false) {\n        let atoms = [];\n        if (this.selectedMask != null) {\n            for (let n = 0; n < this.selectedMask.length; n++)\n                if (this.selectedMask[n])\n                    atoms.push(n + 1);\n            if (atoms.length > 0)\n                return atoms;\n        }\n        if (this.currentAtom > 0)\n            atoms.push(this.currentAtom);\n        else if (this.currentBond > 0) {\n            atoms.push(this.mol.bondFrom(this.currentBond));\n            atoms.push(this.mol.bondTo(this.currentBond));\n        }\n        if (useOpAtom && atoms.length == 0 && this.opAtom > 0)\n            atoms.push(this.opAtom);\n        if (allIfNone && atoms.length == 0) {\n            for (let n = 1; n <= this.mol.numAtoms; n++)\n                atoms.push(n);\n        }\n        return atoms;\n    }\n    updateLasso(x, y) {\n        if (this.dragType != DraggingTool.Lasso && this.dragType != DraggingTool.Erasor)\n            return;\n        if (x < 0 || y < 0 || x > this.width || y > this.height) {\n            this.dragType = DraggingTool.None;\n            this.lassoX = null;\n            this.lassoY = null;\n            this.lassoMask = null;\n            this.delayedRedraw();\n        }\n        let len = Vec.len(this.lassoX);\n        if (len > 0 && this.lassoX[len - 1] == x && this.lassoY[len - 1] == y)\n            return;\n        this.lassoX.push(x);\n        this.lassoY.push(y);\n        this.calculateLassoMask();\n        this.delayedRedraw();\n    }\n    calculateLassoMask() {\n        this.lassoMask = new Array(this.mol.numAtoms);\n        for (let n = 0; n < this.mol.numAtoms; n++)\n            this.lassoMask[n] = false;\n        for (let n = 0; n < this.layout.numPoints(); n++) {\n            let p = this.layout.getPoint(n);\n            if (p.anum == 0)\n                continue;\n            this.lassoMask[p.anum - 1] = GeomUtil.pointInPolygon(p.oval.cx, p.oval.cy, this.lassoX, this.lassoY);\n        }\n    }\n    drawAtomShade(ctx, atom, fillCol, borderCol, anghalo) {\n        if (this.layout == null)\n            return;\n        let p = null;\n        for (let n = 0; n < this.layout.numPoints(); n++)\n            if (this.layout.getPoint(n).anum == atom) {\n                p = this.layout.getPoint(n);\n                break;\n            }\n        if (p == null)\n            return;\n        let minRad = 0.2 * this.pointScale, minRadSq = sqr(minRad);\n        let cx = p.oval.cx, cy = p.oval.cy;\n        let rad = Math.max(minRad, Math.max(p.oval.rw, p.oval.rh)) + (0.1 + anghalo) * this.pointScale;\n        if (fillCol != -1) {\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fill();\n        }\n        if (borderCol != -1) {\n            ctx.beginPath();\n            ctx.ellipse(cx, cy, rad, rad, 0, 0, TWOPI, true);\n            ctx.strokeStyle = colourCanvas(borderCol);\n            ctx.lineWidth = 1;\n            ctx.stroke();\n        }\n    }\n    drawBondShade(ctx, bond, fillCol, borderCol, anghalo) {\n        var _a;\n        if (this.layout == null)\n            return;\n        let x1 = 0, y1 = 0, x2 = 0, y2 = 0, nb = 0, sz = 0;\n        for (let l of (_a = this.layout.getUnsplitLines()) !== null && _a !== void 0 ? _a : this.layout.getLines()) {\n            if (l.bnum != bond)\n                continue;\n            x1 += l.line.x1;\n            y1 += l.line.y1;\n            x2 += l.line.x2;\n            y2 += l.line.y2;\n            nb++;\n            sz += l.size + (0.2 + anghalo) * this.pointScale;\n        }\n        if (nb == 0)\n            return;\n        let invNB = 1 / nb;\n        sz *= invNB;\n        x1 *= invNB;\n        y1 *= invNB;\n        x2 *= invNB;\n        y2 *= invNB;\n        let dx = x2 - x1, dy = y2 - y1, invDist = 1 / norm_xy(dx, dy);\n        dx *= invDist;\n        dy *= invDist;\n        let ox = dy, oy = -dx;\n        let path = new Path2D(), mx, my, CIRC = 0.8;\n        path.moveTo(x1 + ox * sz, y1 + oy * sz);\n        mx = x1 + (ox * sz - dx * sz) * CIRC;\n        my = y1 + (oy * sz - dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x1 - dx * sz, y1 - dy * sz);\n        mx = x1 + (-ox * sz - dx * sz) * CIRC;\n        my = y1 + (-oy * sz - dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x1 - ox * sz, y1 - oy * sz);\n        path.lineTo(x2 - ox * sz, y2 - oy * sz);\n        mx = x2 + (-ox * sz + dx * sz) * CIRC;\n        my = y2 + (-oy * sz + dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x2 + dx * sz, y2 + dy * sz);\n        mx = x2 + (ox * sz + dx * sz) * CIRC;\n        my = y2 + (oy * sz + dy * sz) * CIRC;\n        path.quadraticCurveTo(mx, my, x2 + ox * sz, y2 + oy * sz);\n        path.closePath();\n        if (fillCol != -1) {\n            ctx.beginPath();\n            ctx.fillStyle = colourCanvas(fillCol);\n            ctx.fill(path);\n        }\n        if (borderCol != -1) {\n            ctx.beginPath();\n            ctx.strokeStyle = colourCanvas(borderCol);\n            ctx.lineWidth = 1;\n            ctx.stroke(path);\n        }\n    }\n    drawOriginatingBond(ctx, element, order, type) {\n        let x1 = this.clickX, y1 = this.clickY;\n        if (this.opAtom > 0) {\n            x1 = this.angToX(this.mol.atomX(this.opAtom));\n            y1 = this.angToY(this.mol.atomY(this.opAtom));\n        }\n        else if (this.opBond > 0) {\n            let [bfr, bto] = this.mol.bondFromTo(this.opBond);\n            x1 = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n            y1 = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n        }\n        let x2 = this.mouseX, y2 = this.mouseY;\n        let snapTo = this.snapToGuide(x2, y2), snapAtom = false;\n        if (snapTo)\n            [x2, y2, snapAtom] = snapTo;\n        let scale = this.pointScale;\n        ctx.strokeStyle = snapAtom ? '#4040FF' : '#808080';\n        ctx.lineWidth = this.policy.data.lineSize * scale * (snapAtom ? 1.5 : 1);\n        drawLine(ctx, x1, y1, x2, y2);\n        if (element != 'C') {\n            let fh = this.policy.data.fontSize * scale;\n            ctx.font = fontSansSerif(fh);\n            let metrics = ctx.measureText(element);\n            ctx.fillStyle = '#808080';\n            ctx.fillText(element, x2 - 0.5 * metrics.width, y2 + 0.5 * fh);\n        }\n    }\n    drawQueryFeatures(ctx) {\n        const { layout, mol } = this;\n        let annots = [];\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (QueryUtil.hasAnyQueryAtom(mol, n)) {\n                let bits = [];\n                for (let xtra of mol.atomExtra(n))\n                    if (xtra.startsWith('q'))\n                        bits.push(xtra);\n                let ap = layout.getPoint(n - 1);\n                annots.push({ txt: bits.join(','), x: ap.oval.cx + ap.oval.rw, y: ap.oval.cy });\n            }\n        for (let n = 1; n <= mol.numBonds; n++)\n            if (QueryUtil.hasAnyQueryBond(mol, n)) {\n                let bits = [];\n                for (let xtra of mol.bondExtra(n))\n                    if (xtra.startsWith('q') && !xtra.startsWith(QueryTypeBond.Orders))\n                        bits.push(xtra);\n                let num = 0, cx = 0, cy = 0;\n                for (let bl of layout.getLines())\n                    if (bl.bnum == n) {\n                        num += 2;\n                        cx += bl.line.x1 + bl.line.x2;\n                        cy += bl.line.y1 + bl.line.y2;\n                    }\n                annots.push({ txt: bits.join(','), x: cx / num, y: cy / num });\n            }\n        let fh = 0.7 * this.policy.data.fontSize * this.pointScale;\n        for (let annot of annots) {\n            ctx.font = fontSansSerif(fh);\n            ctx.fillStyle = '#FF40C0';\n            ctx.fillText(annot.txt, annot.x, annot.y);\n        }\n    }\n    drawPolymerUnit(ctx, unit, allUnits) {\n        const { mol, layout } = this;\n        let x = [], y = [];\n        let scale = this.pointScale;\n        for (let a of unit.atoms) {\n            let pt = layout.getPoint(a - 1);\n            let rad = Math.max(0.5 * scale, Math.max(pt.oval.rw, pt.oval.rh));\n            const NPT = 36, THPT = TWOPI / NPT;\n            for (let n = 0; n < NPT; n++) {\n                let th = n * THPT;\n                x.push(pt.oval.cx + rad * Math.cos(th));\n                y.push(pt.oval.cy + rad * Math.sin(th));\n            }\n        }\n        let extBonds = [], inAtoms = [], outAtoms = [];\n        for (let n = 1; n <= mol.numBonds; n++) {\n            let bfr = mol.bondFrom(n), bto = mol.bondTo(n);\n            let flag1 = unit.atoms.includes(bfr), flag2 = unit.atoms.includes(bto);\n            if (!flag1 && !flag2)\n                continue;\n            if (!flag2) {\n                extBonds.push(n);\n                inAtoms.push(bfr);\n                outAtoms.push(bto);\n            }\n            else if (!flag1) {\n                extBonds.push(n);\n                inAtoms.push(bto);\n                outAtoms.push(bfr);\n            }\n            let pt1 = layout.getPoint(bfr - 1), pt2 = layout.getPoint(bto - 1);\n            let x1 = pt1.oval.cx, y1 = pt1.oval.cy, x2 = pt2.oval.cx, y2 = pt2.oval.cy;\n            if (!flag1)\n                [x1, y1] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n            else if (!flag2)\n                [x2, y2] = [0.5 * (x1 + x2), 0.5 * (y1 + y2)];\n            let dx = x2 - x1, dy = y2 - y1, d = norm_xy(dx, dy), invD = invZ(d);\n            let ox = dy * invD * 0.3 * scale, oy = -dx * invD * 0.3 * scale;\n            let npWidth = Math.ceil(2 * d / scale) + 1, npHeight = Math.ceil(2 * norm_xy(ox, oy) / scale) + 1;\n            for (let n = 0; n <= npWidth; n++) {\n                x.push(x1 - ox + dx * n / npWidth);\n                y.push(y1 - oy + dy * n / npWidth);\n                x.push(x1 + ox + dx * n / npWidth);\n                y.push(y1 + oy + dy * n / npWidth);\n            }\n            for (let n = 1; n < npHeight; n++) {\n                x.push(x1 - ox + 2 * ox * n / npHeight);\n                y.push(y1 - oy + 2 * oy * n / npHeight);\n                x.push(x2 - ox + 2 * ox * n / npHeight);\n                y.push(y2 - oy + 2 * oy * n / npHeight);\n            }\n        }\n        let [px, py] = GeomUtil.outlinePolygon(x, y, 0.5 * scale);\n        let path = new Path2D();\n        path.moveTo(px[0], py[0]);\n        for (let n = 1; n < px.length; n++)\n            path.lineTo(px[n], py[n]);\n        path.closePath();\n        ctx.save();\n        ctx.fillStyle = '#F9EFFF';\n        ctx.fill(path);\n        ctx.strokeStyle = '#C0C0C0';\n        ctx.lineWidth = 1;\n        ctx.stroke(path);\n        ctx.restore();\n        let selfLinks = [];\n        let innerLinks = [];\n        let outerLinks = [];\n        if (Vec.len(unit.bondConn) == 4) {\n            innerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[0])], inAtoms[extBonds.indexOf(unit.bondConn[2])]]);\n            innerLinks.push([inAtoms[extBonds.indexOf(unit.bondConn[1])], inAtoms[extBonds.indexOf(unit.bondConn[3])]]);\n        }\n        else if (Vec.len(extBonds) == 2 && unit.connect != null) {\n            if (unit.connect == PolymerBlockConnectivity.HeadToTail || unit.connect == PolymerBlockConnectivity.Random) {\n                innerLinks.push([inAtoms[0], inAtoms[1]]);\n            }\n            if (unit.connect == PolymerBlockConnectivity.HeadToHead || unit.connect == PolymerBlockConnectivity.Random) {\n                selfLinks.push(inAtoms[0]);\n                selfLinks.push(inAtoms[1]);\n            }\n        }\n        else {\n            for (let b of extBonds) {\n                let a1 = mol.bondFrom(b), a2 = mol.bondTo(b);\n                if (unit.atoms.includes(a2))\n                    [a1, a2] = [a2, a1];\n                let incl = unit.bondIncl.get(b), excl = unit.bondExcl.get(b);\n                let isCapped = mol.atomElement(a2) != POLYMERBLOCK_SPECIAL_UNCAPPED;\n                for (let look of (isCapped ? [unit] : allUnits))\n                    for (let a of look.atoms) {\n                        let isExt = false;\n                        for (let adj of mol.atomAdjList(a))\n                            if (!look.atoms.includes(adj)) {\n                                isExt = true;\n                                break;\n                            }\n                        if (!isExt)\n                            continue;\n                        if (Vec.notBlank(incl)) {\n                            let anames = look.atomName.get(a), any = false;\n                            if (anames)\n                                for (let an of anames)\n                                    any = any || incl.includes(an);\n                            if (!any)\n                                continue;\n                        }\n                        if (Vec.notBlank(excl)) {\n                            let anames = look.atomName.get(a), any = false;\n                            if (anames)\n                                for (let an of anames)\n                                    any = any || excl.includes(an);\n                            if (any)\n                                continue;\n                        }\n                        if (a == a1)\n                            selfLinks.push(a1);\n                        else if (unit === look)\n                            innerLinks.push([a1, a]);\n                        else\n                            outerLinks.push([a1, a]);\n                    }\n            }\n        }\n        selfLinks = Vec.uniqueStable(selfLinks);\n        innerLinks = Vec.maskGet(innerLinks, Vec.maskUnique(innerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n        outerLinks = Vec.maskGet(outerLinks, Vec.maskUnique(outerLinks.map((pair) => Vec.min(pair) * mol.numAtoms + Vec.max(pair))));\n        ctx.save();\n        ctx.strokeStyle = '#6329C1';\n        ctx.lineWidth = 2;\n        ctx.setLineDash([1, 1]);\n        ctx.beginPath();\n        for (let a of selfLinks) {\n            let p1 = layout.getPoint(a - 1), x1 = p1.oval.cx, y1 = p1.oval.cy;\n            let x2 = 0, y2 = 0, num = 0;\n            for (let n = 0; n < extBonds.length; n++)\n                if (inAtoms[n] == a) {\n                    let p2 = layout.getPoint(outAtoms[n] - 1);\n                    x2 += p2.oval.cx;\n                    y2 += p2.oval.cy;\n                    num++;\n                }\n            if (num > 1) {\n                x2 /= num;\n                y2 /= num;\n            }\n            x2 = x1 + 0.5 * (x2 - x1);\n            y2 = y1 + 0.5 * (y2 - y1);\n            let dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n            const EXT = 2 * scale;\n            ctx.moveTo(x1, y1);\n            ctx.quadraticCurveTo(cx + ox * EXT, cy + oy * EXT, x2, y2);\n            ctx.quadraticCurveTo(cx - ox * EXT, cy - oy * EXT, x1, y1);\n        }\n        for (let [a1, a2] of innerLinks) {\n            let x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n            let dx = x2 - x1, dy = y2 - y1, invD = invZ(norm_xy(dx, dy)), ox = dy * invD, oy = -dx * invD;\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2);\n            const EXT = 5;\n            let px1 = cx + ox * EXT, py1 = cy + oy * EXT, px2 = cx - ox * EXT, py2 = cy - oy * EXT;\n            let [px, py] = CoordUtil.congestionPoint(mol, px1, py1) < CoordUtil.congestionPoint(mol, px2, py2) ? [px1, py1] : [px2, py2];\n            ctx.moveTo(this.angToX(x1), this.angToY(y1));\n            ctx.quadraticCurveTo(this.angToX(px), this.angToY(py), this.angToX(x2), this.angToY(y2));\n        }\n        for (let [a1, a2] of outerLinks) {\n            let p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n            ctx.moveTo(p1.oval.cx, p1.oval.cy);\n            ctx.lineTo(p2.oval.cx, p2.oval.cy);\n        }\n        ctx.stroke();\n        ctx.restore();\n    }\n    determineFauxRing() {\n        let atom = this.opAtom, bond = this.opBond, mol = this.mol;\n        let x1 = atom > 0 ? mol.atomX(atom) : bond > 0 ? 0.5 * (mol.atomX(mol.bondFrom(bond)) + mol.atomX(mol.bondTo(bond))) : this.xToAng(this.clickX);\n        let y1 = atom > 0 ? mol.atomY(atom) : bond > 0 ? 0.5 * (mol.atomY(mol.bondFrom(bond)) + mol.atomY(mol.bondTo(bond))) : this.yToAng(this.clickY);\n        let x2 = this.xToAng(this.mouseX), y2 = this.yToAng(this.mouseY), dx = x2 - x1, dy = y2 - y1;\n        let rsz = Math.min(9, Math.round(norm_xy(dx, dy) * 2 / Molecule.IDEALBOND) + 2);\n        if (rsz < 3) { }\n        else if (bond > 0)\n            return SketchUtil.proposeBondRing(mol, rsz, bond, dx, dy);\n        else if (atom > 0 && mol.atomAdjCount(atom) > 0 && !this.toolRingFreeform)\n            return SketchUtil.proposeAtomRing(mol, rsz, atom, dx, dy);\n        else\n            return SketchUtil.proposeNewRing(mol, rsz, x1, y1, dx, dy, !this.toolRingFreeform);\n        return [null, null];\n    }\n    determineDragTheta() {\n        let x0 = this.clickX, y0 = this.clickY;\n        let snap = this.snapToGuide(x0, y0);\n        if (snap != null) {\n            x0 = snap[0];\n            y0 = snap[1];\n        }\n        let theta = Math.atan2(this.mouseY - y0, this.mouseX - x0), magnitude = norm_xy(this.mouseX - x0, this.mouseY - y0);\n        if (this.toolRotateIncr > 0)\n            theta = Math.round(theta / this.toolRotateIncr) * this.toolRotateIncr;\n        return [x0, y0, theta, magnitude];\n    }\n    determineMoveDelta() {\n        let x1 = this.clickX, y1 = this.clickY, x2 = this.mouseX, y2 = this.mouseY;\n        if (this.opAtom > 0) {\n            x1 = this.angToX(this.mol.atomX(this.opAtom));\n            y1 = this.angToY(this.mol.atomY(this.opAtom));\n            let snap = this.snapToGuide(x2, y2);\n            if (snap != null) {\n                x2 = snap[0];\n                y2 = snap[1];\n            }\n        }\n        return [x2 - x1, y2 - y1];\n    }\n    snapToGuide(x, y) {\n        if (this.opBond > 0) {\n            let obj = this.pickObject(x, y);\n            if (obj < 0) {\n                let [bfr, bto] = this.mol.bondFromTo(-obj);\n                let px = this.angToX(0.5 * (this.mol.atomX(bfr) + this.mol.atomX(bto)));\n                let py = this.angToY(0.5 * (this.mol.atomY(bfr) + this.mol.atomY(bto)));\n                return [px, py, false];\n            }\n            return null;\n        }\n        let bestDSQ = Number.POSITIVE_INFINITY, bestX = 0, bestY = 0, bestAtom = false;\n        const APPROACH = sqr(0.5 * this.pointScale);\n        if (this.dragGuides != null)\n            for (let i = 0; i < this.dragGuides.length; i++)\n                for (let j = 0; j < this.dragGuides[i].x.length; j++) {\n                    let px = this.dragGuides[i].destX[j], py = this.dragGuides[i].destY[j];\n                    let dsq = norm2_xy(px - x, py - y);\n                    if (dsq < APPROACH && dsq < bestDSQ)\n                        [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, false];\n                }\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let px = this.angToX(this.mol.atomX(n)), py = this.angToY(this.mol.atomY(n));\n            let dsq = norm2_xy(px - x, py - y);\n            if (dsq < APPROACH && dsq < bestDSQ)\n                [bestDSQ, bestX, bestY, bestAtom] = [dsq, px, py, true];\n        }\n        if (isFinite(bestDSQ))\n            return [bestX, bestY, bestAtom];\n        return null;\n    }\n    pickObjectCanvas(x, y, opt = {}) {\n        let limitDist = 0.5 * this.pointScale;\n        let bestItem = 0, bestScore = Number.POSITIVE_INFINITY;\n        if (!opt.noAtoms)\n            for (let n = 0; n < this.layout.numPoints(); n++) {\n                let p = this.layout.getPoint(n);\n                if (p.anum == 0)\n                    continue;\n                let dx = Math.abs(x - p.oval.cx), dy = Math.abs(y - p.oval.cy);\n                let dsq = norm2_xy(dx, dy);\n                let limitDSQ = sqr(Math.max(limitDist, Math.max(p.oval.rw, p.oval.rh)));\n                if (dsq > limitDSQ)\n                    continue;\n                if (dsq < bestScore) {\n                    bestItem = p.anum;\n                    bestScore = dsq;\n                }\n            }\n        if (bestItem != 0)\n            return bestItem;\n        if (!opt.noBonds)\n            for (let n = 0; n < this.layout.numLines(); n++) {\n                let l = this.layout.getLine(n);\n                if (l.bnum == 0)\n                    continue;\n                let x1 = l.line.x1, y1 = l.line.y1;\n                let x2 = l.line.x2, y2 = l.line.y2;\n                if (x < Math.min(x1, x2) - limitDist || y < Math.min(y1, y2) - limitDist ||\n                    x > Math.max(x1, x2) + limitDist || y > Math.max(y1, y2) + limitDist)\n                    continue;\n                let dist = GeomUtil.pointLineSegDistance(x, y, x1, y1, x2, y2);\n                if (dist > limitDist)\n                    continue;\n                if (dist < bestScore) {\n                    bestItem = -l.bnum;\n                    bestScore = dist;\n                }\n            }\n        return bestItem;\n    }\n    pickObject(x, y, opt = {}) {\n        return this.pickObjectCanvas(x, y, opt) || 0;\n    }\n    sketchEffects(mol) {\n        let effects = new RenderEffects();\n        for (let n = 1; n <= mol.numAtoms; n++)\n            if (MolUtil.hasAbbrev(mol, n) && n != this.hoverAtom)\n                effects.dottedRectOutline[n] = 0x808080;\n        effects.overlapAtoms = CoordUtil.overlappingAtomList(mol, 0.2);\n        effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n        effects.atomDecoCol = Vec.numberArray(Theme.foreground, mol.numAtoms);\n        effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n        effects.bondDecoText = Vec.stringArray('', mol.numBonds);\n        effects.bondDecoCol = Vec.numberArray(Theme.foreground, mol.numBonds);\n        effects.bondDecoSize = Vec.numberArray(0.3, mol.numBonds);\n        if (this.viewOpt.showOxState) {\n            for (let n = 1; n <= mol.numAtoms; n++) {\n                let ox = MolUtil.atomOxidationState(mol, n);\n                if (ox != null) {\n                    effects.atomDecoText[n - 1] = MolUtil.oxidationStateText(ox);\n                    effects.atomDecoCol[n - 1] = 0xFF8080;\n                }\n            }\n        }\n        if (this.viewOpt.decoration == DrawCanvasDecoration.Stereochemistry) {\n            if (!this.stereo)\n                this.stereo = Stereochemistry.create(MetaMolecule.createStrict(mol));\n            skip: for (let n = 1; n <= mol.numAtoms; n++) {\n                let chi = this.stereo.atomTetraChirality(n);\n                if (chi == Stereochemistry.STEREO_NONE)\n                    continue;\n                for (let adjb of mol.atomAdjBonds(n))\n                    if (mol.bondOrder(adjb) != 1)\n                        continue skip;\n                if (chi == Stereochemistry.STEREO_UNKNOWN) {\n                    for (let adj of mol.atomAdjList(n))\n                        if (Chemistry.ELEMENT_BLOCKS[mol.atomicNumber(adj)] >= 3)\n                            continue skip;\n                }\n                effects.atomDecoText[n - 1] = chi == Stereochemistry.STEREO_POS ? 'R' :\n                    chi == Stereochemistry.STEREO_NEG ? 'S' :\n                        chi == Stereochemistry.STEREO_UNKNOWN ? 'R/S' : '?';\n                effects.atomDecoCol[n - 1] = 0x00A000;\n            }\n            for (let n = 1; n <= mol.numBonds; n++) {\n                let side = this.stereo.bondSideStereo(n);\n                if (side == Stereochemistry.STEREO_NONE)\n                    continue;\n                effects.bondDecoText[n - 1] = side == Stereochemistry.STEREO_POS ? 'Z' :\n                    side == Stereochemistry.STEREO_NEG ? 'E' :\n                        side == Stereochemistry.STEREO_UNKNOWN ? 'Z/E' : '?';\n                effects.bondDecoCol[n - 1] = 0x00A000;\n            }\n        }\n        else if (this.viewOpt.decoration == DrawCanvasDecoration.MappingNumber) {\n            effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n            effects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n            effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                if (mol.atomMapNum(n) > 0)\n                    effects.atomDecoText[n - 1] = mol.atomMapNum(n).toString();\n        }\n        else if (this.viewOpt.decoration == DrawCanvasDecoration.AtomIndex) {\n            effects.atomDecoText = Vec.stringArray('', mol.numAtoms);\n            effects.atomDecoCol = Vec.numberArray(0x8000FF, mol.numAtoms);\n            effects.atomDecoSize = Vec.numberArray(0.3, mol.numAtoms);\n            for (let n = 1; n <= mol.numAtoms; n++)\n                effects.atomDecoText[n - 1] = n.toString();\n        }\n        return effects;\n    }\n    orientAbbreviation(abbrevAtom, abbrevMol) {\n        const { mol } = this;\n        if (MolUtil.isBlank(abbrevMol))\n            return;\n        if (this.mol.atomAdjCount(abbrevAtom) != 1)\n            return;\n        let nbr = mol.atomAdjList(abbrevAtom)[0];\n        let vx1 = mol.atomX(abbrevAtom) - mol.atomX(nbr), vy1 = mol.atomY(abbrevAtom) - mol.atomY(nbr);\n        let adj = abbrevMol.atomAdjList(1);\n        let vx2 = 0, vy2 = 0, inv = invZ(adj.length);\n        for (let a of adj) {\n            vx2 += abbrevMol.atomX(a) - abbrevMol.atomX(1);\n            vy2 += abbrevMol.atomY(a) - abbrevMol.atomY(1);\n        }\n        vx2 *= inv;\n        vy2 *= inv;\n        let th1 = Math.atan2(vy1, vx1), th2 = Math.atan2(vy2, vx2);\n        CoordUtil.rotateMolecule(abbrevMol, th1 - th2);\n        if (adj.length == 1) {\n            CoordUtil.translateMolecule(abbrevMol, mol.atomX(abbrevAtom) - abbrevMol.atomX(adj[0]), mol.atomY(abbrevAtom) - abbrevMol.atomY(adj[0]));\n            abbrevMol.setAtomPos(1, mol.atomX(nbr), mol.atomY(nbr));\n        }\n        else {\n            CoordUtil.translateMolecule(abbrevMol, mol.atomX(nbr) - abbrevMol.atomX(1), mol.atomY(nbr) - abbrevMol.atomY(1));\n        }\n        for (let b of abbrevMol.atomAdjBonds(1)) {\n            let a = abbrevMol.bondOther(b, 1);\n            if (abbrevMol.atomHExplicit(a) != Molecule.HEXPLICIT_UNKNOWN)\n                continue;\n            abbrevMol.setAtomHExplicit(a, Math.max(0, abbrevMol.atomHydrogens(a)));\n        }\n        abbrevMol.deleteAtomAndBonds(1);\n    }\n}\n//# sourceMappingURL=DrawCanvas.js.map","import { MetaVector } from '../gfx/MetaVector';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { GeomUtil } from '../util/Geom';\nimport { Theme } from '../util/Theme';\nimport { angleDiff, DEGRAD, eventCoords, norm_xy, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nexport var GeomWidgetType;\n(function (GeomWidgetType) {\n    GeomWidgetType[GeomWidgetType[\"Atom\"] = 0] = \"Atom\";\n    GeomWidgetType[GeomWidgetType[\"Bond\"] = 1] = \"Bond\";\n})(GeomWidgetType || (GeomWidgetType = {}));\nexport var GeomWidgetSelType;\n(function (GeomWidgetSelType) {\n    GeomWidgetSelType[GeomWidgetSelType[\"Position\"] = 0] = \"Position\";\n    GeomWidgetSelType[GeomWidgetSelType[\"Link\"] = 1] = \"Link\";\n    GeomWidgetSelType[GeomWidgetSelType[\"Torsion\"] = 2] = \"Torsion\";\n})(GeomWidgetSelType || (GeomWidgetSelType = {}));\nexport class GeomWidget extends Widget {\n    constructor(type, mol, idx) {\n        super();\n        this.type = type;\n        this.mol = mol;\n        this.idx = idx;\n        this.posX = [];\n        this.posY = [];\n        this.linkA = [];\n        this.linkB = [];\n        this.torsA = [];\n        this.torsB = [];\n        this.hovered = null;\n        if (type == GeomWidgetType.Atom) {\n            const atom = idx;\n            let adj = mol.atomAdjList(atom);\n            this.atomSubset = [atom, ...adj];\n            for (let b of mol.atomAdjBonds(atom)) {\n                this.linkA.push(0);\n                this.linkB.push(this.atomSubset.indexOf(mol.bondOther(b, atom)));\n            }\n            let theta = [];\n            for (let a of adj)\n                theta.push(Math.atan2(-(mol.atomY(a) - mol.atomY(atom)), mol.atomX(a) - mol.atomX(atom)));\n            let order = Vec.idxSort(theta);\n            for (let n = 0; n < order.length; n++) {\n                this.torsA.push(order[n] + 1);\n                this.torsB.push(order[n < order.length - 1 ? n + 1 : 0] + 1);\n            }\n            this.selected = { type: GeomWidgetSelType.Position, idx: 0 };\n        }\n        else {\n            const bond = idx;\n            let a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n            this.atomSubset = [...mol.atomAdjList(a1), ...mol.atomAdjList(a2)];\n            let link = (a1, a2) => {\n                this.linkA.push(this.atomSubset.indexOf(a1));\n                this.linkB.push(this.atomSubset.indexOf(a2));\n            };\n            link(a1, a2);\n            for (let a of mol.atomAdjList(a1))\n                if (a != a2)\n                    link(a1, a);\n            for (let a of mol.atomAdjList(a2))\n                if (a != a1)\n                    link(a2, a);\n            this.selected = { type: GeomWidgetSelType.Link, idx: 0 };\n        }\n    }\n    render(parent) {\n        super.render(parent);\n        let divOuter = dom('<div/>').appendTo(this.contentDOM).css({ 'text-align': 'center' });\n        this.divDiagram = dom('<div/>').appendTo(divOuter).css({ 'display': 'inline-block' });\n        this.contentDOM.onClick((event) => this.mouseClick(eventCoords(event, this.divDiagram)));\n        this.contentDOM.onMouseMove((event) => this.mouseMove(eventCoords(event, this.divDiagram)));\n        this.redraw();\n    }\n    selectionAtoms(sel) {\n        const atoms = this.atomSubset;\n        if (sel.type == GeomWidgetSelType.Position)\n            return [atoms[sel.idx]];\n        if (sel.type == GeomWidgetSelType.Link)\n            return [atoms[this.linkA[sel.idx]], atoms[this.linkB[sel.idx]]];\n        if (sel.type == GeomWidgetSelType.Torsion)\n            return [atoms[0], atoms[this.torsA[sel.idx]], atoms[this.torsB[sel.idx]]];\n        return null;\n    }\n    redraw() {\n        this.divDiagram.empty();\n        let w = 250, h = 250;\n        this.posX = [];\n        this.posY = [];\n        const ANG_RAD = 0.25;\n        for (let a of this.atomSubset) {\n            this.posX.push(this.mol.atomX(a));\n            this.posY.push(this.mol.atomY(a));\n        }\n        let loX = Vec.min(this.posX) - ANG_RAD, hiX = Vec.max(this.posX) + ANG_RAD;\n        let loY = Vec.min(this.posY) - ANG_RAD, hiY = Vec.max(this.posY) + ANG_RAD;\n        this.scale = Math.min(40, Math.min((w - 4) / (hiX - loX), (h - 4) / (hiY - loY)));\n        let dx = 0.5 * (w - (hiX - loX) * this.scale), dy = 0.5 * (h - (hiY - loY) * this.scale);\n        for (let n = 0; n < this.atomSubset.length; n++) {\n            this.posX[n] = dx + (this.posX[n] - loX) * this.scale;\n            this.posY[n] = h - (dy + (this.posY[n] - loY) * this.scale);\n        }\n        this.posRad = ANG_RAD * this.scale;\n        let gfx = new MetaVector();\n        gfx.setSize(w, h);\n        let fg = Theme.foreground, bg = Theme.background, outerSel = 0x008FD1, innerSel = 0x47D5D2;\n        for (let n = 0; n < this.atomSubset.length; n++) {\n            if (this.hovered && this.hovered.type == GeomWidgetSelType.Position && this.hovered.idx == n)\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, fg, 1, bg);\n            else if (this.selected && this.selected.type == GeomWidgetSelType.Position && this.selected.idx == n)\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, outerSel, 1, innerSel);\n            else\n                gfx.drawOval(this.posX[n], this.posY[n], this.posRad, this.posRad, MetaVector.NOCOLOUR, 0, fg);\n        }\n        for (let showsel of [1, 2, 3])\n            for (let n = 0; n < this.linkA.length; n++) {\n                let x1 = this.posX[this.linkA[n]], y1 = this.posY[this.linkA[n]];\n                let x2 = this.posX[this.linkB[n]], y2 = this.posY[this.linkB[n]];\n                if (this.hovered && this.hovered.type == GeomWidgetSelType.Link && this.hovered.idx == n) {\n                    if (showsel == 3) {\n                        gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1 + 2);\n                        gfx.drawLine(x1, y1, x2, y2, bg, this.scale * 0.1);\n                    }\n                }\n                else if (this.selected && this.selected.type == GeomWidgetSelType.Link && this.selected.idx == n) {\n                    if (showsel == 2) {\n                        gfx.drawLine(x1, y1, x2, y2, outerSel, this.scale * 0.1 + 2);\n                        gfx.drawLine(x1, y1, x2, y2, innerSel, this.scale * 0.1);\n                    }\n                }\n                else {\n                    if (showsel == 1)\n                        gfx.drawLine(x1, y1, x2, y2, fg, this.scale * 0.1);\n                }\n            }\n        for (let n = 0; n < this.torsA.length; n++) {\n            let cx = this.posX[0], cy = this.posY[0];\n            let dx1 = 0.5 * (this.posX[this.torsA[n]] - cx), dy1 = 0.5 * (this.posY[this.torsA[n]] - cy);\n            let dx2 = 0.5 * (this.posX[this.torsB[n]] - cx), dy2 = 0.5 * (this.posY[this.torsB[n]] - cy);\n            let rad = 0.5 * (norm_xy(dx1, dy1) + norm_xy(dx2, dy2));\n            let theta1 = Math.atan2(dy1, dx1) + 10 * DEGRAD, theta2 = Math.atan2(dy2, dx2) - 10 * DEGRAD, dtheta = angleDiff(theta2, theta1);\n            let ox1 = rad * Math.cos(theta1), oy1 = rad * Math.sin(theta1), ox2 = rad * Math.cos(theta2), oy2 = rad * Math.sin(theta2);\n            let px, py, pf;\n            if (dtheta > 0) {\n                let [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, ox2, oy2);\n                px = Vec.add([ox1, ax1, ax2, ox2], cx);\n                py = Vec.add([oy1, ay1, ay2, oy2], cy);\n                pf = [false, true, true, false];\n            }\n            else {\n                let thetaM = theta1 + 0.5 * (dtheta + TWOPI);\n                let oxM = rad * Math.cos(thetaM), oyM = rad * Math.sin(thetaM);\n                let [ax1, ay1, ax2, ay2] = GeomUtil.arcControlPoints(rad, ox1, oy1, oxM, oyM);\n                let [ax3, ay3, ax4, ay4] = GeomUtil.arcControlPoints(rad, oxM, oyM, ox2, oy2);\n                px = Vec.add([ox1, ax1, ax2, oxM, ax3, ax4, ox2], cx);\n                py = Vec.add([oy1, ay1, ay2, oyM, ay3, ay4, oy2], cy);\n                pf = [false, true, true, false, true, true, false];\n            }\n            if (this.hovered && this.hovered.type == GeomWidgetSelType.Torsion && this.hovered.idx == n) {\n                gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n                gfx.drawPath(px, py, pf, false, bg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n            }\n            else if (this.selected && this.selected.type == GeomWidgetSelType.Torsion && this.selected.idx == n) {\n                gfx.drawPath(px, py, pf, false, outerSel, this.scale * 0.1 + 2, MetaVector.NOCOLOUR, false);\n                gfx.drawPath(px, py, pf, false, innerSel, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n            }\n            else\n                gfx.drawPath(px, py, pf, false, fg, this.scale * 0.1, MetaVector.NOCOLOUR, false);\n        }\n        this.divDiagram.empty();\n        let svg = dom(gfx.createSVG()).appendTo(this.divDiagram).css({ 'pointer-events': 'none' });\n    }\n    mouseClick(xy) {\n        event.stopPropagation();\n        if (this.type == GeomWidgetType.Bond)\n            return;\n        let which = this.whichSelection(xy[0], xy[1]);\n        if (!which)\n            return;\n        if (!this.sameSelection(this.selected, which)) {\n            this.selected = which;\n            this.hovered = null;\n            this.redraw();\n            this.callbackSelect(which);\n        }\n    }\n    mouseMove(xy) {\n        if (this.type == GeomWidgetType.Bond)\n            return;\n        let which = this.whichSelection(xy[0], xy[1]);\n        if (which && this.sameSelection(which, this.selected))\n            which = null;\n        if (!this.sameSelection(this.hovered, which)) {\n            this.hovered = which;\n            this.redraw();\n        }\n    }\n    whichSelection(x, y) {\n        let cx = this.posX[0], cy = this.posY[0];\n        if (norm_xy(x - cx, y - cy) <= this.posRad)\n            return { type: GeomWidgetSelType.Position, idx: 0 };\n        let maxRad = 0;\n        for (let n = 1; n < this.atomSubset.length; n++)\n            maxRad = Math.max(maxRad, norm_xy(this.posX[n] - cx, this.posY[n] - cy) + this.posRad);\n        if (norm_xy(x - cx, y - cy) > maxRad)\n            return null;\n        let theta = Math.atan2(y - cy, x - cx);\n        let closeSel = null, closeDelta = Number.POSITIVE_INFINITY;\n        for (let n = 0; n < this.linkB.length; n++) {\n            let delta = Math.abs(angleDiff(Math.atan2(this.posY[this.linkB[n]] - cy, this.posX[this.linkB[n]] - cx), theta));\n            if (delta < 10 * DEGRAD && delta < closeDelta) {\n                closeSel = { type: GeomWidgetSelType.Link, idx: n };\n                closeDelta = delta;\n            }\n        }\n        for (let n = 0; n < this.torsA.length; n++) {\n            let theta1 = Math.atan2(this.posY[this.torsA[n]] - cy, this.posX[this.torsA[n]] - cx);\n            let theta2 = Math.atan2(this.posY[this.torsB[n]] - cy, this.posX[this.torsB[n]] - cx);\n            let midtheta = theta1 + 0.5 * (angleDiff(theta2, theta1));\n            let delta = Math.abs(angleDiff(midtheta, theta));\n            if (delta < closeDelta) {\n                closeSel = { type: GeomWidgetSelType.Torsion, idx: n };\n                closeDelta = delta;\n            }\n        }\n        return closeSel;\n    }\n    sameSelection(sel1, sel2) {\n        if (sel1 == null && sel2 == null)\n            return true;\n        if (sel1 == null || sel2 == null)\n            return false;\n        return sel1.type == sel2.type && sel1.idx == sel2.idx;\n    }\n}\n//# sourceMappingURL=GeomWidget.js.map","import { dom } from '../util/dom';\nimport { hasInlineCSS, installInlineCSS, Theme } from '../util/Theme';\nimport { colourCode } from '../util/util';\nimport { Widget } from './Widget';\nexport class OptionList extends Widget {\n    constructor(options, isVertical = false) {\n        super();\n        this.options = options;\n        this.isVertical = isVertical;\n        this.padding = 6;\n        this.htmlLabels = false;\n        this.numCols = 0;\n        this.selidx = 0;\n        this.buttonDiv = [];\n        this.auxCell = [];\n        this.callbackSelect = null;\n        if (options.length == 0)\n            throw 'molsync.ui.OptionList: must provide a list of option labels.';\n        if (!hasInlineCSS('option'))\n            installInlineCSS('option', this.composeCSS());\n    }\n    getSelectedIndex() {\n        return this.selidx;\n    }\n    getSelectedValue() {\n        return this.options[this.selidx];\n    }\n    getAuxiliaryCell(idx) {\n        return this.auxCell[idx].el;\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    render(parent) {\n        super.render(parent);\n        this.contentDOM.css({ 'display': 'block', 'baseline-shift': '1.5em' });\n        this.buttonDiv = [];\n        this.auxCell = [];\n        let table = dom('<table class=\"wmk-option-table\"/>').appendTo(this.contentDOM);\n        let tr = this.isVertical ? null : dom('<tr/>').appendTo(table);\n        for (let n = 0; n < this.options.length; n++) {\n            if (this.isVertical || (this.numCols > 0 && n > 0 && n % this.numCols == 0))\n                tr = dom('<tr/>').appendTo(table);\n            let td = dom('<td class=\"wmk-option-cell\"/>').appendTo(tr);\n            let div = dom('<div class=\"wmk-option\"/>').appendTo(td);\n            div.css({ 'padding': `${this.padding}px` });\n            div.onClick(() => this.clickButton(n));\n            this.buttonDiv.push(div);\n            if (this.isVertical) {\n                td = dom('<td style=\"vertical-align: middle;\"/>').appendTo(tr);\n                this.auxCell.push(td);\n            }\n        }\n        this.updateButtons();\n    }\n    clickButton(idx) {\n        if (idx == this.selidx)\n            return;\n        this.setSelectedIndex(idx);\n        if (this.callbackSelect)\n            this.callbackSelect(idx, this);\n    }\n    setSelectedIndex(idx) {\n        if (this.selidx == idx)\n            return;\n        this.selidx = idx;\n        this.updateButtons();\n    }\n    setSelectedValue(val) {\n        let idx = this.options.indexOf(val);\n        if (idx >= 0)\n            this.setSelectedIndex(idx);\n    }\n    updateButtons() {\n        for (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++) {\n            let div = this.buttonDiv[n];\n            let txt = this.options[n];\n            if (txt.length == 0 && n == this.selidx)\n                div.setText('\\u00A0\\u2716\\u00A0');\n            else if (txt.length == 0)\n                div.setText('\\u00A0\\u00A0\\u00A0');\n            else if (this.htmlLabels)\n                div.setHTML(txt);\n            else\n                div.setText(txt);\n            div.removeClass('wmk-option-unselected wmk-option-selected');\n            if (n != this.selidx)\n                div.addClass('wmk-option-unselected');\n            else\n                div.addClass('wmk-option-selected');\n        }\n    }\n    composeCSS() {\n        let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n        let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n        return `\n\t\t\t.wmk-option\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tline-height: 1.2em;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-option-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-option-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-option-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-option-cell\n\t\t\t{\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n    }\n}\n//# sourceMappingURL=OptionList.js.map","import { dom } from '../util/dom';\nimport { hasInlineCSS, installInlineCSS, Theme } from '../util/Theme';\nimport { colourCode } from '../util/util';\nimport { Widget } from './Widget';\nexport class TabBar extends Widget {\n    constructor(options) {\n        super();\n        this.options = options;\n        this.unionHeight = false;\n        this.selidx = 0;\n        this.buttonDiv = [];\n        this.panelDiv = [];\n        this.padding = 6;\n        this.callbackSelect = null;\n        if (!hasInlineCSS('tabbar'))\n            installInlineCSS('tabbar', this.composeCSS());\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    getSelectedIndex() {\n        return this.selidx;\n    }\n    getSelectedValue() {\n        return this.options[this.selidx];\n    }\n    getPanelDOM(idxOrName) {\n        let idx = typeof idxOrName == 'number' ? idxOrName : this.options.indexOf(idxOrName);\n        if (idx < 0)\n            return null;\n        return this.panelDiv[idx];\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'grid' });\n        grid.css({ 'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em' });\n        let columns = '[start] 1fr ';\n        for (let n = 0; n < this.options.length; n++)\n            columns += '[btn' + n + '] auto ';\n        columns += '[btnX] 1fr [end]';\n        grid.css({ 'grid-template-columns': columns });\n        let underline = dom('<div/>').appendTo(grid);\n        underline.css({ 'grid-column': 'start / end', 'grid-row': '1', 'height': '100%' });\n        underline.css({ 'border-bottom': '1px solid #C0C0C0' });\n        for (let n = 0; n < this.options.length; n++) {\n            let outline = dom('<div class=\"wmk-tabbar-cell\"/>').appendTo(grid);\n            outline.css({ 'grid-column': 'btn' + n, 'grid-row': '1' });\n            let btn = dom('<div class=\"wmk-tabbar\"/>').appendTo(outline);\n            btn.css({ 'padding': `${this.padding}px` });\n            btn.onClick(() => this.clickButton(n));\n            this.buttonDiv.push(btn);\n            let panel = dom('<div/>').appendTo(grid);\n            panel.css({ 'grid-column': 'start / end', 'grid-row': '2' });\n            panel.css({ 'align-self': 'start', 'justify-self': 'center', 'width': '100%' });\n            this.panelDiv.push(panel);\n        }\n        this.updateButtons();\n    }\n    clickButton(idx) {\n        if (idx == this.selidx)\n            return;\n        this.setSelectedIndex(idx);\n        if (this.callbackSelect)\n            this.callbackSelect(idx, this);\n    }\n    setSelectedIndex(idx) {\n        if (this.selidx == idx)\n            return;\n        this.selidx = idx;\n        let dom = this.contentDOM;\n        dom.setCSS('min-width', `${dom.width()}px`);\n        this.updateButtons();\n    }\n    setSelectedValue(val) {\n        let idx = this.options.indexOf(val);\n        if (idx >= 0)\n            this.setSelectedIndex(idx);\n    }\n    rotateSelected(dir) {\n        this.setSelectedIndex((this.selidx + dir + this.options.length) % this.options.length);\n    }\n    updateButtons() {\n        for (let n = 0; n < this.options.length && n < this.buttonDiv.length; n++) {\n            let div = this.buttonDiv[n];\n            let txt = this.options[n];\n            if (txt.length == 0 && n == this.selidx)\n                div.setText('\\u00A0\\u2716\\u00A0');\n            else if (txt.length == 0)\n                div.setText('\\u00A0\\u00A0\\u00A0');\n            else\n                div.setText(txt);\n            div.removeClass('wmk-tabbar-unselected wmk-tabbar-selected');\n            if (n != this.selidx)\n                div.addClass('wmk-tabbar-unselected');\n            else\n                div.addClass('wmk-tabbar-selected');\n            if (this.unionHeight)\n                this.panelDiv[n].setCSS('visibility', n == this.selidx ? 'visible' : 'hidden');\n            else\n                this.panelDiv[n].setCSS('display', n == this.selidx ? 'block' : 'none');\n        }\n    }\n    composeCSS() {\n        let lowlight = colourCode(Theme.lowlight), lowlightEdge1 = colourCode(Theme.lowlightEdge1), lowlightEdge2 = colourCode(Theme.lowlightEdge2);\n        let highlight = colourCode(Theme.highlight), highlightEdge1 = colourCode(Theme.highlightEdge1), highlightEdge2 = colourCode(Theme.highlightEdge2);\n        return `\n\t\t\t.wmk-tabbar\n\t\t\t{\n\t\t\t\tmargin-bottom: 0;\n\t\t\t\tfont-family: 'Open Sans', sans-serif;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tfont-weight: normal;\n\t\t\t\ttext-align: center;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\tvertical-align: middle;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t\t.wmk-tabbar-selected\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #008FD2;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${lowlightEdge1}, ${lowlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected\n\t\t\t{\n\t\t\t\tcolor: #333;\n\t\t\t\tbackground-color: white;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #FFFFFF, #E0E0E0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:hover\n\t\t\t{\n\t\t\t\tbackground-color: #808080;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, #F0F0F0, #D0D0D0);\n\t\t\t}\n\t\t\t.wmk-tabbar-unselected:active\n\t\t\t{\n\t\t\t\tcolor: white;\n\t\t\t\tbackground-color: #00C000;\n\t\t\t\tbackground-image: linear-gradient(to right bottom, ${highlightEdge1}, ${highlightEdge2});\n\t\t\t}\n\t\t\t.wmk-tabbar-table\n\t\t\t{\n\t\t\t\tmargin: 1px;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-collapse: collapse;\n\t\t\t}\n\t\t\t.wmk-tabbar-cell\n\t\t\t{\n\t\t\t\tmargin: 0 -1px -1px 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tborder-width: 0;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: #808080;\n\t\t\t}\n\t\t`;\n    }\n}\n//# sourceMappingURL=TabBar.js.map","import { Molecule } from '../mol/Molecule';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nexport class ExtraFieldsWidget extends Widget {\n    constructor(fields) {\n        super();\n        this.fields = fields;\n    }\n    render(parent) {\n        super.render(parent);\n        this.divFields = dom('<div/>').appendTo(this.contentDOM);\n        this.fillTable();\n        let divButtons = dom('<div/>').appendTo(this.contentDOM).css({ 'text-align': 'center' });\n        let btnExtra = dom('<button class=\"wmk-button wmk-button-default\">Extra</button>').appendTo(divButtons);\n        btnExtra.onClick(() => {\n            this.fields.push(Molecule.PREFIX_EXTRA);\n            this.fillTable();\n        });\n        let btnTransient = dom('<button class=\"wmk-button wmk-button-default\">Transient</button>').appendTo(divButtons).css({ 'margin-left': '0.5em' });\n        btnTransient.onClick(() => {\n            this.fields.push(Molecule.PREFIX_TRANSIENT);\n            this.fillTable();\n        });\n    }\n    getExtraFields() {\n        let extra = [];\n        for (let field of this.fields)\n            if (!field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1)\n                extra.push(field);\n        return extra;\n    }\n    getTransientFields() {\n        let transient = [];\n        for (let field of this.fields)\n            if (field.startsWith(Molecule.PREFIX_TRANSIENT) && field.length > 1)\n                transient.push(field);\n        return transient;\n    }\n    fillTable() {\n        this.divFields.empty();\n        if (this.fields.length == 0)\n            return;\n        let table = dom('<table/>').appendTo(this.divFields).css({ 'width': '100%' });\n        let tr = dom('<tr/>').appendTo(table);\n        dom('<td/>').appendTo(tr).css({ 'text-align': 'right', 'font-weight': 'bold', 'text-decoration': 'underline' }).setText('Type');\n        dom('<td/>').appendTo(tr).css({ 'font-weight': 'bold', 'text-decoration': 'underline' }).setText('Value');\n        for (let n = 0; n < this.fields.length; n++) {\n            let strType = '?', strValue = '';\n            if (this.fields[n].length > 0) {\n                strType = this.fields[n].charAt(0);\n                strValue = this.fields[n].substring(1);\n            }\n            tr = dom('<tr/>').appendTo(table);\n            let tdType = dom('<td/>').appendTo(tr).css({ 'text-align': 'right' }), tdValue = dom('<td/>').appendTo(tr), tdButton = dom('<td/>').appendTo(tr);\n            dom('<span/>').appendTo(tdType).css({ 'padding': '0.2em', 'border': '1px solid black', 'background-color': '#C0C0C0' }).setText(strType);\n            let input = dom('<input size=\"20\"/>').appendTo(tdValue).css({ 'width': '100%', 'font': 'inherit' });\n            input.setValue(strValue);\n            input.onInput(() => { this.fields[n] = strType + input.getValue(); });\n            let btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">\\u{2716}</button>').appendTo(tdButton).css({ 'margin-left': '0.5em' });\n            btnDelete.onClick(() => {\n                this.fields.splice(n, 1);\n                this.fillTable();\n            });\n        }\n    }\n}\n//# sourceMappingURL=ExtraFieldsWidget.js.map","import { Chemistry } from '../mol/Chemistry';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nconst POSITION_TABLE_Y = [\n    1, 1,\n    2, 2, 2, 2, 2, 2, 2, 2,\n    3, 3, 3, 3, 3, 3, 3, 3,\n    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n    6, 6,\n    8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5,\n    6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n    7, 7,\n    9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5,\n    7, 7, 7, 7, 7, 7, 7, 7, 7, 7\n];\nconst POSITION_TABLE_X = [\n    1, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\n    1, 2,\n    3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n];\nconst CSS_PERIODICTABLE = `\n\t*.wmk-periodictable-element\n\t{\n\t\tborder: 1px solid black;\n\t\tborder-radius: 2px;\n\t\tmargin: 0;\n\t\tmin-width: 2em;\n\t\tpadding: 0.4em 0 0.3em 0;\n\t\ttext-align: center;\n\t\tcolor: #FFFFFF;\n\t\tcursor: pointer;\n\t}\n\t*.wmk-periodictable-block1\n\t{\n\t\tbackground-color: #313062;\n\t}\n\t*.wmk-periodictable-block1:hover\n\t{\n\t\tbackground-color: #414072;\n\t}\n\t*.wmk-periodictable-block2\n\t{\n\t\tbackground-color: #205224;\n\t}\n\t*.wmk-periodictable-block2:hover\n\t{\n\t\tbackground-color: #306234;\n\t}\n\t*.wmk-periodictable-block3\n\t{\n\t\tbackground-color: #522818;\n\t}\n\t*.wmk-periodictable-block3:hover\n\t{\n\t\tbackground-color: #623828;\n\t}\n\t*.wmk-periodictable-block4\n\t{\n\t\tbackground-color: #575212;\n\t}\n\t*.wmk-periodictable-block4:block\n\t{\n\t\tbackground-color: #676222;\n\t}\n\t*.wmk-periodictable-selected\n\t{\n\t\tbackground-color: #FFFFFF !important;\n\t\tcolor: #000000 !important;\n\t\tcursor: default;\n\t}\n`;\nexport class PeriodicTableWidget extends Widget {\n    constructor() {\n        super();\n        this.divList = [];\n        this.selectedAtno = [];\n        installInlineCSS('periodictable', CSS_PERIODICTABLE);\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM).css({ 'display': 'grid' });\n        grid.css({ 'align-items': 'center', 'justify-content': 'start', 'gap': '1px' });\n        let row = POSITION_TABLE_Y.map((y) => Math.round(2 * y) + 1);\n        let col = POSITION_TABLE_X.map((x) => Math.round(2 * x) + 1);\n        let num = row.length;\n        for (let n = 0; n < num; n++) {\n            let div = dom('<div/>').appendTo(grid);\n            div.css({ 'grid-row': `${row[n]} / span 2`, 'grid-column': `${col[n]} / span 2` });\n            div.addClass('wmk-periodictable-element');\n            let blk = Chemistry.ELEMENT_BLOCKS[n + 1];\n            if (blk == 1)\n                div.addClass('wmk-periodictable-block1');\n            else if (blk == 2)\n                div.addClass('wmk-periodictable-block2');\n            else if (blk == 3)\n                div.addClass('wmk-periodictable-block3');\n            else if (blk == 4)\n                div.addClass('wmk-periodictable-block4');\n            let el = Chemistry.ELEMENTS[n + 1];\n            div.setText(el);\n            this.divList.push(div);\n            div.onClick(() => {\n                this.changeElement(el);\n                this.callbackSelect(el);\n            });\n            div.onDblClick((event) => {\n                this.callbackDoubleClick();\n                event.preventDefault();\n                event.stopPropagation();\n            });\n        }\n    }\n    onSelect(callback) {\n        this.callbackSelect = callback;\n    }\n    onDoubleClick(callback) {\n        this.callbackDoubleClick = callback;\n    }\n    changeElement(element) {\n        let atno = Chemistry.ELEMENTS.indexOf(element);\n        this.selectedAtno = [atno];\n        this.updateSelected();\n    }\n    setSelectedElements(elementList) {\n        this.selectedAtno = elementList.map((el) => Chemistry.ELEMENTS.indexOf(el)).filter((atno) => atno > 0);\n        this.updateSelected();\n    }\n    updateSelected() {\n        for (let n = 1; n <= this.divList.length; n++) {\n            if (this.selectedAtno.includes(n))\n                this.divList[n - 1].addClass('wmk-periodictable-selected');\n            else\n                this.divList[n - 1].removeClass('wmk-periodictable-selected');\n        }\n    }\n}\n//# sourceMappingURL=PeriodicTableWidget.js.map","import { QueryUtil } from '../mol/QueryUtil';\nimport { OptionList } from '../ui/OptionList';\nimport { Widget } from '../ui/Widget';\nimport { dom } from '../util/dom';\nimport { Vec } from '../util/Vec';\nexport class QueryFieldsWidget extends Widget {\n    constructor(mol, atom, bond) {\n        super();\n        this.mol = mol;\n        this.atom = atom;\n        this.bond = bond;\n    }\n    render(parent) {\n        super.render(parent);\n        let grid = dom('<div/>').appendTo(this.contentDOM);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[title] auto [value] auto [end]' });\n        let row = 0;\n        let makeInput = () => {\n            let input = dom('<input size=\"20\"/>').appendTo(grid).css({ 'grid-area': `${row} / value` });\n            return input;\n        };\n        let makeToggleInput = () => {\n            let div = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value`, 'dispkay': 'flex' });\n            let lbl = dom('<label/>').appendTo(div).css({ 'margin-right': '0.5em' });\n            let chk = dom('<input type=\"checkbox\"/>').appendTo(lbl);\n            lbl.appendText('Not');\n            let input = dom('<input size=\"20\"/>').appendTo(div).css({ 'flex-grow': '1' });\n            return [chk, input];\n        };\n        if (this.atom > 0) {\n            dom('<div>Charges</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputCharges = makeInput();\n            dom('<div>Aromatic</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optAromatic = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optAromatic.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div>Unsaturated</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optUnsaturated = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optUnsaturated.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div>Elements</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotElements, this.inputElements] = makeToggleInput();\n            dom('<div>Ring Sizes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n            dom('<div>Ring Block</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optRingBlock.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div># Small Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div># Ring Bonds</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputRingBonds = makeInput();\n            dom('<div>Adjacency</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputAdjacency = makeInput();\n            dom('<div>Bond Sums</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputBondSums = makeInput();\n            dom('<div>Valences</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputValences = makeInput();\n            dom('<div>Hydrogens</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputHydrogens = makeInput();\n            dom('<div>Isotopes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputIsotopes = makeInput();\n            this.setupAtom();\n        }\n        else {\n            dom('<div>Ring Sizes</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            [this.chkNotRingSizes, this.inputRingSizes] = makeToggleInput();\n            dom('<div>Ring Block</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.optRingBlock = new OptionList(['Maybe', 'Yes', 'No']);\n            this.optRingBlock.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / value` }));\n            dom('<div># Small Rings</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputNumRings = makeInput();\n            dom('<div>Bond Orders</div>').appendTo(grid).css({ 'grid-area': `${++row} / title` });\n            this.inputOrders = makeInput();\n            this.setupBond();\n        }\n    }\n    updateAtom() {\n        const { mol, atom } = this;\n        QueryUtil.deleteQueryAtomAll(mol, atom);\n        let chg = this.splitNumbers(this.inputCharges.getValue());\n        if (chg)\n            QueryUtil.setQueryAtomCharges(mol, atom, chg);\n        let arom = this.optAromatic.getSelectedIndex();\n        if (arom > 0)\n            QueryUtil.setQueryAtomAromatic(mol, atom, arom == 1);\n        let unsat = this.optUnsaturated.getSelectedIndex();\n        if (unsat > 0)\n            QueryUtil.setQueryAtomUnsaturated(mol, atom, unsat == 1);\n        let elem = this.splitStrings(this.inputElements.getValue());\n        if (elem) {\n            if (!this.chkNotElements.elInput.checked)\n                QueryUtil.setQueryAtomElements(mol, atom, elem);\n            else\n                QueryUtil.setQueryAtomElementsNot(mol, atom, elem);\n        }\n        let ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n        if (ringsz) {\n            if (!this.chkNotRingSizes.elInput.checked)\n                QueryUtil.setQueryAtomRingSizes(mol, atom, ringsz);\n            else\n                QueryUtil.setQueryAtomRingSizesNot(mol, atom, ringsz);\n        }\n        let ringblk = this.optRingBlock.getSelectedIndex();\n        if (ringblk > 0)\n            QueryUtil.setQueryAtomRingBlock(mol, atom, ringblk == 1);\n        let nring = this.splitNumbers(this.inputNumRings.getValue());\n        if (nring)\n            QueryUtil.setQueryAtomNumRings(mol, atom, nring);\n        let rbc = this.splitNumbers(this.inputRingBonds.getValue());\n        if (rbc)\n            QueryUtil.setQueryAtomRingBonds(mol, atom, rbc);\n        let adj = this.splitNumbers(this.inputAdjacency.getValue());\n        if (adj)\n            QueryUtil.setQueryAtomAdjacency(mol, atom, adj);\n        let bond = this.splitNumbers(this.inputBondSums.getValue());\n        if (bond)\n            QueryUtil.setQueryAtomBondSums(mol, atom, bond);\n        let val = this.splitNumbers(this.inputValences.getValue());\n        if (val)\n            QueryUtil.setQueryAtomValences(mol, atom, val);\n        let hyd = this.splitNumbers(this.inputHydrogens.getValue());\n        if (hyd)\n            QueryUtil.setQueryAtomHydrogens(mol, atom, hyd);\n        let iso = this.splitNumbers(this.inputIsotopes.getValue());\n        if (iso)\n            QueryUtil.setQueryAtomIsotope(mol, atom, iso);\n    }\n    updateBond() {\n        const { mol, bond } = this;\n        QueryUtil.deleteQueryBondAll(mol, bond);\n        let ringsz = this.splitNumbers(this.inputRingSizes.getValue());\n        if (ringsz) {\n            if (!this.chkNotRingSizes.elInput.checked)\n                QueryUtil.setQueryBondRingSizes(mol, bond, ringsz);\n            else\n                QueryUtil.setQueryBondRingSizesNot(mol, bond, ringsz);\n        }\n        let ringblk = this.optRingBlock.getSelectedIndex();\n        if (ringblk > 0)\n            QueryUtil.setQueryBondRingBlock(mol, bond, ringblk == 1);\n        let nring = this.splitNumbers(this.inputNumRings.getValue());\n        if (nring)\n            QueryUtil.setQueryBondNumRings(mol, bond, nring);\n        let order = this.splitNumbers(this.inputOrders.getValue());\n        if (order)\n            QueryUtil.setQueryBondOrders(mol, bond, order);\n    }\n    setupAtom() {\n        const { mol, atom } = this;\n        let chg = QueryUtil.queryAtomCharges(mol, atom);\n        let arom = QueryUtil.queryAtomAromatic(mol, atom);\n        let unsat = QueryUtil.queryAtomUnsaturated(mol, atom);\n        let elem = QueryUtil.queryAtomElements(mol, atom);\n        let elemNot = QueryUtil.queryAtomElementsNot(mol, atom);\n        let ringsz = QueryUtil.queryAtomRingSizes(mol, atom);\n        let ringszNot = QueryUtil.queryAtomRingSizesNot(mol, atom);\n        let ringblk = QueryUtil.queryAtomRingBlock(mol, atom);\n        let nring = QueryUtil.queryAtomNumRings(mol, atom);\n        let rbc = QueryUtil.queryAtomRingBonds(mol, atom);\n        let adj = QueryUtil.queryAtomAdjacency(mol, atom);\n        let bond = QueryUtil.queryAtomBondSums(mol, atom);\n        let val = QueryUtil.queryAtomValences(mol, atom);\n        let hyd = QueryUtil.queryAtomHydrogens(mol, atom);\n        let iso = QueryUtil.queryAtomIsotope(mol, atom);\n        let frag = QueryUtil.queryAtomSubFrags(mol, atom);\n        let fragNot = QueryUtil.queryAtomSubFragsNot(mol, atom);\n        this.inputCharges.setValue(Vec.notBlank(chg) ? chg.join(',') : '');\n        this.optAromatic.setSelectedIndex(arom == null ? 0 : arom ? 1 : 2);\n        this.optUnsaturated.setSelectedIndex(unsat == null ? 0 : unsat ? 1 : 2);\n        this.chkNotElements.elInput.checked = Vec.isBlank(elem) && Vec.notBlank(elemNot);\n        this.inputElements.setValue(Vec.notBlank(elem) ? elem.join(',') : Vec.notBlank(elemNot) ? elemNot.join(',') : '');\n        this.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n        this.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n        this.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n        this.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n        this.inputRingBonds.setValue(Vec.notBlank(rbc) ? rbc.join(',') : '');\n        this.inputAdjacency.setValue(Vec.notBlank(adj) ? adj.join(',') : '');\n        this.inputBondSums.setValue(Vec.notBlank(bond) ? bond.join(',') : '');\n        this.inputValences.setValue(Vec.notBlank(val) ? val.join(',') : '');\n        this.inputHydrogens.setValue(Vec.notBlank(hyd) ? hyd.join(',') : '');\n        this.inputIsotopes.setValue(Vec.notBlank(iso) ? iso.join(',') : '');\n    }\n    setupBond() {\n        const { mol, bond } = this;\n        let ringsz = QueryUtil.queryBondRingSizes(mol, bond);\n        let ringszNot = QueryUtil.queryBondRingSizesNot(mol, bond);\n        let ringblk = QueryUtil.queryBondRingBlock(mol, bond);\n        let nring = QueryUtil.queryBondNumRings(mol, bond);\n        let order = QueryUtil.queryBondOrders(mol, bond);\n        this.chkNotRingSizes.elInput.checked = Vec.isBlank(ringsz) && Vec.notBlank(ringszNot);\n        this.inputRingSizes.setValue(Vec.notBlank(ringsz) ? ringsz.join(',') : Vec.notBlank(ringszNot) ? ringszNot.join(',') : '');\n        this.optRingBlock.setSelectedIndex(ringblk == null ? 0 : ringblk ? 1 : 2);\n        this.inputNumRings.setValue(Vec.notBlank(nring) ? nring.join(',') : '');\n        this.inputOrders.setValue(Vec.notBlank(order) ? order.join(',') : '');\n    }\n    splitStrings(str) {\n        let list = [];\n        if (str)\n            for (let bit of str.split(/[\\s\\,\\;]+/))\n                if (bit)\n                    list.push(bit);\n        return list.length ? list : null;\n    }\n    splitNumbers(str) {\n        let list = [];\n        if (str)\n            for (let bit of str.split(/[\\s\\,\\;]+/)) {\n                if (bit.startsWith('+'))\n                    bit = bit.substring(1);\n                let num = parseInt(bit);\n                if (!isNaN(num))\n                    list.push(num);\n            }\n        return list.length ? list : null;\n    }\n}\n//# sourceMappingURL=QueryFieldsWidget.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { Molecule } from '../mol/Molecule';\nimport { MolUtil } from '../mol/MolUtil';\nimport { Dialog } from '../dialog/Dialog';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { TabBar } from '../ui/TabBar';\nimport { dom } from '../util/dom';\nimport { Theme } from '../util/Theme';\nimport { angleDiffPos, colourCode, DEGRAD, norm_xy, RADDEG } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { ExtraFieldsWidget } from './ExtraFieldsWidget';\nimport { GeomWidget, GeomWidgetSelType, GeomWidgetType } from './GeomWidget';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { PeriodicTableWidget } from './PeriodicTableWidget';\nimport { QueryFieldsWidget } from './QueryFieldsWidget';\nexport class EditAtom extends Dialog {\n    constructor(mol, atom, proxyClip, callbackApply) {\n        super();\n        this.atom = atom;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.newX = 0;\n        this.newY = 0;\n        this.tabs = null;\n        this.abbrevList = null;\n        this.svgAbbrev = null;\n        this.abbrevIndices = [];\n        this.currentAbbrev = -1;\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Edit Atom';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnApply.onClick(() => this.applyChanges());\n        if (this.atom > 0) {\n            this.tabs = new TabBar(['Atom', 'Abbreviation', 'Geometry', 'Query', 'Extra']);\n            this.tabs.render(body);\n            this.tabs.onSelect((idx) => this.selectedTab(idx));\n            this.populateAtom(this.tabs.getPanelDOM('Atom'));\n            this.populateAbbreviation(this.tabs.getPanelDOM('Abbreviation'));\n            if (this.atom > 0)\n                this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n            this.populateQuery(this.tabs.getPanelDOM('Query'));\n            this.populateExtra(this.tabs.getPanelDOM('Extra'));\n        }\n        else {\n            this.populateAtom(body);\n        }\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                if (event.key == \"Enter\")\n                    this.applyChanges();\n                else if (event.key == \"Escape\")\n                    this.close();\n                else if (event.key == \"PageUp\") {\n                    this.tabs.rotateSelected(-1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                else if (event.key == \"PageDown\") {\n                    this.tabs.rotateSelected(1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                event.stopPropagation();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    applyChanges() {\n        this.mol.keepTransient = true;\n        this.updateMolecule();\n        let selTab = this.tabs ? this.tabs.getSelectedValue() : null;\n        if (selTab == 'Abbreviation')\n            this.updateAbbrev();\n        if (selTab == 'Geometry')\n            this.updateGeometry();\n        if (selTab == 'Query')\n            this.updateQuery();\n        if (selTab == 'Extra')\n            this.updateExtra();\n        this.mol.keepTransient = false;\n        if (this.callbackApply)\n            this.callbackApply(this);\n    }\n    populateAtom(panel) {\n        let grid = dom('<div/>').appendTo(panel);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        grid.appendHTML('<div style=\"grid-area: 1 / col0;\">Symbol</div>');\n        this.inputSymbol = dom('<input size=\"20\"/>').appendTo(grid);\n        this.inputSymbol.css({ 'grid-area': '1 / col1 / auto / col4}' });\n        this.inputSymbol.onInput(() => this.periodicWidget.changeElement(this.inputSymbol.getValue()));\n        grid.appendHTML('<div style=\"grid-area: 2 / col0;\">Charge</div>');\n        this.inputCharge = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputCharge.css({ 'grid-area': '2 / col1' });\n        grid.appendHTML('<div style=\"grid-area: 2 / col2;\">Unpaired</div>');\n        this.inputUnpaired = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputUnpaired.css({ 'grid-area': '2 / col3' });\n        grid.appendHTML('<div style=\"grid-area: 3 / col0;\">Hydrogens</div>');\n        this.optionHydrogen = new OptionList(['Auto', 'None', '1', '2', '3', '4', 'Other']);\n        this.optionHydrogen.render(dom('<div style=\"grid-area: 3 / col1 / auto / col3\"/>').appendTo(grid));\n        this.optionHydrogen.onSelect((idx) => this.inputHydrogen.elInput.disabled = idx != 6);\n        this.inputHydrogen = dom('<input type=\"number\" size=\"4\"/>').appendTo(grid);\n        this.inputHydrogen.css({ 'grid-area': '3 / col3' });\n        this.inputHydrogen.elInput.disabled = true;\n        grid.appendHTML('<div style=\"grid-area: 4 / col0;\">Isotope</div>');\n        this.optionIsotope = new OptionList(['Natural', 'Enriched']);\n        this.optionIsotope.render(dom('<div style=\"grid-area: 4 / col1 / auto / col3\"/>').appendTo(grid));\n        this.optionIsotope.onSelect((idx) => this.inputIsotope.elInput.disabled = idx == 0);\n        this.inputIsotope = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputIsotope.css({ 'grid-area': '4 / col3' });\n        this.inputIsotope.elInput.disabled = true;\n        grid.appendHTML('<div style=\"grid-area: 5 / col0;\">Mapping</div>');\n        this.inputMapping = dom('<input type=\"number\" size=\"6\"/>').appendTo(grid);\n        this.inputMapping.css({ 'grid-area': '5 / col1' });\n        grid.appendHTML('<div style=\"grid-area: 5 / col2;\">Index</div>');\n        this.inputIndex = dom('<input type=\"number\" size=\"6\" readonly=\"readonly\"/>').appendTo(grid);\n        this.inputIndex.css({ 'grid-area': '5 / col3' });\n        let divPeriodic = dom('<div/>').appendTo(grid).css({ 'grid-area': '6 / start / 6 / end' });\n        this.periodicWidget = new PeriodicTableWidget();\n        this.periodicWidget.onSelect((element) => this.inputSymbol.setValue(element));\n        this.periodicWidget.onDoubleClick(() => this.applyChanges());\n        this.periodicWidget.render(divPeriodic);\n        const mol = this.mol, atom = this.atom;\n        if (atom > 0) {\n            this.inputSymbol.setValue(mol.atomElement(atom));\n            this.inputCharge.setValue(mol.atomCharge(atom).toString());\n            this.inputUnpaired.setValue(mol.atomUnpaired(atom).toString());\n            let hc = mol.atomHExplicit(atom);\n            if (hc == Molecule.HEXPLICIT_UNKNOWN) {\n                this.optionHydrogen.setSelectedIndex(0);\n                this.inputHydrogen.setValue(mol.atomHydrogens(atom).toString());\n                this.inputHydrogen.elInput.disabled = true;\n            }\n            else if (hc <= 4) {\n                this.optionHydrogen.setSelectedIndex(hc + 1);\n                this.inputHydrogen.setValue(hc.toString());\n                this.inputHydrogen.elInput.disabled = true;\n            }\n            else {\n                this.optionHydrogen.setSelectedIndex(6);\n                this.inputHydrogen.setValue(hc.toString());\n                this.inputHydrogen.elInput.disabled = false;\n            }\n            this.optionIsotope.setSelectedIndex(mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL ? 0 : 1);\n            if (mol.atomIsotope(atom) != Molecule.ISOTOPE_NATURAL)\n                this.inputIsotope.setValue(mol.atomIsotope(atom).toString());\n            this.inputIsotope.elInput.disabled = mol.atomIsotope(atom) == Molecule.ISOTOPE_NATURAL;\n            this.inputMapping.setValue(mol.atomMapNum(atom).toString());\n            this.inputIndex.setValue(atom.toString());\n            this.periodicWidget.changeElement(mol.atomElement(atom));\n        }\n    }\n    populateAbbreviation(panel) {\n        let divFlex = dom('<div/>').appendTo(panel).css({ 'display': 'flex', 'align-items': 'flex-start' });\n        divFlex.css({ 'max-width': '60vw', 'max-height': '50vh', 'overflow-y': 'scroll' });\n        let spanSearch = dom('<div/>').appendTo(divFlex).css({ 'margin-right': '0.5em', 'flex': '0 0' });\n        let spanList = dom('<div/>').appendTo(divFlex).css({ 'flex': '1 1 100%' });\n        this.inputAbbrevSearch = dom('<input size=\"10\"/>').appendTo(spanSearch);\n        this.inputAbbrevSearch.setAttr('placeholder', 'Search');\n        let lastSearch = '';\n        this.inputAbbrevSearch.onKeyDown((event) => {\n            if (event.key == \"ArrowUp\")\n                this.cycleAbbreviation(-1);\n            else if (event.key == \"ArrowDown\")\n                this.cycleAbbreviation(1);\n        });\n        this.inputAbbrevSearch.onInput(() => {\n            let search = this.inputAbbrevSearch.getValue();\n            if (search == lastSearch)\n                return;\n            lastSearch = search;\n            this.fillAbbreviations();\n        });\n        let divButtons = dom('<div/>').appendTo(spanSearch).css({ 'margin-top': '0.5em' });\n        let btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(divButtons);\n        btnClear.onClick(() => {\n            this.selectAbbreviation(-1);\n            if (this.atom > 0 && MolUtil.hasAbbrev(this.mol, this.atom))\n                this.applyChanges();\n        });\n        this.tableAbbrev = dom('<table/>').appendTo(spanList).css({ 'border-collapse': 'collapse', 'width': '100%' });\n        this.fillAbbreviations();\n    }\n    populateGeometry(panel) {\n        const { mol, atom } = this;\n        let divContainer1 = dom('<div/>').appendTo(panel).css({ 'text-align': 'center' });\n        let divContainer2 = dom('<div/>').appendTo(divContainer1).css({ 'display': 'inline-block' });\n        let grid = dom('<div/>').appendTo(divContainer2);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        this.geomWidget = new GeomWidget(GeomWidgetType.Atom, mol, atom);\n        this.geomWidget.render(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0 / auto / col4', 'text-align': 'center' }));\n        let label1 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' });\n        this.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col1' });\n        let label2 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col2' });\n        this.inputGeom2 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col3' });\n        this.geomWidget.callbackSelect = (sel) => {\n            let atoms = this.geomWidget.selectionAtoms(sel);\n            if (sel.type == GeomWidgetSelType.Position) {\n                label1.setText('Position X');\n                label2.setText('Y');\n                this.inputGeom1.setValue(this.refGeom1 = mol.atomX(atoms[0]).toFixed(3));\n                this.inputGeom2.setValue(this.refGeom2 = mol.atomY(atoms[0]).toFixed(3));\n            }\n            else if (sel.type == GeomWidgetSelType.Link) {\n                let dx = mol.atomX(atoms[1]) - mol.atomX(atoms[0]), dy = mol.atomY(atoms[1]) - mol.atomY(atoms[0]);\n                label1.setText('Distance');\n                label2.setText('Angle');\n                this.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n                this.inputGeom2.setValue(this.refGeom2 = (Math.atan2(dy, dx) * RADDEG).toFixed(1));\n            }\n            else if (sel.type == GeomWidgetSelType.Torsion) {\n                let cx = mol.atomX(atoms[0]), cy = mol.atomY(atoms[0]);\n                let th2 = Math.atan2(mol.atomY(atoms[1]) - cy, mol.atomX(atoms[1]) - cx);\n                let th1 = Math.atan2(mol.atomY(atoms[2]) - cy, mol.atomX(atoms[2]) - cx);\n                label1.setText('Angle');\n                label2.setText('');\n                this.inputGeom1.setValue(this.refGeom1 = (angleDiffPos(th2, th1) * RADDEG).toFixed(1));\n                this.inputGeom2.setValue(this.refGeom2 = '');\n            }\n            label2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n            this.inputGeom2.setCSS('display', sel.type == GeomWidgetSelType.Torsion ? 'none' : 'block');\n        };\n        this.geomWidget.callbackSelect(this.geomWidget.selected);\n    }\n    populateQuery(panel) {\n        this.queryWidget = new QueryFieldsWidget(this.mol, this.atom, 0);\n        this.queryWidget.render(panel);\n    }\n    populateExtra(panel) {\n        let fields = [...this.mol.atomExtra(this.atom), ...this.mol.atomTransient(this.atom)];\n        this.fieldsWidget = new ExtraFieldsWidget(fields);\n        this.fieldsWidget.render(panel);\n    }\n    updateMolecule() {\n        let { mol, atom } = this;\n        if (atom == 0)\n            atom = this.atom = mol.addAtom('C', this.newX, this.newY);\n        let sym = this.inputSymbol.getValue();\n        if (sym != '')\n            mol.setAtomElement(atom, sym);\n        let chg = parseInt(this.inputCharge.getValue());\n        if (chg > -20 && chg < 20)\n            mol.setAtomCharge(atom, chg);\n        let unp = parseInt(this.inputUnpaired.getValue());\n        if (unp >= 0 && unp < 20)\n            mol.setAtomUnpaired(atom, unp);\n        let hcidx = this.optionHydrogen.getSelectedIndex();\n        if (hcidx == 0)\n            mol.setAtomHExplicit(atom, Molecule.HEXPLICIT_UNKNOWN);\n        else if (hcidx <= 5)\n            mol.setAtomHExplicit(atom, hcidx - 1);\n        else {\n            let hyd = parseInt(this.inputHydrogen.getValue());\n            if (hyd >= 0 && hyd < 20)\n                mol.setAtomHExplicit(atom, hyd);\n        }\n        if (this.optionIsotope.getSelectedIndex() == 1) {\n            let iso = parseInt(this.inputIsotope.getValue());\n            if (iso >= 0 && iso < 300)\n                mol.setAtomIsotope(atom, iso);\n        }\n        else\n            mol.setAtomIsotope(atom, Molecule.ISOTOPE_NATURAL);\n        let map = parseInt(this.inputMapping.getValue());\n        if (!isNaN(map))\n            mol.setAtomMapNum(atom, map);\n    }\n    updateAbbrev() {\n        const { mol, atom } = this;\n        if (this.currentAbbrev < 0) {\n            let el = mol.atomElement(atom);\n            MolUtil.clearAbbrev(mol, atom);\n            mol.setAtomElement(atom, el);\n        }\n        else {\n            let abbrev = this.abbrevList[this.currentAbbrev];\n            mol.setAtomElement(atom, abbrev.name);\n            MolUtil.setAbbrev(mol, atom, abbrev.frag);\n        }\n    }\n    updateGeometry() {\n        let strval1 = this.inputGeom1.getValue(), strval2 = this.inputGeom2.getValue();\n        if (this.refGeom1 == strval1 && this.refGeom2 == strval2)\n            return;\n        const { mol } = this;\n        let sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n        if (sel.type == GeomWidgetSelType.Position) {\n            let x = parseFloat(strval1), y = parseFloat(strval2);\n            if (isNaN(x) || isNaN(y) || Math.abs(x) > 1E6 || Math.abs(y) > 1E6)\n                return;\n            mol.setAtomPos(atoms[0], x, y);\n        }\n        else if (sel.type == GeomWidgetSelType.Link) {\n            if (this.refGeom1 != strval1) {\n                let dist = parseFloat(strval1);\n                if (isNaN(dist) || Math.abs(dist) > 100)\n                    return;\n                let mask = Vec.booleanArray(false, mol.numAtoms);\n                mask[atoms[1] - 1] = true;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), 'selectedMask': mask };\n                let molact = new MoleculeActivity(instate, ActivityType.BondDist, { dist });\n                molact.execute();\n                if (molact.output.mol)\n                    this.mol = molact.output.mol;\n                return;\n            }\n            else if (this.refGeom2 != strval2) {\n                let angle = parseFloat(strval2);\n                if (isNaN(angle))\n                    return;\n                let mask = Vec.booleanArray(false, mol.numAtoms);\n                mask[atoms[1] - 1] = true;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: mask };\n                let molact = new MoleculeActivity(instate, ActivityType.AlignAngle, { angle: angle * DEGRAD });\n                molact.execute();\n                if (molact.output.mol)\n                    this.mol = molact.output.mol;\n                return;\n            }\n        }\n        else if (sel.type == GeomWidgetSelType.Torsion) {\n            let angle = parseFloat(strval1);\n            if (isNaN(angle))\n                return;\n            let mask = Vec.booleanArray(false, mol.numAtoms);\n            for (let a of atoms)\n                mask[a - 1] = true;\n            let instate = { mol, currentAtom: atoms[2], currentBond: 0, selectedMask: mask };\n            let molact = new MoleculeActivity(instate, ActivityType.AdjustTorsion, { angle: angle * DEGRAD });\n            molact.execute();\n            if (molact.output.mol)\n                this.mol = molact.output.mol;\n            return;\n        }\n    }\n    updateQuery() {\n        this.queryWidget.updateAtom();\n    }\n    updateExtra() {\n        this.mol.setAtomExtra(this.atom, this.fieldsWidget.getExtraFields());\n        this.mol.setAtomTransient(this.atom, this.fieldsWidget.getTransientFields());\n    }\n    fillAbbreviations() {\n        if (AbbrevContainer.needsSetup()) {\n            setTimeout(() => AbbrevContainer.setupData().then(() => this.fillAbbreviations()), 1);\n            return;\n        }\n        this.tableAbbrev.empty();\n        AbbrevContainer.main.submitMolecule(this.mol, true);\n        this.abbrevList = AbbrevContainer.main.getAbbrevs();\n        if (!this.svgAbbrev) {\n            this.svgAbbrev = [];\n            let policy = RenderPolicy.defaultColourOnWhite(10);\n            let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n            for (let abbrev of this.abbrevList) {\n                let effects = new RenderEffects();\n                let mol = abbrev.frag.clone();\n                effects.atomCircleSz = Vec.numberArray(0, mol.numAtoms);\n                effects.atomCircleCol = Vec.numberArray(0, mol.numAtoms);\n                for (let n = 1; n <= mol.numAtoms; n++)\n                    if (mol.atomElement(n) == MolUtil.ABBREV_ATTACHMENT) {\n                        mol.setAtomElement(n, 'C');\n                        effects.atomCircleSz[n - 1] = 0.2;\n                        effects.atomCircleCol[n - 1] = 0x00C000;\n                    }\n                let layout = new ArrangeMolecule(mol, measure, policy, effects);\n                layout.arrange();\n                let gfx = new MetaVector();\n                new DrawMolecule(layout, gfx).draw();\n                gfx.normalise();\n                this.svgAbbrev.push(gfx.createSVG());\n            }\n            const { mol, atom } = this;\n            if (atom > 0 && MolUtil.hasAbbrev(mol, atom)) {\n                let name = mol.atomElement(atom), mf = MolUtil.molecularFormula(MolUtil.getAbbrev(mol, atom));\n                for (let n = 0; n < this.abbrevList.length; n++)\n                    if (name == this.abbrevList[n].name) {\n                        if (mf == MolUtil.molecularFormula(this.abbrevList[n].frag))\n                            this.currentAbbrev = n;\n                        break;\n                    }\n            }\n        }\n        let tr = dom('<tr/>').appendTo(this.tableAbbrev);\n        tr.appendHTML('<td><u>Label</u></td>');\n        tr.appendHTML('<td><u>Structure</u></td>');\n        this.abbrevEntries = [];\n        this.abbrevIndices = [];\n        let search = this.inputAbbrevSearch.getValue().toLowerCase();\n        for (let n = 0; n < this.abbrevList.length; n++) {\n            if (this.currentAbbrev != n && !this.abbrevList[n].nameSearch.includes(search))\n                continue;\n            let entry = {\n                tr: dom('<tr/>').appendTo(this.tableAbbrev),\n                idx: n,\n                bgcol: this.abbrevEntries.length % 2 == 0 ? '#FFFFFF' : '#F8F8F8'\n            };\n            entry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n            let tdLabel = dom('<td/>').appendTo(entry.tr), tdStruct = dom('<td/>').appendTo(entry.tr);\n            tdLabel.setHTML(this.abbrevList[n].nameHTML);\n            dom(this.svgAbbrev[n]).appendTo(tdStruct).css({ 'display': 'block', 'pointer-events': 'none' });\n            entry.tr.css({ 'cursor': 'pointer' });\n            entry.tr.onClick(() => this.selectAbbreviation(n));\n            entry.tr.onDblClick((event) => this.applyChanges());\n            this.abbrevEntries.push(entry);\n            this.abbrevIndices.push(n);\n        }\n    }\n    selectAbbreviation(idx) {\n        if (this.currentAbbrev == idx)\n            return;\n        this.currentAbbrev = idx;\n        for (let entry of this.abbrevEntries) {\n            entry.tr.setCSS('background-color', this.currentAbbrev == entry.idx ? colourCode(Theme.lowlight) : entry.bgcol);\n            if (this.currentAbbrev == entry.idx)\n                entry.tr.el.scrollIntoView({ 'block': 'nearest' });\n        }\n    }\n    cycleAbbreviation(dir) {\n        let sz = this.abbrevIndices.length;\n        if (sz == 0)\n            return;\n        let idx = this.abbrevIndices.indexOf(this.currentAbbrev);\n        if (idx < 0) {\n            if (dir < 0)\n                idx = sz - 1;\n            else\n                idx = 0;\n        }\n        else\n            idx = (idx + sz + dir) % sz;\n        this.selectAbbreviation(this.abbrevIndices[idx]);\n    }\n    selectedTab(idx) {\n        if (idx == 0)\n            this.inputSymbol.grabFocus();\n        else if (idx == 1)\n            this.inputAbbrevSearch.grabFocus();\n        else if (idx == 2)\n            this.inputGeom1.grabFocus();\n    }\n}\n//# sourceMappingURL=EditAtom.js.map","import { Dialog } from '../dialog/Dialog';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { TabBar } from '../ui/TabBar';\nimport { dom } from '../util/dom';\nimport { norm_xy } from '../util/util';\nimport { ExtraFieldsWidget } from './ExtraFieldsWidget';\nimport { GeomWidget, GeomWidgetSelType, GeomWidgetType } from './GeomWidget';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { QueryFieldsWidget } from './QueryFieldsWidget';\nexport class EditBond extends Dialog {\n    constructor(mol, bond, proxyClip, callbackApply) {\n        super();\n        this.bond = bond;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Edit Bond';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnApply.onClick(() => this.applyChanges());\n        this.tabs = new TabBar(['Bond', 'Geometry', 'Query', 'Extra']);\n        this.tabs.render(body);\n        this.tabs.onSelect((idx) => this.selectedTab(idx));\n        this.populateBond(this.tabs.getPanelDOM('Bond'));\n        this.populateGeometry(this.tabs.getPanelDOM('Geometry'));\n        this.populateQuery(this.tabs.getPanelDOM('Query'));\n        this.populateExtra(this.tabs.getPanelDOM('Extra'));\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                if (event.key == \"Enter\")\n                    this.applyChanges();\n                else if (event.key == \"Escape\")\n                    this.close();\n                else if (event.key == \"PageUp\") {\n                    this.tabs.rotateSelected(-1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                else if (event.key == \"PageDown\") {\n                    this.tabs.rotateSelected(1);\n                    this.selectedTab(this.tabs.getSelectedIndex());\n                    event.preventDefault();\n                }\n                event.stopPropagation();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    applyChanges() {\n        this.mol.keepTransient = true;\n        this.updateMolecule();\n        if (this.tabs.getSelectedValue() == 'Geometry')\n            this.updateGeometry();\n        if (this.tabs.getSelectedValue() == 'Query')\n            this.updateQuery();\n        if (this.tabs.getSelectedValue() == 'Extra')\n            this.updateExtra();\n        this.mol.keepTransient = false;\n        if (this.callbackApply)\n            this.callbackApply(this);\n    }\n    populateBond(panel) {\n        const { mol, bond } = this;\n        let grid = dom('<div/>').appendTo(panel);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4 end]' });\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0' }).setText('Order');\n        let ordersHTML = [];\n        for (let o = 0; o <= 4; o++)\n            ordersHTML.push(`&nbsp;&nbsp;${o}&nbsp;&nbsp;`);\n        this.optionOrder = new OptionList(ordersHTML);\n        this.optionOrder.htmlLabels = true;\n        this.optionOrder.setSelectedIndex(mol.bondOrder(bond));\n        this.optionOrder.render(dom('<div/>').appendTo(grid).css({ 'grid-column': 'col1 / col4', 'grid-row': '1' }));\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' }).setText('Stereo');\n        this.optionStereo = new OptionList(['None', 'Up', 'Down', 'Unknown']);\n        this.optionStereo.setSelectedIndex(mol.bondType(bond));\n        this.optionStereo.render(dom('<div/>').appendTo(grid).css({ 'grid-column': 'col1 / col4', 'grid-row': '2' }));\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '3 / col0' }).setText('From');\n        this.inputFrom = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '3 / col1', 'font': 'inherit' });\n        this.inputFrom.elInput.readOnly = true;\n        this.inputFrom.setValue(mol.bondFrom(bond).toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '3 / col2' }).setText('To');\n        this.inputTo = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '3 / col3', 'font': 'inherit' });\n        this.inputTo.elInput.readOnly = true;\n        this.inputTo.setValue(mol.bondTo(bond).toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '4 / col2' }).setText('Index');\n        this.inputIndex = dom('<input size=\"6\"/>').appendTo(grid).css({ 'grid-area': '4 / col3', 'font': 'inherit' });\n        this.inputIndex.elInput.readOnly = true;\n        this.inputIndex.setValue(bond.toString());\n    }\n    populateGeometry(panel) {\n        const { mol, bond } = this;\n        let divContainer1 = dom('<div/>').appendTo(panel).css({ 'text-align': 'center' });\n        let divContainer2 = dom('<div/>').appendTo(divContainer1).css({ 'display': 'inline-block' });\n        let grid = dom('<div/>').appendTo(divContainer2);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2]' });\n        this.geomWidget = new GeomWidget(GeomWidgetType.Bond, mol, bond);\n        this.geomWidget.render(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0 / auto / col2', 'text-align': 'center' }));\n        let label1 = dom('<div/>').appendTo(grid).css({ 'grid-area': '2 / col0' });\n        this.inputGeom1 = dom('<input type=\"number\" size=\"8\"/>').appendTo(grid).css({ 'grid-area': '2 / col1' });\n        this.geomWidget.callbackSelect = (sel) => {\n            if (sel.type == GeomWidgetSelType.Link) {\n                let a1 = mol.bondFrom(bond), a2 = mol.bondTo(bond);\n                let dx = mol.atomX(a2) - mol.atomX(a1), dy = mol.atomY(a2) - mol.atomY(a1);\n                label1.setText('Distance');\n                this.inputGeom1.setValue(this.refGeom1 = norm_xy(dx, dy).toFixed(3));\n            }\n        };\n        this.geomWidget.callbackSelect(this.geomWidget.selected);\n    }\n    populateQuery(panel) {\n        this.queryWidget = new QueryFieldsWidget(this.mol, 0, this.bond);\n        this.queryWidget.render(panel);\n    }\n    populateExtra(panel) {\n        let fields = [...this.mol.bondExtra(this.bond), ...this.mol.bondTransient(this.bond)];\n        this.fieldsWidget = new ExtraFieldsWidget(fields);\n        this.fieldsWidget.render(panel);\n    }\n    updateMolecule() {\n        let { mol, bond } = this;\n        mol.setBondOrder(bond, this.optionOrder.getSelectedIndex());\n        mol.setBondType(bond, this.optionStereo.getSelectedIndex());\n    }\n    updateGeometry() {\n        let strval1 = this.inputGeom1.getValue();\n        if (this.refGeom1 == strval1)\n            return;\n        const { mol } = this;\n        let sel = this.geomWidget.selected, atoms = this.geomWidget.selectionAtoms(sel);\n        if (sel.type == GeomWidgetSelType.Link) {\n            if (this.refGeom1 != strval1) {\n                let dist = parseFloat(strval1);\n                if (isNaN(dist) || Math.abs(dist) > 100)\n                    return;\n                let instate = { mol, currentAtom: 0, currentBond: mol.findBond(atoms[0], atoms[1]), selectedMask: null };\n                let molact = new MoleculeActivity(instate, ActivityType.BondDist, { dist });\n                molact.execute();\n                this.mol = molact.output.mol;\n                return;\n            }\n        }\n    }\n    updateQuery() {\n        this.queryWidget.updateBond();\n    }\n    updateExtra() {\n        this.mol.setBondExtra(this.bond, this.fieldsWidget.getExtraFields());\n        this.mol.setBondTransient(this.bond, this.fieldsWidget.getTransientFields());\n    }\n    selectedTab(idx) {\n        if (idx == 0)\n            this.inputFrom.grabFocus();\n        else if (idx == 1)\n            this.inputGeom1.grabFocus();\n    }\n}\n//# sourceMappingURL=EditBond.js.map","import { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock, PolymerBlockConnectivity, PolymerBlockUnit } from '../mol/PolymerBlock';\nimport { Dialog } from '../dialog/Dialog';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { OptionList } from '../ui/OptionList';\nimport { dom } from '../util/dom';\nimport { Vec } from '../util/Vec';\nconst CHAR_LOW_A = 'a'.charCodeAt(0), CHAR_UP_A = 'A'.charCodeAt(0);\nfunction indexToAtomLabel(idx) { return String.fromCharCode(CHAR_UP_A + Math.min(26, Math.max(0, idx)) - 1); }\nfunction indexToBondLabel(idx) { return String.fromCharCode(CHAR_LOW_A + Math.min(26, Math.max(0, idx)) - 1); }\nexport class EditPolymer extends Dialog {\n    constructor(mol, atoms, proxyClip, callbackApply) {\n        super();\n        this.atoms = atoms;\n        this.proxyClip = proxyClip;\n        this.callbackApply = callbackApply;\n        this.optionConnect = null;\n        this.optionBondConn = null;\n        this.currentID = 0;\n        this.unit = null;\n        this.borderAtoms = [];\n        this.outBonds = [];\n        this.outAtoms = [];\n        this.initMol = mol;\n        this.mol = mol.clone();\n        this.title = 'Polymer Block';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n        this.polymer = new PolymerBlock(this.mol);\n        atoms = Vec.sorted(atoms);\n        for (let id of this.polymer.getIDList()) {\n            let look = this.polymer.getUnit(id);\n            if (Vec.equals(atoms, look.atoms)) {\n                this.currentID = id;\n                this.unit = look;\n                break;\n            }\n        }\n        if (!this.unit)\n            this.unit = new PolymerBlockUnit(atoms);\n        let umol = this.umol = this.mol.clone();\n        let mask = Vec.booleanArray(false, this.umol.numAtoms);\n        for (let n = 1; n <= this.mol.numBonds; n++) {\n            let bfr = this.mol.bondFrom(n), bto = this.mol.bondTo(n);\n            let in1 = this.atoms.includes(bfr), in2 = this.atoms.includes(bto);\n            if (in1 || in2)\n                mask[bfr - 1] = mask[bto - 1] = true;\n            if (in1 && !in2) {\n                this.borderAtoms.push(bfr);\n                this.outBonds.push(n);\n                this.outAtoms.push(bto);\n            }\n            if (in2 && !in1) {\n                this.borderAtoms.push(bto);\n                this.outBonds.push(n);\n                this.outAtoms.push(bfr);\n            }\n        }\n        this.borderAtoms = Vec.sortedUnique(this.borderAtoms);\n        this.umap = Vec.maskMap(mask);\n        this.umol = MolUtil.subgraphMask(this.umol, mask);\n        new PolymerBlock(this.umol).removeAll();\n    }\n    populate() {\n        this.proxyClip.pushHandler(new ClipboardProxyHandler());\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnApply = dom('<button class=\"wmk-button wmk-button-primary\">Apply</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        if (this.currentID == 0)\n            this.btnApply.setText('Create');\n        this.btnApply.onClick(() => this.applyChanges());\n        if (this.currentID > 0) {\n            this.btnRemove = dom('<button class=\"wmk-button wmk-button-default\">Remove</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n            this.btnRemove.onClick(() => this.applyRemove());\n        }\n        let grid = dom('<div/>').appendTo(body);\n        grid.css({ 'display': 'grid', 'align-items': 'center', 'justify-content': 'start' });\n        grid.css({ 'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em' });\n        grid.css({ 'grid-template-columns': '[start col0] auto [col1] auto [col2] auto [col3] auto [col4] auto [end]' });\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col0' }).setText('# Atoms');\n        let inputNAtoms = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col1' }));\n        inputNAtoms.elInput.readOnly = true;\n        inputNAtoms.setValue(this.unit.atoms.length.toString());\n        dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col2' }).setText('Out-bonds');\n        let inputNBond = dom('<input size=\"5\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': '1 / col3' }));\n        inputNBond.elInput.readOnly = true;\n        inputNBond.setValue(this.outBonds.length.toString());\n        let row = 1;\n        if (this.outBonds.length == 2) {\n            row++;\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0` }).setText('Connectivity');\n            this.optionConnect = new OptionList(['Unknown', 'Head-to-Tail', 'Head-to-Head', 'Random']);\n            this.optionConnect.render(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / col4` }));\n            if (this.unit.connect == PolymerBlockConnectivity.HeadToTail)\n                this.optionConnect.setSelectedIndex(1);\n            else if (this.unit.connect == PolymerBlockConnectivity.HeadToHead)\n                this.optionConnect.setSelectedIndex(2);\n            else if (this.unit.connect == PolymerBlockConnectivity.Random)\n                this.optionConnect.setSelectedIndex(3);\n        }\n        if (this.outBonds.length == 4 && Vec.uniqueUnstable(this.outAtoms).length == 4) {\n            row++;\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0` }).setText('2x2 Connectivity');\n            this.populate2x2Conn(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / end` }));\n        }\n        let getList = (str) => {\n            if (!str)\n                return null;\n            let list = [];\n            for (let bit of str.split(',')) {\n                let v = parseInt(bit);\n                if (v > 0)\n                    list.push(v);\n                else\n                    return undefined;\n            }\n            return list;\n        };\n        for (let n = 0; n < this.borderAtoms.length; n++) {\n            row++;\n            let domLabel = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em' });\n            if (n == 0)\n                domLabel.setText('Name ');\n            dom('<span/>').appendTo(domLabel).css({ 'color': '#008000' }).setText(indexToAtomLabel(n + 1));\n            let input = dom('<input size=\"20\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1 / auto / end`, 'width': '100%' }));\n            let atom = this.borderAtoms[n];\n            let nvals = this.unit.atomName.get(atom);\n            if (nvals)\n                input.setValue(nvals.join(','));\n            input.onInput(() => {\n                let list = getList(input.getValue());\n                if (list !== undefined)\n                    this.unit.atomName.set(atom, list);\n            });\n        }\n        for (let n = 0; n < this.outAtoms.length; n++) {\n            row++;\n            let domLabel = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0`, 'text-align': 'right', 'padding-right': '0.5em' });\n            if (n == 0)\n                domLabel.setText('Link ');\n            dom('<span/>').appendTo(domLabel).css({ 'color': '#800080' }).setText(indexToBondLabel(n + 1));\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col1` }).setText('Include');\n            let inputIncl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col2`, 'width': '100%' }));\n            dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col3` }).setText('Exclude');\n            let inputExcl = dom('<input size=\"10\"/>').appendTo(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col4`, 'width': '100%' }));\n            let bond = this.outBonds[n];\n            let ivals = this.unit.bondIncl.get(bond), evals = this.unit.bondExcl.get(bond);\n            if (ivals)\n                inputIncl.setValue(ivals.join(','));\n            if (evals)\n                inputExcl.setValue(evals.join(','));\n            inputIncl.onInput(() => {\n                let list = getList(inputIncl.getValue());\n                if (list !== undefined)\n                    this.unit.bondIncl.set(bond, list);\n            });\n            inputExcl.onInput(() => {\n                let list = getList(inputExcl.getValue());\n                if (list !== undefined)\n                    this.unit.bondExcl.set(bond, list);\n            });\n        }\n        row++;\n        this.populateUncap(dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center' }));\n        row++;\n        this.divPreview = dom('<div/>').appendTo(grid).css({ 'grid-area': `${row} / col0 / auto / col4`, 'text-align': 'center' });\n        this.renderUnit();\n        let focusable = body.findAll('input,textarea');\n        if (focusable.length > 0)\n            focusable[0].grabFocus(true);\n        for (let dom of focusable) {\n            dom.css({ 'font': 'inherit' });\n            dom.onKeyDown((event) => {\n                let keyCode = event.keyCode || event.which;\n                if (keyCode == 13)\n                    this.applyChanges();\n                if (keyCode == 27)\n                    this.close();\n            });\n        }\n    }\n    close() {\n        this.proxyClip.popHandler();\n        super.close();\n    }\n    populate2x2Conn(div) {\n        const perms = [[0, 1, 2, 3], [0, 1, 3, 2], [0, 2, 1, 3], [0, 2, 3, 1], [0, 3, 1, 2], [0, 3, 2, 1]];\n        let bondConnOptions = [null];\n        let optionList = ['None'];\n        let selidx = 0;\n        for (let perm of perms) {\n            let bonds = Vec.idxGet(this.outBonds, perm);\n            if (Vec.equals(bonds, this.unit.bondConn))\n                selidx = optionList.length;\n            bondConnOptions.push(bonds);\n            optionList.push(`${perm[0] + 1},${perm[1] + 1}:${perm[2] + 1},${perm[3] + 1}`);\n        }\n        this.optionBondConn = new OptionList(optionList);\n        this.optionBondConn.setSelectedIndex(selidx);\n        this.optionBondConn.render(div);\n        this.optionBondConn.onSelect((idx) => {\n            this.unit.bondConn = bondConnOptions[idx];\n            this.renderUnit();\n        });\n    }\n    populateUncap(div) {\n        let uncapAtoms = [];\n        skip: for (let a of this.outAtoms)\n            if (this.mol.atomAdjCount(a) == 1 && this.mol.atomElement(a) != '*') {\n                for (let unit of this.polymer.getUnits())\n                    if (unit.atoms.includes(a))\n                        continue skip;\n                uncapAtoms.push(a);\n            }\n        if (uncapAtoms.length == 0)\n            return;\n        let btnUncap = dom('<button class=\"wmk-button wmk-button-default\">Uncap Exterior</button>').appendTo(div);\n        btnUncap.onClick(() => {\n            btnUncap.elInput.disabled = true;\n            for (let a of uncapAtoms)\n                this.mol.setAtomElement(a, '*');\n        });\n    }\n    applyChanges() {\n        if (this.optionConnect) {\n            let sel = this.optionConnect.getSelectedIndex();\n            if (sel == 0)\n                this.unit.connect = null;\n            else if (sel == 1)\n                this.unit.connect = PolymerBlockConnectivity.HeadToTail;\n            else if (sel == 2)\n                this.unit.connect = PolymerBlockConnectivity.HeadToHead;\n            else if (sel == 3)\n                this.unit.connect = PolymerBlockConnectivity.Random;\n        }\n        if (this.currentID)\n            this.polymer.removeUnit(this.currentID);\n        this.currentID = this.polymer.createUnit(this.unit.clone());\n        this.polymer.rewriteMolecule();\n        this.callbackApply(this);\n    }\n    applyRemove() {\n        if (this.currentID)\n            this.polymer.removeUnit(this.currentID);\n        this.callbackApply(this);\n    }\n    renderUnit() {\n        let umol = this.umol.clone();\n        let policy = RenderPolicy.defaultColourOnWhite(20);\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        let effects = new RenderEffects();\n        effects.atomCircleSz = Vec.numberArray(0, umol.numAtoms);\n        effects.atomCircleCol = Vec.numberArray(0, umol.numAtoms);\n        effects.atomDecoText = Vec.stringArray(null, umol.numAtoms);\n        effects.atomDecoCol = Vec.numberArray(null, umol.numAtoms);\n        effects.atomDecoSize = Vec.numberArray(null, umol.numAtoms);\n        let borderAtoms = this.borderAtoms.map((atom) => this.umap[atom - 1] + 1);\n        let outAtoms = this.outAtoms.map((atom) => this.umap[atom - 1] + 1);\n        for (let n = 1; n <= umol.numAtoms; n++) {\n            let bidx = borderAtoms.indexOf(n), oidx = outAtoms.indexOf(n);\n            if (bidx >= 0) {\n                effects.atomDecoText[n - 1] = indexToAtomLabel(bidx + 1);\n                effects.atomDecoCol[n - 1] = 0x008000;\n                effects.atomDecoSize[n - 1] = 0.5;\n            }\n            if (oidx >= 0) {\n                umol.setAtomCharge(n, 0);\n                umol.setAtomUnpaired(n, 0);\n                umol.setAtomIsotope(n, 0);\n                effects.atomCircleSz[n - 1] = 0.1;\n                effects.atomCircleCol[n - 1] = 0xFF00FF;\n                effects.atomDecoText[n - 1] = indexToBondLabel(oidx + 1);\n                effects.atomDecoCol[n - 1] = 0x800080;\n                effects.atomDecoSize[n - 1] = 0.5;\n                umol.setAtomElement(n, 'C');\n            }\n        }\n        let layout = new ArrangeMolecule(umol, measure, policy, effects);\n        layout.arrange();\n        layout.squeezeInto(0, 0, 300, 300);\n        let gfx = new MetaVector();\n        if (this.unit.bondConn) {\n            const LINES = [\n                [0, 1, 0xC86D08, 2, false], [2, 3, 0xC86D08, 2, false],\n                [0, 2, 0xC0C86D08, 1, true], [1, 3, 0xC0C86D08, 1, true]\n            ];\n            for (let [i1, i2, col, sz, circle] of LINES) {\n                let a1 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i1])];\n                let a2 = this.outAtoms[this.outBonds.indexOf(this.unit.bondConn[i2])];\n                let p1 = layout.getPoint(a1 - 1), p2 = layout.getPoint(a2 - 1);\n                gfx.drawLine(p1.oval.cx, p1.oval.cy, p2.oval.cx, p2.oval.cy, col, sz);\n                if (circle) {\n                    for (let f of [0.2, 0.4, 0.6, 0.8]) {\n                        let mx = p1.oval.cx + f * (p2.oval.cx - p1.oval.cx), my = p1.oval.cy + f * (p2.oval.cy - p1.oval.cy);\n                        gfx.drawOval(mx, my, 2, 2, col, sz, null);\n                    }\n                }\n            }\n        }\n        new DrawMolecule(layout, gfx).draw();\n        gfx.normalise();\n        this.divPreview.empty();\n        dom(gfx.createSVG()).appendTo(this.divPreview).css({ 'pointer-events': 'none' });\n    }\n}\n//# sourceMappingURL=EditPolymer.js.map","import { AbbrevContainer } from '../data/AbbrevContainer';\nimport { DataSheetStream } from '../io/DataSheetStream';\nimport { MolUtil } from '../mol/MolUtil';\nimport { OutlineMeasurement } from '../gfx/ArrangeMeasurement';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ButtonBank } from '../ui/ButtonBank';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nclass TemplateBank extends ButtonBank {\n    constructor(owner, group) {\n        super();\n        this.owner = owner;\n        this.group = group;\n        this.subgroups = null;\n        this.templates = null;\n    }\n    init() {\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 10;\n        policy.data.lineSize *= 1.5;\n        policy.data.bondSep *= 1.5;\n        if (TemplateBank.resourceData.length == 0)\n            this.loadResourceData();\n        if (this.group == null)\n            this.prepareSubGroups();\n        else\n            this.prepareTemplates();\n    }\n    update() {\n        if (this.subgroups == null && this.templates == null)\n            return;\n        this.buttons = [];\n        if (this.group == null)\n            this.populateGroups();\n        else\n            this.populateTemplates();\n    }\n    populateGroups() {\n        let groups = this.subgroups.groups, titles = this.subgroups.titles, preview = this.subgroups.preview;\n        for (let n = 0; n < groups.length; n++) {\n            this.buttons.push({ id: groups[n], metavec: preview[n], helpText: titles[n] });\n        }\n    }\n    populateTemplates() {\n        let names = this.templates.names, abbrev = this.templates.abbrev, mnemonic = this.templates.mnemonic, preview = this.templates.preview;\n        for (let n = 0; n < names.length; n++) {\n            this.buttons.push({ id: n.toString(), metavec: preview[n], helpText: names[n] });\n        }\n    }\n    hitButton(id) {\n        if (this.group == null) {\n            this.buttonView.pushBank(new TemplateBank(this.owner, id));\n        }\n        else {\n            let idx = parseInt(id);\n            let param = { fragNative: this.templates.molecules[idx] };\n            new MoleculeActivity(this.owner.getState(), ActivityType.TemplateFusion, param, this.owner).execute();\n        }\n    }\n    loadResourceData() {\n        for (let key of AbbrevContainer.getTemplateKeys()) {\n            let dsstr = AbbrevContainer.getTemplateData(key);\n            TemplateBank.resourceList.push(key);\n            TemplateBank.resourceData.push(DataSheetStream.readXML(dsstr));\n        }\n    }\n    prepareSubGroups() {\n        this.subgroups = { groups: TemplateBank.resourceList, titles: [], preview: [] };\n        let sz = this.buttonView.idealSize, msz = 0.5 * (sz - 2);\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 10;\n        let effects = new RenderEffects();\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        for (let ds of TemplateBank.resourceData) {\n            this.subgroups.titles.push(ds.title);\n            let colMol = ds.firstColOfType(\"molecule\");\n            let metavec = new MetaVector();\n            for (let n = 0, idx = 0; idx < 4 && n < ds.numRows; n++) {\n                let mol = ds.getMolecule(n, colMol);\n                if (MolUtil.isBlank(mol))\n                    continue;\n                let layout = new ArrangeMolecule(mol, measure, policy, effects);\n                layout.arrange();\n                let col = (idx % 2), row = Math.floor(idx / 2);\n                layout.squeezeInto(1 + col * msz, 1 + row * msz, msz, msz, 1);\n                new DrawMolecule(layout, metavec).draw();\n                idx++;\n            }\n            metavec.width = sz;\n            metavec.height = sz;\n            this.subgroups.preview.push(metavec);\n        }\n        this.buttonView.refreshBank();\n    }\n    prepareTemplates() {\n        let idx = TemplateBank.resourceList.indexOf(this.group);\n        let ds = TemplateBank.resourceData[idx];\n        this.templates = { molecules: [], names: [], abbrev: [], mnemonic: [], preview: [] };\n        let sz = this.buttonView.idealSize;\n        let policy = RenderPolicy.defaultBlackOnWhite();\n        policy.data.pointScale = 12;\n        let effects = new RenderEffects();\n        let measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n        let colMol = ds.findColByName('Molecule');\n        let colName = ds.findColByName('Name');\n        let colAbbrev = ds.findColByName('Abbrev');\n        let colMnemonic = ds.findColByName('Mnemonic');\n        for (let n = 0; n < ds.numRows; n++) {\n            let mol = ds.getMolecule(n, colMol);\n            this.templates.molecules.push(mol.toString());\n            this.templates.names.push(ds.getString(n, colName));\n            this.templates.abbrev.push(ds.getString(n, colAbbrev));\n            this.templates.mnemonic.push(ds.getString(n, colMnemonic));\n            let layout = new ArrangeMolecule(mol, measure, policy, effects);\n            layout.arrange();\n            layout.squeezeInto(0, 0, sz, sz, 2);\n            let metavec = new MetaVector();\n            new DrawMolecule(layout, metavec).draw();\n            metavec.width = sz;\n            metavec.height = sz;\n            this.templates.preview.push(metavec);\n        }\n        this.buttonView.refreshBank();\n    }\n}\nTemplateBank.resourceList = [];\nTemplateBank.resourceData = [];\nexport { TemplateBank };\nimport svgGenericAccept from '../res/img/actions/GenericAccept.svg';\nimport svgTemplatePrev from '../res/img/actions/TemplatePrev.svg';\nimport svgTemplateNext from '../res/img/actions/TemplateNext.svg';\nexport class FusionBank extends ButtonBank {\n    constructor(owner) {\n        super();\n        this.owner = owner;\n    }\n    update() {\n        this.buttons = [];\n        this.buttons.push({ id: 'accept', svg: svgGenericAccept, helpText: 'Apply this template.' });\n        this.buttons.push({ id: 'prev', svg: svgTemplatePrev, helpText: 'Show previous fusion option.' });\n        this.buttons.push({ id: 'next', svg: svgTemplateNext, helpText: 'Show next fusion option.' });\n    }\n    hitButton(id) {\n        if (id == 'accept')\n            this.owner.templateAccept();\n        else if (id == 'prev')\n            this.owner.templateRotate(-1);\n        else if (id == 'next')\n            this.owner.templateRotate(1);\n    }\n    claimKey(event) {\n        if (event.key == \"Enter\") {\n            this.owner.templateAccept();\n            return true;\n        }\n        else if (event.key == \"ArrowLeft\" || event.key == \"ArrowUp\") {\n            this.owner.templateRotate(-1);\n            return true;\n        }\n        else if (event.key == \"ArrowRight\" || event.key == \"ArrowDown\") {\n            this.owner.templateRotate(1);\n            return true;\n        }\n        return false;\n    }\n    bankClosed() {\n        this.owner.clearPermutations();\n    }\n}\n//# sourceMappingURL=TemplateBank.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://web.resource.org/cc/\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.45.1\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docbase=\\\"/home/aclark/CRK3/MMTk/images/msk\\\"\\n   sodipodi:docname=\\\"GenericAccept.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainQuit.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\" />\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"159.5736\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"793\\\"\\n     inkscape:window-height=\\\"842\\\"\\n     inkscape:window-x=\\\"21\\\"\\n     inkscape:window-y=\\\"104\\\"\\n     showgrid=\\\"true\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 300.71429,39.285714 C 221.40032,73.699762 164.28823,126.10076 120,210 C 82.667331,182.4368 64.188257,170.57196 8.5714286,174.28571 C 88.702873,232.3286 116.45809,273.89571 131.42857,295 C 138.61324,305.12842 189.62059,127.77256 300.71429,39.285714 z \\\"\\n       id=\\\"path3211\\\"\\n       sodipodi:nodetypes=\\\"cccsc\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"TemplatePrev.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/TemplatePrev.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#fffbfb;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;fill-opacity:1\\\"\\n       d=\\\"M 10,160 L 130,40 L 130,110 L 310,110 L 310,210 L 130,210 C 130,210 130,280 130,280 L 10,160 z \\\"\\n       id=\\\"path2161\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"TemplateNext.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/TemplateNext.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective8\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"93.268499\\\"\\n     inkscape:cy=\\\"215.40039\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1440\\\"\\n     inkscape:window-height=\\\"838\\\"\\n     inkscape:window-x=\\\"-8\\\"\\n     inkscape:window-y=\\\"-8\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\" />\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#fffbfb;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:10;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 310,160 L 190,40 L 190,110 L 10,110 L 10,210 L 190,210 C 190,210 190,280 190,280 L 310,160 z \\\"\\n       id=\\\"path2161\\\" />\\n  </g>\\n</svg>\\n\";","import { ButtonBank } from '../ui/ButtonBank';\nexport var ToolBankItem;\n(function (ToolBankItem) {\n    ToolBankItem[\"Arrow\"] = \"arrow\";\n    ToolBankItem[\"Rotate\"] = \"rotate\";\n    ToolBankItem[\"Pan\"] = \"pan\";\n    ToolBankItem[\"Drag\"] = \"drag\";\n    ToolBankItem[\"Erasor\"] = \"erasor\";\n    ToolBankItem[\"BondOrder0\"] = \"bond:Order0\";\n    ToolBankItem[\"BondOrder1\"] = \"bond:Order1\";\n    ToolBankItem[\"BondOrder2\"] = \"bond:Order2\";\n    ToolBankItem[\"BondOrder3\"] = \"bond:Order3\";\n    ToolBankItem[\"BondUnknown\"] = \"bond:Unknown\";\n    ToolBankItem[\"BondInclined\"] = \"bond:Inclined\";\n    ToolBankItem[\"BondDeclined\"] = \"bond:Declined\";\n    ToolBankItem[\"RingAliph\"] = \"ringAliph\";\n    ToolBankItem[\"RingArom\"] = \"ringArom\";\n    ToolBankItem[\"AtomPlus\"] = \"atomPlus\";\n    ToolBankItem[\"AtomMinus\"] = \"atomMinus\";\n    ToolBankItem[\"BondPfx\"] = \"bond:\";\n    ToolBankItem[\"ElementPfx\"] = \"element:\";\n})(ToolBankItem || (ToolBankItem = {}));\nimport svgToolSelect from '../res/img/actions/ToolSelect.svg';\nimport svgToolRotate from '../res/img/actions/ToolRotate.svg';\nimport svgToolPan from '../res/img/actions/ToolPan.svg';\nimport svgToolDrag from '../res/img/actions/ToolDrag.svg';\nimport svgToolErasor from '../res/img/actions/ToolErasor.svg';\nimport svgBondZero from '../res/img/actions/BondZero.svg';\nimport svgBondOne from '../res/img/actions/BondOne.svg';\nimport svgBondTwo from '../res/img/actions/BondTwo.svg';\nimport svgBondThree from '../res/img/actions/BondThree.svg';\nimport svgBondSquig from '../res/img/actions/BondSquig.svg';\nimport svgBondUp from '../res/img/actions/BondUp.svg';\nimport svgBondDown from '../res/img/actions/BondDown.svg';\nimport svgToolRing from '../res/img/actions/ToolRing.svg';\nimport svgToolArom from '../res/img/actions/ToolArom.svg';\nimport svgAtomPlus from '../res/img/actions/AtomPlus.svg';\nimport svgAtomMinus from '../res/img/actions/AtomMinus.svg';\nconst TOOLS_MAIN = [\n    { id: ToolBankItem.Arrow, svg: svgToolSelect, helpText: 'Selection tool.', mnemonic: 'Escape' },\n    { id: ToolBankItem.Rotate, svg: svgToolRotate, helpText: 'Rotate subject atoms.', mnemonic: '' },\n    { id: ToolBankItem.Pan, svg: svgToolPan, helpText: 'Pan the viewport around the screen.', mnemonic: '' },\n    { id: ToolBankItem.Drag, svg: svgToolDrag, helpText: 'Drag selected atoms to new positions.', mnemonic: '' },\n    { id: ToolBankItem.Erasor, svg: svgToolErasor, helpText: 'Delete atoms or bonds by selecting.', mnemonic: 'Delete' },\n    { id: ToolBankItem.BondOrder0, svg: svgBondZero, helpText: 'Create or change a bond to zero order.', mnemonic: 'Shift+0', 'key': ')' },\n    { id: ToolBankItem.BondOrder1, svg: svgBondOne, helpText: 'Create or change a bond to single.', mnemonic: 'Shift+1', 'key': '!' },\n    { id: ToolBankItem.BondOrder2, svg: svgBondTwo, helpText: 'Create or change a bond to double.', mnemonic: 'Shift+2', 'key': '@' },\n    { id: ToolBankItem.BondOrder3, svg: svgBondThree, helpText: 'Create or change a bond to triple.', mnemonic: 'Shift+3', 'key': '#' },\n    { id: ToolBankItem.BondUnknown, svg: svgBondSquig, helpText: 'Create or change a bond to unknown stereochemistry.', mnemonic: 'Shift+4', 'key': '$' },\n    { id: ToolBankItem.BondInclined, svg: svgBondUp, helpText: 'Create or change a bond to up-wedge.', mnemonic: 'Shift+5', 'key': '%' },\n    { id: ToolBankItem.BondDeclined, svg: svgBondDown, helpText: 'Create or change a bond to down-wedge.', mnemonic: 'Shift+6', 'key': '^' },\n    { id: ToolBankItem.RingAliph, svg: svgToolRing, helpText: 'Create plain ring.', mnemonic: 'Shift+7', 'key': '&' },\n    { id: ToolBankItem.RingArom, svg: svgToolArom, helpText: 'Create aromatic ring.', mnemonic: 'Shift+8', 'key': '*' },\n    { id: ToolBankItem.AtomPlus, svg: svgAtomPlus, helpText: 'Increase charge on atom.', mnemonic: '' },\n    { id: ToolBankItem.AtomMinus, svg: svgAtomMinus, helpText: 'Decrease charge on atom.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'C', text: 'C', helpText: 'Change elements to Carbon.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'N', text: 'N', helpText: 'Change elements to Nitrogen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'O', text: 'O', helpText: 'Change elements to Oxygen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'S', text: 'S', helpText: 'Change elements to Sulfur.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'P', text: 'P', helpText: 'Change elements to Phosphorus.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'H', text: 'H', helpText: 'Change elements to Hydrogen.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'F', text: 'F', helpText: 'Change elements to Fluorine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'Cl', text: 'Cl', helpText: 'Change elements to Chlorine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'Br', text: 'Br', helpText: 'Change elements to Bromine.', mnemonic: '' },\n    { id: ToolBankItem.ElementPfx + 'A', text: 'A', helpText: 'Pick other element.', mnemonic: '' }\n];\nexport class ToolBank extends ButtonBank {\n    constructor(owner) {\n        super();\n        this.owner = owner;\n    }\n    update() {\n        for (let btn of TOOLS_MAIN)\n            this.buttons.push(btn);\n        this.buttonView.setSelectedButton('arrow');\n    }\n    hitButton(id) {\n        this.buttonView.setSelectedButton(id);\n    }\n    claimKey(event) {\n        for (let item of TOOLS_MAIN) {\n            if (ButtonBank.matchKey(event, item.mnemonic, item.key)) {\n                this.hitButton(item.id);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=ToolBank.js.map","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"50\\\"\\n   height=\\\"50\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolSelect.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#d3e5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"8.64\\\"\\n     inkscape:cx=\\\"22.280093\\\"\\n     inkscape:cy=\\\"25\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\"\\n     transform=\\\"translate(0,-270)\\\">\\n    <g\\n       transform=\\\"matrix(2.2470395,0,0,2.2470395,1.4827876,-402.18041)\\\"\\n       id=\\\"layer1-1\\\"\\n       inkscape:label=\\\"Layer 1\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke-width:0.77823228;stroke-miterlimit:4;stroke-dasharray:none\\\">\\n      <path\\n         sodipodi:nodetypes=\\\"cccccccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4141\\\"\\n         d=\\\"m 3.994178,302.40331 0.011839,13.60146 4.8493426,-3.53325 4.1221284,5.65757 3.232895,-2.3555 -4.122128,-5.65757 4.849343,-3.53325 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.77823228;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolRotate.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#d3e5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-140.47866\\\"\\n     inkscape:cy=\\\"198.69435\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1028\\\"\\n     inkscape:window-x=\\\"61\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.55773544;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\\\"\\n       d=\\\"M 68.562496,210.12948 A 34.671101,35.243633 0 0 0 33.890833,245.37285 34.671101,35.243633 0 0 0 68.562496,280.6189 34.671101,35.243633 0 0 0 103.23417,245.37285 34.671101,35.243633 0 0 0 68.562496,210.12948 Z m 0.09935,11.02044 A 23.336319,23.721675 0 0 1 91.999068,244.87094 23.336319,23.721675 0 0 1 68.66185,268.59197 23.336319,23.721675 0 0 1 45.324633,244.87094 23.336319,23.721675 0 0 1 68.66185,221.14992 Z\\\"\\n       id=\\\"path4237\\\" />\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:10.40872955;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:10.40872949, 20.81745898;stroke-dashoffset:2.00970006;stroke-opacity:1\\\"\\n       d=\\\"M 177.52863,34.919161 68.562276,246.38095 l 224.866844,0\\\"\\n       id=\\\"path5210\\\" />\\n    <path\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:6.99123812px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       d=\\\"m 128.10545,149.71269 c 28.70161,15.31171 49.84665,42.14544 57.45499,89.61956\\\"\\n       id=\\\"path5212\\\"\\n       sodipodi:nodetypes=\\\"cc\\\" />\\n    <g\\n       style=\\\"font-style:normal;font-weight:normal;font-size:129.6784668px;line-height:125%;font-family:Sans;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\\\"\\n       id=\\\"text4750\\\">\\n      <path\\n         d=\\\"m 230.101,96.949874 q 4.93893,0 8.7381,2.026226 3.79918,1.96291 6.33196,5.76208 2.53278,3.79917 3.79917,9.3713 1.32971,5.5088 1.32971,12.60059 0,8.16822 -1.83626,18.48931 -3.92582,22.35181 -12.41064,33.05281 -8.4215,10.63769 -21.08541,10.63769 -4.81229,0 -8.42151,-1.89959 -3.54589,-1.9629 -5.88871,-5.63544 -2.34283,-3.73585 -3.5459,-9.0547 -1.13975,-5.31884 -1.13975,-12.09403 0,-4.49569 0.44323,-9.49794 0.50656,-5.00224 1.51967,-10.57436 3.92582,-22.22517 12.03072,-32.6729 8.16822,-10.511046 20.13562,-10.511046 z m -0.44323,5.065566 q -4.1791,0 -7.21843,2.53278 -2.97602,2.53278 -5.31885,7.40839 -2.2795,4.87561 -4.05245,11.9674 -1.70963,7.09179 -3.29262,16.20981 l 27.67065,0 q 0.88648,-5.69876 1.39303,-10.70101 0.50656,-5.06556 0.50656,-9.3713 0,-4.17909 -0.56988,-7.53502 -0.50655,-3.35594 -1.64631,-5.63544 -1.13975,-2.34283 -2.97602,-3.60922 -1.83626,-1.26639 -4.49568,-1.26639 z m -20.83214,43.6905 q -1.01311,6.142 -1.58299,11.6508 -0.56988,5.44548 -0.56988,10.06781 0,3.73585 0.44324,6.77519 0.44324,3.03934 1.45635,5.19221 1.01311,2.15286 2.65942,3.35593 1.64631,1.13976 3.98913,1.13976 4.11578,0 7.34507,-2.59611 3.29262,-2.5961 5.8254,-7.47171 2.59611,-4.93892 4.55901,-12.03071 1.96291,-7.09179 3.5459,-16.08317 l -27.67065,0 z\\\"\\n         style=\\\"font-style:italic;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman,  Italic'\\\"\\n         id=\\\"path4147\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolPan.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-33.40249\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g4759\\\"\\n       transform=\\\"matrix(1.1035479,0,0,1.1035479,259.85038,18.296497)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path4753\\\"\\n         d=\\\"m -92.02537,30.740234 c 2.45111,0 4.90206,1.015331 6.93164,3.044922 l 3.06836,3.06836 0,41.93164 0,41.931644 4.95508,0 4.95508,0 0.35742,-12.1875 0.35742,-12.187503 3.375,-0.390625 c 1.85662,-0.214261 4.5285,0.22835 5.9375,0.982422 2.3433,1.254098 2.5625,2.539225 2.5625,15.076176 l 0,13.70703 4.375,0 4.375,0 0,-7.5 0,-7.5 3.80664,0 c 2.37515,0 4.96071,1.15407 6.875,3.06836 l 3.06836,3.06836 0,27.27148 c 0,29.8793 -0.11379,30.57518 -9.17774,55.85742 -2.44343,6.81549 -4.81894,15.39361 -5.27734,19.0625 l -0.83398,6.67188 -34.67188,0 -34.67187,0 -0.78321,-9.25977 c -1.01374,-11.99243 -4.78475,-21.87779 -11.15039,-29.22656 -2.80546,-3.23874 -6.72177,-9.54492 -8.70117,-14.01367 -6.77955,-15.30563 -9.7463,-20.68795 -14.73633,-26.72657 -5.60352,-6.78105 -6.13962,-9.6299 -2.49609,-13.27343 6.23629,-6.23629 15.622,-0.97085 29.00391,16.27148 l 3.3789,4.35352 0.0586,-50.99414 0.0586,-50.994144 3.14648,-3.146485 c 2.32477,-2.324778 4.20069,-3.044178 7.1875,-2.755859 l 4.04102,0.390625 0.33203,37.1875 0.33008,37.187503 4.98242,0 4.98047,0 0,-41.931644 0,-41.93164 3.06836,-3.06836 c 2.02959,-2.029591 4.48053,-3.044922 6.93164,-3.044922 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:1\\\" />\\n      <path\\n         id=\\\"path4746\\\"\\n         d=\\\"m -92.042969,21.097656 c -4.169447,0.0083 -8.343911,1.22813 -11.527341,3.65625 -2.46099,1.877091 -5.19972,5.050631 -6.08594,7.052735 -1.43274,3.23679 -2.35022,3.702655 -8.29102,4.195312 -7.08275,0.587357 -11.48476,3.067017 -15.875,8.943359 -2.45502,3.286042 -2.59594,5.308607 -2.9414,42.654297 l -0.36133,39.205081 -6.51367,-3.03125 c -3.58178,-1.66763 -8.07753,-3.03792 -9.99024,-3.04492 -5.12526,-0.018 -11.35175,2.95887 -14.46289,6.91406 -5.99633,7.62309 -5.04663,14.71933 3.375,25.21289 3.63938,4.53475 8.11406,12.47823 11.34571,20.13672 3.20064,7.58499 7.30372,14.88134 10.25,18.22851 7.87832,8.95023 10.19097,15.56933 10.84765,31.0586 l 0.56836,13.4375 44.839846,0 44.839843,0 0,-7.83985 c 0,-8.54888 2.179562,-17.0333 9.544922,-37.16015 l 4.802735,-13.125 0.429687,-29.375 c 0.27731,-18.93033 -0.05681,-31.00119 -0.939453,-33.94727 -1.80016,-6.00858 -8.806804,-12.06842 -15.121094,-13.07812 -2.73207,-0.43687 -4.966797,-1.437874 -4.966797,-2.224613 0,-0.78674 -1.694735,-3.485705 -3.765625,-5.998047 -4.1349,-5.016353 -10.661225,-7.804379 -16.328125,-6.972656 l -3.65625,0.537109 0,-24.90625 c 0,-27.98198 -0.682675,-30.943484 -8.515625,-36.917969 -3.16682,-2.415449 -7.332505,-3.619648 -11.501953,-3.611328 z m 0.01758,9.642578 c 2.451114,0 4.902056,1.015331 6.931641,3.044922 l 3.068359,3.06836 0,41.93164 0,41.931644 4.955079,0 4.955078,0 0.357422,-12.1875 0.357421,-12.187503 3.375,-0.390625 c 1.85662,-0.214261 4.5285,0.22835 5.9375,0.982422 2.3433,1.254098 2.5625,2.539225 2.5625,15.076176 l 0,13.70703 4.375,0 4.375,0 0,-7.5 0,-7.5 3.806641,0 c 2.37515,0 4.96071,1.15407 6.875,3.06836 l 3.068359,3.06836 0,27.27148 c 0,29.8793 -0.113784,30.57518 -9.177734,55.85742 -2.44343,6.81549 -4.818944,15.39361 -5.277344,19.0625 l -0.833984,6.67188 -34.671875,0 -34.671874,0 -0.78321,-9.25977 c -1.01374,-11.99243 -4.78475,-21.87779 -11.15039,-29.22656 -2.80546,-3.23874 -6.72177,-9.54492 -8.70117,-14.01367 -6.77955,-15.30563 -9.7463,-20.68795 -14.73633,-26.72657 -5.60352,-6.78105 -6.13962,-9.6299 -2.49609,-13.27343 6.23629,-6.23629 15.622,-0.97085 29.00391,16.27148 l 3.3789,4.35352 0.0586,-50.99414 0.0586,-50.994144 3.14648,-3.146485 c 2.32477,-2.324778 4.20069,-3.044178 7.1875,-2.755859 l 4.04102,0.390625 0.33203,37.1875 0.33008,37.187503 4.98242,0 4.98047,0 0,-41.931644 0,-41.93164 3.068361,-3.06836 c 2.02959,-2.029591 4.480527,-3.044922 6.93164,-3.044922 z\\\"\\n         style=\\\"fill:#000000\\\"\\n         inkscape:connector-curvature=\\\"0\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolDrag.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd5ff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"-114.21469\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       style=\\\"fill:#ffffff;fill-opacity:1\\\"\\n       d=\\\"m 198.5848,262.7811 c 4.20633,-2.11828 10.6979,-6.53843 14.56602,-9.91813 8.37261,-7.31539 14.45656,-16.75062 17.0571,-26.45281 l 1.0485,-3.91179 0.13152,-78.9888 c 0.12928,-77.644351 0.1161,-79.01901 -0.77415,-80.764052 -2.61434,-5.124548 -8.31784,-6.963729 -13.48206,-4.347502 -2.71923,1.377593 -4.29692,3.30956 -5.08124,6.222338 -0.33279,1.235895 -0.3825,12.683532 -0.15789,36.363226 0.35259,37.17213 0.35694,37.08732 -1.99451,38.93698 -2.32354,1.82769 -6.12039,0.96658 -7.48256,-1.69703 -0.35868,-0.70137 -0.51673,-7.58938 -0.51673,-22.52069 0,-12.1911 -0.18698,-22.002082 -0.43159,-22.645446 -0.70246,-1.847607 -3.35617,-4.55936 -5.34669,-5.463631 -3.93544,-1.787837 -9.4322,-0.378546 -12.0852,3.098452 l -1.3336,1.747828 -0.23129,22.471767 c -0.17337,16.84505 -0.37697,22.72645 -0.8131,23.48887 -1.93589,3.38424 -7.07829,3.28127 -8.84694,-0.17715 -0.35869,-0.70137 -0.51672,-7.58938 -0.51672,-22.52069 0,-12.1911 -0.18699,-22.002082 -0.4316,-22.645446 -0.70246,-1.847607 -3.35618,-4.55936 -5.34668,-5.463631 -3.87387,-1.759857 -9.43517,-0.375283 -12.00019,2.987634 -1.8744,2.457453 -2.09288,5.31676 -2.10318,27.525053 l -0.009,20.04219 -1.35216,1.35214 c -1.88621,1.88622 -4.51033,1.88728 -6.62005,0.002 l -1.51068,-1.34958 -0.12936,-20.85437 -0.12937,-20.854377 -11.43597,0 -11.43598,0 -20.3527,13.451137 c -11.19399,7.39813 -20.84853,13.90316 -21.45454,14.45564 -2.60452,2.37443 -3.5731,7.35066 -2.11169,10.84917 1.53903,3.68433 5.1482,6.08608 9.17291,6.10418 2.01671,0.009 3.87187,-0.81214 17.31315,-7.66383 16.39457,-8.35714 16.58526,-8.4167 19.05356,-5.95088 l 1.15645,1.15528 0.23129,23.23462 c 0.12721,12.77904 0.0755,23.87456 -0.11494,24.65671 -0.41334,1.69773 -1.9511,3.20054 -3.69745,3.61342 -1.85784,0.43924 -3.99966,-0.6541 -6.33249,-3.23254 -1.12735,-1.24605 -6.56281,-6.87577 -12.0788,-12.51049 -9.75771,-9.96772 -10.09659,-10.26003 -12.52407,-10.80327 -5.52754,-1.23701 -10.96573,2.29848 -11.76838,7.6509 -0.47382,3.15968 0.52816,6.22712 3.57739,10.95165 3.38012,5.23721 8.36183,15.07942 15.73019,31.07758 7.08217,15.37679 13.71422,28.52253 18.13559,35.94749 8.19423,13.76091 16.10953,22.0795 23.08269,24.25878 1.51837,0.47453 8.21528,0.61604 30.29388,0.64015 l 28.34459,0.0309 3.13903,-1.58079 z\\\"\\n       id=\\\"path4722\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       style=\\\"fill:#000000\\\"\\n       d=\\\"m 134.82466,273.41608 c -5.80862,-1.6108 -10.46095,-4.72519 -16.43545,-11.00231 -4.85695,-5.10295 -8.32243,-9.82569 -13.32153,-18.15452 -3.8183,-6.36155 -13.189163,-25.03627 -18.811557,-37.48861 -5.584843,-12.36919 -11.331247,-23.79278 -14.54321,-28.91127 -3.912906,-6.23548 -4.932004,-8.94395 -5.221532,-13.87741 -0.19007,-3.23866 -0.05317,-4.45531 0.776431,-6.90035 1.08983,-3.21196 2.809606,-5.97011 5.039937,-8.08297 l 1.411555,-1.3372 -2.283176,-2.05276 c -1.524641,-1.37079 -2.855587,-3.21098 -4.00614,-5.53896 -1.531867,-3.09952 -1.7437,-3.96029 -1.90992,-7.76077 -0.22887,-5.23296 0.550666,-8.26182 3.113499,-12.09739 2.180307,-3.26308 0.464333,-2.01174 26.409189,-19.25824 l 21.047404,-13.990971 14.57128,-0.138947 14.57127,-0.138934 1.29094,-1.811486 c 1.75423,-2.461626 4.69929,-4.797698 7.99299,-6.340171 2.47779,-1.160367 3.23542,-1.284647 7.83155,-1.284647 4.7443,0 5.29556,0.09812 8.15223,1.451665 1.68511,0.79842 3.88953,2.197638 4.8987,3.109366 l 1.83486,1.65768 1.34612,-1.406005 c 0.74038,-0.773306 2.8792,-2.163939 4.75294,-3.0903 3.00627,-1.486274 3.90363,-1.705716 7.63257,-1.866503 4.07983,-0.175908 6.07109,0.212155 10.12368,1.972955 0.75135,0.326463 0.80951,-0.165369 0.80951,-6.844982 0,-3.9582 0.2308,-8.299812 0.51286,-9.648026 1.20526,-5.76068 5.29243,-10.78836 10.94834,-13.467677 2.9094,-1.37824 3.43841,-1.473312 8.19847,-1.473312 4.76549,0 5.28676,0.09403 8.21474,1.48093 4.15609,1.968702 7.82558,5.494965 9.71781,9.338492 l 1.49582,3.038319 0.12085,79.570454 c 0.13305,87.59899 0.26376,83.15726 -2.70887,92.04841 -3.74053,11.18789 -11.68774,21.81638 -22.64435,30.2842 -4.65481,3.59747 -11.28374,7.68197 -15.47744,9.53662 l -2.56783,1.13562 -30.40146,-0.0414 c -22.76429,-0.031 -30.92439,-0.18638 -32.48308,-0.61863 z M 198.5848,262.7811 c 4.20633,-2.11828 10.6979,-6.53843 14.56602,-9.91813 8.37261,-7.31539 14.45656,-16.75062 17.0571,-26.45281 l 1.0485,-3.91179 0.13152,-78.9888 c 0.12928,-77.644351 0.1161,-79.01901 -0.77415,-80.764052 -2.61434,-5.124548 -8.31784,-6.963729 -13.48206,-4.347502 -2.71923,1.377593 -4.29692,3.30956 -5.08124,6.222338 -0.33279,1.235895 -0.3825,12.683532 -0.15789,36.363226 0.35259,37.17213 0.35694,37.08732 -1.99451,38.93698 -2.32354,1.82769 -6.12039,0.96658 -7.48256,-1.69703 -0.35868,-0.70137 -0.51673,-7.58938 -0.51673,-22.52069 0,-12.1911 -0.18698,-22.002082 -0.43159,-22.645446 -0.70246,-1.847607 -3.35617,-4.55936 -5.34669,-5.463631 -3.93544,-1.787837 -9.4322,-0.378546 -12.0852,3.098452 l -1.3336,1.747828 -0.23129,22.471767 c -0.17337,16.84505 -0.37697,22.72645 -0.8131,23.48887 -1.93589,3.38424 -7.07829,3.28127 -8.84694,-0.17715 -0.35869,-0.70137 -0.51672,-7.58938 -0.51672,-22.52069 0,-12.1911 -0.18699,-22.002082 -0.4316,-22.645446 -0.70246,-1.847607 -3.35618,-4.55936 -5.34668,-5.463631 -3.87387,-1.759857 -9.43517,-0.375283 -12.00019,2.987634 -1.8744,2.457453 -2.09288,5.31676 -2.10318,27.525053 l -0.009,20.04219 -1.35216,1.35214 c -1.88621,1.88622 -4.51033,1.88728 -6.62005,0.002 l -1.51068,-1.34958 -0.12936,-20.85437 -0.12937,-20.854377 -11.43597,0 -11.43598,0 -20.3527,13.451137 c -11.193992,7.39813 -20.848528,13.90316 -21.454536,14.45564 -2.604526,2.37443 -3.573104,7.35066 -2.111693,10.84917 1.539032,3.68433 5.148195,6.08608 9.172907,6.10418 2.016712,0.009 3.871872,-0.81214 17.313152,-7.66383 16.39457,-8.35714 16.58526,-8.4167 19.05356,-5.95088 l 1.15645,1.15528 0.23129,23.23462 c 0.12721,12.77904 0.0755,23.87456 -0.11494,24.65671 -0.41334,1.69773 -1.9511,3.20054 -3.69745,3.61342 -1.85784,0.43924 -3.99966,-0.6541 -6.33249,-3.23254 -1.12735,-1.24605 -6.56281,-6.87577 -12.0788,-12.51049 -9.757714,-9.96772 -10.096591,-10.26003 -12.524074,-10.80327 -5.527533,-1.23701 -10.965729,2.29848 -11.768371,7.6509 -0.473825,3.15968 0.52816,6.22712 3.577384,10.95165 3.380116,5.23721 8.361832,15.07942 15.730189,31.07758 7.082172,15.37679 13.714222,28.52253 18.135592,35.94749 8.19423,13.76091 16.10953,22.0795 23.08269,24.25878 1.51837,0.47453 8.21528,0.61604 30.29388,0.64015 l 28.34459,0.0309 3.13903,-1.58079 z M 112.90759,139.5978 c -0.21058,-0.21058 -4.68064,1.97376 -11.17695,5.46172 l -4.182758,2.24578 7.652108,7.94148 7.65211,7.94149 0.12373,-11.69925 c 0.0681,-6.43459 0.0373,-11.78563 -0.0682,-11.89122 z\\\"\\n       id=\\\"path4716\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.47 r22583\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"RetroErasor.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/BondLinear.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       sodipodi:type=\\\"inkscape:persp3d\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       id=\\\"perspective16\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0.0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"1.4\\\"\\n     inkscape:cx=\\\"101.20996\\\"\\n     inkscape:cy=\\\"115.93898\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1387\\\"\\n     inkscape:window-height=\\\"856\\\"\\n     inkscape:window-x=\\\"53\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"0\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid2983\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <g\\n       id=\\\"g3805\\\"\\n       transform=\\\"matrix(0.95048511,0,0,0.95048511,-7.209769,-44.503179)\\\">\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3021\\\"\\n         d=\\\"m 30,220 0,80 130,0 0,-80 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3029\\\"\\n         d=\\\"m 30,220 60,-30 130,0 -60,30 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         sodipodi:nodetypes=\\\"cccc\\\"\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3031\\\"\\n         d=\\\"m 90,190 120,-60 120,0 -110,60\\\"\\n         style=\\\"fill:#000000;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3033\\\"\\n         d=\\\"m 160,220 60,-30 0,80 -60,30 z\\\"\\n         style=\\\"fill:#ffffff;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n      <path\\n         inkscape:connector-curvature=\\\"0\\\"\\n         id=\\\"path3035\\\"\\n         d=\\\"m 220,190 0,80 110,-60 0,-80\\\"\\n         style=\\\"fill:#000000;fill-opacity:0.50196078;stroke:#000000;stroke-width:5;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none\\\" />\\n    </g>\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolRing.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.98994949\\\"\\n     inkscape:cx=\\\"195.90214\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:window-maximized=\\\"1\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"star\\\"\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4140\\\"\\n       sodipodi:sides=\\\"6\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:r1=\\\"134.46693\\\"\\n       sodipodi:r2=\\\"116.45179\\\"\\n       sodipodi:arg1=\\\"1.5707963\\\"\\n       sodipodi:arg2=\\\"2.0943951\\\"\\n       inkscape:flatsided=\\\"true\\\"\\n       inkscape:rounded=\\\"0\\\"\\n       inkscape:randomized=\\\"0\\\"\\n       d=\\\"M 160,294.46693 43.548221,227.23347 43.548217,92.766536 160,25.533066 276.45178,92.76653 l 0,134.46693 z\\\" />\\n  </g>\\n</svg>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\\n\\n<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   width=\\\"320\\\"\\n   height=\\\"320\\\"\\n   id=\\\"svg2\\\"\\n   sodipodi:version=\\\"0.32\\\"\\n   inkscape:version=\\\"0.91 r13725\\\"\\n   version=\\\"1.0\\\"\\n   sodipodi:docname=\\\"ToolArom.svg\\\"\\n   inkscape:output_extension=\\\"org.inkscape.output.svg.inkscape\\\"\\n   inkscape:export-filename=\\\"/home/aclark/CRK3/MMTk/images/msk/MainSelect.png\\\"\\n   inkscape:export-xdpi=\\\"9\\\"\\n   inkscape:export-ydpi=\\\"9\\\">\\n  <defs\\n     id=\\\"defs4\\\">\\n    <inkscape:perspective\\n       id=\\\"perspective8\\\"\\n       inkscape:persp3d-origin=\\\"160 : 106.66667 : 1\\\"\\n       inkscape:vp_z=\\\"320 : 160 : 1\\\"\\n       inkscape:vp_y=\\\"0 : 1000 : 0\\\"\\n       inkscape:vp_x=\\\"0 : 160 : 1\\\"\\n       sodipodi:type=\\\"inkscape:persp3d\\\" />\\n  </defs>\\n  <sodipodi:namedview\\n     id=\\\"base\\\"\\n     pagecolor=\\\"#bcd7fd\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1.0\\\"\\n     gridtolerance=\\\"10000\\\"\\n     guidetolerance=\\\"10\\\"\\n     objecttolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:zoom=\\\"0.7\\\"\\n     inkscape:cx=\\\"19.717178\\\"\\n     inkscape:cy=\\\"158.28825\\\"\\n     inkscape:document-units=\\\"px\\\"\\n     inkscape:current-layer=\\\"layer1\\\"\\n     width=\\\"320px\\\"\\n     height=\\\"320px\\\"\\n     showborder=\\\"true\\\"\\n     inkscape:window-width=\\\"1857\\\"\\n     inkscape:window-height=\\\"1155\\\"\\n     inkscape:window-x=\\\"63\\\"\\n     inkscape:window-y=\\\"0\\\"\\n     showgrid=\\\"true\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:snap-global=\\\"true\\\"\\n     inkscape:snap-bbox=\\\"true\\\">\\n    <inkscape:grid\\n       type=\\\"xygrid\\\"\\n       id=\\\"grid4135\\\" />\\n  </sodipodi:namedview>\\n  <metadata\\n     id=\\\"metadata7\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title />\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <g\\n     inkscape:label=\\\"Layer 1\\\"\\n     inkscape:groupmode=\\\"layer\\\"\\n     id=\\\"layer1\\\">\\n    <path\\n       sodipodi:type=\\\"star\\\"\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4140\\\"\\n       sodipodi:sides=\\\"6\\\"\\n       sodipodi:cx=\\\"160\\\"\\n       sodipodi:cy=\\\"160\\\"\\n       sodipodi:r1=\\\"134.46693\\\"\\n       sodipodi:r2=\\\"116.45179\\\"\\n       sodipodi:arg1=\\\"1.5707963\\\"\\n       sodipodi:arg2=\\\"2.0943951\\\"\\n       inkscape:flatsided=\\\"true\\\"\\n       inkscape:rounded=\\\"0\\\"\\n       inkscape:randomized=\\\"0\\\"\\n       d=\\\"M 160,294.46693 43.548221,227.23347 43.548217,92.766536 160,25.533066 276.45178,92.76653 l 0,134.46693 z\\\" />\\n    <circle\\n       style=\\\"opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1\\\"\\n       id=\\\"path4138\\\"\\n       cx=\\\"160\\\"\\n       cy=\\\"160\\\"\\n       r=\\\"73.650795\\\" />\\n  </g>\\n</svg>\\n\";","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CoordUtil } from '../mol/CoordUtil';\nimport { DataSheetStream } from '../io/DataSheetStream';\nimport { Molecule } from '../mol/Molecule';\nimport { MoleculeStream } from '../io/MoleculeStream';\nimport { MolUtil } from '../mol/MolUtil';\nimport { PolymerBlock } from '../mol/PolymerBlock';\nimport { SketchUtil } from '../mol/SketchUtil';\nimport { ArrangeMolecule } from '../gfx/ArrangeMolecule';\nimport { DrawMolecule } from '../gfx/DrawMolecule';\nimport { MetaVector } from '../gfx/MetaVector';\nimport { RenderEffects, RenderPolicy } from '../gfx/Rendering';\nimport { ButtonView, ButtonViewPosition } from '../ui/ButtonView';\nimport { angleDiff, clone, DEGRAD, eventCoords, norm2_xy, norm_xy, RADDEG, TWOPI } from '../util/util';\nimport { Vec } from '../util/Vec';\nimport { CommandBank } from './CommandBank';\nimport { ContextSketch } from './ContextSketch';\nimport { DraggingTool, DrawCanvas } from './DrawCanvas';\nimport { EditAtom } from './EditAtom';\nimport { EditBond } from './EditBond';\nimport { EditPolymer } from './EditPolymer';\nimport { ActivityType, MoleculeActivity } from './MoleculeActivity';\nimport { FusionBank, TemplateBank } from './TemplateBank';\nimport { ToolBank, ToolBankItem } from './ToolBank';\nclass Sketcher extends DrawCanvas {\n    constructor() {\n        super();\n        this.plugins = {};\n        this.inDialog = false;\n        this.initialFocus = true;\n        this.useToolBank = true;\n        this.lowerToolBank = false;\n        this.useCommandBank = true;\n        this.lowerCommandBank = false;\n        this.useTemplateBank = true;\n        this.lowerTemplateBank = false;\n        this.debugOutput = undefined;\n        this.beenSetup = false;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.fadeWatermark = 0;\n        this.toolView = null;\n        this.commandView = null;\n        this.templateView = null;\n        this.proxyClip = null;\n        this.proxyMenu = null;\n    }\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    defineMolecule(mol, withAutoScale = true, withStashUndo = false, keepSelect = false) {\n        if (mol.compareTo(this.mol) == 0)\n            return;\n        if (withStashUndo)\n            this.stashUndo();\n        this.stopTemplateFusion();\n        this.mol = mol.clone();\n        if (this.callbackChangeMolecule)\n            this.callbackChangeMolecule(this.mol);\n        this.guidelines = [];\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            for (let sprout of SketchUtil.guidelineSprouts(this.mol, n))\n                this.guidelines.push(sprout);\n        }\n        if (!this.beenSetup)\n            return;\n        if (!keepSelect) {\n            this.currentAtom = this.currentBond = 0;\n            this.selectedMask = null;\n        }\n        this.stereo = null;\n        this.hoverAtom = 0;\n        this.hoverBond = 0;\n        if (!withAutoScale)\n            this.renderMolecule();\n        else\n            this.autoScale();\n    }\n    defineClipboard(proxy) {\n        this.proxyClip = proxy;\n    }\n    defineContext(proxy) {\n        this.proxyMenu = proxy;\n    }\n    defineMoleculeString(molsk, withAutoScale, withStashUndo) {\n        this.defineMolecule(Molecule.fromString(molsk), withAutoScale, withStashUndo);\n    }\n    defineRenderPolicy(policy) {\n        this.policy = policy;\n        this.pointScale = policy.data.pointScale;\n    }\n    defineBackground(borderCol, borderRad, bgCol) {\n        if (borderCol != null)\n            this.border = borderCol;\n        if (borderRad != null)\n            this.borderRadius = borderRad;\n        if (bgCol != null)\n            this.background = bgCol;\n    }\n    clearMolecule() { this.defineMolecule(new Molecule(), true, true); }\n    getMolecule() { return this.mol.clone(); }\n    setup(callback) {\n        this.beenSetup = true;\n        if (this.mol == null)\n            this.mol = new Molecule();\n        if (this.policy == null) {\n            this.policy = RenderPolicy.defaultColourOnWhite();\n            this.pointScale = this.policy.data.pointScale;\n        }\n        this.layoutMolecule();\n        this.centreAndShrink();\n        this.redrawMetaVector();\n        if (callback)\n            callback();\n    }\n    setupAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => this.setup(() => resolve()));\n        });\n    }\n    render(parent) {\n        super.render(parent);\n        this.centreAndShrink();\n        this.redraw();\n        let reserveHeight = 0;\n        if (this.useCommandBank) {\n            this.commandView = new ButtonView(ButtonViewPosition.Bottom, 0, 0, this.width, this.height);\n            if (this.lowerCommandBank)\n                this.commandView.lowerBank();\n            this.commandView.setHasBigButtons(false);\n            this.commandView.pushBank(new CommandBank(this));\n            this.commandView.render(this.container);\n            reserveHeight = this.commandView.height;\n        }\n        if (this.useToolBank) {\n            this.toolView = new ButtonView(ButtonViewPosition.Left, 0, 0, this.width, this.height - reserveHeight);\n            if (this.lowerToolBank)\n                this.toolView.lowerBank();\n            this.toolView.setHasBigButtons(false);\n            this.toolView.pushBank(new ToolBank(this));\n            this.toolView.render(this.container);\n        }\n        if (this.useTemplateBank) {\n            this.templateView = new ButtonView(ButtonViewPosition.Right, 0, 0, this.width, this.height - reserveHeight);\n            if (this.lowerTemplateBank)\n                this.templateView.lowerBank();\n            this.templateView.setHasBigButtons(true);\n            this.templateView.pushBank(new TemplateBank(this, null));\n            this.templateView.render(this.container);\n        }\n        this.container.onClick((event) => this.mouseClick(event));\n        this.container.onDblClick((event) => this.mouseDoubleClick(event));\n        this.container.onMouseDown((event) => this.mouseDown(event));\n        this.container.onMouseUp((event) => this.mouseUp(event));\n        this.container.onMouseOver((event) => this.mouseOver(event));\n        this.container.onMouseLeave((event) => this.mouseOut(event));\n        this.container.onMouseMove((event) => this.mouseMove(event));\n        this.container.onKeyPress((event) => this.keyPressed(event));\n        this.container.onKeyDown((event) => this.keyDown(event));\n        this.container.onKeyUp((event) => this.keyUp(event));\n        this.container.onTouchStart((event) => this.touchStart(event));\n        this.container.onTouchMove((event) => this.touchMove(event));\n        this.container.onTouchCancel((event) => this.touchCancel(event));\n        this.container.onTouchEnd((event) => this.touchEnd(event));\n        this.contentDOM.onContextMenu((event) => this.contextMenu(event));\n        this.container.el.addEventListener('dragover', (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            event.dataTransfer.dropEffect = 'copy';\n        });\n        this.container.el.addEventListener('drop', (event) => {\n            event.stopPropagation();\n            event.preventDefault();\n            this.dropInto(event.dataTransfer);\n        });\n        if (this.initialFocus)\n            this.grabFocus();\n    }\n    get decoration() { return this.viewOpt.decoration; }\n    set decoration(decoration) { if (this.viewOpt.decoration != decoration) {\n        this.viewOpt.decoration = decoration;\n        this.renderMolecule();\n    } }\n    get showOxState() { return this.viewOpt.showOxState; }\n    set showOxState(showOxState) { if (this.viewOpt.showOxState != showOxState) {\n        this.viewOpt.showOxState = showOxState;\n        this.renderMolecule();\n    } }\n    get showQuery() { return this.viewOpt.showQuery; }\n    set showQuery(showQuery) { if (this.viewOpt.showQuery != showQuery) {\n        this.viewOpt.showQuery = showQuery;\n        this.renderMolecule();\n    } }\n    get showArtifacts() { return this.viewOpt.showArtifacts; }\n    set showArtifacts(showArtifacts) { if (this.viewOpt.showArtifacts != showArtifacts) {\n        this.viewOpt.showArtifacts = showArtifacts;\n        this.renderMolecule();\n    } }\n    changeSize(width, height) {\n        if (width == this.width && height == this.height)\n            return;\n        this.width = width;\n        this.height = height;\n        for (let widget of [this.container, this.canvasUnder, this.canvasMolecule, this.canvasOver]) {\n            widget.css({ 'width': `${width}px`, 'height': `${height}px` });\n        }\n        for (let btnv of [this.commandView, this.toolView, this.templateView])\n            if (btnv) {\n                btnv.setParentSize(width, height);\n                btnv.refreshBank();\n            }\n        this.autoScale();\n    }\n    showMessage(msg, isError = false) {\n        let watermark = ++this.fadeWatermark;\n        this.divMessage.css({ 'color': isError ? '#FF0000' : '#008000' });\n        this.divMessage.setText(msg);\n        let szLeft = (this.toolView == null ? 0 : this.toolView.width) + 2;\n        let szRight = (this.templateView == null ? 0 : this.templateView.width) + 2;\n        let szBottom = (this.commandView == null ? 0 : this.commandView.height) + 2;\n        this.divMessage.css({ 'left': szLeft + 'px' });\n        this.divMessage.css({ 'width': (this.width - szLeft - szRight) + 'px' });\n        this.divMessage.css({ 'height': (this.height - szBottom) + 'px' });\n        window.setTimeout(() => {\n            if (watermark == this.fadeWatermark)\n                this.divMessage.setText('');\n        }, 5000);\n    }\n    clearMessage() {\n        if (this.divMessage.getText() == '')\n            return;\n        this.fadeWatermark++;\n        this.divMessage.setText('');\n    }\n    autoScale() {\n        this.pointScale = this.policy.data.pointScale;\n        this.layoutMolecule();\n        this.centreAndShrink();\n        this.redrawMetaVector();\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    anySelected() {\n        if (this.selectedMask == null)\n            return false;\n        for (let n = 0; n < this.selectedMask.length; n++)\n            if (this.selectedMask[n])\n                return true;\n        return false;\n    }\n    setSelected(atom, sel) {\n        if (this.selectedMask == null) {\n            this.selectedMask = new Array(this.mol.numAtoms);\n            for (let n = this.selectedMask.length - 1; n >= 0; n--)\n                this.selectedMask[n] = false;\n        }\n        while (this.selectedMask.length < this.mol.numAtoms) {\n            this.selectedMask.push(false);\n        }\n        this.selectedMask[atom - 1] = sel;\n        this.delayedRedraw();\n    }\n    changeCurrentAtom(atom) {\n        if (this.currentAtom == atom)\n            return;\n        this.currentAtom = atom;\n        this.currentBond = 0;\n        this.delayedRedraw();\n    }\n    changeCurrentBond(bond) {\n        if (this.currentBond == bond)\n            return;\n        this.currentBond = bond;\n        this.currentAtom = 0;\n        this.delayedRedraw();\n    }\n    clearSubject() {\n        if (this.currentAtom == 0 && this.currentBond == 0 && Vec.allFalse(this.selectedMask))\n            return;\n        this.currentAtom = 0;\n        this.currentBond = 0;\n        this.selectedMask = Vec.booleanArray(false, this.mol.numAtoms);\n        this.delayedRedraw();\n    }\n    setState(state, withStashUndo = true) {\n        this.stopTemplateFusion();\n        if (state.mol != null)\n            this.defineMolecule(state.mol.clone(), false, withStashUndo, true);\n        if (state.currentAtom >= 0)\n            this.currentAtom = state.currentAtom;\n        if (state.currentBond >= 0)\n            this.currentBond = state.currentBond;\n        if (state.selectedMask != null)\n            this.selectedMask = state.selectedMask == null ? null : state.selectedMask.slice(0);\n        this.delayedRedraw();\n    }\n    stashUndo() {\n        let state = this.getState();\n        this.undoStack.push(state);\n        while (this.undoStack.length > Sketcher.UNDO_SIZE) {\n            this.undoStack.splice(0, 1);\n        }\n        this.redoStack = [];\n    }\n    setPermutations(perms) {\n        this.templatePerms = perms;\n        this.pickTemplatePermutation(0);\n        this.fusionBank = new FusionBank(this);\n        this.templateView.pushBank(this.fusionBank);\n        if (this.mol.numAtoms == 0)\n            this.centreAndShrink();\n    }\n    stopTemplateFusion() {\n        if (this.fusionBank != null)\n            this.templateView.popBank();\n    }\n    clearPermutations() {\n        if (this.templatePerms == null)\n            return;\n        this.templatePerms = null;\n        this.delayedRedraw();\n        this.fusionBank = null;\n    }\n    templateAccept() {\n        let mol = Molecule.fromString(this.templatePerms[this.currentPerm].mol);\n        this.templateView.popBank();\n        this.defineMolecule(mol, false, true, false);\n    }\n    templateRotate(dir) {\n        let idx = (this.currentPerm + dir) % this.templatePerms.length;\n        if (idx < 0)\n            idx += this.templatePerms.length;\n        this.pickTemplatePermutation(idx);\n    }\n    canUndo() { return this.undoStack.length > 0; }\n    canRedo() { return this.redoStack.length > 0; }\n    performUndo() {\n        if (this.undoStack.length == 0)\n            return;\n        let state = this.getState();\n        this.redoStack.push(state);\n        this.setState(this.undoStack.pop(), false);\n    }\n    performRedo() {\n        if (this.redoStack.length == 0)\n            return;\n        let state = this.getState();\n        this.undoStack.push(state);\n        this.setState(this.redoStack.pop(), false);\n    }\n    performCopy(mol) {\n        if (!mol)\n            mol = this.getMolecule();\n        if (this.proxyClip)\n            this.proxyClip.setString(mol.toString());\n    }\n    performCopySelection(andCut) {\n        new MoleculeActivity(this.getState(), andCut ? ActivityType.Cut : ActivityType.Copy, {}, this).execute();\n    }\n    performPaste() {\n        if (this.proxyClip && this.proxyClip.canAlwaysGet()) {\n            let txt = this.proxyClip.getString();\n            this.pasteText(txt);\n        }\n    }\n    performActivity(activity, param = {}) {\n        new MoleculeActivity(this.getState(), activity, param, this).execute();\n    }\n    zoom(mag) {\n        let cx = 0.5 * this.width, cy = 0.5 * this.height;\n        let newScale = Math.min(10 * this.policy.data.pointScale, Math.max(0.1 * this.policy.data.pointScale, this.pointScale * mag));\n        if (newScale == this.pointScale)\n            return;\n        this.offsetX = cx - (newScale / this.pointScale) * (cx - this.offsetX);\n        this.offsetY = cy - (newScale / this.pointScale) * (cy - this.offsetY);\n        this.pointScale = newScale;\n        this.layoutMolecule();\n        this.redrawMetaVector();\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    editCurrent() {\n        if (this.currentBond > 0)\n            this.editBond(this.currentBond);\n        else\n            this.editAtom(this.currentAtom);\n    }\n    pasteText(str) {\n        const pasteLocal = () => {\n            let mol = MoleculeStream.readUnknown(str);\n            if (!mol) {\n                let ds = DataSheetStream.readXML(str);\n                if (ds) {\n                    outer: for (let r = 0; r < ds.numRows; r++)\n                        for (let c = 0; c < ds.numCols; c++)\n                            if (ds.colType(c) == \"molecule\" && ds.notNull(r, c)) {\n                                mol = ds.getMolecule(r, c);\n                                break outer;\n                            }\n                }\n            }\n            if (mol != null)\n                this.pasteMolecule(mol);\n            else\n                alert('Text from clipboard is not a valid molecule.');\n        };\n        if (this.plugins.callbackSpecialPaste) {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                let mol = yield this.plugins.callbackSpecialPaste(str);\n                if (mol)\n                    this.pasteMolecule(mol);\n                else\n                    pasteLocal();\n            }))();\n        }\n        else\n            pasteLocal();\n    }\n    pasteMolecule(mol) {\n        if (this.mol.numAtoms == 0) {\n            this.defineMolecule(mol, true, true, true);\n            return;\n        }\n        let molact = new MoleculeActivity(this.getState(), ActivityType.QueryPaste, { qmol: mol });\n        molact.execute();\n        if (molact.output.mol) {\n            this.defineMolecule(molact.output.mol, false, true, true);\n            return;\n        }\n        let param = { fragNative: mol.toString() };\n        new MoleculeActivity(this.getState(), ActivityType.TemplateFusion, param, this).execute();\n    }\n    pickTemplatePermutation(idx) {\n        let perm = this.templatePerms[idx];\n        this.currentPerm = idx;\n        this.layoutTemplatePerm();\n        this.delayedRedraw();\n    }\n    performPolymerBlock(atoms) {\n        let dlg = new EditPolymer(this.mol, atoms, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        this.inDialog = true;\n        dlg.open();\n    }\n    grabFocus() {\n        this.container.grabFocus();\n    }\n    hasFocus() {\n        return this.container.hasFocus();\n    }\n    centreAndShrink() {\n        if (this.mol.numAtoms == 0 || this.layout == null) {\n            this.offsetX = 0.5 * this.width;\n            this.offsetY = 0.5 * this.height;\n            this.pointScale = this.policy.data.pointScale;\n            return;\n        }\n        let bounds = this.layout.determineBoundary(0);\n        let limW = this.width - 6, limH = this.height - 6;\n        let natW = bounds[2] - bounds[0], natH = bounds[3] - bounds[1];\n        let scale = 1;\n        if (natW > limW) {\n            let down = limW / natW;\n            scale *= down;\n            natW *= down;\n            natH *= down;\n        }\n        if (natH > limH) {\n            let down = limH / natH;\n            scale *= down;\n            natW *= down;\n            natH *= down;\n        }\n        if (scale < 1) {\n            this.pointScale *= scale;\n            this.layout.offsetEverything(this.offsetX * scale, this.offsetY * scale);\n            this.layout.scaleEverything(scale);\n            bounds = this.layout.determineBoundary(0);\n        }\n        let dx = 0.5 * (limW - natW) - bounds[0], dy = 0.5 * (limH - natH) - bounds[1];\n        this.offsetX += dx;\n        this.offsetY += dy;\n        this.layout.offsetEverything(dx, dy);\n    }\n    layoutTemplatePerm() {\n        if (this.currentPerm < 0 || this.templatePerms == null)\n            return;\n        let perm = this.templatePerms[this.currentPerm];\n        let tpolicy = new RenderPolicy(this.policy.data);\n        tpolicy.data.foreground = 0x808080;\n        tpolicy.data.atomCols = tpolicy.data.atomCols.slice(0);\n        for (let n in tpolicy.data.atomCols)\n            tpolicy.data.atomCols[n] = 0x808080;\n        let effects = new RenderEffects();\n        let layout = new ArrangeMolecule(Molecule.fromString(perm.display), this, tpolicy, effects);\n        layout.arrange();\n        perm.metavec = new MetaVector();\n        new DrawMolecule(layout, perm.metavec).draw();\n    }\n    renderMolecule() {\n        this.layoutMolecule();\n        this.redrawMetaVector();\n        this.delayedRedraw();\n    }\n    pickObjectCanvas(x, y) {\n        if (this.layout == null)\n            return 0;\n        if (this.toolView != null) {\n            let pos1 = this.container.offset(), pos2 = this.toolView.contentDOM.offset();\n            if (this.toolView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        if (this.commandView != null) {\n            let pos1 = this.container.offset(), pos2 = this.commandView.contentDOM.offset();\n            if (this.commandView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        if (this.templateView != null) {\n            let pos1 = this.container.offset(), pos2 = this.templateView.contentDOM.offset();\n            if (this.templateView.withinOutline(x + pos1.x - pos2.x, y + pos1.y - pos2.y))\n                return null;\n        }\n        return super.pickObjectCanvas(x, y);\n    }\n    updateHoverCursor(x, y) {\n        let tool = this.toolView ? this.toolView.selectedButton : '';\n        let toolApplies = tool && tool != ToolBankItem.Pan && tool != ToolBankItem.Rotate;\n        let mouseObj = 0;\n        if (this.dragType == DraggingTool.None && toolApplies) {\n            mouseObj = this.pickObject(x, y);\n        }\n        let mouseAtom = mouseObj > 0 ? mouseObj : 0, mouseBond = mouseObj < 0 ? -mouseObj : 0;\n        let abbrevThen = this.hoverAtom > 0 && MolUtil.hasAbbrev(this.mol, this.hoverAtom) ? this.hoverAtom : 0;\n        let abbrevNow = mouseAtom > 0 && MolUtil.hasAbbrev(this.mol, mouseAtom) ? mouseAtom : 0;\n        if (mouseAtom != this.hoverAtom || mouseBond != this.hoverBond) {\n            this.hoverAtom = mouseAtom;\n            this.hoverBond = mouseBond;\n            if (abbrevThen != abbrevNow) {\n                this.layoutMolecule();\n                this.redrawMetaVector();\n            }\n            this.delayedRedraw();\n        }\n    }\n    determineDragGuide(order) {\n        if (this.opAtom == 0 || this.mol.atomAdjCount(this.opAtom) == 0) {\n            let g = {\n                atom: this.opAtom,\n                orders: [order],\n                x: [],\n                y: [],\n                sourceX: this.opAtom == 0 ? this.clickX : this.angToX(this.mol.atomX(this.opAtom)),\n                sourceY: this.opAtom == 0 ? this.clickY : this.angToY(this.mol.atomY(this.opAtom)),\n                destX: [],\n                destY: []\n            };\n            let mx = this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom);\n            let my = this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom);\n            for (let n = 0; n < 12; n++) {\n                let theta = TWOPI * n / 12;\n                let dx = Molecule.IDEALBOND * Math.cos(theta), dy = Molecule.IDEALBOND * Math.sin(theta);\n                g.x.push(mx + dx);\n                g.y.push(my + dy);\n                g.destX.push(g.sourceX + dx * this.pointScale);\n                g.destY.push(g.sourceY - dy * this.pointScale);\n            }\n            return [g];\n        }\n        if (this.guidelines == null)\n            return null;\n        let best = null, single = null;\n        for (let n = 0; n < this.guidelines.length; n++) {\n            let g = this.guidelines[n];\n            if (g.atom != this.opAtom)\n                continue;\n            if (g.orders.indexOf(order) >= 0) {\n                best = g;\n                break;\n            }\n            if (g.orders.indexOf(1) >= 0)\n                single = g;\n        }\n        if (best == null)\n            best = single;\n        if (best == null)\n            return [];\n        let g = clone(best);\n        g.sourceX = this.angToX(this.mol.atomX(g.atom));\n        g.sourceY = this.angToY(this.mol.atomY(g.atom));\n        g.destX = [];\n        g.destY = [];\n        for (let n = 0; n < g.x.length; n++) {\n            g.destX.push(this.angToX(g.x[n]));\n            g.destY.push(this.angToY(g.y[n]));\n        }\n        return [g];\n    }\n    determineMoveGuide() {\n        let subj = this.subjectAtoms(false, true);\n        if (subj.length == 0 || subj.length == this.mol.numAtoms)\n            return null;\n        let guides = [];\n        for (let n = 0; n < this.guidelines.length; n++) {\n            let g = this.guidelines[n];\n            if (g.orders.indexOf(1) < 0 || subj.indexOf(g.atom) >= 0)\n                continue;\n            g = clone(g);\n            g.sourceX = this.angToX(this.mol.atomX(g.atom));\n            g.sourceY = this.angToY(this.mol.atomY(g.atom));\n            g.destX = [];\n            g.destY = [];\n            for (let i = 0; i < g.x.length; i++) {\n                g.destX.push(this.angToX(g.x[i]));\n                g.destY.push(this.angToY(g.y[i]));\n            }\n            guides.push(g);\n        }\n        return guides;\n    }\n    editAtom(atom) {\n        let dlg = new EditAtom(this.mol, atom, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        if (atom == 0 && this.mol.numAtoms > 0) {\n            let box = this.mol.boundary();\n            dlg.newX = box.maxX() + Molecule.IDEALBOND;\n            dlg.newY = box.midY();\n        }\n        this.inDialog = true;\n        dlg.open();\n    }\n    editBond(bond) {\n        if (bond == 0)\n            return;\n        let dlg = new EditBond(this.mol, bond, this.proxyClip, () => {\n            if (this.mol.compareTo(dlg.mol) != 0)\n                this.defineMolecule(dlg.mol, false, true, true);\n            dlg.close();\n        });\n        dlg.callbackClose = () => {\n            this.inDialog = false;\n            this.grabFocus();\n        };\n        this.inDialog = true;\n        dlg.open();\n    }\n    hitArrowKey(dx, dy) {\n        let watermark = ++this.cursorWatermark;\n        this.cursorDX += dx;\n        this.cursorDY += dy;\n        setTimeout(() => {\n            if (watermark == this.cursorWatermark)\n                this.cursorJumpDirection();\n        }, 100);\n    }\n    cursorJumpDirection() {\n        let theta = Math.atan2(this.cursorDY, this.cursorDX);\n        if (this.currentAtom > 0)\n            this.jumpFromCurrentAtom(theta);\n        else if (this.currentBond > 0)\n            this.jumpFromCurrentBond(theta);\n        else\n            this.jumpFromNowhere(theta);\n        this.cursorDX = 0;\n        this.cursorDY = 0;\n        this.cursorWatermark = 0;\n    }\n    jumpFromCurrentAtom(theta) {\n        let adj = this.mol.atomAdjList(this.currentAtom);\n        let closest = 0, closestDelta = Number.MAX_VALUE;\n        for (let a of adj) {\n            let dx = this.mol.atomX(a) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(a) - this.mol.atomY(this.currentAtom);\n            let adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n            if (delta < 35.0 * DEGRAD && delta < closestDelta)\n                [closest, closestDelta] = [a, delta];\n        }\n        if (closest > 0) {\n            this.changeCurrentBond(this.mol.findBond(this.currentAtom, closest));\n            return;\n        }\n        let best = 0, bestScore = Number.MIN_VALUE;\n        for (let n = 1; n <= this.mol.numAtoms; n++)\n            if (n != this.currentAtom && adj.indexOf(n) < 0) {\n                let dx = this.mol.atomX(n) - this.mol.atomX(this.currentAtom), dy = this.mol.atomY(n) - this.mol.atomY(this.currentAtom);\n                let adjTheta = Math.atan2(dy, dx), delta = Math.abs(angleDiff(adjTheta, theta));\n                if (delta > 45.0 * DEGRAD)\n                    continue;\n                let cosdelta = Math.cos(delta);\n                let score = Math.pow(cosdelta, 2) / (norm2_xy(dx, dy) + 0.001);\n                if (score > bestScore)\n                    [best, bestScore] = [n, score];\n            }\n        if (best > 0)\n            this.changeCurrentAtom(best);\n    }\n    jumpFromCurrentBond(theta) {\n        let [bfr, bto] = this.mol.bondFromTo(this.currentBond);\n        let bondTheta = Math.atan2(this.mol.atomY(bto) - this.mol.atomY(bfr), this.mol.atomX(bto) - this.mol.atomX(bfr));\n        if (Math.abs(angleDiff(theta, bondTheta)) < 50.0 * DEGRAD)\n            this.changeCurrentAtom(bto);\n        if (Math.abs(angleDiff(theta, bondTheta + Math.PI)) < 50.0 * DEGRAD)\n            this.changeCurrentAtom(bfr);\n    }\n    jumpFromNowhere(theta) {\n        if (this.mol.numAtoms == 0)\n            return;\n        if (this.mol.numAtoms == 1) {\n            this.changeCurrentAtom(1);\n            return;\n        }\n        let cx = 0, cy = 0;\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            cx += this.mol.atomX(n);\n            cy += this.mol.atomY(n);\n        }\n        let inv = 1.0 / this.mol.numAtoms;\n        cx *= inv;\n        cy *= inv;\n        let best = 0, bestScore = Number.MIN_VALUE;\n        for (let n = 1; n <= this.mol.numAtoms; n++) {\n            let dx = this.mol.atomX(n) - cx, dy = this.mol.atomY(n) - cy, atheta = Math.atan2(dy, dx);\n            let cosdelta = Math.cos(Math.abs(angleDiff(theta + Math.PI, atheta)));\n            let score = cosdelta * norm_xy(dx, dy);\n            if (score > bestScore)\n                [best, bestScore] = [n, score];\n        }\n        if (best > 0)\n            this.changeCurrentAtom(best);\n    }\n    createRing(rsz, aromatic) {\n        const { mol } = this;\n        let rx = null, ry = null;\n        if (this.currentAtom > 0) {\n            let dx = 0, dy = 0, adj = mol.atomAdjList(this.currentAtom);\n            let x0 = mol.atomX(this.currentAtom), y0 = mol.atomY(this.currentAtom);\n            for (let a of adj) {\n                dx -= mol.atomX(a) - x0;\n                dy -= mol.atomY(a) - y0;\n            }\n            if (Math.abs(dx) < 0.001 && Math.abs(dy) < 0.001) {\n                if (adj.length >= 2) {\n                    let theta = adj.map((a) => Math.atan2(mol.atomY(a) - x0, mol.atomX(a) - y0));\n                    Vec.sort(theta);\n                    let best = Number.POSITIVE_INFINITY;\n                    for (let n = 0; n < theta.length; n++) {\n                        let th = angleDiff(theta[(n + 1) % theta.length], theta[n]);\n                        let lx = Math.cos(th), ly = Math.sin(th), score = CoordUtil.congestionPoint(mol, x0 + lx, y0 + ly);\n                        if (score < best)\n                            [best, dx, dy] = [score, lx, ly];\n                    }\n                }\n                else\n                    [dx, dy] = [1, 0];\n            }\n            [rx, ry] = SketchUtil.proposeAtomRing(this.mol, rsz, this.currentAtom, dx, dy);\n        }\n        else if (this.currentBond > 0) {\n            let a1 = mol.bondFrom(this.currentBond), a2 = mol.bondTo(this.currentBond);\n            let x1 = mol.atomX(a1), y1 = mol.atomY(a1), x2 = mol.atomX(a2), y2 = mol.atomY(a2);\n            let cx = 0.5 * (x1 + x2), cy = 0.5 * (y1 + y2), ox = y1 - y2, oy = x2 - x1;\n            let [dx, dy] = CoordUtil.congestionPoint(mol, cx - ox, cy - oy) < CoordUtil.congestionPoint(mol, cx + ox, cy + oy) ? [-ox, -oy] : [ox, oy];\n            [rx, ry] = SketchUtil.proposeBondRing(this.mol, rsz, this.currentBond, dx, dy);\n        }\n        else {\n            let x = 0, y = 0;\n            if (mol.numAtoms > 0) {\n                let bound = mol.boundary();\n                [x, y] = [bound.maxX() + Molecule.IDEALBOND, bound.midY()];\n            }\n            [rx, ry] = SketchUtil.proposeNewRing(this.mol, rsz, x, y, 0, -1, false);\n        }\n        if (!rx)\n            return;\n        let param = {\n            ringX: rx,\n            ringY: ry,\n            aromatic: aromatic\n        };\n        let molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n        molact.execute();\n    }\n    ctrlArrowKey(dx, dy) {\n        let watermark = ++this.cursorWatermark;\n        this.cursorDX += dx;\n        this.cursorDY += dy;\n        setTimeout(() => {\n            if (watermark == this.cursorWatermark) {\n                this.sproutDirection(this.cursorDX, this.cursorDY);\n                this.cursorDX = this.cursorDY = 0;\n            }\n        }, 100);\n    }\n    sproutDirection(deltaX, deltaY) {\n        new MoleculeActivity(this.getState(), ActivityType.SproutDirection, { deltaX, deltaY }, this).execute();\n    }\n    launchComposeFragment() {\n        const { callbackComposeFragment } = this.plugins;\n        if (!callbackComposeFragment || this.inDialog)\n            return;\n        callbackComposeFragment(this);\n    }\n    mouseClick(event) {\n        event.stopPropagation();\n        this.grabFocus();\n        return false;\n    }\n    mouseDoubleClick(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (this.toolView.selectedButton != ToolBankItem.Arrow)\n            return;\n        let xy = eventCoords(event, this.container);\n        let clickObj = this.pickObject(xy[0], xy[1]);\n        if (clickObj > 0) {\n            let atom = clickObj;\n            this.editAtom(atom);\n        }\n        else {\n            let bond = -clickObj;\n            this.editBond(bond);\n        }\n        return false;\n    }\n    mouseDown(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.clearMessage();\n        if (event.ctrlKey && !event.shiftKey && !event.altKey) {\n            this.contextMenu(event);\n            return;\n        }\n        let [x, y] = eventCoords(event, this.container);\n        this.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n        return false;\n    }\n    mouseUp(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.interactEnd(x, y);\n        return false;\n    }\n    mouseOver(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        this.updateLasso(x, y);\n        return false;\n    }\n    mouseOut(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        this.updateLasso(x, y);\n        return false;\n    }\n    mouseMove(event) {\n        event.stopPropagation();\n        let [x, y] = eventCoords(event, this.container);\n        this.updateHoverCursor(x, y);\n        if (this.dragType == DraggingTool.None)\n            return;\n        this.interactDrag(x, y);\n        return false;\n    }\n    keyPressed(event) {\n    }\n    keyDown(event) {\n        let key = event.key;\n        if (key == \"Escape\") {\n            for (let view of [this.templateView, this.commandView, this.toolView])\n                if (view != null && view.stackSize > 1) {\n                    view.popBank();\n                    event.preventDefault();\n                    event.stopPropagation();\n                    return;\n                }\n        }\n        let mod = (event.shiftKey ? 'S' : '') + (event.ctrlKey || event.metaKey ? 'C' : '') + (event.altKey ? 'A' : '');\n        let nomod = !event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey;\n        if (this.toolView != null && this.toolView.topBank.claimKey(event)) { }\n        else if (this.commandView != null && this.commandView.topBank.claimKey(event)) { }\n        else if (this.templateView != null && this.templateView.topBank.claimKey(event)) { }\n        else if (key == \"Enter\")\n            this.editCurrent();\n        else if (key == \"ArrowLeft\" && nomod)\n            this.hitArrowKey(-1, 0);\n        else if (key == \"ArrowRight\" && nomod)\n            this.hitArrowKey(1, 0);\n        else if (key == \"ArrowUp\" && nomod)\n            this.hitArrowKey(0, 1);\n        else if (key == \"ArrowDown\" && nomod)\n            this.hitArrowKey(0, -1);\n        else if (key == 'z' && mod == 'C')\n            this.performUndo();\n        else if (key == 'Z' && mod == 'SC')\n            this.performRedo();\n        else if (key == 'z' && nomod)\n            this.toolView.cycleSelected(-1);\n        else if (key == 'x' && nomod)\n            this.toolView.cycleSelected(1);\n        else if (key == '#' && mod == 'SC')\n            this.createRing(3, false);\n        else if (key == '$' && mod == 'SC')\n            this.createRing(4, false);\n        else if (key == '%' && mod == 'SC')\n            this.createRing(5, false);\n        else if (key == '^' && mod == 'SC')\n            this.createRing(6, false);\n        else if (key == '&' && mod == 'SC')\n            this.createRing(7, false);\n        else if (key == '3' && mod == 'CA')\n            this.createRing(3, true);\n        else if (key == '4' && mod == 'CA')\n            this.createRing(4, true);\n        else if (key == '5' && mod == 'CA')\n            this.createRing(5, true);\n        else if (key == '6' && mod == 'CA')\n            this.createRing(6, true);\n        else if (key == '7' && mod == 'CA')\n            this.createRing(7, true);\n        else if (key == 'c' && mod == 'C' && this.proxyClip)\n            this.proxyClip.triggerCopy(false);\n        else if (key == 'x' && mod == 'C' && this.proxyClip)\n            this.proxyClip.triggerCopy(true);\n        else if (key == 'v' && mod == 'C' && this.proxyClip && this.proxyClip.canAlwaysGet())\n            this.proxyClip.triggerPaste();\n        else if (key == \"ArrowLeft\" && mod == 'C')\n            this.ctrlArrowKey(-1, 0);\n        else if (key == \"ArrowRight\" && mod == 'C')\n            this.ctrlArrowKey(1, 0);\n        else if (key == \"ArrowUp\" && mod == 'C')\n            this.ctrlArrowKey(0, 1);\n        else if (key == \"ArrowDown\" && mod == 'C')\n            this.ctrlArrowKey(0, -1);\n        else if (key == '1' && mod == 'C')\n            this.sproutDirection(-1, -1);\n        else if (key == '2' && mod == 'C')\n            this.sproutDirection(0, -1);\n        else if (key == '3' && mod == 'C')\n            this.sproutDirection(1, -1);\n        else if (key == '4' && mod == 'C')\n            this.sproutDirection(-1, 0);\n        else if (key == '6' && mod == 'C')\n            this.sproutDirection(1, 0);\n        else if (key == '7' && mod == 'C')\n            this.sproutDirection(-1, 1);\n        else if (key == '8' && mod == 'C')\n            this.sproutDirection(0, 1);\n        else if (key == '9' && mod == 'C')\n            this.sproutDirection(1, 1);\n        else if (key == '`' && nomod)\n            this.launchComposeFragment();\n        else\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    keyUp(event) {\n    }\n    touchStart(event) {\n        let [x, y] = eventCoords(event.touches[0], this.container);\n        if (this.pickObjectCanvas(x, y) == null)\n            return;\n        this.interactStart(x, y, event.shiftKey, event.ctrlKey, event.altKey);\n        event.preventDefault();\n    }\n    touchMove(event) {\n        if (this.dragType != DraggingTool.None) {\n            let [x, y] = eventCoords(event.touches[0], this.container);\n            this.interactDrag(x, y);\n        }\n        event.preventDefault();\n    }\n    touchCancel(event) {\n    }\n    touchEnd(event) {\n        if (this.dragType != DraggingTool.None) {\n            let [x, y] = [this.mouseX, this.mouseY];\n            this.interactEnd(x, y);\n            event.preventDefault();\n        }\n    }\n    mouseWheel(event) {\n    }\n    contextMenu(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.dragType = DraggingTool.None;\n        if (!this.proxyMenu)\n            return;\n        let [x, y] = eventCoords(event, this.container);\n        let clickObj = this.pickObject(x, y);\n        if (clickObj > 0)\n            this.changeCurrentAtom(clickObj);\n        else if (clickObj < 0)\n            this.changeCurrentBond(-clickObj);\n        let state = this.getState();\n        let ctx = new ContextSketch(state, this, this.proxyClip);\n        let menu = ctx.populate();\n        this.proxyMenu.openContextMenu(menu, event);\n    }\n    interactStart(x, y, shiftKey, ctrlKey, altKey) {\n        this.dragType = DraggingTool.Press;\n        this.opBudged = false;\n        this.dragGuides = null;\n        this.mouseX = x;\n        this.mouseY = y;\n        this.clickX = x;\n        this.clickY = y;\n        let clickObj = this.pickObject(x, y);\n        this.opAtom = clickObj > 0 ? clickObj : 0;\n        this.opBond = clickObj < 0 ? -clickObj : 0;\n        this.opShift = shiftKey;\n        this.opCtrl = ctrlKey;\n        this.opAlt = altKey;\n        let tool = '';\n        if (this.toolView != null)\n            tool = this.toolView.selectedButton;\n        if (tool == ToolBankItem.Arrow) {\n            if (!this.opShift && !this.opCtrl && !this.opAlt) {\n                this.dragType = DraggingTool.Press;\n            }\n            else if (!this.opShift && !this.opCtrl && this.opAlt) {\n                this.dragType = DraggingTool.Pan;\n            }\n            else if (!this.opShift && this.opCtrl && this.opAlt) {\n                this.dragType = DraggingTool.Zoom;\n            }\n        }\n        else if (tool == ToolBankItem.Rotate) {\n            this.dragType = DraggingTool.Rotate;\n            this.toolRotateIncr = this.opShift ? 0 : 15 * DEGRAD;\n        }\n        else if (tool == ToolBankItem.Pan) {\n            this.dragType = DraggingTool.Pan;\n        }\n        else if (tool == ToolBankItem.Drag) {\n            this.dragType = DraggingTool.Move;\n            if (this.opAtom > 0)\n                this.dragGuides = this.determineMoveGuide();\n            this.delayedRedraw();\n        }\n        else if (tool == ToolBankItem.Erasor) {\n            this.dragType = DraggingTool.Erasor;\n            this.lassoX = [x];\n            this.lassoY = [y];\n            this.lassoMask = [];\n        }\n        else if (tool == ToolBankItem.RingAliph) {\n            this.dragType = DraggingTool.Ring;\n            this.toolRingArom = false;\n            this.toolRingFreeform = this.opShift;\n        }\n        else if (tool == ToolBankItem.RingArom) {\n            this.dragType = DraggingTool.Ring;\n            this.toolRingArom = true;\n            this.toolRingFreeform = this.opShift;\n        }\n        else if (tool == ToolBankItem.AtomPlus) {\n            this.dragType = DraggingTool.Charge;\n            this.toolChargeDelta = 1;\n        }\n        else if (tool == ToolBankItem.AtomMinus) {\n            this.dragType = DraggingTool.Charge;\n            this.toolChargeDelta = -1;\n        }\n        else if (tool.startsWith(ToolBankItem.BondPfx)) {\n            this.dragType = DraggingTool.Bond;\n            this.toolBondOrder = 1;\n            this.toolBondType = Molecule.BONDTYPE_NORMAL;\n            if (tool == ToolBankItem.BondOrder0)\n                this.toolBondOrder = 0;\n            else if (tool == ToolBankItem.BondOrder2)\n                this.toolBondOrder = 2;\n            else if (tool == ToolBankItem.BondOrder3)\n                this.toolBondOrder = 3;\n            else if (tool == ToolBankItem.BondUnknown)\n                this.toolBondType = Molecule.BONDTYPE_UNKNOWN;\n            else if (tool == ToolBankItem.BondInclined)\n                this.toolBondType = Molecule.BONDTYPE_INCLINED;\n            else if (tool == ToolBankItem.BondDeclined)\n                this.toolBondType = Molecule.BONDTYPE_DECLINED;\n            if (this.opBond > 0) {\n                let [bfr, bto] = this.mol.bondFromTo(this.opBond), inPoly = false;\n                for (let poly of new PolymerBlock(this.mol).getUnits()) {\n                    let in1 = poly.atoms.includes(bfr), in2 = poly.atoms.includes(bto);\n                    if ((in1 && !in2) || (in2 && !in1)) {\n                        inPoly = true;\n                        break;\n                    }\n                }\n                if (inPoly) {\n                    this.toolBondOrder = 0;\n                    this.toolBondType = Molecule.BONDTYPE_NORMAL;\n                }\n            }\n            if (this.opBond == 0)\n                this.dragGuides = this.determineDragGuide(this.toolBondOrder);\n        }\n        else if (tool.startsWith(ToolBankItem.ElementPfx)) {\n            this.dragType = DraggingTool.Atom;\n            this.toolAtomSymbol = tool.substring(ToolBankItem.ElementPfx.length);\n            this.dragGuides = this.determineDragGuide(1);\n        }\n    }\n    interactDrag(x, y) {\n        if (!this.opBudged) {\n            let dx = x - this.clickX, dy = y - this.clickY;\n            if (dx * dx + dy * dy > 2 * 2)\n                this.opBudged = true;\n        }\n        if (this.dragType == DraggingTool.Press && this.opAtom == 0 && this.opBond == 0 && this.opBudged) {\n            this.dragType = DraggingTool.Lasso;\n            this.lassoX = [x];\n            this.lassoY = [y];\n            this.lassoMask = [];\n        }\n        if (this.dragType == DraggingTool.Lasso || this.dragType == DraggingTool.Erasor) {\n            this.updateLasso(x, y);\n        }\n        else if (this.dragType == DraggingTool.Pan) {\n            let dx = x - this.mouseX, dy = y - this.mouseY;\n            if (dx != 0 || dy != 0) {\n                this.offsetX += dx;\n                this.offsetY += dy;\n                this.layout.offsetEverything(dx, dy);\n                this.metavec.transformPrimitives(dx, dy, 1, 1);\n                if (this.currentPerm >= 0 && this.templatePerms != null) {\n                    let perm = this.templatePerms[this.currentPerm];\n                    perm.metavec.transformPrimitives(dx, dy, 1, 1);\n                }\n                this.delayedRedraw();\n            }\n            this.mouseX = x;\n            this.mouseY = y;\n        }\n        else if (this.dragType == DraggingTool.Zoom) {\n            let dy = y - this.mouseY;\n            if (dy != 0) {\n                dy = Math.min(50, Math.max(-50, dy));\n                let newScale = this.pointScale * (1 - dy * 0.01);\n                newScale = Math.min(10, Math.max(0.1, newScale));\n                let newOX = this.clickX - (newScale / this.pointScale) * (this.clickX - this.offsetX);\n                let newOY = this.clickY - (newScale / this.pointScale) * (this.clickY - this.offsetY);\n                this.pointScale = newScale;\n                this.offsetX = newOX;\n                this.offsetY = newOY;\n                this.delayedRedraw();\n            }\n            this.mouseX = x;\n            this.mouseY = y;\n        }\n        else if (this.dragType == DraggingTool.Rotate ||\n            this.dragType == DraggingTool.Move ||\n            this.dragType == DraggingTool.Atom ||\n            this.dragType == DraggingTool.Bond ||\n            this.dragType == DraggingTool.Ring) {\n            this.mouseX = x;\n            this.mouseY = y;\n            this.delayedRedraw();\n        }\n    }\n    interactEnd(x, y) {\n        if (this.opBudged)\n            this.interactEndDrag(x, y);\n        else\n            this.interactEndClick(x, y);\n        this.dragType = DraggingTool.None;\n        this.lassoX = null;\n        this.lassoY = null;\n        this.lassoMask = null;\n        this.dragGuides = null;\n        this.delayedRedraw();\n    }\n    interactEndClick(x, y) {\n        let clickObj = this.pickObject(x, y);\n        let clickAtom = clickObj > 0 ? clickObj : 0, clickBond = clickObj < 0 ? -clickObj : 0;\n        if (this.dragType == DraggingTool.Press) {\n            if (!this.opShift && !this.opCtrl && !this.opAlt) {\n                if (clickAtom == 0 && clickBond == 0) {\n                    if (Vec.anyTrue(this.selectedMask))\n                        this.selectedMask = null;\n                    else if (this.currentAtom > 0)\n                        this.currentAtom = 0;\n                    else if (this.currentBond > 0)\n                        this.currentBond = 0;\n                }\n                else if (clickAtom != this.currentAtom || clickBond != this.currentBond) {\n                    this.currentAtom = clickAtom;\n                    this.currentBond = clickBond;\n                }\n                else if (clickAtom == 0 && clickBond == 0 && this.anySelected()) {\n                    this.selectedMask = null;\n                }\n            }\n            else if (this.opShift && !this.opCtrl && !this.opAlt) {\n                if (clickAtom > 0)\n                    this.setSelected(clickAtom, !this.getSelected(clickAtom));\n            }\n        }\n        else if (this.dragType == DraggingTool.Move) {\n            if (clickObj == 0) {\n                if (Vec.anyTrue(this.selectedMask))\n                    this.selectedMask = null;\n                else if (this.currentAtom > 0)\n                    this.currentAtom = 0;\n                else if (this.currentBond > 0)\n                    this.currentBond = 0;\n            }\n        }\n        else if (this.dragType == DraggingTool.Erasor) {\n            if (this.opAtom > 0 || this.opBond > 0) {\n                let state = Object.assign(Object.assign({}, this.getState()), { 'currentAtom': this.opAtom, 'currentBond': this.opBond, 'selectedMask': [] });\n                let molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Atom) {\n            let element = this.toolAtomSymbol;\n            if (element == 'A') {\n                let dlg = new EditAtom(this.mol, this.opAtom, this.proxyClip, () => {\n                    let autoscale = this.mol.numAtoms == 0;\n                    if (this.mol.compareTo(dlg.mol) != 0)\n                        this.defineMolecule(dlg.mol, autoscale, true);\n                    dlg.close();\n                });\n                if (this.opAtom == 0) {\n                    dlg.newX = this.xToAng(this.clickX);\n                    dlg.newY = this.yToAng(this.clickY);\n                }\n                dlg.callbackClose = () => {\n                    this.inDialog = false;\n                    this.grabFocus();\n                };\n                this.inDialog = true;\n                dlg.open();\n            }\n            else if (element) {\n                let param = { element, keepAbbrev: true };\n                if (this.opAtom == 0) {\n                    let x = this.xToAng(this.clickX), y = this.yToAng(this.clickY);\n                    if (this.mol.numAtoms == 0) {\n                        this.offsetX = this.clickX;\n                        this.offsetY = this.clickY;\n                        x = 0;\n                        y = 0;\n                    }\n                    param.positionX = x;\n                    param.positionY = y;\n                }\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: 0, selectedMask: null });\n                let molact = new MoleculeActivity(state, ActivityType.Element, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Charge) {\n            if (this.opAtom > 0 || this.opBond > 0) {\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: this.opBond, selectedMask: null });\n                let molact = new MoleculeActivity(state, ActivityType.Charge, { delta: this.toolChargeDelta }, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Bond) {\n            let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: this.opAtom, currentBond: this.opBond, selectedMask: null });\n            let molact;\n            if (this.toolBondType == Molecule.BONDTYPE_NORMAL)\n                molact = new MoleculeActivity(state, ActivityType.BondOrder, { order: this.toolBondOrder }, this);\n            else\n                molact = new MoleculeActivity(state, ActivityType.BondType, { type: this.toolBondType }, this);\n            molact.execute();\n        }\n    }\n    interactEndDrag(x, y) {\n        if (this.dragType == DraggingTool.Lasso) {\n            if (this.lassoX.length >= 2) {\n                this.calculateLassoMask();\n                for (let n = 1; n <= this.mol.numAtoms; n++)\n                    if (this.getLassoed(n) && !this.getSelected(n))\n                        this.setSelected(n, true);\n            }\n            this.lassoX = null;\n            this.lassoY = null;\n            this.lassoMask = null;\n            this.delayedRedraw();\n        }\n        else if (this.dragType == DraggingTool.Erasor) {\n            let any = false;\n            for (let n = 0; n < this.lassoMask.length; n++)\n                if (this.lassoMask[n]) {\n                    any = true;\n                    break;\n                }\n            if (any) {\n                let state = Object.assign(Object.assign({}, this.getState()), { currentAtom: 0, currentBond: 0, selectedMask: this.lassoMask });\n                let molact = new MoleculeActivity(state, ActivityType.Delete, {}, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Rotate) {\n            let [x0, y0, theta, magnitude] = this.determineDragTheta();\n            let degrees = -theta * RADDEG;\n            let mx = this.xToAng(x0), my = this.yToAng(y0);\n            let molact = new MoleculeActivity(this.getState(), ActivityType.Rotate, { theta: degrees, centreX: mx, centreY: my }, this);\n            molact.execute();\n        }\n        else if (this.dragType == DraggingTool.Move) {\n            let [dx, dy] = this.determineMoveDelta();\n            let scale = this.pointScale;\n            let molact = new MoleculeActivity(this.getState(), ActivityType.Move, { refAtom: this.opAtom, deltaX: dx / scale, deltaY: -dy / scale }, this);\n            molact.execute();\n        }\n        else if (this.dragType == DraggingTool.Ring) {\n            let [ringX, ringY] = this.determineFauxRing();\n            if (ringX != null) {\n                let param = {\n                    ringX: ringX,\n                    ringY: ringY,\n                    aromatic: this.toolRingArom\n                };\n                let molact = new MoleculeActivity(this.getState(), ActivityType.Ring, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Atom && this.opAtom > 0) {\n            let x2 = this.mouseX, y2 = this.mouseY;\n            let snapTo = this.snapToGuide(x2, y2);\n            if (snapTo != null)\n                [x2, y2] = snapTo;\n            let param = {\n                order: 1,\n                type: Molecule.BONDTYPE_NORMAL,\n                element: this.toolAtomSymbol,\n                x1: this.mol.atomX(this.opAtom),\n                y1: this.mol.atomY(this.opAtom),\n                x2: this.xToAng(x2),\n                y2: this.yToAng(y2)\n            };\n            if (this.toolAtomSymbol == 'A')\n                param.element = window.prompt('Enter element symbol:', '');\n            if (param.element != '') {\n                let molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n                molact.execute();\n            }\n        }\n        else if (this.dragType == DraggingTool.Bond) {\n            let x2 = this.mouseX, y2 = this.mouseY;\n            let snapTo = this.snapToGuide(x2, y2);\n            if (snapTo != null) {\n                [x2, y2] = snapTo;\n                if (this.opBond > 0) {\n                    let toObj = this.pickObject(x2, y2, { noAtoms: true });\n                    if (toObj < 0) {\n                        this.connectPolymerBlock(this.opBond, -toObj);\n                        return;\n                    }\n                }\n            }\n            let param = {\n                order: this.toolBondOrder,\n                type: this.toolBondType,\n                element: 'C',\n                x1: this.opAtom == 0 ? this.xToAng(this.clickX) : this.mol.atomX(this.opAtom),\n                y1: this.opAtom == 0 ? this.yToAng(this.clickY) : this.mol.atomY(this.opAtom),\n                x2: this.xToAng(x2),\n                y2: this.yToAng(y2)\n            };\n            let molact = new MoleculeActivity(this.getState(), ActivityType.BondAtom, param, this);\n            molact.execute();\n        }\n    }\n    dropInto(transfer) {\n        let items = transfer.items, files = transfer.files;\n        const SUFFIXES = ['.el', '.mol'];\n        const MIMES = ['text/plain', 'chemical/x-sketchel', 'x-mdl-molfile'];\n        for (let n = 0; n < items.length; n++) {\n            if (items[n].kind == 'string' && MIMES.indexOf(items[n].type) >= 0) {\n                items[n].getAsString((str) => {\n                    let mol = Molecule.fromString(str);\n                    if (mol != null) {\n                        this.defineMolecule(mol, true, true, true);\n                    }\n                    else\n                        console.log('Dragged data is not a SketchEl molecule: ' + str);\n                });\n                return;\n            }\n        }\n        for (let n = 0; n < files.length; n++) {\n            for (let sfx of SUFFIXES)\n                if (files[n].name.endsWith(sfx)) {\n                    let reader = new FileReader();\n                    reader.onload = (event) => {\n                        let str = reader.result;\n                        let mol = MoleculeStream.readUnknown(str.toString());\n                        if (mol != null) {\n                            this.defineMolecule(mol, true, true);\n                        }\n                        else\n                            console.log('Dragged file is not a recognised molecule: ' + str);\n                    };\n                    reader.readAsText(files[n]);\n                    return;\n                }\n        }\n    }\n    connectPolymerBlock(bond1, bond2) {\n        let [atomIn1, atomOut1] = this.mol.bondFromTo(bond1), [atomIn2, atomOut2] = this.mol.bondFromTo(bond2);\n        let state = this.getState();\n        let polymer = new PolymerBlock(state.mol);\n        let poly1 = null, poly2 = null;\n        let highName = 0;\n        for (let poly of polymer.getUnits()) {\n            if (!poly1 || poly.atoms.length < poly1.atoms.length) {\n                let ina = poly.atoms.includes(atomIn1), inb = poly.atoms.includes(atomOut1);\n                if (ina && !inb)\n                    poly1 = poly;\n                else if (inb && !ina)\n                    [poly1, atomIn1, atomOut1] = [poly, atomOut1, atomIn1];\n            }\n            if (!poly2 || poly.atoms.length < poly2.atoms.length) {\n                let ina = poly.atoms.includes(atomIn2), inb = poly.atoms.includes(atomOut2);\n                if (ina && !inb)\n                    poly2 = poly;\n                else if (inb && !ina)\n                    [poly2, atomIn2, atomOut2] = [poly, atomOut2, atomIn2];\n            }\n            for (let nameList of poly.atomName.values())\n                highName = Math.max(highName, Vec.max(nameList));\n        }\n        if (!poly1 || !poly2)\n            return false;\n        let name1 = Vec.first(poly1.atomName.get(atomIn1));\n        if (!name1) {\n            name1 = ++highName;\n            poly1.atomName.set(atomIn1, [name1]);\n        }\n        let name2 = Vec.first(poly2.atomName.get(atomIn2));\n        if (!name2) {\n            name2 = ++highName;\n            poly2.atomName.set(atomIn2, [name2]);\n        }\n        poly1.bondIncl.set(bond1, Vec.append(poly1.bondIncl.get(bond1), name2));\n        poly2.bondIncl.set(bond2, Vec.append(poly2.bondIncl.get(bond2), name1));\n        polymer.rewriteMolecule();\n        this.setState(state);\n    }\n}\nSketcher.UNDO_SIZE = 20;\nexport { Sketcher };\n//# sourceMappingURL=Sketcher.js.map","import { Sketcher } from '../sketcher/Sketcher';\nimport { ClipboardProxyHandler } from '../ui/ClipboardProxy';\nimport { dom } from '../util/dom';\nimport { Dialog } from './Dialog';\nexport class EditCompound extends Dialog {\n    constructor(mol, parent = null) {\n        super(parent);\n        this.mol = mol;\n        this.sketcher = new Sketcher();\n        this.proxyClip = null;\n        this.proxyMenu = null;\n        this.callbackSave = null;\n        this.title = 'Edit Compound';\n        this.minPortionWidth = 20;\n        this.maxPortionWidth = 95;\n    }\n    onSave(callback) {\n        this.callbackSave = callback;\n    }\n    getMolecule() { return this.sketcher.getMolecule(); }\n    getSketcher() { return this.sketcher; }\n    defineClipboard(proxy) {\n        this.proxyClip = proxy;\n        let handler = new ClipboardProxyHandler();\n        handler.copyEvent = (andCut, proxy) => {\n            this.sketcher.performCopySelection(andCut);\n            return true;\n        };\n        handler.pasteEvent = (proxy) => {\n            this.sketcher.pasteText(proxy.getString());\n            return true;\n        };\n        proxy.pushHandler(handler);\n        this.sketcher.defineClipboard(proxy);\n    }\n    defineContext(proxy) {\n        this.proxyMenu = proxy;\n        this.sketcher.defineContext(this.proxyMenu);\n    }\n    close() {\n        if (this.proxyClip)\n            this.proxyClip.popHandler();\n        super.close();\n    }\n    populate() {\n        let buttons = this.buttonsDOM(), body = this.bodyDOM();\n        this.btnClear = dom('<button class=\"wmk-button wmk-button-default\">Clear</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnClear.onClick(() => this.sketcher.clearMolecule());\n        this.btnCopy = dom('<button class=\"wmk-button wmk-button-default\">Copy</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnCopy.onClick(() => this.actionCopy());\n        buttons.append(this.domClose);\n        this.domClose.css({ 'margin-left': '0.5em' });\n        this.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons).css({ 'margin-left': '0.5em' });\n        this.btnSave.onClick(() => { if (this.callbackSave)\n            this.callbackSave(this); });\n        let skw = 800, skh = 650;\n        let skdiv = dom('<div/>').appendTo(body).css({ 'width': `${skw}px`, 'height': `${skh}px` });\n        this.sketcher.setSize(skw, skh);\n        this.sketcher.defineMolecule(this.mol);\n        this.sketcher.setup(() => this.sketcher.render(skdiv));\n    }\n    actionCopy() {\n        this.sketcher.performCopySelection(false);\n    }\n    actionCut() {\n        this.sketcher.performCopySelection(true);\n    }\n    actionPaste() {\n        this.sketcher.performPaste();\n    }\n    actionUndo() {\n        this.sketcher.performUndo();\n    }\n    actionRedo() {\n        this.sketcher.performRedo();\n    }\n}\n//# sourceMappingURL=EditCompound.js.map","import { dom, domLegacy } from '../util/dom';\nimport { installInlineCSS } from '../util/Theme';\nimport { empiricalScrollerSize, setBoundaryPixels } from '../util/util';\nimport { clearTooltip } from './Tooltip';\nconst CSS_POPUP = `\n\t*.wmk-popup\n\t{\n\t\tfont-family: 'Open Sans', sans-serif;\n\t}\n`;\nexport class Popup {\n    constructor(parent) {\n        this.popupBackground = 'white';\n        this.obscureOpacity = 0.2;\n        this.zindex = null;\n        this.callbackClose = null;\n        this.callbackPopulate = null;\n        this.parent = domLegacy(parent);\n        installInlineCSS('popup', CSS_POPUP);\n    }\n    onClose(callback) {\n        this.callbackClose = callback;\n    }\n    open() {\n        clearTooltip();\n        let body = dom(document.body);\n        let bg = this.domObscureBackground = dom('<div/>').appendTo(body);\n        bg.css({ 'position': 'fixed' });\n        bg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        bg.css({ 'background-color': 'black', 'opacity': this.obscureOpacity });\n        let fg = this.domObscureForeground = dom('<div/>').appendTo(body);\n        fg.css({ 'position': 'fixed' });\n        fg.css({ 'left': '0', 'right': '0', 'top': '0', 'bottom': '0' });\n        fg.onClick(() => this.close());\n        if (this.zindex > 0) {\n            bg.setCSS('z-index', this.zindex);\n            fg.setCSS('z-index', this.zindex + 1);\n        }\n        let pb = this.domPanelBoundary = dom('<div class=\"wmk-popup\"/>').appendTo(fg).css({ 'visibility': 'hidden' });\n        pb.onClick((event) => event.stopPropagation());\n        pb.css({ 'background-color': this.popupBackground, 'border': '1px solid black' });\n        pb.css({ 'position': 'absolute', 'overflow': 'auto' });\n        this.domBody = dom('<div/>').appendTo(pb).css({ 'padding': '5px' });\n        this.populate();\n        this.positionAndShow();\n    }\n    close() {\n        clearTooltip();\n        this.domPanelBoundary.remove();\n        this.domObscureBackground.remove();\n        this.domObscureForeground.remove();\n        if (this.callbackClose)\n            this.callbackClose(this);\n        clearTooltip();\n    }\n    bump() {\n        this.positionAndShow();\n    }\n    bodyDOM() { return this.domBody; }\n    populate() {\n        if (this.callbackPopulate)\n            this.callbackPopulate(this);\n        else\n            this.bodyDOM().setText('Empty popup.');\n    }\n    positionAndShow() {\n        clearTooltip();\n        let winW = window.innerWidth, winH = window.innerHeight;\n        const GAP = 2;\n        let client = this.parent.el.getBoundingClientRect();\n        let wx1 = client.left, wy1 = client.top, wx2 = client.right, wy2 = client.bottom;\n        let pb = this.domPanelBoundary;\n        let maxW = Math.max(wx1, winW - wx2) - 4;\n        pb.css({ 'max-width': maxW + 'px' });\n        let scrollSize = empiricalScrollerSize();\n        let setPosition = () => {\n            let popW = this.domBody.width(), popH = this.domBody.height();\n            let posX = 0, posY = 0;\n            if (wy2 + GAP + popH < winH)\n                posY = wy2 + GAP;\n            else if (wy1 - GAP - popH > 0)\n                posY = wy1 - GAP - popH;\n            else if (winH - wy2 > wy1) {\n                posY = wy2 + GAP;\n                popH = winH - posY - GAP;\n            }\n            else {\n                posY = GAP;\n                popH = wy1 - posY - GAP;\n            }\n            if (pb.height() > popH)\n                popW += scrollSize.w + 10;\n            if (wx1 + popW < winW)\n                posX = wx1;\n            else if (popW < wx2)\n                posX = wx2 - popW;\n            setBoundaryPixels(pb, posX, posY, popW, popH);\n            pb.css({ 'visibility': 'visible' });\n        };\n        setTimeout(() => setPosition());\n    }\n}\n//# sourceMappingURL=Popup.js.map","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {dom, DOM} from 'webmolkit/util/dom';\n\n/*\n\tWidget for editing a key/value pattern, whereby key/value pairs can be added and edited individually.\n*/\n\ninterface KeyValueWidgetLine\n{\n\tkey:string;\n\tvalue:string;\n\tinputKey?:DOM;\n\tinputValue?:DOM;\n}\n\nexport class KeyValueWidget extends Widget\n{\n\tprivate lines:KeyValueWidgetLine[] = [];\n\n\tprivate divGrid:DOM;\n\n\t// ------------ public methods ------------\n\n\tconstructor(dict:Record<string, string | string[]>, private callbackChange:(dict:Record<string, string | string[]>) => void)\n\t{\n\t\tsuper();\n\n\t\tfor (let key in dict)\n\t\t{\n\t\t\tlet value = dict[key];\n\t\t\tif (typeof value == 'string') this.lines.push({key, value});\n\t\t\telse if (Array.isArray(value)) for (let v of value) this.lines.push({key, 'value': v});\n\t\t}\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\t\t\n\t\tthis.divGrid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid', 'width': '100%', 'margin': '0'});\n\t\tthis.divGrid.css({'align-items': 'baseline', 'justify-content': 'start'});\n\t\tthis.divGrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tthis.divGrid.css({'grid-template-columns': '[start key] 1fr [value] 1fr [button] auto [end]'});\n\n\t\tthis.rebuildGrid();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate rebuildGrid():void\n\t{\n\t\tthis.divGrid.empty();\n\n\t\tlet row = 0;\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tlet line = this.lines[n];\n\n\t\t\trow++;\n\t\t\tlet divKey = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / key`});\n\t\t\tlet divValue = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / value`});\n\t\t\tlet divButton = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / button`});\n\n\t\t\tline.inputKey = dom('<input/>').appendTo(divKey).css({'width': '100%', 'padding': '0', 'font': 'inherit'});\n\t\t\tline.inputKey.setValue(line.key);\n\t\t\tline.inputKey.onInput(() => this.scrapeData());\n\n\t\t\tline.inputValue = dom('<input/>').appendTo(divValue).css({'width': '100%', 'padding': '0', 'font': 'inherit'});\n\t\t\tline.inputValue.setValue(line.value);\n\t\t\tline.inputValue.onInput(() => this.scrapeData());\n\n\t\t\tlet btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divButton);\n\t\t\tbtnDelete.setText('\\u{2716}');\n\t\t\tbtnDelete.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.lines.splice(n, 1);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.scrapeData();\n\t\t\t});\n\t\t}\n\n\t\trow++;\n\t\tlet divAdd = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / start / ${row} / end`, 'text-align': this.lines.length > 0 ? 'center' : 'left'});\n\t\tlet btnAdd = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divAdd);\n\t\tbtnAdd.setText('\\u{271A}');\n\t\tbtnAdd.onClick(() =>\n\t\t{\n\t\t\tthis.lines.push({key: '', value: ''});\n\t\t\tthis.rebuildGrid();\n\t\t\tthis.scrapeData();\n\t\t});\n\t}\n\n\tprivate scrapeData():void\n\t{\n\t\tlet dict:Record<string, string | string[]> = {};\n\t\tfor (let line of this.lines)\n\t\t{\n\t\t\tline.key = line.inputKey.getValue();\n\t\t\tline.value = line.inputValue.getValue();\n\t\t\tif (!line.key || !line.value) continue;\n\n\t\t\tlet dval = dict[line.key];\n\t\t\tif (!dval) dict[line.key] = line.value;\n\t\t\telse if (typeof dval == 'string') dict[line.key] = [dval, line.value];\n\t\t\telse if (Array.isArray(dval)) dval.push(line.value);\n\t\t}\n\t\t\n\t\tthis.callbackChange(dict);\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {installInlineCSS} from 'webmolkit/util/Theme';\nimport {OntologyTree, OntologyTreeTerm} from 'webmolkit/data/OntologyTree';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {addTooltip, clearTooltip} from 'webmolkit/ui/Tooltip';\nimport {escapeHTML} from 'webmolkit/util/util';\nimport {Popup} from 'webmolkit/ui/Popup';\nimport {MixfileMetadatum} from '../mixture/Mixfile';\n\n/*\n\tWidget for editing a list of metadata items.\n*/\n\nconst CSS_METADATAWIDGET = `\n\t*.wmk-metadataitem:hover\n\t{\n\t\tbackground-color: #C0C0FF;\n\t\tcursor: pointer;\n\t}\n`;\n\ninterface MetadataWidgetLine\n{\n\tdatum:MixfileMetadatum;\n}\n\nexport class MetadataWidget extends Widget\n{\n\tprivate lines:MetadataWidgetLine[] = [];\n\n\tprivate divGrid:DOM;\n\n\t// ------------ public methods ------------\n\n\tconstructor(metadata:MixfileMetadatum[], private callbackChange:(metadata:MixfileMetadatum[]) => void)\n\t{\n\t\tsuper();\n\n\t\tif (metadata) for (let datum of metadata) this.lines.push({'datum': datum});\n\n\t\tinstallInlineCSS('metadatawidget', CSS_METADATAWIDGET);\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tthis.divGrid = dom('<div/>').appendTo(this.contentDOM).css({'display': 'grid', 'width': '100%', 'margin': '0'});\n\t\tthis.divGrid.css({'align-items': 'baseline', 'justify-content': 'start'});\n\t\tthis.divGrid.css({'grid-row-gap': '0.5em', 'grid-column-gap': '0.5em'});\n\t\tthis.divGrid.css({'grid-template-columns': '[start content] 1fr [button] auto [end]'});\n\n\t\tthis.rebuildGrid();\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate rebuildGrid():void\n\t{\n\t\tthis.divGrid.empty();\n\n\t\tlet renderTerm = (parent:DOM, item:number | string, line:MetadataWidgetLine, idx:number):void =>\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(parent);\n\t\t\tdiv.css({'padding': '0.2em', 'margin-right': '0.5em'});\n\t\t\tif (typeof item == 'string')\n\t\t\t{\n\t\t\t\tdiv.css({'background-color': idx == 0 ? '#D0D0D0' : '#D0D0FF', 'border-radius': '3px'});\n\t\t\t\tlet branch = OntologyTree.main.getBranch(item);\n\t\t\t\tif (Vec.notBlank(branch))\n\t\t\t\t{\n\t\t\t\t\tdiv.setText(branch[0].label);\n\t\t\t\t\taddTooltip(div, escapeHTML(branch[0].uri), null, 1000);\n\t\t\t\t}\n\t\t\t\telse div.setText(item);\n\t\t\t}\n\t\t\telse // number (or null, which is a pre-number)\n\t\t\t{\n\t\t\t\tlet input = dom('<input type=\"number\"/>').appendTo(div).css({'width': '5em', 'padding': '0', 'font': 'inherit'});\n\t\t\t\tif (item != null)\n\t\t\t\t{\n\t\t\t\t\tinput.css({'width': Math.max(5, item.toString().length) + 'em'});\n\t\t\t\t\tinput.setValue(item.toString());\n\t\t\t\t}\n\t\t\t\tinput.onInput(() =>\n\t\t\t\t{\n\t\t\t\t\tlet num = parseFloat(input.getValue());\n\t\t\t\t\tif (!isNaN(num)) (line.datum as number[])[idx] = num;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tlet row = 0;\n\n\t\tfor (let n = 0; n < this.lines.length; n++)\n\t\t{\n\t\t\tlet line = this.lines[n];\n\n\t\t\trow++;\n\t\t\tlet divContent = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / content`});\n\t\t\tlet divButton = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / button`});\n\n\t\t\tdivContent.css({'display': 'flex', 'flex-wrap': 'wrap', 'justify-content': 'flex-start', 'align-items': 'baseline'});\n\t\t\tif (Array.isArray(line.datum))\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < line.datum.length; i++)\n\t\t\t\t{\n\t\t\t\t\tlet item = line.datum[i];\n\t\t\t\t\trenderTerm(divContent, item, line, i);\n\t\t\t\t}\n\n\t\t\t\tif (line.datum.length > 1)\n\t\t\t\t{\n\t\t\t\t\tlet btnBack = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\t\t\tbtnBack.setText('\\u{21E6}');\n\t\t\t\t\tbtnBack.css({'margin-right': '0.5em'});\n\t\t\t\t\tbtnBack.onClick(() =>\n\t\t\t\t\t{\n\t\t\t\t\t\tlet list = line.datum as any[];\n\t\t\t\t\t\tlist.splice(list.length - 1, 1);\n\t\t\t\t\t\tif (typeof Vec.last(list) != 'string') list.splice(list.length - 1, 1);\n\t\t\t\t\t\tthis.rebuildGrid();\n\t\t\t\t\t\tthis.triggerModified();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse renderTerm(divContent, line.datum, line, 0);\n\n\t\t\tlet btnAssert = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\tbtnAssert.setText('\\u{21E9}');\n\t\t\tbtnAssert.css({'margin-right': '0.5em'});\n\t\t\tbtnAssert.onClick(() => this.pickExtraTerm(btnAssert, line, false));\n\t\t\tlet btnProp = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divContent);\n\t\t\tbtnProp.setText('\\u{21E8}');\n\t\t\tbtnProp.css({'margin-right': '0.5em'});\n\t\t\tbtnProp.onClick(() => this.pickExtraTerm(btnProp, line, true));\n\n\t\t\tlet btnDelete = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divButton);\n\t\t\tbtnDelete.setText('\\u{2716}');\n\t\t\tbtnDelete.onClick(() =>\n\t\t\t{\n\t\t\t\tthis.lines.splice(n, 1);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t}\n\n\t\trow++;\n\t\tlet divAdd = dom('<div/>').appendTo(this.divGrid).css({'grid-area': `${row} / start / ${row} / end`, 'text-align': this.lines.length > 0 ? 'center' : 'left'});\n\t\tlet btnAdd = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(divAdd);\n\t\tbtnAdd.setText('\\u{271A}');\n\t\tbtnAdd.onClick(() => this.pickNewTerm(btnAdd));\n\t}\n\n\tprivate triggerModified():void\n\t{\n\t\tlet metadata = this.lines.map((line) => line.datum);\n\t\tthis.callbackChange(metadata);\n\t}\n\n\tprivate pickNewTerm(divParent:DOM):void\n\t{\n\t\tlet branchList:OntologyTreeTerm[] = [];\n\t\tconst ROOTS = ['http://mixtures.io/rdf#MixtureMetadata'];\n\t\tfor (let rootURI of ROOTS) branchList.push(...OntologyTree.main.getBranchList(rootURI));\n\t\tlet popup = new Popup(divParent);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tthis.populateBranch(popup, branchList, (term) =>\n\t\t\t{\n\t\t\t\tthis.lines.push({datum: term.uri});\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t};\n\t\tpopup.open();\n\t}\n\n\tprivate pickExtraTerm(divParent:DOM, line:MetadataWidgetLine, isProperty:boolean):void\n\t{\n\t\tlet branchList:OntologyTreeTerm[] = [];\n\t\tconst ROOTS_ASSERT = ['http://mixtures.io/rdf#MixtureMetadata'];\n\t\tconst ROOTS_PROP = ['http://purl.obolibrary.org/obo/UO_0000000'];\n\t\tfor (let rootURI of (isProperty ? ROOTS_PROP : ROOTS_ASSERT)) branchList.push(...OntologyTree.main.getBranchList(rootURI));\n\t\tlet popup = new Popup(divParent);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tthis.populateBranch(popup, branchList, (term) =>\n\t\t\t{\n\t\t\t\tif (typeof line.datum == 'string') line.datum = [line.datum];\n\t\t\t\tif (isProperty) line.datum.push(null);\n\t\t\t\tline.datum.push(term.uri);\n\t\t\t\tthis.rebuildGrid();\n\t\t\t\tthis.triggerModified();\n\t\t\t});\n\t\t};\n\t\tpopup.open();\n\t}\n\n\t// enumerates a list of clickable ontology tree items\n\tprivate populateBranch(popup:Popup, branchList:OntologyTreeTerm[], callbackClicked:(term:OntologyTreeTerm) => void):void\n\t{\n\t\tlet body = popup.bodyDOM();\n\n\t\tfor (let term of branchList)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(body);\n\t\t\tif (term.depth > 0)\n\t\t\t{\n\t\t\t\tdiv.css({'margin-left': (term.depth - 0.5) + 'em'});\n\t\t\t\tdom('<span>\\u{279E}</span>').appendTo(div).css({'color': '#A0A0A0', 'margin-right': '0.5em'});\n\t\t\t}\n\t\t\tlet span = dom('<span/>').appendTo(div).class('wmk-metadataitem');\n\t\t\tspan.setText(term.label);\n\t\t\taddTooltip(span, escapeHTML(term.uri), null, 2000);\n\t\t\tspan.onClick(() =>\n\t\t\t{\n\t\t\t\tclearTooltip();\n\t\t\t\tpopup.close();\n\t\t\t\tcallbackClicked(term);\n\t\t\t});\n\t\t}\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {ClipboardProxy, ClipboardProxyHandler} from 'webmolkit/ui/ClipboardProxy';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {OptionList} from 'webmolkit/ui/OptionList';\nimport {deepClone} from 'webmolkit/util/util';\nimport {installInlineCSS} from 'webmolkit/util/Theme';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Popup} from 'webmolkit/ui/Popup';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {Chemistry} from 'webmolkit/mol/Chemistry';\nimport {MixfileComponent} from '../mixture/Mixfile';\nimport {InChI} from '../nodejs/InChI';\nimport {Mixture} from '../mixture/Mixture';\nimport {Units} from '../mixture/Units';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {KeyValueWidget} from './KeyValueWidget';\nimport {MetadataWidget} from '../electron/MetadataWidget';\n\n/*\n\tHigh level widget for the editing area for a mixture.\n*/\n\nconst CSS_EDITCOMPONENT = `\n\t*.wmk-editcomponent-input\n\t{\n\t}\n\t*.wmk-editcomponent-input::placeholder\n\t{\n\t\tfont-size: 70%;\n\t\tcolor: #D0D0D0;\n\t}\n\t*.wmk-editcomponent-units\n\t{\n\t\tcursor: pointer;\n\t}\n\t*.wmk-editcomponent-units:hover\n\t{\n\t\tbackground-color: #C0C0FF;\n\t\tcursor: pointer;\n\t}\n`;\n\nenum QuantityType\n{\n\tValue = 'Value',\n\tRange = 'Range',\n\tRatio = 'Ratio'\n}\nconst RELATION_VALUES:string[] = ['=', '~', '<', '<=', '>', '>='];\nconst RELATION_LABELS:string[] = ['=', '~', '&lt;', '&le;', '&gt;', '&ge;'];\n\nexport class EditComponent extends Dialog\n{\n\tpublic proxyClip:ClipboardProxy = null;\n\n\tprivate component:MixfileComponent;\n\n\tprivate btnSketch:DOM;\n\tprivate btnSave:DOM;\n\n\tprivate lineName:DOM;\n\tprivate optQuantType:OptionList;\n\tprivate dropQuantRel:DOM;\n\tprivate lineQuantVal1:DOM;\n\tprivate lineQuantVal2:DOM;\n\tprivate lineQuantUnits:DOM;\n\tprivate btnQuantUnits:DOM;\n\tprivate areaDescr:DOM = null;\n\tprivate areaSyn:DOM = null;\n\tprivate lineFormula:DOM;\n\tprivate divWeight:DOM;\n\tprivate lineInChI:DOM;\n\tprivate lineSMILES:DOM;\n\n\tprivate callbackSave:(source?:EditComponent) => void = null;\n\tprivate callbackSketch:(source?:EditComponent) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(component:MixfileComponent, private inchi:InChIDelegate, private parentSize:[number, number], parent:DOM = null)\n\t{\n\t\tsuper(parent);\n\n\t\tthis.component = deepClone(component);\n\n\t\tthis.title = 'Edit Component';\n\t\tthis.minPortionWidth = 20;\n\t\tthis.maxPortionWidth = 95;\n\t\t//this.maximumWidth = parentSize[0];\n\t\t//this.maximumHeight = parentSize[1];\n\n\t\tinstallInlineCSS('editcomponent', CSS_EDITCOMPONENT);\n\t}\n\n\tpublic onSave(callback:(source?:EditComponent) => void):void\n\t{\n\t\tthis.callbackSave = callback;\n\t}\n\tpublic onSketch(callback:(source?:EditComponent) => void):void\n\t{\n\t\tthis.callbackSketch = callback;\n\t}\n\n\tpublic getComponent():MixfileComponent {return this.component;}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.pushHandler(new ClipboardProxyHandler());\n\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\t// top section\n\n\t\tif (this.callbackSketch)\n\t\t{\n\t\t\tthis.btnSketch = dom('<button class=\"wmk-button wmk-button-default\">Sketch</button>').appendTo(buttons);\n\t\t\tthis.btnSketch.onClick(() => this.invokeSketcher());\n\t\t}\n\n\t\tbuttons.appendText(' ');\n\t\tbuttons.append(this.domClose); // easy way to reorder\n\n\t\tbuttons.appendText(' ');\n\t\tthis.btnSave = dom('<button class=\"wmk-button wmk-button-primary\">Save</button>').appendTo(buttons);\n\t\tthis.btnSave.onClick(() => this.saveAndClose());\n\n\t\t// main section\n\n\t\tbody.css({'padding': '0 0 0 1em'});\n\t\tlet vertical = dom('<div/>').appendTo(body);\n\t\tvertical.css({'overflow-y': 'scroll', 'height': '100%'});\n\t\tvertical.css({'max-height': this.parentSize[1] + 'px'});\n\t\tvertical.css({'padding-right': '18px', 'padding-bottom': '10px'});\n\n\t\t// first batch of fields\n\n\t\tlet grid1 = this.fieldGrid().appendTo(vertical);\n\n\t\tthis.createFieldName(grid1, 1, 'Name', false);\n\t\tthis.lineName = this.createValueLine(grid1, 1);\n\t\tthis.lineName.setValue(this.component.name);\n\n\t\tthis.createFieldName(grid1, 2, 'Quantity', false);\n\t\tlet divQuant = dom('<div/>').appendTo(grid1);\n\t\tdivQuant.css({'grid-column': 'value', 'grid-row': '2'});\n\t\tthis.createQuantity(divQuant);\n\n\t\tthis.createFieldName(grid1, 3, 'Description', true);\n\t\tthis.areaDescr = this.createValueMultiline(grid1, 3);\n\n\t\tthis.createFieldName(grid1, 4, 'Synonyms', true);\n\t\tthis.areaSyn = this.createValueMultiline(grid1, 4);\n\n\t\tthis.areaDescr.setValue(this.component.description);\n\t\tif (this.component.synonyms) this.areaSyn.setValue(this.component.synonyms.join('\\n'));\n\n\t\t// second batch of fields\n\n\t\tlet grid2 = this.fieldGrid().appendTo(vertical);\n\t\tlet row = 0;\n\n\t\t//this.createFieldName(grid2, ++row, 'Formula', false);\n\t\trow++;\n\t\tthis.createFieldName(grid2, ++row, 'Formula', false);\n\t\tlet divFormula = this.createDiv(grid2, row).css({'display': 'flex', 'align-items': 'center'});\n\t\tthis.lineFormula = dom('<input/>').appendTo(divFormula).css({'flex-grow': '1', 'font': 'inherit'});\n\t\tthis.lineFormula.setValue(this.component.formula);\n\t\tthis.lineFormula.elInput.placeholder = this.calculateFormula();\n\t\tthis.lineFormula.onInput(() => this.calculateWeight());\n\t\tthis.divWeight = dom('<div/>').appendTo(divFormula).css({'flex-grow': '0'});\n\t\tthis.calculateWeight();\n\n\t\tthis.createFieldName(grid2, ++row, 'InChI', false);\n\t\tthis.lineInChI = this.createValueLine(grid2, row);\n\t\tthis.lineInChI.setValue(this.component.inchi);\n\n\t\tif (InChI.isAvailable() && this.component.molfile)\n\t\t{\n\t\t\tlet div = this.createDiv(grid2, ++row);\n\t\t\tlet btn = dom('<button class=\"wmk-button wmk-button-default\">Calculate from Structure</button>').appendTo(div);\n\t\t\tbtn.onClick(() => {this.calculateInChI().then();});\n\t\t}\n\n\t\tthis.createFieldName(grid2, ++row, 'SMILES', false);\n\t\tthis.lineSMILES = this.createValueLine(grid2, row);\n\t\tthis.lineSMILES.setValue(this.component.smiles);\n\n\t\tthis.createFieldName(grid2, ++row, 'Identifiers', true);\n\t\tlet editIdentifiers = new KeyValueWidget(this.component.identifiers, (dict) =>\n\t\t{\n\t\t\tthis.component.identifiers = dict;\n\t\t});\n\t\teditIdentifiers.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\n\t\tthis.createFieldName(grid2, ++row, 'Links', true);\n\t\tlet editLinks = new KeyValueWidget(this.component.links, (dict) =>\n\t\t{\n\t\t\tthis.component.links = dict;\n\t\t});\n\t\teditLinks.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\n\t\tif (OntologyTree.main && OntologyTree.main.getRoots().length > 0)\n\t\t{\n\t\t\tthis.createFieldName(grid2, ++row, 'Metadata', true);\n\t\t\tlet editMetadata = new MetadataWidget(this.component.metadata, (metadata) =>\n\t\t\t{\n\t\t\t\tthis.component.metadata = Vec.notBlank(metadata) ? metadata : undefined;\n\t\t\t});\n\t\t\teditMetadata.render(dom('<div/>').appendTo(grid2).css({'grid-area': `${row} / value`}));\n\t\t}\n\n\t\tthis.lineName.grabFocus();\n\n\t\tfor (let dom of body.findAll('input')) dom.onKeyDown((event) => this.trapEscape(event, true));\n\t\tfor (let dom of body.findAll('textarea')) dom.onKeyDown((event) => this.trapEscape(event, false));\n\t\tfor (let dom of body.findAll('input,textarea')) dom.elInput.spellcheck = false;\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.proxyClip) this.proxyClip.popHandler();\n\t\tsuper.close();\n\t}\n\n\t// ------------ private methods ------------\n\n\t// assuming that something is different, refreshes the current component information and closes\n\tprivate saveAndClose():void\n\t{\n\t\tlet nullifyBlank = (str:string):string => str === '' ? null : str;\n\t\tlet splitLines = (str:string):string[] =>\n\t\t{\n\t\t\tlet lines = str.split('\\n').filter((line) => line.length > 0);\n\t\t\treturn lines.length > 0 ? lines : null;\n\t\t};\n\t\tlet splitKeys = (str:string):Record<string, any> =>\n\t\t{\n\t\t\tlet dict:Record<string, any> = null;\n\t\t\tfor (let line of str.split('\\n'))\n\t\t\t{\n\t\t\t\tlet eq = line.indexOf('=');\n\t\t\t\tif (eq < 0) continue;\n\t\t\t\tif (dict == null) dict = {};\n\t\t\t\tdict[line.substring(0, eq)] = line.substring(eq + 1);\n\t\t\t}\n\t\t\treturn dict;\n\t\t};\n\n\t\tthis.component.name = nullifyBlank(this.lineName.getValue());\n\n\t\tlet qtype = this.optQuantType.getSelectedValue();\n\t\t[this.component.ratio, this.component.quantity, this.component.error] = [null, null, null];\n\t\tlet strQuant1 = this.lineQuantVal1.getValue().trim(), strQuant2 = this.lineQuantVal2.getValue().trim();\n\t\tif (qtype == QuantityType.Value)\n\t\t{\n\t\t\tif (strQuant1) this.component.quantity = parseFloat(strQuant1);\n\t\t\tif (strQuant2) this.component.error = parseFloat(strQuant2);\n\t\t\tthis.component.units = this.lineQuantUnits.getValue().trim();\n\t\t}\n\t\telse if (qtype == QuantityType.Range)\n\t\t{\n\t\t\tthis.component.quantity = [parseFloat(strQuant1), parseFloat(strQuant2)];\n\t\t\tthis.component.relation = null;\n\t\t\tthis.component.units = this.lineQuantUnits.getValue().trim();\n\t\t}\n\t\telse if (qtype == QuantityType.Ratio)\n\t\t{\n\t\t\tthis.component.ratio = [parseFloat(strQuant1), parseFloat(strQuant2)];\n\t\t\tthis.component.relation = null;\n\t\t\tthis.component.units = null;\n\t\t}\n\n\t\tif (!Mixture.hasQuantity(this.component))\n\t\t{\n\t\t\tthis.component.quantity = null;\n\t\t\tthis.component.error = null;\n\t\t\tthis.component.ratio = null;\n\t\t\tthis.component.units = null;\n\t\t\tthis.component.relation = null;\n\t\t}\n\n\t\tif (this.areaDescr) this.component.description = nullifyBlank(this.areaDescr.getValue());\n\n\t\tthis.component.synonyms = splitLines(this.areaSyn.getValue());\n\n\t\tthis.component.formula = nullifyBlank(this.lineFormula.getValue());\n\t\tthis.component.inchi = nullifyBlank(this.lineInChI.getValue());\n\t\tthis.component.smiles = nullifyBlank(this.lineSMILES.getValue());\n\n\t\t// remove explicit nulls, for clarity\n\t\t//Object.keys(this.component).forEach((key:string) => {if ((<any>this.component)[key] == null) delete (<any>this.component)[key];});\n\n\t\t//console.log(JSON.stringify(this.component));\n\t\tthis.callbackSave(this);\n\t}\n\n\t// change to sketch mode: close this dialog, save everything, then tell the parent to sketch instead\n\tprivate invokeSketcher():void\n\t{\n\t\tthis.saveAndClose();\n\t\tthis.callbackSketch(this);\n\t}\n\n\t// creates a 2-column grid for field/value entry\n\tprivate fieldGrid():DOM\n\t{\n\t\tlet div = dom('<div/>').css({'display': 'grid', 'width': '100%', 'margin': '1em 0 1em 0'});\n\t\tdiv.css({'align-items': 'center'}); // would be 'baseline', but breaks with textarea\n\t\tdiv.css({'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tdiv.css({'grid-template-columns': '[start field] max-content [value] 1fr [end]'});\n\t\treturn div;\n\t}\n\n\t// creates a field name for inclusion in the grid\n\tprivate createFieldName(parent:DOM, row:number, text:string, topAlign:boolean):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent);\n\t\tdiv.css({'grid-column': 'field', 'grid-row': row.toString(), 'align-self': topAlign ? 'baseline' : 'center'});\n\t\tif (topAlign) div.css({'padding-top': '0.2em'}); // baseline fudge\n\t\tdiv.css({'padding-right': '0.5em', 'font-weight': 'bold'});\n\t\tdiv.setText(text);\n\t\treturn div;\n\t}\n\n\t// returns single/multi-line editors\n\tprivate createValueLine(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent).css({'grid-area': `${row} / value`});\n\t\tlet input = dom('<input/>').appendTo(div);\n\t\tinput.css({'width': 'calc(100% - 4px)', 'padding': '0', 'font': 'inherit'});\n\t\treturn input;\n\t}\n\tprivate createValueMultiline(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent).css({'grid-area': `${row} / value`});\n\t\tlet area = dom('<textarea/>').appendTo(div);\n\t\tarea.attr({'rows': '5'});\n\t\tarea.css({'width': 'calc(100% - 4px)', 'padding': '0', 'font': 'inherit'});\n\t\treturn area;\n\t}\n\n\tprivate createDiv(parent:DOM, row:number):DOM\n\t{\n\t\tlet div = dom('<div/>').appendTo(parent);\n\t\tdiv.css({'grid-column': 'value', 'grid-row': row.toString()});\n\t\treturn div;\n\t}\n\n\t// make it so that line/text entry boxes trap the escape key to close the dialog box\n\tprivate trapEscape(event:KeyboardEvent, andEnter:boolean):void\n\t{\n\t\tif (event.keyCode == 27)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.close();\n\t\t}\n\t\telse if (andEnter && event.keyCode == 13)\n\t\t{\n\t\t\tif (this.interpretQuantString()) return;\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis.saveAndClose();\n\t\t}\n\t}\n\n\t// creates the quantity data entry objects, which are somewhat fiddly and multistate\n\tprivate createQuantity(parent:DOM):void\n\t{\n\t\tlet flex = dom('<div/>').appendTo(parent);\n\t\tflex.css({'display': 'flex', 'align-items': 'center'});\n\t\tlet box = ():DOM => dom('<div style=\"padding-left: 0.5em;\"/>').appendTo(flex);\n\n\t\tthis.optQuantType = new OptionList([QuantityType.Value, QuantityType.Range, QuantityType.Ratio]);\n\t\tthis.optQuantType.render(flex);\n\n\t\tthis.dropQuantRel = this.makeDropdownGroup(box(), this.component.relation, RELATION_VALUES, RELATION_LABELS,\n\t\t\t\t\t\t\t\t\t(value:string, label:string) => {this.component.relation = value;});\n\n\t\tthis.lineQuantVal1 = dom('<input/>').appendTo(box()).class('wmk-editcomponent-input');\n\t\tthis.lineQuantVal1.attr({'size': '10'});\n\t\tthis.lineQuantVal1.onChange(() => this.interpretQuantString());\n\n\t\tlet spanGap = dom('<span/>').appendTo(flex).css({'padding': '0 0.5em 0 0.5em'});\n\n\t\tthis.lineQuantVal2 = dom('<input/>').appendTo(box()).class('wmk-editcomponent-input');\n\t\tthis.lineQuantVal2.attr({'size': '10'});\n\n\t\tlet qubox = box();\n\t\tthis.lineQuantUnits = dom('<input/>').appendTo(qubox).class('wmk-editcomponent-input');\n\t\tthis.lineQuantUnits.attr({'size': '10', 'placeholder': 'units'});\n\t\tthis.btnQuantUnits = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\"/>').appendTo(qubox).css({'margin-left': '0.2em'});\n\t\tthis.btnQuantUnits.setText('\\u{25BC}');\n\t\tthis.btnQuantUnits.onClick(() => this.selectDropUnits());\n\n\t\tlet changeToValue = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'block');\n\t\t\tspanGap.setHTML('&plusmn;');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'inline-block');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'inline-block');\n\t\t};\n\t\tlet changeToRange = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'none');\n\t\t\tspanGap.setHTML('to');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'inline-block');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'inline-block');\n\t\t};\n\t\tlet changeToRatio = ():void =>\n\t\t{\n\t\t\tthis.dropQuantRel.setCSS('display', 'none');\n\t\t\tspanGap.setHTML('/');\n\t\t\tthis.lineQuantUnits.setCSS('display', 'none');\n\t\t\tthis.btnQuantUnits.setCSS('display', 'none');\n\t\t};\n\n\t\tif (this.component.ratio != null)\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Ratio);\n\t\t\tif (this.component.ratio)\n\t\t\t{\n\t\t\t\tlet [numer, denom] = this.component.ratio;\n\t\t\t\tthis.lineQuantVal1.setValue(numer.toString());\n\t\t\t\tthis.lineQuantVal2.setValue(denom.toString());\n\t\t\t}\n\t\t\tchangeToRatio();\n\t\t}\n\t\telse if (Array.isArray(this.component.quantity))\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Range);\n\t\t\tlet [low, high] = this.component.quantity;\n\t\t\tif (low != null) this.lineQuantVal1.setValue(low.toString());\n\t\t\tif (high != null) this.lineQuantVal2.setValue(high.toString());\n\t\t\tthis.lineQuantUnits.setValue(this.component.units);\n\t\t\tchangeToRange();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.optQuantType.setSelectedValue(QuantityType.Value);\n\t\t\tif (this.component.quantity != null) this.lineQuantVal1.setValue(this.component.quantity.toString());\n\t\t\tif (this.component.error != null) this.lineQuantVal2.setValue(this.component.error.toString());\n\t\t\tthis.lineQuantUnits.setValue(this.component.units);\n\t\t\tchangeToValue();\n\t\t}\n\n\t\tthis.optQuantType.callbackSelect = (idx:number) =>\n\t\t{\n\t\t\tif (idx == 0) changeToValue();\n\t\t\telse if (idx == 1) changeToRange();\n\t\t\telse if (idx == 2) changeToRatio();\n\t\t};\n\t}\n\n\t// creates a dropdown list with a prescribed list of choices; the first one will be selected if current matches nothing\n\tprivate makeDropdownGroup(parent:DOM, current:string, values:string[], labels:string[], changeFunc:(value:string, label:string) => void):DOM\n\t{\n\t\tlet drop = dom('<select/>').appendTo(parent);\n\t\tdrop.css({'height': '2.3em'});\n\t\tfor (let n = 0; n < values.length; n++)\n\t\t{\n\t\t\tlet opt = dom('<option/>').appendTo(drop);\n\t\t\topt.setAttr('value', n.toString());\n\t\t\topt.setHTML(labels[n]);\n\t\t\tif (current == values[n] || current == labels[n]) opt.setAttr('selected', 'true');\n\t\t}\n\t\tdrop.onChange(() => {let idx = parseInt(drop.getValue()); changeFunc(values[idx], labels[idx]);});\n\t\treturn drop;\n\t}\n\n\tprivate selectDropUnits():void\n\t{\n\t\tlet popup = new Popup(this.btnQuantUnits);\n\t\tpopup.callbackPopulate = () =>\n\t\t{\n\t\t\tlet body = popup.bodyDOM();\n\t\t\tfor (let label of Units.commonNames())\n\t\t\t{\n\t\t\t\tlet div = dom('<div/>').appendTo(body).class('wmk-editcomponent-units');\n\t\t\t\tdiv.setText(label);\n\t\t\t\tdiv.onClick(() =>\n\t\t\t\t{\n\t\t\t\t\tthis.lineQuantUnits.setValue(label);\n\t\t\t\t\tpopup.close();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tpopup.open();\n\t}\n\n\t// special deal: when typing in extended content to the regular value entry box, optionally break up strings that contain\n\t// a more complete description, e.g. quantity *and* units; returns true if it did something interesting\n\tprivate interpretQuantString():boolean\n\t{\n\t\tlet qstr = this.lineQuantVal1.getValue().trim();\n\n\t\t// scrape out any \"relation\" properties from the beginning first of all\n\t\tlet rel = '';\n\t\tfor (let pfx of RELATION_VALUES) if (qstr.startsWith(pfx) && pfx.length > rel.length) rel = pfx;\n\t\tif (rel) qstr = qstr.substring(rel.length);\n\t\telse if (qstr.startsWith('\\u{2264}')) [rel, qstr] = ['<=', qstr.substring(1)];\n\t\telse if (qstr.startsWith('\\u{2265}')) [rel, qstr] = ['>=', qstr.substring(1)];\n\n\t\t// scrape off units from the end\n\t\tlet units = '';\n\t\tfor (let [name, uri] of Object.entries(Units.NAME_TO_URI))\n\t\t{\n\t\t\tlet regname = name.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // regexify the unit name\n\t\t\tlet regex = new RegExp(`^(.*[\\\\d\\\\s\\)])(${regname})$`);\n\t\t\tlet match = regex.exec(qstr);\n\t\t\tif (!match) continue;\n\t\t\tqstr = match[1];\n\t\t\tunits = Units.URI_TO_NAME[uri];\n\t\t\tbreak;\n\t\t}\n\n\t\tlet isNum = (str:string):boolean =>\n\t\t{\n\t\t\tif (str.startsWith('.')) str = '0' + str;\n\t\t\tif (!/^-?[0-9]+\\.?[0-9eE]*$/.test(str)) return false;\n\t\t\treturn !isNaN(parseFloat(str));\n\t\t};\n\n\t\tqstr = qstr.trim();\n\t\tlet qtype:QuantityType = null;\n\t\tlet qnum1 = '', qnum2 = '';\n\t\tlet match = /^([0-9\\-\\.eE]+)-([0-9\\-\\.eE]+)$/.exec(qstr); // A-B\n\t\tif (match)\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Range, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\.\\.([0-9\\-\\.eE]+)$/.exec(qstr)) // A..B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Range, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\(([0-9\\-\\.eE]+)\\)$/.exec(qstr)) // A(B)\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Value, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2) || !units) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\:([0-9\\-\\.eE]+)$/.exec(qstr)) // A:B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Ratio, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2)) return false;\n\t\t}\n\t\telse if (match = /^([0-9\\-\\.eE]+)\\/([0-9\\-\\.eE]+)$/.exec(qstr)) // A/B\n\t\t{\n\t\t\t[qtype, qnum1, qnum2] = [QuantityType.Ratio, match[1], match[2]];\n\t\t\tif (!isNum(qnum1) || !isNum(qnum2)) return false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!isNum(qstr) || !units) return false;\n\t\t\t[qtype, qnum1] = [QuantityType.Value, qstr];\n\t\t}\n\n\t\tthis.optQuantType.setSelectedValue(qtype);\n\t\tthis.dropQuantRel.setValue(Math.max(0, RELATION_VALUES.indexOf(rel)).toString());\n\t\tthis.lineQuantVal1.setValue(qnum1);\n\t\tthis.lineQuantVal2.setValue(qnum2);\n\t\tthis.lineQuantUnits.setValue(units);\n\t\tthis.component.units = units;\n\t\treturn true;\n\t}\n\n\t// uses the structure (if any) to calculate the InChI, and fill in the field value\n\tprivate async calculateInChI():Promise<void>\n\t{\n\t\tif (!InChI.isAvailable()) return;\n\t\t//let mol = this.sketcher.getMolecule();\n\t\tlet mol = MoleculeStream.readUnknown(this.component.molfile);\n\t\tif (MolUtil.isBlank(mol))\n\t\t{\n\t\t\t//alert('Draw a molecule first, then calculate the InChI.');\n\t\t\treturn;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tlet {inchi} = await this.inchi.generate(mol);\n\t\t\tthis.lineInChI.setValue(inchi);\n\t\t}\n\t\tcatch (ex) {alert('InChI generation failed: ' + ex);}\n\t}\n\n\t// if there is a structure, calculate MF\n\tprivate calculateFormula():string\n\t{\n\t\tif (!this.component.molfile) return '';\n\t\tlet mol = MoleculeStream.readUnknown(this.component.molfile);\n\t\tif (MolUtil.isBlank(mol)) return '';\n\t\tfor (let n = mol.numAtoms; n >= 1; n--) if (mol.atomicNumber(n) == 0) mol.deleteAtomAndBonds(n);\n\t\treturn MolUtil.molecularFormula(mol);\n\t}\n\n\t// derive from MF field, if any\n\tprivate calculateWeight():void\n\t{\n\t\tlet mw = 0;\n\n\t\tlet mf = this.lineFormula.getValue();\n\t\tif (!mf) mf = this.lineFormula.elInput.placeholder;\n\n\t\twhile (mf)\n\t\t{\n\t\t\tlet match = mf.match(/^([A-Z][a-z]?)(\\d*)(.*?)$/);\n\t\t\tif (!match) {mw = 0; break;}\n\t\t\tlet atno = Chemistry.ELEMENTS.indexOf(match[1]);\n\t\t\tif (atno <= 0) {mw = 0; break;}\n\t\t\tlet num = 1;\n\t\t\tif (match[2])\n\t\t\t{\n\t\t\t\tnum = parseInt(match[2]);\n\t\t\t\tif (num <= 0) {mw = 0; break;}\n\t\t\t}\n\t\t\tmw += Chemistry.NATURAL_ATOMIC_WEIGHTS[atno] * num;\n\t\t\tmf = match[3];\n\t\t}\n\n\t\tif (mw > 0)\n\t\t{\n\t\t\tthis.divWeight.css({'padding-left': '0.5em'});\n\t\t\tthis.divWeight.setText(mw.toFixed(3) + ' g/mol');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.divWeight.css({'padding-left': '0'});\n\t\t\tthis.divWeight.setText('');\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {DataSheet} from 'webmolkit/ds/DataSheet';\nimport {MDLSDFReader} from 'webmolkit/io/MDLReader';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {CoordUtil} from 'webmolkit/mol/CoordUtil';\n\n/*\n\tSearching PubChem via the REST API, using names to track down other information, primarily structure.\n*/\n\nconst BASE_COMPOUND = 'https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound';\n\nexport interface PubChemSearchResult\n{\n\tmol:Molecule;\n\tnames:string[];\n\tformula:string;\n\tinchi:string;\n\tinchiKey:string;\n}\n\nexport class PubChemSearch\n{\n\tprivate stopped = false;\n\tprivate cidList:number[] = [];\n\n\t// ------------ public methods ------------\n\n\tpublic static async find(searchText:string):Promise<PubChemSearchResult[]>\n\t{\n\t\treturn new Promise<PubChemSearchResult[]>((resolve, reject) =>\n\t\t{\n\t\t\tlet results:PubChemSearchResult[] = [];\n\t\t\tlet callbackResult = (result:PubChemSearchResult):void =>\n\t\t\t{\n\t\t\t\tresults.push(result);\n\t\t\t};\n\t\t\tlet callbackFinished = (err?:string):void =>\n\t\t\t{\n\t\t\t\tif (err) reject(err); else resolve(results);\n\t\t\t};\n\t\t\tnew PubChemSearch(searchText, callbackResult, callbackFinished).start();\n\t\t});\n\t}\n\n\tconstructor(private searchText:string, private callbackResult:(result:PubChemSearchResult) => void, private callbackFinished:(err?:string) => void)\n\t{\n\t}\n\n\t// initiates the search: callback results are to be expected afterward\n\tpublic start():void\n\t{\n\t\tlet url = BASE_COMPOUND + '/name/' + encodeURIComponent(this.searchText) + '/cids/JSON';\n\n\t\tconst https = require('https');\n\t\thttps.get(url, (resp:any) =>\n\t\t{\n\t\t\tlet data = '';\n\t\t\tresp.on('data', (chunk:string) => data += chunk);\n\t\t\tresp.on('end', () => this.receivedList(data));\n\t\t}).on('error', (err:any) => {if (!this.stopped) this.callbackFinished(err.toString());});\n\t}\n\n\t// premature cessation: action ceases, no more callbacks\n\tpublic stop():void\n\t{\n\t\tthis.stopped = true;\n\t}\n\n\t// ------------ private methods ------------\n\n\t// obtained the list of compounds, so proceed from there\n\tprivate receivedList(data:string):void\n\t{\n\t\tif (this.stopped) return;\n\n\t\tlet obj = null;\n\t\ttry\n\t\t{\n\t\t\tobj = JSON.parse(data);\n\t\t}\n\t\tcatch (ex)\n\t\t{\n\t\t\tconsole.log('Received unparseable result: ' + data);\n\t\t\tthis.callbackFinished('Unparseable result from name query: ' + ex.toString());\n\t\t}\n\n\t\tif (!obj.IdentifierList)\n\t\t{\n\t\t\t// found nothing\n\t\t\tthis.callbackFinished();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cidList = obj.IdentifierList.CID;\n\t\tthis.fetchNext();\n\t}\n\n\tprivate fetchNext():void\n\t{\n\t\tif (this.stopped) return;\n\t\tif (this.cidList.length == 0)\n\t\t{\n\t\t\tthis.callbackFinished();\n\t\t\treturn;\n\t\t}\n\n\t\tlet cid = this.cidList.shift();\n\t\tlet url = BASE_COMPOUND + '/cid/' + cid + '/SDF';\n\n\t\tconst https = require('https');\n\t\thttps.get(url, (resp:any) =>\n\t\t{\n\t\t\tlet data = '';\n\t\t\tresp.on('data', (chunk:string) => data += chunk);\n\t\t\tresp.on('end', () => this.receivedCompound(data));\n\t\t}).on('error', (err:any) => {if (!this.stopped) this.callbackFinished(err.toString());});\n\t}\n\n\tprivate receivedCompound(data:string):void\n\t{\n\t\tif (this.stopped) return;\n\n\t\tlet ds = new MDLSDFReader(data).parse();\n\t\tfor (let n = 0; n < ds.numRows; n++) this.unpackCompound(ds, n);\n\n\t\tthis.fetchNext();\n\t}\n\n\tprivate unpackCompound(ds:DataSheet, row:number):void\n\t{\n\t\tlet result:PubChemSearchResult =\n\t\t{\n\t\t\t'mol': ds.getMolecule(row, 'Molecule'),\n\t\t\t'names': [],\n\t\t\t'formula': ds.getString(row, 'PUBCHEM_MOLECULAR_FORMULA'),\n\t\t\t'inchi': ds.getString(row, 'PUBCHEM_IUPAC_INCHI'),\n\t\t\t'inchiKey': ds.getString(row, 'PUBCHEM_IUPAC_INCHIKEY'),\n\t\t};\n\n\t\tif (result.mol)\n\t\t{\n\t\t\tMolUtil.stripHydrogens(result.mol);\n\t\t\tCoordUtil.normaliseBondDistances(result.mol);\n\t\t}\n\n\t\tconst NAMECOLS = ['PUBCHEM_IUPAC_TRADITIONAL_NAME', 'PUBCHEM_IUPAC_SYSTEMATIC_NAME',\n\t\t\t\t\t\t  'PUBCHEM_IUPAC_OPENEYE_NAME', 'PUBCHEM_IUPAC_CAS_NAME', 'PUBCHEM_IUPAC_NAME'];\n\t\tfor (let colName of NAMECOLS)\n\t\t{\n\t\t\tlet names = ds.getString(row, colName);\n\t\t\tif (!names || typeof names != 'string') continue;\n\t\t\tfor (let name of names.split('\\n')) if (name && result.names.indexOf(name) < 0) result.names.push(name);\n\t\t}\n\n\t\tthis.callbackResult(result);\n\t}\n}\n\n","/*\n\tMixfile Editor & Viewing Libraries\n\n\t(c) 2017-2025 Collaborative Drug Discovery, Inc\n\n\tAll rights reserved\n\n\thttp://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {hasInlineCSS, installInlineCSS} from 'webmolkit/util/Theme';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMolecule} from 'webmolkit/gfx/ArrangeMolecule';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMolecule} from 'webmolkit/gfx/DrawMolecule';\nimport {PubChemSearch, PubChemSearchResult} from './PubChemSearch';\n\n/*\n\tDialog for finding a compound by name using remote webservices.\n*/\n\nexport class LookupCompoundDialog extends Dialog\n{\n\tprivate spanStatus:DOM;\n\tprivate btnSearch:DOM;\n\tprivate btnApply:DOM;\n\tprivate vertical:DOM;\n\tprivate searchInput:DOM;\n\tprivate resultArea:DOM;\n\n\tprivate pubchem:PubChemSearch = null;\n\tprivate resultList:PubChemSearchResult[] = [];\n\n\tprivate nameSelected = -1;\n\tprivate nameList:string[] = [];\n\tprivate nameDOM:DOM[] = [];\n\tprivate molSelected = -1;\n\tprivate molList:Molecule[] = [];\n\tprivate molDOM:DOM[] = [];\n\n\tprivate callbackSelect:(source?:LookupCompoundDialog) => void = null;\n\n\t// ------------ public methods ------------\n\n\tconstructor(private searchText:string, private parentSize:[number, number])\n\t{\n\t\tsuper();\n\n\t\tif (!hasInlineCSS('mixtures-lookupcompound')) installInlineCSS('mixtures-lookupcompound', this.composeCSS());\n\n\t\tthis.title = 'Lookup Compound';\n\t\tthis.minPortionWidth = 95;\n\t\tthis.maxPortionWidth = 95;\n\t\tthis.maximumHeight = parentSize[1];\n\t}\n\n\tpublic onSelect(callback:(source?:LookupCompoundDialog) => void):void\n\t{\n\t\tthis.callbackSelect = callback;\n\t}\n\n\t// builds the dialog content\n\tprotected populate():void\n\t{\n\t\tlet buttons = this.buttonsDOM(), body = this.bodyDOM();\n\n\t\t// top section\n\n\t\tthis.spanStatus = dom('<span/>').appendTo(buttons);\n\t\tbuttons.appendText(' ');\n\n\t\tbuttons.append(this.domClose);\n\n\t\tbuttons.appendText(' ');\n\n\t\tthis.btnSearch = dom('<button class=\"wmk-button wmk-button-primary\">Search</button>').appendTo(buttons);\n\t\tthis.btnSearch.onClick(() => this.runSearch());\n\n\t\tbuttons.appendText(' ');\n\n\t\tthis.btnApply = dom('<button class=\"wmk-button wmk-button-default\">Apply</button>').appendTo(buttons);\n\t\tthis.btnApply.onClick(() => this.applyResult());\n\t\tthis.btnApply.elInput.disabled = true;\n\n\t\t// main section\n\n\t\tbody.css({'padding': '0 0 0 0.5em'});\n\t\tthis.vertical = dom('<div/>').appendTo(body);\n\t\tthis.vertical.css({'overflow-y': 'scroll', 'height': '100%'});\n\t\tthis.vertical.css({'max-height': (this.parentSize[1] - 200) + 'px'});\n\t\tthis.vertical.css({'padding-right': '18px', 'padding-bottom': '10px'});\n\n\t\tthis.populateSearchEntry();\n\n\t\tthis.resultArea = dom('<div/>').appendTo(this.vertical);\n\n\t\tif (this.searchText) this.runSearch(); // auto-start\n\t}\n\n\tpublic close():void\n\t{\n\t\tif (this.pubchem) this.pubchem.stop();\n\t\tsuper.close();\n\t}\n\n\t// access to selected results: null = nothing selected\n\tpublic getName():string\n\t{\n\t\treturn this.nameSelected < 0 ? null : this.nameList[this.nameSelected];\n\t}\n\tpublic getMolecule():Molecule\n\t{\n\t\treturn this.molSelected < 0 ? null : this.molList[this.molSelected];\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate populateSearchEntry():void\n\t{\n\t\tlet grid = dom('<div/>').appendTo(this.vertical).css({'display': 'grid'});\n\t\tgrid.css({'width': '100%', 'margin': '0.5em 0 0.5em 0'});\n\t\tgrid.css({'align-items': 'center', 'justify-content': 'start', 'grid-row-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start field] max-content [value] 1fr [end]'});\n\n\t\tlet divLabel = dom('<div/>').appendTo(grid).css({'grid-column': 'field', 'grid-row': '1', 'padding-right': '0.5em'});\n\t\tdivLabel.setText('Name:');\n\n\t\tlet divInput = dom('<div/>').appendTo(grid).css({'grid-column': 'value', 'grid-row': '1'});\n\t\tthis.searchInput = dom('<input/>').appendTo(divInput).css({'width': '100%', 'font': 'inherit'});\n\t\tthis.searchInput.setValue(this.searchText);\n\t\tthis.searchInput.onKeyDown((event) => this.trapKeys(event));\n\n\t\tthis.searchInput.grabFocus();\n\t}\n\n\tprivate runSearch():void\n\t{\n\t\tif (this.pubchem) this.pubchem.stop();\n\t\tthis.resultArea.empty();\n\t\tthis.resultList = [];\n\n\t\tthis.spanStatus.setText('Searching...');\n\n\t\tlet text = this.searchInput.getValue();\n\t\tif (!text) return;\n\t\tthis.pubchem = new PubChemSearch(text,\n\t\t\t(result:PubChemSearchResult):void => this.gotResult(result),\n\t\t\t(err:string):void => this.finishedSearch(err));\n\t\tthis.pubchem.start();\n\t}\n\n\tprivate applyResult():void\n\t{\n\t\tthis.callbackSelect(this);\n\t\tthis.close();\n\t}\n\n\tprivate gotResult(result:PubChemSearchResult):void\n\t{\n\t\tthis.resultList.push(result);\n\n\t\tlet grid = dom('<div/>').appendTo(this.resultArea).css({'display': 'grid'});\n\t\tgrid.css({'width': '100%', 'margin': '0.5em 0 0.5em 0', 'align-items': 'top', 'justify-content': 'start'});\n\t\tgrid.css({'grid-row-gap': '0.5em'});\n\t\tgrid.css({'grid-template-columns': '[start molecule] max-content [names] 1fr [end]'});\n\n\t\tlet divMol = dom('<div/>').appendTo(grid).css({'grid-column': 'molecule', 'grid-row': '1', 'padding-right': '0.5em'});\n\n\t\tif (result.mol)\n\t\t{\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMolecule(result.mol, measure, policy);\n\t\t\tlayout.arrange();\n\t\t\tlayout.squeezeInto(0, 0, 300, 300);\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMolecule(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\n\t\t\tlet svg = dom(gfx.createSVG()).appendTo(divMol).css({'display': 'inline-block'});\n\t\t\tsvg.addClass('mixtures-lookupcompound-unselected');\n\n\t\t\tconst idx = this.molList.length;\n\t\t\tsvg.onClick(() => this.selectMolecule(idx));\n\n\t\t\tthis.molList.push(result.mol);\n\t\t\tthis.molDOM.push(svg);\n\t\t}\n\t\telse divMol.setText('(no structure)');\n\n\t\tlet divName = dom('<div/>').appendTo(grid).css({'grid-column': 'names', 'grid-row': '1', 'padding-right': '0.5em'});\n\n\t\tif (result.names.length == 0) divName.setText('(no names)');\n\t\telse for (let name of result.names)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(divName);\n\t\t\tlet span = dom('<span/>').appendTo(div);\n\t\t\tspan.addClass('mixtures-lookupcompound-unselected');\n\t\t\tspan.setText(name);\n\n\t\t\tconst idx = this.nameList.length;\n\t\t\tdiv.onClick(() => this.selectName(idx));\n\n\t\t\tthis.nameList.push(name);\n\t\t\tthis.nameDOM.push(span);\n\t\t}\n\t}\n\n\tprivate finishedSearch(err:string):void\n\t{\n\t\tthis.spanStatus.setText('');\n\n\t\tif (err) alert('Search failed: ' + err);\n\t\telse if (this.resultList.length == 0)\n\t\t{\n\t\t\tthis.resultArea.empty();\n\t\t\tthis.resultArea.setText('Nothing found.');\n\t\t}\n\t}\n\n\tprivate trapKeys(event:KeyboardEvent):void\n\t{\n\t\tif (event.keyCode == 27)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.close();\n\t\t}\n\t\telse if (event.keyCode == 13)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.runSearch();\n\t\t}\n\t}\n\n\tprivate selectName(idx:number):void\n\t{\n\t\tlet prev = this.nameSelected;\n\t\tif (prev == idx) idx = -1;\n\n\t\tif (prev >= 0) this.nameDOM[prev].removeClass('mixtures-lookupcompound-selected');\n\t\tif (idx >= 0) this.nameDOM[idx].addClass('mixtures-lookupcompound-selected');\n\t\tthis.nameSelected = idx;\n\n\t\tthis.btnApply.elInput.disabled = this.nameSelected < 0 && this.molSelected < 0;\n\t}\n\n\tprivate selectMolecule(idx:number):void\n\t{\n\t\tlet prev = this.molSelected;\n\t\tif (prev == idx) idx = -1;\n\n\t\tif (prev >= 0) this.molDOM[prev].removeClass('mixtures-lookupcompound-selected');\n\t\tif (idx >= 0) this.molDOM[idx].addClass('mixtures-lookupcompound-selected');\n\t\tthis.molSelected = idx;\n\n\t\tthis.btnApply.elInput.disabled = this.nameSelected < 0 && this.molSelected < 0;\n\t}\n\n\t// one-time instantiation of necessary styles\n\tprivate composeCSS():string\n\t{\n\t\treturn `\n\t\t\t.mixtures-lookupcompound-unselected\n\t\t\t{\n\t\t\t\tcursor: pointer;\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder: 1px solid transparent;\n\t\t\t\tpadding: 3px;\n\t\t\t\tborder-radius: 4px;\n\t\t\t}\n\t\t\t.mixtures-lookupcompound-selected\n\t\t\t{\n\t\t\t\tcursor: default;\n\t\t\t\tbackground-color: #E0E0E0;\n\t\t\t\tborder: 1px solid #808080;\n\t\t\t}\n\t\t`;\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport {MDLMOLReader, MDLReaderGroupMixture, MDLReaderLinkNode} from 'webmolkit/io/MDLReader';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {deepClone} from 'webmolkit/util/util';\nimport {MixfileComponent} from './Mixfile';\n\n/*\n\tChecks the supplied string to see if it is a CTAB (V2000/V3000) with features that make enumerable. If so,\n\treturns a list of molecules.\n*/\n\ninterface ProtoMolecule\n{\n\tmol:Molecule;\n\tchildren:ProtoMolecule[];\n\tattachAny:Map<number, number[]>; // bond -> list of atom indices\n\tstereoRacemic:number[][]; // blocks of atoms which are racemic\n\tstereoRelative:number[][]; // blocks of atoms which exist in their drawn configuration OR the opposite\n\tlinkNodes:MDLReaderLinkNode[]; // so-called link nodes, aka repeating atom\n\tmixtures:MDLReaderGroupMixture[]; // mixture collections, which may overlap\n}\n\nexport class ExtractCTABComponent\n{\n\t// ------------ public methods ------------\n\n\tconstructor(private text:string)\n\t{\n\t}\n\n\t// returns a component instance if and only when the underlying CTAB has something mixture-esque; if it's not a molecule,\n\t// or is just a plain ordinary single molecule, returns null\n\tpublic extract():MixfileComponent\n\t{\n\t\tlet ctab = new MDLMOLReader(this.text);\n\t\ttry {ctab.parse();}\n\t\tcatch (ex) {return null;}\n\n\t\tif (!ctab.mol) return null;\n\n\t\tlet seed:Partial<ProtoMolecule> = {mol: ctab.mol};\n\t\tif (ctab.groupAttachAny.size > 0) seed.attachAny = ctab.groupAttachAny;\n\t\tif (ctab.groupStereoRacemic.length > 0) seed.stereoRacemic = ctab.groupStereoRacemic;\n\t\tif (ctab.groupStereoRelative.length > 0) seed.stereoRelative = ctab.groupStereoRelative;\n\t\tif (ctab.groupLinkNodes.length > 0) seed.linkNodes = ctab.groupLinkNodes;\n\t\tif (ctab.groupMixtures.length > 0) seed.mixtures = ctab.groupMixtures;\n\n\t\tif (!seed.attachAny && !seed.stereoRacemic && !seed.stereoRelative &&\n\t\t\t!seed.linkNodes && !seed.mixtures) return null;\n\n\t\tconst SANITY = 100; // stop enumerating after this many\n\n\t\tlet prototypes:ProtoMolecule[] = [seed as ProtoMolecule];\n\t\tfor (let n = 0; n < prototypes.length;)\n\t\t{\n\t\t\tlet proto = prototypes[n];\n\t\t\tlet list:ProtoMolecule[] = this.enumerateAttachAny(proto);\n\t\t\tif (!list) list = this.enumerateStereoRacemic(proto);\n\t\t\tif (!list) list = this.enumerateStereoRelative(proto);\n\t\t\tif (!list) list = this.enumerateLinkNodes(proto);\n\t\t\tif (!list) list = this.enumerateMixtures(proto);\n\n\t\t\tif (list)\n\t\t\t{\n\t\t\t\tprototypes[n] = list[0];\n\t\t\t\tfor (let i = 1; i < list.length; i++) prototypes.splice(n + i, 0, list[i]);\n\t\t\t}\n\t\t\telse n++;\n\n\t\t\tif (prototypes.length > SANITY) break;\n\t\t}\n\n\t\tif (prototypes.length == 0) return null;\n\t\tif (prototypes.length == 1 && Vec.isBlank(prototypes[0].children)) return null;\n\n\t\tlet emit = (comp:MixfileComponent, proto:ProtoMolecule):void =>\n\t\t{\n\t\t\tlet subComp:MixfileComponent = {};\n\t\t\tif (proto.mol) subComp.molfile = new MDLMOLWriter(proto.mol).write();\n\t\t\tcomp.contents.push(subComp);\n\t\t\tif (proto.children)\n\t\t\t{\n\t\t\t\tsubComp.contents = [];\n\t\t\t\tfor (let child of proto.children) emit(subComp, child);\n\t\t\t}\n\t\t};\n\n\t\tlet comp:MixfileComponent = {contents: []};\n\t\tif (ctab.molName) comp.name = ctab.molName;\n\t\tfor (let proto of prototypes) emit(comp, proto);\n\n\t\treturn comp;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate enumerateAttachAny(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (!proto.attachAny) return null;\n\t\tlet bond:number = null;\n\t\tfor (let look of proto.attachAny.keys()) {bond = look; break;}\n\t\tif (bond == null) return null;\n\t\tlet atoms = proto.attachAny.get(bond);\n\t\tproto.attachAny.delete(bond);\n\t\tif (Vec.isBlank(atoms)) return null;\n\n\t\tlet mol = proto.mol;\n\t\tlet atomKeep = mol.bondFrom(bond), atomChop = mol.bondTo(bond);\n\t\tif (mol.atomElement(atomChop) == '*') {}\n\t\telse if (mol.atomElement(atomKeep) == '*') [atomKeep, atomChop] = [atomChop, atomKeep];\n\t\telse if (mol.atomAdjCount(atomKeep) < mol.atomAdjCount(atomChop)) [atomKeep, atomChop] = [atomChop, atomKeep];\n\n\t\t// update the baseline prototype in lieu of the atom sacrificial atom getting deleted\n\t\tfor (let look of proto.attachAny.keys()) this.removeAtom(proto.attachAny.get(look), atomChop);\n\t\tif (proto.stereoRelative) for (let look of proto.stereoRelative) this.removeAtom(look, atomChop);\n\t\tif (proto.stereoRacemic) for (let look of proto.stereoRacemic) this.removeAtom(look, atomChop);\n\t\tif (proto.linkNodes) for (let n = proto.linkNodes.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (proto.linkNodes[n].atom == atomChop) {proto.linkNodes.splice(n, 1); continue;}\n\t\t\tif (proto.linkNodes[n].atom > atomChop) proto.linkNodes[n].atom--;\n\t\t\tthis.removeAtom(proto.linkNodes[n].nbrs, atomChop);\n\t\t}\n\t\tif (proto.mixtures) for (let look of proto.mixtures) this.removeAtom(look.atoms, atomChop);\n\n\t\tlet list:ProtoMolecule[] = [];\n\t\tfor (let connAtom of atoms)\n\t\t{\n\t\t\tlet cmol = mol.clone();\n\t\t\tif (atomChop == cmol.bondFrom(bond)) cmol.setBondFrom(bond, connAtom); else cmol.setBondTo(bond, connAtom);\n\t\t\tcmol.deleteAtomAndBonds(atomChop);\n\t\t\t// TODO: ideally a little redepiction of the connecting bond would be in order, but the connectivity is right, and\n\t\t\t// in most cases it will be possible to see what it is\n\t\t\tlist.push(this.protoClone(proto, cmol));\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t// groups of racemic stereocentres: enumerate all combinations (2^group size)\n\tprivate enumerateStereoRacemic(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.stereoRacemic)) return null;\n\n\t\tlet blk = proto.stereoRacemic.shift();\n\t\tlet mol = proto.mol;\n\n\t\tlet affected = new Set<number>();\n\t\tfor (let atom of blk) affected.add(atom);\n\t\tlet bonds:number[] = [];\n\t\tfor (let n = 1; n <= mol.numBonds; n++) if (affected.has(mol.bondFrom(n)) || affected.has(mol.bondTo(n)))\n\t\t{\n\t\t\tlet bt = mol.bondType(n);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED || bt == Molecule.BONDTYPE_DECLINED) bonds.push(n);\n\t\t}\n\n\t\tlet nperm = Math.min(256, 1 << bonds.length);\n\t\tlet list = [this.protoClone(proto, mol)];\n\t\tfor (let n = 1; n < nperm; n++)\n\t\t{\n\t\t\tlet rmol = mol.clone();\n\t\t\tfor (let i = 0, bitand = 1; i < bonds.length; i++)\n\t\t\t{\n\t\t\t\tif (n & bitand)\n\t\t\t\t{\n\t\t\t\t\tlet bt = rmol.bondType(bonds[i]);\n\t\t\t\t\tbt = bt == Molecule.BONDTYPE_INCLINED ? Molecule.BONDTYPE_DECLINED : Molecule.BONDTYPE_INCLINED;\n\t\t\t\t\trmol.setBondType(bonds[i], bt);\n\t\t\t\t}\n\t\t\t\tbitand = bitand << 1;\n\t\t\t}\n\t\t\tlist.push(this.protoClone(proto, rmol));\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t// relative stereocentres: add the original + the inversion for that group\n\tprivate enumerateStereoRelative(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.stereoRelative)) return null;\n\n\t\tlet blk = proto.stereoRelative.shift();\n\t\tlet affected = new Set<number>();\n\t\tfor (let atom of blk) affected.add(atom);\n\n\t\tlet molinv = proto.mol.clone();\n\t\tfor (let n = 1; n <= molinv.numBonds; n++) if (affected.has(molinv.bondFrom(n)) || affected.has(molinv.bondTo(n)))\n\t\t{\n\t\t\tlet bt = molinv.bondType(n);\n\t\t\tif (bt == Molecule.BONDTYPE_INCLINED) molinv.setBondType(n, Molecule.BONDTYPE_DECLINED);\n\t\t\telse if (bt == Molecule.BONDTYPE_DECLINED) molinv.setBondType(n, Molecule.BONDTYPE_INCLINED);\n\t\t}\n\n\t\treturn [proto, this.protoClone(proto, molinv)];\n\t}\n\tprivate enumerateLinkNodes(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.linkNodes)) return null;\n\n\t\tlet link = proto.linkNodes.shift();\n\n\t\tlet mol = proto.mol, a1 = link.atom;\n\t\tlet nbr1 = link.nbrs.length >= 1 ? link.nbrs[0] : 0;\n\n\t\tlet list:ProtoMolecule[] = [];\n\t\tfor (let n = link.minRep; n <= link.maxRep; n++)\n\t\t{\n\t\t\tif (n == 1)\n\t\t\t{\n\t\t\t\tlist.push(this.protoClone(proto, mol));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet rmol = mol.clone();\n\t\t\tlet addedAtoms:number[] = [];\n\t\t\tfor (let i = 2; i <= n; i++)\n\t\t\t{\n\t\t\t\tlet a2 = rmol.addAtom(rmol.atomElement(a1), rmol.atomX(a1), rmol.atomY(a1));\n\t\t\t\trmol.setAtomCharge(a2, rmol.atomCharge(a1));\n\t\t\t\trmol.setAtomUnpaired(a2, rmol.atomUnpaired(a2));\n\t\t\t\trmol.addBond(a1, a2, 1);\n\t\t\t\tif (nbr1 > 0)\n\t\t\t\t{\n\t\t\t\t\tlet a3 = 0;\n\t\t\t\t\tfor (let adj of rmol.atomAdjList(a1)) if (adj != a2 && adj != nbr1) {a3 = adj; break;}\n\t\t\t\t\tif (a3 > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet b = rmol.findBond(a1, a3);\n\t\t\t\t\t\tif (rmol.bondFrom(b) == a1) rmol.setBondFrom(b, a2); else rmol.setBondTo(b, a2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\taddedAtoms.push(a1);\n\t\t\t}\n\t\t\t// TODO: depiction would be nice; the atoms are just overlayed on top of each other\n\n\t\t\tlet rproto = this.protoClone(proto, rmol);\n\t\t\tif (rproto.mixtures) for (let mix of rproto.mixtures)\n\t\t\t{\n\t\t\t\tif (mix.atoms.includes(a1)) mix.atoms.push(...addedAtoms);\n\t\t\t}\n\t\t\tlist.push(rproto);\n\t\t}\n\n\t\treturn list;\n\t}\n\tprivate enumerateMixtures(proto:ProtoMolecule):ProtoMolecule[]\n\t{\n\t\tif (Vec.isBlank(proto.mixtures)) return null;\n\n\t\t// NOTE: currently assuming that this enumeration step happens last, and is done in one fell swoop; the protomolecule hierarchy\n\t\t// that gets returned discards any remaining enumeration materials\n\n\t\tlet mol = proto.mol, mixtures = proto.mixtures;\n\n\t\tlet identity = mixtures.map((mix) => mix.index);\n\t\tlet leafmask = Vec.booleanArray(true, mixtures.length);\n\t\tfor (let mix of mixtures) if (mix.parent > 0)\n\t\t{\n\t\t\tlet i = identity.indexOf(mix.parent);\n\t\t\tif (i >= 0) leafmask[i] = false;\n\t\t}\n\n\t\tlet root = {children: []} as ProtoMolecule;\n\t\tlet mapTree = new Map<number, ProtoMolecule>();\n\t\tmapTree.set(0, root);\n\t\twhile (true)\n\t\t{\n\t\t\tlet anything = false;\n\t\t\tfor (let n = 0; n < mixtures.length; n++) if (!leafmask[n] && !mapTree.has(mixtures[n].index))\n\t\t\t{\n\t\t\t\tlet parent = mapTree.get(mixtures[n].parent);\n\t\t\t\tif (!parent) continue;\n\t\t\t\tlet node = {children: []} as ProtoMolecule;\n\t\t\t\tparent.children.push(node);\n\t\t\t\tmapTree.set(mixtures[n].index, node);\n\t\t\t\tanything = true;\n\t\t\t}\n\t\t\tif (!anything) break;\n\t\t}\n\n\t\tlet nonemask = Vec.booleanArray(true, mol.numAtoms); // atoms not mentioned in any mixture block\n\t\tfor (let mix of mixtures) for (let a of mix.atoms) nonemask[a - 1] = false;\n\n\t\tfor (let n = 0; n < mixtures.length; n++) if (leafmask[n])\n\t\t{\n\t\t\tlet atommask = nonemask.slice(0);\n\t\t\tfor (let a of mixtures[n].atoms) atommask[a - 1] = true;\n\n\t\t\tlet mixmol = MolUtil.subgraphMask(mol, atommask);\n\t\t\tlet node = {mol: mixmol} as ProtoMolecule;\n\t\t\tmapTree.get(mixtures[n].parent).children.push(node);\n\t\t}\n\n\t\tif (root.children.length == 1) root = root.children[0];\n\t\treturn root.children;\n\t}\n\n\t// makes a copy of the prototype's fields, and copies over the replacement molecule\n\tprivate protoClone(proto:ProtoMolecule, mol:Molecule):ProtoMolecule\n\t{\n\t\tlet dup:ProtoMolecule =\n\t\t{\n\t\t\t'mol': mol,\n\t\t\t'children': [],\n\t\t\t'attachAny': proto.attachAny ? new Map(proto.attachAny) : null,\n\t\t\t'stereoRacemic': deepClone(proto.stereoRacemic),\n\t\t\t'stereoRelative': deepClone(proto.stereoRelative),\n\t\t\t'linkNodes': deepClone(proto.linkNodes),\n\t\t\t'mixtures': deepClone(proto.mixtures),\n\t\t};\n\t\treturn dup;\n\t}\n\n\t// updates a list given that a certain atom has been deleted: decrements or removes any atoms that are affected\n\tprivate removeAtom(list:number[], atom:number):void\n\t{\n\t\tfor (let n = list.length - 1; n >= 0; n--)\n\t\t{\n\t\t\tif (list[n] == atom) list.splice(n, 1);\n\t\t\telse if (list[n] > atom) list[n]--;\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Widget} from 'webmolkit/ui/Widget';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {deepClone, eventCoords, newElement, pixelDensity} from 'webmolkit/util/util';\nimport {EditCompound} from 'webmolkit/dialog/EditCompound';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {MoleculeStream} from 'webmolkit/io/MoleculeStream';\nimport {Molecule} from 'webmolkit/mol/Molecule';\nimport {EditComponent} from './EditComponent';\nimport {MDLMOLWriter} from 'webmolkit/io/MDLWriter';\nimport {MolUtil} from 'webmolkit/mol/MolUtil';\nimport {Box, Size} from 'webmolkit/util/Geom';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {CoordUtil} from 'webmolkit/mol/CoordUtil';\nimport {Mixture} from '../mixture/Mixture';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MixfileComponent} from '../mixture/Mixfile';\nimport {LookupCompoundDialog} from '../electron/LookupCompoundDialog';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {ExtractCTABComponent} from '../mixture/ExtractCTABComponent';\nimport {NormMixture} from '../mixture/NormMixture';\nimport {DrawMixture} from '../mixture/DrawMixture';\n\n/*\n\tHigh level widget for the editing area for a mixture.\n*/\n\nconst DEFAULT_SCALE = 25;\nconst UNDO_SIZE = 10;\n\nenum DragReason\n{\n\tNone,\n\tAny,\n\tPan,\n}\n\nexport class EditMixture extends Widget\n{\n\tpublic callbackUpdateTitle:() => void = null;\n\tpublic callbackInteraction:() => void = null;\n\n\tpublic monochrome = false;\n\n\tprotected mixture = new Mixture();\n\tprotected policy:RenderPolicy = null\n\tprotected canvasMixture:HTMLCanvasElement;\n\tprotected canvasOver:HTMLCanvasElement;\n\n\tprotected undoStack:Mixture[] = [];\n\tprotected redoStack:Mixture[] = [];\n\n\tprotected offsetX = 0;\n\tprotected offsetY = 0;\n\tprotected pointScale = DEFAULT_SCALE;\n\tprotected filthy = true; // filthy: screen is out of date, needs to be redrawn\n\tprotected dirty = false; // dirty: data has changed since last save\n\tprotected layout:ArrangeMixture = null;\n\tprotected collapsedBranches:number[][] = [];\n\tprotected hoverIndex = -1; // component over which the mouse is hovering\n\tprotected activeIndex = -1; // component that is currently being clicked upon\n\tprotected selectedIndex = 0; // selected component (having been previously clicked)\n\tprotected delayedSelect:number[] = null; // if set to an origin vector: to rederive selectedIndex next time the layout is evaluated\n\n\tprotected dragReason = DragReason.None;\n\tprotected dragIndex = -1;\n\tprotected dragX = 0;\n\tprotected dragY = 0;\n\tprotected isEditing = false;\n\tprotected dlgCompound:EditCompound = null;\n\n\tprotected structureIntegrity:Record<string, string> = {}; // metadata key -> name for those which are sensitive to changes to structure\n\n\t// ------------ public methods ------------\n\n\tconstructor(protected inchi:InChIDelegate, protected proxyClip:ClipboardProxy, protected proxyMenu:MenuProxy)\n\t{\n\t\tsuper();\n\t}\n\n\tpublic render(parent:any):void\n\t{\n\t\tsuper.render(parent);\n\n\t\tlet content = this.contentDOM;\n\n\t\tcontent.css({'width': '100%', 'height': '100%'});\n\t\tcontent.css({'background-color': '#F0F0F0'});\n\t\tcontent.css({'position': 'relative', 'outline-width': '0'});\n\n\t\tlet canvasStyle = 'position: absolute; left: 0; top: 0; pointer-events: none;';\n\t\tthis.canvasMixture = newElement(content, 'canvas', {style: canvasStyle}) as HTMLCanvasElement;\n\t\tthis.canvasOver = newElement(content, 'canvas', {style: canvasStyle}) as HTMLCanvasElement;\n\n\t\t//content.onResize(() => this.redraw());\n\n\t\t// setup all the interactive events\n\t\tcontent.onClick((event) => this.mouseClick(event));\n\t\tcontent.onDblClick((event) => this.mouseDoubleClick(event));\n\t\tcontent.onMouseDown((event) => this.mouseDown(event));\n\t\tcontent.onMouseUp((event) => this.mouseUp(event));\n\t\tcontent.onMouseOver((event) => this.mouseOver(event));\n\t\tcontent.onMouseLeave((event) => this.mouseOut(event));\n\t\tcontent.onMouseMove((event) => this.mouseMove(event));\n\t\t// (maybe have mousewheel as an option: in Electron mode it makes some sense, but embedded\n\t\t// on a web page it' not good...)\n\t\t//content.on('mousewheel', (event:JQueryEventObject) => this.mouseWheel(event));\n\t\tcontent.onKeyPress((event) => this.keyPressed(event));\n\t\tcontent.onKeyDown((event) => this.keyDown(event));\n\t\tcontent.onKeyUp((event) => this.keyUp(event));\n\t\tcontent.onContextMenu((event) => this.contextMenu(event));\n\n\t\tcontent.attr({'id': 'mixtureEditor_main', 'tabindex': '0'});\n\t\tthis.refocus();\n\t\tthis.redraw(true, false);\n\t}\n\n\t// whether or not menu commands are being received; no means that it's in dialog/editing mode\n\tpublic isReceivingCommands():boolean {return !this.isEditing;}\n\tpublic setEditing(isEditing:boolean):void {this.isEditing = isEditing;}\n\tpublic compoundEditor():EditCompound {return this.dlgCompound;}\n\n\t// add a metadata key that can potentially stop being valid when the structure is changed\n\tpublic addStructureIntegrityKey(key:string, description:string):void\n\t{\n\t\tthis.structureIntegrity[key] = description;\n\t}\n\n\t// access to current state\n\tpublic getMixture():Mixture {return this.mixture;}\n\tpublic setMixture(mixture:Mixture, withAutoScale:boolean = false, withStashUndo:boolean = true):void\n\t{\n\t\t// NOTE: the \"withAutoScale\" parameter is currently not very meaningful since the modified mixture gets a re-layout\n\t\twithAutoScale = true;\n\n\t\tif (this.delayedSelect == null && this.selectedIndex >= 0 && this.layout != null) this.delayedSelect = this.layout.components[this.selectedIndex].origin;\n\n\t\tif (withStashUndo) this.stashUndo();\n\t\tthis.mixture = mixture;\n\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t\tthis.pointScale = this.policy.data.pointScale;\n\t\tthis.filthy = true;\n\t\tthis.layout = null;\n\t\tthis.hoverIndex = -1;\n\t\tthis.activeIndex = -1;\n\t\tthis.selectedIndex = -1;\n\t\tthis.redraw(withAutoScale);\n\n\t\tthis.dirty = true;\n\t\tif (this.callbackUpdateTitle) this.callbackUpdateTitle();\n\t}\n\n\t// returns the selected origin indices & component, or null if nothing selected\n\tpublic getSelected():[number[], MixfileComponent]\n\t{\n\t\tif (this.selectedIndex < 0 || this.layout == null) return [null, null];\n\t\tlet comp = this.layout.components[this.selectedIndex];\n\t\treturn [comp.origin, comp.content];\n\t}\n\n\tpublic getCollapsedBranches():number[][] {return this.collapsedBranches;}\n\n\t// wipes the undo & redo stacks\n\tpublic clearHistory():void\n\t{\n\t\tthis.undoStack = [];\n\t\tthis.redoStack = [];\n\t}\n\n\t// appends the current state to the undo-stack\n\tpublic stashUndo():void\n\t{\n\t\t//if (this.undoStack.length == 0 && this.mixture.isEmpty()) return; // don't put empty stuff at the beginning\n\t\tthis.undoStack.push(this.mixture.clone());\n\t\twhile (this.undoStack.length > UNDO_SIZE) this.undoStack.splice(0, 1);\n\t\tthis.redoStack = [];\n\t}\n\n\t// reports on the state of the undo/redo buffers\n\tpublic canUndo():boolean {return this.undoStack.length > 0;}\n\tpublic canRedo():boolean {return this.redoStack.length > 0;}\n\n\t// actually does the undo/redo operation\n\tpublic performUndo():void\n\t{\n\t\tif (this.undoStack.length == 0) return;\n\t\tthis.redoStack.push(this.mixture.clone());\n\t\tthis.setMixture(this.undoStack.pop(), false, false);\n\t}\n\tpublic performRedo():void\n\t{\n\t\tif (this.redoStack.length == 0) return;\n\t\tthis.undoStack.push(this.mixture.clone());\n\t\tthis.setMixture(this.redoStack.pop(), false, false);\n\t}\n\n\t// need-save status\n\tpublic isDirty():boolean {return this.dirty;}\n\tpublic setDirty(dirty:boolean):void {this.dirty = dirty;}\n\n\t// returns true if the mixture content is empty\n\tpublic isBlank():boolean {return this.mixture.isEmpty();}\n\n\t// makes sure the content gets redrawn imminently; calling many times is not a performance issue\n\tpublic delayedRedraw():void\n\t{\n\t\tthis.filthy = true;\n\t\twindow.setTimeout(() => {if (this.filthy) this.redraw();}, 10);\n\t}\n\n\t// alter zoom level by a factor\n\tpublic zoom(scale:number):void\n\t{\n\t\tthis.pointScale *= scale;\n\t\tthis.layout = null;\n\t\tthis.redraw();\n\t}\n\n\t// rescale to fit & recentre\n\tpublic zoomFull():void\n\t{\n\t\tthis.layout = null;\n\t\tthis.pointScale = DEFAULT_SCALE;\n\t\tthis.redraw(true, true);\n\t}\n\n\t// rescale to fit & recentre/with a limit to the size\n\tpublic zoomNormal():void\n\t{\n\t\tthis.layout = null;\n\t\tthis.pointScale = DEFAULT_SCALE;\n\t\tthis.redraw(true, false);\n\t}\n\n\t// select the given component index (programmatically)\n\tpublic selectComponent(idx:number):void\n\t{\n\t\tif (this.selectedIndex == idx) return;\n\t\tthis.selectedIndex = idx;\n\t\tthis.activeIndex = -1;\n\t\tthis.delayedRedraw();\n\t}\n\n\t// convenient overload for selecting whichever numbered component matches the origin sequence\n\tpublic selectOrigin(origin:number[]):void\n\t{\n\t\tlet complist = this.layout.components;\n\t\tfor (let n = 0; n < complist.length; n++) if (Vec.equals(complist[n].origin, origin))\n\t\t{\n\t\t\tthis.selectComponent(n);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// bring up the structure-editing panel, which uses the generic sketching dialog\n\tpublic editStructure():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\n\t\tlet mol = comp.molfile ? MoleculeStream.readUnknown(comp.molfile) : null;\n\n\t\tthis.dlgCompound = new EditCompound(mol ? mol : new Molecule(), this.contentDOM);\n\t\tthis.dlgCompound.onSave(() =>\n\t\t{\n\t\t\tlet mol = this.dlgCompound.getMolecule();\n\t\t\tcomp = deepClone(comp);\n\t\t\tthis.checkStructureIntegrity(comp, mol);\n\n\t\t\tlet molfile = MoleculeStream.writeMDLMOL(mol);\n\t\t\tif (!molfile) molfile = null;\n\n\t\t\tcomp.molfile = molfile;\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tif (modmix.setComponent(origin, comp))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\n\t\t\tthis.dlgCompound.close();\n\t\t});\n\t\tthis.dlgCompound.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.dlgCompound = null;\n\t\t\tthis.refocus();\n\t\t});\n\t\tthis.dlgCompound.defineClipboard(this.proxyClip);\n\t\tthis.dlgCompound.defineContext(this.proxyMenu);\n\t\tthis.isEditing = true;\n\t\tthis.dlgCompound.open();\n\t}\n\n\t// invoke the editor dialog for the current component - basically everything except the structure\n\tpublic editDetails():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\n\t\tlet w = window.innerWidth * 0.8, h = window.innerHeight * 0.8;\n\n\t\tlet dlg = new EditComponent(deepClone(comp), this.inchi, [w, h], this.contentDOM);\n\t\tdlg.proxyClip = this.proxyClip;\n\t\tdlg.onSave(() =>\n\t\t{\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tif (modmix.setComponent(origin, dlg.getComponent()))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.onSketch(() =>\n\t\t{\n\t\t\tthis.selectOrigin(origin);\n\t\t\tthis.editStructure();\n\t\t});\n\t\tdlg.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.refocus();\n\t\t});\n\t\tthis.isEditing = true;\n\t\tdlg.open();\n\t}\n\n\t// lookup: searches for compound information based on name, prespecified or otherwise\n\tpublic lookupCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet comp = this.mixture.getComponent(origin);\n\t\tlet curX = this.contentDOM.width(), curY = this.contentDOM.height();\n\t\tlet dlg = new LookupCompoundDialog(comp.name, [curX, curY]);\n\t\tdlg.onSelect(() =>\n\t\t{\n\t\t\tlet modmix = this.mixture.clone();\n\t\t\tcomp = deepClone(modmix.getComponent(origin));\n\t\t\tlet name = dlg.getName(), mol = dlg.getMolecule();\n\t\t\tif (name != null) comp.name = name;\n\t\t\tif (mol != null) comp.molfile = new MDLMOLWriter(mol).write();\n\t\t\tif (modmix.setComponent(origin, comp))\n\t\t\t{\n\t\t\t\tthis.setMixture(modmix);\n\t\t\t\tthis.selectOrigin(origin);\n\t\t\t}\n\t\t\tdlg.close();\n\t\t});\n\t\tdlg.onClose(() =>\n\t\t{\n\t\t\tthis.isEditing = false;\n\t\t\tthis.refocus();\n\t\t});\n\t\tdlg.open();\n\t}\n\n\t// deletes selected component, if any\n\tpublic deleteCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (origin.length == 0) return;\n\n\t\tlet modmix = this.mixture.clone();\n\t\tmodmix.deleteComponent(origin);\n\t\tthis.delayedSelect = null;\n\t\tthis.setMixture(modmix);\n\n\t\torigin = origin.slice(0);\n\t\tif (modmix.getComponent(origin)) {}\n\t\telse if (Vec.last(origin) > 0) origin[origin.length - 1]--;\n\t\telse origin.pop();\n\t\tthis.selectOrigin(origin);\n\t}\n\n\t// append a new sub-item to the end of the current component's list\n\tpublic appendToCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet comp = modmix.getComponent(origin);\n\t\tif (!comp.contents) comp.contents = [];\n\t\tcomp.contents.push({});\n\t\tthis.delayedSelect = Vec.concat(origin, [comp.contents.length - 1]);\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// inserts an empty component before the current one\n\tpublic prependBeforeCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tlet modmix = this.mixture.clone();\n\t\tmodmix.prependBefore(origin, {});\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// insert above/below the current component\n\tpublic insertBeforeCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (Vec.isBlank(origin)) return;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet pos = origin.pop();\n\t\tlet parent = modmix.getComponent(origin);\n\t\tparent.contents.splice(pos, 0, {});\n\t\torigin.push(pos);\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\tpublic insertAfterCurrent():void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (Vec.isBlank(origin)) return;\n\t\tlet modmix = this.mixture.clone();\n\t\tlet pos = origin.pop();\n\t\tlet parent = modmix.getComponent(origin);\n\t\tparent.contents.splice(pos + 1, 0, {});\n\t\torigin.push(pos + 1);\n\t\tthis.delayedSelect = origin;\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// move the current component up or down the hierarchy\n\tpublic reorderCurrent(dir:number):void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\t\tif (origin.length == 0) return;\n\n\t\tlet modmix = this.mixture.clone();\n\t\tlet [parent, idx] = Mixture.splitOrigin(origin);\n\t\tlet comp = modmix.getComponent(parent);\n\t\tif (idx + dir < 0 || idx + dir >= comp.contents.length) return;\n\t\tVec.swap(comp.contents, idx, idx + dir);\n\t\tthis.delayedSelect = Vec.concat(parent, [idx + dir]);\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// copy current to clipboard, and optionally excise it\n\tpublic clipboardCopy(andCut:boolean, wholeBranch:boolean = false):void\n\t{\n\t\tif (this.selectedIndex < 0) return;\n\t\tlet origin = this.layout.components[this.selectedIndex].origin;\n\n\t\tlet comp = deepClone(this.mixture.getComponent(origin));\n\t\tdelete (comp as any).mixfileVersion;\n\t\tif (!wholeBranch) comp.contents = [];\n\t\tlet str = Mixture.serialiseComponent(comp);\n\n\t\t/*let clipboard = require('electron').clipboard;\n\t\tclipboard.writeText(str);*/\n\t\tthis.proxyClip.setString(str);\n\n\t\tif (origin.length > 0 && andCut) this.deleteCurrent();\n\t}\n\n\t// paste from clipboard, if possible\n\tpublic clipboardPaste():void\n\t{\n\t\t/*let clipboard = require('electron').clipboard;\n\t\tlet str = clipboard.readText();*/\n\t\tlet str = this.proxyClip.getString();\n\n\t\tlet json:any = null;\n\t\ttry {json = JSON.parse(str);}\n\t\tcatch (e) {} // silent failure\n\n\t\tlet origin:number[] = [];\n\t\tif (this.selectedIndex >= 0) origin = this.layout.components[this.selectedIndex].origin;\n\n\t\t// see if it's a Molfile CTAB that has enumeration flags set (stays null if nothing component-ish)\n\t\tif (!json) json = new ExtractCTABComponent(str).extract();\n\n\t\t// see if it's just a regular singular molecule\n\t\tif (!json)\n\t\t{\n\t\t\tlet mol = MoleculeStream.readUnknown(str);\n\t\t\tif (MolUtil.notBlank(mol))\n\t\t\t{\n\t\t\t\tlet modmix = this.mixture.clone();\n\t\t\t\tlet comp = modmix.getComponent(origin);\n\t\t\t\tif (comp)\n\t\t\t\t{\n\t\t\t\t\tcomp.molfile = new MDLMOLWriter(mol).write();\n\t\t\t\t\tthis.setMixture(modmix);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse alert('Clipboard does not contain a mixture component.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!json.name && !json.molfile && !json.quantity && Vec.isBlank(json.contents))\n\t\t{\n\t\t\talert('Clipboard content is either not a component, or has no interesting content.');\n\t\t\treturn;\n\t\t}\n\n\t\t// special deal when pasting into nothing: just replace it\n\t\tif (this.selectedIndex < 0 && this.mixture.isEmpty())\n\t\t{\n\t\t\tlet modmix = new Mixture(json);\n\t\t\tthis.delayedSelect = [];\n\t\t\tthis.setMixture(modmix);\n\t\t\treturn;\n\t\t}\n\n\t\t// append to or replace some piece, preferably selected\n\t\tlet modmix = this.mixture.clone();\n\t\tlet comp = modmix.getComponent(origin);\n\t\tif (Mixture.isComponentEmpty(comp))\n\t\t{\n\t\t\tObject.keys(comp).forEach((key:string) => delete (comp as any)[key]);\n\t\t\tObject.keys(json).forEach((key:string) => (comp as any)[key] = json[key]);\n\t\t\tthis.delayedSelect = origin;\n\t\t}\n\t\telse // append\n\t\t{\n\t\t\tif (!comp.contents) comp.contents = [];\n\t\t\tcomp.contents.push(json);\n\t\t\tthis.delayedSelect = Vec.concat(origin, [comp.contents.length - 1]);\n\t\t}\n\t\tthis.setMixture(modmix);\n\t}\n\n\t// call this anytime the focus could have wandered\n\tpublic refocus():void\n\t{\n\t\tthis.contentDOM.grabFocus();\n\t}\n\n\t// return the layout around onscreen for an indicated component\n\tpublic getComponentPosition(origin:number[]):Box\n\t{\n\t\tfor (let comp of this.layout.components) if (Vec.equals(origin, comp.origin))\n\t\t{\n\t\t\tlet box = comp.boundary.clone();\n\t\t\tbox.x += this.offsetX;\n\t\t\tbox.y += this.offsetY;\n\t\t\treturn box;\n\t\t}\n\t\treturn null;\n\t}\n\n\t// ------------ private methods ------------\n\n\tprotected redraw(rescale = false, fit = false):void\n\t{\n\t\tthis.filthy = false;\n\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height();\n\t\tlet density = pixelDensity();\n\n\t\tfor (let canvas of [this.canvasMixture, this.canvasOver])\n\t\t{\n\t\t\tcanvas.width = width * density;\n\t\t\tcanvas.height = height * density;\n\t\t\tcanvas.style.width = width + 'px';\n\t\t\tcanvas.style.height = height + 'px';\n\t\t}\n\n\t\tif (!this.layout)\n\t\t{\n\t\t\tlet measure = new OutlineMeasurement(0, 0, this.pointScale);\n\t\t\tthis.policy = this.monochrome ? RenderPolicy.defaultBlackOnWhite(this.pointScale) : RenderPolicy.defaultColourOnWhite(this.pointScale);\n\t\t\tthis.layout = new ArrangeMixture(this.mixture, measure, this.policy);\n\t\t\tthis.layout.showCollapsors = true;\n\t\t\tthis.layout.collapsedBranches = this.collapsedBranches;\n\t\t\tthis.layout.packBranches = new Size(0.8 * this.contentDOM.width(), 0.8 * this.contentDOM.height());\n\t\t\tthis.layout.norm = new NormMixture(this.mixture);\n\t\t\tthis.layout.norm.analyse();\n\t\t\tthis.layout.arrange();\n\t\t\tif (rescale) this.scaleToFit(fit);\n\t\t}\n\n\t\tif (this.delayedSelect)\n\t\t{\n\t\t\tfor (let n = 0; n < this.layout.components.length; n++) if (Vec.equals(this.delayedSelect, this.layout.components[n].origin))\n\t\t\t{\n\t\t\t\tthis.selectedIndex = n;\n\t\t\t\tthis.ensureComponentVisible(n);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.delayedSelect = null;\n\t\t}\n\n\t\tlet gfx = new MetaVector();\n\t\tlet draw = new DrawMixture(this.layout, gfx);\n\t\tdraw.hoverIndex = this.hoverIndex;\n\t\tdraw.activeIndex = this.activeIndex;\n\t\tdraw.selectedIndex = this.selectedIndex;\n\t\tdraw.draw();\n\n\t\tgfx.offsetX = this.offsetX;\n\t\tgfx.offsetY = this.offsetY;\n\t\tgfx.setSize(width, height);\n\t\tgfx.renderCanvas(this.canvasMixture, true);\n\t}\n\n\t// assuming that layout is already defined, modifies the offset/scale so that\n\tprotected scaleToFit(mustFit:boolean):void\n\t{\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height(), pad = 4;\n\t\tif (mustFit)\n\t\t{\n\t\t\tif (this.layout.width > width - pad || this.layout.height > height - pad)\n\t\t\t{\n\t\t\t\tlet scale = Math.min((width - pad) / this.layout.width, (height - pad) / this.layout.height);\n\t\t\t\tthis.pointScale *= scale;\n\t\t\t\tthis.layout.scaleComponents(scale);\n\t\t\t}\n\t\t\tthis.offsetX = 0.5 * (width - this.layout.width);\n\t\t\tthis.offsetY = 0.5 * (height - this.layout.height);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.offsetX = Math.max(pad, 0.5 * (width - this.layout.width));\n\t\t\tthis.offsetY = 0.5 * (height - this.layout.height);\n\t\t}\n\t}\n\n\t// make sure the indicated component is fully visible onscreen\n\tprivate ensureComponentVisible(idx:number):void\n\t{\n\t\tlet width = this.contentDOM.width(), height = this.contentDOM.height(), pad = 4;\n\t\tlet comp = this.layout.components[idx];\n\t\tlet box = comp.boundary.withOffsetBy(this.offsetX, this.offsetY);\n\n\t\tif (box.minX() < pad) this.offsetX -= box.minX() - pad;\n\t\telse if (box.maxX() > width - pad) this.offsetX += width - pad - box.maxX();\n\n\t\tif (box.minY() < pad) this.offsetY -= box.minY() - pad;\n\t\telse if (box.maxY() > height - pad) this.offsetY += height - pad - box.maxY();\n\t}\n\n\t// mouse has moved: see if we need to update the hover\n\tprotected updateHoverCursor(event:MouseEvent):void\n\t{\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.activeIndex >= 0 ? -1 : this.pickComponent(x, y);\n\t\tif (idx != this.hoverIndex)\n\t\t{\n\t\t\tthis.hoverIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// finds the index of a component at a given position, or -1 if none\n\tprotected pickComponent(x:number, y:number):number\n\t{\n\t\tlet pick = this.pickComponentSection(x, y);\n\t\treturn pick == null || pick[1] ? -1 : pick[0];\n\t}\n\n\t// more detailed pick: nothing = null, something = [compidx, collapsebox]\n\tprotected pickComponentSection(x:number, y:number):[number, boolean]\n\t{\n\t\tif (!this.layout) return null;\n\t\tfor (let n = 0; n < this.layout.components.length; n++)\n\t\t{\n\t\t\tlet comp = this.layout.components[n];\n\t\t\tlet ux = x - this.offsetX - comp.boundary.x, uy = y - this.offsetY - comp.boundary.y;\n\t\t\tif (comp.outline.contains(ux, uy)) return [n, false];\n\t\t\tif (comp.collapseBox && comp.collapseBox.contains(ux, uy)) return [n, true];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// cursor key wandering\n\tprotected navigateDirection(dir:string):void\n\t{\n\t\tlet newIndex = -1;\n\t\tif (this.selectedIndex < 0) newIndex = 0;\n\t\telse\n\t\t{\n\t\t\tlet origin = this.layout.components[this.selectedIndex].origin.slice(0);\n\n\t\t\tif (dir == 'tab')\n\t\t\t{\n\t\t\t\tif (Vec.isBlank(origin))\n\t\t\t\t{\n\t\t\t\t\tlet comp = this.mixture.getComponent(origin);\n\t\t\t\t\tif (Vec.isBlank(comp.contents))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.delayedSelect = [0];\n\t\t\t\t\t\tthis.appendToCurrent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdir = 'right';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet parent = this.mixture.getComponent(origin.slice(0, origin.length - 1)), pos = Vec.last(origin);\n\t\t\t\t\tif (pos == parent.contents.length - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.insertAfterCurrent();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdir = 'down';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dir == 'left')\n\t\t\t{\n\t\t\t\tif (origin.length == 0) return;\n\t\t\t\torigin.pop();\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'right')\n\t\t\t{\n\t\t\t\torigin.push(0);\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'up')\n\t\t\t{\n\t\t\t\tif (origin.length == 0 || origin[origin.length - 1] == 0) return;\n\t\t\t\torigin[origin.length - 1]--;\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t\telse if (dir == 'down')\n\t\t\t{\n\t\t\t\tif (origin.length == 0) return;\n\t\t\t\torigin[origin.length - 1]++;\n\t\t\t\tnewIndex = this.layout.findComponent(origin);\n\t\t\t}\n\t\t}\n\n\t\tif (newIndex >= 0 && newIndex < this.layout.components.length)\n\t\t{\n\t\t\tthis.delayedSelect = this.layout.components[newIndex].origin;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\n\t// collapses or un-collapses the indicated position\n\tprotected toggleCollapsed(idx:number):void\n\t{\n\t\tlet origin = this.layout.components[idx].origin;\n\t\tlet got = false;\n\t\tfor (let n = 0; n < this.collapsedBranches.length; n++) if (Vec.equals(origin, this.collapsedBranches[n]))\n\t\t{\n\t\t\tthis.collapsedBranches.splice(n, 1);\n\t\t\tgot = true;\n\t\t\tbreak;\n\t\t}\n\t\tif (!got) this.collapsedBranches.push(origin);\n\t\tthis.layout = null;\n\t\tthis.redraw();\n\t}\n\n\t// interactivity\n\tprotected mouseClick(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet picked = this.pickComponentSection(x, y);\n\t\tif (picked && picked[1]) this.toggleCollapsed(picked[0]);\n\t}\n\tprotected mouseDoubleClick(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tevent.stopImmediatePropagation();\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tthis.hoverIndex = -1;\n\t\t\tthis.activeIndex = -1;\n\t\t\tthis.selectedIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t\tthis.editDetails();\n\t\t}\n\t}\n\tprotected mouseDown(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\t\t//event.preventDefault();\n\n\t\tif (event.which != 1) return;\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\t//this.contextMenu(event);\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\n\t\tthis.dragReason = DragReason.Any;\n\t\tthis.dragIndex = idx;\n\t\tthis.dragX = x;\n\t\tthis.dragY = y;\n\n\t\tif (idx != this.activeIndex)\n\t\t{\n\t\t\tthis.activeIndex = idx;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\t}\n\tprotected mouseUp(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (event.ctrlKey)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.dragReason != DragReason.Pan)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\t\tlet idx = this.pickComponent(x, y);\n\t\t\tif (idx == this.activeIndex) this.selectedIndex = idx;\n\t\t\tthis.activeIndex = -1;\n\t\t\tthis.delayedRedraw();\n\t\t}\n\n\t\tthis.dragReason = DragReason.None;\n\t}\n\tprotected mouseOver(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\t}\n\tprotected mouseOut(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\t\tthis.dragReason = DragReason.None;\n\t}\n\tprotected mouseMove(event:MouseEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tthis.updateHoverCursor(event);\n\n\t\tif (this.dragReason == DragReason.Any && this.dragIndex < 0)\n\t\t{\n\t\t\tthis.dragReason = DragReason.Pan;\n\t\t}\n\n\t\tif (this.dragReason == DragReason.Pan)\n\t\t{\n\t\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\t\tlet dx = x - this.dragX, dy = y - this.dragY;\n\t\t\tif (dx != 0 && dy != 0)\n\t\t\t{\n\t\t\t\tthis.offsetX += dx;\n\t\t\t\tthis.offsetY += dy;\n\t\t\t\tthis.delayedRedraw();\n\t\t\t\t[this.dragX, this.dragY] = [x, y];\n\t\t\t}\n\t\t}\n\t}\n\tprotected keyPressed(event:KeyboardEvent):void\n\t{\n\t\t//let ch = String.fromCharCode(event.keyCode || event.charCode);\n\t\t//console.log('PRESSED['+ch+'] key='+event.keyCode+' chcode='+event.charCode);\n\t}\n\tprotected keyDown(event:KeyboardEvent):void\n\t{\n\t\tif (this.isEditing) return;\n\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tif (!this.isReceivingCommands()) return;\n\n\t\tlet key = event.key;\n\t\t//console.log('DOWN: key='+key);\n\n\t\tif (!event.shiftKey && !event.ctrlKey && !event.altKey && !event.metaKey)\n\t\t{\n\t\t\tif (key == 'Enter')\n\t\t\t{\n\t\t\t\tif (this.selectedIndex >= 0) this.editDetails();\n\t\t\t}\n\t\t\telse if (key == 'Escape') {} // escape\n\t\t\telse if (key == 'ArrowLeft') this.navigateDirection('left');\n\t\t\telse if (key == 'ArrowRight') this.navigateDirection('right');\n\t\t\telse if (key == 'ArrowUp') this.navigateDirection('up');\n\t\t\telse if (key == 'ArrowDown') this.navigateDirection('down');\n\t\t\telse if (key == 'Tab') this.navigateDirection('tab');\n\t\t\telse return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\tprotected keyUp(event:KeyboardEvent):void\n\t{\n\t\t// !!\n\t}\n\tprotected mouseWheel(event:WheelEvent):void\n\t{\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet delta = Math.abs(event.deltaX) > Math.abs(event.deltaY) ? event.deltaX : event.deltaY;\n\t\tlet scale = 1 + Math.abs(delta) * 0.05;\n\t\tif (delta < 0) scale = 1.0 / scale;\n\n\t\tlet newScale = this.pointScale * scale;\n\t\tthis.offsetX = x - (newScale / this.pointScale) * (x - this.offsetX);\n\t\tthis.offsetY = y - (newScale / this.pointScale) * (y - this.offsetY);\n\t\t//if (this.layout) this.layout.scaleComponents(newScale / this.pointScale);\n\t\tthis.pointScale = newScale;\n\n\t\tthis.layout = null;\n\t\tthis.delayedRedraw();\n\t\tevent.preventDefault();\n\t}\n\tprotected contextMenu(event:MouseEvent):void\n\t{\n\t\t// nop\n\t}\n\n\t// given that the structure may have changed, see if any metadata is potentially invalidated - and ask the user; the component parameter\n\t// may be modified\n\tprotected checkStructureIntegrity(comp:MixfileComponent, newMol:Molecule):void\n\t{\n\t\tlet integKeys = Object.keys(this.structureIntegrity).filter((key) => (comp.identifiers && comp.identifiers[key]) || (comp.links && comp.links[key]));\n\t\tif (integKeys.length == 0) return;\n\n\t\tlet oldMol = comp.molfile ? MoleculeStream.readUnknown(comp.molfile) : null;\n\t\tif (MolUtil.isBlank(oldMol) && MolUtil.isBlank(newMol)) return;\n\t\tif (oldMol && newMol && CoordUtil.sketchMappable(oldMol, newMol)) return;\n\n\t\tlet msg = MolUtil.isBlank(newMol) ? 'Structure has been removed.' : 'Structure has changed.';\n\t\tmsg += `\\nThe following reference${integKeys.length == 1 ? '' : 's'} may have become stale:`;\n\t\tfor (let key of integKeys) msg += '\\n    ' + this.structureIntegrity[key];\n\t\tmsg += integKeys.length == 1 ? '\\nRemove this reference?' : '\\nRemove these references?';\n\t\tif (!confirm(msg)) return;\n\n\t\tfor (let key of integKeys)\n\t\t{\n\t\t\tif (comp.identifiers) delete comp.identifiers[key];\n\t\t\tif (comp.links) delete comp.links[key];\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {eventCoords} from 'webmolkit/util/util';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {Menu as ElectronMenu, MenuItem as ElectronMenuItem, getCurrentWindow} from '@electron/remote';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {EditMixture} from '../web/EditMixture';\n\n/*\n\tSpecialisation of the EditMixture class that tasks advantage of desktop (Electron) capabilities.\n*/\n\nexport class EditMixtureDesktop extends EditMixture\n{\n\tconstructor(inchi:InChIDelegate, proxyClip:ClipboardProxy, proxyMenu:MenuProxy)\n\t{\n\t\tsuper(inchi, proxyClip, proxyMenu);\n\t}\n\n\tprotected contextMenu(event:MouseEvent):void\n\t{\n\t\tif (this.callbackInteraction) this.callbackInteraction();\n\n\t\tevent.preventDefault();\n\t\tif (!this.isReceivingCommands()) return;\n\n\t\tlet [x, y] = eventCoords(event, this.contentDOM);\n\t\tlet idx = this.pickComponent(x, y);\n\n\t\tthis.selectedIndex = idx;\n\t\tthis.activeIndex = -1;\n\t\tthis.delayedRedraw();\n\n\t\tlet menu = new ElectronMenu();\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tlet comp = this.layout.components[idx].content, origin = this.layout.components[idx].origin;\n\t\t\tlet sel = ():void => this.selectComponent(idx);\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Edit Structure', click: () => {sel(); this.editStructure();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Edit Details', click: () => {sel(); this.editDetails();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Lookup Name', click: () => {sel(); this.lookupCurrent();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Append', click: () => {sel(); this.appendToCurrent();}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Prepend', click: () => {sel(); this.prependBeforeCurrent();}}));\n\t\t\tif (origin.length > 0)\n\t\t\t{\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Insert Before', click: () => {sel(); this.insertBeforeCurrent();}}));\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Insert After', click: () => {sel(); this.insertAfterCurrent();}}));\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Delete', click: () => {this.selectComponent(idx); this.deleteCurrent();}}));\n\n\t\t\t\tif (origin[origin.length - 1] > 0)\n\t\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Move Up', click: () => {sel(); this.reorderCurrent(-1);}}));\n\t\t\t\tif (origin[origin.length - 1] < Vec.arrayLength(this.mixture.getParentComponent(origin).contents) - 1)\n\t\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Move Down', click: () => {sel(); this.reorderCurrent(1);}}));\n\t\t\t}\n\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Copy', click: () => {sel(); this.clipboardCopy(false);}}));\n\t\t\tif (Vec.arrayLength(comp.contents) > 0)\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Copy Branch', click: () => {sel(); this.clipboardCopy(false, true);}}));\n\t\t\tif (origin.length > 0)\n\t\t\t\tmenu.append(new ElectronMenuItem({label: 'Cut', click: () => {sel(); this.clipboardCopy(true);}}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Paste', click: () => {sel(); this.clipboardPaste();}}));\n\n\t\t\tif (Vec.notBlank(comp.contents))\n\t\t\t{\n\t\t\t\tlet label = this.layout.components[idx].isCollapsed ? 'Expand Branch' : 'Collapse Branch';\n\t\t\t\tmenu.append(new ElectronMenuItem({label: label, click: () => this.toggleCollapsed(idx)}));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Zoom In', click: () => this.zoom(1.25)}));\n\t\t\tmenu.append(new ElectronMenuItem({label: 'Zoom Out', click: () => this.zoom(0.8)}));\n\t\t}\n\n\t\tmenu.popup({window: getCurrentWindow()});\n\t}\n\n}\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {MainPanel} from './MainPanel';\nimport {MenuBanner, MenuBannerButton, MenuBannerCommand} from '../web/MenuBanner';\nimport {ClipboardProxy, ClipboardProxyHandler} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {ExportSDFile} from '../mixture/ExportSDFile';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {Size} from 'webmolkit/util/Geom';\nimport {MetaVector} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {ExportMInChI, MInChISegment} from '../mixture/ExportMInChI';\nimport {Dialog} from 'webmolkit/dialog/Dialog';\nimport {yieldDOM} from 'webmolkit/util/util';\nimport {Dialog as ElectronDialog, OpenDialogOptions, SaveDialogOptions, clipboard as electronClipboard, ipcRenderer} from 'electron';\nimport {dialog as electronDialog, getCurrentWindow} from '@electron/remote';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {Mixture} from '../mixture/Mixture';\nimport {MIXFILE_VERSION} from '../mixture/Mixfile';\nimport {openNewWindow} from './startup';\nimport {InChI} from '../nodejs/InChI';\nimport {InChIDelegate} from '../mixture/InChIDelegate';\nimport {EditMixtureDesktop} from './EditMixtureDesktop';\n\n/*\n\tViewing/editing window: dedicated entirely to the sketching of a mixture.\n*/\n\nconst BANNER:MenuBannerButton[][] =\n[\n\t[\n\t\t{icon: 'CommandSave.svg', tip: 'Save', cmd: MenuBannerCommand.Save},\n\t],\n\t[\n\t\t{icon: 'CommandEdit.svg', tip: 'Edit component', cmd: MenuBannerCommand.EditDetails},\n\t\t{icon: 'CommandStructure.svg', tip: 'Edit structure', cmd: MenuBannerCommand.EditStructure},\n\t\t{icon: 'CommandLookup.svg', tip: 'Lookup compound', cmd: MenuBannerCommand.Lookup},\n\t\t{icon: 'CommandPicture.svg', tip: 'Export graphics', cmd: MenuBannerCommand.ExportSVG},\n\t],\n\t[\n\t\t{icon: 'CommandAppend.svg', tip: 'Append component to the right', cmd: MenuBannerCommand.Append},\n\t\t{icon: 'CommandPrepend.svg', tip: 'Prepend component to the left', cmd: MenuBannerCommand.Prepend},\n\t\t{icon: 'CommandInsertBefore.svg', tip: 'Insert component above', cmd: MenuBannerCommand.InsertBefore},\n\t\t{icon: 'CommandInsertAfter.svg', tip: 'Append component below', cmd: MenuBannerCommand.InsertAfter},\n\t\t{icon: 'CommandDelete.svg', tip: 'Delete', cmd: MenuBannerCommand.Delete},\n\t\t{icon: 'CommandMoveUp.svg', tip: 'Move Up', cmd: MenuBannerCommand.MoveUp},\n\t\t{icon: 'CommandMoveDown.svg', tip: 'Move Down', cmd: MenuBannerCommand.MoveDown},\n\t],\n\t[\n\t\t{icon: 'CommandUndo.svg', tip: 'Undo', cmd: MenuBannerCommand.Undo},\n\t\t{icon: 'CommandRedo.svg', tip: 'Redo', cmd: MenuBannerCommand.Redo},\n\t],\n\t[\n\t\t{icon: 'CommandCopy.svg', tip: 'Copy', cmd: MenuBannerCommand.Copy},\n\t\t{icon: 'CommandCut.svg', tip: 'Cut', cmd: MenuBannerCommand.Cut},\n\t\t{icon: 'CommandPaste.svg', tip: 'Paste', cmd: MenuBannerCommand.Paste},\n\t],\n\t[\n\t\t{icon: 'CommandZoomNormal.svg', tip: 'Zoom full', cmd: MenuBannerCommand.ZoomFull},\n\t\t{icon: 'CommandZoomIn.svg', tip: 'Zoom in', cmd: MenuBannerCommand.ZoomIn},\n\t\t{icon: 'CommandZoomOut.svg', tip: 'Zoom out', cmd: MenuBannerCommand.ZoomOut},\n\t],\n];\n\nexport class MixturePanel extends MainPanel\n{\n\tprivate filename:string = null;\n\tprivate banner:MenuBanner;\n\tprivate editor:EditMixtureDesktop;\n\n\t// ------------ public methods ------------\n\n\tconstructor(root:DOM, private proxyClip:ClipboardProxy, private proxyMenu:MenuProxy)\n\t{\n\t\tsuper(root);\n\n\t\tthis.banner = new MenuBanner(BANNER, (cmd:MenuBannerCommand) => this.menuAction(cmd));\n\n\t\tthis.editor = new EditMixtureDesktop(this.inchi, this.proxyClip, this.proxyMenu);\n\t\tthis.editor.callbackUpdateTitle = () => this.updateTitle();\n\n\t\tlet divFlex = dom('<div/>').appendTo(root).css({'display': 'flex'});\n\t\tdivFlex.css({'flex-direction': 'column', 'width': '100%', 'height': '100%'});\n\t\tlet divBanner = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\t\tlet divEditor = dom('<div/>').appendTo(divFlex).css({'flex-grow': '1'});\n\n\t\tthis.banner.render(divBanner);\n\t\tthis.editor.render(divEditor);\n\n\t\tthis.banner.callbackRefocus = () => this.editor.refocus();\n\t}\n\n\tpublic setMixture(mixture:Mixture):void\n\t{\n\t\tthis.editor.clearHistory();\n\t\tthis.editor.setMixture(mixture, true, false);\n\t\tthis.editor.setDirty(false);\n\t}\n\n\tpublic loadFile(filename:string):void\n\t{\n\t\tif (!filename)\n\t\t{\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(new Mixture(), true, true);\n\t\t\tthis.updateTitle();\n\t\t\tthis.filename = null;\n\t\t\treturn;\n\t\t}\n\n\t\tfs.readFile(filename, 'utf-8', (err:any, data:string):void =>\n\t\t{\n\t\t\tif (err) throw err;\n\n\t\t\tlet mixture:Mixture;\n\t\t\ttry {mixture = Mixture.deserialise(data);}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tconsole.log('Invalid mixture file: ' + e + '\\n' + data);\n\t\t\t\talert('Not a valid mixture file.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmixture.mixfile.mixfileVersion = MIXFILE_VERSION; // as good a time as any to set latest version\n\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(mixture, true, false);\n\t\t\tthis.editor.setDirty(false);\n\t\t\tthis.filename = filename;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic saveFile(filename:string):void\n\t{\n\t\tlet mixture = this.editor.getMixture();\n\t\tlet content = mixture.serialise();\n\n\t\tfs.writeFile(filename, content, (err:any):void =>\n\t\t{\n\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t});\n\t}\n\n\tprotected onResize():void\n\t{\n\t\tsuper.onResize();\n\t\tthis.editor.delayedRedraw();\n\n\t\t//let w = document.documentElement.clientWidth, h = document.documentElement.clientHeight;\n\t\t//this.sketcher.changeSize(w, h); // force a re-layout to match the new size\n\t}\n\n\tpublic menuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tlet dlg = this.editor.compoundEditor();\n\t\tif (dlg)\n\t\t{\n\t\t\tif (cmd == MenuBannerCommand.Cut) dlg.actionCut();\n\t\t\telse if (cmd == MenuBannerCommand.Copy) dlg.actionCopy();\n\t\t\telse if (cmd == MenuBannerCommand.Paste) dlg.actionPaste();\n\t\t\telse if (cmd == MenuBannerCommand.Undo) dlg.actionUndo();\n\t\t\telse if (cmd == MenuBannerCommand.Redo) dlg.actionRedo();\n\t\t\treturn;\n\t\t}\n\t\tif (!this.editor.isReceivingCommands())\n\t\t{\n\t\t\t// certain common menu/shortcut commands are passed through to standard behaviour, the rest are stopped\n\t\t\tif ([MenuBannerCommand.Cut, MenuBannerCommand.Copy, MenuBannerCommand.Paste,\n\t\t\t\t MenuBannerCommand.Undo, MenuBannerCommand.Redo].indexOf(cmd) >= 0) document.execCommand(cmd);\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.menuAction(cmd);\n\t}\n\n\tpublic customMenuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\telse if (cmd == MenuBannerCommand.Undo) this.editor.performUndo();\n\t\telse if (cmd == MenuBannerCommand.Redo) this.editor.performRedo();\n\t\telse if (cmd == MenuBannerCommand.Cut) this.editor.clipboardCopy(true);\n\t\telse if (cmd == MenuBannerCommand.Copy) this.editor.clipboardCopy(false);\n\t\telse if (cmd == MenuBannerCommand.CopyBranch) this.editor.clipboardCopy(false, true);\n\t\telse if (cmd == MenuBannerCommand.Paste) this.editor.clipboardPaste();\n\t\telse if (cmd == MenuBannerCommand.EditStructure) this.editor.editStructure();\n\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editor.editDetails();\n\t\telse if (cmd == MenuBannerCommand.Lookup) this.editor.lookupCurrent();\n\t\telse if (cmd == MenuBannerCommand.Delete) this.editor.deleteCurrent();\n\t\telse if (cmd == MenuBannerCommand.Append) this.editor.appendToCurrent();\n\t\telse if (cmd == MenuBannerCommand.Prepend) this.editor.prependBeforeCurrent();\n\t\telse if (cmd == MenuBannerCommand.InsertBefore) this.editor.insertBeforeCurrent();\n\t\telse if (cmd == MenuBannerCommand.InsertAfter) this.editor.insertAfterCurrent();\n\t\telse if (cmd == MenuBannerCommand.MoveUp) this.editor.reorderCurrent(-1);\n\t\telse if (cmd == MenuBannerCommand.MoveDown) this.editor.reorderCurrent(1);\n\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.editor.zoomFull();\n\t\telse if (cmd == MenuBannerCommand.ZoomNormal) this.editor.zoomNormal();\n\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.editor.zoom(1.25);\n\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.editor.zoom(0.8);\n\t\telse super.customMenuAction(cmd);\n\t}\n\n\t// ------------ private methods ------------\n\n\tprotected actionFileOpen():void\n\t{\n\t\tlet filedir = this.filename && this.filename.indexOf(path.sep) ? this.filename.substring(0, this.filename.lastIndexOf(path.sep)) : undefined;\n\t\tlet params:OpenDialogOptions =\n\t\t{\n\t\t\ttitle: 'Open Mixture',\n\t\t\tproperties: ['openFile'],\n\t\t\tdefaultPath: filedir,\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile', extensions: ['mixfile']},\n\t\t\t\t{name: 'Mixfile Collection', extensions: ['json']},\n\t\t\t]\n\t\t};\n\t\telectronDialog.showOpenDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tlet inPlace = this.editor.getMixture().isEmpty();\n\t\t\tfor (let fn of value.filePaths)\n\t\t\t{\n\t\t\t\tif (inPlace && fn.endsWith('.mixfile'))\n\t\t\t\t{\n\t\t\t\t\tthis.loadFile(fn);\n\t\t\t\t\tinPlace = false;\n\t\t\t\t}\n\t\t\t\telse if (fn.endsWith('.json'))\n\t\t\t\t\topenNewWindow('CollectionPanel', fn);\n\t\t\t\telse\n\t\t\t\t\topenNewWindow('MixturePanel', fn);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected actionFileSave():void\n\t{\n\t\tif (this.editor.isBlank()) return;\n\t\tif (!this.filename) {this.actionFileSaveAs(); return;}\n\n\t\tthis.saveFile(this.filename);\n\t\tthis.editor.setDirty(false);\n\t\tthis.updateTitle();\n\t}\n\n\tprotected actionFileSaveAs():void\n\t{\n\t\tif (this.editor.isBlank()) return;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Save Mixfile',\n\t\t\t//defaultPath...\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile', extensions: ['mixfile']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tthis.saveFile(value.filePath);\n\t\t\tthis.filename = value.filePath;\n\t\t\tthis.editor.setDirty(false);\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tprivate actionExportSDF():void\n\t{\n\t\tlet mixture = this.editor.getMixture();\n\t\tif (mixture.isEmpty()) return;\n\n\t\tlet exportSDF = new ExportSDFile();\n\t\texportSDF.append(mixture.mixfile);\n\t\tlet sdfile = exportSDF.write();\n\n\t\tlet defPath = this.filename;\n\t\tif (defPath)\n\t\t{\n\t\t\tlet lastDot = defPath.lastIndexOf('.');\n\t\t\tif (lastDot > 0 && lastDot > defPath.lastIndexOf('/') && lastDot > defPath.lastIndexOf('\\\\')) defPath = defPath.substring(0, lastDot);\n\t\t\tdefPath += '.sdf';\n\t\t}\n\t\telse defPath = undefined;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Export as SDfile',\n\t\t\tdefaultPath: defPath,\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'SDfile', extensions: ['sdf']}\n\t\t\t]\n\t\t};\n\t\tif (this.filename && this.filename.endsWith('.mixfile'))\n\t\t\tparams.defaultPath = (this.filename.substring(0, this.filename.length - 8) + '.sdf').split(/[\\/\\\\]/).pop();\n\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tfs.writeFile(value.filePath, sdfile, (err:any):void =>\n\t\t\t{\n\t\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate actionFileExportSVG():void\n\t{\n\t\tlet defPath = this.filename;\n\t\tif (defPath)\n\t\t{\n\t\t\tlet lastDot = defPath.lastIndexOf('.');\n\t\t\tif (lastDot > 0 && lastDot > defPath.lastIndexOf('/') && lastDot > defPath.lastIndexOf('\\\\')) defPath = defPath.substring(0, lastDot);\n\t\t\tdefPath += '.svg';\n\t\t}\n\t\telse defPath = undefined;\n\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\t'title': 'Save SVG Diagram',\n\t\t\t'defaultPath': defPath,\n\t\t\t'filters':\n\t\t\t[\n\t\t\t\t{'name': 'Scalable Vector Graphics', 'extensions': ['svg']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tlet policy = RenderPolicy.defaultColourOnWhite();\n\t\t\tlet measure = new OutlineMeasurement(0, 0, policy.data.pointScale);\n\t\t\tlet layout = new ArrangeMixture(this.editor.getMixture(), measure, policy);\n\t\t\tlayout.collapsedBranches = this.editor.getCollapsedBranches();\n\t\t\t// TODO: decide whether to pack the branches...\n\t\t\tlayout.packBranches = new Size(0.8 * this.editor.contentDOM.width(), 0.8 * this.editor.contentDOM.height());\n\t\t\tlayout.arrange();\n\n\t\t\tlet gfx = new MetaVector();\n\t\t\tnew DrawMixture(layout, gfx).draw();\n\t\t\tgfx.normalise();\n\t\t\tlet svg = gfx.createSVG(true, true);\n\n\t\t\tfs.writeFile(value.filePath, svg, (err:any):void =>\n\t\t\t{\n\t\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate actionFileCreateMInChI():void\n\t{\n\t\tif (!InChI.isAvailable())\n\t\t{\n\t\t\talert('InChI executable has not been configured. Specify with --inchi parameter.');\n\t\t\treturn;\n\t\t}\n\n\t\tlet maker = new ExportMInChI(this.editor.getMixture().mixfile, this.inchi);\n\t\tlet self = this;\n\t\tclass MInChIDialog extends Dialog\n\t\t{\n\t\t\tconstructor()\n\t\t\t{\n\t\t\t\tsuper();\n\t\t\t\tthis.title = 'MInChI';\n\t\t\t}\n\t\t\tprotected populate():void\n\t\t\t{\n\t\t\t\tself.proxyClip.pushHandler(new ClipboardProxyHandler());\n\t\t\t\tthis.bodyDOM().setText('Calculating...');\n\t\t\t\t(async () => await this.renderResult())();\n\t\t\t}\n\t\t\tpublic close():void\n\t\t\t{\n\t\t\t\tself.proxyClip.popHandler();\n\t\t\t\tsuper.close();\n\t\t\t}\n\t\t\tprivate async renderResult():Promise<void>\n\t\t\t{\n\t\t\t\tawait yieldDOM();\n\t\t\t\tawait maker.fillInChI();\n\t\t\t\tmaker.formulate();\n\n\t\t\t\tlet body = this.bodyDOM();\n\t\t\t\tbody.empty();\n\n\t\t\t\tlet divOuter = dom('<div/>').appendTo(body);\n\t\t\t\tlet pre = dom('<span/>').appendTo(divOuter).css({'font-family': 'monospace', 'padding-top': '0.5em', 'word-break': 'break-all'});\n\t\t\t\tlet minchi = maker.getResult(), segment = maker.getSegment();\n\t\t\t\tfor (let n = 0; n < minchi.length; n++)\n\t\t\t\t{\n\t\t\t\t\tlet span = dom('<span/>').appendTo(pre);\n\t\t\t\t\tspan.setText(minchi[n]);\n\t\t\t\t\tif (segment[n] == MInChISegment.Header) span.setCSS('background-color', '#FFC0C0');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Component) span.setCSS('background-color', '#C0C0FF');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Hierarchy) span.setCSS('background-color', '#E0E080');\n\t\t\t\t\telse if (segment[n] == MInChISegment.Concentration) span.setCSS('background-color', '#80E080');\n\t\t\t\t\tpre.appendHTML('<wbr/>');\n\t\t\t\t}\n\n\t\t\t\tlet btnCopy = dom('<button class=\"wmk-button wmk-button-small wmk-button-default\">Copy</button>').appendTo(divOuter).css({'margin-left': '0.5em'});\n\t\t\t\tbtnCopy.onClick(() => self.proxyClip.setString(minchi));\n\t\t\t}\n\t\t}\n\t\tnew MInChIDialog().open();\n\t}\n\n\tprivate updateTitle():void\n\t{\n\t\tif (this.filename == null) {document.title = 'Mixtures'; return;}\n\n\t\tlet slash = Math.max(this.filename.lastIndexOf('/'), this.filename.lastIndexOf('\\\\'));\n\t\tlet title = 'Mixtures - ' + this.filename.substring(slash + 1);\n\t\tif (this.editor.isDirty() && !this.editor.isBlank()) title += '*';\n\t\tdocument.title = title;\n\t}\n}\n\n","import { dom } from '../util/dom';\nimport { eventCoords, setBoundaryPixels } from '../util/util';\nimport { Popup } from './Popup';\nexport class MenuProxy {\n    hasContextMenu() { return false; }\n    openContextMenu(menuItems, event, opt) { }\n}\nexport class MenuProxyWeb extends MenuProxy {\n    hasContextMenu() { return true; }\n    openContextMenu(menuItems, event, opt) {\n        let [x, y] = eventCoords(event, document.body);\n        let divCursor = dom('<div/>').appendTo(document.body).css({ 'position': 'absolute', 'user-select': 'none' });\n        setBoundaryPixels(divCursor, x - 5, y - 5, 10, 10);\n        let currentFocus = dom(document.activeElement);\n        let popup = new Popup(divCursor);\n        if ((opt === null || opt === void 0 ? void 0 : opt.overrideObscureOpacity) != null)\n            popup.obscureOpacity = opt === null || opt === void 0 ? void 0 : opt.overrideObscureOpacity;\n        popup.callbackPopulate = () => {\n            popup.bodyDOM().css({ 'user-select': 'none', 'font-size': '16px' });\n            for (let menuItem of menuItems) {\n                let div = dom('<div/>').appendTo(popup.bodyDOM());\n                if (menuItem == null) {\n                    div.appendHTML('<hr/>');\n                }\n                else if (menuItem.subMenu) {\n                    div.setText(menuItem.label + ' \\u{25B8}');\n                    div.css({ 'cursor': 'pointer' });\n                    let fcn = (event) => {\n                        event.preventDefault();\n                        popup.close();\n                        this.openContextMenu(menuItem.subMenu, event);\n                    };\n                    div.onClick(fcn);\n                    div.onContextMenu(fcn);\n                }\n                else if (menuItem.click) {\n                    div.setText(menuItem.label);\n                    div.onMouseEnter(() => { div.css({ 'background-color': '#D0D0D0' }); });\n                    div.onMouseLeave(() => { div.css({ 'background-color': 'transparent' }); });\n                    div.css({ 'cursor': 'pointer' });\n                    div.onClick(() => {\n                        popup.close();\n                        menuItem.click();\n                    });\n                }\n                else {\n                    div.css({ 'color': '#808080' });\n                    div.setText(menuItem.label);\n                }\n            }\n        };\n        popup.callbackClose = () => {\n            divCursor.remove();\n            currentFocus.grabFocus();\n            if (opt === null || opt === void 0 ? void 0 : opt.callbackClose)\n                opt === null || opt === void 0 ? void 0 : opt.callbackClose();\n        };\n        popup.open();\n    }\n}\n//# sourceMappingURL=MenuProxy.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"process\");","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {Mixfile} from './Mixfile';\nimport {Mixture} from './Mixture';\n\n/*\n\tCollection of mixtures: convenience methods for handling an array thereof, including serialisation.\n\n\tMost of the methods that fetch or modify the mixture content one item at a time make deep clones, so it is safe to\n\tassume that there are no dangling pointers. Exceptions include the constructor, bulk modifications, and methods marked\n\tas providing direct access.\n*/\n\nexport class MixtureCollection\n{\n\tprivate mixtures:Mixture[] = [];\n\n\t// ------------ public methods ------------\n\n\tconstructor(mixtures?:Mixture[])\n\t{\n\t\tif (mixtures) this.mixtures = mixtures.slice(0);\n\t}\n\n\tpublic get count():number\n\t{\n\t\treturn this.mixtures.length;\n\t}\n\tpublic getMixture(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx].clone();\n\t}\n\tpublic getMixtureDirect(idx:number):Mixture\n\t{\n\t\treturn this.mixtures[idx];\n\t}\n\tpublic setMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture.clone();\n\t}\n\tpublic setMixtureDirect(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures[idx] = mixture;\n\t}\n\tpublic deleteMixture(idx:number):void\n\t{\n\t\tthis.mixtures.splice(idx, 1);\n\t}\n\tpublic appendMixture(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture.clone());\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendMixtureDirect(mixture:Mixture):number\n\t{\n\t\tthis.mixtures.push(mixture);\n\t\treturn this.mixtures.length - 1;\n\t}\n\tpublic appendCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.mixtures = this.mixtures.concat(collection.mixtures);\n\t}\n\tpublic insertMixture(idx:number, mixture:Mixture):void\n\t{\n\t\tthis.mixtures.splice(idx, 0, mixture.clone());\n\t}\n\tpublic swapMixtures(idx1:number, idx2:number):void\n\t{\n\t\tlet [m1, m2] = [this.mixtures[idx1], this.mixtures[idx2]];\n\t\tthis.mixtures[idx1] = m2;\n\t\tthis.mixtures[idx2] = m1;\n\t}\n\n\t// unpacks a string into a mixture; throws an exception if anything went wrong\n\tpublic static deserialise(data:string):MixtureCollection\n\t{\n\t\tlet list = JSON.parse(data);\n\t\tif (!Array.isArray(list)) throw 'Input content is not a JSON array.';\n\t\tlet mixtures:Mixture[] = [];\n\t\tfor (let mixfile of list) mixtures.push(new Mixture(mixfile));\n\t\treturn new MixtureCollection(mixtures);\n\t}\n\n\t// converts the entire underlying JSON mixfile into a prettyprinted string; note the optional beautification parameter:\n\t// if not specified, small collections will get nice whitespace, whereas large ones will be densely packed for efficiency\n\tpublic serialise(beautify?:boolean):string\n\t{\n\t\tlet list:Mixfile[] = [];\n\t\tfor (let mixture of this.mixtures) list.push(mixture.mixfile);\n\t\t//return beautify || list.length <= 1000 ? Mixture.beautify(list) : JSON.stringify(list);\n\t\tif (beautify || list.length <= 100) return Mixture.beautify(list);\n\t\t\n\t\tlet lines = list.map((mixfile) => JSON.stringify(mixfile));\n\t\treturn '[\\n    ' + lines.join(',\\n    ') + '\\n]\\n';\n\t}\n\n\t// ------------ private methods ------------\n\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {dom, DOM} from 'webmolkit/util/dom';\nimport {MenuBanner, MenuBannerButton, MenuBannerCommand} from '../web/MenuBanner';\nimport {RenderPolicy} from 'webmolkit/gfx/Rendering';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy} from 'webmolkit/ui/MenuProxy';\nimport {Vec} from 'webmolkit/util/Vec';\nimport {OutlineMeasurement} from 'webmolkit/gfx/ArrangeMeasurement';\nimport {ArrangeMixture} from '../mixture/ArrangeMixture';\nimport {MetaVector, TextAlign} from 'webmolkit/gfx/MetaVector';\nimport {DrawMixture} from '../mixture/DrawMixture';\nimport {FontData} from 'webmolkit/gfx/FontData';\nimport * as fs from 'fs';\nimport {OpenDialogOptions, SaveDialogOptions} from 'electron';\nimport {dialog as electronDialog} from '@electron/remote';\nimport {MixtureCollection} from '../mixture/MixtureCollection';\nimport {Mixture} from '../mixture/Mixture';\nimport {MainPanel} from './MainPanel';\nimport {openNewWindow} from './startup';\nimport {EditMixtureDesktop} from './EditMixtureDesktop';\n\n/*\n\tBrowsing/editing a collection of mixtures.\n*/\n\nconst BANNER:MenuBannerButton[][] =\n[\n\t[\n\t\t{icon: 'CommandSave.svg', tip: 'Save', cmd: MenuBannerCommand.Save},\n\t],\n\t[\n\t\t{icon: 'CommandEdit.svg', tip: 'Edit component', cmd: MenuBannerCommand.EditDetails},\n\t\t{icon: 'CommandStructure.svg', tip: 'Edit structure', cmd: MenuBannerCommand.EditStructure},\n\t\t{icon: 'CommandLookup.svg', tip: 'Lookup compound', cmd: MenuBannerCommand.Lookup},\n\t\t{icon: 'CommandPicture.svg', tip: 'Export graphics', cmd: MenuBannerCommand.ExportSVG},\n\t],\n\t[\n\t\t{icon: 'CommandAppend.svg', tip: 'Append component', cmd: MenuBannerCommand.Append},\n\t\t{icon: 'CommandPrepend.svg', tip: 'Prepend component', cmd: MenuBannerCommand.Prepend},\n\t\t{icon: 'CommandDelete.svg', tip: 'Delete', cmd: MenuBannerCommand.Delete},\n\t\t{icon: 'CommandMoveUp.svg', tip: 'Move Up', cmd: MenuBannerCommand.MoveUp},\n\t\t{icon: 'CommandMoveDown.svg', tip: 'Move Down', cmd: MenuBannerCommand.MoveDown},\n\t],\n\t[\n\t\t{icon: 'CommandUndo.svg', tip: 'Undo', cmd: MenuBannerCommand.Undo},\n\t\t{icon: 'CommandRedo.svg', tip: 'Redo', cmd: MenuBannerCommand.Redo},\n\t],\n\t[\n\t\t{icon: 'CommandCopy.svg', tip: 'Copy', cmd: MenuBannerCommand.Copy},\n\t\t{icon: 'CommandCut.svg', tip: 'Cut', cmd: MenuBannerCommand.Cut},\n\t\t{icon: 'CommandPaste.svg', tip: 'Paste', cmd: MenuBannerCommand.Paste},\n\t],\n\t[\n\t\t{icon: 'CommandViewDetail.svg', tip: 'Detail', cmd: MenuBannerCommand.ViewDetail},\n\t\t{icon: 'CommandViewCard.svg', tip: 'Cards', cmd: MenuBannerCommand.ViewCard},\n\t\t{icon: 'CommandZoomNormal.svg', tip: 'Zoom full', cmd: MenuBannerCommand.ZoomFull},\n\t\t{icon: 'CommandZoomIn.svg', tip: 'Zoom in', cmd: MenuBannerCommand.ZoomIn},\n\t\t{icon: 'CommandZoomOut.svg', tip: 'Zoom out', cmd: MenuBannerCommand.ZoomOut},\n\t],\n];\n\nenum CollectionPanelView\n{\n\tDetail,\n\tCard,\n}\n\nconst BG_NORMAL = '#E0E0E0';\nconst BG_SELECTED = '#B9CBFF';\nconst PAGE_SIZE = 100;\n\nexport class CollectionPanel extends MainPanel\n{\n\tprivate filename:string = null;\n\tprivate collection = new MixtureCollection();\n\tprivate curPage = 0;\n\tprivate pageBlock:number[][] = [];\n\tprivate isDirty = false;\n\n\tprivate banner:MenuBanner;\n\tprivate divMain:DOM;\n\tprivate divFooter:DOM;\n\tprivate policy = RenderPolicy.defaultColourOnWhite(20);\n\tprivate viewType = CollectionPanelView.Detail;\n\n\tprivate selected = -1;\n\tprivate mapMixDiv = new Map<number, DOM>(); // index-in-collection to rendered div\n\tprivate editor:EditMixtureDesktop = null; // when defined, refers to collection{selected}\n\n\t// ------------ public methods ------------\n\n\tconstructor(root:DOM, private proxyClip:ClipboardProxy, private proxyMenu:MenuProxy)\n\t{\n\t\tsuper(root);\n\n\t\tthis.banner = new MenuBanner(BANNER, (cmd:MenuBannerCommand) => this.menuAction(cmd));\n\n\t\tlet divFlex = dom('<div/>').appendTo(root).css({'display': 'flex'});\n\t\tdivFlex.css({'flex-direction': 'column', 'width': '100%', 'height': '100%'});\n\t\tlet divBanner = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\t\tthis.divMain = dom('<div/>').appendTo(divFlex).css({'flex-grow': '1', 'overflow-y': 'scroll'});\n\t\tthis.divFooter = dom('<div/>').appendTo(divFlex).css({'flex-grow': '0'});\n\n\t\tthis.banner.render(divBanner);\n\t\tthis.dividePages();\n\t\tthis.renderMain();\n\n\t\tthis.updateBanner();\n\t}\n\n\tpublic setCollection(collection:MixtureCollection):void\n\t{\n\t\tthis.collection = collection;\n\t\tthis.dividePages();\n\t\tthis.renderMain();\n\t}\n\n\tpublic loadFile(filename:string):void\n\t{\n\t\tif (!filename)\n\t\t{\n\t\t\tthis.setCollection(new MixtureCollection());\n\t\t\treturn;\n\t\t}\n\t\t/*if (!filename)\n\t\t{\n\t\t\tthis.editor.clearHistory();\n\t\t\tthis.editor.setMixture(new Mixture(), true, true);\n\t\t\tthis.updateTitle();\n\t\t\tthis.filename = null;\n\t\t\tthis.isDirty = false;\n\t\t\treturn;\n\t\t}*/\n\n\t\tfs.readFile(filename, 'utf-8', (err:any, data:string):void =>\n\t\t{\n\t\t\tif (err) throw err;\n\n\t\t\tlet collection:MixtureCollection;\n\t\t\ttry {collection = MixtureCollection.deserialise(data);}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tconsole.log('Invalid mixture collection file: ' + e + '\\n' + data);\n\t\t\t\talert('Not a valid mixture collection file.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setCollection(collection);\n\t\t\tthis.filename = filename;\n\t\t\tthis.isDirty = false;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic menuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (this.editor)\n\t\t{\n\t\t\tlet dlg = this.editor.compoundEditor();\n\t\t\tif (dlg)\n\t\t\t{\n\t\t\t\tif (cmd == MenuBannerCommand.Cut) dlg.actionCut();\n\t\t\t\telse if (cmd == MenuBannerCommand.Copy) dlg.actionCopy();\n\t\t\t\telse if (cmd == MenuBannerCommand.Paste) dlg.actionPaste();\n\t\t\t\telse if (cmd == MenuBannerCommand.Undo) dlg.actionUndo();\n\t\t\t\telse if (cmd == MenuBannerCommand.Redo) dlg.actionRedo();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.editor.isReceivingCommands())\n\t\t\t{\n\t\t\t\t// certain common menu/shortcut commands are passed through to standard behaviour, the rest are stopped\n\t\t\t\tif ([MenuBannerCommand.Cut, MenuBannerCommand.Copy, MenuBannerCommand.Paste,\n\t\t\t\t\tMenuBannerCommand.Undo, MenuBannerCommand.Redo].indexOf(cmd) >= 0) document.execCommand(cmd);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tsuper.menuAction(cmd);\n\t}\n\n\tpublic customMenuAction(cmd:MenuBannerCommand):void\n\t{\n\t\tif (this.editor)\n\t\t{\n\t\t\t/* !! if (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\t\telse*/ if (cmd == MenuBannerCommand.Undo) this.editor.performUndo();\n\t\t\telse if (cmd == MenuBannerCommand.Redo) this.editor.performRedo();\n\t\t\telse if (cmd == MenuBannerCommand.Cut) this.editor.clipboardCopy(true);\n\t\t\telse if (cmd == MenuBannerCommand.Copy) this.editor.clipboardCopy(false);\n\t\t\telse if (cmd == MenuBannerCommand.CopyBranch) this.editor.clipboardCopy(false, true);\n\t\t\telse if (cmd == MenuBannerCommand.Paste) this.editor.clipboardPaste();\n\t\t\telse if (cmd == MenuBannerCommand.EditStructure) this.editor.editStructure();\n\t\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editor.editDetails();\n\t\t\telse if (cmd == MenuBannerCommand.Lookup) this.editor.lookupCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.Delete) this.editor.deleteCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.Append) this.editor.appendToCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.Prepend) this.editor.prependBeforeCurrent();\n\t\t\telse if (cmd == MenuBannerCommand.MoveUp) this.editor.reorderCurrent(-1);\n\t\t\telse if (cmd == MenuBannerCommand.MoveDown) this.editor.reorderCurrent(1);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.editor.zoomFull();\n\t\t\telse if (cmd == MenuBannerCommand.ZoomNormal) this.editor.zoomFull(); // (same as full)\n\t\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.editor.zoom(1.25);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.editor.zoom(0.8);\n\t\t\telse super.customMenuAction(cmd);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/*if (cmd == MenuBannerCommand.ExportSDF) this.actionExportSDF();\n\t\t\telse if (cmd == MenuBannerCommand.ExportSVG) this.actionFileExportSVG();\n\t\t\telse if (cmd == MenuBannerCommand.CreateMInChI) this.actionFileCreateMInChI();\n\t\t\telse*/ if (cmd == MenuBannerCommand.Cut) this.clipboardCopy(true);\n\t\t\telse if (cmd == MenuBannerCommand.Copy) this.clipboardCopy(false);\n\t\t\telse if (cmd == MenuBannerCommand.Paste) this.clipboardPaste();\n\t\t\telse if (cmd == MenuBannerCommand.EditDetails) this.editMixture();\n\t\t\telse if (cmd == MenuBannerCommand.Delete) this.deleteMixture();\n\t\t\telse if (cmd == MenuBannerCommand.Append) this.appendMixture();\n\t\t\telse if (cmd == MenuBannerCommand.Prepend) this.prependMixture();\n\t\t\telse if (cmd == MenuBannerCommand.MoveUp) this.reorderCurrent(-1);\n\t\t\telse if (cmd == MenuBannerCommand.MoveDown) this.reorderCurrent(1);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomFull) this.zoomScale();\n\t\t\telse if (cmd == MenuBannerCommand.ZoomIn) this.zoomScale(1.25);\n\t\t\telse if (cmd == MenuBannerCommand.ZoomOut) this.zoomScale(0.8);\n\t\t\telse if (cmd == MenuBannerCommand.ViewDetail) this.changeView(cmd);\n\t\t\telse if (cmd == MenuBannerCommand.ViewCard) this.changeView(cmd);\n\t\t\telse super.customMenuAction(cmd);\n\t\t}\n\t}\n\n\t// ------------ private methods ------------\n\n\tprivate renderMain():void\n\t{\n\t\tthis.divMain.empty();\n\t\tthis.divFooter.empty();\n\n\t\tthis.selected = -1;\n\t\tthis.mapMixDiv.clear();\n\n\t\tlet divContent = dom('<div/>').appendTo(this.divMain);\n\n\t\tif (this.viewType == CollectionPanelView.Card)\n\t\t{\n\t\t\tdivContent.css({'display': 'flex', 'flex-wrap': 'wrap'});\n\t\t\tdivContent.css({'justify-content': 'flex-start', 'align-items': 'flex-start'});\n\t\t}\n\n\t\t//for (let n = 0; n < this.collection.count; n++)\n\t\tfor (let idx of this.pageBlock[this.curPage])\n\t\t{\n\t\t\tlet div = this.createMixture(idx, this.collection.getMixture(idx)).appendTo(divContent);\n\t\t\tdiv.onClick(() => this.changeSelection(idx));\n\t\t\tdiv.onDblClick(() => this.editMixture());\n\t\t\tthis.mapMixDiv.set(idx, div);\n\t\t}\n\n\t\tlet npage = this.pageBlock.length;\n\t\tif (npage > 1)\n\t\t{\n\t\t\tthis.divFooter.css({'text-align': 'center', 'border-top': '1px solid #808080', 'background-color': 'white'});\n\n\t\t\tif (this.curPage > 0)\n\t\t\t{\n\t\t\t\tlet ahref = dom('<a/>').appendTo(this.divFooter).attr({'href': '#'});\n\t\t\t\tahref.setText('Previous');\n\t\t\t\tahref.onClick((event) =>\n\t\t\t\t{\n\t\t\t\t\tthis.curPage--;\n\t\t\t\t\tthis.renderMain();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet showPages:number[] = [];\n\t\t\tfor (let n = Math.max(0, this.curPage - 5); n <= Math.min(npage - 1, this.curPage + 5); n++) showPages.push(n);\n\t\t\tif (Vec.first(showPages) != 0) showPages.unshift(0);\n\t\t\tif (Vec.last(showPages) != npage - 1) showPages.push(npage - 1);\n\n\t\t\tfor (let n = 0; n < showPages.length; n++)\n\t\t\t{\n\t\t\t\tlet page = showPages[n];\n\t\t\t\tif (n > 0 && page != showPages[n - 1] + 1) this.divFooter.appendText('...');\n\t\t\t\tif (page != this.curPage)\n\t\t\t\t{\n\t\t\t\t\tlet ahref = dom('<a/>').appendTo(this.divFooter).attr({'href': '#'});\n\t\t\t\t\tahref.setText(`${page + 1}`);\n\t\t\t\t\tahref.onClick((event) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.curPage = page;\n\t\t\t\t\t\tthis.renderMain();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse this.divFooter.appendHTML(`<span>${page + 1}</span>`);\n\t\t\t}\n\n\t\t\tif (this.curPage < npage - 1)\n\t\t\t{\n\t\t\t\tlet ahref = dom('<a/>').appendTo(this.divFooter).attr({'href': '#'});\n\t\t\t\tahref.setText('Next');\n\t\t\t\tahref.onClick((event) =>\n\t\t\t\t{\n\t\t\t\t\tthis.curPage++;\n\t\t\t\t\tthis.renderMain();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//this.divFooter.find('a,span').css({'margin-left': '0.25em', 'margin-right': '0.25em'});\n\t\t\tfor (let dom of this.divFooter.findAll('a,span')) dom.css({'margin-left': '0.25em', 'margin-right': '0.25em'});\n\n\t\t\tthis.divFooter.appendText(` (${this.collection.count})`);\n\t\t}\n\t}\n\n\tprivate dividePages():void\n\t{\n\t\tlet sz = this.collection.count;\n\t\tif (sz == 0)\n\t\t{\n\t\t\tthis.pageBlock = [[]];\n\t\t\tthis.curPage = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tlet blk:number[] = [];\n\t\tthis.pageBlock = [blk];\n\t\tfor (let n = 0; n < sz; n++)\n\t\t{\n\t\t\tif (blk.length >= PAGE_SIZE) this.pageBlock.push(blk = []);\n\t\t\tblk.push(n);\n\t\t}\n\n\t\tthis.curPage = Math.min(this.curPage, this.pageBlock.length - 1);\n\t}\n\n\tprivate createMixture(idx:number, mixture:Mixture):DOM\n\t{\n\t\tlet divOuter = dom('<div/>');\n\t\tif (this.viewType == CollectionPanelView.Detail)\n\t\t{\n\t\t\tdivOuter.css({'display': 'block'});\n\t\t}\n\t\telse // == CollectionPanelView.Card\n\t\t{\n\t\t\tdivOuter.css({'display': 'inline-block'});\n\t\t}\n\n\t\tlet divInner = dom('<div/>').appendTo(divOuter).css({'display': 'flex'});\n\t\tdivInner.css({'margin': '2px', 'padding': '2px', 'border-radius': '4px'});\n\t\tdivInner.css({'background-color': BG_NORMAL, 'border': '1px solid #808080'});\n\n\t\tlet measure = new OutlineMeasurement(0, 0, this.policy.data.pointScale);\n\t\tlet layout = new ArrangeMixture(mixture, measure, this.policy);\n\t\tlayout.arrange();\n\n\t\tlet gfx = new MetaVector();\n\t\tlet draw = new DrawMixture(layout, gfx);\n\t\tdraw.draw();\n\n\t\tlet tag = (idx + 1).toString(), fsz = 10, tpad = 2;\n\t\tlet wad = FontData.measureText(tag, fsz);\n\t\tgfx.drawRect(0, 0, wad[0] + 2 * tpad, wad[1] + 2 * tpad, MetaVector.NOCOLOUR, 0, 0x000000);\n\t\tgfx.drawText(0 + tpad, tpad, tag, fsz, 0xFFFFFF, TextAlign.Top | TextAlign.Left);\n\n\t\tgfx.normalise();\n\t\tlet wrapSVG = dom('<div/>').appendTo(divInner).css({'display': 'inline-block'});\n\t\tdom(gfx.createSVG()).appendTo(wrapSVG).css({'display': 'block'});\n\n\t\tif (this.viewType == CollectionPanelView.Detail) this.displayFields(dom('<div/>').appendTo(divInner), mixture);\n\n\t\treturn divInner;\n\t}\n\n\tprivate changeView(cmd:MenuBannerCommand):void\n\t{\n\t\tif (cmd == MenuBannerCommand.ViewDetail) this.viewType = CollectionPanelView.Detail;\n\t\telse if (cmd == MenuBannerCommand.ViewCard) this.viewType = CollectionPanelView.Card;\n\t\tthis.renderMain();\n\t}\n\n\tprivate changeSelection(idx:number):void\n\t{\n\t\tif (this.selected >= 0)\n\t\t{\n\t\t\tlet div = this.mapMixDiv.get(this.selected);\n\t\t\tif (div) div.css({'background-color': BG_NORMAL});\n\t\t}\n\t\tthis.selected = idx;\n\t\tif (idx >= 0)\n\t\t{\n\t\t\tlet div = this.mapMixDiv.get(idx);\n\t\t\tif (div) div.css({'background-color': BG_SELECTED});\n\t\t}\n\t}\n\n\tprotected actionFileOpen():void\n\t{\n\t\tlet params:OpenDialogOptions =\n\t\t{\n\t\t\t'title': 'Open Mixtures',\n\t\t\t'properties': ['openFile'],\n\t\t\t'filters':\n\t\t\t[\n\t\t\t\t{'name': 'Mixfile Collection', 'extensions': ['json']},\n\t\t\t\t{'name': 'Mixfile', 'extensions': ['mixfile']},\n\t\t\t]\n\t\t};\n\t\telectronDialog.showOpenDialog(params).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tfor (let fn of value.filePaths)\n\t\t\t{\n\t\t\t\tif (fn.endsWith('.mixfile'))\n\t\t\t\t\topenNewWindow('MixturePanel', fn);\n\t\t\t\telse\n\t\t\t\t\topenNewWindow('CollectionPanel', fn);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected actionFileSave():void\n\t{\n\t\tif (this.editor)\n\t\t{\n\t\t\tthis.stopEdit();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.filename) {this.actionFileSaveAs(); return;}\n\n\t\tthis.saveFile(this.filename);\n\t\tthis.isDirty = false;\n\t\tthis.updateTitle();\n\t}\n\n\tprotected actionFileSaveAs():void\n\t{\n\t\tlet params:SaveDialogOptions =\n\t\t{\n\t\t\ttitle: 'Save Mixfile Collection',\n\t\t\t//defaultPath...\n\t\t\tfilters:\n\t\t\t[\n\t\t\t\t{name: 'Mixfile Collection', extensions: ['json']}\n\t\t\t]\n\t\t};\n\t\telectronDialog.showSaveDialog({}).then((value) =>\n\t\t{\n\t\t\tif (value.canceled) return;\n\t\t\tthis.saveFile(value.filePath);\n\t\t\tthis.filename = value.filePath;\n\t\t\tthis.isDirty = false;\n\t\t\tthis.updateTitle();\n\t\t});\n\t}\n\n\tpublic saveFile(filename:string):void\n\t{\n\t\tlet content = this.collection.serialise();\n\n\t\tfs.writeFile(filename, content, (err:any):void =>\n\t\t{\n\t\t\tif (err) alert('Unable to save: ' + err);\n\t\t});\n\t}\n\n\tprivate updateTitle():void\n\t{\n\t\tif (this.filename == null) {document.title = 'Mixture Collection'; return;}\n\n\t\tlet slash = Math.max(this.filename.lastIndexOf('/'), this.filename.lastIndexOf('\\\\'));\n\t\tlet title = 'Mixture Collection - ' + this.filename.substring(slash + 1);\n\t\tif (this.isDirty) title += '*';\n\t\tdocument.title = title;\n\t}\n\n\tprivate updateBanner():void\n\t{\n\t\tlet isEditing = this.editor != null;\n\n\t\tthis.banner.activateButtons(\n\t\t{\n\t\t\t[MenuBannerCommand.EditStructure]: isEditing,\n\t\t\t[MenuBannerCommand.Lookup]: isEditing,\n\t\t\t[MenuBannerCommand.ExportSVG]: isEditing,\n\t\t\t[MenuBannerCommand.Undo]: isEditing,\n\t\t\t[MenuBannerCommand.Redo]: isEditing,\n\t\t\t[MenuBannerCommand.ViewDetail]: !isEditing,\n\t\t\t[MenuBannerCommand.ViewCard]: !isEditing,\n\t\t});\n\t}\n\n\tprivate scrollToIndex(idx:number):void\n\t{\n\t\tif (idx < 0) return;\n\t\tlet div = this.mapMixDiv.get(idx);\n\t\tif (div) this.divMain.el.scrollTop = div.offset().y - this.divMain.offset().y + this.divMain.el.scrollTop;\n\t}\n\n\tprivate editMixture():void\n\t{\n\t\tif (this.selected < 0) return;\n\n\t\tthis.editor = new EditMixtureDesktop(this.inchi, this.proxyClip, this.proxyMenu);\n\n\t\tthis.divMain.empty();\n\t\tthis.editor.render(this.divMain);\n\n\t\tthis.editor.setMixture(this.collection.getMixture(this.selected));\n\t\tthis.editor.setDirty(false);\n\t\tthis.updateBanner();\n\t}\n\n\tprivate stopEdit():void\n\t{\n\t\tif (!this.editor) return;\n\n\t\tlet idx = this.selected;\n\t\tif (this.editor.isDirty())\n\t\t{\n\t\t\tthis.collection.setMixture(idx, this.editor.getMixture());\n\t\t\tthis.isDirty = true;\n\t\t}\n\n\t\tthis.editor = null;\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx);\n\t\tthis.scrollToIndex(idx);\n\t\tthis.updateBanner();\n\t\tthis.updateTitle();\n\t}\n\n\tprivate clipboardCopy(withCut:boolean):void\n\t{\n\t\tlet idx = this.selected;\n\t\tif (idx < 0 || this.editor) return;\n\n\t\tlet str = this.collection.getMixture(idx).serialise();\n\t\tthis.proxyClip.setString(str);\n\n\t\tif (withCut)\n\t\t{\n\t\t\tthis.collection.deleteMixture(idx);\n\t\t\tthis.isDirty = true;\n\n\t\t\tlet top = this.divMain.el.scrollTop;\n\t\t\tthis.renderMain();\n\t\t\tthis.divMain.el.scrollTop = top;\n\t\t\tthis.updateBanner();\n\t\t\tthis.updateTitle();\n\t\t}\n\t}\n\n\tprivate clipboardPaste():void\n\t{\n\t\tlet mixture = Mixture.deserialise(this.proxyClip.getString());\n\t\tif (!mixture)\n\t\t{\n\t\t\talert('No mixture on clipboard.');\n\t\t\treturn;\n\t\t}\n\t\tthis.appendMixture(mixture);\n\t}\n\n\tprivate deleteMixture():void\n\t{\n\t\tlet idx = this.selected;\n\t\tif (idx < 0 || this.editor) return;\n\t\tthis.collection.deleteMixture(idx);\n\t\tthis.renderMain();\n\t\tif (idx < this.collection.count) this.scrollToIndex(idx);\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\tprivate appendMixture(mixture?:Mixture):void\n\t{\n\t\tif (!mixture) mixture = new Mixture();\n\n\t\tif (this.editor) return;\n\t\tlet idx:number;\n\t\tif (this.selected < 0)\n\t\t{\n\t\t\tidx = this.collection.appendMixture(mixture);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tidx = this.selected + 1;\n\t\t\tthis.collection.insertMixture(idx, mixture);\n\t\t}\n\t\tthis.dividePages();\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx);\n\t\tthis.scrollToIndex(idx);\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\tprivate prependMixture():void\n\t{\n\t\tif (this.editor) return;\n\t\tlet idx = Math.max(0, this.selected);\n\t\tthis.collection.insertMixture(idx, new Mixture());\n\t\tlet top = this.divMain.el.scrollTop;\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx);\n\t\tthis.divMain.el.scrollTop = top;\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\tprivate reorderCurrent(dir:number):void\n\t{\n\t\tlet idx = this.selected;\n\t\tif (idx < 0 || idx + dir < 0 || idx + dir >= this.collection.count || this.editor) return;\n\t\tthis.collection.swapMixtures(idx, idx + dir);\n\t\tlet top = this.divMain.el.scrollTop;\n\t\tthis.renderMain();\n\t\tthis.changeSelection(idx + dir);\n\t\tthis.divMain.el.scrollTop = top;\n\n\t\tthis.isDirty = true;\n\t\tthis.updateTitle();\n\t}\n\n\t// alter zoom level by a factor, or reset (null)\n\tpublic zoomScale(scale?:number):void\n\t{\n\t\t// TODO\n\t}\n\n\t// render other fields that are encoded into the root branch of the mixture\n\tprivate displayFields(domParent:DOM, mixture:Mixture):void\n\t{\n\t\tlet items:[string, string][] = [];\n\t\tlet root = mixture.mixfile as Record<string, any>;\n\t\tconst SKIP = ['name', 'molfile', 'quantity', 'ratio', 'units', 'relation', 'mixfileVersion'];\n\t\tfor (let key in root) if (!SKIP.includes(key))\n\t\t{\n\t\t\tlet val = root[key];\n\t\t\tif (typeof val != 'string' && typeof val != 'number') continue;\n\t\t\titems.push([key, val.toString()]);\n\t\t}\n\n\t\tif (items.length == 0) return;\n\n\t\titems.sort((i1, i2) => i1[0].localeCompare(i2[0]));\n\n\t\tdomParent.css({'padding-left': '0.5em'});\n\n\t\tlet flex = dom('<div/>').appendTo(domParent).css({'display': 'flex'});\n\t\tflex.css({'flex-direction': 'row', 'flex-wrap': 'wrap', 'justify-content': 'flex-start', 'align-items': 'flex-start'});\n\n\t\tfor (let [title, label] of items)\n\t\t{\n\t\t\tlet div = dom('<div/>').appendTo(flex).css({'white-space': 'nowrap', 'margin': '0 0.2em 0.2em 0'});\n\t\t\tlet divTitle = dom('<div/>').appendTo(div).css({'display': 'inline-block', 'padding': '0.2em', 'background-color': '#C0C0C0', 'border': '1px solid black'});\n\t\t\tlet divLabel = dom('<div/>').appendTo(div).css({'display': 'inline-block', 'padding': '0.2em', 'background-color': '#F8F8F8', 'border': '1px solid black'});\n\n\t\t\tdivTitle.css({'border-right': 'none'});\n\t\t\tdivTitle.css({'border-radius': '0.2em 0 0 0.2em'});\n\t\t\tdivLabel.css({'border-radius': '0 0.2em 0.2em 0'});\n\n\t\t\tdivTitle.setText(title);\n\t\t\tdivLabel.setText(label);\n\t\t}\n\t}\n}\n\n","/*\n    Mixfile Editor & Viewing Libraries\n\n    (c) 2017-2025 Collaborative Drug Discovery, Inc\n\n    All rights reserved\n\n    http://collaborativedrug.com\n\n\tMade available under the Gnu Public License v3.0\n*/\n\nimport {MainPanel} from './MainPanel';\nimport {MixturePanel} from './MixturePanel';\nimport {DOM} from 'webmolkit/util/dom';\nimport {initWebMolKit, Theme} from 'webmolkit/util/Theme';\nimport {OntologyTree} from 'webmolkit/data/OntologyTree';\nimport {ClipboardProxy} from 'webmolkit/ui/ClipboardProxy';\nimport {MenuProxy, MenuProxyContext} from 'webmolkit/ui/MenuProxy';\nimport * as path from 'path';\nimport * as process from 'process';\nimport {ipcRenderer} from 'electron';\nimport {Menu as ElectronMenu, MenuItem as ElectronMenuItem, clipboard as electronClipboard, getCurrentWindow} from '@electron/remote';\nimport {CollectionPanel} from './CollectionPanel';\nimport {readTextURL} from 'webmolkit/util/util';\n\nexport let ON_DESKTOP = false; // by default assume it's running in a regular web page; switch to true if it's the locally\n\t\t\t\t\t\t\t   // executed window version\nexport function setOnDesktop(onDesktop:boolean):void {ON_DESKTOP = onDesktop;}\n\n/*\n\tStartup: gets the ball rolling, and provide some high level window handling.\n*/\n\nexport async function runMixfileEditor(resURL:string, rootID:string):Promise<void>\n{\n\tlet root = DOM.find('#' + rootID);\n\n\tON_DESKTOP = true;\n\tinitWebMolKit(resURL);\n\tawait OntologyTree.init();\n\tlet metacategory = await readTextURL(resURL + '/data/ontology/metacategory.onto');\n\tOntologyTree.main.loadFromString('metacategory', metacategory);\n\n\tprocess.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true';\n\n\tlet url = window.location.href.substring(0, window.location.href.lastIndexOf('/'));\n\tTheme.RESOURCE_URL = path.normalize(url + '/res');\n\n\t// unpack web params: if present, they determine where to go from here\n \tlet params = window.location.search.substring(1).split('&');\n\tlet panelClass:string = null; // default is straight to molecule editing\n\tlet filename:string = null;\n\tfor (let p of params)\n\t{\n\t\tlet eq = p.indexOf('=');\n\t\tif (eq < 0) continue;\n\t\tlet key = p.substring(0, eq), val = decodeURIComponent(p.substring(eq + 1));\n\t\tif (key == 'panel') panelClass = val;\n\t\telse if (key == 'fn') filename = val;\n\t}\n\n\tif (!panelClass && filename && filename.endsWith('.json')) panelClass = 'CollectionPanel';\n\n\tlet proxyClip = new ClipboardProxy();\n\tproxyClip.getString = ():string => electronClipboard.readText();\n\tproxyClip.setString = (str:string):void => electronClipboard.writeText(str);\n\tproxyClip.setHTML = (html:string):void => electronClipboard.writeHTML(html);\n\tproxyClip.canSetHTML = ():boolean => true;\n\tproxyClip.canAlwaysGet = ():boolean => true;\n\n\tlet proxyMenu = new MenuProxy();\n\tproxyMenu.hasContextMenu = () => true;\n\tproxyMenu.openContextMenu = (menuItems:MenuProxyContext[], event:MouseEvent) =>\n\t{\n\t\tlet populate = (emenu:Electron.Menu, itemList:MenuProxyContext[]):void =>\n\t\t{\n\t\t\tfor (let item of itemList)\n\t\t\t{\n\t\t\t\tif (!item || !item.label) emenu.append(new ElectronMenuItem({type: 'separator'}));\n\t\t\t\telse if (item.click) emenu.append(new ElectronMenuItem(item));\n\t\t\t\telse if (item.subMenu)\n\t\t\t\t{\n\t\t\t\t\tlet subMenu = new ElectronMenu();\n\t\t\t\t\tpopulate(subMenu, item.subMenu);\n\t\t\t\t\temenu.append(new ElectronMenuItem({label: item.label, submenu: subMenu}));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet menu = new ElectronMenu();\n\t\tpopulate(menu, menuItems);\n\n\t\tmenu.popup({window: getCurrentWindow()});\n\t};\n\n\tlet main:MainPanel;\n\tif (!panelClass || panelClass == 'MixturePanel')\n\t{\n\t\tmain = new MixturePanel(root, proxyClip, proxyMenu);\n\t}\n\telse if (panelClass == 'CollectionPanel')\n\t{\n\t\tmain = new CollectionPanel(root, proxyClip, proxyMenu);\n\t}\n\n\tmain.loadFile(filename);\n\n\tipcRenderer.on('menuAction', (event, args) => main.menuAction(args));\n}\n\nexport function openNewWindow(panelClass:string, filename?:string, options:Record<string, string> = {}):void\n{\n\tlet args:Record<string, string> = {...options};\n\tif (panelClass) args['panelClass'] = panelClass;\n\tif (filename) args['filename'] = filename;\n\tipcRenderer.send('openWindow', args);\n}\n"],"names":["module","exports","require","Object","defineProperty","value","createFunctionWithReturnValue","getGlobal","getCurrentWebContents","getCurrentWindow","getBuiltin","callbacks_registry_1","type_utils_1","electron_1","module_names_1","get_electron_binding_1","Promise","global","callbacksRegistry","CallbacksRegistry","remoteObjectCache","Map","finalizationRegistry","FinalizationRegistry","id","ref","get","undefined","deref","delete","ipcRenderer","send","contextId","electronIds","WeakMap","isReturnValue","WeakSet","process","v8Util","getElectronBinding","getHiddenValue","Error","getContextId","on","IS_REMOTE_PROXY","Symbol","wrapArgs","args","visited","Set","valueToMeta","has","type","constructor","name","serialize","Array","isArray","add","meta","Buffer","isSerializableObject","isPromise","then","onFulfilled","onRejected","members","prop","push","location","getLocation","length","map","setObjectMembers","object","metaId","member","prototype","hasOwnProperty","call","descriptor","enumerable","remoteMemberFunction","command","this","metaToValue","sendSync","descriptorFunction","proxyFunctionProperties","set","configurable","writable","setObjectPrototype","proto","setPrototypeOf","loaded","loadRemoteProperties","Proxy","target","property","bind","ownKeys","getOwnPropertyNames","getOwnPropertyDescriptor","deserialize","from","buffer","byteOffset","byteLength","resolve","metaToError","ret","cached","getCachedRemoteObject","remoteFunction","wr","WeakRef","register","setCachedRemoteObject","obj","handleMessage","channel","handler","event","passedContextId","senderId","console","error","enableStacks","argv","includes","getCurrentStack","stack","captureStackTrace","apply","remove","returnValue","func","browserModuleNames","forEach","nextId","callbacks","callbackIds","locationInfo","callback","regexp","stackString","filenameAndLine","match","exec","_linkedBinding","electronBinding","val","Function","reject","serializableTypes","Boolean","Number","String","Date","RegExp","ArrayBuffer","isView","some","objectMap","source","mapper","targetEntries","entries","key","fromEntries","image","representations","scaleFactors","getScaleFactors","scaleFactor","size","getSize","toBitmap","dataURL","toDataURL","__ELECTRON_SERIALIZED_NativeImage__","serializeNativeImage","nativeImage","createEmpty","width","height","addRepresentation","rep","deserializeNativeImage","_a","_b","commonModuleNames","concat","features","isDesktopCapturerEnabled","isViewApiEnabled","__createBinding","create","o","m","k","k2","__exportStar","p","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","r","toStringTag","isBlank","arr","notBlank","safeArray","len","arrayLength","anyTrue","v","allTrue","anyFalse","allFalse","iterAnyTrue","iterAllTrue","iterAnyFalse","iterAllFalse","swap","idx1","idx2","duplicate","slice","append","item","prepend","unshift","arr1","arr2","idx","splice","flatten","mtx","vec","transpose","sz1","sz2","anyArray","j","i","equals","n","equivalent","len1","compareTo","sz","Math","max","booleanArray","fill","numberArray","stringArray","genericArray","genericBlankArrays","funcArray","first","last","min","MAX_VALUE","MIN_VALUE","idxMin","idxMax","range","lo","hi","reverse","identity0","identity1","identityN","start","notMask","mask","idxGet","maskCount","c","maskIdx","idxMask","maskMap","pos","maskGet","maskEqual","sum","t","sub","mul","neg","setTo","addTo","mulBy","setToArray","addToArray","subFromArray","mulByArray","divByArray","idxSort","sort","a","b","v1","v2","sorted","sortedUnique","unique","uniqueUnstable","uniqueStable","maskUnique","idxUnique","exclude","excl","count","indexOf","Permutation","parityPerms","parityIdentity","parityOrder","src","smallPermutation","PERM1","PERM2","PERM3","PERM4","allPermutations","SMALL_PERMS","PERM_CACHE","MAX_CACHE","nperms","perms","nonunique","Matrix","s","A","fromArray","clone","numRows","numCols","X","C","norm1","f","abs","normInf","uminus","plus","B","plusEquals","minus","minusEquals","arrayTimes","arrayTimesEquals","arrayRightDivide","arrayRightDivideEquals","arrayLeftDivide","arrayLeftDivideEquals","scalarTimes","scalarTimesEquals","times","Bcolj","Arowi","rank","SingularValueDecomposition","cond","trace","identity","toString","lines","row","JSON","stringify","join","nu","U","V","e","work","nct","nrt","hypot","pp","iter","eps","pow","tiny","kase","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","sqrt","g","getU","getV","getSingularValues","getS","S","norm2","tol","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","safeInt","str","def","startsWith","parseInt","substring","isNaN","newElement","parent","tag","attr","domNew","domLegacy","el","formatDouble","sigfig","toPrecision","endsWith","colourCode","col","hex","colourAlpha","transp","ONE_OVER_255","colourCanvas","nodeText","node","firstChild","nodeType","nodeValue","nextSibling","container","offset","pageX","x","pageY","y","dom","w","h","css","norm_xy","dx","dy","norm2_xyz","dz","signum","sqr","invZ","fltEqual","realEqual","TWOPI","PI","INV_TWOPI","DEGRAD","RADDEG","th","ceil","angleDiff","th1","th2","theta","minArray","maxArray","findNode","nodeName","findNodes","list","pathRoundedRect","x1","y1","x2","y2","rad","path","Path2D","moveTo","quadraticCurveTo","lineTo","closePath","drawLine","ctx","beginPath","stroke","fontSansSerif","ascent","pixelDensity","window","devicePixelRatio","data","deepClone","escapeHTML","text","replace","KeyCode","staticScrollerSize","EPSILON","Triangulation2D","px","py","numTriangles","edgeStack","hull","maxTriangles","triangles","halfedges","hashSize","hullPrev","hullNext","hullTri","hullHash","ids","dists","update","trimConcave","threshold","threshSq","tri","edge","uniqueEdges","edgeCount","ntri","c1","c2","c3","i1","i2","i3","repTri","repEdge","traceOutline","e1","e2","e3","edgePairs","entry","floor","isz","idxMap","g1","g2","sequence","minX","minY","maxX","maxY","centreX","centreY","i0","minDist","POSITIVE_INFINITY","i0x","i0y","i1x","i1y","minRadius","circumRadius","i2x","i2y","isFinite","quicksort","d0","NEGATIVE_INFINITY","orient","pickCircumCentre","hullStart","hullSize","hashKey","addTriangle","xp","yp","q","legalise","pseudoAngle","ar","a0","b0","al","bl","p0","pr","pl","p1","inCircle","hbl","link","br","orientIfSure","rx","ry","qx","qy","l","ax","ay","bx","by","cx","cy","ex","ey","fx","fy","bp","cp","cl","left","right","temp","tempDist","median","GeomUtil","pointInPolygon","phase","areLinesParallel","x3","y3","x4","y4","dxa","dya","dxb","dyb","xmajorA","EPS","lineIntersect","u","isPointOnLineSeg","pointLineDistance","pointLineSegDistance","doLineSegsIntersect","x1_x3","y1_y3","nx","ny","dn","rectsIntersect","w1","h1","w2","h2","sortAngles","idxSortAngles","pop","uniqueAngles","ang","thetaObtuse","dth","emergentAngle","bottom","behind","delta","dotProduct","crossProduct","affineTranslate","affineMirror","xaxis","yaxis","affineScale","sx","sy","affineRotate","cos","sin","affineCompose","tfm","Acol","Brow","applyAffine","applyAffineArray","isAffineMirror","magnitude2","magnitude","dist2","dist","normalise","dsq","inv","normalised","acuteAngle","mag1","mag2","cosTheta","acos","arcControlPoints","t1x","t1y","t2x","t2y","tx","ty","D","createBezierEllipse","rw","rh","nseg","sinTheta","incrAlpha","alpha","cosAlpha","sinAlpha","npt","n1","n2","n3","n4","ctrl","fitCircle","fitEllipse","bestW","bestH","bestScore","shrinkToFit","whs","dmin","invW2","invH2","whsX","whsY","anything","superimpose","thetaA","atan2","rot00","rot01","rot10","rot11","acx","acy","invsz","bcx","bcy","mtxA","mtxB","cov","svd","rotate","convexHull","flatness","algo","QuickHull","hullX","hullY","outlinePolygon","diameter","del","concave","hsz","al1","al2","quickHull","furthestPoint","distance","ux","uy","maxDist","maxPos","Pos","zero","other","scaleBy","mag","offsetBy","withScaleBy","withOffsetBy","Size","isZero","fitInto","maxW","maxH","Box","fromBounds","fromSize","fromOval","oval","getPos","setPos","setSize","midX","midY","area","grow","withGrow","intersects","intersection","x5","y5","x6","y6","contains","union","isEmpty","notEmpty","Oval","fromBox","box","setCentre","setRadius","Line","fromPos","pos1","pos2","setPos1","setPos2","XML","parseXML","strXML","xmlDoc","customParser","parseFromString","DOMParser","doc","customSerial","serializeToString","documentElement","XMLSerializer","toPrettyString","xslt","xsltDoc","xsltProc","XSLTProcessor","importStylesheet","resultDoc","transformToDocument","child","childNodes","childText","tagName","findElement","appendElement","ownerDocument","createElement","appendChild","appendElementAfter","presib","postsib","parentNode","insertBefore","appendText","isCDATA","createCDATASection","createTextNode","createTextChild","textContent","setText","removeChild","findChildElements","childElements","DOM","parse","jquery","elHTML","elInput","elCanvas","xhtml","xml","html","outerHTML","template","document","innerHTML","content","find","selector","querySelector","findAll","nodeList","querySelectorAll","domList","parentElement","ancestor","closest","children","firstElementChild","nextElementSibling","toLocaleLowerCase","exists","isVisible","offsetWidth","offsetHeight","getClientRects","appendTo","prependTo","insertAfter","before","empty","getHTML","setHTML","appendHTML","insertAdjacentHTML","getText","getValue","setValue","getCSS","style","getPropertyValue","setCSS","setProperty","dict","getAttr","hasAttribute","getAttribute","setAttr","setAttribute","addClass","clsnames","cls","split","classList","removeClass","hasClass","clsname","setClass","flag","toggleClass","rect","getBoundingClientRect","win","defaultView","pageXOffset","top","pageYOffset","setBoundaryPixels","setSizePixels","hasFocus","activeElement","grabFocus","delay","setTimeout","focus","removeEvent","removeEventListener","onKeyDown","addEventListener","onKeyUp","onKeyPress","onScroll","onWheel","onClick","onContextMenu","onDblClick","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onChange","onInput","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","Theme","BASE_URL","RESOURCE_URL","foreground","background","lowlight","lowlightEdge1","lowlightEdge2","highlight","highlightEdge1","highlightEdge2","cssTagsInstalled","hasInlineCSS","head","globalTooltip","globalPopWatermark","addTooltip","bodyHTML","titleHTML","widget","tooltip","Tooltip","stop","clearTooltip","domTooltip","watermark","bodyCallback","raise","avoid","class","body","sanity","zindex","zIndex","div","hasTitle","hasBody","winW","innerWidth","winH","innerHeight","boundDiv","wx1","wy1","wx2","wy2","popW","popH","posX","posY","setPosition","checkParent","MenuBannerCommand","MenuBanner","commands","callbackAction","callbackRefocus","mapDiv","mapSVG","mapActive","selected","render","domParent","divFlex","blk","divBlk","btn","svg","createCommand","cmd","activateButtons","active","addSelected","removeSelected","iconPosition","offsetLeft","offsetTop","icon","lastIndexOf","imgURL","tip","Chemistry","ELEMENTS","ELEMENT_GROUPS","ELEMENT_ROWS","ELEMENT_BLOCKS","ELEMENT_VALENCE","ELEMENT_BONDING","ELEMENT_SHELL","NATURAL_ATOMIC_WEIGHTS","ELEMENT_H","ELEMENT_He","ELEMENT_Li","ELEMENT_Be","ELEMENT_B","ELEMENT_C","ELEMENT_N","ELEMENT_O","ELEMENT_F","ELEMENT_Ne","ELEMENT_Na","ELEMENT_Mg","ELEMENT_Al","ELEMENT_Si","ELEMENT_P","ELEMENT_S","ELEMENT_Cl","ELEMENT_Ar","ELEMENT_K","ELEMENT_Ca","ELEMENT_Sc","ELEMENT_Ti","ELEMENT_V","ELEMENT_Cr","ELEMENT_Mn","ELEMENT_Fe","ELEMENT_Co","ELEMENT_Ni","ELEMENT_Cu","ELEMENT_Zn","ELEMENT_Ga","ELEMENT_Ge","ELEMENT_As","ELEMENT_Se","ELEMENT_Br","ELEMENT_Kr","ELEMENT_Rb","ELEMENT_Sr","ELEMENT_Y","ELEMENT_Zr","ELEMENT_Nb","ELEMENT_Mo","ELEMENT_Tc","ELEMENT_Ru","ELEMENT_Rh","ELEMENT_Pd","ELEMENT_Ag","ELEMENT_Cd","ELEMENT_In","ELEMENT_Sn","ELEMENT_Sb","ELEMENT_Te","ELEMENT_I","ELEMENT_Xe","ELEMENT_Cs","ELEMENT_Ba","ELEMENT_La","ELEMENT_Ce","ELEMENT_Pr","ELEMENT_Nd","ELEMENT_Pm","ELEMENT_Sm","ELEMENT_Eu","ELEMENT_Gd","ELEMENT_Tb","ELEMENT_Dy","ELEMENT_Ho","ELEMENT_Er","ELEMENT_Tm","ELEMENT_Yb","ELEMENT_Lu","ELEMENT_Hf","ELEMENT_Ta","ELEMENT_W","ELEMENT_Re","ELEMENT_Os","ELEMENT_Ir","ELEMENT_Pt","ELEMENT_Au","ELEMENT_Hg","ELEMENT_Tl","ELEMENT_Pb","ELEMENT_Bi","ELEMENT_Po","ELEMENT_At","ELEMENT_Rn","ELEMENT_Fr","ELEMENT_Ra","ELEMENT_Ac","ELEMENT_Th","ELEMENT_Pa","ELEMENT_U","ELEMENT_Np","ELEMENT_Pu","ELEMENT_Am","ELEMENT_Cm","ELEMENT_Bk","ELEMENT_Cf","ELEMENT_Es","ELEMENT_Fm","ELEMENT_Md","ELEMENT_No","ELEMENT_Lr","ELEMENT_Rf","ELEMENT_Db","ELEMENT_Sg","ELEMENT_Bh","ELEMENT_Hs","ELEMENT_Mt","ELEMENT_Ds","ELEMENT_Rg","ELEMENT_Cn","Graph","edge1","edge2","nbrs","indices","labels","props","nbr","fromMolecule","mol","numAtoms","numBonds","bfr","bondFrom","bto","bondTo","fromMoleculeMask","adj","atomAdjList","fromNeighbours","buff","numNodes","numEdges","getEdge","getEdges","getIndex","setIndex","getLabel","setLabel","lbl","getProperty","prp","addNode","hasEdge","node1","node2","addEdge","removeEdge","isolateNode","keepNodesMask","oldsz","newsz","newmap","newnbrs","keepNodesIndex","removeNodesMask","removeNodesIndex","subgraphIndex","nsz","subgraphMask","calculateComponents","cc","high","calculateComponentGroups","grp","calculateRingBlocks","rblk","plen","numVisited","current","back","nextID","calculateRingBlockGroups","cap","findRingsOfSize","num","rings","newRings","findRingsOfSizeMask","recursiveRingFind","calculateBFS","curnum","lsz","calculateGravity","wght","wmod","calculateShortestPath","MAX_SAFE_INTEGER","prev","alt","adjacencyMatrix","distanceMatrix","psize","capacity","fnd","newPath","fp","flip","look","same","ResonanceRemover","resBonds","atomHyd","maxIter","bondOrders","tolerant","bondOrder","perform","atomHExplicit","correctInputMask","processComponent","na","nb","atno","atomicNumber","atomCharge","atomAdjCount","nodes","findBond","optionalH","Molecule","HEXPLICIT_UNKNOWN","atomElement","gravity","bsz","bgrav","bidx","seq","paths","resultCount","definiteMatch","p2","validPath","count1","count2","a1","a2","BONDARTIFACT_EXTRA_RESPATH","BONDARTIFACT_EXTRA_RESRING","BONDARTIFACT_EXTRA_ARENE","BondArtifact","resPaths","resRings","arenes","atomExtra","appendResPath","appendResRing","appendArene","res","atoms","pack","pathify","centre","getPathBlocks","keys","getRingBlocks","getAreneBlocks","getResPaths","getResRings","getArenes","rewriteMolecule","extra","modified","setAtomExtra","ring","arene","atom","harmoniseNumbering","blocks","stashPaths","clear","nextIdentifier","stashRings","stashArenes","createPath","alreadyExists","atomsAsPath","createRing","atomsAsRing","createArene","atomsAsArene","removeArtifact","pick","overlap","removeAll","bits","requireRing","values","areneAtoms","best","bsum","inkeys","DataSheetColumn","ForeignMoleculeTransient","DataSheet","title","description","colData","rowData","numExtens","extData","withRows","inRow","outRow","cloneMask","colMask","rowMask","inclExtn","outCols","outRows","getData","numExtensions","getExtName","getExtType","getExtData","setExtName","setExtType","setExtData","appendExtension","insertExtension","deleteExtension","colName","colType","colDescr","descr","isNull","findColByName","notNull","ct","getMolecule","getString","getExtend","getObject","datum","fromString","getMoleculeClone","getMoleculeBlank","getInteger","getReal","getBoolean","setToNull","setObject","setMolecule","setString","setInteger","setReal","setBoolean","setExtend","isEqualMolecule","isEqualString","isEqualInteger","isEqualReal","isEqualBoolean","appendColumn","insertColumn","deleteColumn","changeColumnName","changeColumnType","newType","oldType","incompatible","parseFloat","toLowerCase","ensureColumn","reorderColumns","order","appendRow","appendRowFrom","srcDS","insertRow","deleteRow","deleteAllRows","moveRowUp","moveRowDown","swapRows","row1","row2","exciseSingleRow","newData","colIsPrimitive","firstColOfType","copyCell","toRow","toCol","fromDS","fromRow","fromCol","convertType","fromType","toType","ft","tt","safeFloat","round","toInt","toReal","ForeignMolecule","noteAromaticAtoms","atomTransient","AtomAromatic","noteAromaticBonds","bondTransient","BondAromatic","noteZeroDativeBonds","BondZeroDative","noteZeroHydrogenBonds","BondZeroHydrogen","markExplicitValence","valence","trans","filter","tr","AtomExplicitValence","setAtomTransient","noteExplicitValence","markSgroupMultiAttach","keyval","idxHigh","AtomSgroupMultiAttach","payload","hasAnySgroupMultiAttach","noteAllSgroupMultiAttach","eq","sgm","markSgroupMultiRepeat","mult","AtomSgroupMultiRepeat","comma","unit","hasAnySgroupMultiRepeat","noteAllSgroupMultiRepeat","mr","markSgroupData","query","AtomSgroupData","hasAnySgroupData","noteAllSgroupData","sd","POLYMERBLOCK_EXTRA_POLYMER","PolymerBlockConnectivity","QueryTypeAtom","QueryTypeBond","PolymerBlockUnit","connect","bondConn","atomName","bondIncl","bondExcl","dup","PolymerBlock","units","blockAtoms","appendBlock","getIDList","getUnit","getUnits","purgeExtraFields","writeUnit","allKeys","removeUnit","pfx","bondExtra","setBondExtra","createUnit","hasPolymerExtensions","getPolymerExtensions","polext","removePolymerExtensions","nattach","HeadToTail","HeadToHead","Random","hasOuter","subBits","in1","in2","bonds","formatBlockAtom","nbonds","names","formatBlockBond","bond","idxConn","incl","codeAtom","codeBond","QueryUtil","hasAnyQueryAtom","hasAnyQueryBond","hasQueryAtom","hasQueryBond","deleteQueryAtom","deleteQueryBond","deleteQueryAtomAll","xtra","deleteQueryBondAll","queryAtomString","queryAtomStringList","queryBondString","setQueryAtom","setQueryAtomList","setQueryBond","queryAtomCharges","parseIntegers","Charges","queryAtomAromatic","parseBoolean","Aromatic","queryAtomUnsaturated","Unsaturated","queryAtomElements","parseStrings","Elements","queryAtomElementsNot","ElementsNot","queryAtomRingSizes","RingSizes","queryAtomRingSizesNot","RingSizesNot","queryAtomRingBlock","RingBlock","queryAtomNumRings","NumRings","queryAtomRingBonds","RingBonds","queryAtomAdjacency","Adjacency","queryAtomBondSums","BondSums","queryAtomValences","Valences","queryAtomHydrogens","Hydrogens","queryAtomIsotope","Isotopes","queryAtomSubFrags","parseMolecules","SubFrags","queryAtomSubFragsNot","SubFragsNot","queryBondRingSizes","queryBondRingSizesNot","queryBondRingBlock","queryBondNumRings","queryBondOrders","Orders","setQueryAtomCharges","formatIntegers","setQueryAtomAromatic","formatBoolean","setQueryAtomUnsaturated","setQueryAtomElements","formatStrings","setQueryAtomElementsNot","setQueryAtomRingSizes","setQueryAtomRingSizesNot","setQueryAtomRingBlock","setQueryAtomNumRings","setQueryAtomRingBonds","setQueryAtomAdjacency","setQueryAtomBondSums","setQueryAtomValences","setQueryAtomHydrogens","setQueryAtomIsotope","setQueryAtomSubFrags","formatMolecules","setQueryAtomSubFragsNot","setQueryBondRingSizes","setQueryBondRingSizesNot","setQueryBondRingBlock","setQueryBondNumRings","setQueryBondOrders","strlist","intlist","mols","molstr","MolUtil","STEREOGROUP_EXTRA_RACEMIC","STEREOGROUP_EXTRA_RELATIVE","StereoGroup","hasStereoGroups","chiRac","chiRel","atomHasWedge","getRacemicGroups","getRelativeGroups","getRacemicAtoms","getRelativeAtoms","getRacemicGroupAtoms","getRelativeGroupAtoms","groups","stash","createRacemic","createRelative","removeRacemic","removeRelative","is3D","hasWedge","atomAdjBonds","bt","bondType","BONDTYPE_UNKNOWN","BONDTYPE_INCLINED","BONDTYPE_DECLINED","MDLMOL_VALENCE","MDLMOLReader","strData","parseHeader","parseExtended","allowV3000","considerRescale","keepAromatic","keepParity","keepQuery","molName","overallStereoAbsolute","groupAttachAny","groupAttachAll","groupStereoAbsolute","groupStereoRacemic","groupStereoRelative","groupLinkNodes","groupMixtures","scsrTemplates","parseCTAB","nextLine","keepTransient","line","version","parseV3000","trim","z","chg","stereo","hyd","mapnum","addAtom","setAtomZ","setIs3D","setAtomMapNum","AtomChiralMDLOdd","AtomChiralMDLEven","AtomChiralMDLRacemic","BONDTYPE_NORMAL","addBond","appendBondTransient","setBondTransient","superatoms","mixtures","anum","setAtomElement","stype","index","bracketType","mix","sup","connectType","minRep","maxRep","nbr1","nbr2","logic","charAt","elements","setAtomCharge","setAtomUnpaired","setAtomIsotope","setAtomHExplicit","setBondOrder","countRingBonds","countSubstitutions","postFix","artifacts","applyPolymerBlock","applySuperAtom","hasAbbrev","AtomSCSRClass","atomZ","options","hcount","atomHydrogens","usedValence","unp","atomUnpaired","CoordUtil","normaliseBondDistances","derez","Section","inCTAB","inTemplate","section","lineCounts","lineAtom","lineBond","lineColl","lineSgroup","asdrawnRBC","asdrawnSUB","templateBlocks","ERRPFX","fullLine","Atom","Bond","Coll","SGroup","splitWithQuotes","counts","atomBits","bondBits","parseQueryAtomList","spin","appendAtomTransient","AtomSCSRSeqID","attch","unpackStrings","AtomSCSRAttchOrd","rbc","endpts","attach","dir","setBondType","unpackList","stereoGroup","withoutQuotes","templateClass","natReplace","pts","attachPoints","parseV3000Template","label","not","residual","mod","abvAtom","convertToAbbrevIndex","subsumed","poly","b1","b2","b3","b4","header","mdl","segments","seg","depth","quote","ch","bit","bondInRing","MDLSDFReader","ds","upcastColumns","parseStream","upcastStringColumns","rn","str1","str3","cn","allnull","allreal","allint","allbool","lc","int","VPFX","MDLMOLWriter","includeHeader","includeCounts","includeEnd","enhancedFields","chargeSeparate","abbrevSgroups","polymerBlocks","sgroups","write","writeCTAB","writeV3000","writeCTAB3000","writeEither","triggered","getResult","hasAnyAbbrev","partialAbbrevExpansion","expandAbbrevs","prepareSgroups","atomList1","atomList2","intrpad","elementAtomicNumber","pad","chgidx","chgval","radidx","radval","isoidx","isoval","rgpidx","rgpval","hydidx","hydval","zboidx","zboval","rbcidx","rbcval","subidx","subval","unsidx","unsval","atomX","atomY","rpad","toFixed","atomMapNum","qhyd","mdlValence","atomIsotope","ISOTOPE_NATURAL","qrbc","qsub","quns","maskArom","qbond","writeMBlockPair","writeMBlockFlat","inSgroup","sg","sidx","encodePolymerBlocks","token","writeMBlockFlatIdxFirst","zeroVal","marked","chgmod","bondSum","nativeVal","optVal","frag","getAbbrev","clearAbbrev","setAbbrev","expandOneAbbrev","ma","dat","bestIdx","bestSize","skip","polymers","fl1","fl2","bcrs","sgroupText","populateV3000Sgroups","qel","isotope","packV3000Strings","maskHBond","collections","racidx","relidx","packV3000List","populateSCSRTemplates","sid","txt","defn","tmdl","molfile","trimEnd","MDLSDFWriter","colMol","wtr","escape","charCodeAt","writeKeyVals","keyvals","multiline","kv","readNextChunk","term","mandatory","end","escaped","MoleculeStream","readUnknown","jsonStr","readNative","readMDLMOL","readNativeLegacy","MSG_PREMATURE","MSG_UNEXPECTED","parseIntHard","parseFloatHard","applyAtomProperty","appendAtomExtra","applyBondProperty","appendBondExtra","lnum","chunkEl","chunkX","chunkY","chunk","chunkFrom","chunkTo","chunkOrder","hdr","skUnescape","frto","writeNative","formatV2Elements","writeNativeLegacy","roundedNumber","iso","typ","charge","unpaired","hy","skEscape","skEncodeExtra","writeMDLMOL","fromCharCode","code","toUpperCase","hasZCoord","hasTransient","graph","graphBond","ringID","compID","ring3","ring4","ring5","ring6","ring7","base","trashTransient","getAtom","element","hExplicit","mapNum","transient","getBond","to","bondFromTo","trashGraph","setAtomPos","setAtomX","setAtomY","transi","swapAtoms","setBondFrom","setBondTo","setBondFromTo","deleteAtomAndBonds","deleteBond","HYVALENCE_EL","HYVALENCE_VAL","adjBonds","bondOther","atomExplicit","atomRingBlock","buildGraph","buildRingID","r1","r2","atomConnComp","buildConnComp","boundary","tx1","tx2","getAtomCloned","getBondCloned","setAtom","curr","setBond","modifyAtoms","lambda","modifyAtomsIndices","atomIndices","modifyBonds","modifyBondsIndices","bondIndices","findAtomMatch","findBondMatch","findAllAtoms","findAllBonds","mapAtoms","mapBonds","mapAtomsIndices","mapBondsIndices","comp","IDEALBOND","PREFIX_EXTRA","PREFIX_TRANSIENT","atomAtPoint","tolerance","OVERLAP_THRESHOLD","tolsq","sketchEquivalent","mol1","mol2","DEFAULT_EQUIV_TOLERANCE","box1","box2","mx1","arrayAtomX","my1","arrayAtomY","mx2","my2","bestdsq","j1","j2","sketchMappable","atomBondAngles","bndang","overlapsAtom","overlappingAtomMask","thresh","omask","threshSQ","d1","overlappingAtomList","congestionPoint","approach","score","congestionMolecule","mx","my","translateMolecule","ox","oy","rotateMolecule","rotateBond","rotateAtoms","angleNeighbours","mergeAtoms","oldN","newN","centreMolecule","meanX","meanY","deltaX","deltaY","mirrorImage","alignOrientFlip","x0","y0","deltaA","deltaB","dthA","dthB","scoreA","scoreB","atomIsWeirdLinear","Geometry","OVERLAP_THRESHOLD_SQ","SketchUtil","placeNewAtom","placeNewFragment","dirX","dirY","mbox","fbox","vx","vy","fragPosScore","iscore","rangeX","rangeY","mergeOverlappingAtoms","mergeFragmentsDiv","chopmask","remap","div1","div2","exotic","removeDuplicateBonds","mergeFragmentsMask","matchAngleGeometry","geom","GEOM_ANGLES","mtheta","hit","gotall","got","primeDirections","angles","calculateNewBondAngles","exits","exitVectors","nn","guessAtomGeometry","mapAngleSubstituent","atblk","elrow","adjBO","adjAN","pri","allSingle","Linear","Octa1","Octa2","Trigonal","SqPlan","Tetra1","Tetra2","gtheta","asz","gsz","vac","gang","mcount","refitAtomGeometry","inRing","allInRing","bestAng","ww","calculateWalkWeight","newAng","bdiff","diff","ringClash","switchAtomGeometry","dst","geoms","bestAtom","bestX","bestY","curth","pickAtomsToConnect","aidx","AUTO_DSQ","bestDSQ","bestA1","bestA2","conn","pickNewAtomDirection","bestTheta","joinOverlappingAtoms","groupX","groupY","adjb","keepmask","moveToEdge","gotS","gotN","sx1","sy1","sx2","sy2","nx1","ny1","nx2","ny2","SEPTEST","placeAdditionalHydrogens","numH","th3","th4","allViableDirections","proposeNewRing","rsz","snap","positionSimpleRing","proposeAtomRing","thsnap","angs","bestDelta","proposeBondRing","sign","brad","guidelineSprouts","sprouts","ords","sprout","orders","orBlank","attidx","ABBREV_ATTACHMENT","validateAbbrevs","convertToAbbrev","srcmask","abbrevName","molidx","junction","polymerExtra","fragidx","maskmol","maskfrag","nadj","newmol","newatom","alignCoords","expandedAbbrevs","expandOneAbbrevFrag","connBond","connType","vx1","vy1","vx2","vy2","invidx","subgraphWithAttachments","xmask","xmol","boxm","boxf","deleteAtoms","componentList","getAtomSides","oldmap","ccmax","grps","getBondSides","bf","arrayAtomMapNum","molecularFormula","punctuation","puncEnter","puncExit","puncEnterSuper","puncExitSuper","countC","countH","formula","molecularWeight","mw","an","bpri","el1","el2","limit1","limit2","boB1A1","boB1A2","boB2A1","boB2A2","bad1","bad2","exotic1","exotic2","ccsz","wn","totalHydrogens","hc","stripHydrogens","force","boringHydrogen","createHydrogens","position","atomVec3","atomOxidationState","nonMetal","oxstate","bo","chalco","oxidationStateText","absox","TEMPLATE_ATTACHMENT","InChIDelegate","generate","execLocation","inchi","InChI","super","available","inchiPath","X_OK","hasExecutable","setExecutable","isAvailable","nativeMolfileToInChI","writer","mdlmol","inchiKey","proc","raw","spawnSync","input","stdout","log","MainPanel","root","clientHeight","onResize","menuAction","loadFile","filename","NewMixture","openNewWindow","NewCollection","Open","actionFileOpen","Save","actionFileSave","SaveAs","actionFileSaveAs","customMenuAction","StandardUnits","ClipboardProxyHandler","copyEvent","andCut","proxy","pasteEvent","ClipboardProxy","handlers","triggerBackupPaste","pushHandler","popHandler","currentHandler","triggerCopy","execCommand","triggerPaste","setImage","blob","canSetHTML","canAlwaysGet","downloadString","fn","PAIR_UNIT_NAMES","pc","pcWV","pcWW","pcVV","pcMM","ratio","mol_L","mmol_L","umol_L","nmol_L","pmol_L","g_L","mg_L","ug_L","mg_mL","mol_kg","kg","mg","ug","ng","L","mL","uL","nL","mmol","umol","nmol","ppm","ppb","PAIR_UNIT_MINCHI","Units","setup","pair","uri","STANDARD_LIST","COMMON_NAMES","URI_TO_NAME","NAME_TO_URI","URI_TO_MINCHI","standardList","commonNames","uriToName","nameToURI","convertToMInChI","mnemonic","DotPathBond","DotPathCharge","DotPath","calculate","maskBlock","getBondOrders","fract","numer","denom","getBondClasses","classes","bcls","getChargeClasses","ccls","getAggregateCharges","total","nonsingle","pibonded","metalbonded","bondsum","blk1","blk2","impliedPi","adjpi","maskMaybe","COULD_BLOCK","ACIDS","BASES","hasMetal","amask","totalHave","totalWant","others","electrons","Stereochemistry","priority","chiralTetra","STEREO_NONE","cistransBond","squarePlanar","isH","buildPriority","buildTetraChirality","buildBondCisTrans","buildPlanarCisTrans","buildOctaChirality","atomPriority","atomTetraChirality","bondSideStereo","atomPlanarStereo","getPriorities","getAtomTetraChiral","getBondSideStereo","rubricTetrahedral","numShort","numWedges","th0","one","two","xx","yy","zz","rubricSquarePlanar","ninc","ndec","v0","v3","v4","d2","d3","d4","MIN_ANGLE","MAX_ANGLE","th12","th23","th34","th41","rubricBipyrimidal","atom2","atom3","atom4","atom5","ANGLE_OPPOSITE","v5","atom1","v45","cross","rubricOctahedral","slots","bestOpposite","axial","bestOrthogonal","bestOrient","rubric","rubricBondSides","nfr","nto","adj1","adj2","f1","f2","t1","t2","vfr","vto","vbond","vf1","vt1","THRESHSQ","xf1","xt1","xf1N","keepF1T1","keepF2T1","keepF1T2","keepF2T2","vf2","vt2","xf2","xt2","xf2N","haswedge","skip_atom","STEREO_UNKNOWN","parity","STEREO_NEG","STEREO_POS","ringMask","skip_bond","isBondAromatic","pf1","pf2","pt1","pt2","cipgr","anyActualH","prigr","cip","sortAndGroup","nextpri","repartitioned","cmp","uset","STEREO_BROKEN","RUBRIC_EQUIV_TETRA","RUBRIC_EQUIV_SIDES","RUBRIC_EQUIV_SQUARE","RUBRIC_EQUIV_BIPY","RUBRIC_EQUIV_OCTA","MetaMolecule","atomArom","bondArom","rubricTetra","rubricSquare","rubricBipy","rubricOcta","rubricSides","hash","heavyHash","uniqueElements","dots","piAtom","calculateStrictAromaticity","nr","ensurePiAtoms","anyChange","phase1","phase2","calculateRelaxedAromaticity","exocyclic","rblk1","rblk2","rng","valid","arom","calculateStereoRubric","adjc","adjc1","hc1","adjc2","hc2","removeHydrogens","atomMask","bondMask","atomMap","calculateSkeletonHash","skeletonHash","calculateHeavyHash","anyH","getSkeletonHash","hvy","isAtomAromatic","bondOrderArom","getAtomAromaticity","getBondAromaticity","getHeavyHash","getDotPath","getUniqueElements","equivalentTo","timeout","isomorphMatch","uniq1","uniq2","createRubric","createStrict","createStrictRubric","createRelaxed","createRelaxedRubric","crc_table","BOOT_CRC","start_crc","feed_crc","crc","byte","end_crc","CircularFingerprints","kind","hookApplyNewFP","hookConsiderNewFP","resolvedChiral","atomGroup","fplist","atomAdj","bondAdj","make_crc_table","initialIdentityECFP","applyNewFP","hashCode","iteration","centralAtom","niter","newident","circularIterate","growAtoms","considerNewFP","circ","numFP","getFP","getFingerprints","getUniqueHashes","hashes","getFoldedHashes","maxBits","andBits","tanimoto","hash1","hash2","shared","nheavy","nhydr","degree","inring","ru","par","newFP","lookFP","CLASS_ECFP0","CLASS_ECFP2","CLASS_ECFP4","CLASS_ECFP6","DataSheetStream","readXML","summary","extRoot","extList","ext","colList","rowidx","colidx","readJSON","json","writeXML","extension","column","cell","txtNode","writeJSON","nrow","ncol","doConvert","TEMPLATE_SOURCE","AbbrevContainer","abbrevs","getTemplateKeys","getTemplateData","needsSetup","main","setupData","dsstr","colAbbrev","attcount","firstConn","submitAbbreviation","getAbbrevs","infrag","promote","submitFragment","submitMolecule","inmol","substituteAbbrevName","fragExp","fragMF","fragFP","abbrev","afragExp","afragFP","search","formatAbbrevLabel","abv","nameHTML","nameSearch","pre","mid","post","MetalLigate","metalAtom","ligandAttach","ligands","lig","anyAttached","makeLigandBond","otherLigands","otherTheta","avgTheta","orientLigand","l1","l2","arrangeLigandsFree","arrangeLigandsRange","otherOrder","extent","batch","resolveClashes","ligAtom","mchg","lchg","idxAttach","lx","ly","molExtent","weight","bestLX","bestLY","attTheta","attDist","attDX","attDY","orderAttach","srcX","srcY","dstX","dstY","dtheta","refTheta","refSpan","bounded","thetaMin","thetaSpan","ligandSpan","theta1","theta2","determineThetaBounds","rotTheta","bestMin","bestMax","ablk","bblk","bumpDX","bumpDY","invDist","CLOSE_SQ","tainted","outer","FusionPermutation","attdist","guided","bridged","scoreModifier","chainSelect","TemplateFusion","templ","numAttach","withGuideOnly","guidetempl","guideidx","guideadj","timeLimit","artif1","artif2","poly1","poly2","huntForGuides","permuteNone","oldmol","oldbox","newbox","ROTN","rotmol","display","srcidx","sourceIndex","permuteAtom","timeStart","getTime","newperms","fliptempl","composeGuidedOne","flipmol","composeDirectOne","composeBridge","affixRawPermutations","permuteBond","composeGuidedTwo","composeDirectTwo","permuteMulti","composeGuidedMulti","composeDirectMulti","o1","otheta","ntheta","ocurrent","ncurrent","scoreMod","bfs","pmol","osz","asMask","temidx","removeExtraGuides","o2","oth","nth","oidx","orad","nidx","nrad","lowbfs","busy1","busy2","att","gidx","gx","gy","homoPenalty","oel","nel","RESERVED_GUIDESYMBOL","sel","padj","snapToGuide","isGuideOnTerminal","nudgenew","cx1","cy1","cx2","cy2","midx","tidx","gatom","closeDSQ","npsz","umask","numKeep","scorePermutation","uscore","uidx","perm","tmol","tunion","contained","ai","aj","bo1","bo2","wantTheta","dx1","dy1","dx2","dy2","totalBO","mmask","tfr","tto","tn","wmol","imask","ActivityType","AbsType","MoleculeActivity","activity","param","owner","toClipboard","output","currentAtom","currentBond","selectedMask","subjectMask","subjectLength","subjectIndex","hasSelected","setOwner","evaluate","execute","Delete","execDelete","Clear","execClear","Copy","execCopy","Cut","SelectAll","execSelectAll","SelectNone","SelectPrevComp","execSelectComp","SelectNextComp","SelectSide","execSelectSide","SelectGrow","execSelectGrow","SelectShrink","execSelectShrink","SelectChain","execSelectChain","SelectSmRing","execSelectSmRing","SelectRingBlk","execSelectRingBlk","SelectCurElement","execSelectCurElement","SelectToggle","execSelectToggle","SelectUnCurrent","execSelectUnCurrent","Element","execElement","positionX","positionY","keepAbbrev","Charge","execCharge","Connect","execConnect","Disconnect","execDisconnect","execMetalLigate","BondOrder","execBond","BondType","BondGeom","execBondGeom","BondAtom","execBondAtom","BondSwitch","execBondSwitch","BondRotate","execBondRotate","BondAddTwo","execBondAddTwo","BondInsert","execBondInsert","Join","execJoin","Nudge","execNudge","NudgeLots","NudgeFar","execNudgeFar","Flip","execFlip","axis","Scale","execScale","Rotate","execRotate","BondDist","execBondDist","AlignAngle","execAlignAngle","angle","AlignRegular","execAlignRegular","AdjustTorsion","execAdjustTorsion","Move","execMove","refAtom","Ring","execRing","ringX","ringY","aromatic","execTemplateFusion","fragNative","setPermutations","permutations","AbbrevTempl","execAbbrevTempl","AbbrevGroup","execAbbrevGroup","AbbrevFormula","execAbbrevFormula","AbbrevClear","execAbbrevClear","AbbrevExpand","execAbbrevExpand","BondArtifactPath","BondArtifactRing","BondArtifactArene","BondArtifactClear","execBondArtifact","execPolymerBlock","AddHydrogens","execAddHydrogens","RemoveHydrogens","execRemoveHydrogens","QueryClear","execQueryClear","QueryCopy","execQueryCopy","QueryPaste","execQueryPaste","QuerySetAtom","execQuerySetAtom","QuerySetBond","execQuerySetBond","QueryBondAny","execQueryBondAny","SproutDirection","execSproutDirection","finish","setState","errmsg","showMessage","requireSubject","zapSubject","withCut","performCopy","all","cclist","pickSelectedGroup","requireCurrent","sides","requireSelected","any","maxRB","gotRB","rb","applyQuery","NON_METALS","TRANSITION_METALS","MAIN_GROUPS","zap","killmask","ligAtoms","performBondNew","ccmol","oneComp","performBondChange","performBondGeomAtom","performBondGeomBond","altmol","ac1","ac2","side","mobileSide","baseAng","ang1","ang2","alink","_","fragmask","fusion","isVertical","invSz","connAtoms","curDist","sel1","isSelected","sel2","a3","group1","group3","subj","outmol","pi","checkAbbreviationReady","fixed","requireAtoms","artif","subject","curAtom","removePolymerBlock","performPolymerBlock","selmask","qmol","qterms","aterms","bterms","angleOptions","newAtom","bscore","switchType","stereoType","newang","subjmask","disqualTerminal","side1","side2","weight1","weight2","polymer","NormMixture","mixture","notes","analyse","origins","getOrigins","compList","origin","getComponent","note","contents","enumerateStereo","stereoEnum","childIndexes","sumType","None","sumAmount1","sumAmount2","sumError","toAbsoluteUnits","amount","childType","idxOne","Mass","Volume","Moles","concQuantity","concError","concUnits","concRelation","relation","findNote","splitMolecule","activ","emols","quantity","Mixture","mixfile","mixfileVersion","fromComponent","isComponentEmpty","BITS","hasQuantity","recursiveEqual","deserialise","serialise","beautify","serialiseComponent","getParentComponent","getComponents","nodeEnum","setComponent","deleteComponent","prependBefore","subcomp","SKIP","splitOrigin","regex","regpad","padding","comp1","comp2","dict1","dict2","keys1","keys2","MInChISegment","RenderMnemonicType","BLineType","ExportMInChI","minchi","segment","norm","fillInChI","formulate","modmix","useRatio","inchiList","mcomp","inchiFrag","PFX","builder","assembleContents","appendSegment","Header","Component","layerN","Hierarchy","layerG","Concentration","getSegment","makeLongHashKey","makeShortHashKey","LETTERS","crclist","feedCharacter","letter","NCRC","trunc","formatConcentration","mantissa","exp","determineExponent","unitURI","scaled","tree","subComp","subTree","conc","shaveBeard","minval","log10","ExportSDFile","colHier","colConc","appendComponent","subseq","RenderPolicy","pointScale","resolutionDPI","fontSize","lineSize","bondSep","defaultPadding","atomCols","defaultBlackOnWhite","pixPerAng","policy","defaultWhiteOnBlack","defaultColourOnWhite","defaultColourOnBlack","defaultPrintedPublication","RenderEffects","colAtom","colBond","dottedRectOutline","dottedBondCross","hideAtoms","hideBonds","atomFrameDotSz","atomFrameCol","atomCircleSz","atomCircleCol","atomDecoText","atomDecoCol","atomDecoSize","bondDecoText","bondDecoCol","bondDecoSize","overlapAtoms","FontData","UNITS_PER_EM","INV_UNITS_PER_EM","PANOSE_1","ASCENT","DESCENT","MISSING_HORZ","MISSING_DATA","ASCENT_FUDGE","UNICODE","HORIZ_ADV_X","GLYPH_DATA","OUTLINE_X","OUTLINE_Y","KERN_C1","KERN_C2","KERN_K","pathCache","pathMissing","ctxReference","getKerning","ch1","ch2","measureText","font","measureWidths","xpos","getRawGlyph","getGlyphPath","getMissingPath","getOutlineX","getOutlineY","initNativeFont","canvas","OffscreenCanvas","getContext","measureTextNative","family","opt","save","bold","italic","metrics","restore","FUDGE","OutlineMeasurement","offsetX","offsetY","invScale","angToX","angToY","xToAng","yToAng","yIsUp","PseudoEmbedding","crossings","calculateCrossings","maskCross","bond1","bond2","higher","crossRblk","maskComp","connectMaskedComponents","ccgrp","embedComponent","gmol","maskNever","newZ","seedFromInternalWedges","seedFromExternalWedges","seedFromPerspective","seedFromDensity","ucount","normaliseHeights","expandOutward","ncount","updateCrossing","success","avgdist","maxdist","highIdx","highCongest","congest","prevZ","mark","bfr1","bto1","bfr2","bto2","idx3","idx4","x1a","y1a","x1b","y1b","x2a","y2a","x2b","y2b","xy","ext1","ext2","z1a","z1b","z2a","z1","z2","FitRotatedEllipse","margin","lookupCache","setupParameters","currentScore","calculateScore","coarseDiscovery","fineImprovement","saveCache","getSpline","cacheMap","cacheVal","psz","invpsz","ptheta","pdist","buffX","buffY","rotatedScore","rtheta","scx","scy","devx","devy","deltaD","deltaR","DELTA_OPTIONS","dw","dh","bestCX","bestCY","bestRW","bestRH","newCX","newCY","newRW","newRH","newScore","REDUCTION","reduc","dCX","dCY","dRW","dRH","closestDSQ","eth","ii","proxSum","ArrangeMolecule","guestimateSize","FONT_CORRECT","numsym","plusH","aw","ah","measure","effects","points","space","unsplitLines","wantArtifacts","wantCrossings","artifactCharge","artifactUnpaired","artifactFract","getMeasure","getPolicy","getEffects","getScale","setWantArtifacts","want","getArtifacts","setArtifacts","setWantCrossings","arrange","bondSepPix","lineSizePix","fontSizePix","ymul","artmask","setupBondOrders","fsz","overCol","wad","PADDING","computeSpacePoint","processLabel","bdbl","xy1","shrinkBond","backOffAtom","xy2","ensureMinimumBondLength","qbonds","qtxt","oxy","orthogonalDelta","lx1","ly1","lx2","ly2","bnum","Dotted","computeSpaceLine","rotation","ltype","Normal","Inclined","Declined","Unknown","DotDir","IncDouble","IncTriple","IncQuadruple","invD","orderedRingList","processDoubleBond","priorityDoubleSubstit","placeHydrogen","isostr","placeAdjunct","annotateAtom","annotateBond","spc","createCurvedPath","delocalisedAnnotation","createCircularRing","isRing","alkeneLike","createBondCentroid","emb","resolveLineCrossings","processPolymerUnit","numPoints","getPoint","getPoints","numLines","getLine","getLines","getUnsplitLines","numRings","getRing","getRings","numPaths","getPath","getPaths","numSpace","getSpace","getSpaces","offsetEverything","offsetOrigin","bounds","determineBoundary","scaleEverything","determineBoundaryBox","squeezeInto","bw","bh","downScale","limitBounds","monochromate","spatialCongestion","delocalise","fractional","angdir","zeroBonds","zpt","bestDX","bestDY","angThresh","shorted","DELTA","dang","viol","countPolyViolations","shortCircuit","ibar","ibrace","chunks","primary","refchunk","bpos","isPrimary","chunkw","tw","bump","xbump","ybump","backOffAtomDelta","d12","invD12","SIZE_ORDER","nring","ringsz","ringbusy","ringscore","ringorder","resbcount","maxbcount","sc","btheta","countFLeft","countFRight","countTLeft","countTRight","idxFLeft","idxFRight","idxTLeft","idxTRight","noshift","ispri","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","bumpAtomPosition","delta1","delta2","delta3","delta4","adjustBondPosition","lt","fussy","SSFRACT","GLYPH_H","emscale","outlineX","outlineY","firstEMW","emw","chp","extraX","extraY","qh","emdx","emdy","srcWAD","RIGHTLEFT","LEFTRIGHT","UPDOWN","DOWNUP","quad","LEFTIES","allLeft","allRight","allUp","allDown","magPX","magPY","bestExt","anyNoClash","subFsz","nglyphs","spaceSubset","subset","hits","nspc","sr","ssz","nf","nt","sumFrom","sumTo","ta","minExt","stepsz","angsz","limX","limY","subSpace","bth","boxOverlaps","pointmask","linemask","bondHigher","bondLower","TYPES","stashOriginals","assign","linesHigher","linesLower","ix","iy","pt","isRegular","regDist","NaN","FRACT","pb","mdist","fit","extAtom","symbol","EXT","capA","ncross1","ncross2","fr1","fr2","capB","score1","score2","splineInterpolate","qx1","qy1","qx2","qy2","allUnits","processPolymerUnitPair","brackets","bracket","nestings","u1","u2","nestOrder","nestCount","tagidx","isLinear","isOuter","ym","bsz1","bsz2","BASE_LINE","BASE_TEXT","px2","py2","px3","py3","px1","py1","px4","py4","line1","line2","line3","ypos","dsq1","drawText","xmin","ymin","idxN","idxD2","idxD1","globalInstance","ONTOLOGY_SOURCE","OntologyTree","getOntologyKeys","getOntologyData","roots","mapTerms","alreadyLoaded","init","loadFromString","getRoots","hasTerm","getBranch","getBranchList","accumulate","branch","loadContent","termList","debugString","emit","repeat","SquarePackingSpring","ArrangeMixtureLineSource","TextAlign","PrimClass","SquarePacking","packSize","boxes","hspace","vspace","layout","wantRatio","candidates","cand","idxStart","springs","Weak","processCandidate","Strong","Medium","outline","placed","placeAbove","spring","segs","newsegs","mergeSegmentAbove","placeBelow","mergeSegmentBelow","hiX","loY","hiY","merge","seg1","seg2","ArrangeMixture","components","minBoxSize","showCollapsors","collapsedBranches","packBranches","includeIdentifiers","callbackMoleculeSize","nameFontSize","limitStructW","limitStructH","hardwrapName","softwrapName","createComponents","layoutSubComponents","contractComponents","molLayout","molBox","scaleComponents","modScale","nameBox","collapseBox","findComponent","formatQuantity","mixcomp","prec","rel","formatNormQuantity","examineBranch","parentIdx","isCollapsed","subOrigin","molsz","nameLines","wrapSplitName","Name","qline","Quantity","identifiers","truncateEllipsis","Identifier","metadata","metaString","Meta","minsz","gap","wh","wholeBranch","branchBlock","branchBox","totalWidth","totalHeight","bound","cbox","sq","allChildren","pidx","boundX","idxInside","idxOutside","ellw","keep","pixelCoord","SpoolSVG","prettyPrint","spool","whole","inc","dec","MetaVector","types","prims","density","charMissing","lowX","lowY","highX","highY","charMask","primClass","Text","colour","thickness","typeidx","findOrCreateType","updateBounds","drawRect","edgeCol","fillCol","NOCOLOUR","Rect","drawOval","drawPath","xpoints","ypoints","ctrlFlags","isClosed","hardEdge","Path","closed","drawPoly","align","direction","Left","Baseline","Right","Middle","Top","Bottom","mscale","rx1","ry1","rx2","ry2","drawTextNative","fontFamily","TextNative","boundLowX","boundLowY","boundHighX","boundHighY","getBounds","transformPrimitives","transformIntoBox","nw","nh","scaleExtent","maxWidth","maxHeight","sw","sh","swsh","renderInto","renderCanvas","clearFirst","clearRect","renderContext","typeObj","setupTypeLine","setupTypeRect","setupTypeOval","setupTypePath","setupTypeText","setupTypeTextNative","renderLine","renderRect","renderOval","renderPath","renderText","renderTextNative","createSVG","withXlink","renderSVG","svgLine1","svgLineN","svgRect1","svgRectN","svgOval1","svgOvalN","svgPath","svgText","svgTextNative","into","strokeStyle","lineWidth","lineCap","fillStyle","fillRect","strokeRect","ellipse","layer","bezierCurveTo","lineJoin","translate","fillText","defineSVGStroke","defineSVGFill","rects","ovals","shape","typeDef","every","DrawMolecule","vg","mnemonics","getMetaVector","getLayout","draw","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","drawUnderEffects","drawFusedWedge","Artifact","drawBondInclined","drawBondDeclined","drawBondUnknown","drawBondDotted","drawBondIncMulti","fg","bez","Centre","drawOverEffects","wdots","hdots","wspc","hspc","Effect","xdots","ydots","invX","invY","bcount","ixy1","ixy2","inv1","other1","other2","dth1","diff1","dth2","diff2","diff3","terminalPoints","ty1","ty2","outerX","outerY","innerX","innerY","nsteps","invSteps","holdout","radius","nudge","DrawMixture","hoverIndex","activeIndex","selectedIndex","callbackDrawMolecule","callbackDrawNameLine","drawConnection","drawComponent","xm","yd","bg","Dialog","minPortionWidth","maxPortionWidth","maximumWidth","maximumHeight","minPortionHeight","maxPortionHeight","topMargin","allowScroller","callbackClose","callbackShown","onClose","onShown","open","domObscureBackground","close","domObscureForeground","domPanelBoundary","divOuter","tdiv","domTitle","bdiv","domBody","ttlTable","tdTitle","tdButtons","domTitleButtons","domClose","populate","repositionSize","bodyDOM","buttonsDOM","docW","dlgW","Widget","contentDOM","domContent","tagType","ButtonViewPosition","ButtonView","parentX","parentY","parentWidth","parentHeight","idealSize","selectedButton","highlightButton","maxButtonColumns","maxButtonRows","border","buttonColNorm1","buttonColNorm2","buttonColActv1","buttonColActv2","buttonColSel1","buttonColSel2","hasBigButtons","prefabImgSize","gripHeight","gripWidth","isRaised","outPadding","inPadding","isMacLike","navigator","platform","setParentSize","applyOffset","redraw","topBank","stackSize","layoutButtons","canvasStyle","mouseClick","mouseDoubleClick","preventDefault","mouseDown","mouseUp","mouseOver","mouseOut","mouseMove","pushBank","bank","buttonView","isSubLevel","replaceCanvas","popBank","bankClosed","refreshBank","getSelectedButton","setSelectedButton","cycleSelected","raiseBank","lowerBank","getHasBigButtons","setHasBigButtons","withinOutline","gw","hg","gh","gripSize","sizeForButtons","nbtn","removeDisplayButtons","addGripButton","buttons","popWidth","popHeight","bestLayout","maxSlotHeight","minSlotHeight","slotWidth","layoutMaxHeight","scoreLayout","maxSlotWidth","minSlotWidth","layoutMaxWidth","ncols","nrows","imgDOM","helpSpan","buttonFromID","col1","col2","grad","createLinearGradient","addColorStop","helpText","keyText","imageFN","oldWidth","oldHeight","metavec","isSubMenu","path1","path2","inset","delayedRedraw","displayFromID","uw","uh","slot","slotHeight","pickButtonIndex","pickButtonID","triggerButton","hitButton","stopImmediatePropagation","stopPropagation","ButtonBank","claimKey","matchKey","mshift","mctrl","malt","mmeta","mkey","shiftKey","ctrlKey","altKey","metaKey","ELEMENTS_NOBLE","ELEMENTS_S_BLOCK","ELEMENTS_P_BLOCK","ELEMENTS_D_BLOCK","ELEMENTS_F_BLOCK","ELEMENTS_ABBREV","CommandType","COMMANDS_MAIN","COMMANDS_ATOM","COMMANDS_BOND","COMMANDS_SELECT","COMMANDS_MOVE","CommandBank","cmdType","Main","Select","Abbrev","populateElements","SBlock","PBlock","DBlock","FBlock","Noble","actv","canUndo","performUndo","canRedo","performRedo","performPaste","autoScale","zoom","alert","getState","listItems","ContextSketch","state","sketcher","proxyClip","menu","accelerator","click","editCurrent","maybeAppend","rotateSub","rotateSubMenu","subMenu","querySub","querySubMenu","molact","DraggingTool","DrawCanvasDecoration","GeomWidgetType","GeomWidgetSelType","DrawCanvas","viewOpt","decoration","showOxState","showQuery","showArtifacts","borderRadius","canvasUnder","canvasMolecule","canvasOver","divMessage","guidelines","filthy","dragType","hoverAtom","hoverBond","opAtom","opBond","opBudged","opShift","opCtrl","opAlt","lassoX","lassoY","lassoMask","clickX","clickY","mouseX","mouseY","dragGuides","templatePerms","currentPerm","fusionBank","cursorWatermark","cursorDX","cursorDY","toolAtomSymbol","toolBondOrder","toolBondType","toolChargeDelta","toolRingArom","toolRingFreeform","toolRotateIncr","redrawCacheKey","abbrevPolicy","divInfo","getSelected","getLassoed","scaleToAng","angToScale","layoutMolecule","sketchEffects","redrawMetaVector","abbrevMol","orientAbbreviation","redrawInfo","redrawUnder","redrawMolecule","redrawOver","cacheKey","divText","HOVER_COL","CURRENT_COL","CURRENT_BORD","SELECT_COL","LASSO_COL","drawPolymerUnit","drawAtomShade","drawBondShade","sfr","sto","lfr","lto","lw","sourceX","sourceY","destX","destY","determineFauxRing","Lasso","Erasor","erasing","determineDragTheta","subjectAtoms","determineMoveDelta","drawOriginatingBond","drawQueryFeatures","allIfNone","useOpAtom","updateLasso","calculateLassoMask","borderCol","anghalo","minRad","invNB","CIRC","snapTo","snapAtom","fh","annots","ap","annot","NPT","THPT","extBonds","inAtoms","outAtoms","flag1","flag2","npWidth","npHeight","selfLinks","innerLinks","outerLinks","isCapped","isExt","anames","setLineDash","pickObject","APPROACH","pickObjectCanvas","limitDist","bestItem","noAtoms","noBonds","chi","MappingNumber","AtomIndex","abbrevAtom","OptionList","htmlLabels","selidx","buttonDiv","auxCell","callbackSelect","composeCSS","getSelectedIndex","getSelectedValue","getAuxiliaryCell","onSelect","table","td","clickButton","updateButtons","setSelectedIndex","setSelectedValue","TabBar","unionHeight","panelDiv","getPanelDOM","idxOrName","grid","columns","underline","panel","rotateSelected","ExtraFieldsWidget","fields","divFields","fillTable","divButtons","getExtraFields","field","getTransientFields","strType","strValue","tdType","tdValue","tdButton","GeomWidget","linkA","linkB","torsA","torsB","hovered","atomSubset","Position","Link","divDiagram","selectionAtoms","Torsion","ANG_RAD","loX","posRad","gfx","outerSel","innerSel","showsel","pf","ox1","oy1","ox2","oy2","thetaM","oxM","oyM","ax3","ay3","ax4","ay4","which","whichSelection","sameSelection","maxRad","closeSel","closeDelta","midtheta","POSITION_TABLE_Y","POSITION_TABLE_X","PeriodicTableWidget","divList","selectedAtno","changeElement","callbackDoubleClick","onDoubleClick","updateSelected","setSelectedElements","elementList","QueryFieldsWidget","makeInput","makeToggleInput","chk","inputCharges","optAromatic","optUnsaturated","chkNotElements","inputElements","chkNotRingSizes","inputRingSizes","optRingBlock","inputNumRings","inputRingBonds","inputAdjacency","inputBondSums","inputValences","inputHydrogens","inputIsotopes","setupAtom","inputOrders","setupBond","updateAtom","splitNumbers","unsat","elem","splitStrings","checked","ringblk","updateBond","elemNot","ringszNot","EditAtom","callbackApply","newX","newY","tabs","abbrevList","svgAbbrev","abbrevIndices","currentAbbrev","initMol","btnApply","applyChanges","selectedTab","populateAtom","populateAbbreviation","populateGeometry","populateQuery","populateExtra","focusable","updateMolecule","selTab","updateAbbrev","updateGeometry","updateQuery","updateExtra","inputSymbol","periodicWidget","inputCharge","inputUnpaired","optionHydrogen","inputHydrogen","disabled","optionIsotope","inputIsotope","inputMapping","inputIndex","divPeriodic","spanSearch","spanList","inputAbbrevSearch","lastSearch","cycleAbbreviation","fillAbbreviations","selectAbbreviation","tableAbbrev","divContainer1","divContainer2","geomWidget","label1","inputGeom1","label2","inputGeom2","refGeom1","refGeom2","queryWidget","fieldsWidget","sym","hcidx","strval1","strval2","instate","mf","abbrevEntries","bgcol","tdLabel","tdStruct","scrollIntoView","EditBond","populateBond","ordersHTML","optionOrder","optionStereo","inputFrom","readOnly","inputTo","CHAR_LOW_A","CHAR_UP_A","indexToAtomLabel","indexToBondLabel","EditPolymer","optionConnect","optionBondConn","currentID","borderAtoms","outBonds","umap","btnRemove","applyRemove","inputNAtoms","inputNBond","populate2x2Conn","getList","domLabel","nvals","inputIncl","inputExcl","ivals","evals","populateUncap","divPreview","renderUnit","keyCode","bondConnOptions","optionList","uncapAtoms","btnUncap","LINES","circle","TemplateBank","group","subgroups","templates","resourceData","loadResourceData","prepareSubGroups","prepareTemplates","populateGroups","populateTemplates","titles","preview","molecules","resourceList","msz","colMnemonic","FusionBank","templateAccept","templateRotate","clearPermutations","ToolBankItem","TOOLS_MAIN","Arrow","Pan","Drag","BondOrder0","BondOrder1","BondOrder2","BondOrder3","BondUnknown","BondInclined","BondDeclined","RingAliph","RingArom","AtomPlus","AtomMinus","ElementPfx","ToolBank","Sketcher","plugins","inDialog","initialFocus","useToolBank","lowerToolBank","useCommandBank","lowerCommandBank","useTemplateBank","lowerTemplateBank","debugOutput","beenSetup","undoStack","redoStack","fadeWatermark","toolView","commandView","templateView","proxyMenu","defineMolecule","withAutoScale","withStashUndo","keepSelect","stashUndo","stopTemplateFusion","callbackChangeMolecule","renderMolecule","defineClipboard","defineContext","defineMoleculeString","molsk","defineRenderPolicy","defineBackground","borderRad","bgCol","clearMolecule","centreAndShrink","setupAsync","reserveHeight","keyPressed","keyDown","keyUp","touchStart","touchMove","touchCancel","touchEnd","contextMenu","dataTransfer","dropEffect","dropInto","changeSize","btnv","msg","isError","szLeft","szRight","szBottom","clearMessage","layoutTemplatePerm","anySelected","setSelected","changeCurrentAtom","changeCurrentBond","clearSubject","UNDO_SIZE","pickTemplatePermutation","performCopySelection","pasteText","performActivity","newScale","editBond","editAtom","pasteLocal","pasteMolecule","callbackSpecialPaste","dlg","limW","limH","natW","natH","down","tpolicy","updateHoverCursor","tool","toolApplies","mouseObj","mouseAtom","mouseBond","abbrevThen","abbrevNow","determineDragGuide","single","determineMoveGuide","guides","hitArrowKey","cursorJumpDirection","jumpFromCurrentAtom","jumpFromCurrentBond","jumpFromNowhere","closestDelta","adjTheta","cosdelta","bondTheta","atheta","ctrlArrowKey","sproutDirection","launchComposeFragment","callbackComposeFragment","clickObj","interactStart","interactEnd","interactDrag","view","nomod","touches","mouseWheel","openContextMenu","Press","Zoom","BondPfx","inPoly","newOX","newOY","interactEndDrag","interactEndClick","clickAtom","clickBond","autoscale","degrees","prompt","toObj","connectPolymerBlock","transfer","items","files","SUFFIXES","MIMES","getAsString","sfx","reader","FileReader","onload","readAsText","atomIn1","atomOut1","atomIn2","atomOut2","highName","ina","inb","nameList","name1","name2","EditCompound","callbackSave","onSave","getSketcher","btnClear","btnCopy","actionCopy","btnSave","skdiv","actionCut","actionPaste","actionUndo","actionRedo","popupBackground","obscureOpacity","callbackPopulate","positionAndShow","client","scrollSize","inner","empiricalScrollerSize","KeyValueWidget","callbackChange","divGrid","rebuildGrid","divKey","divValue","divButton","inputKey","scrapeData","inputValue","btnDelete","divAdd","btnAdd","dval","MetadataWidget","renderTerm","divContent","btnBack","triggerModified","btnAssert","pickExtraTerm","btnProp","pickNewTerm","divParent","branchList","ROOTS","rootURI","popup","populateBranch","isProperty","ROOTS_ASSERT","ROOTS_PROP","callbackClicked","span","QuantityType","RELATION_VALUES","RELATION_LABELS","EditComponent","component","parentSize","areaDescr","areaSyn","callbackSketch","onSketch","btnSketch","invokeSketcher","saveAndClose","vertical","grid1","fieldGrid","createFieldName","lineName","createValueLine","divQuant","createQuantity","createValueMultiline","synonyms","grid2","divFormula","createDiv","lineFormula","placeholder","calculateFormula","calculateWeight","divWeight","lineInChI","calculateInChI","lineSMILES","smiles","links","trapEscape","spellcheck","nullifyBlank","qtype","optQuantType","strQuant1","lineQuantVal1","strQuant2","lineQuantVal2","Value","lineQuantUnits","Range","Ratio","splitLines","topAlign","andEnter","interpretQuantString","flex","dropQuantRel","makeDropdownGroup","spanGap","qubox","btnQuantUnits","selectDropUnits","changeToValue","changeToRange","changeToRatio","low","changeFunc","drop","qstr","regname","isNum","test","qnum1","qnum2","BASE_COMPOUND","PubChemSearch","searchText","results","err","callbackResult","callbackFinished","stopped","cidList","url","encodeURIComponent","resp","receivedList","IdentifierList","CID","fetchNext","cid","receivedCompound","unpackCompound","NAMECOLS","LookupCompoundDialog","pubchem","resultList","nameSelected","nameDOM","molSelected","molList","molDOM","spanStatus","btnSearch","runSearch","applyResult","populateSearchEntry","resultArea","getName","divInput","searchInput","trapKeys","gotResult","finishedSearch","divMol","selectMolecule","divName","selectName","ExtractCTABComponent","extract","ctab","seed","attachAny","stereoRacemic","stereoRelative","linkNodes","prototypes","enumerateAttachAny","enumerateStereoRacemic","enumerateStereoRelative","enumerateLinkNodes","enumerateMixtures","atomKeep","atomChop","removeAtom","connAtom","cmol","protoClone","affected","nperm","rmol","bitand","molinv","addedAtoms","rproto","leafmask","mapTree","nonemask","atommask","DragReason","EditMixture","callbackUpdateTitle","callbackInteraction","monochrome","dirty","delayedSelect","dragReason","dragIndex","dragX","dragY","isEditing","dlgCompound","structureIntegrity","canvasMixture","refocus","isReceivingCommands","setEditing","compoundEditor","addStructureIntegrityKey","getMixture","setMixture","getCollapsedBranches","clearHistory","isDirty","setDirty","zoomFull","zoomNormal","selectComponent","selectOrigin","complist","editStructure","checkStructureIntegrity","editDetails","lookupCurrent","curX","curY","deleteCurrent","appendToCurrent","prependBeforeCurrent","insertBeforeCurrent","insertAfterCurrent","reorderCurrent","clipboardCopy","clipboardPaste","getComponentPosition","rescale","scaleToFit","ensureComponentVisible","mustFit","pickComponent","pickComponentSection","navigateDirection","newIndex","toggleCollapsed","picked","Any","newMol","integKeys","oldMol","confirm","EditMixtureDesktop","BANNER","EditDetails","EditStructure","Lookup","ExportSVG","Append","Prepend","InsertBefore","InsertAfter","MoveUp","MoveDown","Undo","Redo","Paste","ZoomFull","ZoomIn","ZoomOut","MixturePanel","banner","editor","updateTitle","divBanner","divEditor","saveFile","ExportSDF","actionExportSDF","actionFileExportSVG","CreateMInChI","actionFileCreateMInChI","CopyBranch","ZoomNormal","params","properties","defaultPath","filters","extensions","showOpenDialog","canceled","inPlace","filePaths","showSaveDialog","filePath","exportSDF","sdfile","defPath","lastDot","maker","self","renderResult","yieldDOM","slash","MenuProxy","hasContextMenu","menuItems","MixtureCollection","getMixtureDirect","setMixtureDirect","deleteMixture","appendMixture","appendMixtureDirect","appendCollection","collection","insertMixture","swapMixtures","m1","m2","ViewDetail","ViewCard","CollectionPanelView","BG_NORMAL","CollectionPanel","curPage","pageBlock","viewType","Detail","mapMixDiv","divMain","divFooter","dividePages","renderMain","updateBanner","setCollection","editMixture","prependMixture","zoomScale","changeView","Card","createMixture","changeSelection","npage","ahref","showPages","page","divInner","wrapSVG","displayFields","stopEdit","scrollToIndex","scrollTop","localeCompare","divTitle","divLabel","ON_DESKTOP","setOnDesktop","onDesktop","runMixfileEditor","resURL","rootID","resourcePath","composeMainCSS","initWebMolKit","metacategory","request","XMLHttpRequest","responseType","response","onerror","readTextURL","href","panelClass","decodeURIComponent","readText","writeText","writeHTML","emenu","itemList","submenu"],"sourceRoot":""}